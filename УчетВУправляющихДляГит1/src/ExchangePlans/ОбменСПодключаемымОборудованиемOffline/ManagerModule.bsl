#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПланОбменаИспользуетсяВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Функция должна возвращать:
// Истина, в том случае, если корреспондент поддерживает сценарий обмена, 
// в котором текущая ИБ работает в локальном режиме, 
// а корреспондент в модели сервиса. 
// 
// Ложь – если такой сценарий обмена не поддерживается.
//
Функция КорреспондентВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции // КорреспондентВМоделиСервиса()

Процедура ОбновитьРегистрКодовНоменклатуры(СтруктураПараметров, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	УзелОбмена 	= СтруктураПараметров.УзелОбмена;
	Склад 		= СтруктураПараметров.Склад;
	ТипЦен 		= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ТипЦенРозничнойТорговли");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура
	|ПОМЕСТИТЬ ТоварыПоТипуЦен
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыСрезПоследних.Цена <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоТипуЦен.Номенклатура,
	|	ЕСТЬNULL(КодыТоваровПодключаемогоОборудованияOffline.Код, 0) КАК Код
	|ИЗ
	|	ТоварыПоТипуЦен КАК ТоварыПоТипуЦен
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыТоваровПодключаемогоОборудованияOffline
	|		ПО ТоварыПоТипуЦен.Номенклатура.Ссылка = КодыТоваровПодключаемогоОборудованияOffline.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КодыТоваровПодключаемогоОборудованияOffline.Код) КАК ПоследнийКод
	|ИЗ
	|	РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыТоваровПодключаемогоОборудованияOffline";
	
	Результат = Запрос.ВыполнитьПакет();
	
	//Последний код
	ПоследнийКод = 0;
	ВыборкаПоследнийКод = Результат[2].Выбрать();
	Если ВыборкаПоследнийКод.Следующий() И ЗначениеЗаполнено(ВыборкаПоследнийКод.ПоследнийКод) Тогда
		ПоследнийКод = ВыборкаПоследнийКод.ПоследнийКод;
	КонецЕсли;
	
	Набор = РегистрыСведений.КодыТоваровПодключаемогоОборудованияOffline.СоздатьНаборЗаписей();
	
	//Регистрация записей
	ВыборкаТоваров = Результат[1].Выбрать();
	Пока ВыборкаТоваров.Следующий() Цикл
		
		//Создаем запись в регистре
		Если ВыборкаТоваров.Код = 0 Тогда
			МенеджерЗаписи = РегистрыСведений.КодыТоваровПодключаемогоОборудованияOffline.СоздатьМенеджерЗаписи();
			ПоследнийКод = ПоследнийКод + 1;
			МенеджерЗаписи.Код             = ПоследнийКод;
			МенеджерЗаписи.Номенклатура    = ВыборкаТоваров.Номенклатура;
			МенеджерЗаписи.Используется    = Истина;
			МенеджерЗаписи.Записать();
			
			//Регистрируем к обмену
			Набор.Отбор.Код.Значение = ПоследнийКод;
			Набор.Отбор.Код.Использование = Истина;
		Иначе
			//Регистрируем к обмену
			Набор.Отбор.Код.Значение = ВыборкаТоваров.Код;
			Набор.Отбор.Код.Использование = Истина;
		КонецЕсли;
			
		ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена, Набор);
			
	КонецЦикла;
	
КонецПроцедуры
	
#КонецЕсли