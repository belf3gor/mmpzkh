#Область СлужебныеПроцедурыИФункции

// Обработчик события ОбработкаПолученияДанныхВыбора перечисления ВидыОперацийПоЗарплате.
// Поддерживается параметр отбора ГруппаОпераций, в качестве значения которого может быть указана 
// группа видов операций по зарплате в виде строки, например, "Начисления" или "Удержания".
// Полный список поддерживаемых групп операций см. в функции ВидыОперацийПоГруппам модуля менеджера перечисления ВидыОперацийПоЗарплате.
// В качестве значения может быть указано несколько групп операций в виде фиксированного массива.
// Обрабатывается также строка поиска.
//
Процедура ВидыОперацийПоЗарплатеОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаОпераций.Ссылка,
		|	ТаблицаОпераций.Синоним,
		|	ТаблицаОпераций.Порядок
		|ПОМЕСТИТЬ ВТТаблицаОпераций
		|ИЗ
		|	&ТаблицаОпераций КАК ТаблицаОпераций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОпераций.Ссылка,
		|	ТаблицаОпераций.Порядок КАК Порядок
		|ИЗ
		|	ВТТаблицаОпераций КАК ТаблицаОпераций
		|ГДЕ
		|	(ТаблицаОпераций.Ссылка В (&ВидыОпераций)
		|			ИЛИ &ПоВсемВидамОпераций)
		|	И ТаблицаОпераций.Синоним ПОДОБНО &СтрокаПоиска
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";
		
		Если Параметры.СтрокаПоиска = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ТаблицаОпераций.Синоним ПОДОБНО &СтрокаПоиска", "");
		КонецЕсли;
		
		// Составляем таблицу операций.
		ТаблицаОпераций = Новый ТаблицаЗначений;
		ТаблицаОпераций.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
		ТаблицаОпераций.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(256)));
		ТаблицаОпераций.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
		
		ВидыОпераций = Неопределено;
		Если Параметры.Отбор.Свойство("ГруппаОпераций") Тогда
			ВидыОпераций = Перечисления.ВидыОперацийПоЗарплате.ВидыОперацийПоГруппам(Параметры.Отбор.ГруппаОпераций);
		КонецЕсли;
		
		Для Каждого ЗначениеПеречисления Из Метаданные.Перечисления.ВидыОперацийПоЗарплате.ЗначенияПеречисления Цикл
			НоваяСтрока = ТаблицаОпераций.Добавить();
			НоваяСтрока.Ссылка = Перечисления.ВидыОперацийПоЗарплате[ЗначениеПеречисления.Имя];
			НоваяСтрока.Синоним = ЗначениеПеречисления.Синоним;
			// Расставляем заданный порядок.
			Если ВидыОпераций <> Неопределено Тогда
				НоваяСтрока.Порядок = ВидыОпераций.Найти(НоваяСтрока.Ссылка);
			КонецЕсли;
		КонецЦикла;
		
		// Отбор только по действующим категориям с учетом введенной строки.
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
		Запрос.УстановитьПараметр("ПоВсемВидамОпераций", ВидыОпераций = Неопределено);
		
		Запрос.УстановитьПараметр("ТаблицаОпераций", ТаблицаОпераций);
		Запрос.УстановитьПараметр("СтрокаПоиска", Строка(Параметры.СтрокаПоиска) + "%");
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеВыбора.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти