
#Область ПрограммныйИнтерфейс

// Возвращает подпись пользователя, используемую для отправки почтовых сообщений.
//
// Возвращаемое значение:
//  Строка - подпись в формате HTML.
//
Функция ПодписьПисьма() Экспорт
	
	Возврат БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("Подпись");
	
КонецФункции

// Возвращает адреса электронной почты из контактной информации одного или нскольких контрагентов и контактных лиц.
// См. также ОтправкаПочтовыхСообщений.АдресаЭлектроннойПочты()
//
Функция АдресаЭлектроннойПочты(Контрагент) Экспорт
	
	Получатели = Новый Массив;
	
	Запрос = Новый Запрос;
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос.УстановитьПараметр("Контрагенты", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Контрагент));
	Иначе
		Запрос.УстановитьПараметр("Контрагенты", Контрагент);
	КонецЕсли;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.НаименованиеПолное КАК Представление
	|ПОМЕСТИТЬ Контрагенты
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка В (&Контрагенты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(КонтактныеЛица.ОбъектВладелец.Ссылка КАК Справочник.Контрагенты) КАК Контрагент,
	|	КонтактныеЛица.Фамилия + "" "" + КонтактныеЛица.Имя + "" "" + КонтактныеЛица.Отчество КАК Представление,
	|	КонтактныеЛица.Ссылка КАК КонтактноеЛицо
	|ПОМЕСТИТЬ КонтактныеЛица
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	КонтактныеЛица.ОбъектВладелец В (&Контрагенты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КонтактноеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛОЖЬ КАК Выбран,
	|	КонтрагентыКонтактнаяИнформация.Представление КАК Адрес,
	|	Контрагенты.Контрагент КАК ИсточникКонтактнойИнформации,
	|	Контрагенты.Представление КАК Представление,
	|	Контрагенты.Контрагент КАК КонтактноеЛицо
	|ИЗ
	|	Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|		ПО Контрагенты.Контрагент = КонтрагентыКонтактнаяИнформация.Ссылка
	|			И (КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailКонтрагенты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	КонтактныеЛицаКонтактнаяИнформация.Представление,
	|	КонтактныеЛица.Контрагент,
	|	КонтактныеЛица.Представление,
	|	КонтактныеЛица.КонтактноеЛицо
	|ИЗ
	|	КонтактныеЛица КАК КонтактныеЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛица.КонтактнаяИнформация КАК КонтактныеЛицаКонтактнаяИнформация
	|		ПО КонтактныеЛица.КонтактноеЛицо = КонтактныеЛицаКонтактнаяИнформация.Ссылка
	|			И (КонтактныеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailКонтактныеЛица))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсточникКонтактнойИнформации";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыПолучателя = ОтправкаПочтовыхСообщений.НовыеПараметрыПолучателя();
		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			ПараметрыПолучателя.ИсточникКонтактнойИнформации = Контрагент;
		КонецЕсли;
		Получатели.Добавить(ПараметрыПолучателя);
		Возврат Получатели;
	КонецЕсли;
	
	Контакты = РезультатЗапроса.Выгрузить();
	ОтправкаПочтовыхСообщений.УстановитьПолучателяПоУмолчанию(Контакты);
	Контакты.Колонки.Удалить("КонтактноеЛицо");
	
	Для Каждого Контакт Из Контакты Цикл
		ПараметрыПолучателя = ОтправкаПочтовыхСообщений.НовыеПараметрыПолучателя();
		ЗаполнитьЗначенияСвойств(ПараметрыПолучателя, Контакт);
		// Уберем из представления символы которые не пройдут проверку ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки().
		ПараметрыПолучателя.Представление = СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими(
			"№", ПараметрыПолучателя.Представление, " ");
		Получатели.Добавить(ПараметрыПолучателя);
	КонецЦикла;
	
	Возврат Получатели;
	
КонецФункции

// Дополняет структуру параметров электронного письма для отправки документа.
//
// Параметры:
//  ПараметрыПисьма - Структура параметров для передачи в функцию РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо.
//  НаборПечатныхФорм - Массив - содержит структуры с табличными документами и объектами печати.
//   см.ДополнительныеОтчетыИОбработки.ПечатьПоВнешнемуИсточнику и УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечати.
//  МенеджерПечати - Строка - имя менеджера печати.
//  ДополнительныеПараметры - Структура - дополнительные параметры для сохранения печатных форм:
//   * УпаковатьВАрхив - Булево - упаковать печатные формы в архив.
//   * ФорматыСохранения - Массив - содержит формат сохранения файлов см. ТипФайлаТабличногоДокумента.
//
Процедура ПараметрыЭлектронногоПисьма(ПараметрыПисьма, НаборПечатныхФорм, МенеджерПечати, ДополнительныеПараметры = Неопределено) Экспорт
	
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	ИсходныеДанные.Вставить("МенеджерПечати",          МенеджерПечати);
	ИсходныеДанные.Вставить("НаборПечатныхФорм",       НаборПечатныхФорм);
	АдресИсходногоВложения = ПоместитьВоВременноеХранилище(ИсходныеДанные, Новый УникальныйИдентификатор);
	
	ПараметрыПисьма.Вставить("АдресИсходногоВложения", АдресИсходногоВложения);
	
КонецПроцедуры

// Дополняет структуру параметров команд формирования печатных форм для отправки электронного документа.
//
// Параметры:
//  КомандыОтправки - ТаблицаЗначений, содержащая подготовленные команды формирования форм для отправки
//   см.ОтправкаПочтовыхСообщений.КомандыОтправки.
//
Процедура ДобавитьКомандыОтправки(КомандыОтправки) Экспорт
	
	АдресВременногоХранилищаФаксимиле = ПоместитьВоВременноеХранилище("", Новый УникальныйИдентификатор);
	
	Для Каждого КомандаОтправки Из КомандыОтправки Цикл
		КомандаОтправки.ДополнительныеПараметры.Вставить("АдресВременногоХранилищаФаксимиле", АдресВременногоХранилищаФаксимиле);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
