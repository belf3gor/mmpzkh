
////////////////////////////////////////////////////////////////////////////////
// ВАЖНО!
//
// В данном модуле находятся процедуры и функции, отличающиеся содержанием
// для каждого конкретного типового решения, в котором используется модуль СМС.
//
// Поэтому структуру текущего модуля необходимо адаптировать под конкретное
// типовое решение.
//
// Адаптация производится путём помещения процедур и функций данного модуля
// в защищенные обработки.
//

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет автоматическую рассылку СМС-сообщений.
//
Процедура АвтоматическаяРассылкаСообщений() Экспорт
	
	СЗК_МодульЗащитыПовторноеИспользование.ПолучитьЗащищеннуюОбработку().смсАвтоматическаяРассылкаСообщений();
	
КонецПроцедуры

// Инициализирует компоновщик настроек компоновки данных.
//
// Параметры:
//  Шаблон - СправочникСсылка.смсШаблоны - шаблон, из которого берется компановщик настроек.
//
// Возвращаемое значение:
//   КомпоновщикНастроекКомпоновкиДанных - связь настроек компоновки данных и схемы компоновки.
//
Функция ИнициализироватьКомпоновщик(Шаблон) Экспорт
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
	СхемаКомпоновки = Справочники.смсПравилаОтбораПолучателей.ПолучитьМакет("СхемаПравилОтбораПереопределяемый");
	
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, Новый УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	НастройкаКомпоновки =Шаблон.ПравилоОтбораПолучателей.КомпоновщикНастроек.Получить();
	
	Если НастройкаКомпоновки = Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкаКомпоновки);
		КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	КонецЕсли;
	
	Возврат КомпоновщикНастроек;
	
КонецФункции

// Делает запись в журнале регистрации об возникшей ошибке.
//
// Параметры:
//  ОписаниеОшибки - Строка - Текст ошибки, указываемый при записи в журнал.
//
Процедура ЗаписатьВЖурналРегистрации(ОписаниеОшибки) Экспорт
	
	ЗаписьЖурналаРегистрации("Ошибка выполнения регламентного задания!", УровеньЖурналаРегистрации.Ошибка,
		Метаданные.РегламентныеЗадания.смсАвторассылкаСообщений, ,ОписаниеОшибки);
	
КонецПроцедуры

#КонецОбласти