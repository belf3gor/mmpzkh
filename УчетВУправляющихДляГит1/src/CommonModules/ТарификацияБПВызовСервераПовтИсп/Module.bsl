#Область ПрограммныйИнтерфейс

// Возвращает Истина, если в режиме сервиса разрешена регулярная деятельность.
//
Функция РазрешенУчетРегулярнойДеятельности() Экспорт
	
	Если Не Константы.УчетРегулярнойДеятельностиОпределяетсяТарифом.Получить() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		
		Если ОбщегоНазначенияКлиентСервер.РежимОтладки() Тогда
			Возврат Ложь; // Позволяет вести отладку вне режима сервиса
		Иначе
			Возврат Истина; // Использование локальной версии предполагает учет регулярной деятельности
		КонецЕсли;
		
	Иначе
		
		Возврат ТарификацияБП.ЗарегистрированаЛицензияБезлимитнойУслуги(
			ТарификацияБП.ИдентификаторУслугиРегулярнаяДеятельность());
		
	КонецЕсли;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает работу с 1С-Отчетностью.
//
Функция РазрешенЭлектронныйДокументообротСКонтролирующимиОрганами() Экспорт
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		
		Возврат ИнтернетПоддержкаПользователей.УслугаПодключена(
			ТарификацияБП.ИдентификаторУслуги1СОтчетность());
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает работу только в интерфейсе интеграции с банком.
//
Функция РазрешенТолькоИнтерфейсИнтеграцииСБанком() Экспорт
	
	Если Не ОбщегоНазначенияБП.ИнтеграцияСБанкомДоступна() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ТарификацияБП.ЗарегистрированаЛицензияБезлимитнойНегативнойУслуги(
		ТарификацияБП.ИдентификаторУслугиТолькоИнтерфейсИнтеграцииСБанком());
	
КонецФункции

// Возвращает Истина, если тариф предусматривает ведение учета по обособленным подразделениям.
//
Функция РазрешенУчетОбособленныхПодразделений() Экспорт
	
	Если Не ВариантыПриложений.ЭтоВерсияКОРП() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ТарификацияБП.ФункциональностьОграничиваетсяТарифом() Тогда
		
		Возврат ТарификацияБП.ЗарегистрированаЛицензияУслугиФункциональности(
			ТарификацияБП.ИдентификаторУслугиОбособленныеПодразделения());
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает возможность обратного начисления НДС (начисления НДС покупателем).
//
Функция РазрешеноОбратноеНачислениеНДС() Экспорт
	
	Если Не ВариантыПриложений.ЭтоВерсияКОРП() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ТарификацияБП.ФункциональностьОграничиваетсяТарифом() Тогда
		
		Возврат ТарификацияБП.ЗарегистрированаЛицензияУслугиФункциональности(
			ТарификацияБП.ИдентификаторУслугиОбратноеНачислениеНДС());
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает возможность использования расширенного функционала.
//
Функция РазрешеноИспользованиеРасширенногоФункционала() Экспорт
	
	Если Не ВариантыПриложений.ЭтоВерсияКОРП() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ТарификацияБП.ФункциональностьОграничиваетсяТарифом() Тогда
		
		Возврат ТарификацияБП.ЗарегистрированаЛицензияУслугиФункциональности(
			ТарификацияБП.ИдентификаторУслугиРасширенныйФункционал());
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает возможность ведения учета по нескольким организациям
//
Функция РазрешеноВестиУчетПоОрганизациям() Экспорт
	
	Если ВариантыПриложений.ЭтоБазоваяВерсия() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ТарификацияБП.ФункциональностьОграничиваетсяТарифом() Тогда
		
		Возврат ТарификацияБП.ЗарегистрированаЛицензияУслугиФункциональности(
			ТарификацияБП.ИдентификаторУслугиВестиУчетПоОрганизациям());
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает возможность использования контрактов государственного заказа.
//
Функция РазрешенГособоронзаказ() Экспорт
	
	Если Не ВариантыПриложений.ЭтоВерсияКОРП() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ТарификацияБП.ФункциональностьОграничиваетсяТарифом() Тогда
		
		Возврат ТарификацияБП.ЗарегистрированаЛицензияУслугиФункциональности(
			ТарификацияБП.ИдентификаторУслугиГособоронзаказ());
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает возможность использования уведомлений о контролируемых сделках.
//
Функция РазрешеноИспользованиеУведомленийОКонтролируемыхСделках() Экспорт
	
	Если Не ВариантыПриложений.ЭтоВерсияКОРП() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ТарификацияБП.ФункциональностьОграничиваетсяТарифом() Тогда
		
		Возврат ТарификацияБП.ЗарегистрированаЛицензияУслугиФункциональности(
			ТарификацияБП.ИдентификаторУслугиУведомленияОКонтролируемыхСделках());
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает Истина, если в информационной базе включена функциональность,
// которая не доступна по тарифу.
Функция ИспользуетсяНедоступнаяФункциональность() Экспорт
	
	Если Не ТарификацияБП.ФункциональностьОграничиваетсяТарифом() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользуетсяНедоступнаяФункциональность =
		Обработки.ФункциональностьПрограммы.ЕстьИспользуемаяФункциональностьБезТарифа();
		
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ИспользуетсяНедоступнаяФункциональность;
	
КонецФункции

// Возвращает Истина, если тариф предусматривает возможность использования внешней программы учета зарплаты и кадров.
//
Функция РазрешеноИспользованиеВнешнейПрограммыУчетаЗарплаты() Экспорт
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		
		Возврат РазрешенУчетРегулярнойДеятельности()
			И НЕ ОбщегоНазначенияБП.ЭтоВитринаБизнесСтарта();
			
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
