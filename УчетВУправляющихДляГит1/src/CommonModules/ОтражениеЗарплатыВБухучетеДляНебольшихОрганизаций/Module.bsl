
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ОтражениеЗарплатыВБухучете", "ПериодРегистрации", "БухгалтерскийУчетЗарплаты", "Организация");
	
КонецПроцедуры

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ОтражениеЗарплатыВБухучете);
	
КонецПроцедуры

Процедура ПриЗаписиКонстантыИспользоватьНачислениеЗарплаты(Объект) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	Если Константы.ДанныеДляБухучетПоставляютсяВнешнейПрограммой.Получить() = Объект.Значение Тогда
		Константы.ДанныеДляБухучетПоставляютсяВнешнейПрограммой.Установить(Не Объект.Значение);
	КонецЕсли;

КонецПроцедуры

Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.9.6";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеДляНебольшихОрганизаций.УстановитьЗначениеДанныеДляБухучетПоставляютсяВнешнейПрограммой";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.9.6";
	Обработчик.НачальноеЗаполнение = Истина;
	Обработчик.Процедура = "ЗарплатаКадры.СтатьиРасходовЗарплатаНачальноеЗаполнениеПоСпособамРасчетов";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("0a2a867f-0d6c-4fd3-8cb8-ea9fa4c0ee69");
	Обработчик.Комментарий = НСтр("ru = 'Начальное заполнение справочника Статьи расходов.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.9.7";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.ЗаполнитьСтатьюРасходовВДокументеОтражениеЗарплатыВБухучете";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("5ebfc016-52c3-4a57-8659-6ab38f58333c");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение статьи расходов в документе ""Отражение зарплаты в бухучете.""'");

КонецПроцедуры

#Область ОбработчикиОбновленияИнформационнойБазы

Функция ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленнаяЗарплатаИВзносы.Ссылка
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.ОтражениеЗарплатыВБухучете.НачисленнаяЗарплатаИВзносы КАК НачисленнаяЗарплатаИВзносы
	|ГДЕ
	|	НачисленнаяЗарплатаИВзносы.ВидОперации В(&ВидыОпераций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленнаяЗарплатаИВзносы.Ссылка,
	|	НачисленнаяЗарплатаИВзносы.ФизическоеЛицо,
	|	НачисленнаяЗарплатаИВзносы.Подразделение,
	|	НачисленнаяЗарплатаИВзносы.ВидОперации,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленнаяЗарплатаИВзносы.ОблагаетсяЕНВД,
	|	НачисленнаяЗарплатаИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленнаяЗарплатаИВзносы.ПериодПринятияРасходов,
	|	НачисленнаяЗарплатаИВзносы.Сумма,
	|	НачисленнаяЗарплатаИВзносы.ПФРСтраховая,
	|	НачисленнаяЗарплатаИВзносы.ПФРНакопительная,
	|	НачисленнаяЗарплатаИВзносы.ФСС,
	|	НачисленнаяЗарплатаИВзносы.ФФОМС,
	|	НачисленнаяЗарплатаИВзносы.ТФОМС,
	|	НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуЛетчикам,
	|	НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуШахтерам,
	|	НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	НачисленнаяЗарплатаИВзносы.ФССНесчастныеСлучаи,
	|	НачисленнаяЗарплатаИВзносы.ПФРПоСуммарномуТарифу
	|ПОМЕСТИТЬ ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете
	|ИЗ
	|	Документ.ОтражениеЗарплатыВБухучете.НачисленнаяЗарплатаИВзносы КАК НачисленнаяЗарплатаИВзносы
	|ГДЕ
	|	НачисленнаяЗарплатаИВзносы.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТДокументыКОбработке.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДокументыКОбработке";
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура УстановитьЗначениеДанныеДляБухучетПоставляютсяВнешнейПрограммой(ПараметрыОбновления = Неопределено) Экспорт
	
	Если Константы.ДанныеДляБухучетПоставляютсяВнешнейПрограммой.Получить() = Константы.ИспользоватьНачислениеЗарплаты.Получить() Тогда
		Константы.ДанныеДляБухучетПоставляютсяВнешнейПрограммой.Установить(Не Константы.ИспользоватьНачислениеЗарплаты.Получить());
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
