
#Область СлужебныеПроцедурыИФункции

// Процедура предназначена для заполнения общих реквизитов документов,
// вызывается в обработчиках событий "ПриОткрытии" в модулях форм всех документов.
//
// Параметры:
//  ДокументОбъект                 - объект редактируемого документа.
//  ТекПользователь                - ссылка на справочник, определяет текущего пользователя.
//  ВалютаРегламентированногоУчета - валюта регламентированного учета.
//  ТипОперации                    - необязаетельный, строка вида операции ("Покупка" или "Продажа"),
//                                   если не передан, то реквизиты, зависящие от вида операции, не заполняются.
//  ПараметрОбъектКопирования      - указывает что документ создан копированием.
//  ПараметрОснование              - ссылка на документ основание.
Процедура ЗаполнитьШапкуДокумента(ДокументОбъект, ТекПользователь, ВалютаРегламентированногоУчета = Неопределено, 
					ТипОперации = "",ПараметрОбъектКопирования = неопределено, ПараметрОснование = неопределено) Экспорт

	Перем ТипЦен;

	МетаданныеДокумента = ДокументОбъект.Ссылка.Метаданные();

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ОтражатьВБухгалтерскомУчете", МетаданныеДокумента) Тогда
		
		Если ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			ДокументОбъект.ОтражатьВБухгалтерскомУчете =ПараметрОбъектКопирования.ОтражатьВБухгалтерскомУчете;
		Иначе
			// По умолчанию все документы требуют отражения в бухгалтерском учете
			ДокументОбъект.ОтражатьВБухгалтерскомУчете = Истина
		КонецЕсли;;

	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) 
	  И (НЕ ЗначениеЗаполнено(ДокументОбъект.Организация)) Тогда
		ДокументОбъект.Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("СтруктурнаяЕдиница", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.СтруктурнаяЕдиница) 
	   И УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) Тогда
		ДокументОбъект.СтруктурнаяЕдиница = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("Ответственный", МетаданныеДокумента) Тогда
		ДокументОбъект.Ответственный = ТекПользователь;
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ВидОперации", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ВидОперации)) Тогда
		ДокументОбъект.ВидОперации = Перечисления[ДокументОбъект.ВидОперации.Метаданные().Имя][0];
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("Склад", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.Склад)) Тогда
		ДокументОбъект.Склад = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.СкладОрдер) Тогда
		ДокументОбъект.СкладОрдер = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("СтавкаНДС", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.СтавкаНДС)) Тогда
		ДокументОбъект.СтавкаНДС = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеОсновнойСтавкиНДСПоУмолчанию(ДокументОбъект.Дата)
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("БанковскийСчет", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.БанковскийСчет) Тогда
		ДокументОбъект.БанковскийСчет = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
		Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента) Тогда
			ДокументОбъект.ВалютаДокумента = ДокументОбъект.Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств;
		КонецЕсли;
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("СчетОрганизации", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.СчетОрганизации) Тогда
		ДокументОбъект.СчетОрганизации = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
		ДокументОбъект.ВалютаДокумента = ДокументОбъект.Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств;
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента)
	   И ЗначениеЗаполнено(ДокументОбъект.Организация)
	   И УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ПодразделениеОрганизации", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ПодразделениеОрганизации)) Тогда
	   
	   Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("Склад", МетаданныеДокумента)
			И ЗначениеЗаполнено(ДокументОбъект.Склад) 
			И ДокументОбъект.Склад.Метаданные().Реквизиты.Найти("ПодразделениеОрганизации") <> Неопределено Тогда
			ПодразделениеОрганизации = ДокументОбъект.Склад.ПодразделениеОрганизации;
		ИначеЕсли УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента)
			И ЗначениеЗаполнено(ДокументОбъект.СкладОрдер)
			И ДокументОбъект.СкладОрдер.Метаданные().Реквизиты.Найти("ПодразделениеОрганизации") <> Неопределено Тогда
			ПодразделениеОрганизации = ДокументОбъект.СкладОрдер.ПодразделениеОрганизации;
		ИначеЕсли УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("СчетОрганизации", МетаданныеДокумента)
			И ЗначениеЗаполнено(ДокументОбъект.СчетОрганизации)
			И ДокументОбъект.СчетОрганизации.Метаданные().Реквизиты.Найти("ПодразделениеОрганизации") <> Неопределено Тогда
			ПодразделениеОрганизации = ДокументОбъект.СчетОрганизации.ПодразделениеОрганизации;
		Иначе
			ПодразделениеОрганизации = 
				УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодразделениеОрганизации) 
		   И ПодразделениеОрганизации.Владелец = ДокументОбъект.Организация Тогда
			ДокументОбъект.ПодразделениеОрганизации = ПодразделениеОрганизации;
		КонецЕсли;
		
	КонецЕсли;
	
	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ВалютаДокумента)) Тогда
		ДокументОбъект.ВалютаДокумента = ВалютаРегламентированногоУчета;
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("КурсДокумента", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.КурсДокумента)) Тогда
		СтруктураКурсаДокумента      = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, 
																						ДокументОбъект.Дата);
		ДокументОбъект.КурсДокумента = СтруктураКурсаДокумента.Курс;

		Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("КратностьДокумента", МетаданныеДокумента) Тогда
			ДокументОбъект.КратностьДокумента = СтруктураКурсаДокумента.Кратность;
		КонецЕсли;
	КонецЕсли;

	// Если тип цен оказался не заполненным, то берем его из установок пользователя
	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ТипЦен", МетаданныеДокумента)
		И (НЕ ЗначениеЗаполнено(ДокументОбъект.ТипЦен)) Тогда
	   
		Если ТипОперации = "Продажа" Тогда
			// !!! Не реализовано получение "ОсновнойТипЦенПродажи" по умолчанию
			//ДокументОбъект.ТипЦен = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, 
			//																	"ОсновнойТипЦенПродажи");
		ИначеЕсли ТипОперации = "Покупка" Тогда
			// !!! Не реализовано получение "ОсновнойТипЦенПокупки" по умолчанию
			//ДокументОбъект.ТипЦен = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, 
			//																	"ОсновнойТипЦенПокупки");
		КонецЕсли;
		
	КонецЕсли;

	Если (УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ТипЦен", МетаданныеДокумента))
	   И (ЗначениеЗаполнено(ДокументОбъект.ТипЦен)) Тогда

		// Если ТипЦен - элемент справочника ТипыЦенНоменклатуры и цены выбранного типа расчетные,
		// то флаги включения налогов надо брать из базовой цены.
		ТипЦен = ДокументОбъект.ТипЦен;

		// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
		Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) 
		   И (Не ДокументОбъект.УчитыватьНДС) Тогда

			ДокументОбъект.УчитыватьНДС     = Истина;
			ДокументОбъект.СуммаВключаетНДС = ТипЦен.ЦенаВключаетНДС;

		КонецЕсли; 
		
	Иначе

		// Заполним значениями по умолчанию (нет, либо не заполнен ТипЦен).
		// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
		Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) 
		   И (Не ДокументОбъект.УчитыватьНДС) Тогда

			ДокументОбъект.УчитыватьНДС     = Истина;
			ДокументОбъект.СуммаВключаетНДС = Истина;
		КонецЕсли; 
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ЗанимаемыхСтавок", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ЗанимаемыхСтавок)) Тогда
		ДокументОбъект.ЗанимаемыхСтавок = 1;
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ДатаС", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ДатаС)) Тогда
		ДокументОбъект.ДатаС = ДокументОбъект.Дата;
	КонецЕсли;
	
	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("НДСВключенВСтоимость", МетаданныеДокумента)
	   И УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) Тогда
		Если УПЖКХ_ТиповыеМетодыСервер.ПрименяетсяУСН(ДокументОбъект.Организация, ДокументОбъект.Дата) Тогда
			ДокументОбъект.НДСВключенВСтоимость = Истина;
		КонецЕсли;
	КонецЕсли;

	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("ПериодРегистрации", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ПериодРегистрации)) Тогда
		ДокументОбъект.ПериодРегистрации = НачалоМесяца(УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату());
	КонецЕсли;
	
	Если УПЖКХ_ТиповыеМетодыВызовСервера.ЕстьРеквизитДокумента("СпособЗачетаАвансов", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.СпособЗачетаАвансов)) Тогда
		ДокументОбъект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьШапкуДокумента()

#КонецОбласти