
////////////////////////////////////////////////////////////////////////////////
// ДОБАВЛЕНИЕ ПРОСТОЙ ГИПЕРССЫЛКИ

#Область ДобавлениеПростойГиперссылки

// Процедура - Добавляет на форму простую гиперссылку, не требующую наличия в модуле формы специального
// обработчика нажатия.
//
// Параметры:
//  Форма					 - Форма - Форма, на котороую нужно добавить гиперссылку.
//  Группа					 - ГруппаФормы - Группа формы, в которую нужно добавить гиперссылку.
//  ИмяРеквизита			 - Строка - Наименование реквизита, добавляемого на форму, и его элемента формы.
//  ПредставлениеГиперссылки - Строка - Представление гиперссылки, предназначенное для вывода пользователю.
//  ТекстГиперссылки		 - Строка - Текст открываемой гиперссылки.
//  УдалятьИмеющуюся		 - Булево - Указывает, нужно ли удалять уже имеющиеся реквизит и элемент формы,
//                                 если они были добавлены ранее.
//
Процедура ДобавитьГиперссылкуНаФорму(Форма, Группа, ИмяРеквизита, ПредставлениеГиперссылки, ТекстГиперссылки, УдалятьИмеющуюся = Истина) Экспорт
	
	Если УдалятьИмеющуюся Тогда
		УдалитьГиперссылку(Форма, ИмяРеквизита);
	КонецЕсли;
	
	ДобавитьРеквизитГиперссылкиНаФорму(Форма, ИмяРеквизита, ПредставлениеГиперссылки, ТекстГиперссылки);
	ДобавитьЭлементГиперссылкиНаФорму(Форма, Группа, ИмяРеквизита, ПредставлениеГиперссылки);
	
КонецПроцедуры

// Удаляет добавленную ранее гиперссылку.
//
Процедура УдалитьГиперссылку(Форма, ИмяЭлементаГиперссылки)
	
	УдалитьРеквизитФормы(Форма, ИмяЭлементаГиперссылки);
	УдалитьЭлементФормы(Форма, ИмяЭлементаГиперссылки);
	
КонецПроцедуры

// Удаляет добавленный ранее реквизит формы.
//
Процедура УдалитьРеквизитФормы(Форма, ИмяРеквизита)
	
	МассивРеквизитов = Форма.ПолучитьРеквизиты();
	
	Для каждого ТекРеквизит из МассивРеквизитов Цикл
		Если ТекРеквизит.Имя = ИмяРеквизита Тогда
			
			МассивНаУдаление = Новый Массив;
			МассивНаУдаление.Добавить(ИмяРеквизита);
			
			Форма.ИзменитьРеквизиты(, МассивНаУдаление);
			
			Прервать;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Удаляет добавленный ранее элемент формы.
//
Процедура УдалитьЭлементФормы(Форма, ИмяЭлемента)
	
	Элементы = Форма.Элементы;
	
	ЭлементНаУдаление = Элементы.Найти(ИмяЭлемента);
	Если Не ЭлементНаУдаление = Неопределено Тогда
		Элементы.Удалить(ЭлементНаУдаление);
	КонецЕсли;
	
КонецПроцедуры

// Добавляет на форму реквизит, содержащий гиперссылку.
//
Процедура ДобавитьРеквизитГиперссылкиНаФорму(Форма, ИмяЭлементаГиперссылки, ПредставлениеГиперссылки, ТекстГиперссылки)
	
	РеквизитГиперссылки = Новый РеквизитФормы(ИмяЭлементаГиперссылки, Новый ОписаниеТипов("ФорматированнаяСтрока"));
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(РеквизитГиперссылки);
	Форма.ИзменитьРеквизиты(МассивРеквизитов);
	
	Форма[ИмяЭлементаГиперссылки] = Новый ФорматированнаяСтрока(ПредставлениеГиперссылки,, ЦветаСтиля.УПЖКХ_ТекстСправочнойНадписи,, ТекстГиперссылки);
	
КонецПроцедуры

// Добавляет на форму надпись гиперссылки.
//
Процедура ДобавитьЭлементГиперссылкиНаФорму(Форма, Группа, ИмяЭлементаГиперссылки, ПредставлениеГиперссылки)
	
	Гиперссылка = Форма.Элементы.Добавить(ИмяЭлементаГиперссылки, Тип("ПолеФормы"), Группа);
	Гиперссылка.Вид                      = ВидПоляФормы.ПолеНадписи;
	Гиперссылка.ПутьКДанным              = ИмяЭлементаГиперссылки;
	Гиперссылка.Подсказка                = ПредставлениеГиперссылки;
	Гиперссылка.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Гиперссылка.АвтоМаксимальнаяШирина   = Ложь;
	Гиперссылка.АвтоМаксимальнаяВысота   = Ложь;
	Гиперссылка.РастягиватьПоГоризонтали = Истина;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ГИПЕРССЫЛКА С СУММОЙ ЗАДОЛЖЕННОСТИ ПО Л/С

#Область ГиперссылкаССуммойЗадолженностиПоЛС

// Процедура добавляет надпись Задолженность.
//
Процедура ДобавитьНадписьЗадолженность(Форма, Группа, Структура) Экспорт
	
	Если Форма.Элементы.Найти("Задолженность") = Неопределено Тогда
		
		Надпись            = Форма.Элементы.Добавить("Задолженность", Тип("ДекорацияФормы"), Группа);
		Надпись.Вид        = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок  = "Нет данных";
		Надпись.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
		Надпись.УстановитьДействие("ОбработкаНавигационнойСсылки", "Подключаемый_ЗадолженностьОбработкаНавигационнойСсылки");
		
	КонецЕсли;
	
	Форма.Элементы.Задолженность.Заголовок = СформироватьНадписьЗадолженность(Структура);
	
КонецПроцедуры

// Функция формирует надпись Задолженность.
//
Функция СформироватьНадписьЗадолженность(Структура)
	
	ФС = "Нет данных";
	
	Если ЗначениеЗаполнено(Структура.ЛицевойСчет) И ЗначениеЗаполнено(Структура.Организация) И ЗначениеЗаполнено(Структура.Дата) Тогда
		
		Задолженность = РасчитатьСостояниеЛС(Структура.ЛицевойСчет, Структура.Организация, Структура.Дата);
		
		КрупныйШрифт = Новый Шрифт(, 11);
		МелкийШрифт  = Новый Шрифт(, 8);
		
		Если Задолженность = 0 Тогда
			Цвет = ЦветаСтиля.ЦветУспешногоПоиска;
			ПеременнаяСтрока = "Задолженности нет";
		ИначеЕсли Задолженность > 0 Тогда 
			Цвет = ЦветаСтиля.ЦветОтрицательногоЧисла;
			ПеременнаяСтрока = "Задолженность: ";
		Иначе
			Цвет = ЦветаСтиля.ЦветУспешногоПоиска;
			ПеременнаяСтрока = "Переплата: ";
			Задолженность = -Задолженность;
		КонецЕсли;
		
		КомпонентыФС = Новый Массив;
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(ПеременнаяСтрока));
		
		Если Задолженность <> 0 Тогда
			
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Строка(Цел(Задолженность)), КрупныйШрифт, Цвет,, "e1cib/app/Отчет.КВП_КарточкаРасчетов"));
			
			Коп = Формат(Задолженность - Цел(Задолженность), "ЧДЦ=2");
			Если Коп = "" Тогда
				КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(",00", МелкийШрифт, Цвет,, "e1cib/app/Отчет.КВП_КарточкаРасчетов"));
			Иначе
				КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Прав(Строка(Коп), 3), МелкийШрифт, Цвет,, "e1cib/app/Отчет.КВП_КарточкаРасчетов"));
			КонецЕсли;
			
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(" руб.", МелкийШрифт, Цвет, , "e1cib/app/Отчет.КВП_КарточкаРасчетов"));
			
		КонецЕсли;
		
		ФС = Новый ФорматированнаяСтрока(КомпонентыФС);
		
	КонецЕсли;
	
	Возврат ФС;
	
КонецФункции

// Функция расчитывает сумму задолженности по лицевому счету для формирования надписи Задолженность.
//
Функция РасчитатьСостояниеЛС(ЛС, Организация, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.ЛицевойСчет КАК ЛицевойСчет,
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.СуммаНачисленияОстаток КАК СуммаНачисленияОстаток
	|ИЗ
	|	РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.Остатки(
	|			&ДатаОтчета,
	|			Организация = &Организация
	|				И ЛицевойСчет = &ЛицевойСчет) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстатки";
	
	Запрос.УстановитьПараметр("ЛицевойСчет", ЛС);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОтчета",  Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Задолженность = 0;
	
	Если Выборка.Следующий() Тогда
		Задолженность = Выборка.СуммаНачисленияОстаток;
	КонецЕсли;
	
	Возврат Задолженность;

КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ГИПЕРССЫЛКА ДЛЯ НАСТРОЙКИ ОГРАНИЧЕНИЯ ВВОДА ПОКАЗАНИЙ

#Область ГиперссылкаДляНастройкиОграниченияВводаПоказаний

// Процедура - добавляет в группу формы гиперссылки на Учетную политику (ЖКХ) для всех организаций.
//
// Параметры:
//  Форма	 - Форма - Форма, на которую нужно добавить гиперссылки.
//  Группа	 - ГруппаФормы - Группа формы, в которую нужно добавить гиперссылки.
//
Процедура ДобавитьГиперссылкиНаФормыЗаписиУчетнойПолитикиДляВсехОрганизаций(Форма, Группа) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(, НЕ Организация.ПометкаУдаления) КАК УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних";
	
	Организации = Запрос.Выполнить().Выбрать();
	
	Пока Организации.Следующий() Цикл
		ДобавитьГиперссылкуНаФормуЗаписиУчетнойПолитики(Форма, Группа, Организации.Организация);
	КонецЦикла;
	
КонецПроцедуры

// Процедура - добавляет в группу формы гиперссылки на Учетную политику (ЖКХ) для определенной организации.
//
// Параметры:
//  Форма						 - Форма - Форма, на которую нужно добавить гиперссылки.
//  Группа						 - ГруппаФормы - Группа формы, в которую нужно добавить гиперссылки.
//  Организация					 - Организация - Организация, Учетную политику которой нужно открывать.
//  ИмяЭлемента					 - Строка - Имя реквизита и элемента формы добавляемой гиперссылки.
//  СсылкаДляЖКХЛичныйКабинет	 - Булево - определяет, будет ли в представлении гиперссылки выведен текст по сервису
//                                          "ЖКХ: Личный кабинет" или по Сайту ЖКХ.
//
Процедура ДобавитьГиперссылкуНаФормуЗаписиУчетнойПолитики(Форма, Группа, Организация, ИмяЭлемента = Неопределено, СсылкаДляЖКХЛичныйКабинет = Истина) Экспорт
	
	// 1. Удаляем гиперссылку, если она уже есть на форме.
	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Неопределено Тогда
		ИмяЭлементаГиперссылки = СтрШаблон("ГиперссылкуНаФормуЗаписиУчетнойПолитики_%1%2", СокрЛП(Организация.ИНН), СокрЛП(Организация.КПП));
	Иначе
		ИмяЭлементаГиперссылки = ИмяЭлемента;
	КонецЕсли;
	
	УдалитьГиперссылку(Форма, ИмяЭлементаГиперссылки);
	
	// 2. Добавляем гиперссыку на форму.
	Отказ = Ложь;
	ПараметрыУчетнойПолитики = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьПараметрыУчетнойПолитикиЖКХ(ТекущаяДата(), Организация, Отказ);
	
	Если Не Отказ Тогда
		
		ПредставлениеГиперссылки = ПолучитьТекстГиперссылкиОбОграниченииПриемаПоказаний(ПараметрыУчетнойПолитики, СсылкаДляЖКХЛичныйКабинет);
		ТекстГиперссылки         = СформироватьНавигационнуюСсылкуНаЗаписьУчетнойПолитикиЖКХ(ПараметрыУчетнойПолитики);
		
		ДобавитьГиперссылкуНаФорму(Форма, Группа, ИмяЭлементаГиперссылки, ПредставлениеГиперссылки, ТекстГиперссылки, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует текст гиперссылки об ограничении ввода показаний счетчиков.
//
Функция ПолучитьТекстГиперссылкиОбОграниченииПриемаПоказаний(ПараметрыУчетнойПолитики, СсылкаДляЖКХЛичныйКабинет = Истина)
	
	ТекстГиперссылки = "";
	
	// Если используется ограничение ввода показаний - выводим период ограничения.
	Если ПараметрыУчетнойПолитики.ВариантОграниченияПериодаВводаПоказаний = 1 Тогда
		
		ТекстНачалоМесяца = "";
		ТекстКонецМесяца  = "конца";
		
		Если ПараметрыУчетнойПолитики.ЧислоНачалаПериодаПриемаПоказаний > 1 Тогда
			ТекстНачалоМесяца = "с " + Строка(ПараметрыУчетнойПолитики.ЧислоНачалаПериодаПриемаПоказаний) + ?(ПараметрыУчетнойПолитики.ЧислоОкончанияПериодаПриемаПоказаний = 0, " числа ", " ");
		КонецЕсли;
		
		Если ПараметрыУчетнойПолитики.ЧислоОкончанияПериодаПриемаПоказаний > 0 Тогда
			ТекстКонецМесяца = Строка(ПараметрыУчетнойПолитики.ЧислоОкончанияПериодаПриемаПоказаний) + " числа";
		КонецЕсли;
		
		Если СсылкаДляЖКХЛичныйКабинет Тогда
			ТекстГиперссылки = СтрШаблон("Для %1 ввод показаний в ""ЖКХ: Личный кабинет"" доступен %2до %3 месяца.", ПараметрыУчетнойПолитики.Организация.Наименование, ТекстНачалоМесяца, ТекстКонецМесяца);
		Иначе
			ТекстГиперссылки = СтрШаблон("Ввод показаний на Сайте ЖХК доступен %1до %2 месяца.", ТекстНачалоМесяца, ТекстКонецМесяца);
		КонецЕсли;
		
	// Если ограничение ввода показаний не используется - выводим информацию о такой возможности.
	Иначе
		
		Если СсылкаДляЖКХЛичныйКабинет Тогда
			ТекстГиперссылки = СтрШаблон("Для %1 ограничение периода ввода показаний счетчиков в ""ЖКХ: Личный кабинет"" не установлено.", ПараметрыУчетнойПолитики.Организация.Наименование);
		Иначе
			ТекстГиперссылки = "Ввести ограничение периода ввода показаний счетчиков на Сайте ЖКХ.";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстГиперссылки;
	
КонецФункции

// Формирует текст навигационной ссылки на запись Учетной политики (ЖКХ) по переданным параметрам.
//
Функция СформироватьНавигационнуюСсылкуНаЗаписьУчетнойПолитикиЖКХ(ПараметрыУчетнойПолитики)
	
	Возврат СтрШаблон("e1cib/data/РегистрСведений.КВП_УчетнаяПолитикаТСЖ?Период=%1&Организация=%2",
				ПолучитьПредставлениеДатыДляНавигационнойСсылки(ПараметрыУчетнойПолитики.Период),
				ПолучитьПредставлениеСсылкиНаОбъектДляНавигационнойСсылки(ПараметрыУчетнойПолитики.Организация));
	
КонецФункции

// Подготавливает представление ссылки на объект для использования в навигационной ссылке.
//
Функция ПолучитьПредставлениеСсылкиНаОбъектДляНавигационнойСсылки(Объект)
	
	СсылкаНаОбъект = "";
	
	ГУИД = XMLСтрока(Объект.Ссылка);
	
	СоставляющиеГУИДа = СтрРазделить(ГУИД, "-");
	
	Если СоставляющиеГУИДа.Количество() = 5 Тогда
		СсылкаНаОбъект = СтрШаблон("%4%5%3%2%1", СоставляющиеГУИДа[0], СоставляющиеГУИДа[1], СоставляющиеГУИДа[2], СоставляющиеГУИДа[3], СоставляющиеГУИДа[4]);
	КонецЕсли;
	
	Возврат СсылкаНаОбъект;
	
КонецФункции

// Подготавливает представление даты для использования в навигационной ссылке.
//
Функция ПолучитьПредставлениеДатыДляНавигационнойСсылки(Дата)
	
	Возврат Формат(Год(Дата), "ЧЦ=4; ЧВН=; ЧГ=") + Формат(Месяц(Дата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Дата), "ЧЦ=2; ЧВН=; ЧГ=")
		  + Формат(Час(Дата), "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(Минута(Дата), "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(Секунда(Дата), "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=")
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ГИПЕРССЫЛКА ДЛЯ НАСТРОЙКИ УПРОЩЕННОЙ АДС

#Область ГиперссылкаДляНастройкиУпрощеннойАДС

// Процедура - добавляет в группу формы гиперссылки на настройки упрощенной АДС.
//
// Параметры:
//  Форма	 - Форма - Форма, на которую нужно добавить гиперссылки.
//  Группа	 - ГруппаФормы - Группа формы, в которую нужно добавить гиперссылки.
//
Процедура ДобавитьГиперссылкиНаНастройкиУпрощеннойАДСДляВсехОрганизаций(Форма, Группа) Экспорт
	
	ТаблицаНастроекОрганизаций = РегистрыСведений.УПЖКХ_НастройкиУпрощеннойАДС.ПолучитьДанныеОрганизацийИАДСДляПредставленияНастройки();
	
	Для Каждого СтрокаНастроек Из ТаблицаНастроекОрганизаций Цикл
		ДобавитьГиперссылкуНаНастройкиУпрощеннойАДСДляОрганизации(Форма, Группа, СтрокаНастроек);
	КонецЦикла;
	
КонецПроцедуры

// Процедура добавляет в группу формы гиперссылку на настройки упрощенной АДС для организации.
//
// Параметры:
//  Форма						 - Форма - Форма, на которую нужно добавить гиперссылку.
//  Группа						 - ГруппаФормы - Группа формы, в которую нужно добавить гиперссылку.
//  СтруктураОрганизации		 - Структура/строка таб. знач. - Организация, по которой выводим настройки.
//  ИмяЭлемента					 - Строка - Имя реквизита и элемента формы добавляемой гиперссылки.
//
Процедура ДобавитьГиперссылкуНаНастройкиУпрощеннойАДСДляОрганизации(Форма, Группа, СтруктураОрганизации, ИмяЭлемента = Неопределено) Экспорт
	
	// 1. Удаляем гиперссылку, если она уже есть на форме.
	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Неопределено Тогда
		ИмяЭлементаГиперссылки = СтрШаблон("ГиперссылкаНаНастройкиУпрощеннойАДС_%1%2", СокрЛП(СтруктураОрганизации.ИНН), СокрЛП(СтруктураОрганизации.КПП));
	Иначе
		ИмяЭлементаГиперссылки = ИмяЭлемента;
	КонецЕсли;
	
	УдалитьГиперссылку(Форма, ИмяЭлементаГиперссылки);
	
	// 2. Добавляем гиперссыку на форму.
	ПредставлениеГиперссылки = ПолучитьПредставлениеГиперссылкиНаНастройкиУпрощеннойАДС(СтруктураОрганизации);
	ТекстГиперссылки         = СформироватьНавигационнуюСсылкуНаНастройкиУпрощеннойАДС(СтруктураОрганизации);
	
	ДобавитьГиперссылкуНаФорму(Форма, Группа, ИмяЭлементаГиперссылки, ПредставлениеГиперссылки, ТекстГиперссылки, Ложь);
	
	Форма.Элементы[ИмяЭлементаГиперссылки].УстановитьДействие("ОбработкаНавигационнойСсылки", "Подключаемый_НастройкиУпрощеннойАДСОбработкаНавигационнойСсылки");
	
КонецПроцедуры

// Формирует представление гиперссылки.
//
Функция ПолучитьПредставлениеГиперссылкиНаНастройкиУпрощеннойАДС(СтруктураОрганизации)
	
	ПредставлениеГиперссылки = "";
	ПредставлениеГиперссылки = СтруктураОрганизации.Наименование;
	
	Если СтруктураОрганизации.ПриниматьСообщенияОтЖильцовНаЭлПочту Тогда
		ПредставлениеГиперссылки = ПредставлениеГиперссылки + " принимает обращения жильцов по эл. почте (" + СтруктураОрганизации.АдресЭлПочты + ")";
	Иначе
		ПредставлениеГиперссылки = ПредставлениеГиперссылки + " не принимает обращения жильцов по эл. почте";
	КонецЕсли;
	
	Возврат ПредставлениеГиперссылки;
	
КонецФункции

// Формирует текст навигационной ссылки на настройки упрощенной ЖКХ по организации.
//
Функция СформироватьНавигационнуюСсылкуНаНастройкиУпрощеннойАДС(СтруктураОрганизации)
	
	Если СтруктураОрганизации.ВведеныНастройки Тогда
		Возврат СтрШаблон("e1cib/data/РегистрСведений.УПЖКХ_НастройкиУпрощеннойАДС?Организация=%1",
		                  ПолучитьПредставлениеСсылкиНаОбъектДляНавигационнойСсылки(СтруктураОрганизации.Организация));
	Иначе
		Возврат Строка("ИДОрганизации:" + СтруктураОрганизации.Организация.УникальныйИдентификатор());
	КонецЕсли;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ГИПЕРССЫЛКА НА НАСТРОЙКУ СБОРА ДАННЫХ ДЛЯ ОБМЕНА С САЙТОМ

#Область ГиперссылкаНаНастройкуСбораДанныхДляОбменаССайтом

// Процедура добавляет в группу формы гиперссылку на настройки сбора данных по настройке обмена данными с сайтом.
//
// Параметры:
//  Форма						  - Форма - Форма, на которую нужно добавить гиперссылку.
//  Группа						  - ГруппаФормы - Группа формы, в которую нужно добавить гиперссылку.
//  НастройкаОбменаДаннымиССайтом - СправочникСсылка "Настройки обмена данными с сайтом ЖКХ" - найстройки
//    обмена данными с сайтом.
//  ВыгрузкаДанныхПоЛС			  - Булево - Указывает на необходимость формирования гиперссылки.
//    Если Ложь, то гиперссылка будет удалена с формы, если она там уже есть.
//
Процедура ДобавитьГиперссылкуНаНастройкуСбораДанныхПоНастройкеОбменаДанными(Форма, Группа, НастройкаОбменаДаннымиССайтом, ВыгрузкаДанныхПоЛС) Экспорт
	
	// 1. Удаляем гиперссылку, если она уже есть на форме.
	ИмяЭлементаГиперссылки = "ГиперссылкаНаНастройкиСбораДанных";
	
	УдалитьГиперссылку(Форма, ИмяЭлементаГиперссылки);
	
	// 2. Добавляем гиперссыку на форму.
	НастройкаСбораДанных = НастройкаОбменаДаннымиССайтом.НастройкаСбораДанных;
	
	Если ВыгрузкаДанныхПоЛС И ЗначениеЗаполнено(НастройкаОбменаДаннымиССайтом) И ЗначениеЗаполнено(НастройкаСбораДанных) Тогда
		
		ПредставлениеГиперссылки = "Перейти к настройке сбора данных";
		ТекстГиперссылки         = СтрШаблон("e1cib/data/Справочник.УПЖКХ_НастройкиСбораДанныхДляКвитанцийИОбменов?ref=%1", ПолучитьПредставлениеСсылкиНаОбъектДляНавигационнойСсылки(НастройкаСбораДанных));
		
		ДобавитьГиперссылкуНаФорму(Форма, Группа, ИмяЭлементаГиперссылки, ПредставлениеГиперссылки, ТекстГиперссылки, Ложь);
		
		ЭлементГиперссылки = Форма.Элементы[ИмяЭлементаГиперссылки];
		ЭлементГиперссылки.РастягиватьПоГоризонтали = Ложь;
		ЭлементГиперссылки.Ширина                   = 22;
		ЭлементГиперссылки.ОтображениеПодсказки     = ОтображениеПодсказки.Кнопка;
		
		ЭлементГиперссылки.Подсказка =
		"Настройка сбора данных отвечает за внешний вид квитанции, которая будет формироваться на сайте, и за выводимые в ней данные.
		|Если вы хотите, чтобы квитанции на сайте и в 1С совпадали, выберите в ""Настроке обмена"" настройку сбора данных, которую используете при печати квитанций,
		|или измените выбранную.";
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ГИПЕРССЫЛКА НА ОТЧЕТ ОЦЕНКА ПРОИЗВОДИТЕЛЬНОСТИ

#Область ГиперссылкаНаОтчетОценкаПроизводительности

// Процедура добавляет в группу формы гиперссылку на отчет оценки производительности.
//
Процедура ДобавитьГиперссылкуНаОтчетОценкаПроизводительности(Форма, Группа)Экспорт
	
	// 1. Удаляем гиперссылку, если она уже есть на форме.
	ИмяЭлементаГиперссылки = "ГиперссылкаНаОтчетОценкаПроизводительности";
	УдалитьГиперссылку(Форма, ИмяЭлементаГиперссылки);
	
	// 2. Добавляем гиперссыку на форму.
	ПредставлениеГиперссылки = "Оценка производительности";
	Ссылка = Справочники.ВариантыОтчетов.НайтиПоНаименованию("Оценка производительности по ключевым операциям");
	
	Если Ссылка <> Неопределено Тогда
		ТекстГиперссылки         = СтрШаблон("e1cib/data/Справочник.ВариантыОтчетов?ref=%1", ПолучитьПредставлениеСсылкиНаОбъектДляНавигационнойСсылки(Ссылка));;
		ДобавитьГиперссылкуНаФорму(Форма, Группа, ИмяЭлементаГиперссылки, ПредставлениеГиперссылки, ТекстГиперссылки, Ложь);
		ЭлементГиперссылки = Форма.Элементы[ИмяЭлементаГиперссылки];
		ЭлементГиперссылки.Подсказка = "Отчет ""Оценка производительности по ключевым операциям""";
		ЭлементГиперссылки.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ГИПЕРССЫЛКА ПОВТОРНОЕ ПОЛУЧЕНИЕ ПАРОЛЯ НА СЕРВИСЕ РЕГИСТРАЦИИ

#Область ГиперссылкаНаФормуПовторногоПолученияПароля

// Процедура добавляет в группу формы гиперссылку на форму данных аккаунта на сервисах Рарус.
//
Процедура ДобавитьГиперссылкуНаФормуПовторнойОтправкиПароляНаСервисеРарус(Форма, Группа) Экспорт
	
	ИмяЭлементаГиперссылки   = "ГиперссылкаНаФормуПовторнойОтправкиПароляНаСервисеРарус";
	ПредставлениеГиперссылки = "Данные аккаунта";
	ТекстГиперссылки         = "e1cib/app/ОбщаяФорма.УПЖКХ_СервисыРарусПолучениеПароляПоПочте";
	
	ДобавитьГиперссылкуНаФорму(Форма, Группа, ИмяЭлементаГиперссылки, ПредставлениеГиперссылки, ТекстГиперссылки, Истина);
	
КонецПроцедуры

#КонецОбласти
