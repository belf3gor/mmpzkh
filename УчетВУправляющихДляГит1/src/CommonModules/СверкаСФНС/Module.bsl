
#Область ПрограммныйИнтерфейс

// Переопределние условного оформления формы "Новое" 1С-Отчетности
Процедура ФормаНовыхСобытий_ПриСозданииНаСервере(Форма) Экспорт
	
	ЗапросыИОНДляУсловногоОформления = ЗапросыИОНДляУсловногоОформления();
	
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаНовоеОбъектНаименованиеСсылка");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ЭлементУО.Отбор,
		"Новое.Ссылка",
		ВидСравненияКомпоновкиДанных.ВСписке,
		ЗапросыИОНДляУсловногоОформления.ЗапросыДляЗаменыТекста);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Сверка налогов с ФНС'"));
	
	Если Форма.ИмяФормы = "Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.ФормаНовыхСобытий" Тогда
		ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаНовоеОбъектНаименованиеСсылка");
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ЭлементУО.Отбор,
			"Новое.Ссылка",
			ВидСравненияКомпоновкиДанных.ВСписке,
			ЗапросыИОНДляУсловногоОформления.ЗапросыДляИзмененияЦветаТекста);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОплатаНалогаНеОбнаружена);
	КонецЕсли;
	
КонецПроцедуры

Функция ДоступностьОтчетности(Организация) Экспорт

	ДоступностьОтчетности = Новый Структура("РазрешеноИспользование, ОтчетностьПодключена, ОтчетностьДоступна");
	ДоступностьОтчетности.РазрешеноИспользование = ИнтерфейсыВзаимодействияБРО.УТекущегоПользователяЕстьДоступКЭДО();
	ДоступностьОтчетности.ОтчетностьПодключена = ИнтерфейсыВзаимодействияБРО.ПодключенДокументооборотСКонтролирующимОрганом(
		Организация,, Истина);
	ДоступностьОтчетности.ОтчетностьДоступна = (ДоступностьОтчетности.РазрешеноИспользование
		И ДоступностьОтчетности.ОтчетностьПодключена);
	
	Возврат ДоступностьОтчетности;

КонецФункции

Процедура СохранитьСсылкуПриОтправкеЗапросаИОН(Ссылка) Экспорт
	
	Если ЗапросИОНОтправлен(Ссылка) Тогда
		ЗаписатьВРегистрСостояниеЗапросаИОН(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

// Если это запрос на ИОН, который был отправлен для сверки оплат,
// то данные запроса сохраняются в регистр сведений.
Процедура ПослеДобавленияОтветаНаЗапросИОН(Ссылка, Данные) Экспорт
	
	ДаныеЗапроса = ДанныеЗапросаИОН(Ссылка);
	Если Не ДаныеЗапроса.ЭтоЗапросНаСверкуОплат Тогда
		Возврат;
	КонецЕсли;
	
	Обработки.СверкаНалоговСФНС.ОбработатьДанныеФНС(Ссылка, Данные);
	
	ДанныеДокументаОплаты = Обработки.СверкаНалоговСФНС.ДанныеДокументаНеПрошедшегоСверку(
			ДаныеЗапроса.Организация,
			ДаныеЗапроса.ДатаНачалаПериода);
	СверкаПройдена = (ДанныеДокументаОплаты = Неопределено);
	ЗаписатьВРегистрСостояниеЗапросаИОН(Ссылка, Истина, СверкаПройдена);
	
	// Обновим данные сервиса проверки оплаты налогов.
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru='Обновление данных сервиса проверки оплаты налогов'");

	ПараметрыДлительнойОперации = Новый Структура;
	ПараметрыДлительнойОперации.Вставить("Организация", ДаныеЗапроса.Организация);
	ПараметрыДлительнойОперации.Вставить(
		"РазделыПерсонализированныхДанных",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.РазделыПерсонализированныхДанных.СервисПроверкаОплатыНалогов));
	
	ДлительныеОперации.ВыполнитьВФоне(
		"ПерсонализированныеПредложенияСервисов.ПерезаписатьПерсонализированныеДанныеВФоне",
		ПараметрыДлительнойОперации,
		ПараметрыВыполнения);

КонецПроцедуры

Функция ДанныеЗапросаИОН(Ссылка) Экспорт
	
	Результат = Новый Структура("ЭтоЗапросНаСверкуОплат, Организация, ДатаНачалаПериода"); 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапросыНаПроверкуОплатНалогов.Организация КАК Организация,
	|	ЗапросыНаПроверкуОплатНалогов.Запрос.ДатаНачалаПериода КАК ДатаНачалаПериода
	|ИЗ
	|	РегистрСведений.ЗапросыНаПроверкуОплатНалогов КАК ЗапросыНаПроверкуОплатНалогов
	|ГДЕ
	|	ЗапросыНаПроверкуОплатНалогов.Запрос = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Результат.ЭтоЗапросНаСверкуОплат = Истина;
	Иначе
		Результат.ЭтоЗапросНаСверкуОплат = Ложь;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Процедура РегламентированнаяОтчетность_ТаблицаНовоеПриОбновлении(Форма) Экспорт
	
	ЗапросыИОНДляУсловногоОформления = ЗапросыИОНДляУсловногоОформления();
	
	ЭлементыУО = Форма.УсловноеОформление.Элементы;
	ЭлементУО = ЭлементыУО.Получить(Форма.УсловноеОформление.Элементы.Количество() - 1);
	ЭлементыУО.Удалить(ЭлементУО);
	
	ЭлементУО = ЭлементыУО.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаНовоеОбъектНаименованиеСсылка");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ЭлементУО.Отбор,
		"Новое.Ссылка",
		ВидСравненияКомпоновкиДанных.ВСписке,
		ЗапросыИОНДляУсловногоОформления.ЗапросыДляЗаменыТекста);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Сверка налогов с ФНС'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьВРегистрСостояниеЗапросаИОН(Ссылка, ОтветОбработан = Ложь, СверкаПройдена = Ложь)

	ДанныеЗапроса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Организация, Дата, ДатаНачалаПериода");
	
	МенеджерЗаписи = РегистрыСведений.ЗапросыНаПроверкуОплатНалогов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Запрос      = Ссылка;
	МенеджерЗаписи.Организация = ДанныеЗапроса.Организация;
	МенеджерЗаписи.Дата        = ДанныеЗапроса.Дата;
	МенеджерЗаписи.Год         = Год(ДанныеЗапроса.ДатаНачалаПериода);
	МенеджерЗаписи.ОтветОбработан = ОтветОбработан;
	МенеджерЗаписи.СверкаПройдена = СверкаПройдена;
	
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи.Записать(Истина);
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Функция ЗапросыИОНДляУсловногоОформления()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапросыНаПроверкуОплатНалогов.Запрос КАК Запрос,
	|	ЗапросыНаПроверкуОплатНалогов.СверкаПройдена КАК СверкаПройдена
	|ИЗ
	|	РегистрСведений.ЗапросыНаПроверкуОплатНалогов КАК ЗапросыНаПроверкуОплатНалогов
	|ГДЕ
	|	ЗапросыНаПроверкуОплатНалогов.ОтветОбработан";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗапросыДляЗаменыТекста = Новый СписокЗначений;
	ЗапросыДляИзмененияЦветаТекста = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		ЗапросыДляЗаменыТекста.Добавить(Выборка.Запрос);
		Если Не Выборка.СверкаПройдена Тогда
			ЗапросыДляИзмененияЦветаТекста.Добавить(Выборка.Запрос);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура(
		"ЗапросыДляЗаменыТекста, ЗапросыДляИзмененияЦветаТекста",
		ЗапросыДляЗаменыТекста,
		ЗапросыДляИзмененияЦветаТекста);
		
	Возврат Результат;

КонецФункции

Функция ЗапросИОНОтправлен(Ссылка)

	Возврат (СведенияПоОтправкам.СведенияПоВсемОтправкам(Ссылка).Количество() > 0);

КонецФункции

#КонецОбласти