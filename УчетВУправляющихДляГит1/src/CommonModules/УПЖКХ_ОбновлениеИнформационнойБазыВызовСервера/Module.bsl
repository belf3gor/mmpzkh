////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обновление версии ИБ"
// Серверные процедуры и функции обновления информационной базы
// при смене версии конфигурации.
//

#Область ВспомогательныеПроцедурыИФункции

// Функция производит сравнение текущей версии конфигурации в метаданных и версии
// конфигурации, записанной в регистр сведений "Версии подсистем", и возвращает
// признак необходимости обновления информационной базы.
//
// Параметры
//  ПараметрыИБ  – Структура - структура параметров информационной базы.
//
// Возвращаемое значение
//  Тип Булево - признак необходимости обновления ИБ.
//
Функция ПроверитьНеобходимостьОбновленияИнформационнойБазы(ПараметрыИБ) Экспорт
	
	Если НЕ ПустаяСтрока(ПараметрыИБ.КВП_НомерВерсииКВПВМетаданных)
	  И ПараметрыИБ.КВП_НомерВерсииПодсистемыКВП <> ПараметрыИБ.КВП_НомерВерсииКВПВМетаданных Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Проверка критерия добавлена для ситуации, когда выполняется обновления с версии 2.0,
	// и ошибка возникает после выполнения обработчиков перехода с ЖКХ 2.0, но до
	// отложенных обработчиков обновления.
	Если Не ОбновлениеИнформационнойБазыСлужебный.ВыполненаРегистрацияОтложенныхОбработчиковОбновления() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ПроверитьНеобходимостьОбновленияИнформационнойБазы()

// Функция возвращает параметры информационной базы.
Функция ПолучитьПараметрыИБ() Экспорт
	
	ВерсияПодсистемыЖКХ = ОбновлениеИнформационнойБазыСлужебный.ВерсияИБ(Метаданные.Имя);
	
	ПараметрыИБ = Новый ФиксированнаяСтруктура("НаименованиеКонфигурации,
											  | СинонимКонфигурации,
											  | КВП_НомерВерсииКВПВМетаданных,
											  | КВП_НомерВерсииОсновнойКонфигурации,
											  | КВП_НомерВерсииПодсистемыКВП",
											  "ЖКХ",
											  Метаданные.Синоним,
											  Метаданные.Версия,
											  КВП_ПрочиеПроцедурыИФункции.НомерВерсииТиповойКонфигурации(Метаданные.Версия),
											  ВерсияПодсистемыЖКХ);
	
	Возврат ПараметрыИБ;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыДляПроверкиВнешнихКвитанций

// Процедура проверяет Учетную политику (ЖКХ) всех организаций на наличие внешних форм квитанций.
// Если таковые найдены, открывается форма с предложением проверить их работоспособность.
//
Функция ПроверитьНаличиеВнешнихКвитанцийНаСервере() Экспорт
	
	МассивФорм = Новый Массив;
	
	ЗаполнитьМассивФормКвитанцийСВозможнымиОшибкамиВнешнимиКвитанциями(МассивФорм);
	ЗаполнитьМассивФормКвитанцийСВозможнымиОшибкамиКвитанциямиСИзмененнымиМакетами(МассивФорм);
	
	Возврат МассивФорм;
	
КонецФункции // ПроверитьКвитанцию()

// Заполянет массив форм с возможными ошибками внешними квитанциями.
//
Процедура ЗаполнитьМассивФормКвитанцийСВозможнымиОшибкамиВнешнимиКвитанциями(МассивФорм)
	
	ТаблицаФорм = Новый ТаблицаЗначений;
	ТаблицаФорм.Колонки.Добавить("Организации",    Новый ОписаниеТипов("Строка"));
	ТаблицаФорм.Колонки.Добавить("ФормаКвитанции", Новый ОписаниеТипов("СправочникСсылка.ДополнительныеОтчетыИОбработки"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УПЖКХ_НастройкиФормированияПлатежногоДокумента.Организация.Представление КАК Организация,
	|	УПЖКХ_НастройкиФормированияПлатежногоДокумента.ФормаКвитанции КАК ФормаКвитанции
	|ИЗ
	|	РегистрСведений.УПЖКХ_НастройкиФормированияПлатежногоДокумента КАК УПЖКХ_НастройкиФормированияПлатежногоДокумента
	|ГДЕ
	|	УПЖКХ_НастройкиФормированияПлатежногоДокумента.ФормаКвитанции ССЫЛКА Справочник.ДополнительныеОтчетыИОбработки
	|ИТОГИ ПО
	|	ФормаКвитанции
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ВыборкаФорм = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФорм.Следующий() Цикл
		
		СписокОрганизаций = "";
		
		НоваяСтрока = ТаблицаФорм.Добавить();
		НоваяСтрока.ФормаКвитанции = ВыборкаФорм.ФормаКвитанции;
		
		ВыборкаОрганизаций = ВыборкаФорм.Выбрать();
		Пока ВыборкаОрганизаций.Следующий() Цикл
			Если ЗначениеЗаполнено(СписокОрганизаций) Тогда
				СписокОрганизаций = СписокОрганизаций + ", " + ВыборкаОрганизаций.Организация;
			Иначе
				СписокОрганизаций = "" + ВыборкаОрганизаций.Организация;
			КонецЕсли;	
		КонецЦикла;
		
		НоваяСтрока.Организации = СписокОрганизаций;
	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаФорм Цикл
		Структура = Новый Структура("ФормаКвитанции, Пояснение", Строка.ФормаКвитанции, "Внешняя квитанция используется в следующих организациях: " + Строка.Организации);
		МассивФорм.Добавить(Структура);
	КонецЦикла;
	
КонецПроцедуры

// Заполянет массив форм с возможными ошибками квитанциями с измененными макетами.
//
Процедура ЗаполнитьМассивФормКвитанцийСВозможнымиОшибкамиКвитанциямиСИзмененнымиМакетами(МассивФорм)
	
	ТаблицаСтандартныхКвитанций = УПЖКХ_ПечатьКвитанцийСервер.ПолучитьТаблицуСоответствияФормКвитанцийИМакетов();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСтандартныхКвитанций.ФормаКвитанции КАК ФормаКвитанции,
	|	ТаблицаСтандартныхКвитанций.ОбъектКвитанции КАК ОбъектКвитанции,
	|	ТаблицаСтандартныхКвитанций.МакетКвитанции КАК МакетКвитанции
	|ПОМЕСТИТЬ втТаблицаСтандартныхКвитанций
	|ИЗ
	|	&ТаблицаСтандартныхКвитанций КАК ТаблицаСтандартныхКвитанций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаСтандартныхКвитанций.ФормаКвитанции КАК ФормаКвитанции,
	|	втТаблицаСтандартныхКвитанций.ОбъектКвитанции КАК ОбъектКвитанции,
	|	втТаблицаСтандартныхКвитанций.МакетКвитанции КАК МакетКвитанции
	|ИЗ
	|	втТаблицаСтандартныхКвитанций КАК втТаблицаСтандартныхКвитанций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользовательскиеМакетыПечати КАК ПользовательскиеМакетыПечати
	|		ПО втТаблицаСтандартныхКвитанций.ОбъектКвитанции = ПользовательскиеМакетыПечати.Объект
	|			И втТаблицаСтандартныхКвитанций.МакетКвитанции = ПользовательскиеМакетыПечати.ИмяМакета
	|ГДЕ
	|	ПользовательскиеМакетыПечати.Использование";
	
	Запрос.УстановитьПараметр("ТаблицаСтандартныхКвитанций", ТаблицаСтандартныхКвитанций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивФорм.Добавить(Новый Структура("ФормаКвитанции, Пояснение", Выборка.ФормаКвитанции, "Изменен макет стандартной квитанции: " + Выборка.ФормаКвитанции));
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ФункцияПолученияТекстаСообщенияОбУдаленииКвитанций

// Функция получет сообщение об использовании квитанций, которые будут удалены или удаляются из программы.
// см. УПЖКХ_ОбновлениеИнформационнойБазыКлиент.ПроверитьИспользованиеФормКвитанцийКоторыеПодлежатУдалению()
//
Функция ПолучитьТекстСообщенияОбУдаленииФормКвитанций(Удаление = Ложь) Экспорт
	
	ТекстСообщения = Отчеты.УПЖКХ_ПлатежныйДокумент.ПолучитьТекстСообщенияОбУдаленииФормКвитанцийДляМеханизмаОбновлений(Удаление);
	
	Возврат ТекстСообщения;
	
КонецФункции // ПроверитьКвитанцию()

#КонецОбласти