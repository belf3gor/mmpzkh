
#Область СлужебныйПрограммныйИнтерфейс

// Расчет НДФЛ

// Выполняет расчет налога по отдельным доходам с учетом вида дохода и резидентства получателя дохода.
// Заполняет в переданной таблице Доходы колонку НДФЛ, если такой колонки нет - создает ее.
//
// Параметры:
//		ДатаПолученияДохода - дата -
//		Доходы - ТаблицаЗначений - содержит колонки
//			ФизическоеЛицо
//			КатегорияДохода
//			КодДохода 
//			СуммаДохода
//  	    КодВычета (необязательная)
//  	    СуммаВычета (необязательная)
//  	    НомерСтроки (необязательная)
// 
Процедура РассчитатьНалогДляКонкретногоДохода(ДатаПолученияДохода, Доходы) Экспорт
	
	УдалятьКолонкуВычета = Ложь;	
	Если Доходы.Колонки.Найти("СуммаВычета") = Неопределено Тогда
		Доходы.Колонки.Добавить("СуммаВычета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		УдалятьКолонкуВычета = Истина	
	КонецЕсли;
	УдалятьКолонкуКодаВычета = Ложь;	
	Если Доходы.Колонки.Найти("КодВычета") = Неопределено Тогда
		Доходы.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
		УдалятьКолонкуКодаВычета = Истина	
	КонецЕсли;
	УдалятьКолонкуНомера = Ложь;	
	Если Доходы.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		Доходы.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		УдалятьКолонкуНомера = Истина;	
		НомерСтроки = 0;
		Для Каждого СтрокаРасчета Из Доходы Цикл
			СтрокаРасчета.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЕсли;
	УдалятьКолонкуКатегорияДохода = Ложь;	
	Если Доходы.Колонки.Найти("КатегорияДохода") = Неопределено Тогда
		Доходы.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
		УдалятьКолонкуКатегорияДохода = Истина;
		Если Доходы.Колонки.Найти("КодДохода") <> Неопределено Тогда
			Для каждого СтрокаТЗ Из Доходы Цикл
				СтрокаТЗ.КатегорияДохода = УчетНДФЛПовтИсп.КатегорияДоходаПоЕгоКоду(СтрокаТЗ.КодДохода)
			КонецЦикла;
		Иначе
			Доходы.ЗаполнитьЗначения(Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы, "КатегорияДохода");
		КонецЕсли;
	КонецЕсли;
	
	Если Доходы.Колонки.Найти("НДФЛ") = Неопределено Тогда
		Доходы.Колонки.Добавить("НДФЛ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(13, 0)));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Доходы", Доходы); 
	Запрос.УстановитьПараметр("ДатаПолученияДохода", ДатаПолученияДохода); 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Список.НомерСтроки КАК НомерСтроки,
	|	Список.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Список.КодДохода КАК КодДохода,
	|	Список.КатегорияДохода КАК КатегорияДохода,
	|	Список.КодВычета КАК КодВычета,
	|	Список.СуммаДохода КАК СуммаДохода,
	|	Список.СуммаВычета КАК СуммаВычета
	|ПОМЕСТИТЬ ВТСписокДоходов
	|ИЗ
	|	&Доходы КАК Список
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокДоходов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокДоходов.КодДохода КАК КодДохода,
	|	СписокДоходов.КатегорияДохода КАК КатегорияДохода,
	|	&ДатаПолученияДохода КАК Период,
	|	ВидыДоходовНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТСписокДоходов КАК СписокДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	|		ПО СписокДоходов.КодДохода = ВидыДоходовНДФЛ.Ссылка";
	Запрос.Выполнить();
	
	УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокДоходов.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА СписокДоходов.КодДохода.НеОблагаетсяУНалоговогоАгента
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((СписокДоходов.СуммаДохода - ВЫБОР
	|					КОГДА ЕСТЬNULL(СтавкаНДФЛПоСтавкеРезидента.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|						ТОГДА СписокДоходов.СуммаВычета
	|					КОГДА ЕСТЬNULL(ВидыВычетовНДФЛ.НеПредоставляетсяНерезидентам, ЛОЖЬ)
	|						ТОГДА 0
	|					ИНАЧЕ СписокДоходов.СуммаВычета
	|				КОНЕЦ) * СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом КАК ЧИСЛО(13, 0))
	|	КОНЕЦ КАК НДФЛ
	|ИЗ
	|	ВТСписокДоходов КАК СписокДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО СписокДоходов.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И СписокДоходов.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыВычетовНДФЛ КАК ВидыВычетовНДФЛ
	|		ПО СписокДоходов.КодВычета = ВидыВычетовНДФЛ.Ссылка";
	Налоги = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаРасчета Из Доходы Цикл
		
		СтрокаРезультата = Налоги.Найти(СтрокаРасчета.НомерСтроки,"НомерСтроки");
		Если СтрокаРезультата <> Неопределено Тогда
			СтрокаРасчета.НДФЛ = СтрокаРезультата.НДФЛ; 
		Иначе 	
			СтрокаРасчета.НДФЛ = 0; 
		КонецЕсли;
		
	КонецЦикла;
	
	Если УдалятьКолонкуВычета Тогда
		Доходы.Колонки.Удалить("СуммаВычета");
	КонецЕсли;
	Если УдалятьКолонкуКодаВычета Тогда
		Доходы.Колонки.Удалить("КодВычета");
	КонецЕсли;
	Если УдалятьКолонкуНомера Тогда
		Доходы.Колонки.Удалить("НомерСтроки");
	КонецЕсли;
	Если УдалятьКолонкуКатегорияДохода Тогда
		Доходы.Колонки.Удалить("КатегорияДохода");
	КонецЕсли;
	
КонецПроцедуры

// Выполняет расчет налога с дивидендов для одного акционера.
//
// Параметры:
//	- Организация
//	- Акционер
//	- Начислено
//	- ВычетПоНДФЛ
// Возвращаемое значение - величина НДФЛ.
// 
Функция НалогСДивидендовАкционера(ДатаПолученияДохода, Акционер, Начислено, ВычетПоНДФЛ, КатегорияДивидендов = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(КатегорияДивидендов) Тогда 
		КатегорияДивидендов = Перечисления.КатегорииДоходовНДФЛ.Дивиденды;
	КонецЕсли;
	
	ТаблицаДивиденды = Новый ТаблицаЗначений();
	ТаблицаДивиденды.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаДивиденды.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	ТаблицаДивиденды.Колонки.Добавить("КодДохода", Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));
	ТаблицаДивиденды.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	ТаблицаДивиденды.Колонки.Добавить("СуммаДохода", Новый ОписаниеТипов("Число"));
	ТаблицаДивиденды.Колонки.Добавить("СуммаВычета", Новый ОписаниеТипов("Число"));
	ТаблицаДивиденды.Колонки.Добавить("НДФЛ", Новый ОписаниеТипов("Число"));
	СтрокаДохода = ТаблицаДивиденды.Добавить();
	СтрокаДохода.ФизическоеЛицо = Акционер;
	СтрокаДохода.СуммаДохода = Начислено;
	СтрокаДохода.СуммаВычета = ВычетПоНДФЛ;
	СтрокаДохода.КатегорияДохода = КатегорияДивидендов;
	СтрокаДохода.КодДохода = Справочники.ВидыДоходовНДФЛ.Код1010;
	СтрокаДохода.КодВычета = Справочники.ВидыВычетовНДФЛ.Код403;
	РассчитатьНалогДляКонкретногоДохода(ДатаПолученияДохода, ТаблицаДивиденды);
	
	Возврат ТаблицаДивиденды[0].НДФЛ;
	
КонецФункции

// Выполняет регистрацию доходов по дивидендам и налога с этих доходов.
//
// Параметры:
//		Регистратор - ДокументСсылка -
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ДатаВыплаты - дата - дата, которой планируется выплата дохода.
//		Дивиденды - ТаблицаЗначений - содержит, как минимум, колонки.
//			Акционер
//			Начислено
//			ВычетПоНДФЛ
//			НДФЛ
//		ВключатьВДекларациюПоНалогуНаПрибыль - булево -
//		РегистрироватьУдержаниеПеречислениеНДФЛ - булево, признак того, что необходимо зарегистрировать удержение и перечисление НДФЛ
//		ДатаПлатежаНДФЛ - дата
//		ПеречислениеНДФЛРеквизиты - строка
//		Записывать - булево
//
Процедура СформироватьДоходыИНДФЛСДивидендов(Регистратор, Движения, Отказ, Организация, ДатаОперации, ДатаВыплаты, Дивиденды, ВключатьВДекларациюПоНалогуНаПрибыль, РегистрироватьУдержаниеПеречислениеНДФЛ = Ложь, ДатаПлатежаНДФЛ = Неопределено, ПеречислениеНДФЛРеквизиты = "", Записывать = Ложь) Экспорт
	
	Дивиденды.Колонки.Акционер.Имя = "ФизическоеЛицо";
	Дивиденды.Колонки.Начислено.Имя = "СуммаДохода";
	Дивиденды.Колонки.ВычетПоНДФЛ.Имя = "СуммаВычета";
	Дивиденды.Колонки.НДФЛ.Имя = "Сумма";
	
	Дивиденды.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Дивиденды.Колонки.Добавить("ПодразделениеСотрудника", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Дивиденды.Колонки.Добавить("ДатаПолученияДохода", Новый ОписаниеТипов("Дата"));
	Дивиденды.ЗаполнитьЗначения(ДатаВыплаты, "ДатаПолученияДохода");
	Если Дивиденды.Колонки.Найти("КатегорияДохода") = Неопределено Тогда
		Дивиденды.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
		Дивиденды.ЗаполнитьЗначения(Перечисления.КатегорииДоходовНДФЛ.Дивиденды, "КатегорияДохода");
	КонецЕсли;
	Дивиденды.Колонки.Добавить("КодДохода", Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));
	Дивиденды.ЗаполнитьЗначения(Справочники.ВидыДоходовНДФЛ.Код1010, "КодДохода");
	Дивиденды.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	Дивиденды.ЗаполнитьЗначения(Справочники.ВидыВычетовНДФЛ.Код601, "КодВычета");
	Дивиденды.Колонки.Добавить("СтавкаНалогообложенияРезидента", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	Дивиденды.ЗаполнитьЗначения(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09, "СтавкаНалогообложенияРезидента");
	Дивиденды.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов("Дата"));
	Дивиденды.ЗаполнитьЗначения(НачалоМесяца(ДатаВыплаты), "МесяцНалоговогоПериода");
	Дивиденды.Колонки.Добавить("ВключатьВДекларациюПоНалогуНаПрибыль", Новый ОписаниеТипов("Булево"));
	Дивиденды.ЗаполнитьЗначения(ВключатьВДекларациюПоНалогуНаПрибыль, "ВключатьВДекларациюПоНалогуНаПрибыль");
	Дивиденды.Колонки.Добавить("НеУчитыватьДоходВ6НДФЛ", Новый ОписаниеТипов("Булево"));
	Дивиденды.ЗаполнитьЗначения(Истина, "НеУчитыватьДоходВ6НДФЛ");
	
	УчетНДФЛ.СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(Движения, Отказ, Организация, ДатаОперации, Дивиденды, Записывать,,Регистратор);
	
	Дивиденды.Колонки.Удалить("МесяцНалоговогоПериода");
	Дивиденды.Колонки.ДатаПолученияДохода.Имя = "МесяцНалоговогоПериода";
	УчетНДФЛ.СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, Дивиденды);
	
	Если РегистрироватьУдержаниеПеречислениеНДФЛ Тогда
		
		Дивиденды.Колонки.СуммаДохода.Имя = "СуммаВыплаченногоДохода";
		Дивиденды.Колонки.НеУчитыватьДоходВ6НДФЛ.Имя = "УчитыватьВыплаченныйДоходВ6НДФЛ";
		УчетНДФЛ.СформироватьУдержанныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, Дивиденды,,Записывать);
		
		ЗарегистрироватьНДФЛПеречисленныйПоПлатежномуДокументу(Движения, Отказ, Организация, ДатаПлатежаНДФЛ, ПеречислениеНДФЛРеквизиты, Записывать);
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по перечисленному НДФЛ с учетом зарегистрированных ранее авансов по налогу.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация 
//		ДатаОперации - дата
//		РеквизитыПлатежногоПоручения - строка.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура ЗарегистрироватьНДФЛПеречисленныйПоПлатежномуДокументу(Движения, Отказ, Организация, ДатаОперации, РеквизитыПлатежногоПоручения, Записывать = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ИсчисленоПоДивидендам,
	|	ВЫБОР
	|		КОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУдержанныеНалоги
	|ИЗ
	|	&Движения КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанныеНалоги.ФизическоеЛицо,
	|	СУММА(УдержанныеНалоги.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТСуммыПоФизлицам
	|ИЗ
	|	ВТУдержанныеНалоги КАК УдержанныеНалоги
	|
	|СГРУППИРОВАТЬ ПО
	|	УдержанныеНалоги.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанныеНалоги.ФизическоеЛицо,
	|	УдержанныеНалоги.Ставка,
	|	УдержанныеНалоги.МесяцНалоговогоПериода,
	|	УдержанныеНалоги.РегистрацияВНалоговомОргане,
	|	СУММА(УдержанныеНалоги.Сумма) КАК Сумма,
	|	&РеквизитыПлатежногоПоручения КАК РеквизитыПлатежногоПоручения,
	|	УдержанныеНалоги.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	УдержанныеНалоги.ИсчисленоПоДивидендам
	|ИЗ
	|	ВТУдержанныеНалоги КАК УдержанныеНалоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыПоФизлицам КАК СуммыПоФизлицам
	|		ПО УдержанныеНалоги.ФизическоеЛицо = СуммыПоФизлицам.ФизическоеЛицо
	|ГДЕ
	|	СуммыПоФизлицам.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	УдержанныеНалоги.ФизическоеЛицо,
	|	УдержанныеНалоги.Ставка,
	|	УдержанныеНалоги.МесяцНалоговогоПериода,
	|	УдержанныеНалоги.РегистрацияВНалоговомОргане,
	|	УдержанныеНалоги.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	УдержанныеНалоги.ИсчисленоПоДивидендам";

	Запрос.УстановитьПараметр("Движения", Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Выгрузить());
	Запрос.УстановитьПараметр("РеквизитыПлатежногоПоручения", Лев(СокрЛП(РеквизитыПлатежногоПоручения), 50));
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			УчетНДФЛ.СтрокаПеречисленияНДФЛПоНалогоплательщику(Движения, Организация, ДатаОперации, Выборка)
		КонецЦикла;
		
		Если Записывать Тогда
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает Ставку налогообложения резидента для дохода НДФЛ.
// Если код вычета не определен, то возвращается пустая ссылка.
Функция СтавкаНалогообложенияРезидентаПоКодуДоходаНДФЛ(КодДоходаНДФЛ) Экспорт
	СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка();	
	Если ЗначениеЗаполнено(КодДоходаНДФЛ) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КодДоходаНДФЛ, "СтавкаНалогообложенияРезидента");
	КонецЕсли;
	Возврат СтавкаНалогообложенияРезидента	
КонецФункции 

// Предназначена для расчета и регистрации НДФЛ удержанного 
// по записанным в учете данным и по переданным данным о выплатах.
//
// Параметры:
//      Ссылка - ДокументСсылка - ссылка на документ-регистратор.
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации - должно быть непустым значением.
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение, должно быть непустым значением.
//      МенеджерТаблиц - МенеджерВременныхТаблиц - должен содержать временную таблицу с данными о выплатах ВТСписокСотрудников с колонками:
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты.
//          	ДокументОснование, необязательная
//          	СуммаНачисленная, необязательная
//          	СуммаВыплаченная, необязательная
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ПериодРегистрации - дата - 
//		ОкончательныйРасчет - булево - признак того, является ли выплата, для которой рассчитывается удержанный налог, выплатой "под расчет".
//
//  Формирует движения по регистрам подсистемы.
//
Процедура РассчитатьИЗарегистрироватьУдержанныеНалогиСДивидендов(Ссылка, Движения, Отказ, Организация, ДатаОперации, МенеджерТаблиц, Записывать = Ложь, ПериодРегистрации = Неопределено, ОкончательныйРасчет = Истина) Экспорт
	
	УдержанныйНалог = УчетНДФЛ.РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации, ОкончательныйРасчет);
	
	УдержанныйНалог.ЗаполнитьЗначения(ДатаОперации, "МесяцНалоговогоПериода");
	
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерТаблиц, УдержанныйНалог, "ВТНалогУдержанный");
	Если ДатаОперации >= УчетНДФЛ.ДатаИзмененияСроковУплатыНалога() Тогда
		УточненнаяДатаОперации = ?(ОкончательныйРасчет И ЗначениеЗаполнено(ПериодРегистрации),
			Макс(КонецМесяца(ПериодРегистрации), КонецДня(ДатаОперации)),
			КонецДня(ДатаОперации));
		УчетНДФЛ.ВписатьСуммыВыплаченногоДоходаВУдержанныеНалоги(МенеджерТаблиц, Ссылка, ДатаОперации, УточненнаяДатаОперации);
	КонецЕсли;
	УчетНДФЛ.СформироватьУдержанныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерТаблиц, , Истина);
	ЗарплатаКадры.УничтожитьВТ(МенеджерТаблиц, "ВТНалогУдержанный");
	
КонецПроцедуры

// Корректировка текста запроса для новых документов
//
Процедура РасчетПоказателей_6НДФЛ_2017Кв1(ТекстЗапроса) Экспорт
	
	ПодстрокаЗамены =
		"ВЫБРАТЬ
		|	ВзаиморасчетыССотрудниками.Регистратор КАК Регистратор,
		|	СУММА(ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
		|ПОМЕСТИТЬ ВТНачисленоПоРегистраторам
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
		|ГДЕ
		|	ВзаиморасчетыССотрудниками.Регистратор В
		|			(ВЫБРАТЬ
		|				РегистраторыНачислений.Регистратор
		|			ИЗ
		|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
		|	И ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзаиморасчетыССотрудниками.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачислениеДивидендов.Ссылка,
		|	СУММА(НачислениеДивидендов.СуммаДохода)
		|ИЗ
		|	Документ.НачислениеДивидендов КАК НачислениеДивидендов
		|ГДЕ
		|	НачислениеДивидендов.Ссылка В
		|			(ВЫБРАТЬ
		|				РегистраторыНачислений.Регистратор
		|			ИЗ
		|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
		|	И НачислениеДивидендов.Проведен
		|	И НачислениеДивидендов.ТипУчредителя = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеДивидендов.Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,  "ВЫБРАТЬ * ИЗ ВТНачисленоПоРегистраторам", ПодстрокаЗамены);
	
КонецПроцедуры

#КонецОбласти