
#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора = Неопределено, РежимЗагрузки = Ложь, НаборЗаписей = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст  = 
		"ВЫБРАТЬ
		|	ИзменившиесяДанные.Поля_,
		|	ВЫБОР 
		|		КОГДА ВторичныеДанные.Начало = ДАТАВРЕМЯ(1, 1, 1) 
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВторичныеДанные.Начало, ГОД, -1), ГОД)
		|	КОНЕЦ КАК Год
		|ИЗ
		|	ВТКлючиИзменившихсяДанных КАК ИзменившиесяДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ВторичныеДанные
		|		ПО ИзменившиесяДанные.ПоляСоединения_ = ВторичныеДанные.ПоляСоединения_
		|			И (ВЫБОР
		|				КОГДА ВторичныеДанные.Окончание = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ИзменившиесяДанные.Начало, ГОД) <= ДОБАВИТЬКДАТЕ(ВторичныеДанные.Окончание, ДЕНЬ, 1)
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ИзменившиесяДанные.Окончание = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменившиесяДанные.Окончание, ДЕНЬ, 1) >= ВторичныеДанные.Начало
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИзменившиесяДанные.Поля_,
		|	ВЫБОР 
		|		КОГДА ВторичныеДанные.Начало = ДАТАВРЕМЯ(1, 1, 1) 
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВторичныеДанные.Начало, ГОД, -1), ГОД)
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ИзменившиесяДанные.Поля_,
		|	НАЧАЛОПЕРИОДА(ИзменившиесяДанные.Начало, ГОД) КАК Год
		|ИЗ
		|	ВТКлючиИзменившихсяДанных КАК ИзменившиесяДанные";
	
	ПоляТекст = "";
	ПоляСоединенияТекст = "";
	
	Если ИзмеренияОтбора = Неопределено Тогда
		
		ПоляТекст = "
			|	ИзменившиесяДанные.ГоловнаяОрганизация,
			|	ИзменившиесяДанные.ФизическоеЛицо,
			|	ИзменившиесяДанные.ТипДоговора,";
		
		ПоляСоединенияТекст = 
		    "ИзменившиесяДанные.ГоловнаяОрганизация = ВторичныеДанные.ГоловнаяОрганизация
			|			И ИзменившиесяДанные.ФизическоеЛицо = ВторичныеДанные.ФизическоеЛицо
			|			И ИзменившиесяДанные.ТипДоговора = ВторичныеДанные.ТипДоговора";
		
	Иначе
		ПоляТекст = Новый Массив;
		ПоляСоединенияТекст = Новый Массив;
		Для Каждого Поле Из ИзмеренияОтбора Цикл
			ПоляТекст.Добавить(СтрШаблон("ИзменившиесяДанные.%1,", Поле));
			ПоляСоединенияТекст.Добавить(СтрШаблон("ИзменившиесяДанные.%1 = ВторичныеДанные.%1", Поле));
		КонецЦикла;
					
		ПоляТекст = СтрСоединить(ПоляТекст);
		Если ПоляСоединенияТекст.Количество() = 0 Тогда
			ПоляСоединенияТекст = "ИСТИНА";
		Иначе
			ПоляСоединенияТекст = СтрСоединить(ПоляСоединенияТекст, Символы.ПС + "И ");
		КонецЕсли;
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИзменившиесяДанные.Поля_,", ПоляТекст);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИзменившиесяДанные.ПоляСоединения_ = ВторичныеДанные.ПоляСоединения_", ПоляСоединенияТекст);
		
	ЗначенияИзмерений = Запрос.Выполнить().Выгрузить();
	
	Если ЗначенияИзмерений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РесурсыУчетаСтажа = УчетСтажаПФР.РесурсыУчетаСтажаПФР();
	
	ОписаниеРегистраПервичныхДанных = ЗарплатаКадры.ОписаниеРегистраИсходныхПериодовСостояний();
	ОписаниеРегистраПервичныхДанных.ИмяРегистра = "ПараметрыПериодовСтажаПФР";
	ОписаниеРегистраПервичныхДанных.ИмяПоляДатаНачалаСобытия = "ДатаНачалаСобытия";
	ОписаниеРегистраПервичныхДанных.ИмяПоляДатаНачалаПериода = "Начало";
	ОписаниеРегистраПервичныхДанных.ИмяПоляДатаОкончанияПериода = "Окончание"; 
	ОписаниеРегистраПервичныхДанных.ИмяПоляПриоритет = "Приоритет";
	ОписаниеРегистраПервичныхДанных.Измерения.Добавить("ГоловнаяОрганизация");
	ОписаниеРегистраПервичныхДанных.Измерения.Добавить("ФизическоеЛицо");
	ОписаниеРегистраПервичныхДанных.Измерения.Добавить("Сотрудник");
	ОписаниеРегистраПервичныхДанных.Измерения.Добавить("ТипДоговора");
	ОписаниеРегистраПервичныхДанных.Ресурсы = РесурсыУчетаСтажа;
	
	ОписаниеРегистраВторичныхДанных = ЗарплатаКадры.ОписаниеРегистраРассчитанныхПериодовСостояний();
	ОписаниеРегистраВторичныхДанных.ИмяРегистра = "ПериодыСтажаПФР";
	ОписаниеРегистраВторичныхДанных.ИмяПоляДатаНачалаПериода = "Начало";
	ОписаниеРегистраВторичныхДанных.ИмяПоляДатаОкончанияПериода = "Окончание"; 
	ОписаниеРегистраВторичныхДанных.ОтборПоГоду = Истина;
	ОписаниеРегистраВторичныхДанных.Измерения.Добавить("ГоловнаяОрганизация");
	ОписаниеРегистраВторичныхДанных.Измерения.Добавить("ФизическоеЛицо");
	ОписаниеРегистраВторичныхДанных.Измерения.Добавить("ТипДоговора");
	ОписаниеРегистраВторичныхДанных.Ресурсы = РесурсыУчетаСтажа;
			
	ЗарплатаКадры.ДобавитьОтборЗаписейРегистраРассчитанныхПериодовСостоянийРавно(ОписаниеРегистраВторичныхДанных, "ВнутреннееСовместительство", Ложь, Истина);
	ЗарплатаКадры.ДобавитьОтборЗаписейРегистраРассчитанныхПериодовСостоянийРавно(ОписаниеРегистраВторичныхДанных, "ТипДоговора", Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой);
	
	ЗарплатаКадры.ДобавитьОтборЗаписейРегистраРассчитанныхПериодовСостоянийНеРавно(ОписаниеРегистраВторичныхДанных, "ВидСтажаПФР", Перечисления.ВидыСтажаПФР2014.НеВключаетсяВСтраховойСтаж);
	
	ЗарплатаКадры.ОбновитьРегистрРассчитанныхПериодовСостояний(
		ОписаниеРегистраПервичныхДанных,
		ОписаниеРегистраВторичныхДанных,
		ЗначенияИзмерений,
		РежимЗагрузки,
		НаборЗаписей);
	
КонецПроцедуры	

Процедура ПриЗаписиРегистраУчетаСтажаПФР(МенеджерВременныхТаблиц) Экспорт
	УчетСтажаПФРВнутренний.ПриЗаписиРегистраУчетаСтажаПФР(МенеджерВременныхТаблиц);
КонецПроцедуры

Функция РесурсыУчетаСтажаПФР() Экспорт	
	Возврат УчетСтажаПФРВнутренний.РесурсыУчетаСтажаПФР();
КонецФункции

Функция ДанныеДляРегистрацииВУчетеСтажаПФР() Экспорт
	ДанныеДляРегистрации = Новый Структура;
	ДанныеДляРегистрации.Вставить("ТипДоговора", Перечисления.ТипыДоговоровСЗВ63.Трудовой);
	ДанныеДляРегистрации.Вставить("РегистрируемыеПериоды", Новый Массив);
	
	Возврат ДанныеДляРегистрации;
КонецФункции	

Функция ДанныеДляРегистрацииДоговоровГПХВУчетеСтажаПФР() Экспорт
	ДанныеДляРегистрации = Новый Структура;
	ДанныеДляРегистрации.Вставить("ТипДоговора", Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой);
	ДанныеДляРегистрации.Вставить("РегистрируемыеПериоды", Новый Массив);
	
	Возврат ДанныеДляРегистрации;	
КонецФункции

Функция ОписаниеРегистрируемогоПериода() Экспорт
	ОписаниеРегистрируемогоПериода = Новый Структура;
	ОписаниеРегистрируемогоПериода.Вставить("Сотрудник");
	ОписаниеРегистрируемогоПериода.Вставить("ДатаНачалаПериода");
	ОписаниеРегистрируемогоПериода.Вставить("ДатаОкончанияПериода");
	ОписаниеРегистрируемогоПериода.Вставить("Состояние");
	ОписаниеРегистрируемогоПериода.Вставить("ВидЗанятости");
	ОписаниеРегистрируемогоПериода.Вставить("ДатаНачалаСобытия");

	Возврат ОписаниеРегистрируемогоПериода;
	
КонецФункции	

Функция ДобавитьЗаписьВДанныеДляРегистрацииВУчета(РегистрируемыеДанные, ОписаниеРегистрируемогоПериода) Экспорт 
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Сотрудник", ОписаниеРегистрируемогоПериода.Сотрудник);
	СтруктураЗаписи.Вставить("ДатаНачалаПериода", ОписаниеРегистрируемогоПериода.ДатаНачалаПериода);
	СтруктураЗаписи.Вставить("ДатаОкончанияПериода", ОписаниеРегистрируемогоПериода.ДатаОкончанияПериода);
	СтруктураЗаписи.Вставить("Состояние", ОписаниеРегистрируемогоПериода.Состояние);
	СтруктураЗаписи.Вставить("ВидЗанятости", ОписаниеРегистрируемогоПериода.ВидЗанятости);
	СтруктураЗаписи.Вставить("ЗначенияРесурсов", Новый Структура);
	
	Если ЗначениеЗаполнено(ОписаниеРегистрируемогоПериода.ДатаНачалаСобытия) Тогда
		СтруктураЗаписи.Вставить("ДатаНачалаСобытия", ОписаниеРегистрируемогоПериода.ДатаНачалаСобытия);
	Иначе
		СтруктураЗаписи.Вставить("ДатаНачалаСобытия", ОписаниеРегистрируемогоПериода.ДатаНачалаПериода);              
	КонецЕсли;	
	
	РегистрируемыеДанные.РегистрируемыеПериоды.Добавить(СтруктураЗаписи);
	
	Возврат СтруктураЗаписи;
КонецФункции	

Процедура УстановитьЗначениеРегистрируемогоРесурса(СтруктураЗаписи, Ресурс, ЗначениеРесурса) Экспорт
	СтруктураЗаписи.ЗначенияРесурсов.Вставить(Ресурс, ЗначениеРесурса);	
КонецПроцедуры	

Процедура ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, РегистрируемыеДанные) Экспорт
	Если РегистрируемыеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РегистрируемыеДанные.ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой Тогда
		ЗарегистрироватьПериодыПоТрудовомуДоговору(Движения, РегистрируемыеДанные.РегистрируемыеПериоды);
	Иначе
		ЗарегистрироватьПериодыДоговоровГПХ(Движения, РегистрируемыеДанные.РегистрируемыеПериоды);	
	КонецЕсли;	
КонецПроцедуры	

Процедура ЗарегистрироватьПериодыПоТрудовомуДоговору(Движения, РегистрируемыеДанные)	
	Сотрудники = Новый Массив;
	Для Каждого ДанныеРегистрируемогоПериода Из РегистрируемыеДанные Цикл
		Сотрудники.Добавить(ДанныеРегистрируемогоПериода.Сотрудник);
	КонецЦикла;	
	
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	ГоловныеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ГоловнаяОрганизация");
	
	ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой;
	
	Для Каждого ДанныеРегистрируемогоПериода Из РегистрируемыеДанные Цикл
		Если ЗначениеЗаполнено(ДанныеРегистрируемогоПериода.ВидЗанятости) Тогда
			ВнутреннееСовместительство = ДанныеРегистрируемогоПериода.ВидЗанятости = Перечисления.ВидыЗанятости.ВнутреннееСовместительство;   
			УстановитьЗначениеРегистрируемогоРесурса(ДанныеРегистрируемогоПериода, "ВнутреннееСовместительство", ВнутреннееСовместительство);
		КонецЕсли;	
		
		ГоловнаяОрганизация = ГоловныеОрганизации[ДанныеРегистрируемогоПериода.Сотрудник];
		ФизическоеЛицо = ФизическиеЛицаСотрудников[ДанныеРегистрируемогоПериода.Сотрудник];
		
		ЗаписьНабора = ДобавитьЗаписьВНаборРегистраУчетаСтажа(
							Движения.ПараметрыПериодовСтажаПФР, 
							ГоловнаяОрганизация,
							ФизическоеЛицо, 
							ТипДоговора, 
							ДанныеРегистрируемогоПериода);
							
		Если ЗаписьНабора <> Неопределено Тогда
			ЗаписьНабора.Сотрудник = ДанныеРегистрируемогоПериода.Сотрудник;
			Движения.ПараметрыПериодовСтажаПФР.Записывать = Истина;
		КонецЕсли;			
	КонецЦикла;		
КонецПроцедуры	

Процедура ЗарегистрироватьПериодыДоговоровГПХ(Движения, РегистрируемыеДанные) 
	МассивСотрудников = Новый Массив;
	
	Для Каждого ОписаниеРегистрируемогоПериода Из РегистрируемыеДанные Цикл
		МассивСотрудников.Добавить(ОписаниеРегистрируемогоПериода.Сотрудник);	
	КонецЦикла;	
	
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСотрудников, "ФизическоеЛицо");
	ГоловныеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСотрудников, "ГоловнаяОрганизация");
	
	ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой;
	
	Для Каждого ДанныеРегистрируемогоПериода Из РегистрируемыеДанные Цикл
		ГоловнаяОрганизация = ГоловныеОрганизации[ДанныеРегистрируемогоПериода.Сотрудник]; 
		ФизическоеЛицо = ФизическиеЛицаСотрудников[ДанныеРегистрируемогоПериода.Сотрудник];
							
		ДобавитьЗаписьВНаборРегистраУчетаСтажа(
			Движения.ПараметрыПериодовСтажаПФР, 
			ГоловнаяОрганизация,
			ФизическоеЛицо, 
			ТипДоговора, 
			ДанныеРегистрируемогоПериода);
				
	КонецЦикла;	
	
	Движения.ПараметрыПериодовСтажаПФР.Записывать = Истина;		
КонецПроцедуры

Функция ДобавитьЗаписьВНаборРегистраУчетаСтажа(НаборЗаписей, ГоловнаяОрганизация, ФизическоеЛицо, ТипДоговора, ДанныеРегистрируемогоПериода)
	// Периоды до 2010 года в учете стажа ПФР нам учитывать не нужно.
	Если ЗначениеЗаполнено(ДанныеРегистрируемогоПериода.ДатаОкончанияПериода)
		И ДанныеРегистрируемогоПериода.ДатаОкончанияПериода < '20100101' Тогда
		
		Возврат Неопределено;
	КонецЕсли;	
	
	ЗаписьНабора = НоваяЗаписьНабораРегистраУчетаСтажаПФР(НаборЗаписей);
	
	ЗаписьНабора.ГоловнаяОрганизация = ГоловнаяОрганизация;
	ЗаписьНабора.ФизическоеЛицо = ФизическоеЛицо;
	ЗаписьНабора.ТипДоговора = ТипДоговора;
	ЗаписьНабора.ДатаНачалаСобытия = ДанныеРегистрируемогоПериода.ДатаНачалаСобытия;
	ЗаписьНабора.Начало = ДанныеРегистрируемогоПериода.ДатаНачалаПериода;
	ЗаписьНабора.Окончание = ДанныеРегистрируемогоПериода.ДатаОкончанияПериода;
	ЗаписьНабора.Приоритет = ДанныеРегистрируемогоПериода.Состояние;	
	
	Для Каждого РегистрируемыйРесурс Из ДанныеРегистрируемогоПериода.ЗначенияРесурсов Цикл
		ЗаписьНабора[РегистрируемыйРесурс.Ключ] = РегистрируемыйРесурс.Значение;
		ЗаписьНабора["ИспользованиеРесурса" + РегистрируемыйРесурс.Ключ] = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.Установлено;
	КонецЦикла;	
	
	Возврат ЗаписьНабора;	
КонецФункции	

Процедура ЗарегистрироватьСторноПериодовСтажаПФР(Движения, ДокументСсылка, СторнируемыйДокумент) Экспорт
	ЗарплатаКадры.ЗарегистрироватьСторноИсходныхДанныхСостояний(Движения, "ПараметрыПериодовСтажаПФР", ДокументСсылка, СторнируемыйДокумент);	
КонецПроцедуры	

Функция НоваяЗаписьНабораРегистраУчетаСтажаПФР(НаборЗаписей)
	Возврат УчетСтажаПФРВнутренний.НоваяЗаписьНабораРегистраУчетаСтажаПФР(НаборЗаписей);	
КонецФункции	

Функция ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР() Экспорт
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР = Новый Структура;
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("Организация");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("НачалоПериода");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("ОкончаниеПериода");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("ИмяВТОтбор");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("ИзмеренияОтбора", Новый Массив);
	
	Возврат ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР;
	
КонецФункции

Процедура СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ПараметрыОтбора, ИмяВТРезультат = "ВТДанныеУчетаСтажаПФР") Экспорт
	Если ПараметрыОтбора.НачалоПериода = Неопределено Тогда
		НачалоПериода = '20100101';
	Иначе
		НачалоПериода = ПараметрыОтбора.НачалоПериода;
	КонецЕсли;
	
	Если ПараметрыОтбора.ОкончаниеПериода = Неопределено Тогда
		ДатаСеанса = ТекущаяДатаСеанса();
		ТекущийПериод = ?(ДатаСеанса >= '20170101', НачалоГода(ДатаСеанса), НачалоКвартала(ДатаСеанса));
		ОкончаниеПериода = ПерсонифицированныйУчетКлиентСервер.ПредшествующийОтчетныйПериодСтажаПерсУчета(ТекущийПериод);
	Иначе
		ОкончаниеПериода = ПараметрыОтбора.ОкончаниеПериода;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Фильтр.Поля_ КАК Поля_,
		|	&Начало КАК Начало,
		|	&Окончание КАК Окончание
		|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
		|ИЗ ВТФильтр КАК Фильтр";
	
	Запрос.УстановитьПараметр("Начало", НачалоПериода);
	Запрос.УстановитьПараметр("Окончание", ОкончаниеПериода);
	
	Если ПараметрыОтбора.ИмяВТОтбор = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИЗ ВТФильтр КАК Фильтр", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Фильтр.Поля_ КАК Поля_,", "");
		ИзмеренияОтбора = Новый Массив;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТФильтр", ПараметрыОтбора.ИмяВТОтбор);
		ПоляЗапроса = Новый Массив;
		Для Каждого ИзмерениеФильтра Из ПараметрыОтбора.ИзмеренияОтбора Цикл
			ПоляЗапроса.Добавить(СтрШаблон("Фильтр.%1 КАК %1,", ИзмерениеФильтра));
		КонецЦикла;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Фильтр.Поля_ КАК Поля_,", СтрСоединить(ПоляЗапроса));
		ИзмеренияОтбора = ПараметрыОтбора.ИзмеренияОтбора;
	КонецЕсли;
	
	Запрос.Выполнить();
	НаборЗаписей = РегистрыСведений.ПериодыСтажаПФР.СоздатьНаборЗаписей();
	УстановитьПривилегированныйРежим(Истина);
	ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина, НаборЗаписей);
	УстановитьПривилегированныйРежим(Ложь);
	ЗарплатаКадры.СоздатьВТПоНаборуЗаписей(МенеджерВременныхТаблиц, НаборЗаписей);
	
	СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2013(Запрос.МенеджерВременныхТаблиц);
	СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2014(Запрос.МенеджерВременныхТаблиц);
	СоздатьВТОтчетныеПериоды(Запрос.МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода);
	ПерсонифицированныйУчет.СоздатьВТЗамещениеГосударственныхДолжностей(Запрос.МенеджерВременныхТаблиц);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(
		Запрос.МенеджерВременныхТаблиц,
		НачалоПериода,
		ОкончаниеПериода,
		"МЕСЯЦ");
		
	Запрос.УстановитьПараметр("Организация", ПараметрыОтбора.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", НачалоДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("ПараметрыСтажаСПравомНаДосрочнуюПенсию2014", ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2014());
	Запрос.УстановитьПараметр("ПараметрыСтажаСПравомНаДосрочнуюПенсию2013", ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2013());
	Запрос.УстановитьПараметр("ИсключаемыеТерриториальныеУсловия", ПерсонифицированныйУчет.ИсключаемыеТерриториальныеУсловияПФР());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ПериодыСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыСтажаПФР.ТипДоговора КАК ТипДоговора,
	|	ОтчетныеПериоды.ОтчетныйПериод КАК ОтчетныйПериод,
	|	ВЫБОР
	|		КОГДА ПериодыСтажаПФР.Начало < ОтчетныеПериоды.ОтчетныйПериод
	|			ТОГДА ОтчетныеПериоды.ОтчетныйПериод
	|		ИНАЧЕ ПериодыСтажаПФР.Начало
	|	КОНЕЦ КАК Начало,
	|	ВЫБОР
	|		КОГДА ПериодыСтажаПФР.Окончание = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ПериодыСтажаПФР.Окончание > ОтчетныеПериоды.ОкончаниеПериода
	|			ТОГДА ОтчетныеПериоды.ОкончаниеПериода
	|		ИНАЧЕ ПериодыСтажаПФР.Окончание
	|	КОНЕЦ КАК Окончание,
	|	ПериодыСтажаПФР.ВидСтажаПФР КАК ВидСтажаПФР,
	|	ПериодыСтажаПФР.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014
	|				И ПериодыСтажаПФР.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ГражданскоПравовой)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДОГОВОР)
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014
	|			ТОГДА СоответствиеВидовСтажаПараметрамИсчисления2014.ПараметрИсчисляемогоСтажа
	|		ИНАЧЕ СоответствиеВидовСтажаПараметрамИсчисления2013.ПараметрИсчисляемогоСтажа
	|	КОНЕЦ КАК ТретийПараметрИсчисляемогоСтажа,
	|	ВЫБОР
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014
	|				И СоответствиеВидовСтажаПараметрамИсчисления2014.ПараметрИсчисляемогоСтажа В (&ПараметрыСтажаСПравомНаДосрочнуюПенсию2014)
	|				И ПериодыСтажаПФР.ВидСтажаПФР <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтраховойСтаж)
	|			ТОГДА ИСТИНА
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2013
	|				И СоответствиеВидовСтажаПараметрамИсчисления2013.ПараметрИсчисляемогоСтажа В (&ПараметрыСтажаСПравомНаДосрочнуюПенсию2013)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПравоНаЛьготныйСтаж,
	|	ЕСТЬNULL(ЗамещениеГосударственныхДолжностей.ЗамещениеГосударственныхМуниципальныхДолжностей, ЗНАЧЕНИЕ(Справочник.ЗамещениеГосударственныхМуниципальныхДолжностейПФР.ПустаяСсылка)) КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
	|	NULL КАК СтруктурнаяЕдиница,
	|	NULL КАК Должность,
	|	NULL КАК КоличествоСтавок,
	|	NULL КАК НеполныйРабочийДень,
	|	NULL КАК ОснованиеДосрочногоНазначенияПенсии,
	|	NULL КАК КодПозицииСписка,
	|	NULL КАК ТерриториальныеУсловия,
	|	NULL КАК ТерриториальныеУсловияДополнительные,
	|	NULL КАК ОсобыеУсловияТруда,
	|	NULL КАК ВладелецДопТерриторий,
	|	NULL КАК ЗарегистрированоЗначениеТерриториальныеУсловия,
	|	NULL КАК ЗарегистрированоЗначениеОснованиеВыслугиЛет,
	|	NULL КАК ЗарегистрированоЗначениеОсобыеУсловияТруда,
	|	NULL КАК ЗарегистрированоЗначениеТерриториальныеУсловияДополнительные
	|ПОМЕСТИТЬ ВТИсходныеДанныеУчетаСтажа
	|ИЗ
	|	ВТРегистрСведений_ПериодыСтажаПФР КАК ПериодыСтажаПФР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
	|		ПО (&УсловияСвязиПоИзмерениям)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтчетныеПериоды КАК ОтчетныеПериоды
	|		ПО ПериодыСтажаПФР.Начало <= ОтчетныеПериоды.ОкончаниеПериода
	|			И (ПериодыСтажаПФР.Окончание = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ПериодыСтажаПФР.Окончание >= ОтчетныеПериоды.ОтчетныйПериод)
	|			И (ПериодыСтажаПФР.ВидСтажаПФР <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.НеВключаетсяВСтраховойСтаж))
	|			И (&УсловиеОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовСтажаПараметрамИсчисления2014 КАК СоответствиеВидовСтажаПараметрамИсчисления2014
	|		ПО ПериодыСтажаПФР.ВидСтажаПФР = СоответствиеВидовСтажаПараметрамИсчисления2014.ВидСтажа
	|			И (ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовСтажаПараметрамИсчисления2013 КАК СоответствиеВидовСтажаПараметрамИсчисления2013
	|		ПО ПериодыСтажаПФР.ВидСтажаПФР = СоответствиеВидовСтажаПараметрамИсчисления2013.ВидСтажа
	|			И (ОтчетныеПериоды.ИспользоватьПараметрыСтажа2013)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗамещениеГосударственныхДолжностей КАК ЗамещениеГосударственныхДолжностей
	|		ПО ПериодыСтажаПФР.Должность = ЗамещениеГосударственныхДолжностей.Должность";
	
	ТекстыДополнительныхПолейЗапроса = ТекстДополнительныхПолейЗапросаВТДанныеУчетаСтажаПФР();
	
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "КоличествоСтавок", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "НеполныйРабочийДень", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ОснованиеДосрочногоНазначенияПенсии", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "КодПозицииСписка", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ТерриториальныеУсловияДополнительные", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ТерриториальныеУсловия", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ЗарегистрированоЗначениеТерриториальныеУсловияДополнительные", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ОсобыеУсловияТруда", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ЗарегистрированоЗначениеТерриториальныеУсловия", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ЗарегистрированоЗначениеОснованиеВыслугиЛет", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ЗарегистрированоЗначениеОсобыеУсловияТруда", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "СтруктурнаяЕдиница", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "Должность", ТекстыДополнительныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ВладелецДопТерриторий", ТекстыДополнительныхПолейЗапроса);
	
	Если ПараметрыОтбора.ИмяВТОтбор = Неопределено Тогда
		ПодстрокаЗамены = "ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
						   |		ПО (&УсловияСвязиПоИзмерениям)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ПодстрокаЗамены, "");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТФильтр", ПараметрыОтбора.ИмяВТОтбор);
		
		УсловиеСвязи = "";
		Для Каждого ИзмерениеФильтра Из ПараметрыОтбора.ИзмеренияОтбора Цикл 
			УсловиеСвязи = УсловиеСвязи + "
										|	И ПериодыСтажаПФР." + ИзмерениеФильтра + " = Фильтр." + ИзмерениеФильтра;
		КонецЦикла;
		
		УсловиеСвязи = Сред(УсловиеСвязи, 4);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияСвязиПоИзмерениям", УсловиеСвязи);
	КонецЕсли;
	
	Если ПараметрыОтбора.Организация = Неопределено Тогда
		ТекстУсловияОрганизация = "ИСТИНА";
	Иначе
		ТекстУсловияОрганизация = "ПериодыСтажаПФР.Организация = &Организация";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОрганизация", ТекстУсловияОрганизация);
	
	Если НачалоПериода < '20170101' Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЕСТЬNULL(ЗамещениеГосударственныхДолжностей.ЗамещениеГосударственныхМуниципальныхДолжностей, ЗНАЧЕНИЕ(Справочник.ЗамещениеГосударственныхМуниципальныхДолжностейПФР.ПустаяСсылка))", "ЗНАЧЕНИЕ(Справочник.ЗамещениеГосударственныхМуниципальныхДолжностейПФР.ПустаяСсылка)");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанныеУчетаСтажа.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	&НачалоПериода КАК ДатаНачала,
	|	&ОкончаниеПериода КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПодразделения
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТИсходныеДанныеУчетаСтажа.Должность КАК Должность,
	|	&НачалоПериода КАК ДатаНачала,
	|	&ОкончаниеПериода КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТДолжности
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ВТИсходныеДанныеУчетаСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаПериоды
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа,
	|	ВТПериоды КАК Периоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСоответствиеВидовСтажаПараметрамИсчисления2013
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСоответствиеВидовСтажаПараметрамИсчисления2014
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗамещениеГосударственныхДолжностей";
	
	Запрос.Выполнить();
	
	УчетСтраховыхВзносов.СформироватьВТДанныеОПравахНаСтрахование(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеЛицаПериоды",
		Ложь);
	
	ПараметрыПолученияДанных = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ПараметрыПолученияДанных.ВключатьЗаписиНаНачалоПериода = Истина;
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
							"ВТПодразделения",
							"СтруктурнаяЕдиница");
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"ТерриториальныеУсловияПФР",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПолученияДанных);
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
							"ВТДолжности",
							"Должность");
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"КлассыУсловийТрудаПоДолжностям",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПолученияДанных);
		
	ПерсонифицированныйУчет.СоздатьВТИнтервалыПоТаблицеДат(
		Запрос.МенеджерВременныхТаблиц, 
		"ВТДанныеОПравахНаСтрахование", 
		"МЕСЯЦ",
		"ФизическоеЛицо, ЗастрахованПФР, ГоловнаяОрганизация",  
		"ВТПраваНаСтрахованиеИнтервалы");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	ТерриториальныеУсловияПФРПоПериодам.Период
	|ПОМЕСТИТЬ ВТПериодыИзмененияДанных
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловияПФРПоПериодам
	|		ПО ИсходныеДанныеУчетаСтажа.Начало <= ТерриториальныеУсловияПФРПоПериодам.Период
	|			И ИсходныеДанныеУчетаСтажа.Окончание >= ТерриториальныеУсловияПФРПоПериодам.Период
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	КлассыУсловийТрудаПоДолжностям.Период
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ПО (КлассыУсловийТрудаПоДолжностям.Должность = ИсходныеДанныеУчетаСтажа.Должность)
	|			И (КлассыУсловийТрудаПоДолжностям.Период >= ИсходныеДанныеУчетаСтажа.Начало)
	|			И (КлассыУсловийТрудаПоДолжностям.Период <= ИсходныеДанныеУчетаСтажа.Окончание)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПраваНаСтрахованиеИнтервалы.ГоловнаяОрганизация,
	|	ПраваНаСтрахованиеИнтервалы.ФизическоеЛицо,
	|	ПраваНаСтрахованиеИнтервалы.ДатаНачалаИнтервала
	|ИЗ
	|	ВТПраваНаСтрахованиеИнтервалы КАК ПраваНаСтрахованиеИнтервалы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПраваНаСтрахованиеИнтервалы.ГоловнаяОрганизация,
	|	ПраваНаСтрахованиеИнтервалы.ФизическоеЛицо,
	|	ПраваНаСтрахованиеИнтервалы.ДатаОкончанияИнтервала
	|ИЗ
	|	ВТПраваНаСтрахованиеИнтервалы КАК ПраваНаСтрахованиеИнтервалы
	|ГДЕ
	|	ПраваНаСтрахованиеИнтервалы.ДатаОкончанияИнтервала < &ОкончаниеПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	ИсходныеДанныеУчетаСтажа.Начало
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыИзмененияДанных.ГоловнаяОрганизация,
	|	ПериодыИзмененияДанных.ФизическоеЛицо,
	|	ПериодыИзмененияДанных.Период,
	|	ИсходныеДанныеУчетаСтажа.Начало,
	|	ИсходныеДанныеУчетаСтажа.СтруктурнаяЕдиница,
	|	ИсходныеДанныеУчетаСтажа.Должность,
	|	ИсходныеДанныеУчетаСтажа.Окончание
	|ПОМЕСТИТЬ ВТКлючиДляСрезаПериодическихДанных
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодыИзмененияДанных КАК ПериодыИзмененияДанных
	|		ПО ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация = ПериодыИзмененияДанных.ГоловнаяОрганизация
	|			И ИсходныеДанныеУчетаСтажа.ФизическоеЛицо = ПериодыИзмененияДанных.ФизическоеЛицо
	|			И ИсходныеДанныеУчетаСтажа.Начало <= ПериодыИзмененияДанных.Период
	|			И ИсходныеДанныеУчетаСтажа.Окончание >= ПериодыИзмененияДанных.Период
	|";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлючиДляСрезаПериодическихДанных.ГоловнаяОрганизация,
	|	КлючиДляСрезаПериодическихДанных.ФизическоеЛицо,
	|	КлючиДляСрезаПериодическихДанных.Период,
	|	КлючиДляСрезаПериодическихДанных.Начало,
	|	КлючиДляСрезаПериодическихДанных.СтруктурнаяЕдиница,
	|	КлючиДляСрезаПериодическихДанных.Должность,
	|	МАКСИМУМ(ТерриториальныеУсловия.Период) КАК ДатаСрезаТерриториальныхУсловий,
	|	МАКСИМУМ(КлассыУсловийТрудаПоДолжностям.Период) КАК ДатаСрезаКлассаУсловийТруда,
	|	КлючиДляСрезаПериодическихДанных.Окончание
	|ПОМЕСТИТЬ ВТДатыСрезаПериодическихДанных
	|ИЗ
	|	ВТКлючиДляСрезаПериодическихДанных КАК КлючиДляСрезаПериодическихДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловия
	|		ПО КлючиДляСрезаПериодическихДанных.СтруктурнаяЕдиница = ТерриториальныеУсловия.СтруктурнаяЕдиница
	|			И КлючиДляСрезаПериодическихДанных.Период >= ТерриториальныеУсловия.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ПО КлючиДляСрезаПериодическихДанных.Должность = КлассыУсловийТрудаПоДолжностям.Должность
	|			И КлючиДляСрезаПериодическихДанных.Период >= КлассыУсловийТрудаПоДолжностям.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиДляСрезаПериодическихДанных.ГоловнаяОрганизация,
	|	КлючиДляСрезаПериодическихДанных.ФизическоеЛицо,
	|	КлючиДляСрезаПериодическихДанных.Период,
	|	КлючиДляСрезаПериодическихДанных.СтруктурнаяЕдиница,
	|	КлючиДляСрезаПериодическихДанных.Должность,
	|	КлючиДляСрезаПериодическихДанных.Начало,
	|	КлючиДляСрезаПериодическихДанных.Окончание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКлючиДляСрезаПериодическихДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПодразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДолжности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыИзмененияДанных";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыСрезаПериодическихДанных.ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА ТерриториальныеУсловияПоПериодам.ТерриториальныеУсловияПФР В (&ИсключаемыеТерриториальныеУсловия)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)
	|		ИНАЧЕ ТерриториальныеУсловияПоПериодам.ТерриториальныеУсловияПФР
	|	КОНЕЦ КАК ТерриториальныеУсловияПФР,
	|	КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда,
	|	ДанныеОПравахНаСтрахование.ЗастрахованПФР,
	|	ДатыСрезаПериодическихДанных.ФизическоеЛицо,
	|	ДатыСрезаПериодическихДанных.Период,
	|	ДатыСрезаПериодическихДанных.Начало,
	|	ДатыСрезаПериодическихДанных.Окончание,
	|	ДатыСрезаПериодическихДанных.СтруктурнаяЕдиница,
	|	ДатыСрезаПериодическихДанных.Должность
	|ПОМЕСТИТЬ ВТЗначениеПериодическихПараметровСтажа
	|ИЗ
	|	ВТДатыСрезаПериодическихДанных КАК ДатыСрезаПериодическихДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтрахованиеИнтервалы КАК ДанныеОПравахНаСтрахование
	|		ПО ДатыСрезаПериодическихДанных.ГоловнаяОрганизация = ДанныеОПравахНаСтрахование.ГоловнаяОрганизация
	|			И ДатыСрезаПериодическихДанных.ФизическоеЛицо = ДанныеОПравахНаСтрахование.ФизическоеЛицо
	|			И (ДатыСрезаПериодическихДанных.Период МЕЖДУ ДанныеОПравахНаСтрахование.ДатаНачалаИнтервала И ДанныеОПравахНаСтрахование.ДатаОкончанияИнтервала)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ПО ДатыСрезаПериодическихДанных.Должность = КлассыУсловийТрудаПоДолжностям.Должность
	|			И ДатыСрезаПериодическихДанных.ДатаСрезаКлассаУсловийТруда = КлассыУсловийТрудаПоДолжностям.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловияПоПериодам
	|		ПО ДатыСрезаПериодическихДанных.ДатаСрезаТерриториальныхУсловий = ТерриториальныеУсловияПоПериодам.Период
	|			И ДатыСрезаПериодическихДанных.СтруктурнаяЕдиница = ТерриториальныеУсловияПоПериодам.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыСрезаПериодическихДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПраваНаСтрахованиеИнтервалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКлассыУсловийТрудаПоДолжностям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТерриториальныеУсловияПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанныеОПравахНаСтрахование";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначениеПериодическихПараметровСтажа.ГоловнаяОрганизация,
	|	ЗначениеПериодическихПараметровСтажа.ФизическоеЛицо,
	|	ЗначениеПериодическихПараметровСтажа.ТерриториальныеУсловияПФР,
	|	ЗначениеПериодическихПараметровСтажа.КлассУсловийТруда,
	|	ЗначениеПериодическихПараметровСтажа.ЗастрахованПФР,
	|	ЗначениеПериодическихПараметровСтажа.Период КАК ДатаНачалаПериода,
	|	ЗначениеПериодическихПараметровСтажа.СтруктурнаяЕдиница,
	|	ЗначениеПериодическихПараметровСтажа.Начало КАК НачалоИсходногоПериода,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЗначениеПериодическихПараметровСтажаСлед.Период ЕСТЬ NULL 
	|				ТОГДА ЗначениеПериодическихПараметровСтажа.Окончание
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(ЗначениеПериодическихПараметровСтажаСлед.Период, ДЕНЬ, -1)
	|		КОНЕЦ) КАК ДатаОкончанияПериода,
	|	ЗначениеПериодическихПараметровСтажа.Должность
	|ПОМЕСТИТЬ ВТПериодическиеПараметрыСтажаИнтервалы
	|ИЗ
	|	ВТЗначениеПериодическихПараметровСтажа КАК ЗначениеПериодическихПараметровСтажа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначениеПериодическихПараметровСтажа КАК ЗначениеПериодическихПараметровСтажаСлед
	|		ПО ЗначениеПериодическихПараметровСтажа.ГоловнаяОрганизация = ЗначениеПериодическихПараметровСтажаСлед.ГоловнаяОрганизация
	|			И ЗначениеПериодическихПараметровСтажа.ФизическоеЛицо = ЗначениеПериодическихПараметровСтажаСлед.ФизическоеЛицо
	|			И ЗначениеПериодическихПараметровСтажа.Начало = ЗначениеПериодическихПараметровСтажаСлед.Начало
	|			И ЗначениеПериодическихПараметровСтажа.Окончание = ЗначениеПериодическихПараметровСтажаСлед.Окончание
	|			И ЗначениеПериодическихПараметровСтажа.Период < ЗначениеПериодическихПараметровСтажаСлед.Период
	|ГДЕ
	|	ЗначениеПериодическихПараметровСтажа.ЗастрахованПФР
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначениеПериодическихПараметровСтажа.ГоловнаяОрганизация,
	|	ЗначениеПериодическихПараметровСтажа.ФизическоеЛицо,
	|	ЗначениеПериодическихПараметровСтажа.ТерриториальныеУсловияПФР,
	|	ЗначениеПериодическихПараметровСтажа.КлассУсловийТруда,
	|	ЗначениеПериодическихПараметровСтажа.ЗастрахованПФР,
	|	ЗначениеПериодическихПараметровСтажа.Период,
	|	ЗначениеПериодическихПараметровСтажа.СтруктурнаяЕдиница,
	|	ЗначениеПериодическихПараметровСтажа.Начало,
	|	ЗначениеПериодическихПараметровСтажа.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗначениеПериодическихПараметровСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтчетныеПериоды";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.Организация КАК Организация,
	|	ИсходныеДанныеУчетаСтажа.ОтчетныйПериод КАК ОтчетныйПериод,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ИсходныеДанныеУчетаСтажа.ТипДоговора КАК ТипДоговора,
	|	ПериодическиеПараметрыСтажаИнтервалы.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ПериодическиеПараметрыСтажаИнтервалы.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеОснованиеВыслугиЛет
	|				И ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии В (ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_11ВП), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_11ГР), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_12), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_14), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_15), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_СП), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.САМОЛЕТ))
	|				И ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)
	|	КОНЕЦ КАК ОснованиеВыслугиЛет,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеОсобыеУсловияТруда
	|				И ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда
	|		КОГДА ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый))
	|				И ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.Ст28_СЕВ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда В (ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.Ст27_3), ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.Ст27_4))
	|				И ИсходныеДанныеУчетаСтажа.ФизическоеЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|	КОНЕЦ КАК ОсобыеУсловияТруда,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии = ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)
	|				И ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КодПозицииСписка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|	КОНЕЦ КАК КодПозицииСписка,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|				И ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеТерриториальныеУсловия
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ТерриториальныеУсловия
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.ТерриториальныеУсловияПФР, ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)
	|	КОНЕЦ КАК ТерриториальныеУсловия,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|				И ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеТерриториальныеУсловияДополнительные
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ТерриториальныеУсловияДополнительные
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ЕСТЬNULL(ТерриториальныеУсловияДополнительныеПФР.ТерриториальныеУсловияПФР, ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)
	|	КОНЕЦ КАК ТерриториальныеУсловияДополнительные,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеТерриториальныеУсловия
	|				И ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|				И ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|				И ИсходныеДанныеУчетаСтажа.ТерриториальныеУсловия В (ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКСР), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКСМ))
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КоличествоСтавок
	|		КОГДА НЕ ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|			ТОГДА 0
	|		КОГДА НЕ ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА 0
	|		КОГДА ПериодическиеПараметрыСтажаИнтервалы.ТерриториальныеУсловияПФР В (ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКСР), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКСМ))
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КоличествоСтавок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПараметрТерриториальныхУсловий,
	|	ВЫБОР
	|		КОГДА НЕ ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА 0
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии В (ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_ПД), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_ГДХР), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_СМ), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_СМХР), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_ГД))
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КоличествоСтавок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТретийПараметрВыслугиЛет,
	|	ИсходныеДанныеУчетаСтажа.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|	ИсходныеДанныеУчетаСтажа.ЗамещениеГосударственныхМуниципальныхДолжностей КАК ЗамещениеГосударственныхМуниципальныхДолжностей
	|ПОМЕСТИТЬ ВТДанныеУчетаСтажаПФРНеСгруппированные
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодическиеПараметрыСтажаИнтервалы КАК ПериодическиеПараметрыСтажаИнтервалы
	|		ПО ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация = ПериодическиеПараметрыСтажаИнтервалы.ГоловнаяОрганизация
	|			И ИсходныеДанныеУчетаСтажа.ФизическоеЛицо = ПериодическиеПараметрыСтажаИнтервалы.ФизическоеЛицо
	|			И ИсходныеДанныеУчетаСтажа.Начало = ПериодическиеПараметрыСтажаИнтервалы.НачалоИсходногоПериода
	|			И ИсходныеДанныеУчетаСтажа.СтруктурнаяЕдиница = ПериодическиеПараметрыСтажаИнтервалы.СтруктурнаяЕдиница
	|			И ИсходныеДанныеУчетаСтажа.Должность = ПериодическиеПараметрыСтажаИнтервалы.Должность
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТерриториальныеУсловияДополнительныеПФР КАК ТерриториальныеУсловияДополнительныеПФР
	|		ПО ИсходныеДанныеУчетаСтажа.ВладелецДопТерриторий = ТерриториальныеУсловияДополнительныеПФР.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачалоПериодовСтажа.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НачалоПериодовСтажа.Организация КАК Организация,
	|	НачалоПериодовСтажа.ОтчетныйПериод КАК ОтчетныйПериод,
	|	НачалоПериодовСтажа.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачалоПериодовСтажа.ТипДоговора КАК ТипДоговора,
	|	НачалоПериодовСтажа.ДатаНачалаПериода КАК ГраницаПериода,
	|	НачалоПериодовСтажа.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|	НачалоПериодовСтажа.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|	НачалоПериодовСтажа.КодПозицииСписка КАК КодПозицииСписка,
	|	НачалоПериодовСтажа.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	НачалоПериодовСтажа.ТерриториальныеУсловияДополнительные КАК ТерриториальныеУсловияДополнительные,
	|	НачалоПериодовСтажа.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|	НачалоПериодовСтажа.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|	НачалоПериодовСтажа.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|	НачалоПериодовСтажа.ЗамещениеГосударственныхМуниципальныхДолжностей КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
	|	СУММА(НачалоПериодовСтажа.ПризнакГраницыПериодов) КАК ПризнакГраницыПериодов
	|ПОМЕСТИТЬ ВТГраницыПериодов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеУчетаСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		ДанныеУчетаСтажаПФР.Организация КАК Организация,
	|		ДанныеУчетаСтажаПФР.ОтчетныйПериод КАК ОтчетныйПериод,
	|		ДанныеУчетаСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДанныеУчетаСтажаПФР.ТипДоговора КАК ТипДоговора,
	|		ДанныеУчетаСтажаПФР.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|		ДанныеУчетаСтажаПФР.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|		ДанныеУчетаСтажаПФР.КодПозицииСписка КАК КодПозицииСписка,
	|		ДанныеУчетаСтажаПФР.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|		ДанныеУчетаСтажаПФР.ТерриториальныеУсловияДополнительные КАК ТерриториальныеУсловияДополнительные,
	|		ДанныеУчетаСтажаПФР.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|		ДанныеУчетаСтажаПФР.ЗамещениеГосударственныхМуниципальныхДолжностей КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
	|		1 КАК ПризнакГраницыПериодов
	|	ИЗ
	|		ВТДанныеУчетаСтажаПФРНеСгруппированные КАК ДанныеУчетаСтажаПФР
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеУчетаСтажаПФР.ГоловнаяОрганизация,
	|		ДанныеУчетаСтажаПФР.Организация,
	|		ДанныеУчетаСтажаПФР.ОтчетныйПериод,
	|		ДанныеУчетаСтажаПФР.ФизическоеЛицо,
	|		ДанныеУчетаСтажаПФР.ТипДоговора,
	|		ДОБАВИТЬКДАТЕ(ДанныеУчетаСтажаПФР.ДатаОкончанияПериода, ДЕНЬ, 1),
	|		ДанныеУчетаСтажаПФР.ОснованиеВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ОсобыеУсловияТруда,
	|		ДанныеУчетаСтажаПФР.КодПозицииСписка,
	|		ДанныеУчетаСтажаПФР.ТерриториальныеУсловия,
	|		ДанныеУчетаСтажаПФР.ТерриториальныеУсловияДополнительные,
	|		ДанныеУчетаСтажаПФР.ПараметрТерриториальныхУсловий,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрИсчисляемогоСтажа,
	|		ДанныеУчетаСтажаПФР.ЗамещениеГосударственныхМуниципальныхДолжностей,
	|		-1
	|	ИЗ
	|		ВТДанныеУчетаСтажаПФРНеСгруппированные КАК ДанныеУчетаСтажаПФР) КАК НачалоПериодовСтажа
	|
	|СГРУППИРОВАТЬ ПО
	|	НачалоПериодовСтажа.ГоловнаяОрганизация,
	|	НачалоПериодовСтажа.ОсобыеУсловияТруда,
	|	НачалоПериодовСтажа.КодПозицииСписка,
	|	НачалоПериодовСтажа.ТипДоговора,
	|	НачалоПериодовСтажа.ОснованиеВыслугиЛет,
	|	НачалоПериодовСтажа.Организация,
	|	НачалоПериодовСтажа.ОтчетныйПериод,
	|	НачалоПериодовСтажа.ФизическоеЛицо,
	|	НачалоПериодовСтажа.ДатаНачалаПериода,
	|	НачалоПериодовСтажа.ТерриториальныеУсловия,
	|	НачалоПериодовСтажа.ПараметрТерриториальныхУсловий,
	|	НачалоПериодовСтажа.ТретийПараметрВыслугиЛет,
	|	НачалоПериодовСтажа.ТретийПараметрИсчисляемогоСтажа,
	|	НачалоПериодовСтажа.ЗамещениеГосударственныхМуниципальныхДолжностей,
	|	НачалоПериодовСтажа.ТерриториальныеУсловияДополнительные
	|
	|ИМЕЮЩИЕ
	|	СУММА(НачалоПериодовСтажа.ПризнакГраницыПериодов) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачалоПериодов.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НачалоПериодов.Организация КАК Организация,
	|	НачалоПериодов.ОтчетныйПериод КАК ОтчетныйПериод,
	|	НачалоПериодов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачалоПериодов.ТипДоговора КАК ТипДоговора,
	|	НачалоПериодов.ГраницаПериода КАК ДатаНачалаПериода,
	|	НачалоПериодов.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|	НачалоПериодов.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|	НачалоПериодов.КодПозицииСписка КАК КодПозицииСписка,
	|	НачалоПериодов.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	НачалоПериодов.ТерриториальныеУсловияДополнительные КАК ТерриториальныеУсловияДополнительные,
	|	НачалоПериодов.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|	НачалоПериодов.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|	НачалоПериодов.ЗамещениеГосударственныхМуниципальныхДолжностей КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
	|	МИНИМУМ(ДОБАВИТЬКДАТЕ(ОкончаниеПериодов.ГраницаПериода, ДЕНЬ, -1)) КАК ДатаОкончанияПериода,
	|	НачалоПериодов.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|	ЗНАЧЕНИЕ(Справочник.ОснованияИсчисляемогоСтраховогоСтажа.ПустаяСсылка) КАК ОснованиеИсчисляемогоСтажа,
	|	"""" КАК ПервыйПараметрИсчисляемогоСтажа,
	|	"""" КАК ВторойПараметрИсчисляемогоСтажа,
	|	"""" КАК ПервыйПараметрВыслугиЛет,
	|	"""" КАК ВторойПараметрВыслугиЛет,
	|	ЛОЖЬ КАК ФиксСтаж,
	|	ИСТИНА КАК СложныйСтаж
	|ПОМЕСТИТЬ ВТДанныеУчетаСтажаПФР
	|ИЗ
	|	ВТГраницыПериодов КАК НачалоПериодов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТГраницыПериодов КАК ОкончаниеПериодов
	|		ПО НачалоПериодов.ГоловнаяОрганизация = ОкончаниеПериодов.ГоловнаяОрганизация
	|			И НачалоПериодов.Организация = ОкончаниеПериодов.Организация
	|			И НачалоПериодов.ОтчетныйПериод = ОкончаниеПериодов.ОтчетныйПериод
	|			И НачалоПериодов.ФизическоеЛицо = ОкончаниеПериодов.ФизическоеЛицо
	|			И НачалоПериодов.ТипДоговора = ОкончаниеПериодов.ТипДоговора
	|			И (НачалоПериодов.ПризнакГраницыПериодов = 1)
	|			И (ОкончаниеПериодов.ПризнакГраницыПериодов = -1)
	|			И НачалоПериодов.ГраницаПериода < ОкончаниеПериодов.ГраницаПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НачалоПериодов.Организация,
	|	НачалоПериодов.ТерриториальныеУсловия,
	|	НачалоПериодов.ФизическоеЛицо,
	|	НачалоПериодов.ГраницаПериода,
	|	НачалоПериодов.ГоловнаяОрганизация,
	|	НачалоПериодов.ОсобыеУсловияТруда,
	|	НачалоПериодов.ОтчетныйПериод,
	|	НачалоПериодов.КодПозицииСписка,
	|	НачалоПериодов.ОснованиеВыслугиЛет,
	|	НачалоПериодов.ТипДоговора,
	|	НачалоПериодов.ПараметрТерриториальныхУсловий,
	|	НачалоПериодов.ТретийПараметрВыслугиЛет,
	|	НачалоПериодов.ТретийПараметрИсчисляемогоСтажа,
	|	НачалоПериодов.ЗамещениеГосударственныхМуниципальныхДолжностей,
	|	НачалоПериодов.ТерриториальныеУсловияДополнительные";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДанныеУчетаСтажаПФР", ИмяВТРезультат);
	
	Запрос.Выполнить();
	
	ИменаВТ = Новый Массив;
	ИменаВТ.Добавить("ВТИсходныеДанныеУчетаСтажа");
	ИменаВТ.Добавить(СтрЗаменить("ВТДанныеУчетаСтажаПФРНеСгруппированные", "ВТДанныеУчетаСтажаПФР", ИмяВТРезультат));
	ИменаВТ.Добавить("ВТГраницыПериодов");
	ИменаВТ.Добавить("ВТПериодическиеПараметрыСтажаИнтервалы");
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, ИменаВТ);
	
КонецПроцедуры

Процедура УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, ПсевдонимПоля, ТекстыДополнительныхПолейЗапроса)
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "NULL КАК " + ПсевдонимПоля, ТекстыДополнительныхПолейЗапроса[ПсевдонимПоля] + " КАК " + ПсевдонимПоля);		
КонецПроцедуры	

Функция ТекстДополнительныхПолейЗапросаВТДанныеУчетаСтажаПФР()
	Возврат УчетСтажаПФРВнутренний.ТекстДополнительныхПолейЗапросаВТДанныеУчетаСтажаПФР();	
КонецФункции	

Процедура СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2014(МенеджерВременныхТаблиц)
	УчетСтажаПФРВнутренний.СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2014(МенеджерВременныхТаблиц);	
КонецПроцедуры	

Процедура СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2013(МенеджерВременныхТаблиц)
	УчетСтажаПФРВнутренний.СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2013(МенеджерВременныхТаблиц);	
КонецПроцедуры	

Процедура СоздатьВТОтчетныеПериоды(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания)
	
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("ОтчетныйПериод", Новый ОписаниеТипов("Дата"));
	ТаблицаПериодов.Колонки.Добавить("ОкончаниеПериода", Новый ОписаниеТипов("Дата"));
	ТаблицаПериодов.Колонки.Добавить("ИспользоватьПараметрыСтажа2014", Новый ОписаниеТипов("Булево"));
	ТаблицаПериодов.Колонки.Добавить("ИспользоватьПараметрыСтажа2013", Новый ОписаниеТипов("Булево"));
	
	ТекущийПериод = ?(ДатаОкончания >= '20170101', НачалоГода(ДатаОкончания), НачалоКвартала(ДатаОкончания));
	
	Пока ТекущийПериод >= ДатаНачала Цикл
		СтрокаТаблицы = ТаблицаПериодов.Добавить();
		СтрокаТаблицы.ОтчетныйПериод = ТекущийПериод;
		СтрокаТаблицы.ОкончаниеПериода = НачалоДня(ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаСтажаПерсУчета(ТекущийПериод));
		Если ТекущийПериод >= '20140101' Тогда
			СтрокаТаблицы.ИспользоватьПараметрыСтажа2014 = Истина;
		Иначе
			СтрокаТаблицы.ИспользоватьПараметрыСтажа2013 = Истина;	
		КонецЕсли;	
		ТекущийПериод = ПерсонифицированныйУчетКлиентСервер.ПредшествующийОтчетныйПериодСтажаПерсУчета(ТекущийПериод);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаПериодов", ТаблицаПериодов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПериодов.ОтчетныйПериод,
	|	ТаблицаПериодов.ОкончаниеПериода,
	|	ТаблицаПериодов.ИспользоватьПараметрыСтажа2014,
	|	ТаблицаПериодов.ИспользоватьПараметрыСтажа2013
	|ПОМЕСТИТЬ ВТОтчетныеПериоды
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов";
		
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТТипыРегистраторовПриемаНаРаботу(МенеджерВременныхТаблиц)
	УчетСтажаПФРВнутренний.СоздатьВТТипыРегистраторовПриемаНаРаботу(МенеджерВременныхТаблиц);
КонецПроцедуры

Функция ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2014()
	
	МассивПараметров = ПерсонифицированныйУчет.ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию();
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка());

	Возврат МассивПараметров
	
КонецФункции 

Функция ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2013()

	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ);
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД);
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка());

	Возврат МассивПараметров
	
КонецФункции 

// Первоначальное заполнение данных вторичного регистра.

Процедура ЗаполнитьПервоначальныеДанныеВторичногоРегистра() Экспорт 
	ПоследнееОбработанноеФизическоеЛицо = Неопределено;
	
	ПродолжатьОбновление = Истина;
	
	Пока ПродолжатьОбновление Цикл
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПоследнееФизическоеЛицоВыборки = СоздатьВТПорцияФизическихЛицДляОбновления(МенеджерВременныхТаблиц, ПоследнееОбработанноеФизическоеЛицо);
		
		ИзмеренияОтбора = Новый Массив;
		ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		
		ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина);
		
		Если ПоследнееФизическоеЛицоВыборки = Неопределено Тогда
			ПродолжатьОбновление = Ложь;
		Иначе
			ПоследнееОбработанноеФизическоеЛицо = ПоследнееФизическоеЛицоВыборки;
		КонецЕсли;
	КонецЦикла;	
			
КонецПроцедуры	

Функция СоздатьВТПорцияФизическихЛицДляОбновления(МенеджерВременныхТаблиц, ПоследнееОбработанноеФизическоеЛицо = Неопределено)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстУсловияФизическоеЛицо = "ИСТИНА";
	Если ПоследнееОбработанноеФизическоеЛицо <> Неопределено Тогда
		Запрос.УстановитьПараметр("ПоследнееОбработанноеФизическоеЛицо", ПоследнееОбработанноеФизическоеЛицо);
		
		ТекстУсловияФизическоеЛицо = "ПараметрыПериодовСтажаПФР.ФизическоеЛицо > &ПоследнееОбработанноеФизическоеЛицо";
	КонецЕсли;	
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Начало,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
	|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
	|		ПО ПараметрыПериодовСтажаПФР.ФизическоеЛицо = ПериодыСтажаПФР.ФизическоеЛицо
	|ГДЕ
	|	ПериодыСтажаПФР.ФизическоеЛицо ЕСТЬ NULL 
	|	И &УсловиеФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТКлючиИзменившихсяДанных КАК ФизическиеЛица
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо УБЫВ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФизическоеЛицо;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции	

// Процедуры обновления ИБ

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.10.6";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Процедура = "УчетСтажаПФР.СкорректироватьПересекающиесяИнтервалыВторичногоРегистра";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e24dc5fc-94a4-4a8b-ae6f-4697271284e4");
	
КонецПроцедуры

Процедура ОбновитьДанныеУчетаПоУволеннымИВновьПринятым() Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ГоловнаяОрганизация,
	|	ВложенныйЗапрос.Начало,
	|	ВложенныйЗапрос.ТипДоговора,
	|	ВложенныйЗапрос.ФизическоеЛицо,
	|	СУММА(ВложенныйЗапрос.Флаг) КАК Флаг
	|ПОМЕСТИТЬ ВТУволенныеИВновьПринятые
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		ПараметрыПериодовСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПараметрыПериодовСтажаПФР.ТипДоговора КАК ТипДоговора,
	|		ПараметрыПериодовСтажаПФР.Начало КАК Начало,
	|		1 КАК Флаг
	|	ИЗ
	|		РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|	ГДЕ
	|		ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|		И НЕ ПараметрыПериодовСтажаПФР.Сторно
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация,
	|		ПараметрыПериодовСтажаПФР.ФизическоеЛицо,
	|		ПараметрыПериодовСтажаПФР.ТипДоговора,
	|		ПараметрыПериодовСтажаПФР.Начало,
	|		-1
	|	ИЗ
	|		РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|	ГДЕ
	|		ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|		И НЕ ПараметрыПериодовСтажаПФР.Сторно) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ГоловнаяОрганизация,
	|	ВложенныйЗапрос.ТипДоговора,
	|	ВложенныйЗапрос.ФизическоеЛицо,
	|	ВложенныйЗапрос.Начало
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Флаг) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УволенныеИВновьПринятые.ГоловнаяОрганизация,
	|	УволенныеИВновьПринятые.ТипДоговора,
	|	УволенныеИВновьПринятые.ФизическоеЛицо,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Начало,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
	|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
	|ИЗ
	|	ВТУволенныеИВновьПринятые КАК УволенныеИВновьПринятые
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
	|		ПО УволенныеИВновьПринятые.ГоловнаяОрганизация = ПериодыСтажаПФР.ГоловнаяОрганизация
	|			И УволенныеИВновьПринятые.ФизическоеЛицо = ПериодыСтажаПФР.ФизическоеЛицо
	|			И УволенныеИВновьПринятые.ТипДоговора = ПериодыСтажаПФР.ТипДоговора
	|			И УволенныеИВновьПринятые.Начало = ПериодыСтажаПФР.Начало
	|			И (ПериодыСтажаПФР.ВидСтажаПФР = ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.НеВключаетсяВСтраховойСтаж))";

	
	Запрос.Выполнить();
	
	ИзмеренияОтбора = Новый Массив;
	ИзмеренияОтбора.Добавить("ФизическоеЛицо");
	ИзмеренияОтбора.Добавить("ГоловнаяОрганизация");
	ИзмеренияОтбора.Добавить("ТипДоговора");
	
	ОбновитьДанныеВторичногоРегистра(Запрос.МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина);

КонецПроцедуры	

Процедура ЗаполнитьПолеСотрудникВРегистрахУчета(ПараметрыОбновления = Неопределено) Экспорт 
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыПериодовСтажаПФР.Регистратор,
	|	ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация,
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо,
	|	ПараметрыПериодовСтажаПФР.Начало
	|ПОМЕСТИТЬ ВТЗаписиКОбновлению
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|ГДЕ
	|	ПараметрыПериодовСтажаПФР.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И ПараметрыПериодовСтажаПФР.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|	И 1 В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				1 КАК Поле1
	|			ИЗ
	|				Справочник.Сотрудники КАК Сотрудники
	|			ГДЕ
	|				Сотрудники.ФизическоеЛицо = ПараметрыПериодовСтажаПФР.ФизическоеЛицо
	|				И Сотрудники.ГоловнаяОрганизация = ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПараметрыПериодовСтажаПФР.Регистратор,
	|	ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация,
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо,
	|	ПараметрыПериодовСтажаПФР.Начало
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|ГДЕ
	|	ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|	И ПараметрыПериодовСтажаПФР.ИспользованиеРесурсаВнутреннееСовместительство = ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.ПустаяСсылка)
	|	И ПараметрыПериодовСтажаПФР.ИспользованиеРесурсаПодразделение = ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.Установлено)
	|	И ПараметрыПериодовСтажаПФР.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	ВТЗаписиКОбновлению";
	
	Если Запрос.Выполнить().Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина); 
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	ЗаполнитьПолеСотрудникВРегистре(МенеджерВременныхТаблиц, "ПараметрыПериодовСтажаПФР", "Регистратор", ПараметрыОбновления);
КонецПроцедуры	

Процедура ОбновитьПолеСотрудникВРегистрахУчета(ПараметрыОбновления = Неопределено) Экспорт 
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТТипыРегистраторовПриемаНаРаботу(МенеджерВременныхТаблиц);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПараметрыПериодовСтажаПФР.ТипДоговора КАК ТипДоговора,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Начало,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
	|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФРСледующие
	|		ПО ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация = ПараметрыПериодовСтажаПФРСледующие.ГоловнаяОрганизация
	|			И (ПараметрыПериодовСтажаПФРСледующие.ФизическоеЛицо = ПараметрыПериодовСтажаПФР.ФизическоеЛицо)
	|			И (ПараметрыПериодовСтажаПФРСледующие.ТипДоговора = ПараметрыПериодовСтажаПФР.ТипДоговора)
	|			И (ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.СостоянияСотрудника.УВОЛЬНЕНИЕ))
	|			И ПараметрыПериодовСтажаПФР.Сотрудник = ПараметрыПериодовСтажаПФРСледующие.Сотрудник
	|			И (ПараметрыПериодовСтажаПФРСледующие.Начало >= ПараметрыПериодовСтажаПФР.Начало)
	|			И ПараметрыПериодовСтажаПФР.Регистратор <> ПараметрыПериодовСтажаПФРСледующие.Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТипыРегистраторовПриемаНаРаботу КАК ТипыРегистраторовПриемаНаРаботу
	|		ПО ТИПЗНАЧЕНИЯ(ПараметрыПериодовСтажаПФРСледующие.Регистратор) = ТипыРегистраторовПриемаНаРаботу.ТипРегистратора
	|ГДЕ
	|	ПараметрыПериодовСтажаПФРСледующие.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ТРУДОВОЙ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыПериодовСтажаПФР.Регистратор КАК Регистратор,
	|	ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПараметрыПериодовСтажаПФР.Начало КАК Начало
	|ПОМЕСТИТЬ ВТЗаписиКОбновлению
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКлючиИзменившихсяДанных КАК ПринятыеУволенныеФизическиеЛица
	|		ПО ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация = ПринятыеУволенныеФизическиеЛица.ГоловнаяОрганизация
	|			И (ПринятыеУволенныеФизическиеЛица.ФизическоеЛицо = ПараметрыПериодовСтажаПФР.ФизическоеЛицо)
	|			И (ПринятыеУволенныеФизическиеЛица.ТипДоговора = ПараметрыПериодовСтажаПФР.ТипДоговора)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	ВТЗаписиКОбновлению";
	
	Если Запрос.Выполнить().Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина); 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПолеСотрудникВРегистре(МенеджерВременныхТаблиц, "ПараметрыПериодовСтажаПФР", "Регистратор", ПараметрыОбновления);
	УчетСтажаПФР.ОбновитьДанныеВторичногоРегистра(Запрос.МенеджерВременныхТаблиц, , Истина);
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры	

Процедура ЗаполнитьПолеСотрудникВРегистре(МенеджерВременныхТаблиц, ИмяРегистра, ИмяПоляРегистратор, ПараметрыОбновления = Неопределено) Экспорт 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТЗаписиКОбновлению.ГоловнаяОрганизация,
	|	ВТЗаписиКОбновлению.ФизическоеЛицо,
	|	ВТЗаписиКОбновлению.Начало КАК Период
	|ПОМЕСТИТЬ ВТПериодыПолученияВидовЗанятости
	|ИЗ
	|	ВТЗаписиКОбновлению КАК ВТЗаписиКОбновлению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКОбновлению.Регистратор
	|ПОМЕСТИТЬ ВТКлючиОбновляемыхДанных
	|ИЗ
	|	ВТЗаписиКОбновлению КАК ЗаписиКОбновлению";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Регистратор", ИмяПоляРегистратор);
	
	Запрос.Выполнить();
	
	ОписаниеФильтра = ЗарплатаКадрыПериодическиеРегистры.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТПериодыПолученияВидовЗанятости", "ГоловнаяОрганизация, ФизическоеЛицо");
	ПараметрыПостроения = ЗарплатаКадрыПериодическиеРегистры.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ИсключатьНеИспользуемыеПоля = Ложь;
	ЗарплатаКадрыПериодическиеРегистры.СоздатьВТИмяРегистраСрезПоследних("КадроваяИсторияСотрудников", Запрос.МенеджерВременныхТаблиц, Ложь, ОписаниеФильтра, ПараметрыПостроения);	
	ЗарплатаКадрыПериодическиеРегистры.СоздатьВТИмяРегистраСрезПоследних("ВидыЗанятостиСотрудников", Запрос.МенеджерВременныхТаблиц, Ложь, ОписаниеФильтра);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадроваяИсторияСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадроваяИсторияСотрудников.Период КАК Период,
	|	КадроваяИсторияСотрудников.ПериодЗаписи КАК ПериодЗаписи,
	|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
	|	КадроваяИсторияСотрудников.ВидСобытия КАК ВидСобытия
	|ПОМЕСТИТЬ ВТКадроваяИсторияВидыЗанятости
	|ИЗ
	|	ВТКадроваяИсторияСотрудниковСрезПоследних КАК КадроваяИсторияСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыЗанятостиСотрудниковСрезПоследних КАК ВидыЗанятостиСотрудников
	|		ПО КадроваяИсторияСотрудников.Сотрудник = ВидыЗанятостиСотрудников.Сотрудник
	|			И КадроваяИсторияСотрудников.ГоловнаяОрганизация = ВидыЗанятостиСотрудников.ГоловнаяОрганизация
	|			И КадроваяИсторияСотрудников.ФизическоеЛицо = ВидыЗанятостиСотрудников.ФизическоеЛицо
	|			И КадроваяИсторияСотрудников.Период = ВидыЗанятостиСотрудников.Период
	|ГДЕ
	|	ЕСТЬNULL(ВидыЗанятостиСотрудников.ВидЗанятости, КадроваяИсторияСотрудников.УдалитьВидЗанятости) В (&ВидыЗанятости)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадроваяИсторияСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадроваяИсторияСотрудников.Период КАК Период,
	|	МАКСИМУМ(КадроваяИсторияСотрудников.ПериодЗаписи) КАК МаксимальныйПериод,
	|	КадроваяИсторияСотрудников.ВидСобытия КАК ВидСобытия
	|ПОМЕСТИТЬ ВТМаксимальныеПериодыКадровойИстории
	|ИЗ
	|	ВТКадроваяИсторияВидыЗанятости КАК КадроваяИсторияСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	КадроваяИсторияСотрудников.ГоловнаяОрганизация,
	|	КадроваяИсторияСотрудников.ФизическоеЛицо,
	|	КадроваяИсторияСотрудников.Период,
	|	КадроваяИсторияСотрудников.ВидСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадроваяИсторияСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадроваяИсторияСотрудников.Период КАК Период,
	|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
	|	КадроваяИсторияСотрудников.ВидСобытия КАК ВидСобытия,
	|	КадроваяИсторияСотрудников.ПериодЗаписи КАК ПериодЗаписи
	|ПОМЕСТИТЬ ВТСотрудникиФизическихЛиц
	|ИЗ
	|	ВТМаксимальныеПериодыКадровойИстории КАК МаксимальныеПериодыКадровойИстории
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадроваяИсторияВидыЗанятости КАК КадроваяИсторияСотрудников
	|		ПО МаксимальныеПериодыКадровойИстории.ГоловнаяОрганизация = КадроваяИсторияСотрудников.ГоловнаяОрганизация
	|			И МаксимальныеПериодыКадровойИстории.ФизическоеЛицо = КадроваяИсторияСотрудников.ФизическоеЛицо
	|			И МаксимальныеПериодыКадровойИстории.ВидСобытия = КадроваяИсторияСотрудников.ВидСобытия
	|			И МаксимальныеПериодыКадровойИстории.Период = КадроваяИсторияСотрудников.Период
	|			И МаксимальныеПериодыКадровойИстории.МаксимальныйПериод = КадроваяИсторияСотрудников.ПериодЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыПолученияВидовЗанятости.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ПериодыПолученияВидовЗанятости.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыПолученияВидовЗанятости.Период КАК Период,
	|	ЕСТЬNULL(СотрудникиФизическихЛиц.ВидСобытия, ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.ПустаяСсылка)) КАК ВидСобытия,
	|	МАКСИМУМ(ЕСТЬNULL(СотрудникиФизическихЛиц.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))) КАК Сотрудник,
	|	ЕСТЬNULL(СотрудникиФизическихЛиц.ПериодЗаписи, ПериодыПолученияВидовЗанятости.Период) КАК ПериодЗаписи
	|ПОМЕСТИТЬ ВТСотрудникиСОсновнымВидомЗанятостиПредварительно
	|ИЗ
	|	ВТПериодыПолученияВидовЗанятости КАК ПериодыПолученияВидовЗанятости
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиФизическихЛиц КАК СотрудникиФизическихЛиц
	|		ПО ПериодыПолученияВидовЗанятости.ГоловнаяОрганизация = СотрудникиФизическихЛиц.ГоловнаяОрганизация
	|			И ПериодыПолученияВидовЗанятости.ФизическоеЛицо = СотрудникиФизическихЛиц.ФизическоеЛицо
	|			И ПериодыПолученияВидовЗанятости.Период = СотрудникиФизическихЛиц.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПолученияВидовЗанятости.ГоловнаяОрганизация,
	|	ПериодыПолученияВидовЗанятости.ФизическоеЛицо,
	|	ПериодыПолученияВидовЗанятости.Период,
	|	ЕСТЬNULL(СотрудникиФизическихЛиц.ВидСобытия, ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.ПустаяСсылка)),
	|	ЕСТЬNULL(СотрудникиФизическихЛиц.ПериодЗаписи, ПериодыПолученияВидовЗанятости.Период)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.Период КАК Период,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.Сотрудник КАК Сотрудник,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ВидСобытия КАК ВидСобытия,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ПериодЗаписи КАК ПериодЗаписи
	|ПОМЕСТИТЬ ВТСотрудникиСОсновнымВидомЗанятости
	|ИЗ
	|	ВТСотрудникиСОсновнымВидомЗанятостиПредварительно КАК СотрудникиСОсновнымВидомЗанятостиПредварительно
	|ГДЕ
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ГоловнаяОрганизация,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ФизическоеЛицо,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.Период,
	|	МАКСИМУМ(Сотрудники.Ссылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.ПустаяСсылка),
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ПериодЗаписи КАК ПериодЗаписи
	|ИЗ
	|	ВТСотрудникиСОсновнымВидомЗанятостиПредварительно КАК СотрудникиСОсновнымВидомЗанятостиПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО СотрудникиСОсновнымВидомЗанятостиПредварительно.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|			И СотрудникиСОсновнымВидомЗанятостиПредварительно.ГоловнаяОрганизация = Сотрудники.ГоловнаяОрганизация
	|			И (СотрудникиСОсновнымВидомЗанятостиПредварительно.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ГоловнаяОрганизация,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ФизическоеЛицо,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.Период,
	|	СотрудникиСОсновнымВидомЗанятостиПредварительно.ПериодЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиКОбновлению.Регистратор КАК Регистратор,
	|	ЗаписиКОбновлению.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЗаписиКОбновлению.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗаписиКОбновлению.ТипДоговора КАК ТипДоговора,
	|	ЗаписиКОбновлению.Начало КАК Начало,
	|	ЗаписиКОбновлению.Окончание КАК Окончание,
	|	ЗаписиКОбновлению.Приоритет КАК Приоритет,
	|	ЗаписиКОбновлению.Сторно КАК Сторно,
	|	ЗаписиКОбновлению.ДокументОснование КАК ДокументОснование,
	|	ЗаписиКОбновлению.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ВидыЗанятостиСотрудников.ВидЗанятости, ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|			И СотрудникиСОсновнымВидомЗанятости.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|			И ЗаписиКОбновлению.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|			ТОГДА СотрудникиСОсновнымВидомЗанятости.Сотрудник
	|		ИНАЧЕ ЗаписиКОбновлению.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ЗаписиКОбновлению.ИспользованиеРесурсаВнутреннееСовместительство = ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.ПустаяСсылка)
	|				И ЗаписиКОбновлению.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|				И ЗаписиКОбновлению.ИспользованиеРесурсаПодразделение = ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.Установлено)
	|				И ЗаписиКОбновлению.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.Установлено)
	|		ИНАЧЕ ЗаписиКОбновлению.ИспользованиеРесурсаВнутреннееСовместительство
	|	КОНЕЦ КАК ИспользованиеРесурсаВнутреннееСовместительство,
	|	ЗаписиКОбновлению.*
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ЗаписиКОбновлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКлючиОбновляемыхДанных КАК КлючиОбновляемыхДанных
	|		ПО ЗаписиКОбновлению.Регистратор = КлючиОбновляемыхДанных.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиСОсновнымВидомЗанятости КАК СотрудникиСОсновнымВидомЗанятости
	|		ПО ЗаписиКОбновлению.ГоловнаяОрганизация = СотрудникиСОсновнымВидомЗанятости.ГоловнаяОрганизация
	|			И ЗаписиКОбновлению.ФизическоеЛицо = СотрудникиСОсновнымВидомЗанятости.ФизическоеЛицо
	|			И ЗаписиКОбновлению.Начало = СотрудникиСОсновнымВидомЗанятости.Период
	|			И (ВЫБОР
	|				КОГДА ЗаписиКОбновлению.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|					ТОГДА СотрудникиСОсновнымВидомЗанятости.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
	|						ИЛИ СотрудникиСОсновнымВидомЗанятости.ПериодЗаписи < СотрудникиСОсновнымВидомЗанятости.Период
	|				ИНАЧЕ СотрудникиСОсновнымВидомЗанятости.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыЗанятостиСотрудниковСрезПоследних КАК ВидыЗанятостиСотрудников
	|		ПО ЗаписиКОбновлению.ГоловнаяОрганизация = ВидыЗанятостиСотрудников.ГоловнаяОрганизация
	|			И ЗаписиКОбновлению.Сотрудник = ВидыЗанятостиСотрудников.Сотрудник
	|			И ЗаписиКОбновлению.ФизическоеЛицо = ВидыЗанятостиСотрудников.ФизическоеЛицо
	|			И ЗаписиКОбновлению.Начало = ВидыЗанятостиСотрудников.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	ВидыЗанятости = Новый Массив;
	ВидыЗанятости.Добавить(Перечисления.ВидыЗанятости.ОсновноеМестоРаботы);
	ВидыЗанятости.Добавить(Перечисления.ВидыЗанятости.Совместительство);
	Запрос.УстановитьПараметр("ВидыЗанятости", ВидыЗанятости);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.ПараметрыПериодовСтажаПФР", "РегистрСведений." + ИмяРегистра);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Регистратор", ИмяПоляРегистратор);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Если ИмяПоляРегистратор = "Регистратор" Тогда
		ПространствоБлокировки = "РегистрСведений." + ИмяРегистра + ".НаборЗаписей";
	Иначе
		ПространствоБлокировки = "РегистрСведений." + ИмяРегистра;
	КонецЕсли;	

	Пока Выборка.СледующийПоЗначениюПоля(ИмяПоляРегистратор) Цикл
		Набор = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
		Набор.Отбор[ИмяПоляРегистратор].Установить(Выборка[ИмяПоляРегистратор]);
		Набор.ОбменДанными.Загрузка = Истина;
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, ПространствоБлокировки, ИмяПоляРегистратор, Выборка[ИмяПоляРегистратор]) Тогда 
			Продолжить;
		КонецЕсли;	
		
		Пока Выборка.Следующий() Цикл
			ЗаписьНабора = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, Выборка);
		КонецЦикла;	
		
		Набор.Записать();
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
	КонецЦикла;
КонецПроцедуры	

Процедура СкорректироватьПересекающиесяИнтервалыВторичногоРегистра(ПараметрыОбновления = Неопределено) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПериодыСтажаПФР.ТипДоговора КАК ТипДоговора,
		|	ПериодыСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Начало,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
		|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
		|ИЗ
		|	РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФРПересекающие
		|		ПО ПериодыСтажаПФР.ГоловнаяОрганизация = ПериодыСтажаПФРПересекающие.ГоловнаяОрганизация
		|			И ПериодыСтажаПФР.ФизическоеЛицо = ПериодыСтажаПФРПересекающие.ФизическоеЛицо
		|			И ПериодыСтажаПФР.ТипДоговора = ПериодыСтажаПФРПересекающие.ТипДоговора
		|			И ПериодыСтажаПФР.Начало >= ПериодыСтажаПФРПересекающие.Начало
		|			И (ПериодыСтажаПФР.Начало <= ПериодыСтажаПФРПересекающие.Окончание
		|				ИЛИ ПериодыСтажаПФРПересекающие.Окончание = ДАТАВРЕМЯ(1, 1, 1))
		|ГДЕ
		|	ПериодыСтажаПФР.Начало <> ПериодыСтажаПФРПересекающие.Начало
		|	ИЛИ ПериодыСтажаПФР.Окончание <> ПериодыСтажаПФРПересекающие.Окончание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВТКлючиИзменившихсяДанных.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТКлючиИзменившихсяДанных КАК ВТКлючиИзменившихсяДанных";
	
	
	Если Запрос.Выполнить().Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина); 
		Возврат;
	КонецЕсли;
	
	ОбновитьДанныеВторичногоРегистра(Запрос.МенеджерВременныхТаблиц,, Истина);
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ВосстановитьОтсутствующиеИнтервалыВторичногоРегистра(ПараметрыОбновления = Неопределено) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Начало,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
		|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
		|ИЗ
		|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПериодыСтажаПФР
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФРПересекающие
		|		ПО ПериодыСтажаПФР.ГоловнаяОрганизация = ПериодыСтажаПФРПересекающие.ГоловнаяОрганизация
		|			И ПериодыСтажаПФР.ФизическоеЛицо = ПериодыСтажаПФРПересекающие.ФизическоеЛицо
		|			И ПериодыСтажаПФР.ТипДоговора = ПериодыСтажаПФРПересекающие.ТипДоговора
		|			И ПериодыСтажаПФР.Начало >= ПериодыСтажаПФРПересекающие.Начало
		|			И (ПериодыСтажаПФР.Начало <= ВЫБОР
		|				КОГДА ПериодыСтажаПФРПересекающие.Окончание = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА &МаксимальнаяДата
		|				ИНАЧЕ ПериодыСтажаПФРПересекающие.Окончание
		|			КОНЕЦ)
		|ГДЕ
		|	1 В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				1
		|			ИЗ
		|				РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
		|			ГДЕ
		|				ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация = ПериодыСтажаПФР.ГоловнаяОрганизация
		|				И ПараметрыПериодовСтажаПФР.Сотрудник = ПериодыСтажаПФР.Сотрудник
		|				И ПараметрыПериодовСтажаПФР.Начало <= ПериодыСтажаПФР.Начало
		|				И ПараметрыПериодовСтажаПФР.ИспользованиеРесурсаВнутреннееСовместительство = ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.Установлено))
		|	И НЕ 1 В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					1
		|				ИЗ
		|					РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
		|				ГДЕ
		|					ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация = ПериодыСтажаПФР.ГоловнаяОрганизация
		|					И ПараметрыПериодовСтажаПФР.Сотрудник = ПериодыСтажаПФР.Сотрудник
		|					И ПараметрыПериодовСтажаПФР.Начало <= ПериодыСтажаПФР.Начало
		|					И ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение))
		|	И ПериодыСтажаПФРПересекающие.Начало ЕСТЬ NULL
		|	И (ПериодыСтажаПФР.ТипДоговора = &ГражданскоПравовой
		|			ИЛИ НЕ ПериодыСтажаПФР.ВнутреннееСовместительство)
		|	И ПериодыСтажаПФР.ВидСтажаПФР <> &НеВключаетсяВСтраховойСтаж
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВТКлючиИзменившихсяДанных.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТКлючиИзменившихсяДанных КАК ВТКлючиИзменившихсяДанных";
	
	Запрос.УстановитьПараметр("ГражданскоПравовой", Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой);
	Запрос.УстановитьПараметр("НеВключаетсяВСтраховойСтаж", Перечисления.ВидыСтажаПФР2014.НеВключаетсяВСтраховойСтаж);
	Запрос.УстановитьПараметр("МаксимальнаяДата", ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата());
	Если Запрос.Выполнить().Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина); 
		Возврат;
	КонецЕсли;
	
	ИзмеренияОтбора = Новый Массив;
	ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		
	ОбновитьДанныеВторичногоРегистра(Запрос.МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина);
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

#КонецОбласти

