////////////////////////////////////////////////////////////////////////////////
// Подсистема "Взаиморасчеты с сотрудниками ВХО".
//
////////////////////////////////////////////////////////////////////////////////


#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ПлатежноеПоручение", "Дата", "Зарплата", "Организация");
	
КонецПроцедуры

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
//
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ВнешниеХозяйственныеОперации.ВзаиморасчетыССотрудникамиВХО") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("Документы.ПлатежноеПоручение");
		Модуль.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВедомостиПлатежногоДокументаПеречисленияЗарплаты(ПлатежныйДокумент, МассивВедомостей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПлатежныйДокумент", ПлатежныйДокумент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПлатежныйДокумент.Ведомость КАК Ведомость
	|ИЗ
	|	Документ.ПлатежноеПоручение.Ведомости КАК ПлатежныйДокумент
	|ГДЕ
	|	ПлатежныйДокумент.Ссылка = &ПлатежныйДокумент
	|	И НЕ ПлатежныйДокумент.Ссылка.ПометкаУдаления";
	
	МассивВедомостей = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ведомость");
	
КонецПроцедуры

Процедура ЗаполнитьМетаданныеПлатежногоДокументаПеречисленияЗарплаты(МетаданныеДокумента) Экспорт
	МетаданныеДокумента = Метаданные.Документы.ПлатежноеПоручение
КонецПроцедуры

Процедура ДополнитьПлатежныйДокумент(ПлатежныйДокумент, МассивВедомостей) Экспорт
	
	ПлатежныйДокументОбъект = ПлатежныйДокумент.ПолучитьОбъект();
	
	Для каждого Ведомость Из МассивВедомостей Цикл
		Если ПлатежныйДокументОбъект.Ведомости.Найти(Ведомость, "Ведомость") = Неопределено Тогда
			НоваяСтрока = ПлатежныйДокументОбъект.Ведомости.Добавить();
			НоваяСтрока.Ведомость = Ведомость;
		КонецЕсли;
	КонецЦикла;
	
	ПлатежныйДокументОбъект.Записать();
	
КонецПроцедуры

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ПлатежноеПоручение);
	
КонецПроцедуры

Процедура ДополнитьТаблицуФизическиеЛицаПоВедомостям(ФизическиеЛица, ВедомостиДокумента) Экспорт
	
	ВзаиморасчетыССотрудникамиВХОВнутренний.ДополнитьТаблицуФизическиеЛицаПоВедомостям(ФизическиеЛица, ВедомостиДокумента);
	
КонецПроцедуры


#КонецОбласти
