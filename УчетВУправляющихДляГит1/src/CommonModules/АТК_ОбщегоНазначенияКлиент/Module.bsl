
#Область Обработчики_работы_с_файлами

////////////////////////////////////////////////////////////////////////////////
// Обработчики работы с файлами.

// Показывает диалог выбора файлов и помещает выбранные файлы во временное хранилище.
//  Совмещает работу методов глобального метода НачатьПомещениеФайла и ПоместитьФайлы,
//  возвращая идентичный результат вне зависимости от того, подключено расширение работы с файлами, или нет.
//
// Параметры:
//   ОбработчикЗавершения  - ОписаниеОповещения - Описание процедуры, принимающей результат выбора.
//   ИдентификаторФормы    - УникальныйИдентификатор - Уникальный идентификатор формы, из которой выполняется
//                                                     размещение файла.
//   НачальноеИмяФайла     - Строка - Полный путь и имя файла, которые будут предложены пользователю в начале выбора.
//   ПараметрыДиалога      - Структура, Неопределено - См. свойства ДиалогВыбораФайла в синтакс-помощнике.
//       Используется в случае, если удалось подключить расширение работы с файлами.
//
// Значение первого параметра, возвращаемого в ОбработчикРезультата:
//   ПомещенныеФайлы - Результат выбора.
//       * - Неопределено - Пользователь отказался от выбора.
//       * - Массив из ОписаниеПереданногоФайла, Структура - Пользователь выбрал файл.
//           ** Имя      - Строка - Полное имя выбранного файла.
//           ** Хранение - Строка - Адрес во временном хранилище, по которому размещен файл.
//
// Ограничения:
//   Используется только для интерактивного выбора в диалоге.
//   Не используется для выбора каталогов - эта опция не поддерживается веб-клиентом.
//   Не поддерживается множественный выбор в веб-клиенте, если не установлено расширение работы с файлами.
//   Не поддерживается передача адреса временного хранилища.
//
Процедура ПоказатьПомещениеФайла(ОбработчикЗавершения, ИдентификаторФормы, НачальноеИмяФайла, ПараметрыДиалога) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ОбработчикЗавершения", ОбработчикЗавершения);
	Параметры.Вставить("ИдентификаторФормы", ИдентификаторФормы);
	Параметры.Вставить("НачальноеИмяФайла", НачальноеИмяФайла);
	Параметры.Вставить("ПараметрыДиалога", ПараметрыДиалога);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьПомещениеФайлаПриПодключенииРасширенияРаботыСФайлами", ЭтотОбъект, Параметры);
	ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

// Предлагает пользователю установить расширение работы с файлами в веб-клиенте.
//
// Предназначена для использования в начале участков кода, в которых ведется работа с файлами.
// Например:
//
//    Оповещение = Новый ОписаниеОповещения("ПечатьДокументаЗавершение", ЭтотОбъект);
//    ТекстСообщения = НСтр("ru = 'Для печати документа необходимо установить расширение работы с файлами.'");
//    ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Оповещение, ТекстСообщения);
//
//    Процедура ПечатьДокументаЗавершение(РасширениеПодключено, ДополнительныеПараметры) Экспорт
//      Если РасширениеПодключено Тогда
//        // код печати документа, рассчитывающий на то, что расширение подключено.
//        // ...
//      Иначе
//        // код печати документа, который работает без подключенного расширения.
//        // ...
//      КонецЕсли;
//
// Параметры:
//   ОписаниеОповещенияОЗакрытии    - ОписаниеОповещения - описание процедуры,
//                                    которая будет вызвана после закрытия формы со следующими параметрами:
//                                      РасширениеПодключено    - Булево - Истина, если расширение было подключено.
//                                      ДополнительныеПараметры - Произвольный - параметры, заданные в
//                                                                               ОписаниеОповещенияОЗакрытии.
//   ТекстПредложения                - Строка - текст сообщения. Если не указан, то выводится текст по умолчанию.
//   ВозможноПродолжениеБезУстановки - Булево - если Истина, будет показана кнопка ПродолжитьБезУстановки,
//                                              если Ложь, будет показана кнопка Отмена.
//
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещенияОЗакрытии, ТекстПредложения = "", 
	ВозможноПродолжениеБезУстановки = Истина) Экспорт
	
	ОписаниеОповещенияЗавершение = Новый ОписаниеОповещения("ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиЗавершение",
		ЭтотОбъект, ОписаниеОповещенияОЗакрытии);
	
#Если Не ВебКлиент Тогда
	// В тонком и толстом клиентах расширение подключено всегда.
	ВыполнитьОбработкуОповещения(ОписаниеОповещенияЗавершение, "ПодключениеНеТребуется");
	Возврат;
#КонецЕсли
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОписаниеОповещенияЗавершение", ОписаниеОповещенияЗавершение);
	ДополнительныеПараметры.Вставить("ТекстПредложения", ТекстПредложения);
	ДополнительныеПараметры.Вставить("ВозможноПродолжениеБезУстановки", ВозможноПродолжениеБезУстановки);
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиПриУстановкеРасширения",
		ЭтотОбъект, ДополнительныеПараметры);
	НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	
КонецПроцедуры

// Процедура выполняется при установке расширения работы с файлами.
//
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиПриУстановкеРасширения(Подключено, ДополнительныеПараметры) Экспорт
	
	// Если расширение и так уже подключено, незачем про него спрашивать.
	Если Подключено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияЗавершение, "ПодключениеНеТребуется");
		Возврат;
	КонецЕсли;
	
	// В веб клиенте под MacOS расширение не доступно.
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоMacКлиент = (СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86
		Или СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86_64);
	Если ЭтоMacКлиент Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияЗавершение);
		Возврат;
	КонецЕсли;
	
	ПредлагатьУстановкуРасширенияРаботыСФайлами = Истина;
	
	Если ДополнительныеПараметры.ВозможноПродолжениеБезУстановки И Не ПредлагатьУстановкуРасширенияРаботыСФайлами Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияЗавершение);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекстПредложения", ДополнительныеПараметры.ТекстПредложения);
	ПараметрыФормы.Вставить("ВозможноПродолжениеБезУстановки", ДополнительныеПараметры.ВозможноПродолжениеБезУстановки);
	ОткрытьФорму("ОбщаяФорма.АТК_ВопросОбУстановкеРасширенияРаботыСФайлами", ПараметрыФормы,,,,,ДополнительныеПараметры.ОписаниеОповещенияЗавершение);
	
КонецПроцедуры

// Обработка завершения вопроса при установке расширения работы с файлами.
//
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиЗавершение(Действие, ОповещениеОЗакрытии) Экспорт
	
	РасширениеПодключено = (Действие = "РасширениеПодключено" Или Действие = "ПодключениеНеТребуется");
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии, РасширениеПодключено);
	
КонецПроцедуры

// Показываем диалог выбора файла.
//
Процедура ПоказатьПомещениеФайлаПриПодключенииРасширенияРаботыСФайлами(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	
	ОбработчикЗавершения = ДополнительныеПараметры.ОбработчикЗавершения;
	ИдентификаторФормы = ДополнительныеПараметры.ИдентификаторФормы;
	НачальноеИмяФайла = ДополнительныеПараметры.НачальноеИмяФайла;
	ПараметрыДиалога = ДополнительныеПараметры.ПараметрыДиалога;
	
	Если Не РасширениеПодключено Тогда
		Обработчик = Новый ОписаниеОповещения("ОбработатьРезультатПомещенияФайла", ЭтотОбъект, ОбработчикЗавершения);
		НачатьПомещениеФайла(Обработчик, , НачальноеИмяФайла, Истина, ИдентификаторФормы);
		Возврат;
	КонецЕсли;
	
	Если ПараметрыДиалога = Неопределено Тогда
		ПараметрыДиалога = Новый Структура;
	КонецЕсли;
	Если ПараметрыДиалога.Свойство("Режим") Тогда
		Режим = ПараметрыДиалога.Режим;
		Если Режим = РежимДиалогаВыбораФайла.ВыборКаталога Тогда
			ВызватьИсключение НСтр("ru = 'Выбор каталога не поддерживается'");
		КонецЕсли;
	Иначе
		Режим = РежимДиалогаВыбораФайла.Открытие;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(Режим);
	Диалог.ПолноеИмяФайла = НачальноеИмяФайла;
	ЗаполнитьЗначенияСвойств(Диалог, ПараметрыДиалога);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьРезультатПомещенияФайлов", ЭтотОбъект, ОбработчикЗавершения);
	
	Если ИдентификаторФормы <> Неопределено Тогда
		НачатьПомещениеФайлов(ОписаниеОповещения, , Диалог, Истина, ИдентификаторФормы);
	Иначе
		НачатьПомещениеФайлов(ОписаниеОповещения, , Диалог, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Обработка результата выбора файлов.
//
Процедура ОбработатьРезультатПомещенияФайлов(ПомещенныеФайлы, ОбработчикЗавершения) Экспорт
	
	ВыборВыполнен = ПомещенныеФайлы <> Неопределено;
	ОбработатьРезультатПомещенияФайла(ВыборВыполнен, ПомещенныеФайлы, Неопределено, ОбработчикЗавершения);
	
КонецПроцедуры

// Обработка результата выбора файла.
//
Процедура ОбработатьРезультатПомещенияФайла(ВыборВыполнен, АдресИлиРезультатВыбора, ВыбранноеИмяФайла, ОбработчикЗавершения) Экспорт
	
	Если ВыборВыполнен = Истина Тогда
		Если ТипЗнч(АдресИлиРезультатВыбора) = Тип("Массив") Тогда
			ПомещенныеФайлы = АдресИлиРезультатВыбора;
		Иначе
			ОписаниеФайла = Новый Структура;
			ОписаниеФайла.Вставить("Хранение", АдресИлиРезультатВыбора);
			ОписаниеФайла.Вставить("Имя",      ВыбранноеИмяФайла);
			ПомещенныеФайлы = Новый Массив;
			ПомещенныеФайлы.Добавить(ОписаниеФайла);
		КонецЕсли;
	Иначе
		ПомещенныеФайлы = Неопределено;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОбработчикЗавершения, ПомещенныеФайлы);
	
КонецПроцедуры

// Показывает диалог установки расширения, затем выгружает данные дополнительного отчета или обработки.
Процедура ВыгрузитьВФайл(ПараметрыВыгрузки) Экспорт
	ТекстСообщения = НСтр("ru = 'Для выгрузки внешней обработки (отчета) в файл рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьВФайлЗавершение", ЭтотОбъект, ПараметрыВыгрузки);
	ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик, ТекстСообщения);
КонецПроцедуры

#КонецОбласти

#Область Служебные_обработчики_асинхронных_диалогов

////////////////////////////////////////////////////////////////////////////////
// Служебные обработчики асинхронных диалогов.

// Обработчик результата работы процедуры ВыгрузитьВФайл.
Процедура ВыгрузитьВФайлЗавершение(Подключено, ПараметрыВыгрузки) Экспорт
	Перем Адрес;
	
	ПараметрыВыгрузки.Свойство("АдресДанныхОбработки", Адрес);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыВыгрузки", ПараметрыВыгрузки);
	ДополнительныеПараметры.Вставить("Адрес", Адрес);
	
	Если Не Подключено Тогда
		ПолучитьФайл(Адрес, ПараметрыВыгрузки.ИмяФайла, Истина);
		Возврат;
	КонецЕсли;
	
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохраненияФайла.ПолноеИмяФайла = ПараметрыВыгрузки.ИмяФайла;
	ДиалогСохраненияФайла.Фильтр = НСтр("ru = 'Внешние обработки (*.epf)|*.epf'");
	ДиалогСохраненияФайла.ИндексФильтра = 0;
	ДиалогСохраненияФайла.МножественныйВыбор = Ложь;
	ДиалогСохраненияФайла.Заголовок = НСтр("ru = 'Укажите файл'");
	
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьФайлВыборФайла", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогСохраненияФайла.Показать(Обработчик);
	
КонецПроцедуры

// Обработчик результата работы процедуры ВыгрузитьВФайл.
Процедура ВыгрузитьФайлВыборФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		ПолноеИмяФайла = ВыбранныеФайлы[0];
		ПолучаемыеФайлы = Новый Массив;
		ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, ДополнительныеПараметры.Адрес));
		
		Обработчик = Новый ОписаниеОповещения("ОбработкаРезультатаНеТребуется", ЭтотОбъект);
		НачатьПолучениеФайлов(Обработчик, ПолучаемыеФайлы, ПолноеИмяФайла, Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик результата работы процедуры ВыгрузитьВФайл.
Процедура ОбработкаРезультатаНеТребуется(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	// Обработка результата не требуется.
	Возврат;
КонецПроцедуры

#КонецОбласти
