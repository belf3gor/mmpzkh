
#Область ПрограммныйИнтерфейс

// Вызывается при наступлении события "Выбор" в табличной части.
// Открывает форму выбранного элемента, если имя реквизита входит в массив имен.
//
// Параметры:
// Форма - УправляемаяФорма - форма объекта,
// ТаблицаФормы - таблица формы - таблица в которой произошло событие,
// ВыбранноеПоле - поле формы
Процедура ВыборЭлементаТабличнойЧастиОткрытьФормуЭлемента(Форма, ТаблицаФормы, ВыбранноеПоле) Экспорт
	
	МассивИмен = МассивИменРеквизитовФормыОткрытия();
	
	ИмяТабличнойЧасти = ТаблицаФормы.Имя;
	
	Для Каждого ИмяЭлемента Из МассивИмен Цикл
		
		Если Форма.Элементы.Найти(ИмяТабличнойЧасти + ИмяЭлемента) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Форма.Элементы[ИмяТабличнойЧасти + ИмяЭлемента] = ВыбранноеПоле Тогда
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ТаблицаФормы.ТекущиеДанные[ИмяЭлемента]);
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НавигационнаяСсылка);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ВыборОснования

// Открывает форму выбора документа-основания по исходящей транспортной операции ВЕТИС.
//
// Параметры:
//  ФормаВладелец           - УправляемаяФорма   - форма, из которой выполняется команда выбора,
//  ОповещениеПриЗавершении - ОписаниеОповещения - действие формы после завершения выбора,
//  ИмяДокумента            - Строка             - имя метаданных документа-основания.
//
Процедура ОткрытьФормуВыбораОснованияИсходящейТранспортнойОперации(Форма, ОповещениеПриЗавершении, ИмяДокумента) Экспорт
	
	Если НЕ ПроверитьВсяПродукцияСопоставлена(Форма,Форма.Объект.Товары) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	
	СоответствиеПолейДокументовОснованийИТранспортныхОпераций = Новый Соответствие;
	ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ЗаполнитьСоответствиеПолейДокументовОснованийИИсходящейТранспортнойОперации(
		СоответствиеПолейДокументовОснованийИТранспортныхОпераций);
		
	СоответствиеПолеРеквизит = Новый Соответствие;
	СоответствиеПолеРеквизит.Вставить("ГрузоотправительХозяйствующийСубъект", "ГрузоотправительСопоставлениеХСДляОтбораОснований");
	СоответствиеПолеРеквизит.Вставить("ГрузоотправительПредприятие",          "ГрузоотправительСопоставлениеПредприятияДляОтбораОснований");
	СоответствиеПолеРеквизит.Вставить("ГрузополучательХозяйствующийСубъект",  "ГрузополучательСопоставлениеХСДляОтбораОснований");
	СоответствиеПолеРеквизит.Вставить("ГрузополучательПредприятие",           "ГрузополучательСопоставлениеПредприятияДляОтбораОснований");
		
	Для Каждого СоответствиеПоля Из СоответствиеПолейДокументовОснованийИТранспортныхОпераций[ИмяДокумента] Цикл
		Если ЗначениеЗаполнено(СоответствиеПоля.Значение) 
			И ЗначениеЗаполнено(Форма[СоответствиеПолеРеквизит[СоответствиеПоля.Ключ]]) Тогда
			СтруктураОтбора.Вставить(СоответствиеПоля.Значение, Форма[СоответствиеПолеРеквизит[СоответствиеПоля.Ключ]]);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОткрытияФормы = Новый Структура;
	Если СтруктураОтбора.Количество() > 0 Тогда
		ПараметрыОткрытияФормы.Вставить("Отбор", СтруктураОтбора);
	КонецЕсли;
	
	ДополнительныеПараметры = ИнтеграцияВЕТИСКлиент.ПараметрыЗавершенияВыбораОснования();
	ДополнительныеПараметры.Форма                   = Форма;
	ДополнительныеПараметры.ОповещениеПриЗавершении = ОповещениеПриЗавершении;
	ДополнительныеПараметры.РедактированиеДоступно  = НЕ(Форма.РедактированиеФормыНедоступно ИЛИ Форма.ТолькоПросмотр);
	ИмяФормыВыбора = "Документ." + ИмяДокумента + ".ФормаВыбора";
	
	ОткрытьФорму(
		ИмяФормыВыбора,
		ПараметрыОткрытияФормы,
		Форма,
		Форма.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения(
			"ПослеЗавершенияВыбораОснованияИсходящейТранспортнойОперацииВЕТИС", 
			ИнтеграцияВЕТИССлужебныйКлиент, 
			ДополнительныеПараметры),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Открывает форму выбора документа-основания по входящей транспортной операции ВЕТИС.
//
// Параметры:
//  ФормаВладелец           - УправляемаяФорма   - форма, из которой выполняется команда выбора,
//  ОповещениеПриЗавершении - ОписаниеОповещения - действие формы после завершения выбора,
//  ИмяДокумента            - Строка             - имя метаданных документа-основания.
//
Процедура ОткрытьФормуВыбораОснованияВходящейТранспортнойОперации(Форма, ОповещениеПриЗавершении, ИмяДокумента) Экспорт
	
	Если НЕ ПроверитьВсяПродукцияСопоставлена_Уточнение(Форма) 
		ИЛИ НЕ ПроверитьВсяПродукцияСопоставлена(Форма, Форма.Объект.Товары.НайтиСтроки(Новый Структура("ЕстьУточнения",Ложь))) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	
	ДополнительныеПараметры = ИнтеграцияВЕТИСКлиент.ПараметрыЗавершенияВыбораОснования();
	ДополнительныеПараметры.Форма                   = Форма;
	ДополнительныеПараметры.ОповещениеПриЗавершении = ОповещениеПриЗавершении;
	
	ИмяФормыВыбора = "Документ." + ИмяДокумента + ".ФормаВыбора";
	
	ОткрытьФорму(
		ИмяФормыВыбора,
		ПараметрыОткрытияФормы,
		Форма,
		Форма.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения(
			"ПослеЗавершенияВыбораОснованияВходящейТранспортнойОперацииВЕТИС", 
			ИнтеграцияВЕТИССлужебныйКлиент, 
			ДополнительныеПараметры),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Открывает форму выбора документа-основания по производственной операции ВЕТИС.
//
// Параметры:
//  ФормаВладелец           - УправляемаяФорма   - форма, из которой выполняется команда выбора,
//  ОповещениеПриЗавершении - ОписаниеОповещения - действие формы после завершения выбора,
//  ИмяДокумента            - Строка             - имя метаданных документа-основания.
//
Процедура ОткрытьФормуВыбораОснованияПроизводственнойОперации(Форма, ОповещениеПриЗавершении, ИмяДокумента) Экспорт
	
	Если НЕ ПроверитьВсяПродукцияСопоставлена(Форма, Форма.Объект.Товары) 
		ИЛИ НЕ ПроверитьВсяПродукцияСопоставлена(Форма, Форма.Объект.Сырье) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	
	СоответствиеПолей = Новый Соответствие;
	ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ЗаполнитьСоответствиеПолейДокументовОснованийИПроизводственнойОперации(СоответствиеПолей);
	
	Для Каждого СоответствиеПоля Из СоответствиеПолей[ИмяДокумента] Цикл
		Если ЗначениеЗаполнено(СоответствиеПоля.Значение)
			И ЗначениеЗаполнено(Форма[СоответствиеПоля.Ключ+"Соответствие"]) Тогда
			СтруктураОтбора.Вставить(СоответствиеПоля.Значение, Форма[СоответствиеПоля.Ключ+"Соответствие"]);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОткрытияФормы = Новый Структура;
	Если СтруктураОтбора.Количество() > 0 Тогда
		ПараметрыОткрытияФормы.Вставить("Отбор", СтруктураОтбора);
	КонецЕсли;
	
	ДополнительныеПараметры = ИнтеграцияВЕТИСКлиент.ПараметрыЗавершенияВыбораОснования();
	ДополнительныеПараметры.Форма                   = Форма;
	ДополнительныеПараметры.ОповещениеПриЗавершении = ОповещениеПриЗавершении;
	
	ИмяФормыВыбора = "Документ." + ИмяДокумента + ".ФормаВыбора";
	
	ОткрытьФорму(
		ИмяФормыВыбора,
		ПараметрыОткрытияФормы,
		Форма,
		Форма.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения(
			"ПослеЗавершенияВыбораОснованияПроизводственнойОперацииВЕТИС",
			ИнтеграцияВЕТИССлужебныйКлиент,
			ДополнительныеПараметры),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Открывает форму выбора документа-основания по инвентаризации продукции ВЕТИС.
//
// Параметры:
//  ФормаВладелец           - УправляемаяФорма   - форма, из которой выполняется команда выбора,
//  ОповещениеПриЗавершении - ОписаниеОповещения - действие формы после завершения выбора,
//  ИмяДокумента            - Строка             - имя метаданных документа-основания.
//
Процедура ОткрытьФормуВыбораОснованияИнвентаризацииПродукции(Форма, ОповещениеПриЗавершении, ИмяДокумента) Экспорт
	
	Если НЕ ПроверитьВсяПродукцияСопоставлена(Форма, Форма.Объект.Товары) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	
	СоответствиеПолей = Новый Соответствие;
	ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ЗаполнитьСоответствиеПолейДокументовОснованийИИнвентаризацииПродукции(СоответствиеПолей);
	
	Для Каждого СоответствиеПоля Из СоответствиеПолей[ИмяДокумента] Цикл
		Если ЗначениеЗаполнено(СоответствиеПоля.Значение)
			И ЗначениеЗаполнено(Форма[СоответствиеПоля.Ключ+"Соответствие"]) Тогда
			СтруктураОтбора.Вставить(СоответствиеПоля.Значение, Форма[СоответствиеПоля.Ключ+"Соответствие"]);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОткрытияФормы = Новый Структура;
	Если СтруктураОтбора.Количество() > 0 Тогда
		ПараметрыОткрытияФормы.Вставить("Отбор", СтруктураОтбора);
	КонецЕсли;
	
	ДополнительныеПараметры = ИнтеграцияВЕТИСКлиент.ПараметрыЗавершенияВыбораОснования();
	ДополнительныеПараметры.Форма                   = Форма;
	ДополнительныеПараметры.ОповещениеПриЗавершении = ОповещениеПриЗавершении;
	ДополнительныеПараметры.РедактированиеДоступно  = НЕ(Форма.РедактированиеФормыНедоступно ИЛИ Форма.ТолькоПросмотр);
	
	ИмяФормыВыбора = "Документ." + ИмяДокумента + ".ФормаВыбора";
	
	ОткрытьФорму(
		ИмяФормыВыбора,
		ПараметрыОткрытияФормы,
		Форма,
		Форма.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения(
			"ПослеЗавершенияВыбораОснованияИнвентаризацииПродукцииВЕТИС", 
			ИнтеграцияВЕТИССлужебныйКлиент, 
			ДополнительныеПараметры),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МассивИменРеквизитовФормыОткрытия()
	
	Массив = Новый Массив;
	Массив.Добавить("ЗаписьСкладскогоЖурнала");
	Массив.Добавить("Продукция");
	Массив.Добавить("ВетеринарноСопроводительныйДокумент");
	
	Возврат Массив;
	
КонецФункции

Функция ПроверитьВсяПродукцияСопоставлена(Форма, ТабличнаяЧасть, ИмяТабличнойЧасти = "Товары")
	
	Отказ = Ложь;
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура)Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Требуется сопоставить номенклатуру'"),,
				СтрШаблон("Объект.%1[%2].Номенклатура",ИмяТабличнойЧасти,СтрокаТабличнойЧасти.НомерСтроки),,
				Отказ);
		КонецЕсли;
	КонецЦикла;

	Возврат НЕ Отказ;
	
КонецФункции

Функция ПроверитьВсяПродукцияСопоставлена_Уточнение(Форма)
	
	Отказ = Ложь;
	
	Для Каждого СтрокаТабличнойЧасти Из Форма.Объект.ТоварыУточнение Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) И ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
			СтрокиТовары = Форма.Объект.Товары.НайтиСтроки(Новый Структура("ИдентификаторСтроки",СтрокаТабличнойЧасти.ИдентификаторСтроки));
			Если СтрокиТовары.Количество() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Требуется сопоставить номенклатуру'"),,
					СтрШаблон("Объект.Товары[%1].Номенклатура",СтрокиТовары[0].НомерСтроки),,
				Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат НЕ Отказ;
	
КонецФункции

#КонецОбласти
