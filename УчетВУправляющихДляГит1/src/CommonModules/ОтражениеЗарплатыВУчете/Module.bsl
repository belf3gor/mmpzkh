////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в учете
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Функция ДанныеДляОтражениеВУчетеВзносовПоТаблице(СтраховыеВзносы) Экспорт
	
	Если СтраховыеВзносы.Количество() = 0 Тогда
		Возврат НоваяТаблицаСтраховыеВзносы();
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("СтраховыеВзносы", СтраховыеВзносы);
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтраховыеВзносы.Организация,
		|	СтраховыеВзносы.ФизическоеЛицо,
		|	СтраховыеВзносы.Сотрудник,
		|	СтраховыеВзносы.Подразделение,
		|	СтраховыеВзносы.Начисление,
		|	НЕОПРЕДЕЛЕНО КАК ПоляВзносов,
		|	СтраховыеВзносы.ОблагаетсяЕНВД,
		|	СтраховыеВзносы.ДатаНачала
		|ПОМЕСТИТЬ ВТСтраховыеВзносы
		|ИЗ
		|	&СтраховыеВзносы КАК СтраховыеВзносы";
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "НЕОПРЕДЕЛЕНО КАК ПоляВзносов", УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина, "СтраховыеВзносы"));
		Запрос.Выполнить();
		
		Возврат ТаблицаВзносовДляОтражениеВУчете(Запрос.МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеВзносов(Организация, ПериодРегистрации, Сотрудники = Неопределено) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СозатьВТСтраховыеВзносы(МенеджерВременныхТаблиц, Организация, ПериодРегистрации, Сотрудники);
	Возврат ТаблицаВзносовДляОтражениеВУчете(МенеджерВременныхТаблиц);
	
КонецФункции 

Функция ДанныеДляОтражениеВУчетеНачисленийПоТаблице(НачисленияУдержания) Экспорт
	
	Если НачисленияУдержания.Количество() = 0 Тогда
		Возврат НоваяТаблицаНачислений();
	Иначе
		
		ДобавитьКолонкиСторно(НачисленияУдержания);
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СозатьВТНачисленияПоТаблицеЗначений(МенеджерВременныхТаблиц, НачисленияУдержания);
		
		Возврат ТаблицаНачисленийДляОтражениеВУчете(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеНачислений(Организация, ПериодРегистрации, Сотрудники = Неопределено) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СозатьВТНачисления(МенеджерВременныхТаблиц, Организация, ПериодРегистрации, Сотрудники);
	Возврат ТаблицаНачисленийДляОтражениеВУчете(МенеджерВременныхТаблиц);
	
КонецФункции 

Функция ДанныеДляОтражениеВУчетеНДФЛПоТаблице(НачисленияУдержания) Экспорт
	
	Если НачисленияУдержания.Количество() = 0 Тогда
		Возврат НоваяТаблицаНДФЛ();
	Иначе
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СозатьВТТаблицаНДФЛПоТаблицеЗначений(МенеджерВременныхТаблиц, НачисленияУдержания);
		
		Возврат ТаблицаНДФЛДляОтражениеВУчете(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеНДФЛ(Организация, ПериодРегистрации) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СозатьВТТаблицаНДФЛ(МенеджерВременныхТаблиц, Организация, ПериодРегистрации);
	Возврат ТаблицаНДФЛДляОтражениеВУчете(МенеджерВременныхТаблиц);
	
КонецФункции 

Функция ДанныеДляОтражениеВУчетеУдержанийПоТаблице(НачисленияУдержания) Экспорт
	
	Если НачисленияУдержания.Количество() = 0 Тогда
		Возврат НоваяТаблицаУдержаннаяЗарплата();
	Иначе
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СозатьВТУдержанияПоСотрудникамПоТаблицеЗначений(МенеджерВременныхТаблиц, НачисленияУдержания);
		
		Возврат ТаблицаУдержанийДляОтражениеВУчете(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеУдержаний(Организация, ПериодРегистрации) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СозатьВТУдержанияПоСотрудникам(МенеджерВременныхТаблиц, Организация, ПериодРегистрации);
	Возврат ТаблицаУдержанийДляОтражениеВУчете(МенеджерВременныхТаблиц);
	
КонецФункции 

// Функция формирует структуру с данными для отражения зарплаты в учете.
//
// Параметры:
//  ПериодРегистрации - тип дата, первое число месяца.
//  Организация, тип СправочникСсылка.Организации.
//
// Возвращаемое значение
// 		Структура ДанныеДляОтражения
//			Ключ - имя таблицы, соответствует именам разделов данных.
//			Значение - таблица значений.
//
Функция ДанныеДляОтраженияЗарплатыВУчете(ПериодРегистрации, Организация) Экспорт
	
	ТаблицаНачислений = ДанныеДляОтражениеВУчетеНачислений(Организация, ПериодРегистрации);
	ТаблицаВзносов    = ДанныеДляОтражениеВУчетеВзносов(Организация, ПериодРегистрации);
	ТаблицаНачисленныйНДФЛ    = ДанныеДляОтражениеВУчетеНДФЛ(Организация, ПериодРегистрации);
	ТаблицаУдержаннаяЗарплата = ДанныеДляОтражениеВУчетеУдержаний(Организация, ПериодРегистрации);
	
	ДанныеДляОтражения = Новый Структура;
	ДанныеДляОтражения.Вставить("Начисления", ТаблицаНачислений);
	ДанныеДляОтражения.Вставить("СтраховыеВзносы", ТаблицаВзносов);
	ДанныеДляОтражения.Вставить("НДФЛ", ТаблицаНачисленныйНДФЛ);
	ДанныеДляОтражения.Вставить("Удержания", ТаблицаУдержаннаяЗарплата);
	
	Возврат ДанныеДляОтражения;
	
КонецФункции

Процедура СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц) Экспорт
	
	Если ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, "ВТНачислениеУдержаниеВидОперации") Тогда
		Возврат;
	КонецЕсли;   
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачислениеУдержаниеВидОперации", ОтражениеЗарплатыВУчетеПовтИсп.ТаблицаНачислениеУдержаниеВидОперации());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеУдержаниеВидОперации.НачислениеУдержание КАК НачислениеУдержание,
	|	НачислениеУдержаниеВидОперации.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ВТНачислениеУдержаниеВидОперации
	|ИЗ
	|	&НачислениеУдержаниеВидОперации КАК НачислениеУдержаниеВидОперации";
	Запрос.Выполнить();
	
КонецПроцедуры

Функция НачислениеУдержаниеВидОперации() Экспорт
	
	НачислениеУдержаниеВидОперации = Новый Соответствие;
	
	Таблица = ОтражениеЗарплатыВУчетеПовтИсп.ТаблицаНачислениеУдержаниеВидОперации();
	Для каждого СтрокаТЗ Из Таблица Цикл
		НачислениеУдержаниеВидОперации.Вставить(СтрокаТЗ.НачислениеУдержание, СтрокаТЗ.ВидОперации);
	КонецЦикла;
	
	Возврат НачислениеУдержаниеВидОперации;
	
КонецФункции

Функция ТаблицаНачислениеУдержаниеВидОперации() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыОсобыхНачислений.Ссылка КАК НачислениеУдержание,
	|	ВидыОперацийПоЗарплате.Ссылка КАК ВидОперации
	|ИЗ
	|	Перечисление.ВидыОсобыхНачисленийИУдержаний КАК ВидыОсобыхНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.ВидыОперацийПоЗарплате КАК ВидыОперацийПоЗарплате
	|		ПО (ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорРаботыУслуги)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорАвторскогоЗаказа)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриРожденииРебенка)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеНаПогребение)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПособиеНаПогребение)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеНаПогребениеСотруднику)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриПостановкеНаУчетВРанниеСрокиБеременности)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.Дивиденды)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.Дивиденды)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДивидендыСотрудников)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДивидендыСотрудников)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛ)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НФДЛДивиденды)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НФДЛДивидендыСотрудникам)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛДоначисленныйПоРезультатамПроверки)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛДоначисленныйПоРезультатамПроверки)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛПередачаЗадолженностиВНалоговыйОрган)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛПередачаЗадолженностиВНалоговыйОрган)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛПрочиеРасчетыСПерсоналом)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛПрочиеРасчетыСПерсоналом)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛДоходыКонтрагентов)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛДоходыКонтрагентов)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛРасчетыСБывшимиСотрудниками)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛРасчетыСБывшимиСотрудниками)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПогашениеЗаймаИзЗарплаты)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПогашениеЗаймов)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПроцентыПоЗайму)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПроцентыПоЗайму)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НатуральныйДоход)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоПроцентовПоЗайму)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДСВРаботодателя)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДСВ)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.КомпенсацияЗаЗадержкуЗарплаты)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокНачислений.Ссылка,
	|	СписокНачислений.ВидОперацииПоЗарплате
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК СписокНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Удержания.Ссылка,
	|	Удержания.ВидОперацииПоЗарплате
	|ИЗ
	|	ПланВидовРасчета.Удержания КАК Удержания";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьТаблицуНачислениеУдержаниеВидОперации(Таблица);
	
	Возврат Таблица;   
	
КонецФункции

Функция ВидыОсобыхНачисленийИУдержанийНДФЛ(ТолькоОтражаемыеВБухучете = Ложь) Экспорт
	
	НДФЛ = Новый Массив;
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛДоначисленныйПоРезультатамПроверки);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛПередачаЗадолженностиВНалоговыйОрган);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛПрочиеРасчетыСПерсоналом);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛДоходыКонтрагентов);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛРасчетыСБывшимиСотрудниками);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам);
	
	Если Не ТолькоОтражаемыеВБухучете Тогда
		НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛКЗачету);
		НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛЗачтено);
	КонецЕсли;
	
	Возврат НДФЛ;
	
КонецФункции

Процедура ДобавитьКолонкуИдентификаторСтроки(Таблица, ЗаполнитьИдентификаторСтроки = Ложь, НомерПервойСтроки = 1) Экспорт
	
	Если Таблица.Колонки.Найти("ИдентификаторСтроки") = Неопределено Тогда
		Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
		ЗаполнитьКолонкуИдентификаторСтроки(Таблица, НомерПервойСтроки);
	ИначеЕсли ЗаполнитьИдентификаторСтроки Тогда
		// Колонка есть, установим новые идентификаторы строк.
		ЗаполнитьКолонкуИдентификаторСтроки(Таблица, НомерПервойСтроки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКолонкуИдентификаторСтроки(Таблица, НомерПервойСтроки = 1) Экспорт
	
	ИдентификаторСтроки = НомерПервойСтроки;
	Для каждого Строка Из Таблица Цикл
		Строка.ИдентификаторСтроки = ИдентификаторСтроки;
		ИдентификаторСтроки = ИдентификаторСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьКолонкиСторно(Таблица) Экспорт
	
	Если Таблица.Колонки.Найти("Сторно") = Неопределено Тогда
		Таблица.Колонки.Добавить("Сторно", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	Если Таблица.Колонки.Найти("ФиксСторно") = Неопределено Тогда
		Таблица.Колонки.Добавить("ФиксСторно", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру с описание параметров
// для регистрации результатов расчетов в учете начисленной зарплаты и в бухучете.
//
// Возвращаемое значение - Структура
//
Функция ОписаниеДанныеДляПроведения() Экспорт
	
	ДанныеДляПроведения = Новый Структура("
	|Движения,
	|МенеджерВременныхТаблиц,
	|Организация,
	|ПериодРегистрации,
	|ПорядокВыплаты,
	|Авансом,
	|ОкончательныйРасчет,
	|ОграничениеВзысканий,
	|ДниОтпускаАвансом,
	|ВыплатитьКакАванс");
	
	// Признак расчета первой половины месяца.
	ДанныеДляПроведения.Авансом = Ложь;
	
	// Признак того, что для межрасчетной выплаты НДФЛ будет удержан при выплате зарплаты. 
	ДанныеДляПроведения.ВыплатитьКакАванс = Ложь;
	
	// Используется при распределения удержаний и НДФЛ.
	// Признак того, что надо учитывать все начисления.
	ДанныеДляПроведения.ОкончательныйРасчет = Ложь;
	
	// Признак расчета ограничения взысканий.
	// Используется при распределении удержаний.
	ДанныеДляПроведения.ОграничениеВзысканий = Ложь;
	
	// Дни отпуска авансом в разрезе видов расчета.
	ДанныеДляПроведения.ДниОтпускаАвансом = НоваяТаблицаДнейОтпускаАвансом();
	
	ДанныеДляПроведения.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

// Возвращает соответствие видов операций и статей расходов.
// 
// Возвращаемое значение - соответствие
//		Ключ - ПеречислениеСсылка.СпособыРасчетовСФизическимиЛицами
//		Значение - СправочникСсылка.СтатьиРасходовЗарплата
//
Функция СтатьиРасходовПоВидуОперации() Экспорт

	СтатьиРасходовПоВидуОперации = Новый Соответствие;
	СтатьиРасходовПоСпособамРасчетов = ЗарплатаКадры.СтатьиРасходовПоСпособамРасчетовСФизическимиЛицами();
	СтатьяРасчетыПоОплатеТруда 		= СтатьиРасходовПоСпособамРасчетов[Перечисления.СпособыРасчетовСФизическимиЛицами.ОплатаТруда];
	СтатьяРасчетыСКонтрагентами 	= СтатьиРасходовПоСпособамРасчетов[Перечисления.СпособыРасчетовСФизическимиЛицами.РасчетыСКонтрагентами];
	СтатьяПрочиеРасчетыСПерсоналом 	= СтатьиРасходовПоСпособамРасчетов[Перечисления.СпособыРасчетовСФизическимиЛицами.ПрочиеРасчетыСПерсоналом];
	СтатьяДивиденды 				= СтатьиРасходовПоСпособамРасчетов[Перечисления.СпособыРасчетовСФизическимиЛицами.Дивиденды];
	Для каждого ВидОперации Из Перечисления.ВидыОперацийПоЗарплате Цикл
		
		СтатьяРасходов = СтатьяРасчетыПоОплатеТруда;
		
		Если ВидОперации = Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛистыКонтрагенты Тогда
			СтатьяРасходов = СтатьяРасчетыСКонтрагентами;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ВознаграждениеПлатежногоАгентаКонтрагенты Тогда
			СтатьяРасходов = СтатьяРасчетыСКонтрагентами;	
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ВыплатыБывшимСотрудникам Тогда
			СтатьяРасходов = СтатьяРасчетыСКонтрагентами;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ДоходыКонтрагентов Тогда
			СтатьяРасходов = СтатьяРасчетыСКонтрагентами;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛДоходыКонтрагентов Тогда
			СтатьяРасходов = СтатьяРасчетыСКонтрагентами;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛРасчетыСБывшимиСотрудниками Тогда
			СтатьяРасходов = СтатьяРасчетыСКонтрагентами;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ПособиеНаПогребение Тогда
			СтатьяРасходов = СтатьяРасчетыСКонтрагентами;	
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.Дивиденды Тогда
			СтатьяРасходов = СтатьяДивиденды;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НФДЛДивиденды Тогда
			СтатьяРасходов = СтатьяДивиденды;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ПрочиеРасчетыСПерсоналом Тогда
			СтатьяРасходов = СтатьяПрочиеРасчетыСПерсоналом;
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛПрочиеРасчетыСПерсоналом Тогда
			СтатьяРасходов = СтатьяПрочиеРасчетыСПерсоналом;	
		КонецЕсли;
		
		СтатьиРасходовПоВидуОперации.Вставить(ВидОперации, СтатьяРасходов);
	
	КонецЦикла;
	
	Возврат СтатьиРасходовПоВидуОперации;

КонецФункции

Функция НоваяТаблицаДнейОтпускаАвансом() Экспорт 
	
	ДниОтпускаАвансом = Новый ТаблицаЗначений;
	ДниОтпускаАвансом.Колонки.Добавить("Начисление", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.Начисления"));
	ДниОтпускаАвансом.Колонки.Добавить("КоличествоДнейАвансом", Новый ОписаниеТипов("Число"));
	ДниОтпускаАвансом.Колонки.Добавить("Сторно", Новый ОписаниеТипов("Булево"));
	
	Возврат ДниОтпускаАвансом;
	
КонецФункции

Функция ОписаниеДанныхДляДополненияНДФЛСтатьями() Экспорт

	ДанныхДляДополнения = Новый Структура("БазаРаспределения,ПоляОтбора", Новый Массив, "");
	Возврат ДанныхДляДополнения;

КонецФункции

Функция ДанныеДляДополненияНДФЛУдержанногоСтатьями(МенеджерВременныхТаблиц) Экспорт

	ДанныхДляДополнения = ОписаниеДанныхДляДополненияНДФЛСтатьями();
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы") Тогда
		Возврат ДанныхДляДополнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалогУдержанный.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НалогУдержанный.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НалогУдержанный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НалогУдержанный.КодДохода КАК КодДохода,
	|	НалогУдержанный.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НалогУдержанный.Подразделение КАК Подразделение,
	|	НалогУдержанный.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НалогУдержанный.ДокументОснование КАК ДокументОснование,
	|	НалогУдержанный.КатегорияДохода КАК КатегорияДохода,
	|	НалогУдержанный.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НалогУдержанный.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(НалогУдержанный.Сумма) КАК Сумма
	|ИЗ
	|	ВТНалогУдержанный КАК НалогУдержанный
	|
	|СГРУППИРОВАТЬ ПО
	|	НалогУдержанный.СтатьяФинансирования,
	|	НалогУдержанный.СтатьяРасходов,
	|	НалогУдержанный.ДокументОснование,
	|	НалогУдержанный.СтавкаНалогообложенияРезидента,
	|	НалогУдержанный.КатегорияДохода,
	|	НалогУдержанный.МесяцНалоговогоПериода,
	|	НалогУдержанный.КодДохода,
	|	НалогУдержанный.Подразделение,
	|	НалогУдержанный.РегистрацияВНалоговомОргане,
	|	НалогУдержанный.ФизическоеЛицо,
	|	НалогУдержанный.ВключатьВДекларациюПоНалогуНаПрибыль";
	
	ДанныхДляДополнения.БазаРаспределения = Запрос.Выполнить().Выгрузить();
	
	ПоляОтбора = "ФизическоеЛицо,СтавкаНалогообложенияРезидента,МесяцНалоговогоПериода,
	|КодДохода,РегистрацияВНалоговомОргане,Подразделение,ВключатьВДекларациюПоНалогуНаПрибыль,
	|ДокументОснование,КатегорияДохода";
	ДанныхДляДополнения.БазаРаспределения.Индексы.Добавить(ПоляОтбора);
	
	ДанныхДляДополнения.ПоляОтбора = ПоляОтбора;
	
	Возврат ДанныхДляДополнения;

КонецФункции

// Дополняет записи набора записей регистра НДФЛКПеречислению аналитикой: Статьи финансирования, Статьи расходов
// Параметры 
//		Движения - коллекции наборов записей движений документа, должна содержать коллекции еще не записанных наборов
//			НДФЛКПеречислению
//		ДанныеДляДополнения - структура см ОтражениеЗарплатыВУчете.ОписаниеДанныхДляДополненияНДФЛСтатьями.
//
Процедура ДополнитьНДФЛКПеречислениюСведениямиОРаспределенииПоСтатьям(Движения, ДанныеДляДополнения) Экспорт

	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьНДФЛКПеречислениюСведениямиОРаспределенииПоСтатьям(Движения, ДанныеДляДополнения);
	
КонецПроцедуры

// Дополняет записи набора записей регистра НДФЛПеречисленный аналитикой: Статьи финансирования, Статьи расходов
// Параметры 
//		Движения - коллекции наборов записей движений документа, должна содержать коллекции еще не записанных наборов
//			НДФЛПеречисленный
//		ДанныеДляДополнения - структура см ОтражениеЗарплатыВУчете.ОписаниеДанныхДляДополненияНДФЛСтатьями.
//
Процедура ДополнитьНДФЛПеречисленныйСведениямиОРаспределенииПоСтатьям(Движения, ДанныеДляДополнения) Экспорт
	
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьНДФЛПеречисленныйСведениямиОРаспределенииПоСтатьям(Движения, ДанныеДляДополнения)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СозатьВТУдержанияПоСотрудникамПоТаблицеЗначений(МенеджерВременныхТаблиц, НачисленияУдержания)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	
	// Получим массив видов особых начислений удержаний, относящихся к НДФЛ.
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ВидыОсобыхНачисленийИУдержанийНДФЛ();
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	Запрос.УстановитьПараметр("НачисленияУдержания", НачисленияУдержания);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты,
	|	НачисленияУдержания.Период КАК Период,
	|	НачисленияУдержания.ДокументОснование КАК ДокументОснование,
	|	НачисленияУдержания.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВТНачисленияУдержания
	|ИЗ
	|	&НачисленияУдержания КАК НачисленияУдержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.Организация КАК Организация,
	|	Удержания.Сотрудник КАК Сотрудник,
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Подразделение КАК Подразделение,
	|	НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ) КАК ДатаНачала,
	|	Удержания.НачислениеУдержание КАК Удержание,
	|	Удержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	Удержания.Период КАК Период,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.Контрагент КАК Контрагент,
	|	0 КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(УдержаниеВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации,
	|	Удержания.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУдержанияПоСотрудникам
	|ИЗ
	|	ВТНачисленияУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК УдержаниеВидОперации
	|		ПО Удержания.НачислениеУдержание = УдержаниеВидОперации.НачислениеУдержание
	|ГДЕ
	|	Удержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|	И НЕ Удержания.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Удержания.Организация,
	|	Удержания.Сотрудник,
	|	Удержания.ФизическоеЛицо,
	|	Удержания.Подразделение,
	|	НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ),
	|	Удержания.НачислениеУдержание,
	|	Удержания.СтатьяРасходов,
	|	НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ),
	|	Удержания.Период,
	|	Удержания.ДокументОснование,
	|	Удержания.Контрагент,
	|	0,
	|	ЕСТЬNULL(УдержаниеВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)),
	|	Удержания.Сумма
	|ИЗ
	|	ВТНачисленияУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК УдержаниеВидОперации
	|		ПО Удержания.НачислениеУдержание = УдержаниеВидОперации.НачислениеУдержание
	|ГДЕ
	|	Удержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияУдержания";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СозатьВТУдержанияПоСотрудникам(МенеджерВременныхТаблиц, Организация, ПериодРегистрации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	
	// Получим массив видов особых начислений удержаний, относящихся к НДФЛ.
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ВидыОсобыхНачисленийИУдержанийНДФЛ();
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Удержания.Организация КАК Организация,
	|	Удержания.Сотрудник КАК Сотрудник,
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Подразделение КАК Подразделение,
	|	Удержания.СтатьяРасходов КАК СтатьяРасходов,
	|	Удержания.ДатаНачала КАК ДатаНачала,
	|	Удержания.НачислениеУдержание КАК Удержание,
	|	Удержания.Сумма КАК Сумма,
	|	НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	Удержания.Период КАК Период,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(УдержаниеВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации,
	|	0 КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТУдержанияПоСотрудникам
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК УдержаниеВидОперации
	|		ПО Удержания.НачислениеУдержание = УдержаниеВидОперации.НачислениеУдержание
	|ГДЕ
	|	Удержания.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Удержания.Организация = &Организация
	|	И Удержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|	И НЕ Удержания.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Удержания.Организация,
	|	Удержания.Сотрудник,
	|	Удержания.ФизическоеЛицо,
	|	Удержания.Подразделение,
	|	Удержания.СтатьяРасходов,
	|	Удержания.ДатаНачала,
	|	Удержания.НачислениеУдержание,
	|	Удержания.Сумма,
	|	НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ),
	|	Удержания.Период,
	|	Удержания.ДокументОснование,
	|	Удержания.Контрагент,
	|	ЕСТЬNULL(УдержаниеВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)),
	|	0
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК УдержаниеВидОперации
	|		ПО Удержания.НачислениеУдержание = УдержаниеВидОперации.НачислениеУдержание
	|ГДЕ
	|	Удержания.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Удержания.Организация = &Организация
	|	И Удержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму)";
	
	Запрос.Выполнить();
	
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьТаблицуУдержаний(ПериодРегистрации, Организация, МенеджерВременныхТаблиц);
	
КонецПроцедуры

Функция ТаблицаУдержанийДляОтражениеВУчете(МенеджерВременныхТаблиц)
	
	ТаблицаУдержаний = НоваяТаблицаУдержаннаяЗарплата();
	
	ОтражениеЗарплатыВУчетеВнутренний.СоздатьВТУдержанияПоСотрудникамКонтрагент(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаУдержаний.Организация КАК Организация,
	|	ТаблицаУдержаний.Сотрудник КАК Сотрудник,
	|	ТаблицаУдержаний.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаУдержаний.Подразделение КАК Подразделение,
	|	ТаблицаУдержаний.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаУдержаний.ДатаНачала КАК ДатаНачала,
	|	ТаблицаУдержаний.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаУдержаний.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(УдержанияПоСотрудникамКонтрагент.Контрагент, ТаблицаУдержаний.Контрагент) КАК Контрагент,
	|	ТаблицаУдержаний.Удержание КАК Удержание,
	|	ТаблицаУдержаний.Сумма КАК Сумма
	|ИЗ
	|	ВТУдержанияПоСотрудникам КАК ТаблицаУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержанияПоСотрудникамКонтрагент КАК УдержанияПоСотрудникамКонтрагент
	|		ПО ТаблицаУдержаний.ДокументОснование = УдержанияПоСотрудникамКонтрагент.ДокументОснование
	|			И ТаблицаУдержаний.ФизическоеЛицо = УдержанияПоСотрудникамКонтрагент.ФизическоеЛицо
	|			И ТаблицаУдержаний.Удержание = УдержанияПоСотрудникамКонтрагент.Удержание
	|			И (ТаблицаУдержаний.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ЗаполнитьКолонкуИдентификаторСтроки(Результат);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаУдержаний);
	
	Возврат ТаблицаУдержаний;
	
КонецФункции 

Процедура СозатьВТТаблицаНДФЛПоТаблицеЗначений(МенеджерВременныхТаблиц, НачисленияУдержания)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Получим массив видов особых начислений удержаний, относящихся к НДФЛ.
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ВидыОсобыхНачисленийИУдержанийНДФЛ(Истина);
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	Запрос.УстановитьПараметр("НачисленияУдержания", НачисленияУдержания);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТНачисленияУдержания
	|ИЗ
	|	&НачисленияУдержания КАК НачисленияУдержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	0 КАК ИдентификаторСтроки,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	ВТНачисленияУдержания КАК НачисленияУдержания
	|ГДЕ
	|	НачисленияУдержания.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияУдержания";
	Запрос.Выполнить();	
	
КонецПроцедуры

Процедура СозатьВТТаблицаНДФЛ(МенеджерВременныхТаблиц, Организация, ПериодРегистрации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Получим массив видов особых начислений удержаний, относящихся к НДФЛ.
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ВидыОсобыхНачисленийИУдержанийНДФЛ(Истина);
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	0 КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
	|ГДЕ
	|	НачисленияУдержания.Организация = &Организация
	|	И НачисленияУдержания.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НачисленияУдержания.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)";
	Запрос.Выполнить();
	
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьТаблицуНДФЛ(ПериодРегистрации, Организация, МенеджерВременныхТаблиц);	
	
КонецПроцедуры

Функция ТаблицаНДФЛДляОтражениеВУчете(МенеджерВременныхТаблиц)
	
	ТаблицаНДФЛ = НоваяТаблицаНДФЛ();
	
	// Создадим временную таблицу с соответствием видов особых начислений удержаний видам операций по зарплате.
	СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Организация КАК Организация,
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник КАК Сотрудник,
	|	ТаблицаНДФЛ.Подразделение КАК Подразделение,
	|	ТаблицаНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаНДФЛ.Сумма КАК Сумма,
	|	ТаблицаНДФЛ.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	ТаблицаНДФЛ.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(ВидыОсобыхУдержанийВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК ВидыОсобыхУдержанийВидОперации
	|		ПО ТаблицаНДФЛ.НачислениеУдержание = ВидыОсобыхУдержанийВидОперации.НачислениеУдержание
	|ГДЕ
	|	ТаблицаНДФЛ.Сумма <> 0";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ЗаполнитьКолонкуИдентификаторСтроки(Результат);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаНДФЛ);
	
	Возврат ТаблицаНДФЛ;
	
КонецФункции 

Процедура СозатьВТНачисленияПоТаблицеЗначений(МенеджерВременныхТаблиц, НачисленияУдержания)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ГруппаНачисления = Новый Массив;
	ГруппаНачисления.Добавить(Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено);
	ГруппаНачисления.Добавить(Перечисления.ГруппыНачисленияУдержанияВыплаты.Льготы);
	Запрос.УстановитьПараметр("ГруппаНачисления", ГруппаНачисления);
	Запрос.УстановитьПараметр("НачисленияУдержания", НачисленияУдержания);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.ДатаНачала КАК ДатаНачала,
	|	НачисленияУдержания.ДатаОкончания КАК ДатаОкончания,
	|	НачисленияУдержания.ПериодДействия КАК ПериодДействия,
	|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты,
	|	НачисленияУдержания.ДокументОснование КАК ДокументОснование,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	НачисленияУдержания.Сторно КАК Сторно,
	|	НачисленияУдержания.ФиксСторно КАК ФиксСторно
	|ПОМЕСТИТЬ ВТНачисленияУдержания
	|ИЗ
	|	&НачисленияУдержания КАК НачисленияУдержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.ДатаНачала КАК ДатаНачала,
	|	НачисленияУдержания.ДатаОкончания КАК ДатаОкончания,
	|	НачисленияУдержания.ПериодДействия КАК ПериодДействия,
	|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	|	НачисленияУдержания.ДокументОснование КАК ДокументОснование,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	0 КАК ИдентификаторСтроки,
	|	НачисленияУдержания.Сторно КАК Сторно,
	|	НачисленияУдержания.ФиксСторно КАК ФиксСторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	ВТНачисленияУдержания КАК НачисленияУдержания
	|ГДЕ
	|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты В(&ГруппаНачисления)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачисленияУдержания.Организация,
	|	НачисленияУдержания.Сотрудник,
	|	НачисленияУдержания.ФизическоеЛицо,
	|	НачисленияУдержания.Подразделение,
	|	НачисленияУдержания.СтатьяРасходов,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.ДатаНачала,
	|	НачисленияУдержания.ДатаОкончания,
	|	НачисленияУдержания.ПериодДействия,
	|	НачисленияУдержания.НачислениеУдержание,
	|	НачисленияУдержания.ДокументОснование,
	|	НачисленияУдержания.Сумма,
	|	0,
	|	НачисленияУдержания.Сторно,
	|	НачисленияУдержания.ФиксСторно
	|ИЗ
	|	ВТНачисленияУдержания КАК НачисленияУдержания
	|ГДЕ
	|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И НачисленияУдержания.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачисленияУдержания.Организация,
	|	НачисленияУдержания.Сотрудник,
	|	НачисленияУдержания.ФизическоеЛицо,
	|	НачисленияУдержания.Подразделение,
	|	НачисленияУдержания.СтатьяРасходов,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.ДатаНачала,
	|	НачисленияУдержания.ДатаОкончания,
	|	НачисленияУдержания.ПериодДействия,
	|	НачисленияУдержания.НачислениеУдержание,
	|	НачисленияУдержания.ДокументОснование,
	|	НачисленияУдержания.Сумма,
	|	0,
	|	НачисленияУдержания.Сторно,
	|	НачисленияУдержания.ФиксСторно
	|ИЗ
	|	ВТНачисленияУдержания КАК НачисленияУдержания
	|ГДЕ
	|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И НачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияУдержания";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СозатьВТНачисления(МенеджерВременныхТаблиц, Организация, ПериодРегистрации, Сотрудники = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	
	УсловиеПоСотрудникам = "ИСТИНА";
	Если Сотрудники <> Неопределено Тогда
		УсловиеПоСотрудникам = "Начисления.Сотрудник В(&Сотрудники)";
		Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	КонецЕсли;
	
	ГруппаНачисления = Новый Массив;
	ГруппаНачисления.Добавить(Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено);
	ГруппаНачисления.Добавить(Перечисления.ГруппыНачисленияУдержанияВыплаты.Льготы);
	Запрос.УстановитьПараметр("ГруппаНачисления", ГруппаНачисления);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.СтатьяРасходов КАК СтатьяРасходов,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ПериодДействия КАК ПериодДействия,
	|	Начисления.НачислениеУдержание КАК НачислениеУдержание,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	0 КАК ИдентификаторСтроки,
	|	Начисления.Сумма КАК Сумма,
	|	ЛОЖЬ КАК Сторно,
	|	ЛОЖЬ КАК ФиксСторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Начисления
	|ГДЕ
	|	Начисления.Организация = &Организация
	|	И Начисления.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ГруппаНачисленияУдержанияВыплаты В(&ГруппаНачисления)
	|	И &УсловиеПоСотрудникам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.СтатьяРасходов,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ПериодДействия,
	|	Начисления.НачислениеУдержание,
	|	Начисления.ДокументОснование,
	|	0,
	|	Начисления.Сумма,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Начисления
	|ГДЕ
	|	Начисления.Организация = &Организация
	|	И Начисления.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И Начисления.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
	|	И &УсловиеПоСотрудникам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.СтатьяРасходов,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ПериодДействия,
	|	Начисления.НачислениеУдержание,
	|	Начисления.ДокументОснование,
	|	0,
	|	Начисления.Сумма,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Начисления
	|ГДЕ
	|	Начисления.Организация = &Организация
	|	И Начисления.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И Начисления.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|	И &УсловиеПоСотрудникам";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСотрудникам", УсловиеПоСотрудникам);
	Запрос.Выполнить();
	
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьТаблицуНачислений(ПериодРегистрации, Организация, МенеджерВременныхТаблиц, Сотрудники);
	
КонецПроцедуры

Функция ТаблицаНачисленийДляОтражениеВУчете(МенеджерВременныхТаблиц)
	
	ТаблицаНачислений = НоваяТаблицаНачислений();
	
	СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.СтатьяРасходов КАК СтатьяРасходов,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ПериодДействия КАК ПериодДействия,
	|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации,
	|	Начисления.НачислениеУдержание КАК Начисление,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Сумма КАК Сумма,
	|	Начисления.Сторно КАК Сторно,
	|	Начисления.ФиксСторно КАК ФиксСторно
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
	|		ПО Начисления.НачислениеУдержание = НачисленияВидОперации.НачислениеУдержание";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ЗаполнитьКолонкуИдентификаторСтроки(Результат);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаНачислений);
	
	Возврат ТаблицаНачислений;
	
КонецФункции

Процедура СозатьВТСтраховыеВзносы(МенеджерВременныхТаблиц, Организация, ПериодРегистрации, Сотрудники)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(Организация);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	
	УсловиеПоСотрудникам = "ИСТИНА";
	Если Сотрудники <> Неопределено Тогда
		УсловиеПоСотрудникам = "СтраховыеВзносы.Сотрудник В(&Сотрудники)";
		Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтраховыеВзносы.Организация КАК Организация,
	|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносы.Подразделение КАК Подразделение,
	|	СтраховыеВзносы.Начисление КАК Начисление,
	|	СУММА(0) КАК ПоляВзносов,
	|	СтраховыеВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносы.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТСтраховыеВзносы
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносы
	|ГДЕ
	|	СтраховыеВзносы.Организация = &Организация
	|	И СтраховыеВзносы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И &УсловиеПоСотрудникам
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.Организация,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.ДатаНачала,
	|	СтраховыеВзносы.Начисление";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоСотрудникам", УсловиеПоСотрудникам);
	
	ТекстПолейВзносов = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		ТекстПолейВзносов = ТекстПолейВзносов + "СУММА(СтраховыеВзносы." + ИмяПоля + ") КАК " + ИмяПоля + "," + Символы.ПС;
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(0) КАК ПоляВзносов,", ТекстПолейВзносов);
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТаблицаВзносовДляОтражениеВУчете(МенеджерВременныхТаблиц)
	
	ТаблицаВзносов = НоваяТаблицаСтраховыеВзносы();
	
	ДополнительныеПоля = "ФизическоеЛицо,Сотрудник,Подразделение,Начисление,ОблагаетсяЕНВД,ДатаНачала";
	Результат = ТаблицаСтраховыхВзносовПоВидамОпераций(МенеджерВременныхТаблиц, ДополнительныеПоля);
	
	ДобавитьКолонкуИдентификаторСтроки(Результат);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаВзносов);
	
	Возврат ТаблицаВзносов;
	
КонецФункции



#Область ИнициализацияТаблицЗначений

Функция НоваяТаблицаНДФЛ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;  
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ТерриторияВыполненияРаботВОрганизации", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	Таблица.Колонки.Добавить("СтатьяРасходов",  Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаУдержаннаяЗарплата()
	
	МассивТиповУдержания = Новый Массив;
	МассивТиповУдержания.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Удержания"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Удержание", Новый ОписаниеТипов(МассивТиповУдержания));
	Таблица.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("СтатьяРасходов",  Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаНачислений() Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	МассивТиповДокументОснование = ОтражениеЗарплатыВУчетеВнутренний.ТипыПоляДокументОснование();
	
	Таблица = Новый ТаблицаЗначений;
	
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru = 'Сотрудник'"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ПериодДействия", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТиповДокументОснование));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("ТерриторияВыполненияРаботВОрганизации", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("Сторно", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ФиксСторно", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("СтатьяРасходов",  Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаСтраховыеВзносы() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТипов.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТипов);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru = 'Сотрудник'"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТипов));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаСтраховыеВзносыБезВидаОперации() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТипов.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТипов);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru = 'Сотрудник'"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТипов));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		Таблица.Колонки.Добавить(ИмяПоля, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	КонецЦикла;
	
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяСтруктураРезультатыРасчетаЗарплаты() Экспорт
	
	РезультатыРасчетаЗарплаты = Новый Структура;
	РезультатыРасчетаЗарплаты.Вставить("НачисленияУдержания", Неопределено);
	РезультатыРасчетаЗарплаты.Вставить("СтраховыеВзносы", Неопределено);
	
	Возврат РезультатыРасчетаЗарплаты
	
КонецФункции

#КонецОбласти

Функция ТаблицаСтраховыхВзносовПоВидамОпераций(МенеджерВременныхТаблиц, ДополнительныеПоля) Экспорт
	
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРСПревышения);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДоПредельнойВеличины);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ТФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФССНС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФСС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносы.Организация КАК Организация,
	|	&ДополнительныеПоля КАК ДополнительныеПоля,
	|	ВидыОперацийПоЗарплате.Ссылка КАК ВидОперации,
	|	СУММА(ВЫБОР
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСПревышения)
	|				ТОГДА СтраховыеВзносы.ПФРСПревышения
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА СтраховыеВзносы.ПФРПоСуммарномуТарифу
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДоПредельнойВеличины)
	|				ТОГДА СтраховыеВзносы.ПФРДоПредельнойВеличины
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРСтраховая
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРНакопительная
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА СтраховыеВзносы.ТФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА СтраховыеВзносы.ФФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА СтраховыеВзносы.ФСС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА СтраховыеВзносы.ФССНесчастныеСлучаи
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуЛетчикам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуШахтерам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма
	|ИЗ
	|	ВТСтраховыеВзносы КАК СтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ВидыОперацийПоЗарплате КАК ВидыОперацийПоЗарплате
	|		ПО (ВидыОперацийПоЗарплате.Ссылка В (&ВидыОпераций))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.Организация,
	|	ВидыОперацийПоЗарплате.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСПревышения)
	|				ТОГДА СтраховыеВзносы.ПФРСПревышения
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА СтраховыеВзносы.ПФРПоСуммарномуТарифу
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДоПредельнойВеличины)
	|				ТОГДА СтраховыеВзносы.ПФРДоПредельнойВеличины
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРСтраховая
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРНакопительная
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА СтраховыеВзносы.ТФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА СтраховыеВзносы.ФФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА СтраховыеВзносы.ФСС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА СтраховыеВзносы.ФССНесчастныеСлучаи
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуЛетчикам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуШахтерам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка
	|			ИНАЧЕ 0
	|		КОНЕЦ) <> 0";
	
	ТекстДополнительныхПолей = "";
	ТекстГруппировкиДополнительныхПолей = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДополнительныеПоля) Цикл
		ТекстДополнительныхПолей = ТекстДополнительныхПолей + "СтраховыеВзносы." + ИмяПоля + " КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстГруппировкиДополнительныхПолей = ТекстГруппировкиДополнительныхПолей + "СтраховыеВзносы." + ИмяПоля + "," + Символы.ПС;
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДополнительныеПоля КАК ДополнительныеПоля,", ТекстДополнительныхПолей);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "СГРУППИРОВАТЬ ПО", "СГРУППИРОВАТЬ ПО" + Символы.ПС + ТекстГруппировкиДополнительныхПолей);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти
