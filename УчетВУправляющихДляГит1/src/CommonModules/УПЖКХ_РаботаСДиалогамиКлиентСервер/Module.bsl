
//// Этот модуль предназначен для реализации алгоритмов работы форм и 
//// содержит процедуры и функции работы с формами и элементами форм,
//// а также подготовки данных для представления информации в формах.
//// Временно присутствует секция поддержки формирования печатных форм.

#Область ПроцедурыИФункцииОформленияФормы

// Функция преобразовывает дату в представление периода
//
// Параметры:
//   ПериодРегистрации - Дата периода.
//
// Возвращаемое значение:
//  Строка.
//
Функция ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации) Экспорт

	Возврат Формат(ПериодРегистрации, "ДФ='MMMM yyyy'");

КонецФункции

// Функция возвращает итог по полю в строках дерева услуг.
//
Функция ПолучитьИтогПоПолюВСтрокахДерева(Строки, ИмяПоля, УчитыватьВложенные = Ложь, СтруктураПроверки = Неопределено, УровеньВложенности = 999) Экспорт
	
	СуммаИтога = 0;
	
	Для Каждого ТекСтрока Из Строки Цикл
		
		СуммироватьПоле = Истина;
		Если Не СтруктураПроверки = Неопределено Тогда
			Для Каждого Элемент Из СтруктураПроверки Цикл
				Если Не ТекСтрока[Элемент.Ключ] = Элемент.Значение Тогда
					СуммироватьПоле = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если СуммироватьПоле Тогда
			СуммаИтога = СуммаИтога + ТекСтрока[ИмяПоля];
		КонецЕсли;
		
		Если УчитыватьВложенные И УровеньВложенности > 0 Тогда
			СуммаИтога = СуммаИтога + ПолучитьИтогПоПолюВСтрокахДерева(ТекСтрока.ПолучитьЭлементы(), ИмяПоля, УчитыватьВложенные, СтруктураПроверки, УровеньВложенности - 1);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СуммаИтога;
	
КонецФункции

// Формирует и устанавливает текст заголовка формы документа.
//
// Параметры:
//  СтрокаВидаОперации - строка вида операции документа.
//  ДокументОбъект     - объект документа.
//  ФормаДокумента     - форма документа.
//
Процедура УстановитьЗаголовокФормыДокумента(СтрокаВидаОперации = "", ДокументОбъект, ФормаДокумента) Экспорт
	
	ФормаДокумента.АвтоЗаголовок = Ложь; // заголовок будем писать сами
	
	Заголовок = УПЖКХ_РаботаСДиалогамиСервер.СформироватьЗаголовокФормыДокумента(СтрокаВидаОперации, ДокументОбъект);
	
	ФормаДокумента.Заголовок = Заголовок;
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

// Формирует и устанавливает текст заголовка формы записи.
//
// Параметры:
//  СтрокаОписания - строка описания формы объекта.
//  ФизЛицо        - физическое лицо.
//  ФормаЗаписи    - форма записи объекта, в которую устанавливается заголовок.
//
Процедура УстановитьЗаголовокФормыЗаписиФизлица(СтрокаОписания, ФизЛицо, ФормаЗаписи) Экспорт
	
	ФормаЗаписи.АвтоЗаголовок = Ложь; // заголовок будем писать сами
	
	ФормаЗаписи.Заголовок = СтрокаОписания + ": " + УПЖКХ_РаботаСДиалогамиСервер.ПолучитьПредставленияОбъектов(ФизЛицо);
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

#КонецОбласти

#Область ПроцедурыИФункцииОбработкиИнформацииВФорме

// Процедура определяет ситуацию, когда при изменении своей даты документ
// оказывается в другом периоде нумерации документов, и в это м случае
// присваивает документу новый уникальный номер.
//
// Параметры:
//  ДокументОбъект         - контекст документа,из которого вызвана процедура.
//  НачальнаяДатаДокумента - начальная дата документа.
// 
Процедура ПроверитьНомерДокумента(ДокументОбъект, НачальнаяДатаДокумента) Экспорт   // в разработке

	РазностьДат = УПЖКХ_РаботаСДиалогамиСервер.ПроверитьНомерДокументаСервер(ДокументОбъект.Ссылка, 
																			НачальнаяДатаДокумента);

	Если РазностьДат <> 0 Тогда
		ДокументОбъект.Номер = "";
	КонецЕсли;

КонецПроцедуры // ПроверитьНомерДокумента()

#КонецОбласти

#Область ПроцедурыИФункцииДляОбеспеченияВводаДатыКакМесяца

// Предназначена для реализации "произвольного" ввода даты-месяца
// подбирает по переданному тексту строку-представление даты или список таких строк
// в переданный параметр ДатаПоТексту возвращает подобранную по тексту дату.
//
Функция ДатаКакМесяцПодобратьДатуПоТексту(Текст, ДатаПоТексту = НеОпределено) ЭКспорт
	СписокВозврата = Новый СписокЗначений;
	ТекущийГод = Год(УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату());
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат СписокВозврата;
	КонецЕсли;
	Если Найти(Текст, ".") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, ".");
	ИначеЕсли Найти(Текст, ",") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, ",");
	ИначеЕсли Найти(Текст, "-") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, "-");
	ИначеЕсли Найти(Текст, "/") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, "/");
	ИначеЕсли Найти(Текст, "\") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, "\");
	Иначе
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, " ");
	КонецЕсли;
	Если Подстроки.Количество() = 1 Тогда
		// Единственное слово - пытаемся получить месяц
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Текст) Тогда
			МесяцЧислом = Число(Текст);
			Если МесяцЧислом >= 1 И МесяцЧислом <=12 Тогда
				ДатаПоТексту = Дата(ТекущийГод, МесяцЧислом, 1);
				Если СтрДлина(Текст) = 1 Тогда
					СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='М/гг'"));
				Иначе
					СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММ/гг'"));
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;                
		Иначе
			СписокМесяцев = СписокМесяцевПоСтроке(Текст);
			Для Каждого Месяц Из СписокМесяцев Цикл
				ДатаПоТексту = Дата(ТекущийГод, Месяц, 1);
				СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гг'"));
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли Подстроки.Количество() = 2 Тогда
		// Два слова - первое считаем месяцем, второе - годом
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
			Если ПустаяСтрока(Подстроки[1]) Тогда
				ГодЧислом = 0;
				Подстроки[1] = "0";
				ТекстВозврата = Текст + "0";
			Иначе
				ГодЧислом = Число(Подстроки[1]);
				ТекстВозврата = "";
			КонецЕсли;
			Если ГодЧислом > 3000 Тогда
				Возврат СписокВозврата;
			КонецЕсли;
			Если СтрДлина(Подстроки[1]) <= 1 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 3) + Подстроки[1]);
				СтрокаФорматированияГода = "г";
			ИначеЕсли СтрДлина(Подстроки[1]) = 2 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 2) + Подстроки[1]);
				СтрокаФорматированияГода = "гг";
			ИначеЕсли СтрДлина(Подстроки[1]) = 3 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 1) + Подстроки[1]);
				СтрокаФорматированияГода = "гггг";
			КонецЕсли;                    
		Иначе
			// Второе слово может быть только годом
			Возврат СписокВозврата;
		КонецЕсли;                
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
			МесяцЧислом = Число(Подстроки[0]);
			Если МесяцЧислом >= 1 И МесяцЧислом <= 12 Тогда
				// Если "правильный" месяц и год
				ДатаПоТексту = Дата(ГодЧислом, МесяцЧислом, 1);
				СписокВозврата.Добавить(ТекстВозврата);
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;                
		Иначе
			СписокМесяцев = СписокМесяцевПоСтроке(Подстроки[0]);
			Если СписокМесяцев.Количество() = 1 Тогда
				ДатаПоТексту = Дата(ГодЧислом, СписокМесяцев[0], 1);
				СписокВозврата.Добавить("");
			Иначе
				Для Каждого Месяц Из СписокМесяцев Цикл
					ДатаПоТексту = Дата(ГодЧислом, Месяц, 1);
					СписокВозврата.Добавить(Формат(Дата(ГодЧислом, Месяц, 1), "ДФ='ММММ гг'"));
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат СписокВозврата;
КонецФункции

// Подбирает массив номеров месяцев, соответствующих переданной строке
// например, для строки "ма" это будут 3 и 5, для "а" - 4 и 8
// используется в ПодобратьДатуПоТексту.
//
Функция СписокМесяцевПоСтроке(Текст)
	СписокМесяцев = Новый СписокЗначений;
	Месяцы = Новый Соответствие;
	МесяцыВозврата = Новый Массив;
	Для Счетчик = 1 По 12 Цикл
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='ММММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='МММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
	КонецЦикла;
	Для Каждого ЭлементСписка Из СписокМесяцев Цикл
		Если ВРег(Текст) = ВРег(Лев(ЭлементСписка.Представление, СтрДлина(Текст))) Тогда
			Месяцы[ЭлементСписка.Значение] = 0;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент Из Месяцы Цикл
		МесяцыВозврата.Добавить(Элемент.Ключ);
	КонецЦикла;
	Возврат МесяцыВозврата;
КонецФункции // СписокМесяцевПоСтроке()

// Вызывает функцию, автоматически формирующую строку-представление даты,
// на основе произвольного набора символов, во время начало ввода строки символов.
//
Процедура ДатаКакМесяцАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	ДанныеВыбора = ДатаКакМесяцПодобратьДатуПоТексту(Текст);
	//Если Список.Количество() = 1 Тогда
	//	ТекстАвтоПодбора = Список[0];
	//КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры // ДатаКакМесяцАвтоПодборТекста()

// Вызывает функцию, автоматически формирующую строку-представление даты,
// на основе произвольного набора символов, во время окончания ввода строки символов.
//
Процедура ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка) Экспорт
	Значение = ДатаКакМесяцПодобратьДатуПоТексту(Текст);
	//Если Список.Количество() = 1 Тогда
	//	Значение = Текст;
	//Иначе
	//	Значение = Список;
	//КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры //ДатаКакМесяцОкончаниеВводаТекста()

// Устанавливает формат представления даты.
//
Функция ДатаКакМесяцПредставление(ДатаДата) Экспорт
	
	Возврат Формат(ДатаДата, "ДФ='ММММ гггг'");
	
КонецФункции // ДатаКакМесяцПредставление()

#КонецОбласти
