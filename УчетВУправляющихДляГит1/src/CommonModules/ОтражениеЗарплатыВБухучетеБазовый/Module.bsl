////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в бухучете базовая реализация.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует соответствие видов операций по зарплате и статей расходов.
//
//	Параметры - нет
//
// Возвращаемое значение - соответствие
//						Ключ - тип ПеречислениеСсылка.ВидыОперацийПоЗарплате
//						Значение - тип СправочникСсылка.СтатьиРасходовЗарплата.
//
Функция СоответствиеВидОперацииСтатьяРасходов() Экспорт

	СоответствиеСпособовРасчетов = ЗарплатаКадры.СтатьиРасходовПоСпособамРасчетовСФизическимиЛицами();
	
	ВидыОперацийМенеджер 	= Перечисления.ВидыОперацийПоЗарплате;
	СпособРасчетовМенеджер 	= Перечисления.СпособыРасчетовСФизическимиЛицами;
	
	СоответствиеОпераций = Новый Соответствие;
	Для каждого ЗначениеПеречисления Из ВидыОперацийМенеджер Цикл
	
		Если ЗначениеПеречисления = ВидыОперацийМенеджер.АлиментыПрочиеИсполнительныеЛистыКонтрагенты Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.РасчетыСКонтрагентами]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.ВознаграждениеПлатежногоАгентаКонтрагенты Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.РасчетыСКонтрагентами]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.ПрочиеРасчетыСПерсоналом Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.ПрочиеРасчетыСПерсоналом]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.Дивиденды Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.Дивиденды]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.ДивидендыСотрудников Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.ДивидендыСотрудникам]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.НДФЛДоходыКонтрагентов Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.РасчетыСКонтрагентами]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.НДФЛРасчетыСБывшимиСотрудниками Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.РасчетыСКонтрагентами]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.НДФЛПрочиеРасчетыСПерсоналом Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.ПрочиеРасчетыСПерсоналом]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.НФДЛДивиденды Тогда
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.Дивиденды]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.НФДЛДивидендыСотрудникам Тогда	
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.ДивидендыСотрудникам]);
		ИначеЕсли ЗначениеПеречисления = ВидыОперацийМенеджер.НачисленоПроцентовПоЗайму Тогда	
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, Справочники.СтатьиРасходовЗарплата.ПустаяСсылка());
		Иначе
			СоответствиеОпераций.Вставить(ЗначениеПеречисления, СоответствиеСпособовРасчетов[СпособРасчетовМенеджер.ОплатаТруда]);
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат СоответствиеОпераций;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц) Экспорт
	
	ОтражениеВРегламентированномУчетеНастройкиОрганизаций = ОтражениеЗарплатыВБухучете.ОтражениеВРегламентированномУчетеНастройкиОрганизаций();
	
	Если Не ОтражениеВРегламентированномУчетеНастройкиОрганизаций.ФормироватьПроводкиВКонцеПериодаПоОрганизациям[Организация] Тогда
		
		// Получим структуру с результатами отражения зарплаты
		// структура РезультатОтраженияЗарплатыДляБухучета
		// ключ - имя таблицы, значение - таблица значений с полученными данными
		// в структуре присутствуют все таблицы, а заполнены только те, которые входят в СтрокаСписокТаблиц.
		ДанныеДляОтражения = ДанныеДляОтраженияЗарплатыВБухучетеПоДаннымДляПроведения(ПериодРегистрации, Организация, СтрокаСписокТаблиц, ДанныеДляПроведения);
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
			
			ЕстьДвижениеВыплатаОтпусковЗаСчетРезерва = Ложь;
			Если ТипЗнч(Движения) = Тип("Структура") Тогда
				ЕстьДвижениеВыплатаОтпусковЗаСчетРезерва = Движения.Свойство("ОценочныеОбязательстваПоСотрудникам");
			Иначе
				ЕстьДвижениеВыплатаОтпусковЗаСчетРезерва = Движения.Найти("ОценочныеОбязательстваПоСотрудникам") <> Неопределено;
			КонецЕсли;

			Если ЕстьДвижениеВыплатаОтпусковЗаСчетРезерва Тогда
				
				ДокументСсылка = Движения.ОценочныеОбязательстваПоСотрудникам.Отбор.Регистратор.Значение;  
			 	
				МодульРезервОтпусков = ОбщегоНазначения.ОбщийМодуль("РезервОтпусков");
				НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
				
				Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
					
					КолонкиСуммирования = Неопределено;
					ОтражениеЗарплатыВБухучете.НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы(КолонкиСуммирования);
					НачисленныеОтпуска = ОтражениеЗарплатыВБухучете.НоваяТаблицаНачисленныеОтпуска();
					МодульРезервОтпусков.СписатьРасходыПоОплатеОтпускаЗаСчетОценочныхОбязательств(Организация, 
						ПериодРегистрации, ДокументСсылка, ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы, НачисленныеОтпуска, КолонкиСуммирования);
					МодульРезервОтпусков.СформироватьДвиженияВыплатаОтпусковЗаСчетРезерва(Движения, Отказ, Организация, ПериодРегистрации, НачисленныеОтпуска);
					ДвиженияВыплатаОтпусковЗаСчетРезерва = Движения.ОценочныеОбязательстваПоСотрудникам.Выгрузить();
					МодульРезервОтпусков.СформироватьДвиженияСписаниеРезерваОтпусков (Движения, Отказ, Организация, ПериодРегистрации, ДвиженияВыплатаОтпусковЗаСчетРезерва);

				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОтражениеЗарплатыВБухучете.СвернутьДанныеДляОтраженияЗарплатыВБухучете(ДанныеДляОтражения, "Сотрудник,Начисление,ДатаНачала");
		
		// формирование проводок
		ОтражениеЗарплатыВБухучетеПереопределяемый.СформироватьДвижения(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляОтражения);
		
	КонецЕсли;

КонецПроцедуры

Функция ДанныеДляОтраженияЗарплатыВБухучете(Организация, ПериодРегистрации) Экспорт

	ДанныеДляОтражения = ОтражениеЗарплатыВБухучете.НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете();
	
	ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(Организация, ПериодРегистрации);
	ТаблицаВзносов 	  = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносов(Организация, ПериодРегистрации);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтражениеЗарплатыВБухучете.СведенияОБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ТаблицаНачислений, ТаблицаВзносов);
	ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы = ОтражениеЗарплатыВБухучете.ТаблицаНачисленийИВзносовДляБухучета(МенеджерВременныхТаблиц);
	
	ТаблицаНДФЛ = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНДФЛ(Организация, ПериодРегистрации);
	ДанныеДляОтражения.НачисленныйНДФЛ = ОтражениеЗарплатыВБухучете.ТаблицаНДФЛДляБухучета(ТаблицаНДФЛ);
	
	ТаблицаУдержаний = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеУдержаний(Организация, ПериодРегистрации);
	ДанныеДляОтражения.УдержаннаяЗарплата = ТаблицаБухучетУдержаний(ТаблицаУдержаний);
	
	ЗаполнитьСтатьюРасходовПоВидуОперации(ДанныеДляОтражения);
	
	Возврат ДанныеДляОтражения;

КонецФункции

// Получим отражение в бухучете начислений и поместим во временную таблицу ВТБухучетНачислений.
// Описание параметров см ОтражениеЗарплатыВБухучете.СоздатьВТБухучетНачислений.
Процедура СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц) Экспорт
	
	ЕстьЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, ПериодРегистрации);
	
	// Получим сведения о настройке бухучета для начислений сотрудников.
	ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеНачисленийСотрудников(МенеджерВременныхТаблиц, "ВТНачисленияДляРаспределения", "Сотрудник,ДатаНачала");
	
	ОтражениеЗарплатыВБухучете.СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПроцентЕНВД", ?(ПроцентЕНВД = Неопределено, 0, ПроцентЕНВД));
	Запрос.УстановитьПараметр("ЕстьЕНВД", ЕстьЕНВД);
	
	РасходыБезСпособаОтражения = Новый Массив;
	РасходыБезСпособаОтражения.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	РасходыБезСпособаОтражения.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	РасходыБезСпособаОтражения.Добавить(Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты);
	Запрос.УстановитьПараметр("РасходыБезСпособаОтражения", РасходыБезСпособаОтражения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ПериодРегистрации,
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ВидОперации,
	|	Начисления.Начисление,
	|	Начисления.ДокументОснование,
	|	Начисления.Сумма,
	|	ВЫБОР
	|		КОГДА Начисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ Начисления.ДатаНачала < Начисления.ПериодРегистрации
	|			ТОГДА Начисления.ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|			ТОГДА СведенияОБухучетеНачисленийСотрудников.ОтношениеКЕНВД
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	СведенияОБухучетеНачисленийСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	ВидыНачисленияДляНУ.ВидНачисленияОплатыТрудаДляНУ,
	|	ВЫБОР
	|		КОГДА ВидыРасчета.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.РайонныйКоэффициент), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.СевернаяНадбавка))
	|				И ВидыРасчета.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьПоБазе,
	|	ВидыРасчета.ВходитВБазуРКИСН КАК ВходитВБазуРКИСН,
	|	ВЫБОР
	|		КОГДА ВидыРасчета.ВидОперацииПоЗарплате В (&РасходыБезСпособаОтражения)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасходыБезСпособаОтражения
	|ПОМЕСТИТЬ ВТСписокНачислений
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачисленийСотрудников КАК СведенияОБухучетеНачисленийСотрудников
	|		ПО Начисления.Сотрудник = СведенияОБухучетеНачисленийСотрудников.Сотрудник
	|			И Начисления.Подразделение = СведенияОБухучетеНачисленийСотрудников.Подразделение
	|			И Начисления.ДатаНачала = СведенияОБухучетеНачисленийСотрудников.Период
	|			И Начисления.Начисление = СведенияОБухучетеНачисленийСотрудников.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеВидНачисленияОплатыТрудаДляНУ КАК ВидыНачисленияДляНУ
	|		ПО Начисления.Начисление = ВидыНачисленияДляНУ.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК ВидыРасчета
	|		ПО Начисления.Начисление = ВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеНачисленийСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНачислений.ПериодРегистрации,
	|	СписокНачислений.ИдентификаторСтроки,
	|	СписокНачислений.Организация,
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ФизическоеЛицо,
	|	СписокНачислений.Подразделение,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.ДатаОкончания,
	|	СписокНачислений.ВидОперации,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ДокументОснование,
	|	СписокНачислений.ПериодПринятияРасходов,
	|	ВЫБОР
	|		КОГДА СписокНачислений.РасходыБезСпособаОтражения
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|		ИНАЧЕ СписокНачислений.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	СписокНачислений.ВидНачисленияОплатыТрудаДляНУ,
	|	СписокНачислений.РаспределятьПоБазе,
	|	СписокНачислений.ВходитВБазуРКИСН,
	|	ВЫБОР
	|		КОГДА СписокНачислений.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|			ТОГДА ВЫБОР
	|					КОГДА ОтношениеКЕНВДЗатратНаЗарплату.Ссылка = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|						ТОГДА ВЫРАЗИТЬ(СписокНачислений.Сумма * &ПроцентЕНВД / 100 КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СписокНачислений.Сумма - (ВЫРАЗИТЬ(СписокНачислений.Сумма * &ПроцентЕНВД / 100 КАК ЧИСЛО(15, 2)))
	|				КОНЕЦ
	|		ИНАЧЕ СписокНачислений.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА СписокНачислений.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|					ТОГДА ОтношениеКЕНВДЗатратНаЗарплату.Ссылка
	|				ИНАЧЕ СписокНачислений.ОтношениеКЕНВД
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
	|ИЗ
	|	ВТСписокНачислений КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ОтношениеКЕНВДЗатратНаЗарплату КАК ОтношениеКЕНВДЗатратНаЗарплату
	|		ПО (ОтношениеКЕНВДЗатратНаЗарплату.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД), ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)))
	|			И (СписокНачислений.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОблагаетсяЕНВД,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений
	|ГДЕ
	|	БухучетНачислений.ВходитВБазуРКИСН
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНачислений.ИдентификаторСтроки,
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.Подразделение,
	|	СписокНачислений.Сумма,
	|	СписокНачислений.СпособОтраженияЗарплатыВБухучете,
	|	СписокНачислений.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК СписокНачислений
	|ГДЕ
	|	СписокНачислений.РаспределятьПоБазе";
	
	Результат = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результат.Количество();
	БазаНачислений = Результат[КоличествоРезультатов-2].Выгрузить();
	НачисленияДляРаспределения = Результат[КоличествоРезультатов-1].Выгрузить();
		
	Начисления = НачисленияДляРаспределения.СкопироватьКолонки();
	
	Отбор = Новый Структура("Сотрудник,Подразделение");
	БазаНачислений.Индексы.Добавить("Сотрудник,Подразделение");
	
	Для каждого СтрокаНачисления Из НачисленияДляРаспределения Цикл
		
		Отбор.Сотрудник = СтрокаНачисления.Сотрудник;
		Отбор.Подразделение = СтрокаНачисления.Подразделение;
		СтрокиБазы = БазаНачислений.НайтиСтроки(Отбор);
		
		Если СтрокиБазы.Количество() > 0 Тогда
			
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиБазы,"Сумма");
			Результаты = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(СтрокаНачисления.Сумма, Коэффициенты);
			
			Если Результаты = Неопределено Тогда
				НоваяСтрока = Начисления.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНачисления);
				Продолжить;
			КонецЕсли;
			
			Индекс = 0;
			Для Каждого СтрокаБазы Из СтрокиБазы Цикл
				
				НоваяСтрока = Начисления.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНачисления);
				НоваяСтрока.Сумма = Результаты[Индекс];
				НоваяСтрока.СпособОтраженияЗарплатыВБухучете = СтрокаБазы.СпособОтраженияЗарплатыВБухучете;
				НоваяСтрока.ОблагаетсяЕНВД = СтрокаБазы.ОблагаетсяЕНВД;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		Иначе
			
			НоваяСтрока = Начисления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНачисления);
			
		КонецЕсли;
		
	КонецЦикла;
		
	Запрос.УстановитьПараметр("Начисления", Начисления);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	Начисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Начисления.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТНачисленияПоБазе
	|ИЗ
	|	&Начисления КАК Начисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Организация КАК Организация,
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ) КАК ДатаОкончания,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.Начисление КАК Начисление,
	|	НачисленияПоБазе.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	Начисления.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	НачисленияПоБазе.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	НачисленияПоБазе.Сумма КАК Сумма,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	Начисления.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	Начисления.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ
	|ПОМЕСТИТЬ ВТБухучетНачислений
	|ИЗ
	|	ВТСписокНачислений КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияПоБазе КАК НачисленияПоБазе
	|		ПО Начисления.ИдентификаторСтроки = НачисленияПоБазе.ИдентификаторСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ДатаНачала,
	|	КОНЕЦПЕРИОДА(БухучетНачислений.ДатаНачала, МЕСЯЦ),
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка),
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ОблагаетсяЕНВД,
	|	БухучетНачислений.Сумма,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.ПериодПринятияРасходов,
	|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений
	|ГДЕ
	|	НЕ БухучетНачислений.РаспределятьПоБазе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияПоБазе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСписокНачислений";
	
	Запрос.Выполнить();

КонецПроцедуры

// Формирует временную таблицу ВТСведенияОБухучетеЗарплатыСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в ОписательВременныхТаблиц.
//
//	Структура таблицы ВТСведенияОБухучетеЗарплатыСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Сотрудник, Период.
//			Поля Организация и Подразделение могут отсутствовать, если заполнены параметр Организация, Подразделение.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено) Экспорт
	
	МассивИменПолейОтбора = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицы, ",");
	ИмяПоляСотрудник     = МассивИменПолейОтбора[0];
	ИмяПоляПериод        = МассивИменПолейОтбора[1];
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ОрганизацияВТаблице   = Организация = Неопределено;
	ПодразделениеВТаблице = Подразделение = Неопределено;
	
	Если НЕ ОрганизацияВТаблице Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&Организация КАК Организация,
		|	Таблица." + ИмяПоляПериод + " КАК Период
		|ПОМЕСТИТЬ ВТОрганизацииДляСведенийОБухучетеЗарплатыСотрудников
		|ИЗ
		|	" + ИмяВременнойТаблицы + " КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Организация КАК Организация,
		|	Таблица." + ИмяПоляПериод + " КАК Период
		|ПОМЕСТИТЬ ВТОрганизацииДляСведенийОБухучетеЗарплатыСотрудников
		|ИЗ
		|	" + ИмяВременнойТаблицы + " КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	МаксимальныеПериоды.Организация КАК Организация,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплаты.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТБухучетОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Организация КАК Организация,
	|		Организации.Период КАК Период,
	|		МАКСИМУМ(БухучетЗарплатыОрганизаций.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТОрганизацииДляСведенийОБухучетеЗарплатыСотрудников КАК Организации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыОрганизаций КАК БухучетЗарплатыОрганизаций
	|			ПО Организации.Организация = БухучетЗарплатыОрганизаций.Организация
	|				И Организации.Период >= БухучетЗарплатыОрганизаций.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Организации.Организация,
	|		Организации.Период) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыОрганизаций КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Организация = БухучетЗарплаты.Организация
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОрганизацииДляСведенийОБухучетеЗарплатыСотрудников";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица." + ИмяПоляСотрудник + " КАК Сотрудник,
		|	Таблица." + ИмяПоляПериод + " КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиДляСведенийОБухучетеЗарплаты
		|ИЗ
		|	" + ИмяВременнойТаблицы + " КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	МаксимальныеПериоды.Сотрудник КАК Сотрудник,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплаты.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТБухучетСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		Подразделения.Сотрудник КАК Сотрудник,
	|		Подразделения.Период КАК Период,
	|		МАКСИМУМ(БухучетЗарплатыПодразделений.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТСотрудникиДляСведенийОБухучетеЗарплаты КАК Подразделения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплатыПодразделений
	|			ПО Подразделения.Сотрудник = БухучетЗарплатыПодразделений.Сотрудник
	|				И Подразделения.Период >= БухучетЗарплатыПодразделений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Подразделения.Сотрудник,
	|		Подразделения.Период) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Сотрудник = БухучетЗарплаты.Сотрудник
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСотрудникиДляСведенийОБухучетеЗарплаты";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	" + ?(ОрганизацияВТаблице,"ВременнаяТаблица.Организация","&Организация") + " КАК Организация,
	|	" + ?(ПодразделениеВТаблице, "ВременнаяТаблица.Подразделение","&Подразделение") + " КАК Подразделение,
	|	ВременнаяТаблица." + ИмяПоляСотрудник + " КАК Сотрудник,
	|	ВременнаяТаблица." + ИмяПоляПериод + " КАК Период,
	|	ВЫБОР
	|		КОГДА БухучетСотрудников.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) 
	|			ТОГДА БухучетСотрудников.СтатьяФинансирования
	|		ИНАЧЕ БухучетОрганизаций.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) 
	|			ТОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ БухучетОрганизаций.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетСотрудников.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка) 
	|			ТОГДА БухучетСотрудников.ОтношениеКЕНВД
	|		ИНАЧЕ БухучетОрганизаций.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|ИЗ
	|	" + ИмяВременнойТаблицы + " КАК ВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетСотрудников КАК БухучетСотрудников
	|		ПО ВременнаяТаблица." + ИмяПоляСотрудник + " = БухучетСотрудников.Сотрудник
	|			И ВременнаяТаблица." + ИмяПоляПериод + " = БухучетСотрудников.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетОрганизаций КАК БухучетОрганизаций
	|		ПО ВременнаяТаблица." + ИмяПоляПериод + " = БухучетОрганизаций.Период
	|			" + ?(ОрганизацияВТаблице,"И ВременнаяТаблица.Организация = БухучетОрганизаций.Организация","") + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетОрганизаций";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу ВТСведенияОБухучетеНачислений
// получает настройки бухучета из ПВР Начисления, у которых задана стратегия отражения в учете КакЗаданоВидуРасчета.
// 
// Параметры:
//		МенеджерВременныхТаблиц - в менеджер помещается таблица ВТСведенияОБухучетеНачислений.
//
Процедура СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	Начисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	Начисления.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТСведенияОБухучетеНачислений
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисление";
	
	Запрос.Выполнить();

КонецПроцедуры

Функция ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете() Экспорт

	ТекстЗапроса = "";
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.ОтражениеЗарплатыВБухгалтерскомУчете") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеЗарплатыВБухучетеДляНебольшихОрганизаций");
		ТекстЗапроса = Модуль.ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СоздатьВТНачисленияБазаОтпуска(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	СписокКатегорий = Новый Массив;
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
	СписокКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты);
	
	Запрос.УстановитьПараметр("СписокКатегорий", СписокКатегорий);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТНачисленияБазаОтпуска
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	НЕ Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (&СписокКатегорий)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	Запрос.Выполнить();
	
КонецПроцедуры

// Создает временную таблицу ВТНачисленияСДаннымиЕНВД 
//		Поля таблицы ВТНачисленияСДаннымиЕНВД
//			Сотрудник
//			Начисление
//			ДатаНачала
//			ДоляЕНВД, число от 0 до 1.
//
// Параметры:
// 		Организация
//		ПериодРегистрации
//		МенеджерВременныхТаблиц, содержит временные таблицы
//			ВТНачисления - начисления, которые дополняются долей ЕНВД.
//
Процедура ДополнитьСведенияОДоходахДаннымиОЕНВДПриРасчете(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт

	ПлательщикЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, ПериодРегистрации);
	
	Если Не ПлательщикЕНВД Тогда
		// не используется ЕНВД, создадим таблицу с нулевой долей ЕНВД
		ОтражениеЗарплатыВБухучете.СоздатьВТНачисленияСДаннымиЕНВДНулеваяДоляЕНВД(МенеджерВременныхТаблиц);
		Возврат;
	КонецЕсли;
	
	ПроцентЕНВД= ОтражениеЗарплатыВБухучете.ПроцентЕНВД(Организация, ПериодРегистрации);
	Если ПроцентЕНВД = Неопределено Тогда
		ОтражениеЗарплатыВБухучете.ПроверитьНеобходимостьРегистрацииПроцентаЕНВДНаТекущийМесяцВызватьИсключение(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, "ВТНачисления", "Сотрудник,ДатаНачала");
	КонецЕсли;
	
	ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	&Организация КАК Организация,
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	СписокНачислений.Начисление КАК Начисление,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала,
	|	СписокНачислений.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации,
	|	СписокНачислений.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплаты.ПустаяСсылка) КАК ДокументОснование
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО СписокНачислений.Сотрудник = Сотрудники.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
	|		ПО СписокНачислений.Начисление = НачисленияВидОперации.НачислениеУдержание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачислениеУдержаниеВидОперации";
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаНачислений = Результат[0].Выгрузить();
	
	ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(ТаблицаНачислений, Истина);
	
	//ЗапросБухучет = Новый Запрос;
	//ЗапросБухучет.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	СписокНачислений.Организация КАК Организация,
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	СписокНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокНачислений.Подразделение КАК ПодразделениеОрганизации,
	|	СписокНачислений.Подразделение КАК Подразделение,
	|	СписокНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	СписокНачислений.Начисление КАК Начисление,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала,
	|	СписокНачислений.ДатаОкончания КАК ДатаОкончания,
	|	СписокНачислений.ВидОперации КАК ВидОперации,
	|	СписокНачислений.Сумма КАК Сумма,
	|	СписокНачислений.ДокументОснование КАК ДокументОснование,
	|	СписокНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
	|ИЗ
	|	&ТаблицаНачислений КАК СписокНачислений";
	Запрос.Выполнить();

	СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, Запрос.МенеджерВременныхТаблиц);
	
	ОтражениеЗарплатыВБухучете.СоздатьВТНачисленияСДаннымиЕНВДПоТаблицеБухучетНачислений(Запрос.МенеджерВременныхТаблиц, "ВТБухучетНачислений", "ВТНачисленияДляРаспределения");

КонецПроцедуры

Процедура ДополнитьСведенияОВзносахДаннымиБухучета(Движения, Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц, ИмяВременнойТаблицы) Экспорт

	// в базовой функциональности не выполняется

КонецПроцедуры 

// Функция формирует структуру с данными отражения зарплаты для бухучета.
//
// Параметры:
//  Организация, тип СправочникСсылка.Организации.
//  ПериодРегистрации - тип дата, первое число месяца.
//  СтрокаСписокТаблиц - Тип Строка, в строке переданы имена таблиц, которые необходимо заполнить
//				         имена таблиц соответствуют именам табличных частей документа ОтражениеЗарплатыВБухучете.
//  Отказ - Булево
//  ДанныеДляПроведения - Структура, ключ - имя регистра, значение - таблица значений с движениями документа
//						это источник данных, если Неопределено, тогда источник данных - движения регистров.
//
// Возвращаемое значение
// 		Структура ДанныеДляОтражения
//			Ключ - имя таблицы, соответствует именам табличных частей документа ОтражениеЗарплатыВБухучете.
//			Значение - таблица значений, соответствующая структуре табличных частей документа ОтражениеЗарплатыВБухучете.
//
Функция ДанныеДляОтраженияЗарплатыВБухучетеПоДаннымДляПроведения(ПериодРегистрации, Организация, СтрокаСписокТаблиц, РезультатыРасчетаЗарплаты)
	
	ДанныеДляОтражения = ОтражениеЗарплатыВБухучете.НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете();
	
	Если СтрНайти(СтрокаСписокТаблиц, "НачисленнаяЗарплатаИВзносы") > 0 Тогда
		
		СтраховыеВзносы = РезультатыРасчетаЗарплаты.СтраховыеВзносы;
		Если СтраховыеВзносы = Неопределено Тогда
			СтраховыеВзносы = Новый ТаблицаЗначений;
		КонецЕсли;	
		ТаблицаВзносов = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносовПоТаблице(СтраховыеВзносы);
		
		НачисленияУдержания = РезультатыРасчетаЗарплаты.НачисленияУдержания;
		Если НачисленияУдержания = Неопределено Тогда
			НачисленияУдержания = Новый ТаблицаЗначений;
		КонецЕсли;	
		ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачисленийПоТаблице(НачисленияУдержания);
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ОтражениеЗарплатыВБухучете.СведенияОБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ТаблицаНачислений, ТаблицаВзносов);
		ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы = ОтражениеЗарплатыВБухучете.ТаблицаНачисленийИВзносовДляБухучета(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	Если СтрНайти(СтрокаСписокТаблиц, "НачисленныйНДФЛ") > 0 Тогда
		
		НачисленияУдержания = РезультатыРасчетаЗарплаты.НачисленияУдержания;
		Если НачисленияУдержания = Неопределено Тогда
			НачисленияУдержания = Новый ТаблицаЗначений;
		КонецЕсли;
		ТаблицаНДФЛ = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНДФЛПоТаблице(НачисленияУдержания);
		
		ДанныеДляОтражения.НачисленныйНДФЛ = ОтражениеЗарплатыВБухучете.ТаблицаНДФЛДляБухучета(ТаблицаНДФЛ);
		
	КонецЕсли;
	
	Если СтрНайти(СтрокаСписокТаблиц, "УдержаннаяЗарплата") > 0 Тогда
		
		НачисленияУдержания = РезультатыРасчетаЗарплаты.НачисленияУдержания;
		Если НачисленияУдержания = Неопределено Тогда
			НачисленияУдержания = Новый ТаблицаЗначений;
		КонецЕсли;
		ТаблицаУдержаний = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеУдержанийПоТаблице(НачисленияУдержания);
		
		ДанныеДляОтражения.УдержаннаяЗарплата = ТаблицаБухучетУдержаний(ТаблицаУдержаний);
		
	КонецЕсли;

	ЗаполнитьСтатьюРасходовПоВидуОперации(ДанныеДляОтражения);
	
	Возврат ДанныеДляОтражения;
	
КонецФункции

Функция ТаблицаБухучетУдержаний(ТаблицаУдержаний)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаУдержаннаяЗарплата", ТаблицаУдержаний);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УдержаннаяЗарплата.Организация КАК Организация,
	|	УдержаннаяЗарплата.Сотрудник КАК Сотрудник,
	|	УдержаннаяЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение КАК Подразделение,
	|	УдержаннаяЗарплата.ДатаНачала КАК ДатаНачала,
	|	УдержаннаяЗарплата.Контрагент КАК Контрагент,
	|	УдержаннаяЗарплата.ВидОперации КАК ВидОперации,
	|	УдержаннаяЗарплата.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУдержаннаяЗарплата
	|ИЗ
	|	&ТаблицаУдержаннаяЗарплата КАК УдержаннаяЗарплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержаннаяЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	УдержаннаяЗарплата.Сотрудник КАК Сотрудник,
	|	УдержаннаяЗарплата.Подразделение КАК Подразделение,
	|	УдержаннаяЗарплата.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	УдержаннаяЗарплата.ДатаНачала КАК ДатаНачала,
	|	УдержаннаяЗарплата.ВидОперации КАК ВидОперации,
	|	УдержаннаяЗарплата.Контрагент КАК Контрагент,
	|	СУММА(УдержаннаяЗарплата.Сумма) КАК Сумма
	|ИЗ
	|	ВТУдержаннаяЗарплата КАК УдержаннаяЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО УдержаннаяЗарплата.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО УдержаннаяЗарплата.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.ДатаНачала,
	|	УдержаннаяЗарплата.ВидОперации,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(УдержаннаяЗарплата.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	ВидОперации";
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	БухучетУдержаний = ОтражениеЗарплатыВБухучете.НоваяТаблицаБухучетУдержаннаяЗарплата();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(БухучетУдержаний.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат БухучетУдержаний;	

КонецФункции 

// Заполняет параметры для расчета оценочных обязательств по отпускам.
//
// Параметры:
// 	Организация         - СправочникСсылка.Организации
// 	ПериодРегистрации   - Дата
// 	ПараметрыДляРасчета - Структура - параметры, которые будут заполняться, 
//                        см. ОтражениеЗарплатыВБухучете.ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков.
// 	Сотрудники          - Массив, Неопределенно
//
Процедура ЗаполнитьПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, ПараметрыДляРасчета, Сотрудники) Экспорт

	НачисленнаяЗарплатаИВзносы = НачисленияИВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Сотрудники);
	ФондОплатыТрудаИСтраховыеВзносы = ОтражениеЗарплатыВБухучете.ФондОплатыТрудаИСтраховыеВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, НачисленнаяЗарплатаИВзносы);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ФондОплатыТрудаИСтраховыеВзносы, ПараметрыДляРасчета.ФондОплатыТрудаИСтраховыеВзносы);
	
	ОстаткиОтпусковДляРасчетаОценочныхОбязательств = ОтражениеЗарплатыВБухучете.ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, ПериодРегистрации, Сотрудники);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОстаткиОтпусковДляРасчетаОценочныхОбязательств, ПараметрыДляРасчета.ОстаткиОтпусков);

КонецПроцедуры

Функция НачисленияИВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Сотрудники)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(Организация, ПериодРегистрации, Сотрудники);
	ТаблицаВзносов 	  = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносов(Организация, ПериодРегистрации, Сотрудники);
	ОтражениеЗарплатыВБухучете.СведенияОБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ТаблицаНачислений, ТаблицаВзносов);
	
	Возврат ОтражениеЗарплатыВБухучете.ТаблицаНачисленийИВзносовДляБухучета(МенеджерВременныхТаблиц);
	
КонецФункции

Процедура ЗаполнитьРегистрациюВНалоговомОрганеВКоллекцииСтрок(Организация, Период, КоллекцияНачисленныйНДФЛ) Экспорт
	
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
	ЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ГоловнаяОрганизация,"ЮридическоеФизическоеЛицо");
	ОрганизацияЮрлицо = ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ГоловнаяОрганизация);
	
	Если ТипЗнч(КоллекцияНачисленныйНДФЛ) = Тип("ДанныеФормыКоллекция") Тогда
		ТаблицаНДФЛ = КоллекцияНачисленныйНДФЛ.Выгрузить();
	Иначе
		// передана таблица значений
		
		ТаблицаНДФЛ = КоллекцияНачисленныйНДФЛ.Скопировать();
		
		Если КоллекцияНачисленныйНДФЛ.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
			КоллекцияНачисленныйНДФЛ.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
		КонецЕсли;
		
	КонецЕсли;
	
	ПоляСвертки = "КодНалоговогоОргана";
	Если ОрганизацияЮрлицо Тогда
		ПоляСвертки = ПоляСвертки + ",КПП";
	КонецЕсли;
	ПоляДополнительногоОтбора = ПоляСвертки;
	Если Период < УчетНДФЛ.ДатаПереходаНаКодыОКТМО() Тогда
		ПоляСвертки = ПоляСвертки + ",КодПоОКАТО";
	Иначе
		ПоляСвертки = ПоляСвертки + ",КодПоОКТМО";
	КонецЕсли;
	
	ТаблицаНДФЛ.Свернуть(ПоляСвертки);
	ТаблицаНДФЛ.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка КАК РегистрацияВНалоговомОргане,
	|	РегистрацииВНалоговомОргане.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацииВНалоговомОргане.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацииВНалоговомОргане.КПП КАК КПП,
	|	РегистрацииВНалоговомОргане.Код КАК КодНалоговогоОргана
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &Организация";
	ДействующиеРегистрации = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура(ПоляСвертки);
	ОтборДополнительный = Новый Структура(ПоляДополнительногоОтбора);
	
	Для каждого СтрокаТЗ Из ТаблицаНДФЛ Цикл
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТЗ);
		Регистрации = ДействующиеРегистрации.НайтиСтроки(Отбор);
		Если Регистрации.Количество() > 0 Тогда
			СтрокаТЗ.РегистрацияВНалоговомОргане = Регистрации[0].РегистрацияВНалоговомОргане;
		Иначе
			ЗаполнитьЗначенияСвойств(ОтборДополнительный, СтрокаТЗ);
			Регистрации = ДействующиеРегистрации.НайтиСтроки(ОтборДополнительный);
			Если Регистрации.Количество() > 0 Тогда
				СтрокаТЗ.РегистрацияВНалоговомОргане = Регистрации[0].РегистрацияВНалоговомОргане;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаКоллекции Из КоллекцияНачисленныйНДФЛ Цикл
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаКоллекции);
		Регистрации = ТаблицаНДФЛ.НайтиСтроки(Отбор);
		Если Регистрации.Количество() > 0 Тогда
			СтрокаКоллекции.РегистрацияВНалоговомОргане = Регистрации[0].РегистрацияВНалоговомОргане;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСтатьюРасходовПоВидуОперации(ДанныеДляОтражения)

	СоответствиеОпераций = СоответствиеВидОперацииСтатьяРасходов();
	
	Для каждого ЭлементСтруктуры Из ДанныеДляОтражения Цикл
		
		Для каждого СтрокаТЗ Из ЭлементСтруктуры.Значение Цикл
			СтрокаТЗ.СтатьяРасходов = СоответствиеОпераций[СтрокаТЗ.ВидОперации];
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти
