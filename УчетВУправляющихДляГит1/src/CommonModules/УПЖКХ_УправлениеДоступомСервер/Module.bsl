
#Область ОграничениеПравДоступаПользователейКОбъектамУчета

// Обработчик подписки на событие "УПЖКХ_ПриЗаписиДокументаОграничениеДоступаПользователейКОбъектамУчета".
// При записи документов создает записи в регистре сведений УПЖКХ_ДокументыОбъектовУчетаДляОграниченияДоступа
// для всех зданий текущего документа.
Процедура ПриЗаписиДокументаОграничениеДоступаПользователейКОбъектамУчета(Источник, Отказ) Экспорт
	
	ДокументСсылка = Источник.Ссылка;
	
	// Если документ-источник помечается на удаление, необходимо
	// очистить соответствующие записи в регистре сведений.
	Если Источник.ПометкаУдаления Тогда
		
		НаборЗаписей = РегистрыСведений.УПЖКХ_ДокументыОбъектовУчетаДляОграниченияДоступа.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(ДокументСсылка);
		
		// В случае, если записывается документ Операция", то необходимо установить привилегированный режим,
		// так как документ является регистратором не только типовых регистров, но и регистров подсистемы ЖКХ.
		// Поэтому у пользователей, не имеющих права на блок ЖКХ, при записи нового документа "Операция" возникает
		// ошибка прав доступа. Для исключения ошибки устанавливаем привилегированный режим, который позволяет
		// убрать информацию о документе из регистр для ограничения доступа ЖКХ.
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ОперацияБух") Тогда
			УстановитьПривилегированныйРежим(Истина);
		КонецЕсли;
		
		КВП_ЗаписатьОбъект(НаборЗаписей);
		
		// Для помеченного на удаление документа
		// больше ничего не требуется.
		Возврат;
		
	КонецЕсли;
	
	/////////////////////////////////////////////////
	// 1. Определяем список объектов,
	// которые учавствуют в документе.
	
	СписокОбъектов = Новый ТаблицаЗначений;
	
	МассивТиповОбъектов = Новый Массив;
	МассивТиповОбъектов.Добавить(Тип("СправочникСсылка.КВП_ЛицевыеСчета"));
	МассивТиповОбъектов.Добавить(Тип("СправочникСсылка.УПЖКХ_Помещения"));
	МассивТиповОбъектов.Добавить(Тип("СправочникСсылка.КВП_Подъезды"));
	МассивТиповОбъектов.Добавить(Тип("СправочникСсылка.КВП_Здания"));
	
	ТипОбъектов = Новый ОписаниеТипов(МассивТиповОбъектов);
	
	СписокОбъектов.Колонки.Добавить("Объект", ТипОбъектов);
	
	// Документ "Операция":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ОперацияБух") Тогда
		ЗаполнитьСписокОбъектовДляДокументаОперация(СписокОбъектов, МассивТиповОбъектов, Источник);
	КонецЕсли;
	
	// Документ "Ввод начального сальдо":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ВводНачальногоСальдо") Тогда

		Для Каждого СтрокаСписка Из Источник.ЛицевыеСчета Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Ввод фактических затрат на объект":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ВводФактическихЗатратНаОбъект") Тогда
		
		Для Каждого СтрокаСписка Из Источник.ОбъектыУчета Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ОбъектУчета) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ОбъектУчета;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Голосование":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_Голосование") Тогда
		
		Для Каждого СтрокаСписка Из Источник.РезультатыГолосования Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Помещение) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Помещение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Закрытие лицевого счета":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ЗакрытиеЛицевогоСчета") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Заявка на выполнение работ":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ЗаявкаНаВыполнениеРабот") Тогда
		
		Если ЗначениеЗаполнено(Источник.Здание) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Здание;
			
		ИначеЕсли ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Заявление о регистрации (о снятии с регистрационного учета) по месту жительства":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Заявление о регистрации по месту пребывания":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ЗаявлениеОРегистрацииПоМестуПребывания") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Изменение лицевого счета":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ИзменениеЛицевогоСчета") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Корректировка взаиморасчетов ЖКХ":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_КорректировкаВзаиморасчетовЖКХ") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчетПолучатель) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчетПолучатель;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Корректировка начислений":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_КорректировкаНачислений") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.Корректировки Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Начисление пени":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_НачислениеПени") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.Начисления Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Начисление услуг":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_НачислениеУслуг") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.Услуги Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевыеСчета) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевыеСчета;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.УслугиПоПоказаниямПУ Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.НачисленияПоРассрочке Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.УчтенныеОбъемыРасхожденийПУ Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.Счетчики Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Открытие лицевого счета":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ОткрытиеЛицевогоСчета") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Планирование подомовых затрат":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_ПланированиеПодомовыхЗатрат") Тогда
		
		Для Каждого СтрокаСписка Из Источник.ТаблицаЗатрат Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Разовое начисление услуг":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_РазовоеНачислениеУслуг") Тогда
		
		Для Каждого СтрокаСписка Из Источник.Услуги Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Распределение материалов":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_РаспределениеМатериалов") Тогда
		
		Для Каждого СтрокаСписка Из Источник.ТаблицаОбъектов Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.ТаблицаРаспределения Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Распределение услуг сторонних организаций":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_РаспределениеУслугСтороннихОрганизаций") Тогда
		
		Для Каждого СтрокаСписка Из Источник.ТаблицаОбъектов Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.ТаблицаРаспределения Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Расчет льгот":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_РасчетЛьгот") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.Льготы Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевыеСчета) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевыеСчета;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.РасшифровкаЛьгот Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевыеСчета) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевыеСчета;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.РасчетЛьгот Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевыеСчета) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевыеСчета;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Регистрация оплаты":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_РегистрацияОплаты") Тогда
		
		Если ЗначениеЗаполнено(Источник.Дом) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Дом;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.ЛицевыеСчета Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.РасшифровкаПлатежа Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.НастройкиОплаты Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.РасшифровкаРассрочки Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Реестр участников голосования":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_РеестрУчастниковГолосования") Тогда
		
		Если ЗначениеЗаполнено(Источник.ОбъектПроведения) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ОбъектПроведения;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.Участники Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Помещение) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Помещение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Свидетельство о регистрации по месту жительства":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_СвидетельствоОРегистрацииПоМестуЖительства") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Свидетельство о регистрации по месту пребывания":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_СвидетельствоОРегистрацииПоМестуПребывания") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Управление парковочными местами":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_УдалитьУправлениеПарковочнымиМестами") Тогда
		
		Если ЗначениеЗаполнено(Источник.Паркинг) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Паркинг;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.ПарковочныеМеста Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ПарковочноеМесто) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ПарковочноеМесто;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Назначение услуг":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_УправлениеУслугами") Тогда
		
		Для Каждого СтрокаСписка Из Источник.Объекты Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Установка льгот":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_УстановкаЛьгот") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Установка счетчика":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_УстановкаСчетчика") Тогда
		
		Для Каждого СтрокаСписка Из Источник.Главная Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Установка тарифов":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КВП_УстановкаТарифов") Тогда
		
		Для Каждого СтрокаСписка Из Источник.СписокОбъектов Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Здание) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Здание;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Ввод показаний счетчика":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ВводПоказанийСчетчика") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.Главная Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Договор безвозмездного пользования по месту жительства":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Договор безвозмездного пользования по месту пребывания":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Закрытие периода по начислениям ЖКХ":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ЗакрытиеПериодаПоНачислениямЖКХ") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.ЛицевыеСчета Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.Переплаты Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаСписка Из Источник.Долги Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Заявление на рассрочку":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ЗаявлениеНаРассрочку") Тогда
		
		Если ЗначениеЗаполнено(Источник.Объект) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Объект;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.НачислениеРассрочкиЗаУстановкуСчетчика Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Исковое заявление":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_Иск") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Начисление услуг в сторонней программе":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_НачислениеУслугВСтороннейПрограмме") Тогда
		
		Для Каждого СтрокаСписка Из Источник.Начисления Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Отчет о выпадающих доходах":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ОтчетОВыпадающихДоходах") Тогда
		
		Если ЗначениеЗаполнено(Источник.ОбъектОтбор) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ОбъектОтбор;
		КонецЕсли;
		
		СписокЛицевыхСчетов = Источник.Плательщики.Выгрузить(,"ЛицевойСчет");
		Для Каждого СтрокаСписка Из Источник.Плательщики Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Отчет о начислениях за ЖКУ":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ОтчетОНачисленияхЗаЖКУ") Тогда
		
		Если ЗначениеЗаполнено(Источник.ОбъектОтбор) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ОбъектОтбор;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.Плательщики Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.ЛицевойСчет) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.ЛицевойСчет;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Подготовка данных для раскрытия":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_ПодготовкаДанныхДляРаскрытия") Тогда
		
		Если ЗначениеЗаполнено(Источник.Здание) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Здание;
		КонецЕсли;
		
		Для Каждого СтрокаСписка Из Источник.ПереченьМногоквартирныхДомов Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.АдресМногоквартирногоДома) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.АдресМногоквартирногоДома;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Предупреждение":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_Предупреждение") Тогда
		
		Для Каждого СтрокаСписка Из Источник.Должники Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Должник) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Должник;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Расчет тарифов":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_РасчетТарифов") Тогда
		
		Для Каждого СтрокаСписка Из Источник.ТарифыЗданий Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Здание) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Здание;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Судебное соглашение":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_СудебноеСоглашение") Тогда
		
		Если ЗначениеЗаполнено(Источник.ЛицевойСчет) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.ЛицевойСчет;
		КонецЕсли;
		
	КонецЕсли;
	
	// Документ "Управление договорами с поставщиками услуг":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_УправлениеДоговорамиСПоставщикамиУслуг") Тогда
		
		Для Каждого СтрокаСписка Из Источник.Объекты Цикл
			Если ЗначениеЗаполнено(СтрокаСписка.Объект) Тогда
				НоваяСтрокаОбъект = СписокОбъектов.Добавить();
				НоваяСтрокаОбъект.Объект = СтрокаСписка.Объект;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Документ "Установка собственников помещений":
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УПЖКХ_УстановкаСобственниковПомещений") Тогда
		
		Если ЗначениеЗаполнено(Источник.Помещение) Тогда
			НоваяСтрокаОбъект = СписокОбъектов.Добавить();
			НоваяСтрокаОбъект.Объект = Источник.Помещение;
		КонецЕсли;
		
	КонецЕсли;
	
	/////////////////////////////////////////////////
	// 2. По списку объектов определим список зданий.
	
	Если НЕ СписокОбъектов.Количество() = 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписокОбъектов.Объект КАК Объект
		|ПОМЕСТИТЬ ТаблицаОбъектов
		|ИЗ
		|	&СписокОбъектов КАК СписокОбъектов
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОбъектов.Объект) = ТИП(Справочник.КВП_ЛицевыеСчета)
		|			ТОГДА ТаблицаОбъектов.Объект.Адрес.Владелец
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОбъектов.Объект) = ТИП(Справочник.УПЖКХ_Помещения)
		|			ТОГДА ТаблицаОбъектов.Объект.Владелец
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОбъектов.Объект) = ТИП(Справочник.КВП_Подъезды)
		|			ТОГДА ТаблицаОбъектов.Объект.Владелец
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОбъектов.Объект) = ТИП(Справочник.КВП_Здания)
		|			ТОГДА ТаблицаОбъектов.Объект
		|		КОНЕЦ КАК ОбъектУчета
		|ИЗ
		|	ТаблицаОбъектов";
		Запрос.УстановитьПараметр("СписокОбъектов", СписокОбъектов);
		ВыборкаОбъектовУчета = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаОбъектовУчета.Количество() > 0 Тогда
			
			// 3. Для каждого здания необходимо сформировать запись по текущему документу
			// в регистре сведений "Документы объектов учета для ограничения доступа".
			НаборЗаписей = РегистрыСведений.УПЖКХ_ДокументыОбъектовУчетаДляОграниченияДоступа.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(ДокументСсылка);
			
			Пока ВыборкаОбъектовУчета.Следующий() Цикл
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Документ    = ДокументСсылка;
				НоваяЗапись.ОбъектУчета = ВыборкаОбъектовУчета.ОбъектУчета;
				
			КонецЦикла;
			
			КВП_ЗаписатьОбъект(НаборЗаписей);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура обработчик подписки на события "УПЖКХ_ПриЗаписиСправочникаЗданияНастройкиДоступаПользователейКОбъектамУчета".
// Создает запись для текущего пользователя в регистре сведений "УПЖКХ_НастройкиДоступаПользователейКОбъектамУчета"
// при создании новой записи в справочнике "Здания".
Процедура ПриЗаписиЗдания(Источник, Отказ) Экспорт
	
	ТекущийПользователь = УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь();
	ТекущийОбъектУчета  = Источник.Ссылка;
	
	НаборЗаписей = РегистрыСведений.УПЖКХ_НастройкиДоступаПользователейКОбъектамУчета.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(ТекущийПользователь);
	НаборЗаписей.Отбор.ОбъектУчета.Установить(ТекущийОбъектУчета);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Пользователь = ТекущийПользователь;
		НоваяЗапись.ОбъектУчета  = ТекущийОбъектУчета;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик регламентного задания "Заполнение данных для ограничения доступа по объектам учета".
//
Процедура УПЖКХ_ЗаполнениеДанныхДляОграниченияДоступаПоОбъектамУчета() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	ТекстВложенногоЗапроса = "";
	
	МассивТиповДокументов = Метаданные.ПодпискиНаСобытия.УПЖКХ_ПриЗаписиДокументаОграничениеДоступаПользователейКОбъектамУчета.Источник.Типы();
	
	ПервыйОбход = Истина;
	Для Каждого ТекТипДокумента Из МассивТиповДокументов Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТекТипДокумента);
		ИмяДокумента = МетаданныеДокумента.Имя;
		
		Если ПервыйОбход Тогда
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса +
			"ВЫБРАТЬ
			|	ДокументДляВыборки.Ссылка
			|ИЗ
			|	Документ." + ИмяДокумента + " КАК ДокументДляВыборки";
		Иначе
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса +
			"
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ДокументДляВыборки.Ссылка
			|ИЗ
			|	Документ." + ИмяДокумента + " КАК ДокументДляВыборки";
		КонецЕсли;
		
		ПервыйОбход = Ложь;
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка
	|ПОМЕСТИТЬ врТаблицаДокументов
	|ИЗ ("
	+ ТекстВложенногоЗапроса +
	") КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врТаблицаДокументов.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(УПЖКХ_ДокументыОбъектовУчетаДляОграниченияДоступа.ОбъектУчета, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоЗаписейСведений
	|ПОМЕСТИТЬ врТаблицаДокументовИСведений
	|ИЗ
	|	врТаблицаДокументов КАК врТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_ДокументыОбъектовУчетаДляОграниченияДоступа КАК УПЖКХ_ДокументыОбъектовУчетаДляОграниченияДоступа
	|		ПО врТаблицаДокументов.Ссылка = УПЖКХ_ДокументыОбъектовУчетаДляОграниченияДоступа.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	врТаблицаДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 200
	|	врТаблицаДокументовИСведений.Ссылка, КоличествоЗаписейСведений
	|ИЗ
	|	врТаблицаДокументовИСведений КАК врТаблицаДокументовИСведений
	|ГДЕ
	|	врТаблицаДокументовИСведений.КоличествоЗаписейСведений = 0";
	
	ВыборкаДокументов = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокументов.Следующий() Цикл
		
		// Добавим информацию по документу.
		ДокументОбъект = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
		УПЖКХ_УправлениеДоступомСервер.ПриЗаписиДокументаОграничениеДоступаПользователейКОбъектамУчета(ДокументОбъект, Ложь);
		
	КонецЦикла;
	
	// Отключим обработку задания, если все объекты обработаны.
	Если ВыборкаДокументов.Количество() < 200 Тогда
		
		Задание = РегламентныеЗадания.НайтиПредопределенное(
			Метаданные.РегламентныеЗадания.УПЖКХ_ЗаполнениеДанныхДляОграниченияДоступаПоОбъектамУчета);
		
		Задание.Использование = Ложь;
		Задание.Записать();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Управление доступом.Заполнение данных для ограничения доступа по объектам учета'",
				 ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Информация,
			,
			,
			НСтр("ru = 'Завершено заполнение сведений о документах объектов учета.'"),
			РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
			
	Иначе
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Управление доступом.Заполнение данных для ограничения доступа по объектам учета'",
				 ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Информация,
			,
			,
			НСтр("ru = 'Выполнен шаг заполнения сведений о документах объектов учета.'"),
			РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура обработки изменения настройки "Использовать ограничение доступа по объектам учета".
//
Процедура ПриИзмененииОграниченияДоступаНаУровнеЗаписейПоОбъектамУчета(ОграничениеДоступаНаУровнеЗаписейВключено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Задание = РегламентныеЗадания.НайтиПредопределенное(
			Метаданные.РегламентныеЗадания.УПЖКХ_ЗаполнениеДанныхДляОграниченияДоступаПоОбъектамУчета);
	
	Если ОграничениеДоступаНаУровнеЗаписейВключено Тогда
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Управление доступом.Заполнение данных для ограничения доступа по объектам учета'",
			     ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Информация,
			,
			,
			НСтр("ru = 'Начато заполнение данных для ограничения доступа по объектам учета.'"),
			РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		
		Если Не Задание.Использование Тогда
			Задание.Использование = Истина;
			Задание.Записать();
		КонецЕсли;
		
	Иначе
		Если Задание.Использование Тогда
			Задание.Использование = Ложь;
			Задание.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет список объектов по документу "Операция".
Процедура ЗаполнитьСписокОбъектовДляДокументаОперация(СписокОбъектов, Знач МассивТиповОбъектов, Знач Источник)
	
	СоответествиеРегистровПолей = Новый Соответствие;
	
	// По регистрам сведений.
	СоответествиеРегистровПолей.Вставить("КВП_ГрафикиПлатежейПоЛС",                               "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("КВП_ЗакрепленныеСчетчики",                              "Объект");
	СоответествиеРегистровПолей.Вставить("КВП_ЛицевыеСчета",                                      "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("КВП_УчетКоличестваЖильцовПоЛицевымСчетам",              "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("КВП_НазначенныеНачисления",                             "Объект");
	СоответествиеРегистровПолей.Вставить("КВП_СведенияОЖильцах",                                  "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("Удалить_КВП_СведенияОПарковочныхМестах",                 "ПарковочноеМесто");
	СоответествиеРегистровПолей.Вставить("КВП_Тарифы",                                            "Объект");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_ИзменениеСведенийОЖильцахДляПерерасчета",         "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_ИсторияРаботыСДолжниками",                        "Должник");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета", "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_ПоставщикиУслуг",                                 "Объект");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_СведенияДляВзаиморасчетовПоЛС",                   "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_СведенияОЗарегистрированных",                     "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_СведенияОНаличииПоказанийПриборовУчета",          "Объект");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_СведенияОПроживающих",                            "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_СобственникиПомещений",                           "Помещение");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_СобственностьНаПомещения",                        "Помещение");
	
	// По регистрам накоплений.
	СоответествиеРегистровПолей.Вставить("КВП_ВзаиморасчетыПоЛицевымСчетам",                      "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("КВП_ЗатратыПодомовогоУчета",                            "Здание");
	СоответествиеРегистровПолей.Вставить("КВП_НачисленныеЛьготы",                                 "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("КВП_ПоступлениеДенежныхСредствПоВидамПлатежей",         "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("КВП_РасходМатериаловПоВыполненнымРаботам",              "Объект");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_ВзаиморасчетыСДолжниками",                        "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_Начисления",                                      "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_НачисленияПоРассрочке",                           "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_РасхожденияОбъемовПотребленийПоПУИНормативу",     "ЛицевойСчет");
	СоответествиеРегистровПолей.Вставить("УПЖКХ_РасчетПриборовУчета",                             "Объект");
	
	СоответествиеРегистровПолейДляЗапросов = Новый Соответствие;
	
	// По регистрам сведений для запросов.
	СоответествиеРегистровПолейДляЗапросов.Вставить("КВП_НазначенныеЛьготы", "Проживающий");
	
	// Все имена регистров поместим в массив.
	НайденныеДвиженияВРегистрах = Новый Массив;
	
	НайденныеДвиженияВРегистрыНакопления = Источник.ТаблицаРегистровНакопления.ВыгрузитьКолонку("Имя");
	Для Каждого ТекЭлемент Из НайденныеДвиженияВРегистрыНакопления Цикл
		НайденныеДвиженияВРегистрах.Добавить(ТекЭлемент);
	КонецЦикла;
	
	НайденныеДвиженияВРегистрыСведений   = Источник.ТаблицаРегистровСведений.ВыгрузитьКолонку("Имя");
	Для Каждого ТекЭлемент Из НайденныеДвиженияВРегистрыСведений Цикл
		НайденныеДвиженияВРегистрах.Добавить(ТекЭлемент);
	КонецЦикла;
	
	ДвиженияДокумента = Источник.Движения;
	
	Для Каждого ТекущееИмяРегистрСведений Из НайденныеДвиженияВРегистрах Цикл
		
		ТекущееПоле = СоответествиеРегистровПолей.Получить(ТекущееИмяРегистрСведений);
		Если НЕ ТекущееПоле = Неопределено Тогда
			Для Каждого СтрокаСписка Из ДвиженияДокумента[ТекущееИмяРегистрСведений] Цикл
				ЗначениеПоля = СтрокаСписка[ТекущееПоле];
				Если ЗначениеЗаполнено(ЗначениеПоля)
				   И Не МассивТиповОбъектов.Найти(ТипЗнч(ЗначениеПоля)) = Неопределено
				   И НЕ ЗначениеПоля.Пустая() Тогда
					НоваяСтрокаОбъект = СписокОбъектов.Добавить();
					НоваяСтрокаОбъект.Объект = ЗначениеПоля;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ТекущееПоле = СоответествиеРегистровПолейДляЗапросов.Получить(ТекущееИмяРегистрСведений);
		Если НЕ ТекущееПоле = Неопределено Тогда
			
			ТаблицаЖильцы = Новый ТаблицаЗначений;
			ТаблицаЖильцы.Колонки.Добавить("Жилец", Новый ОписаниеТипов("СправочникСсылка.УПЖКХ_Жильцы"));
			
			Для Каждого СтрокаСписка Из ДвиженияДокумента[ТекущееИмяРегистрСведений] Цикл
				ЗначениеПоля = СтрокаСписка[ТекущееПоле];
				Если ЗначениеЗаполнено(ЗначениеПоля)
				   И ТипЗнч(ЗначениеПоля) = Тип("СправочникСсылка.УПЖКХ_Жильцы") Тогда
					НоваяСтрока = ТаблицаЖильцы.Добавить();
					НоваяСтрока.Жилец = ЗначениеПоля;
				КонецЕсли;
			КонецЦикла;
			
			Если ТаблицаЖильцы.Количество() > 0 Тогда
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ТаблицаЖильцы", ТаблицаЖильцы);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТаблицаЖильцы.Жилец
				|ПОМЕСТИТЬ втОбъекты
				|ИЗ
				|	&ТаблицаЖильцы КАК ТаблицаЖильцы
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	УПЖКХ_Жильцы.Владелец КАК ЛицевойСчет
				|ИЗ
				|	Справочник.УПЖКХ_Жильцы КАК УПЖКХ_Жильцы
				|ГДЕ
				|	УПЖКХ_Жильцы.Ссылка В
				|			(ВЫБРАТЬ
				|				втОбъекты.Жилец
				|			ИЗ
				|				втОбъекты КАК втОбъекты)";
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					НоваяСтрокаОбъект = СписокОбъектов.Добавить();
					НоваяСтрокаОбъект.Объект = Выборка.ЛицевойСчет;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры // ЗаполнитьСписокОбъектовДляДокументаОперация()

#КонецОбласти