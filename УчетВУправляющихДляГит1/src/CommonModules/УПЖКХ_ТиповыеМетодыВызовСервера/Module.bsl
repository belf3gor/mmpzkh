
#Область СлужебныеПроцедурыИФункции

///////////////////////////////////////////////////////////////////////////////
// ОСНОВНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция возвращает рабочую дату.
Функция ПолучитьРабочуюДату() Экспорт
	
	// для ЖКХ 3.0
	Возврат ОбщегоНазначенияБП.ПолучитьРабочуюДату();
	
КонецФункции // ПолучитьРабочуюДату()

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ СО СПРАВОЧНИКАМИ

// Функция возвращает массив вышестоящих групп указанного элемента.
//
// Параметры:
//  Элемент      - Элемент справочника, для которого ищется родитель.
//
// Возвращаемое значение
//  Массив вышестоящих групп
//
Функция ПолучитьСписокВышеСтоящихГрупп(ЭлементСправочника) Экспорт
	
	Возврат ОбщегоНазначенияБПВызовСервера.ПолучитьСписокВышеСтоящихГрупп(ЭлементСправочника);
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПОЛУЧЕНИЯ И УСТАНОВКИ НАСТРОЕК ПОЛЬЗОВАТЕЛЕЙ

// Процедура записывает значение по умолчанию для передаваемого пользователя и настройки.
//
// Параметры:
//  Настройка    - Строка - вид настройки.
//  Значение     - значение настройки.
//  Пользователь - СправочникСсылка.Пользователи - текущий пользователь программы, для которого устанавливается настройка.
//
// Возвращаемое значение:
//  Нет
//
Процедура УстановитьЗначениеПоУмолчанию(Настройка, Значение, Пользователь = Неопределено) Экспорт

	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию(Настройка, Значение, Пользователь);
	
КонецПроцедуры // УстановитьЗначениеПоУмолчанию()

// Функция возвращает значение по умолчанию.
Функция ПолучитьЗначениеПоУмолчанию(Настройка, Пользователь = Неопределено) Экспорт
	
	// Для ЖКХ 2.0 и 3.0
	Возврат ОбщегоНазначенияБПВызовСервера.ПолучитьЗначениеПоУмолчанию(Настройка, Пользователь);
	
	// Для УПЖКХ
	//Возврат УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Настройка, Пользователь);
	
КонецФункции

// Функция возвращает идентификатор отчета.
Функция ПолучитьИдентификаторОбъекта(ОтчетОбъект) Экспорт
	
	Возврат "ОтчетОбъект." + ОтчетОбъект.Метаданные().Имя;
	
КонецФункции

// Функция возвращает Истина, если существует объект метаданных.
Функция ЕстьОбъектМетаданных(ТипОбъекта, ИмяОбъекта) Экспорт
	
	Попытка
		Возврат (Метаданные[ТипОбъекта].Найти(ИмяОбъекта) <> Неопределено);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

// Функция возвращает идентификатор конфигурации.
// Длина идентификатора не должна превышать 8 символов.
//
// Пример:
//  Возврат "БПКОРП";
//
Функция ИДКонфигурации() Экспорт
	
	Возврат РегламентированнаяОтчетностьПереопределяемый.ИДКонфигурации();
	
КонецФункции

// Функция возвращает основную организацию пользователя.
Функция ПолучитьОсновнуюОрганизацию() Экспорт
	
	Организация = Неопределено;
	
	Если ИДКонфигурации() = "БП" И КВП_ПрочиеПроцедурыИФункции.Это3РедакцияБП(Метаданные.Версия) Тогда
		Организация = ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Возврат Организация;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПОДСИСТЕМА "НДС"

// Функция возвращает курс ставку НДС
//
// Параметры:
//  Валюта - СправочникСсылка.Валюты, валюта, по которой необходимо получить курс.
//  ДатаКурса - Дата, календарная дата, на которую необходимо получить курс валюты.
//
// Возвращаемое значение:
//	Курс переданной валюты на переданную дату, 1 в случае отсутствия значения.
//
Функция ПолучитьСтавкуНДС(СтавкаНДС) Экспорт
	
	Возврат УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);
	
КонецФункции // ПолучитьСтавкуНДС()

// Функция возвращает настройки печати счетов-фактур для печати
// в документе "Отражение начислений в регл. учете".
//
Функция ПолучитьНастройкиПечатиСчетовФактур(МассивДокументов) Экспорт
	
	Возврат УчетНДСВызовСервера.ПолучитьНастройкиПечатиСчетовФактур(МассивДокументов);
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПОЛУЧЕНИЯ СВЕДЕНИЙ ОБ ОРГАНИЗАЦИИ

// Возвращает головную организацию для заданной организации.
// Если для организации реквизит ГоловнаяОрганизация не заполнен,
// это значит, что сама организация является головной.
//
// Параметры
//  Организация – СправочникСсылка.Организации
//                 <продолжение описания параметра>.
//
// Возвращаемое значение:
//   СправочникСсылка.Организации.
//
Функция ГоловнаяОрганизация(Организация) Экспорт

	Возврат ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация);

КонецФункции 

// Функция возвращает признак того, что организация является обособленным
// подразделением.
//
Функция ЭтоОбособленноеПодразделение(Организация) Экспорт
	
	Возврат ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоОбособленноеПодразделение(Организация);
	
КонецФункции

// Функция собирает сведения о
//
// Параметры:
//  Организация - организация, для которой нужно определить руководящих лиц.
//
Функция ОтветственныеЛица(Организация, ДатаСреза, Подразделение = Неопределено) Экспорт
	
	Возврат ОтветственныеЛицаБП.ОтветственныеЛица(Организация, ДатаСреза, Подразделение);
	
КонецФункции

// Возвращает структуру данных со сводным описанием контрагента
//
// Параметры:
//  СписокСведений - список значений со значениями параметров организации.
//   СписокСведений формируется функцией СведенияОЮрФизЛице.
//  Список         - список запрашиваемых параметров организации.
//  СПрефиксом     - Признак выводить или нет префикс параметра организации.
//
// Возвращаемое значение:
//  Строка - описатель организации / контрагента / физ.лица.
//
Функция ОписаниеОрганизации(СписокСведений, Список = "", СПрефиксом = Истина) Экспорт

	Возврат ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СписокСведений, Список, СПрефиксом);

КонецФункции // ОписаниеОрганизации()

// Определяет, является ли организация юридическим лицом.
Функция ЭтоЮридическоеЛицо(Организация) Экспорт
	
	Возврат РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
	
КонецФункции

// Возвращает признак учета по всем организациям.
Функция ПолучитьПризнакУчетаПоВсемОрганизациям() Экспорт
	
	// для ЖКХ 3.0
	Возврат РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
	
КонецФункции

// Возвращает сведения об организации.
Функция ПолучитьСведенияОбОрганизации(Знач Организация, Знач ДатаЗначения = Неопределено,
										Знач СписокПоказателей = Неопределено) Экспорт
	
	// для ЖКХ 3.0
	Возврат РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаЗначения, СписокПоказателей);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сохранение, чтение и удаление настроек из хранилищ общих настроек

// Сохраняет настройку в хранилище общих настроек.
// 
// Параметры:
//   Соответствуют методу ХранилищеОбщихНастроекСохранить.Сохранить, 
//   подробнее - см. параметры процедуры ХранилищеСохранить().
// 
Процедура ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек = "", Значение, ОписаниеНастроек = Неопределено,
	ИмяПользователя = Неопределено, НужноОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, Значение, ОписаниеНастроек,
																	ИмяПользователя, НужноОбновитьПовторноИспользуемыеЗначения);
	
КонецПроцедуры

// Загружает настройку из хранилища общих настроек.
//
// Параметры:
//   Соответствуют методу ХранилищеОбщихНастроек.Загрузить,
//   подробнее - см. параметры функции ХранилищеЗагрузить().
//
Функция ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек = "", ЗначениеПоУмолчанию = Неопределено, 
	ОписаниеНастроек = Неопределено, ИмяПользователя = Неопределено) Экспорт
	
	Возврат ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию,
																			ОписаниеНастроек, ИмяПользователя);
	
КонецФункции

// Удаляет настройку из хранилища общих настроек.
//
// Параметры:
//   Соответствуют методу ХранилищеОбщихНастроек.Удалить,
//   подробнее - см. параметры функции ХранилищеУдалить().
//
Процедура ХранилищеОбщихНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// РАБОТА С ТИПОВЫМИ БУХГАЛТЕРСКИМИ ОТЧЕТАМИ

// Возникает при создании формы отчета.
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура возникает при сохранении настроек на сервере.
Процедура ПриСохраненииПользовательскихНастроекНаСервере(ФормаОтчета, Настройки,
															СохранятьТолькоРеквизиты = Ложь) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ПриСохраненииПользовательскихНастроекНаСервере(ФормаОтчета, Настройки,
																					СохранятьТолькоРеквизиты);
	
КонецПроцедуры

// Процедура возникает при загрузке настроек на сервере.
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(ФормаОтчета, Настройки, ЗагружатьТолькоРеквизиты = Ложь) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ПриЗагрузкеПользовательскихНастроекНаСервере(ФормаОтчета, Настройки,
																					ЗагружатьТолькоРеквизиты);
	
КонецПроцедуры

// Процедура устанавливает настройки по умолчанию.
Процедура УстановитьНастройкиПоУмолчанию(ФормаОтчета) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.УстановитьНастройкиПоУмолчанию(ФормаОтчета);
	
КонецПроцедуры

// Процедура формирует отчет.
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	
КонецПроцедуры

// Процедура добавляет группировки в компоновку.
Процедура ДобавитьГруппировки(ПараметрыОтчета, КомпоновщикНастроек) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьГруппировки(ПараметрыОтчета, КомпоновщикНастроек);
	
КонецПроцедуры

// Процедура добавляет дополнительные поля в компоновку.
Процедура ДобавитьДополнительныеПоля(ПараметрыОтчета, КомпоновщикНастроек) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьДополнительныеПоля(ПараметрыОтчета, КомпоновщикНастроек);
	
КонецПроцедуры

// Процедура заполняет поле Группировка.
Процедура ЗаполнитьГруппировку(ПолеВыбраннойГруппировки, Группировка) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ЗаполнитьГруппировку(ПолеВыбраннойГруппировки, Группировка);
	
КонецПроцедуры

// Процедура обработки результата отчета.
Процедура ОбработкаРезультатаОтчета(ИдентификаторОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ИдентификаторОтчета, Результат);
	
КонецПроцедуры

// Функция возвращает текст обособленных подразделений.
Функция ПолучитьТекстОбособленныхПодразделений(Организация) Экспорт
	
	Возврат БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОбособленныхПодразделений(Организация);
	
КонецФункции

// Функция возвращает текст организации.
Функция ПолучитьТекстОрганизация(Организация = Неопределено, ВключатьОбособленныеПодразделения = Ложь) Экспорт
	
	Возврат БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(Организация,
																	ВключатьОбособленныеПодразделения);
	
КонецФункции

// Функция вычисления суммы в ячейках результата.
Функция ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента(Знач Результат, КэшВыделеннойОбласти) Экспорт
	
	Возврат БухгалтерскиеОтчетыВызовСервера.ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента(Результат,
																								КэшВыделеннойОбласти);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ДОКУМЕНТАМИ

// Функция формирует представление заголовка документа
//
// Возвращаемое значение:
//  Строка - представление номера документа.
//
Функция СформироватьЗаголовокДокумента(ДокументОбъект, НазваниеДокумента = "") Экспорт

	Возврат ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(ДокументОбъект, НазваниеДокумента);

КонецФункции // СформироватьЗаголовокДокумента()

// Функция формирует представление суммы прописью в указанной валюте
//
// Возвращаемое значение:
//  Строка - сумма прописью
//
Функция СформироватьСуммуПрописью(Сумма, Валюта) Экспорт
	Возврат ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Сумма, Валюта);
КонецФункции

// Позволяет определить есть ли среди реквизитов табличной части документа
// реквизит с переданным именем.
//
// Параметры:
//  ИмяРеквизита - строковое имя искомого реквизита.
//  МетаданныеДокумента - объект описания метаданных документа, среди реквизитов которого производится поиск.
//  ИмяТабЧасти  - строковое имя табличной части документа, среди реквизитов которого производится поиск.
//
// Возвращаемое значение:
//  Истина - нашли реквизит с таким именем, Ложь - не нашли.
//
Функция ЕстьРеквизитТабЧастиДокумента(ИмяРеквизита, МетаданныеДокумента, ИмяТабЧасти) Экспорт
	
	ОбщегоНазначенияБПВызовСервера.ЕстьРеквизитТабЧастиДокумента(ИмяРеквизита, МетаданныеДокумента, ИмяТабЧасти);
	
КонецФункции // ЕстьРеквизитТабЧастиДокумента()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОВЕРКИ НАЛИЧИЯ И ЗАПОЛНЕНИЯ РЕВИЗИТОВ

// Позволяет определить есть ли среди реквизитов шапки документа
// реквизит с переданным именем.
//
// Параметры:
//  ИмяРеквизита - строковое имя искомого реквизита,
//  МетаданныеДокумента - объект описания метаданных документа, среди реквизитов которого производится поиск.
//
// Возвращаемое значение:
//  Истина - нашли реквизит с таким именем, Ложь - не нашли.
//
Функция ЕстьРеквизитДокумента(ИмяРеквизита, МетаданныеДокумента) Экспорт

	Возврат ОбщегоНазначенияБП.ЕстьРеквизитДокумента(ИмяРеквизита, МетаданныеДокумента);

КонецФункции // ЕстьРеквизитДокумента()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ УПРАВЛЕНИЯ НОМЕРАМИ ДОКУМЕНТОВ

// Формирует строку представления документа для сообщений при проведении.
//
// Параметры
//  Документ - ссылка на проводимый документ.
//
// Возвращаемое значение
//  Строка с представлением документа.
//
Функция ПредставлениеДокументаПриПроведении(Документ) Экспорт

	Возврат ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Документ);

КонецФункции // ПредставлениеДокументаПриПроведении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ДВИЖЕНИЯМИ ДОКУМЕНТОВ

// Процедура удаления существующих движений документа при перепроведении (отмене проведения).
Процедура УдалитьДвиженияРегистратора(ДокументОбъект, Отказ, РучнаяКорректировка = Ложь,
										ВыборочноОчищатьРегистры = Истина) Экспорт
	
	// Для информации:
	// Параметр ВыборочноОчищатьРегистры был удален в версии БП 3.0.54.15,
	// в документах ЖКХ всегда передавалось значение Ложь, т.е. выборочная очистка не требовалась.
	ОбщегоНазначенияБПВызовСервера.УдалитьДвиженияРегистратора(ДокументОбъект, Отказ, РучнаяКорректировка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ РАБОТЫ С ДИНАМИЧЕСКИМИ СПИСКАМИ

// Выполняет установку отбора по указанной организации в динамических списках.
// Вызывать необходимо из обработчика формы ПриСозданииНаСервере.
// Если в форму при открытии был передан отбор по организации, то функция не будет выполнена.
//
// Параметры
//  Форма          - УправляемаяФорма  - форма, в которой необходимо установить отбор
//  ИмяСписка      - Строка - имя реквизита формы типа ДинамическийСписок.
//  ИмяРеквизита   - Строка - имя поля-организации в динамическом списке.
//  ЗначениеОтбора - СправочникСсылка.Организации, СписокЗначений, Массив - значение отбора.
//                   Если значение не задано, то будет подставлена основная организация из
//                   настроек пользователя.
//
// Возвращаемое значение:
//   СправочникСсылка.Организации - Если отбор установлен, то вернет значение отбора.
//
Функция УстановитьОтборПоОсновнойОрганизации(Форма, ИмяСписка = "Список", ИмяРеквизита = "Организация",
												ЗначениеОтбора = Неопределено) Экспорт

	Возврат ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(Форма, ИмяСписка,
																				ИмяРеквизита, ЗначениеОтбора);

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ФИЗЛИЦАМИ

// Функция возвращает совокупность данных о физическом лице в виде структуры,
// В совокупность данных входит ФИО, должность в заданной организации,
// паспортные данные и др.
//
// Параметры:
//  Организация  - СправочникСсылка.Организации - организация, по которой
//                 определяется должность и подразделение работника.
//  ФизЛицо      - СправочникСсылка.ФизическиеЛица - физическое лицо,
//                 по которому возвращается совокупность данных.
//  ДатаСреза    - Дата - дата, на которую считываются данные.
//  ФИОКратко    - Булево - если Истина (по умолчанию), Представление физ.лица включает фамилию и инициалы,
//                          если Ложь - фамилию и полностью имя и отчество.
//
// Возвращаемое значение:
//  Структура    - Структура с совокупностью данных о физическом лице:
//                 - Фамилия
//                 - Имя
//                 - Отчество
//                 - Представление (Фамилия И.О.)
//                 - Подразделение
//                 - ВидДокумента
//                 - Серия
//                 - Номер
//                 - ДатаВыдачи
//                 - КемВыдан
//                 - КодПодразделения.
//
Функция ДанныеФизЛица(Организация, ФизЛицо, ДатаСреза, ФИОКратко = Истина) Экспорт
	
	Возврат ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Организация, ФизЛицо, ДатаСреза, ФИОКратко);
	
КонецФункции

#КонецОбласти