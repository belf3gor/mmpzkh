
////////////////////////////////////////////////////////////////////////////////
// Универсальные методы для формы записи регистра и формы настройки налогов
//
// Клиент-серверные методы формы записи регистра сведений НастройкиУчетаУСН
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура УправлениеФормой(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Запись   = Форма.НастройкиУчетаУСН;
	
	ОтображатьУстаревшие = Запись.Период < '20160101';
	
	Элементы.БазаРаспределенияРасходовПоВидамДеятельности.Видимость = ОтображатьУстаревшие И Форма.ПлательщикЕНВД;
	Элементы.УменьшатьНаНЗП.Видимость                               = ОтображатьУстаревшие;
	Элементы.Реализация.Видимость                                   = ОтображатьУстаревшие;
	Элементы.ГруппаРеализацияТоваровОбязательна.Видимость           = НЕ ОтображатьУстаревшие;
	
	Элементы.МетодРаспределенияРасходовПоВидамДеятельности.Видимость = Форма.ПлательщикЕНВД;
	
	Элементы.НалоговыеКаникулы.Видимость = НЕ Форма.ЭтоЮрЛицо И Запись.Период >= '20150101';
	Элементы.ГруппаСтавка.Доступность    = НЕ Запись.НалоговыеКаникулы;
	
	Если Форма.ПрименяетсяУСНДоходыМинусРасходы Тогда
		Элементы.ГруппаПорядокПризнанияРасходов.Видимость = Истина;
		ПолучитьПараметрыРасходов(Форма);
	Иначе
		Элементы.ГруппаПорядокПризнанияРасходов.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ПорядокОтраженияАвансаУСН.Видимость = НЕ ЗначениеЗаполнено(Форма.ПорядокОтраженияАванса)
		ИЛИ Элементы.ПорядокОтраженияАвансаУСН.СписокВыбора.Количество() > 1;
	
	СписокВыбора = Элементы.ПорядокОтраженияАвансаУСН.СписокВыбора;
	Форма.ПорядокОтраженияАванса = НастройкиУчетаУСНФормыВызовСервера.СписокВыбораОтраженияАвансов(Запись,
		СписокВыбора,
		Форма.СписокПатентов);
		
	Элементы.ПорядокОтраженияАвансаУСН.СписокВыбора.ЗагрузитьЗначения(СписокВыбора.ВыгрузитьЗначения());
		
	Элементы.ПорядокОтраженияАвансаУСН.Видимость =
		ЗначениеЗаполнено(Запись.Организация)
		И (НЕ ЗначениеЗаполнено(Форма.ПорядокОтраженияАванса)
		ИЛИ Элементы.ПорядокОтраженияАвансаУСН.СписокВыбора.Количество() > 1);
		
		Если ТипЗнч(Форма.ПорядокОтраженияАванса) = Тип("ПеречислениеСсылка.ПорядокОтраженияАвансов") Тогда
			Запись.ПорядокОтраженияАванса = Форма.ПорядокОтраженияАванса;
		КонецЕсли;
		
КонецПроцедуры

Процедура ПолучитьПараметрыРасходов(Форма)
	
	НастройкиУчетаУСН = Форма.НастройкиУчетаУСН;
	
	Форма.УменьшатьНаНЗП = НастройкиУчетаУСН.ПорядокПризнанияМатериальныхРасходов
		= ПредопределенноеЗначение("Перечисление.ПорядокПризнанияМатериальныхРасходов.УменьшатьРасходыНаОстатокНЗП");
	
	Форма.ПередачаВПроизводство = НастройкиУчетаУСН.ПорядокПризнанияМатериальныхРасходов
		<> ПредопределенноеЗначение("Перечисление.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику");
	
	Форма.ПолучениеДохода = НастройкиУчетаУСН.ПорядокПризнанияРасходовПоТоварам
		= ПредопределенноеЗначение("Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуПолученияДохода");
	
	Форма.Реализация = НастройкиУчетаУСН.ПорядокПризнанияРасходовПоТоварам
		<> ПредопределенноеЗначение("Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику");
	
	Форма.ПризнаниеРасхода = (НастройкиУчетаУСН.ПорядокПризнанияРасходовПоНДС
		= ПредопределенноеЗначение("Перечисление.ПорядокПризнанияРасходовПоНДС.ВключатьВСтоимость"));
	
	Форма.ДопРасходыПризнаниеРасхода = (НастройкиУчетаУСН.ПорядокПризнанияДопРасходов
		= ПредопределенноеЗначение("Перечисление.ПорядокПризнанияДопРасходов.ВключатьВСтоимость"));
	
	Форма.ТаможенныеПлатежиПризнаниеРасхода = (НастройкиУчетаУСН.ПорядокПризнанияТаможенныхПлатежей
		= ПредопределенноеЗначение("Перечисление.ПорядокПризнанияТаможенныхПлатежей.ВключатьВСтоимость"));
	
КонецПроцедуры

#КонецОбласти
