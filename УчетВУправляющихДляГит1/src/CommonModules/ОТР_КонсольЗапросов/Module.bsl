
#Область СлужебныеПроцедурыИФункции

///////////////////////////////////////////////////////////////////////////////
// РАБОТА С КОНСОЛЬЮ ЗАПРОСОВ

Функция ЗапросВКонсоль(Значение) Экспорт
	
	ТипЗначения                = ТипЗнч(Значение);
	ЭтоЗапрос                  = ТипЗначения = Тип("Запрос");
	ЭтоМенеджерВременныхТаблиц = ТипЗначения = Тип("МенеджерВременныхТаблиц");
	ТекстОшибкиТипаЗначения    = "Тип передаваемого значения должен быть ""Запрос"" или ""МенеджерВременныхТаблиц"".";
	Структура                  = Новый Структура("Текст, Параметры", "", Новый Структура);
	
	Если ЭтоЗапрос Тогда
		
		ЗаполнитьЗначенияСвойств(Структура, Значение);
		
	ИначеЕсли ЭтоМенеджерВременныхТаблиц Тогда
		
		Таблицы = Значение.Таблицы;
		
		ПараметрыЗапроса = Структура.Параметры;
		ТекстЗапроса     = "";
		
		Для Каждого ТекущаяТаблица Из Таблицы Цикл
			
			Если ТекущаяТаблица = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПредставлениеТаблицы = ТекущаяТаблица.ПолноеИмя;
			
			ПараметрыЗапроса.Вставить(ПредставлениеТаблицы, ТекущаяТаблица.ПолучитьДанные().Выгрузить());
			
			// Помещаем внешнюю таблицу значений во временнный пакет.
			
			Если НЕ ТекстЗапроса = "" Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|;";
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ";
			
			Для Каждого ТекущаяКолонка Из ТекущаяТаблица.Колонки Цикл
				ТекстЗапроса = ТекстЗапроса + "
				|	" + ПредставлениеТаблицы + "." + ТекущаяКолонка.Имя + " КАК " + ТекущаяКолонка.Имя + ",";
			КонецЦикла;
			
			ИмяВременнойТаблицы = "вт" + ПредставлениеТаблицы;
			
			ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса) - 1) + "
			|ПОМЕСТИТЬ " + ИмяВременнойТаблицы + "
			|ИЗ
			|	&" + ПредставлениеТаблицы + " КАК " + ПредставлениеТаблицы + "
			|;";
			
			// Формируем выборку из временнного пакета.
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ";
			
			Для Каждого ТекущаяКолонка Из ТекущаяТаблица.Колонки Цикл
				ТекстЗапроса = ТекстЗапроса + "
				|	" + ИмяВременнойТаблицы + "." + ТекущаяКолонка.Имя + " КАК " + ТекущаяКолонка.Имя + ",";
			КонецЦикла;
			
			ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса) - 1) + "
			|ИЗ
			|	" + ИмяВременнойТаблицы + " КАК " + ИмяВременнойТаблицы;
			
		КонецЦикла;
		
		Структура.Текст = ТекстЗапроса;
		
	Иначе
		Возврат ТекстОшибкиТипаЗначения;
	КонецЕсли;
	
	ОписаниеЗапросаXML = ЗначениеВСтрокуXML(Структура);
	
	ОТР_ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("ОТР_ОписаниеЗапроса", ОписаниеЗапросаXML);
	
	Возврат "Успешно";
	
КонецФункции

Процедура УдалитьЗапрос() Экспорт
	
	ХранилищеОбщихНастроек.Удалить("ОТР_ОписаниеЗапроса", Неопределено, Неопределено);
	
КонецПроцедуры

Функция ПолучитьЗапрос() Экспорт
	
	Возврат ОТР_ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить("ОТР_ОписаниеЗапроса");
	
КонецФункции

// Преобразует (сериализует) любое значение в XML-строку. Аналог "ОбщегоНазначения.ЗначениеВСтрокуXML()" БП 3.0.
// Преобразованы в могут быть только те объекты, для которых в синтакс-помощнике указано, что они сериализуются.
// См. также ЗначениеИзСтрокиXML.
//
// Параметры:
//  Значение - Произвольный - значение, которое необходимо сериализовать в XML-строку.
//
// Возвращаемое значение:
//  Строка - XML-строка.
//
Функция ЗначениеВСтрокуXML(Значение) Экспорт
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Значение, НазначениеТипаXML.Явное);
	
	Возврат ЗаписьXML.Закрыть();
КонецФункции


#КонецОбласти