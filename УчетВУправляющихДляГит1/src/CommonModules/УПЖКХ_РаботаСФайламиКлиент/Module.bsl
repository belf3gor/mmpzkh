
#Область ОбработчикиОпределенияВидаВзаимодействияСОперационнойСистемойКлиента

// Инициирует цепочку процедур результатом выполнени которой является результат установки или 
//  подтверждение уже установленного расширения для работы с файлами
//
// Параметры:
//  ОбработчикЗавершения  - ОписаниеОповещения - Описание процедуры, принимающей результат выбора.
//
Процедура ОпределитьВидВзаимодействияСФайловойСистемой(ОбработчикЗавершения) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ОбработчикЗавершения", ОбработчикЗавершения);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОпределитьВидВзаимодействияСФайловойСистемойЗавершение", ЭтотОбъект, Параметры);
	// Для первичной проверки тут необходимо установить 
	ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры // ОпределитьВидВзаимодействияСФайловойСистемой()

// Предлагает пользователю установить расширение работы с файлами в веб-клиенте.
//
// Предназначена для использования в начале участков кода, в которых ведется работа с файлами.
// Например:
//
//    Оповещение = Новый ОписаниеОповещения("ПечатьДокументаЗавершение", ЭтотОбъект);
//    ТекстСообщения = НСтр("ru = 'Для печати документа необходимо установить расширение работы с файлами.'");
//    ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Оповещение, ТекстСообщения);
//
//    Процедура ПечатьДокументаЗавершение(РасширениеПодключено, ДополнительныеПараметры) Экспорт
//      Если РасширениеПодключено Тогда
//        // код печати документа, рассчитывающий на то, что расширение подключено.
//        // ...
//      Иначе
//        // код печати документа, который работает без подключенного расширения.
//        // ...
//      КонецЕсли;
//
// Параметры:
//   ОписаниеОповещенияОЗакрытии    - ОписаниеОповещения - описание процедуры,
//                                    которая будет вызвана после закрытия формы со следующими параметрами:
//                                      РасширениеПодключено    - Булево - Истина, если расширение было подключено.
//                                      ДополнительныеПараметры - Произвольный - параметры, заданные в
//                                                                               ОписаниеОповещенияОЗакрытии.
//   ТекстПредложения                - Строка - текст сообщения. Если не указан, то выводится текст по умолчанию.
//   ВозможноПродолжениеБезУстановки - Булево - если Истина, будет показана кнопка ПродолжитьБезУстановки,
//                                              если Ложь, будет показана кнопка Отмена.
//
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещенияОЗакрытии, ТекстПредложения = "", 
	ВозможноПродолжениеБезУстановки = Истина) Экспорт
	
	ОписаниеОповещенияЗавершение = Новый ОписаниеОповещения("ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиЗавершение",
															ЭтотОбъект, ОписаниеОповещенияОЗакрытии);
	
	#Если Не ВебКлиент Тогда
		// В тонком и толстом клиентах расширение подключено всегда.
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияЗавершение, "ПодключениеНеТребуется");
		Возврат;
	#КонецЕсли
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОписаниеОповещенияЗавершение", ОписаниеОповещенияЗавершение);
	ДополнительныеПараметры.Вставить("ТекстПредложения", ТекстПредложения);
	ДополнительныеПараметры.Вставить("ВозможноПродолжениеБезУстановки", ВозможноПродолжениеБезУстановки);
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиПриУстановкеРасширения",
	ЭтотОбъект, ДополнительныеПараметры);
	НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	
КонецПроцедуры // ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами()

// Процедура выполняется при установке расширения работы с файлами.
//
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиПриУстановкеРасширения(Подключено, ДополнительныеПараметры) Экспорт
	
	// Если расширение и так уже подключено, незачем про него спрашивать.
	Если Подключено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияЗавершение, "ПодключениеНеТребуется");
		Возврат;
	КонецЕсли;
	
	// В веб клиенте под MacOS расширение не доступно.
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоMacКлиент = (СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86
	Или СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86_64);
	Если ЭтоMacКлиент Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияЗавершение);
		Возврат;
	КонецЕсли;
	
	ИмяПараметра = "ПредлагатьУстановкуРасширенияРаботыСФайлами";
	ПервоеОбращениеЗаСеанс = ПараметрыПриложения[ИмяПараметра] = Неопределено;
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПараметра, УПЖКХ_РаботаСФайламиКлиент.ПредлагатьУстановкуРасширенияРаботыСФайлами());
	КонецЕсли;
	ПредлагатьУстановкуРасширенияРаботыСФайлами = ПараметрыПриложения[ИмяПараметра] Или ПервоеОбращениеЗаСеанс;
	
	Если ДополнительныеПараметры.ВозможноПродолжениеБезУстановки И Не ПредлагатьУстановкуРасширенияРаботыСФайлами Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияЗавершение);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекстПредложения", ДополнительныеПараметры.ТекстПредложения);
	ПараметрыФормы.Вставить("ВозможноПродолжениеБезУстановки", ДополнительныеПараметры.ВозможноПродолжениеБезУстановки);
	ОткрытьФорму("ОбщаяФорма.ВопросОбУстановкеРасширенияРаботыСФайлами", ПараметрыФормы,,,,,ДополнительныеПараметры.ОписаниеОповещенияЗавершение);
	
КонецПроцедуры // ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиПриУстановкеРасширения()

// Обработка завершения вопроса при установке расширения работы с файлами.
//
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиЗавершение(Действие, ОповещениеОЗакрытии) Экспорт
	
	РасширениеПодключено = (Действие = "РасширениеПодключено" Или Действие = "ПодключениеНеТребуется");
	#Если ВебКлиент Тогда
		Если Действие = "БольшеНеПредлагать"
			Или Действие = "РасширениеПодключено" Тогда
			СистемнаяИнформация = Новый СистемнаяИнформация();
			ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
			ПараметрыПриложения["УПЖКХ_РаботаСФайламиКлиент.ПредлагатьУстановкуРасширенияРаботыСФайлами"] = Ложь;
			ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить(
			"НастройкиПрограммы/ПредлагатьУстановкуРасширенияРаботыСФайлами", ИдентификаторКлиента, Ложь);
		КонецЕсли;
	#КонецЕсли
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии, РасширениеПодключено);
	
КонецПроцедуры // ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиЗавершение()

// Предлагает пользователю подключить расширение работы с файлами в веб-клиенте,
// и в случае отказа выдает предупреждение о невозможности продолжения операции.
// Предназначена для использования в начале участков кода, в которых ведется работа с файлами
// только при подключенном расширении.
//
// Параметры:
//  ОписаниеОповещенияОЗакрытии - ОписаниеОповещения - описание процедуры, которая будет вызвана, если расширение
//                                                     подключено со следующими параметрами:
//                                                      Результат               - Булево - всегда Истина.
//                                                      ДополнительныеПараметры - Неопределено
//  ТекстПредложения    - Строка - текст с предложением подключить расширение работы с файлами. 
//                                 Если не указан, то выводится текст по умолчанию.
//  ТекстПредупреждения - Строка - текст предупреждения о невозможности продолжения операции. 
//                                 Если не указан, то выводится текст по умолчанию.
//
// Возвращаемое значение:
//  Булево - Истина, если расширение подключено.
//   
// Пример:
//
//    Оповещение = Новый ОписаниеОповещения("ПечатьДокументаЗавершение", ЭтотОбъект);
//    ТекстСообщения = НСтр("ru = 'Для печати документа необходимо установить расширение работы с файлами.'");
//    ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(Оповещение, ТекстСообщения);
//
//    Процедура ПечатьДокументаЗавершение(Результат, ДополнительныеПараметры) Экспорт
//        // код печати документа, рассчитывающий на то, что расширение подключено.
//        // ...
Процедура ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещенияОЗакрытии, Знач ТекстПредложения = "", 
	Знач ТекстПредупреждения = "") Экспорт
	
	Параметры = Новый Структура("ОписаниеОповещенияОЗакрытии,ТекстПредупреждения", 
	ОписаниеОповещенияОЗакрытии, ТекстПредупреждения, );
	Оповещение = Новый ОписаниеОповещения("ПроверитьРасширениеРаботыСФайламиПодключеноЗавершение",
	ОбщегоНазначенияСлужебныйКлиент, Параметры);
	ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Оповещение, ТекстПредложения);
	
КонецПроцедуры // ПроверитьРасширениеРаботыСФайламиПодключено()

// Возвращает пользовательскую настройку "Предлагать установку расширения работы с файлами".
//
// Возвращаемое значение:
//  Булево - Истина, если предлагать.
//
Функция ПредлагатьУстановкуРасширенияРаботыСФайлами() Экспорт
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	Возврат ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиПрограммы/ПредлагатьУстановкуРасширенияРаботыСФайлами", ИдентификаторКлиента, Истина);
	
КонецФункции // ПредлагатьУстановкуРасширенияРаботыСФайлами()

// Сохраняет персональные настройки пользователя.
//
// Параметры:
//	Настройки - Структура - коллекция настроек:
//	 * НапоминатьОбУстановкеРасширенияРаботыСФайлами  - Булево - Признак необходимости
//                                                               напоминания об установке расширения.
//	 * ЗапрашиватьПодтверждениеПриЗавершенииПрограммы - Булево - Запрашивать подтверждение по завершении работы.
//
Процедура СохранитьПерсональныеНастройки(Настройки) Экспорт
	
	Если Настройки.Свойство("НапоминатьОбУстановкеРасширенияРаботыСФайлами") Тогда
		ПараметрыПриложения["СтандартныеПодсистемы.ПредлагатьУстановкуРасширенияРаботыСФайлами"] = 
		Настройки.НапоминатьОбУстановкеРасширенияРаботыСФайлами;
	КонецЕсли;
	
	Если Настройки.Свойство("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы") Тогда
		СтандартныеПодсистемыКлиент.УстановитьПараметрКлиента("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы",
		Настройки.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы);
	КонецЕсли;
	
	Если Настройки.Свойство("ПерсональныеНастройкиРаботыСФайлами") Тогда
		СтандартныеПодсистемыКлиент.УстановитьПараметрКлиента("ПерсональныеНастройкиРаботыСФайлами",
		Настройки.ПерсональныеНастройкиРаботыСФайлами);
	КонецЕсли;
	
КонецПроцедуры // СохранитьПерсональныеНастройки()

// Обработчик завершения проверки подключения расширения работы с файлами
//
Процедура ПроверитьРасширениеРаботыСФайламиПодключеноЗавершение(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	
	Если РасширениеПодключено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияОЗакрытии);
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = ДополнительныеПараметры.ТекстПредупреждения;
	
	ПоказатьПредупреждениеПользователю(ТекстСообщения);
	
КонецПроцедуры // ПроверитьРасширениеРаботыСФайламиПодключеноЗавершение()

// Завершает цепочку процедур определяющих, установлено расширение и предлагающих его установку.
//  Исполняет обработчик завершения.
Процедура ОпределитьВидВзаимодействияСФайловойСистемойЗавершение(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	
	ОбработчикЗавершения = ДополнительныеПараметры.ОбработчикЗавершения;
	ВыполнитьОбработкуОповещения(ОбработчикЗавершения, РасширениеПодключено);
КонецПроцедуры // ОпределитьВидВзаимодействияСФайловойСистемойЗавершение()

#КонецОбласти

#Область ПроцедерыЗагрузкиФайлов

// Показывает диалог выбора файлов и помещает выбранные файлы во временное хранилище.
//
// Параметры:
//  РасширениеПодключено    - Булево             - флаг, оповещающий о том, что в режиме веб-клиента
//                                                     необходимо исполльзовать процедуры не требующие расширения.
//  ОбработчикЗавершения    - ОписаниеОповещения - описание процедуры, которая будет вызвана, если расширение
//                                                     подключено со следующими параметрами:
//                                                      Результат               - Булево - всегда Истина.
//                                                      ДополнительныеПараметры - Неопределено
//  МассивЗагружаемыхФайлов - Массив              - массив, содержащий описания передаваемых файлов.
// Значение первого параметра, возвращаемого в ОбработчикРезультата:
//   ПомещенныеФайлы - Результат выбора.
//       * - Неопределено - Пользователь отказался от выбора.
//       * - Массив из ОписаниеПереданногоФайла, Структура - Пользователь выбрал файл.
//           ** Имя      - Строка - Полное имя выбранного файла.
//           ** Хранение - Строка - Адрес во временном хранилище, по которому размещен файл.
//
Процедура ЗагрузитьФайл(РасширениеПодключено, ОбработчикЗавершения, МассивЗагружаемыхФайлов) Экспорт
	#Если НЕ ВебКлиент Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьРезультатПомещенияФайлов", ЭтотОбъект, ОбработчикЗавершения);
		НачатьПомещениеФайлов(ОписаниеОповещения, МассивЗагружаемыхФайлов,, Ложь);
	#КонецЕсли
	// Добавлено временно, в расширении конфигурации для работы с файлами реализован функционал загрузки.
	#Если ВебКлиент Тогда
		ПоказатьПредупреждениеПользователю("Загрузка файлов в веб-клиенте недоступна!");
	#КонецЕсли
КонецПроцедуры // ЗагрузитьФайл()

// Обработка результата выбора файлов.
//
Процедура ОбработатьРезультатПомещенияФайлов(ПомещенныеФайлы, ОбработчикЗавершения) Экспорт
	ВыполнитьОбработкуОповещения(ОбработчикЗавершения, ПомещенныеФайлы);
КонецПроцедуры // ОбработатьРезультатПомещенияФайлов()

// Обработка результата выбора файлов.
//
Процедура ОбработатьРезультатПомещенияФайла(ВыборВыполнен, АдресИлиРезультатВыбора, ВыбранноеИмяФайла, ОбработчикЗавершения) Экспорт
	Возврат;
КонецПроцедуры // ОбработатьРезультатПомещенияФайлов()

#КонецОбласти

#Область ПроцедурыВыгрузкиФайлов

// Показывает диалог сохранения файлов и получает файлы из временного хранилища.
//
// Параметры:
//  РасширениеПодключено - Булево            - флаг, оповещающий о том, что в режиме веб-клиента
//                                                необходимо исполльзовать процедуры не требующие расширения.
//  ВыгружаемыеФайлы     - Массив            - массив, содержащий описания передаваемых файлов.
//  ОбработчикЗавершения - ОписаниеОповещения - описание процедуры, которая будет вызвана, если расширение
//                                                подключено со следующими параметрами:
//                                                  Результат               - Булево - всегда Истина.
//                                                  ДополнительныеПараметры - Неопределено
//
// Значение первого параметра, возвращаемого в ОбработчикРезультата:
//   ПолученныеФайлы - Результат сохранения.
//       * - Массив из ОписаниеПереданногоФайла.
//           ** Имя      - Строка - Полное имя выбранного файла.
//           ** Хранение - Строка - Адрес во временном хранилище, по которому размещен файл.
//
Процедура ВыгрузитьВФайл(РасширениеПодключено, ВыгружаемыеФайлы, ОбработчикЗавершения = Неопределено) Экспорт
	
	Если ВыгружаемыеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	#Если НЕ ВебКлиент Тогда
		Если ОбработчикЗавершения = Неопределено Тогда
			ОбработчикЗавершения = Новый ОписаниеОповещения;
		КонецЕсли;
		НачатьПолучениеФайлов(ОбработчикЗавершения,ВыгружаемыеФайлы,,Ложь);
	#КонецЕсли
	#Если ВебКлиент Тогда
		ПоказатьПредупреждениеПользователю("Выгрузка файлов в веб-клиенте недоступна!");
	#КонецЕсли
	
КонецПроцедуры // ВыгрузитьВФайл()

#КонецОбласти

#Область ПроцедурыВыбораФайлаКаталога

// Процедура создает диалог выбора файла и начинает его отображение.
//
// Параметры:
//  Форма              - УправляемаяФорма - форма, в которой будет продолжено отображение диалога выбора файла.
//  Фильтр             - Строка - Набором файловых фильтров.
//  РасширениеФайла    - Строка - расширение файла, которое будет использовано в диалоге выбора.
//  ЗаголовокДиалога   - Строка - текст заголовка окна диалога выбора файла.
//  ИмяФайла           - Строка - имя файла для создания объекта файл.
//  МножественныйВыбор - Булево - признак множественного выбора файлов.
//
Процедура ВыбратьФайл(Форма, Фильтр, РасширениеФайла, ЗаголовокДиалога = "Выберите файл", ИмяФайла, МножественныйВыбор = Ложь) Экспорт
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                  = Фильтр;
	ДиалогВыбораФайла.Расширение              = РасширениеФайла;
	ДиалогВыбораФайла.Заголовок               = ЗаголовокДиалога;
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ИндексФильтра           = 0;
	
	Файл = Новый Файл(ИмяФайла);
	ДиалогВыбораФайла.Каталог        = Файл.Путь;
	ДиалогВыбораФайла.ПолноеИмяФайла = Файл.Имя;
	
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор          = МножественныйВыбор;
	
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ВыбратьФайлЗавершение", Форма, Новый Структура("ДиалогВыбораФайла", ДиалогВыбораФайла)));
	
КонецПроцедуры // ВыбратьФайл()

// Процедура создает диалог выбора каталога и начинает его отображение.
//
// Параметры:
//  Форма              - УправляемаяФорма - форма, в которой будет продолжено отображение диалога выбора каталога.
//  ЗаголовокДиалога   - Строка - текст заголовка окна диалога выбора каталога.
//  ИмяКаталога        - Строка - имя текущего каталога.
//
Процедура ВыбратьКаталог(Форма, ЗаголовокДиалога = "Выберите каталог", ИмяКаталога = "") Экспорт
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок                   = ЗаголовокДиалога;
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	ДиалогВыбораФайла.Каталог                     = ИмяКаталога;
	
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ВыбратьКаталогЗавершение", Форма, Новый Структура("ДиалогВыбораФайла", ДиалогВыбораФайла)));
	
КонецПроцедуры // ВыбратьКаталог()

#КонецОбласти

#Область ПроцедурыОткрытияФайлаКаталога

// Выполняет открытие файла или каталога.
//
// Параметры:
//  ИмяФайлаКаталога - Строка - полное имя открываемого файла или каталога.
//  ЭтоКаталог       - Булево - определяет, является ли открываемый объект каталогом.
//
Процедура ОткрытиеФайлаКаталога(ИмяФайлаКаталога, ЭтоКаталог = Ложь) Экспорт
	
	ФайлКаталог = Новый Файл(ИмяФайлаКаталога);
	
	СтруктураДополнительныхПараметров = Новый Структура;
	СтруктураДополнительныхПараметров.Вставить("ФайлКаталог", ФайлКаталог);
	СтруктураДополнительныхПараметров.Вставить("ЭтоКаталог",  ЭтоКаталог);
	
	ФайлКаталог.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ОткрытиеФайлаКаталогаСуществуетЗавершение", ЭтотОбъект, СтруктураДополнительныхПараметров));
	
КонецПроцедуры // ОткрытиеФайлаКаталога()

// Процедура-обработчик результата работы процедуры "НачатьПроверкуСуществования".
//
Процедура ОткрытиеФайлаКаталогаСуществуетЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	ФайлКаталог = ДополнительныеПараметры.ФайлКаталог;
	
	Если Существует Тогда
		Если ДополнительныеПараметры.ЭтоКаталог Тогда
			ФайлКаталог.НачатьПроверкуЭтоКаталог(Новый ОписаниеОповещения("ОткрытиеФайлаКаталогаЭтоФайлЗавершение", ЭтотОбъект, ДополнительныеПараметры));
		Иначе
			ФайлКаталог.НачатьПроверкуЭтоФайл(Новый ОписаниеОповещения("ОткрытиеФайлаКаталогаЭтоФайлЗавершение", ЭтотОбъект, ДополнительныеПараметры));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОткрытиеФайлаКаталогаСуществуетЗавершение()

// Процедура-обработчик результата работы процедуры "НачатьПроверкуЭтоКаталог".
//
Процедура ОткрытиеФайлаКаталогаЭтоФайлЗавершение(ПроверкаПройдена, ДополнительныеПараметры) Экспорт
	
	Если ПроверкаПройдена Тогда
		НачатьЗапускПриложения(Новый ОписаниеОповещения, ДополнительныеПараметры.ФайлКаталог.ПолноеИмя);
	КонецЕсли;
	
КонецПроцедуры // ОткрытиеФайлаКаталогаЭтоФайлЗавершение()

#КонецОбласти

#Область ПроцедурыВыводаСообщений

// Выводит на экран окно предупреждения о необходимости подключения расширения.
//
// Параметры:
//  ТекстСообещния - Строка - Текст сообщения, которое будет показано пользователю.
//
Процедура ПоказатьПредупреждениеПользователю(ТекстСообщения = "")
	
	Если ПустаяСтрока(ТекстСообщения) Тогда
		ТекстСообщения = НСтр("ru = 'Действие недоступно, так как не установлено расширение для веб-клиента 1С:Предприятие.'")
	КонецЕсли;
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры // ПоказатьПредупреждениеПользователю()

&НаКлиенте
// Процедура-обработчик, вызываемый после завершения выгрузки файлов
// для вывода пользователю сообщения с итогами выполненной выгрузки.
//
Процедура ОбработатьПослеВыгрузки(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ПомещенныеФайлы = Неопределено И Не ПомещенныеФайлы.Количество() = 0 Тогда
		
		ТекстСообщения = "Выгрузка в файл(ы) завершена!";
		
		Для Каждого Файл Из ПомещенныеФайлы Цикл
			ТекстСообщения = ТекстСообщения + Символы.ПС + Файл.Имя;
		КонецЦикла;
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	Иначе
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не удалось выгрузить файл(ы)!");
	КонецЕсли;
	
КонецПроцедуры // ОбработатьПослеВыгрузки()

#КонецОбласти