
#Область ПрограммныйИнтерфейс

Процедура ОтобразитьИндексыСПАРК(
			РезультатИндексыКонтрагента,
			КонтрагентОбъект,
			Контрагент,
			Форма,
			ИспользованиеРазрешено,
			Параметры,
			СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Отказ = Ложь;
	НастроитьВидимостьГруппыСПАРК(Форма, Контрагент, РезультатИндексыКонтрагента, ИспользованиеРазрешено, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьОшибкаПодключения       = Истина;
	ЦветСтиляЦветОсобогоТекста  = Форма.ЦветаСПАРК.ОсобыйТекст;
	ЭтоФормаКонтрагента         = (Параметры.ОбъектМетаданных = "Справочник.Контрагенты");
	ЭтоФормаПлатежногоПоручения = (Параметры.ОбъектМетаданных = "Документ.ПлатежноеПоручение");
	
	ПодготовитьЭлементыФормы(Форма, ЭтоФормаКонтрагента, ЭтоФормаПлатежногоПоручения);
	УстановитьВидимостьИндикатораФоновогоЗадания(Форма, РезультатИндексыКонтрагента);
	
	Если ЭтоФормаКонтрагента Тогда
		Форма.Заголовок1СПАРК = Новый ФорматированнаяСтрока(
			НСтр("ru='1СПАРК Риски'"),
			Новый Шрифт(, ,Истина)); // Жирный шрифт
	КонецЕсли;
	
	Если РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит") Тогда
		
		ЕстьОшибкаПодключения = Истина;
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ВнутренняяОшибкаСервиса") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИнтернетПоддержкаНеПодключена") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИспользованиеЗапрещено") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестнаяОшибка") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестныйИНН") Тогда
		
		ЕстьОшибкаПодключения = Ложь;
		Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Нет информации о контрагенте'"),,,, "SPARK:NoInformation");
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйЗапрос") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйИНН") Тогда
		
		ЕстьОшибкаПодключения = Ложь;
		Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Нет информации о контрагенте'"),,,, "SPARK:NoInformation");
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеПодлежитПроверке") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ОшибкаПодключения") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ПревышеноКоличествоПопытокАутентификации") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит") Тогда
	Иначе // Пустое поле - ошибок нет.
		
		ЕстьОшибкаПодключения = Ложь;
		
		ТекстОшибки = ТекстОшибкиПолученияДанных(РезультатИндексыКонтрагента, ЦветСтиляЦветОсобогоТекста);
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			Форма.Информация1СПАРК = ТекстОшибки;
		Иначе
			// Если контрагент не активен, вывести сообщение "Контрагент прекратил деятельность %ДатаСтатуса%".
			Если (РезультатИндексыКонтрагента.Активен <> Истина) Тогда
				
				СобытиеСПАРК = Новый ФорматированнаяСтрока(
					СтрШаблон(
						НСтр("ru='Контрагент прекратил деятельность %1'"),
						Формат(РезультатИндексыКонтрагента.ДатаСтатуса, "ДЛФ=D")),
					,
					ЦветСтиляЦветОсобогоТекста);
				Если ЭтоФормаКонтрагента Тогда
					Форма.КритичноеСобытие1СПАРК = СобытиеСПАРК;
				ИначеЕсли ЭтоФормаПлатежногоПоручения Тогда
					Форма.Информация1СПАРК = СобытиеСПАРК;
				КонецЕсли;
				
			Иначе
				ВывестиИндексыИСтатусыСПАРК(
					Форма,
					РезультатИндексыКонтрагента,
					ЦветСтиляЦветОсобогоТекста,
					ЭтоФормаКонтрагента,
					ЭтоФормаПлатежногоПоручения);
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли;
	
	Если ЕстьОшибкаПодключения Тогда
		ОбработатьОшибкуПодключения(Форма, РезультатИндексыКонтрагента, ЭтоФормаКонтрагента, ЭтоФормаПлатежногоПоручения);
	КонецЕсли;
	
	НастроитьВидимостьЭлементовСПАРК(Форма, ЭтоФормаКонтрагента, ЭтоФормаПлатежногоПоручения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьЭлементыФормы(Форма, ЭтоФормаКонтрагента, ЭтоФормаПлатежногоПоручения)
	
	Если ЭтоФормаКонтрагента Тогда
		Форма.Заголовок1СПАРК                     = Новый ФорматированнаяСтрока("");
		Форма.КритичноеСобытие1СПАРК              = Новый ФорматированнаяСтрока("");
		Форма.СводныйИндикатор1СПАРК              = Новый ФорматированнаяСтрока("");
		Форма.ИндексДолжнойОсмотрительности1СПАРК = Новый ФорматированнаяСтрока("");
		Форма.ИндексФинансовогоРиска1СПАРК        = Новый ФорматированнаяСтрока("");
		Форма.ИндексПлатежнойДисциплины1СПАРК     = Новый ФорматированнаяСтрока("");
		Форма.Информация1СПАРК                    = Новый ФорматированнаяСтрока("");
		Форма.Действие1СПАРК                      = Новый ФорматированнаяСтрока("");
	ИначеЕсли ЭтоФормаПлатежногоПоручения Тогда
		Форма.Информация1СПАРК = Новый ФорматированнаяСтрока("");
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьВидимостьГруппыСПАРК(Форма, Контрагент, РезультатИндексыКонтрагента, ИспользованиеРазрешено, Отказ = Ложь)
	
	Элементы = Форма.Элементы;
	
	Если Не ИспользованиеРазрешено Тогда
		Элементы.Группа1СПАРК.Видимость = Ложь;
		Отказ = Истина;
	
	// Если передано пустое значение контрагента, то ничего не выводить.
	ИначеЕсли Не ЗначениеЗаполнено(Контрагент) Тогда
		Элементы.Группа1СПАРК.Видимость = Ложь;
		Отказ = Истина;
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = 
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит") Тогда
		
		Элементы.Группа1СПАРК.Видимость = Истина;
	ИначеЕсли Не РезультатИндексыКонтрагента.ПодлежитПроверке Тогда
		// НЕ юридических лиц (физлиц, иностранные организации и т.п.) - не выводим вообще.
		Элементы.Группа1СПАРК.Видимость = Ложь;
		Отказ = Истина;
	Иначе
		Элементы.Группа1СПАРК.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьИндикатораФоновогоЗадания(Форма, РезультатИндексыКонтрагента)
	
	Элементы = Форма.Элементы;
	
	ДекорацияОбновлениеДанных = Элементы.ДекорацияОбновлениеДанных1СПАРК;
	// В зависимости от того, загружены данные, или выполнятся фоновое задание, вывести или скрыть картинку ожидания.
	Если РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных =
		ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ЗапущеноФоновоеЗадание") Тогда
		
		ДекорацияОбновлениеДанных.Видимость = Истина;
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = 
		ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОтменаФоновогоЗадания") Тогда
		
		ДекорацияОбновлениеДанных.Видимость = Истина;
		Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Получение данных из Интернет отменено.'"));
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = 
		ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОшибкаФоновогоЗадания") Тогда
		
		ДекорацияОбновлениеДанных.Видимость = Истина;
		Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Ошибка получения данных из Интернет.'"));
	Иначе // загрузка завершена или не осуществлялась
		ДекорацияОбновлениеДанных.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьФорматированиеГрадаций(Форма)
	
	ЦветаСПАРК = Форма.ЦветаСПАРК;
	ФорматированиеГрадаций = Новый Соответствие;
	ФорматированиеГрадаций.Вставить(ПредопределенноеЗначение("Перечисление.ГрадацияИндексовСПАРКРиски.Высокий"), 
		Новый Структура("ЦветТекста, Текст", ЦветаСПАРК.ВысокийРиск, Нстр("ru = 'высокий риск'")));
	ФорматированиеГрадаций.Вставить(ПредопределенноеЗначение("Перечисление.ГрадацияИндексовСПАРКРиски.Средний"), 
		Новый Структура("ЦветТекста, Текст", ЦветаСПАРК.СреднийРиск, Нстр("ru = 'средний риск'")));
	ФорматированиеГрадаций.Вставить(ПредопределенноеЗначение("Перечисление.ГрадацияИндексовСПАРКРиски.Низкий"), 
		Новый Структура("ЦветТекста, Текст", ЦветаСПАРК.НизкийРиск, Нстр("ru = 'низкий риск'")));
		
	Возврат ФорматированиеГрадаций;
	
КонецФункции

Процедура НастроитьВидимостьЭлементовСПАРК(Форма, ЭтоФормаКонтрагента, ЭтоФормаПлатежногоПоручения)
	
	Элементы = Форма.Элементы;
	Если ЭтоФормаКонтрагента Тогда
		Элементы.Заголовок1СПАРК.Видимость                     = Не ПустаяСтрока(Форма.Заголовок1СПАРК);
		Элементы.СводныйИндикатор1СПАРК.Видимость              = Не ПустаяСтрока(Форма.СводныйИндикатор1СПАРК);
		Элементы.ИндексДолжнойОсмотрительности1СПАРК.Видимость = Не ПустаяСтрока(Форма.ИндексДолжнойОсмотрительности1СПАРК);
		Элементы.ИндексФинансовогоРиска1СПАРК.Видимость        = Не ПустаяСтрока(Форма.ИндексФинансовогоРиска1СПАРК);
		Элементы.ИндексПлатежнойДисциплины1СПАРК.Видимость     = Не ПустаяСтрока(Форма.ИндексПлатежнойДисциплины1СПАРК);
		Элементы.КритичноеСобытие1СПАРК.Видимость              = Не ПустаяСтрока(Форма.КритичноеСобытие1СПАРК);
		Элементы.Информация1СПАРК.Видимость                    = Не ПустаяСтрока(Форма.Информация1СПАРК);
		Элементы.Действие1СПАРК.Видимость                      = Не ПустаяСтрока(Форма.Действие1СПАРК);
	ИначеЕсли ЭтоФормаПлатежногоПоручения Тогда
		Элементы.Группа1СПАРК.Видимость = Не ПустаяСтрока(Форма.Информация1СПАРК);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьОшибкуПодключения(Форма, РезультатИндексыКонтрагента, ЭтоФормаКонтрагента, ЭтоФормаПлатежногоПоручения)
	
	Элементы = Форма.Элементы;
	Если ЭтоФормаКонтрагента Тогда
		Если РезультатИндексыКонтрагента.ВидОшибки
			= ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит")
			И ДоступенТестовыйПериод(РезультатИндексыКонтрагента) Тогда
			
			Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Сервис проверки контрагентов'"));
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Купите'"),,,, "SPARK:BuyService"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(НСтр("ru = 'или'"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='попробуйте бесплатно'"),,,, "SPARK:ConnectTrialTariff"));
			Форма.Действие1СПАРК = Новый ФорматированнаяСтрока(МассивСтрок);
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки
			= ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит")
			И ПодключаетсяТестовыйПериод(РезультатИндексыКонтрагента) Тогда
				
			Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(
				НСтр("ru='Выполняется подключение'"));
		Иначе
			Если Не РезультатИндексыКонтрагента.ДанныеАутентификацииЗаполнены
				Или РезультатИндексыКонтрагента.РаботаВМоделиСервиса Тогда
				
				Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Сервис проверки контрагентов'"));
				Форма.Действие1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Подробнее о сервисе'"),,,, "SPARK:About");
			Иначе
				Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Сервис проверки контрагентов'"));
				
				МассивСтрок = Новый Массив;
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Подключитесь'"),,,, "SPARK:BuyService"));
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(НСтр("ru = 'или'"));
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='узнайте подробнее'"),,,, "SPARK:About"));
				Форма.Действие1СПАРК = Новый ФорматированнаяСтрока(МассивСтрок);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЭтоФормаПлатежногоПоручения Тогда
		
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='1СПАРК Риски:'")));
		МассивСтрок.Добавить(" ");
		Если РезультатИндексыКонтрагента.ВидОшибки
			= ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит")
			И ДоступенТестовыйПериод(РезультатИндексыКонтрагента) Тогда
			
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='купите'"),,,, "SPARK:BuyService"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(НСтр("ru = 'или'"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='попробуйте бесплатно'"),,,, "SPARK:ConnectTrialTariff"));
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки
			= ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит")
			И ПодключаетсяТестовыйПериод(РезультатИндексыКонтрагента) Тогда
				
			МассивСтрок.Добавить(НСтр("ru='выполняется подключение'"));
		Иначе
			Если Не РезультатИндексыКонтрагента.ДанныеАутентификацииЗаполнены
				Или РезультатИндексыКонтрагента.РаботаВМоделиСервиса Тогда
				
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='подробнее о сервисе'"),,,, "SPARK:About"));
			Иначе
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='подключитесь'"),,,, "SPARK:BuyService"));
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(НСтр("ru = 'или'"));
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='узнайте подробнее'"),,,, "SPARK:About"));
			КонецЕсли;
		КонецЕсли;
		Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(МассивСтрок);
	КонецЕсли;
	
КонецПроцедуры

Функция ДоступенТестовыйПериод(РезультатИндексыКонтрагента)
	
	Возврат (РезультатИндексыКонтрагента.ДоступностьПодключенияТестовогоПериода = "Доступно");
	
КонецФункции

Функция ПодключаетсяТестовыйПериод(РезультатИндексыКонтрагента)
	
	Возврат (РезультатИндексыКонтрагента.ДоступностьПодключенияТестовогоПериода = "Подключение");
	
КонецФункции

Функция ТекстОшибкиПолученияДанных(РезультатИндексыКонтрагента, ЦветТекстаОшибки)
	
	ТекстОшибки = "";
	Если РезультатИндексыКонтрагента.СостояниеВыводаДанных =
		ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеНетДанных") Тогда
		
		Если РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных =
			ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ЗапущеноФоновоеЗадание") Тогда
			
			ТекстОшибки = Новый ФорматированнаяСтрока(НСтр("ru='Получение данных...'"));
		ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных =
			ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОтменаФоновогоЗадания") Тогда
			
			ТекстОшибки = Новый ФорматированнаяСтрока(НСтр("ru='Ошибка получения данных'"),, ЦветТекстаОшибки);
		ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных =
			ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОшибкаФоновогоЗадания") Тогда
			
			ТекстОшибки = Новый ФорматированнаяСтрока(НСтр("ru='Ошибка получения данных'"),, ЦветТекстаОшибки);
		Иначе // Загрузка завершена или не осуществлялась.
			
			ТекстОшибки = Новый ФорматированнаяСтрока(НСтр("ru='Ошибка получения данных'"),, ЦветТекстаОшибки);
		КонецЕсли;
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных =
		ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеУстаревшиеДанные") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных =
		ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.НеправильныйИНН") Тогда
		
		ТекстОшибки = Новый ФорматированнаяСтрока(НСтр("ru='Нет информации о контрагенте'"),,,, "SPARK:NoInformation");
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных =
		ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзКэша") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных =
		ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзФоновогоЗадания") Тогда
	Иначе
		ТекстОшибки = Новый ФорматированнаяСтрока(НСтр("ru='Неопределенная ошибка'"),, ЦветТекстаОшибки);
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

Процедура ВывестиИндексыИСтатусыСПАРК(Форма, РезультатИндексыКонтрагента, ЦветСтиляЦветОсобогоТекста, ЭтоФормаКонтрагента, ЭтоФормаПлатежногоПоручения)
	
	ИнформацияВыведена     = Ложь;
	ФорматированиеГрадаций = ПолучитьФорматированиеГрадаций(Форма);
	
	// Если есть событие, вывести его. В противном случае - индексы.
	Если РезультатИндексыКонтрагента.ОтображатьСтатус
		И ЗначениеЗаполнено(РезультатИндексыКонтрагента.Статус) Тогда
		
		СобытиеСПАРК = Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru='%1 %2'"),
					РезультатИндексыКонтрагента.СтатусНазвание,
					Формат(РезультатИндексыКонтрагента.ДатаСтатуса, "ДЛФ=D")),,
				ЦветСтиляЦветОсобогоТекста,, "SPARK:OpenStatusDescription");
		Если ЭтоФормаКонтрагента Тогда
			Форма.КритичноеСобытие1СПАРК = СобытиеСПАРК;
		ИначеЕсли ЭтоФормаПлатежногоПоручения Тогда
			Форма.Информация1СПАРК = СобытиеСПАРК;
		КонецЕсли;
		ИнформацияВыведена = Истина;
		
	КонецЕсли;
	
	Если ЭтоФормаКонтрагента Тогда
		
		Если (РезультатИндексыКонтрагента.СводныйИндикатор >= 1)
				И (РезультатИндексыКонтрагента.СводныйИндикатор <= 3) Тогда
			
			Форма.СводныйИндикатор1СПАРК = Новый ФорматированнаяСтрока(
					Строка(РезультатИндексыКонтрагента.СводныйИндикаторГрадация),
					, // Шрифт
					ФорматированиеГрадаций[РезультатИндексыКонтрагента.СводныйИндикаторГрадация].ЦветТекста, // ЦветТекста
					, // ЦветФона
					"SPARK:WhatIsCompositeIndex"); // Ссылка
			
			ИнформацияВыведена = Истина;
			
		КонецЕсли;
		
		Если (РезультатИндексыКонтрагента.ИндексДолжнойОсмотрительности >= 0)
				И (РезультатИндексыКонтрагента.ИндексДолжнойОсмотрительности <= 100) Тогда
				
			Форма.ИндексДолжнойОсмотрительности1СПАРК = Новый ФорматированнаяСтрока(
					СтрШаблон(
						НСтр("ru='%1 (%2)'"),
						РезультатИндексыКонтрагента.ИндексДолжнойОсмотрительности,
						ФорматированиеГрадаций[РезультатИндексыКонтрагента.ИДОГрадация].Текст),
					, // Шрифт
					ФорматированиеГрадаций[РезультатИндексыКонтрагента.ИДОГрадация].ЦветТекста, // ЦветТекста
					, // ЦветФона
					"SPARK:WhatIsIndexOfDueDiligence"); // Ссылка
			
			ИнформацияВыведена = Истина;
			
		КонецЕсли;

		Если (РезультатИндексыКонтрагента.ИндексФинансовогоРиска >= 0)
				И (РезультатИндексыКонтрагента.ИндексФинансовогоРиска <= 100) Тогда
				
			Форма.ИндексФинансовогоРиска1СПАРК = Новый ФорматированнаяСтрока(
					СтрШаблон(
						НСтр("ru='%1 (%2)'"),
						РезультатИндексыКонтрагента.ИндексФинансовогоРиска,
						ФорматированиеГрадаций[РезультатИндексыКонтрагента.ИФРГрадация].Текст),
					, // Шрифт
					ФорматированиеГрадаций[РезультатИндексыКонтрагента.ИФРГрадация].ЦветТекста, // ЦветТекста
					, // ЦветФона
					"SPARK:WhatIsFailureScore"); // Ссылка
			
			ИнформацияВыведена = Истина;
			
		КонецЕсли;

		Если (РезультатИндексыКонтрагента.ИндексПлатежнойДисциплины >= 0)
				И (РезультатИндексыКонтрагента.ИндексПлатежнойДисциплины <= 100) Тогда
				
			Форма.ИндексПлатежнойДисциплины1СПАРК = Новый ФорматированнаяСтрока(
					СтрШаблон(
						НСтр("ru='%1 (%2)'"),
						РезультатИндексыКонтрагента.ИндексПлатежнойДисциплины,
						ФорматированиеГрадаций[РезультатИндексыКонтрагента.ИПДГрадация].Текст),
					, // Шрифт
					ФорматированиеГрадаций[РезультатИндексыКонтрагента.ИПДГрадация].ЦветТекста, // ЦветТекста
					, // ЦветФона
					"SPARK:WhatIsPaymentIndex"); // Ссылка
			
			ИнформацияВыведена = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ЭтоФормаПлатежногоПоручения Тогда
		
		Если (РезультатИндексыКонтрагента.СводныйИндикатор >= 1)
				И (РезультатИндексыКонтрагента.СводныйИндикатор <= 3) Тогда
				
			ЗаголовокИндикатора = Новый ФорматированнаяСтрока(" " + НСтр("ru = 'Сводный индикатор:'") + " ");
			
			ЗначениеИндикатора = Новый ФорматированнаяСтрока(
					Строка(РезультатИндексыКонтрагента.СводныйИндикаторГрадация),
					, // Шрифт
					ФорматированиеГрадаций[РезультатИндексыКонтрагента.СводныйИндикаторГрадация].ЦветТекста, // ЦветТекста
					, // ЦветФона
					"SPARK:WhatIsCompositeIndex"); // Ссылка
			
			Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(ЗаголовокИндикатора, ЗначениеИндикатора);
			
			ИнформацияВыведена = Истина;
			
		КонецЕсли;
		
	КонецЕсли;

	Если Не ИнформацияВыведена Тогда
		Форма.Информация1СПАРК = Новый ФорматированнаяСтрока(НСтр("ru='Нет информации о контрагенте'"),,,, "SPARK:NoInformation");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти