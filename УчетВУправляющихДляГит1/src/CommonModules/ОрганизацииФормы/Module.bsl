
////////////////////////////////////////////////////////////////////////////////
// Универсальные методы для справочника Организации
//
// Серверные методы форм справочника Организации
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПрочитатьДанныеФизическогоЛица(Форма, ФизическоеЛицо, ИменаРеквизитов) Экспорт

	Если НЕ ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИменаРеквизитов.Свойство("ФизическоеЛицо") Тогда
		ФизическоеЛицоОбъект = ФизическоеЛицо.ПолучитьОбъект();
		Форма.ЗначениеВРеквизитФормы(ФизическоеЛицоОбъект, ИменаРеквизитов.ФизическоеЛицо);
		Если ИменаРеквизитов.Свойство("ГруппаКонтактныеДанные") Тогда
			// СтандартныеПодсистемы.КонтактнаяИнформация
			УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(
				Форма, ФизическоеЛицоОбъект, ИменаРеквизитов.ГруппаКонтактныеДанные);
			// Конец СтандартныеПодсистемы.КонтактнаяИнформация
		КонецЕсли;
	КонецЕсли;
	
	Если ИменаРеквизитов.Свойство("ПаспортныеДанные") Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ФизЛицо",      ФизическоеЛицо); 
		Запрос.УстановитьПараметр("ВидДокумента", Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокументыФизическихЛиц.Период КАК Период,
		|	ДокументыФизическихЛиц.ФизЛицо КАК ФизЛицо,
		|	ДокументыФизическихЛиц.ВидДокумента КАК ВидДокумента,
		|	ДокументыФизическихЛиц.Серия КАК Серия,
		|	ДокументыФизическихЛиц.Номер КАК Номер,
		|	ДокументыФизическихЛиц.ДатаВыдачи КАК ДатаВыдачи,
		|	ДокументыФизическихЛиц.СрокДействия КАК СрокДействия,
		|	ДокументыФизическихЛиц.КемВыдан КАК КемВыдан,
		|	ДокументыФизическихЛиц.КодПодразделения,
		|	ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность КАК ЯвляетсяДокументомУдостоверяющимЛичность,
		|	ДокументыФизическихЛиц.Представление КАК Представление
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
		|			,
		|			Физлицо = &ФизЛицо
		|				И ВидДокумента = &ВидДокумента) КАК ДокументыФизическихЛиц";
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ЗаполнитьЗначенияСвойств(Форма[ИменаРеквизитов.ПаспортныеДанные], Выборка);
			Если ИменаРеквизитов.Свойство("СерияНомерПаспорта") Тогда
				Форма[ИменаРеквизитов.СерияНомерПаспорта] = Выборка.Серия + " " + Выборка.Номер;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПрочитатьУчетнуюПолитику(Форма, Организация) Экспорт
	
	Если УчетнаяПолитика.Существует(Организация, ТекущаяДатаСеанса()) Тогда
		Форма.СтруктураУчетнойПолитики = ОрганизацииФормыВызовСервера.ПараметрыСистемыНалогообложенияПоОрганизации(
			Организация);
	Иначе
		Форма.СтруктураУчетнойПолитики = НастройкиУчета.ОписаниеСтруктурыУчетнойПолитики();
	КонецЕсли;

КонецПроцедуры

Процедура ПодготовитьДанныеФизическогоЛицаПередЗаписью(Форма, ФизическоеЛицо, ПараметрыЗаписи) Экспорт
	
	ИменаРеквизитов = ПараметрыЗаписи.ИменаРеквизитов;
	ФизическоеЛицо.ФИО = СокрП(ФизическоеЛицо.Фамилия + " " + ФизическоеЛицо.Имя + " " + ФизическоеЛицо.Отчество);
	ФизическоеЛицо.Наименование = ФизическоеЛицо.ФИО;
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(Форма, ФизическоеЛицо);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	ФизическоеЛицо.ДополнительныеСвойства.Вставить("ФИОУстановлены");
	Если ИменаРеквизитов.Свойство("ФизическоеЛицо") Тогда
		ПараметрыЗаписи.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	КонецЕсли;
	
	Если ИменаРеквизитов.Свойство("ПаспортныеДанные") Тогда
		ПаспортныеДанные = Форма[ИменаРеквизитов.ПаспортныеДанные];
		ПаспортныеДанные.Период = ?(ЗначениеЗаполнено(ПаспортныеДанные.ДатаВыдачи), 
			ПаспортныеДанные.ДатаВыдачи, ТекущаяДатаСеанса());
		ПаспортныеДанные.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ;
		ПаспортныеДанные.ЯвляетсяДокументомУдостоверяющимЛичность = Истина;
		Если ИменаРеквизитов.Свойство("СерияНомерПаспорта") Тогда
			СерияНомерПаспорта = Форма[ИменаРеквизитов.СерияНомерПаспорта];
			ЗаполнитьЗначенияСвойств(ПаспортныеДанные, СерияНомерПаспортаРаздельно(СерияНомерПаспорта));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция СерияНомерПаспортаРаздельно(СерияНомерПаспорта) Экспорт
	
	СтруктураНомера = Новый Структура();
	СтруктураНомера.Вставить("Серия", Лев(СерияНомерПаспорта, 5));
	СтруктураНомера.Вставить("Номер", Сред(СерияНомерПаспорта, 7));
	Возврат СтруктураНомера;
	
КонецФункции

Процедура ЗаписатьДанныеФизическогоЛица(Форма, ФизическоеЛицо, ПараметрыЗаписи) Экспорт

	ИменаРеквизитов = ПараметрыЗаписи.ИменаРеквизитов;
	Если ИменаРеквизитов.Свойство("ФизическоеЛицо") Тогда
		ФизическоеЛицо.Записать();
		// СтандартныеПодсистемы.КонтактнаяИнформация
		УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(Форма, ФизическоеЛицо);
		// Конец СтандартныеПодсистемы.КонтактнаяИнформация
		Форма.ЗначениеВРеквизитФормы(ФизическоеЛицо, ИменаРеквизитов.ФизическоеЛицо);
		ФизическоеЛицоСсылка = ФизическоеЛицо.Ссылка;
		Если ПараметрыЗаписи.Свойство("ФизическоеЛицо") Тогда
			ПараметрыЗаписи.Удалить("ФизическоеЛицо");
		КонецЕсли;
	Иначе
		ФизическоеЛицоСсылка = ФизическоеЛицо.Ссылка;
	КонецЕсли;
	
	ПаспортныеДанные = Форма[ИменаРеквизитов.ПаспортныеДанные];
	ПаспортныеДанные.ФизЛицо = ФизическоеЛицоСсылка;
	
	ПаспортныеДанныеНаборЗаписей = РегистрыСведений.ДокументыФизическихЛиц.СоздатьНаборЗаписей();
	ПаспортныеДанныеНаборЗаписей.Отбор.ФизЛицо.Установить(ФизическоеЛицоСсылка);
	ПаспортныеДанныеНаборЗаписей.Отбор.ВидДокумента.Установить(Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
	НоваяЗапись = ПаспортныеДанныеНаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяЗапись, ПаспортныеДанные);
	ПаспортныеДанныеНаборЗаписей.Записать();
	
	ФИОФизическихЛицНаборЗаписей = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
	ФИОФизическихЛицНаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицоСсылка);
	НоваяЗапись = ФИОФизическихЛицНаборЗаписей.Добавить();
	НоваяЗапись.Период = ПаспортныеДанные.Период;
	НоваяЗапись.ФизическоеЛицо = ФизическоеЛицоСсылка;
	ЗаполнитьЗначенияСвойств(НоваяЗапись, ФизическоеЛицо);
	ФИОФизическихЛицНаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти
