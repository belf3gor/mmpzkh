
#Область СлужебныйПрограммныйИнтерфейс

// Дополняет свойства параметров сканирования необходимых для работы с алкогольной продукцией.
// 
// Параметры:
// 	ПараметрыСканирования - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования).
Процедура ВключитьПоддержкуАлкогольнойПродукции(ПараметрыСканирования) Экспорт
	
	ПараметрыСканирования.ДопустимыеВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Алкогольная"));
	
	ПараметрыСканирования.Вставить("ДокументЕГАИС",                             Неопределено);
	ПараметрыСканирования.Вставить("КонтрольАкцизныхМарок",                     Ложь);
	ПараметрыСканирования.Вставить("ОрганизацияЕГАИС",                          Неопределено);
	ПараметрыСканирования.Вставить("АлкогольнаяПродукция",                      Неопределено);
	ПараметрыСканирования.Вставить("ДокументЕГАИС",                             Неопределено);
	ПараметрыСканирования.Вставить("КонтрольПустогоСтатуса150СимвольныхМарок",  Истина);
	ПараметрыСканирования.Вставить("СоответствиеШтрихкодовСтрокДерева",         Неопределено);
	ПараметрыСканирования.Вставить("КонтрольЗаполненияМарокСНомеромИСерией",    Истина);
	ПараметрыСканирования.Вставить("ДоступныеСтатусы",                          Новый Массив);
	ПараметрыСканирования.Вставить("Номенклатура",                              Неопределено);
	ПараметрыСканирования.Вставить("Характеристика",                            Неопределено);
	ПараметрыСканирования.Вставить("Серия",                                     Неопределено);
	ПараметрыСканирования.Вставить("КлючевыеРеквизиты",                         Новый Массив);
	ПараметрыСканирования.Вставить("Операция",                                  Неопределено);
	ПараметрыСканирования.Вставить("ИдентификаторСтроки",                       Неопределено);
	ПараметрыСканирования.Вставить("ЗапрашиватьНоменклатуру",                   Истина);
	
КонецПроцедуры

Процедура ОбработатьСохраненныйВыборДанныхПоАлкогольнойПродукции(Форма, ДанныеШтрихкода) Экспорт

	Если ДанныеШтрихкода = Неопределено Или Не ДанныеШтрихкода.Свойство("ДополнительныеПараметры") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ДанныеШтрихкода.ДополнительныеПараметры;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ЗапомнитьВыбор") 
		И ДополнительныеПараметры.ЗапомнитьВыбор Тогда
		
		Если ДополнительныеПараметры.Свойство("ДанныеВыбора")
			И ТипЗнч(ДополнительныеПараметры.ДанныеВыбора) = Тип("Структура") 
			И ДополнительныеПараметры.ДанныеВыбора.Количество() > 0 Тогда
		
			Форма.ДанныеВыбораПоМаркируемойПродукции  = ДополнительныеПараметры.ДанныеВыбора;
			Форма.ДанныеВыбораПоМаркируемойПродукции.Вставить("АлкогольнаяПродукция", ДанныеШтрихКода.АлкогольнаяПродукция);
			Форма.ДанныеВыбораПоМаркируемойПродукции.Вставить("ТипШтрихКода", ДанныеШтрихКода.ТипШтрихКода);
			Форма.СохраненВыборПоМаркируемойПродукции = Истина;
			
			ОтобразитьСохраненныйВыборПоМаркируемойПродукции(Форма);
			
		КонецЕсли;
		
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ДанныеВыбораПоМаркируемойПродукции")
		И Форма.ДанныеВыбораПоМаркируемойПродукции <> Неопределено Тогда
		
		ТребуетсяСбросВыбора = Ложь;
		
		Если Форма.ДанныеВыбораПоМаркируемойПродукции.ТипШтрихкода <> ДанныеШтрихкода.ТипШтрихкода
			И Форма.ДанныеВыбораПоМаркируемойПродукции <> Неопределено Тогда
			
			ТребуетсяСбросВыбора = Истина;
			
		ИначеЕсли ДанныеШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.PDF417")
			И ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция)
			И ДанныеШтрихкода.АлкогольнаяПродукция <> Форма.ДанныеВыбораПоМаркируемойПродукции.АлкогольнаяПродукция Тогда
			
			ТребуетсяСбросВыбора = Истина;
			
		КонецЕсли;
		
		Если ТребуетсяСбросВыбора Тогда
		
			Форма.ДанныеВыбораПоМаркируемойПродукции  = Неопределено;
			Форма.СохраненВыборПоМаркируемойПродукции = Ложь;
			ОтобразитьСохраненныйВыборПоМаркируемойПродукции(Форма);
		
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОтобразитьСохраненныйВыборПоМаркируемойПродукции(Форма) Экспорт
	
	Элементы     = Форма.Элементы;
	ДанныеВыбора = Форма.ДанныеВыбораПоМаркируемойПродукции;
	
	Если Не Форма.СохраненВыборПоМаркируемойПродукции Тогда
		
		Элементы.ГруппаПредставлениеСохраненногоВыбора.Видимость = Ложь;
		
	Иначе
		
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(НСтр("ru = 'Сохранен выбор:'"));
		
		ТребуетсяЗапятая = Ложь;
		Если ДанныеВыбора.Свойство("Номенклатура") И ЗначениеЗаполнено(ДанныеВыбора.Номенклатура) Тогда
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
				ИнтеграцияИСКлиентСервер.ПредставлениеНаименования(Строка(ДанныеВыбора.Номенклатура)),,
				Форма.ЦветТекстаПоля,, "ОткрытьНоменклатуру"));
			ТребуетсяЗапятая = Истина;
		КонецЕсли;
		
		Если ДанныеВыбора.Свойство("Характеристика") И ЗначениеЗаполнено(ДанныеВыбора.Характеристика) Тогда
			Если ТребуетсяЗапятая Тогда
				МассивСтрок.Добавить(", ");
			КонецЕсли;
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
				ИнтеграцияИСКлиентСервер.ПредставлениеНаименования(Строка(ДанныеВыбора.Характеристика)),,
				Форма.ЦветТекстаПоля,, "ОткрытьХарактеристику"));
			ТребуетсяЗапятая = Истина;
		КонецЕсли;
		
		Если ДанныеВыбора.Свойство("Серия") И ЗначениеЗаполнено(ДанныеВыбора.Серия) Тогда
			Если ТребуетсяЗапятая Тогда
				МассивСтрок.Добавить(", ");
			КонецЕсли;
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
				ИнтеграцияИСКлиентСервер.ПредставлениеНаименования(Строка(ДанныеВыбора.Серия)),,
				Форма.ЦветТекстаПоля,, "ОткрытьСерию"));
		КонецЕсли;
		
		МассивСтрок.Добавить(". (");
		
		МассивСтрок.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru = 'Сбросить'"),
					Новый Шрифт(,,,,Истина),
					Форма.ЦветГиперссылки,,
					"СброситьСохраненныеДанныеВыбораПоМаркируемойПродукции"));
		
		МассивСтрок.Добавить(")");
		
		Форма.ПредставлениеСохраненногоВыбора = Новый ФорматированнаяСтрока(МассивСтрок);
		
		Элементы.ГруппаПредставлениеСохраненногоВыбора.Видимость = Истина;
		
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьПараметрыЗаполненияТабличнойЧасти(ПараметрыЗаполнения) Экспорт
	
	ПараметрыЗаполнения.Вставить("ПроверитьСериюРассчитатьСтатус", Ложь);
	
КонецПроцедуры

Процедура ДополнитьКоллекциюРезультатаОбработкиШтрихкода(РезультатОбработкиШтрихкода, ДанныеШтрихкода = Неопределено) Экспорт
	
	РезультатОбработкиШтрихкода.Вставить("Справки2",               Новый Массив);
	РезультатОбработкиШтрихкода.Вставить("ТребуетсяВыборСправки2", Ложь);
	
	// Для вывода сообщения об ошибке.
	РезультатОбработкиШтрихкода.Вставить("АлкогольнаяПродукция", Неопределено);
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода) Тогда
		РезультатОбработкиШтрихкода.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
		РезультатОбработкиШтрихкода.Штрихкод             = ДанныеШтрихкода.Штрихкод;
		РезультатОбработкиШтрихкода.ТипШтрихкода         = ДанныеШтрихкода.ТипШтрихкода;
	КонецЕсли;

КонецПроцедуры

// Проверяет код маркировки на соответствие шаблону логистической упаковки
// 
// Параметры:
// 	КодМаркировки
// Возвращаемое значение:
// 	Булево - Истина, если код соответствует логистической упаковке.
Функция ЭтоШтрихкодЛогистическойУпаковки(Штрихкод) Экспорт
	
	ОсновнойАлфавит    = "0123456789";
	РасширенныйАлфавит = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
	
	Если СтрДлина(Штрихкод) = 18 Тогда 
		
		// Код маркировки для коробов и палет: Код ФСРАР(12) + Порядковый номер(6)
		Если Не ШтрихкодированиеИСКлиентСервер.КодСоответствуетАлфавиту(Штрихкод, ОсновнойАлфавит) Тогда
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли СтрДлина(Штрихкод) = 26 Тогда //  + Тип логистической единицы(1) + Номер площадки(2) + Год(4) + Порядковый номер(9)
		
		// Код маркировки для коробов: Код ФСРАР(12)
		Если Не ШтрихкодированиеИСКлиентСервер.КодСоответствуетАлфавиту(Сред(Штрихкод, 1, 12), РасширенныйАлфавит) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// Тип логистической единицы(1)
		Если Не ШтрихкодированиеИСКлиентСервер.КодСоответствуетАлфавиту(Сред(Штрихкод, 13, 1), ОсновнойАлфавит) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// Номер площадки(2)
		Если Не ШтрихкодированиеИСКлиентСервер.КодСоответствуетАлфавиту(Сред(Штрихкод, 14, 2), РасширенныйАлфавит) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// Год(4)
		Если Не ШтрихкодированиеИСКлиентСервер.КодСоответствуетАлфавиту(Сред(Штрихкод, 16, 4), ОсновнойАлфавит) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// Серийный номер(9) - любые символы
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти


