#Область СлужебныеПроцедурыИФункции
Процедура ПриИзмененииСодержимогоОбласти(Форма, Область, ЕстьМногостраничность = Ложь) Экспорт
	ОбластьИмя = Область.Имя;
	Форма.Модифицированность = Истина;
	
	Если Форма.ДанныеУведомления.Свойство(Форма.ТекущееИДНаименования)
		И Форма.ДанныеУведомления[Форма.ТекущееИДНаименования].Свойство(ОбластьИмя) Тогда 
		
		Форма.ДанныеУведомления[Форма.ТекущееИДНаименования].Вставить(ОбластьИмя, Область.Значение);
		Форма.Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЕстьМногостраничность И Форма.ДанныеМногостраничныхРазделов.Свойство(Форма.ТекущееИДНаименования) Тогда 
		Для Каждого Элт Из Форма.ДанныеМногостраничныхРазделов[Форма.ТекущееИДНаименования] Цикл 
			Если Не Элт.Значение.Свойство(ОбластьИмя) Тогда 
				Прервать;
			КонецЕсли;
			
			Если Элт.Значение.УИД = Форма.УИДТекущаяСтраница Тогда 
				Элт.Значение.Вставить(ОбластьИмя, Область.Значение);
				Форма.Модифицированность = Истина;
				Возврат;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(ОбластьИмя, "_") > 0 Тогда
		МнгЧ = Форма.ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя);
		Если ЗначениеЗаполнено(МнгЧ) Тогда 
			База = Лев(Область.Имя, СтрНайти(ОбластьИмя, "_") - 1);
			Номер = Число(Сред(ОбластьИмя, СтрНайти(ОбластьИмя, "_") + 1));
			Форма[МнгЧ][Номер-1][База] = Область.Значение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПредставлениеУведомленияВыбор(Форма, Область, СтандартнаяОбработка, ЕстьМногостраничность = Ложь, ЕстьМногострочность = Ложь) Экспорт 
	Строки = Форма.СпискиВыбора.НайтиСтроки(Новый Структура("ИДНаименования,ИмяПоля", Форма.ТекущееИДНаименования, Область.Имя));
	Если Строки.Количество() = 0 Тогда 
		Если ЕстьМногострочность И СтрНайти(Область.Имя, Форма.РазделительНомераСтроки) > 0 Тогда
			Строки = Форма.СпискиВыбора.НайтиСтроки(Новый Структура("ИДНаименования,ИмяПоля", Форма.ТекущееИДНаименования, Лев(Область.Имя, СтрНайти(Область.Имя, Форма.РазделительНомераСтроки) - 1)));
			Если Строки.Количество() = 0 Тогда 
				Возврат;
			КонецЕсли;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Форма.ЗагружаемыеКоды.Очистить();
	Для Каждого Стр Из Строки Цикл 
		НовСтр = Форма.ЗагружаемыеКоды.Добавить();
		НовСтр.Код = Стр.Код;
		НовСтр.Название = Стр.Наименование;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          "Выбор кода");
	ПараметрыФормы.Вставить("ТаблицаЗначений",    Форма.ЗагружаемыеКоды);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", Область.Значение));
	
	ДополнительныеПараметры = Новый Структура("Область, Форма, ЕстьМногостраничность", Область, Форма, ЕстьМногостраничность);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаСпискаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ОбработкаСпискаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Область = ДополнительныеПараметры.Область;
	Форма = ДополнительныеПараметры.Форма;
	ЕстьМногостраничность = ДополнительныеПараметры.ЕстьМногостраничность;
	Область.Значение = РезультатВыбора.Код;
	ПриИзмененииСодержимогоОбласти(Форма, Область, ЕстьМногостраничность);
КонецПроцедуры

Процедура ОбработкаАдреса(Форма, Область, РоссийскийАдрес, ЗначенияПолей, ПредставлениеАдреса, СтандартнаяОбработка) Экспорт
	РоссийскийАдрес = Новый Соответствие;
	
	РоссийскийАдрес.Вставить("Индекс", Истина);
	РоссийскийАдрес.Вставить("КодРегиона", Истина);
	РоссийскийАдрес.Вставить("Район", Истина);
	РоссийскийАдрес.Вставить("РайонСокращение", Истина);
	РоссийскийАдрес.Вставить("Город", Истина);
	РоссийскийАдрес.Вставить("ГородСокращение", Истина);
	РоссийскийАдрес.Вставить("НаселенныйПункт", Истина);
	РоссийскийАдрес.Вставить("НаселенныйПунктСокращение", Истина);
	РоссийскийАдрес.Вставить("Улица", Истина);
	РоссийскийАдрес.Вставить("УлицаСокращение", Истина);
	РоссийскийАдрес.Вставить("Дом", Истина);
	РоссийскийАдрес.Вставить("ТипДома", Истина);
	РоссийскийАдрес.Вставить("Корпус", Истина);
	РоссийскийАдрес.Вставить("ТипКорпуса", Истина);
	РоссийскийАдрес.Вставить("Квартира", Истина);
	РоссийскийАдрес.Вставить("ТипКвартиры", Истина);
	
	Регионы = Форма.Регионы;
	Префикс = "";
	ОблИмя = Область.Имя;
	Если СтрНачинаетсяС(ОблИмя, "АДДР") Тогда 
		Префикс = Лев(ОблИмя, 6);
		ОблИмя = Сред(ОблИмя, 7);
	КонецЕсли;
	
	Если РоссийскийАдрес.Получить(ОблИмя) = Истина Тогда 
		СтандартнаяОбработка = Ложь;
		Если Регионы.Количество() = 0 Тогда
			УведомлениеОСпецрежимахНалогообложенияВызовСервера.ЗаполнитьРегионы(Регионы);
		КонецЕсли;
		
		Для Каждого КЗ Из РоссийскийАдрес Цикл 
			РоссийскийАдрес[КЗ.Ключ] = Форма.ПредставлениеУведомления.Области[Префикс + КЗ.Ключ].Значение;
		КонецЦикла;
		
		Регион = Регионы.НайтиСтроки(Новый Структура("Код", СокрЛП(РоссийскийАдрес["КодРегиона"])));
		Если Регион.Количество() > 0 Тогда
			РоссийскийАдрес["Регион"] = Регион[0].Наим;
		КонецЕсли;
		
		ЗначенияПолей = Новый СписокЗначений;
		
		ЗначенияПолей.Добавить(РоссийскийАдрес["Индекс"],						"Индекс");
		ЗначенияПолей.Добавить(РоссийскийАдрес["КодРегиона"],					"КодРегиона");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Район"],						"Район");
		ЗначенияПолей.Добавить(РоссийскийАдрес["РайонСокращение"],				"РайонСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Город"],						"Город");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ГородСокращение"],				"ГородСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["НаселенныйПункт"],				"НаселенныйПункт");
		ЗначенияПолей.Добавить(РоссийскийАдрес["НаселенныйПунктСокращение"],	"НаселенныйПунктСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Улица"],						"Улица");
		ЗначенияПолей.Добавить(РоссийскийАдрес["УлицаСокращение"],				"УлицаСокращение");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Дом"],							"Дом");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ТипДома"],						"ТипДома");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Корпус"],						"Корпус");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ТипКорпуса"],					"ТипКорпуса");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Квартира"],						"Квартира");
		ЗначенияПолей.Добавить(РоссийскийАдрес["ТипКвартиры"],					"ТипКвартиры");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Регион"],						"Регион");
		
		ПредставлениеАдреса = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых("643," + РоссийскийАдрес["Индекс"] + ","
		+ РоссийскийАдрес["Регион"] + ","
		+ РоссийскийАдрес["КодРегиона"] + ","
		+ РоссийскийАдрес["Район"] + ","
		+ РоссийскийАдрес["Город"] + ","
		+ РоссийскийАдрес["НаселенныйПункт"] + ","
		+ РоссийскийАдрес["Улица"] + ","
		+ РоссийскийАдрес["Дом"] + ","
		+ РоссийскийАдрес["Корпус"] + ","
		+ РоссийскийАдрес["Квартира"]);
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьАдресВТабличномДокументе(Форма, Результат, Параметры, ЕстьМногостраничность = Ложь) Экспорт 
	Префикс = ?(Параметры.Свойство("Префикс"), Параметры.Префикс, "");
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		РоссийскийАдрес = Параметры.РоссийскийАдрес;
		
		РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.КонтактнаяИнформация, РоссийскийАдрес);
		
		Для Каждого КЗ Из РоссийскийАдрес Цикл 
			Если Прав(КЗ.Ключ, СтрДлина("Сокращение")) = "Сокращение" Тогда 
				БезСокр = СтрЗаменить(КЗ.Ключ, "Сокращение", "");
				
				Если Прав(РоссийскийАдрес[БезСокр], СтрДлина(КЗ.Значение)) = КЗ.Значение Тогда
					РоссийскийАдрес[БезСокр] = СокрЛП(Лев(РоссийскийАдрес[БезСокр], СтрДлина(РоссийскийАдрес[БезСокр]) - СтрДлина(КЗ.Значение)));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Элт = Неопределено;
		Для Каждого КЗ Из РоссийскийАдрес Цикл 
			Обл = Форма.ПредставлениеУведомления.Области.Найти(Префикс + КЗ.Ключ);
			Если Обл <> Неопределено Тогда 
				Обл.Значение = РоссийскийАдрес[КЗ.Ключ];
				Если Форма.ДанныеУведомления.Свойство(Форма.ТекущееИДНаименования) Тогда 
					Форма.ДанныеУведомления[Форма.ТекущееИДНаименования].Вставить(Префикс + КЗ.Ключ, РоссийскийАдрес[КЗ.Ключ]);
				ИначеЕсли ЕстьМногостраничность И Форма.ДанныеМногостраничныхРазделов.Свойство(Форма.ТекущееИДНаименования) Тогда
					Если Элт = Неопределено Тогда 
						Для Каждого Элт Из Форма.ДанныеМногостраничныхРазделов[Форма.ТекущееИДНаименования] Цикл
							Если Элт.Значение.УИД = Форма.УИДТекущаяСтраница Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					Элт.Значение.Вставить(Префикс + КЗ.Ключ, РоссийскийАдрес[КЗ.Ключ]);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Форма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ПредставлениеУведомленияВыборКодЗнач(Форма, Область, СтандартнаяОбработка, ЕстьМногостраничность = Ложь) Экспорт 
	Строки = Форма.СпискиВыбора.НайтиСтроки(Новый Структура("ИДНаименования", Форма.ТекущееИДНаименования));
	Если Строки.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Форма.ЗагружаемыеКоды.Очистить();
	ОблКодИмя = "";
	ОблЗначИмя = "";
	Для Каждого Стр Из Строки Цикл
		Если СтрНайти(Стр.ИмяПоля, "/") Тогда 
			ПоляКодЗнач = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр.ИмяПоля, "/");
			Если ПоляКодЗнач[0] = Область.Имя Или ПоляКодЗнач[1] = Область.Имя Тогда 
				НовСтр = Форма.ЗагружаемыеКоды.Добавить();
				НовСтр.Код = Стр.Код;
				НовСтр.Название = Стр.Наименование;
				ОблКодИмя = ПоляКодЗнач[0];
				ОблЗначИмя = ПоляКодЗнач[1];
				СтандартнаяОбработка = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СтандартнаяОбработка Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          "Выберете соответствующий код");
	ПараметрыФормы.Вставить("ТаблицаЗначений",    Форма.ЗагружаемыеКоды);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", Область.Значение));
	
	ДополнительныеПараметры = Новый Структура("ОблКодИмя, ОблЗначИмя, Форма, ЕстьМногостраничность", ОблКодИмя, ОблЗначИмя, Форма, ЕстьМногостраничность);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаСпискаКодЗначЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ОбработкаСпискаКодЗначЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОблКодИмя = ДополнительныеПараметры.ОблКодИмя;
	ОблЗначИмя = ДополнительныеПараметры.ОблЗначИмя;
	Форма = ДополнительныеПараметры.Форма;
	ЕстьМногостраничность = ДополнительныеПараметры.ЕстьМногостраничность;
	ОблКод = Форма.ПредставлениеУведомления.Области.Найти(ОблКодИмя);
	ОблЗнач = Форма.ПредставлениеУведомления.Области.Найти(ОблЗначИмя);
	Если ЗначениеЗаполнено(РезультатВыбора.Код) Тогда 
		ОблКод.Значение = РезультатВыбора.Код;
		ОблЗнач.Значение = РезультатВыбора.Название;
	Иначе
		ОблКод.Значение = Неопределено;
		ОблЗнач.Значение = Неопределено;
	КонецЕсли;
	ПриИзмененииСодержимогоОбласти(Форма, ОблКод, ЕстьМногостраничность);
	ПриИзмененииСодержимогоОбласти(Форма, ОблЗнач, ЕстьМногостраничность);
КонецПроцедуры

Процедура ОбработкаОповещенияНавигацииПоОшибкам(Форма, Параметр, Источник) Экспорт 
	Если Форма.ДанныеУведомления.Свойство(Параметр.ИмяСтраницы) Тогда 
		НовИд = НайтиИдПростойСтраницы(Форма.ДеревоСтраниц, Параметр.ИмяСтраницы);
		Если НовИд <> Неопределено Тогда 
			Форма.Элементы.ДеревоСтраниц.ТекущаяСтрока = НовИд;
			Форма.ТекущийЭлемент = Форма.Элементы.ПредставлениеУведомления;
			Форма.Элементы.ПредставлениеУведомления.ТекущаяОбласть = Форма.ПредставлениеУведомления.Области.Найти(Параметр.ИмяОбласти);
		КонецЕсли;
		Параметр.Владелец.Активизировать();
	ИначеЕсли Форма.ДанныеМногостраничныхРазделов.Свойство(Параметр.ИмяСтраницы) Тогда 
		НовИд = НайтиЭлементПоУИДВДереве(Форма.ДеревоСтраниц.ПолучитьЭлементы(), Параметр.УИДСтраницы);
		Если НовИд <> Неопределено Тогда 
			Форма.Элементы.ДеревоСтраниц.ТекущаяСтрока = НовИд;
			Форма.ТекущийЭлемент = Форма.Элементы.ПредставлениеУведомления;
			Форма.Элементы.ПредставлениеУведомления.ТекущаяОбласть = Форма.ПредставлениеУведомления.Области.Найти(Параметр.ИмяОбласти);
		КонецЕсли;
		Параметр.Владелец.Активизировать();
	КонецЕсли;
	Если Источник.Открыта() Тогда 
		Источник.Закрыть();
	КонецЕсли;
КонецПроцедуры

Функция НайтиИдПростойСтраницы(ДеревоСтраниц, ИмяСтраницы)
	Для Каждого Стр Из ДеревоСтраниц.ПолучитьЭлементы() Цикл 
		Если Стр.ИДНаименования = ИмяСтраницы Тогда 
			Возврат Стр.ПолучитьИдентификатор();
		КонецЕсли;
		
		ПодчИд = НайтиИдПростойСтраницы(Стр, ИмяСтраницы);
		Если ПодчИд <> Неопределено Тогда 
			Возврат ПодчИд;
		КонецЕсли;
	КонецЦикла;
КонецФункции

Функция НайтиЭлементПоУИДВДереве(Элементы, УИД)
	Для Каждого Элт Из Элементы Цикл 
		Рез = НайтиЭлементПоУИДВДереве(Элт.ПолучитьЭлементы(), УИД);
		Если Рез <> Неопределено Тогда 
			Возврат Рез;
		КонецЕсли;
		Если Элт.УИД = УИД Тогда 
			Возврат Элт.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЦикла;
КонецФункции

Процедура ОткрытьФормуВыбораФИО(Форма, СтандартнаяОбработка, ИмяПоля, ИмяСтраницы, ОповещениеОбОкончании = Неопределено) Экспорт 
	Если ТипЗнч(ОповещениеОбОкончании) = Тип("ОписаниеОповещения") Тогда 
		ВыборФИО = ОповещениеОбОкончании;
	Иначе
		ВыборФИО = Новый ОписаниеОповещения("ВыборФИОЗавершение", ЭтотОбъект);
	КонецЕсли;
	
	ПараметрыВыборФИО = Новый Структура;
	ПараметрыВыборФИО.Вставить("Фамилия", Форма.Объект.ПодписантФамилия);
	ПараметрыВыборФИО.Вставить("Имя", Форма.Объект.ПодписантИмя);
	ПараметрыВыборФИО.Вставить("Отчество", Форма.Объект.ПодписантОтчество);
	ПараметрыВыборФИО.Вставить("ИмяПоля", ИмяПоля);
	ПараметрыВыборФИО.Вставить("ИмяСтраницы", ИмяСтраницы);
	
	ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораФИО", ПараметрыВыборФИО, Форма, , , , ВыборФИО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ВыборФИОЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда 
		Форма = Неопределено;
		ИмяПоля = Неопределено;
		ИмяСтраницы = Неопределено;
		Ответ.Свойство("Форма", Форма);
		Ответ.Свойство("ИмяПоля", ИмяПоля);
		Ответ.Свойство("ИмяСтраницы", ИмяСтраницы);
		Ответ.Свойство("Фамилия", Форма.Объект.ПодписантФамилия);
		Ответ.Свойство("Имя", Форма.Объект.ПодписантИмя);
		Ответ.Свойство("Отчество", Форма.Объект.ПодписантОтчество);
		Представление = СокрЛП(Форма.Объект.ПодписантФамилия + " " + Форма.Объект.ПодписантИмя + " " + Форма.Объект.ПодписантОтчество);
		Если ЗначениеЗаполнено(ИмяПоля) Тогда 
			Форма[ИмяПоля].Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = Представление;
		КонецЕсли;
		Если ЗначениеЗаполнено(ИмяСтраницы) Тогда
			Форма[ИмяСтраницы][0].ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ = Представление;
		КонецЕсли;
		Форма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура СвернутьРек(Форма, ИдДляСвор, ТекСтр) Экспорт 
	Если ИдДляСвор.Найти(ТекСтр.ПолучитьИдентификатор()) = Неопределено Тогда 
		Форма.Элементы.ДеревоСтраниц.Развернуть(ТекСтр.ПолучитьИдентификатор(), Ложь);
		Для Каждого Стр Из ТекСтр.ПолучитьЭлементы() Цикл 
			СвернутьРек(Форма, ИдДляСвор, Стр);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии(Форма, Отказ) Экспорт 
	ИдДляСвор = ПолучитьИзВременногоХранилища(Форма.СворачиваемыеЭлементы);
	Для Каждого Стр Из Форма.ДеревоСтраниц.ПолучитьЭлементы() Цикл
		СвернутьРек(Форма, ИдДляСвор, Стр);
	КонецЦикла;
	ПоместитьВоВременноеХранилище(Неопределено, Форма.СворачиваемыеЭлементы);
	Если Форма.Элементы.Найти("ФормаРучнойВвод") <> Неопределено Тогда 
		Форма.Элементы.ФормаРучнойВвод.Пометка = Форма.РучнойВвод;
	КонецЕсли;
	Если Форма.Элементы.Найти("ФормаРазрешитьВыгружатьСОшибками") <> Неопределено Тогда 
		Форма.Элементы.ФормаРазрешитьВыгружатьСОшибками.Пометка = Форма.РазрешитьВыгружатьСОшибками;
	КонецЕсли;
КонецПроцедуры

Процедура УдалитьСтраницу(Форма) Экспорт
	ПредставлениеУведомления = Форма.Элементы.Найти("ПредставлениеУведомления");
	Если ПредставлениеУведомления <> Неопределено И Не ЗначениеЗаполнено(ПредставлениеУведомления.ТекущаяОбласть.Текст) Тогда 
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("УдалитьСтраницуЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Операция удаления страницы не может быть отменена. Удалить страницу?'"), РежимДиалогаВопрос.ДаНет, 0);
КонецПроцедуры

Процедура УдалитьСтраницуЗавершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Параметры.Форма.УдалитьСтраницу();
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьУведомление(Форма) Экспорт
	Оповещение = Новый ОписаниеОповещения("ОчиститьУведомлениеЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Операция очистки отчета не может быть отменена. Продолжить?'"), РежимДиалогаВопрос.ДаНет, 0);
КонецПроцедуры

Процедура ОчиститьУведомлениеЗавершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Параметры.Форма.ОчисткаОтчета();
		Параметры.Форма.Модифицированность = Истина;
		Если Параметры.Форма.Элементы.Найти("ДеревоСтраниц") <> Неопределено Тогда 
			ДеревоСтраницРекв = "ДеревоСтраниц";
		ИначеЕсли Параметры.Форма.Элементы.Найти("Разделы") <> Неопределено Тогда  
			ДеревоСтраницРекв = "Разделы";
		Иначе
			Возврат;
		КонецЕсли;
		Параметры.Форма.Элементы[ДеревоСтраницРекв].ТекущаяСтрока = Параметры.Форма[ДеревоСтраницРекв].ПолучитьЭлементы()[0].ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Интеграция
Процедура ОткрытьИЗаполнитьФормуУведомленияККТ(ДанныеЗаполнения, ИмяФормы = "Форма2018_1") Экспорт
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Организация")
		И ДанныеЗаполнения.Свойство("РегистрацияВИФНС") Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ДанныеПомощника", ДанныеЗаполнения);
		ПараметрыОткрытия.Вставить("Организация", ДанныеЗаполнения.Организация);
		ПараметрыОткрытия.Вставить("РегистрацияВИФНС", ДанныеЗаполнения.РегистрацияВИФНС);
		
		Если ДанныеЗаполнения.Свойство("Ссылка") И ЗначениеЗаполнено(ДанныеЗаполнения.Ссылка) Тогда
			ПараметрыОткрытия.Вставить("Ключ", ДанныеЗаполнения.Ссылка);
		КонецЕсли;
		
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеУменьшениеНалогаККТ.Форма." + ИмяФормы, ПараметрыОткрытия);
	КонецЕсли;
КонецПроцедуры
#КонецОбласти