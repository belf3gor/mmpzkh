
#Область ПрограммныйИнтерфейс

// Создает новый пароль, соответствующий заданным правилам проверки сложности.
// Для облегчения запоминания, пароль формируется из слогов (согласная-гласная).
//
// Параметры:
//  НаименьшаяДлина - Число - наименьшая длина пароля.
//
//  Сложный - Булево - учитывать требования сложности пароля.
//
//  УчестьНастройки - Строка - "НеУчитыватьНастройки" - не учитывать настройки администратора,
//                                            "ДляПользователей" - учесть настройки для пользователей,
//                                            "ДляВнешнихПользователей" - учесть настройки для внешних пользователей.
//                                            Если настройки администратора учитываются, тогда указанные параметры
//                                            длины и сложности пароля будут увеличены до значений, указанных в настройках.
//
// Возвращаемое значение:
//  Строка - новый пароль.
//
Функция СоздатьПароль(НаименьшаяДлина = 7, Сложный = Ложь, УчестьНастройки = "ДляПользователей") Экспорт
	
	Если УчестьНастройки = "ДляПользователей" Тогда
		НастройкиВхода = ПользователиСлужебныйПовтИсп.Настройки().Пользователи;
	ИначеЕсли УчестьНастройки = "ДляВнешнихПользователей" Тогда
		НастройкиВхода = ПользователиСлужебныйПовтИсп.Настройки().ВнешниеПользователи;
	Иначе
		НастройкиВхода = Неопределено;
	КонецЕсли;
	
	Если НастройкиВхода <> Неопределено Тогда
		ДлинаПароляИзНастроек = НастройкиВхода.МинимальнаяДлинаПароля
	Иначе
		ДлинаПароляИзНастроек = 0;
	КонецЕсли;
	
	МинимальнаяДлинаПароля = Макс(НаименьшаяДлина,
		ДлинаПароляИзНастроек,
		ПолучитьМинимальнуюДлинуПаролейПользователей());
	
	ПараметрыПароля = ПользователиСлужебный.ПараметрыПароля(МинимальнаяДлинаПароля, Сложный);
	
	НовыйПароль = ПользователиСлужебный.СоздатьПароль(ПараметрыПароля);
	
	Возврат НовыйПароль;
	
КонецФункции

#КонецОбласти
