#Область СлужебныеПроцедурыИФункции

// Из переданной строки создает новую, содержащую только цифры.
// Иные символы отбрасываются.
//
// Параметры:
//  Значение - Строка - исходная строка.
//
// Возвращаемое значение:
//   Строка - строка, содержащая только цифры.
//
Функция СкопироватьЦифры(Знач Значение) Экспорт
	Возврат СкопироватьСимволы(Значение, "0123456789") // не локализуется
КонецФункции

// Из переданной строки создает новую, содержащую только указанные символы.
// Иные символы отбрасываются.
//
// Параметры:
//  Значение - Строка - исходная строка.
//  Символы  - Строка - допустимые символы.
//
// Возвращаемое значение:
//   Строка - строка, содержащая только указанные символы.
//
Функция СкопироватьСимволы(Знач Значение, Знач Символы) Экспорт
	// Справа налево:
	// 1. Разбиваем исходную строку, используя допустимые символы как разделители.
	//    Получим массив со строками, состоящими из недопустимых символов.
	// 2. Соединяем недопустимые символы в строку лишних букв.
	// 3. Разбиваем исходную строку, используя лишние символы как разделители.
	//    Получим массив со строками, состоящими из допустимых символов.
	// 4. Соединяем разрешенные символы в итоговую строку.
	Возврат СтрСоединить(СтрРазделить(Значение, СтрСоединить(СтрРазделить(Значение, Символы))))
КонецФункции

Функция МаскированныйНомер(Знач ПолныйНомер) Экспорт
	
	ЧастиНомера = Новый Массив;
	ЧастиНомера.Добавить(Лев(ПолныйНомер, 6));
	ЧастиНомера.Добавить(СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("*", СтрДлина(ПолныйНомер)-10));
	ЧастиНомера.Добавить(Прав(ПолныйНомер, 4));
	Возврат СтрСоединить(ЧастиНомера)
	
КонецФункции

Функция ИмяДержателяКартыПоУмолчанию(Знач ФИОВладельца) Экспорт

	ФИОВладельца = СокрЛП(ФИОВладельца);
	Пока СтрНайти(ФИОВладельца, "  ") > 0 Цикл
		ФИОВладельца = СтрЗаменить(ФИОВладельца, "  ", " ");
	КонецЦикла;
	
	ЧастиИмени = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФИОВладельца);

	ИмяЛатиницей     = СтроковыеФункцииКлиентСервер.СтрокаЛатиницей(ЧастиИмени.Имя);
	ФамилияЛатиницей = СтроковыеФункцииКлиентСервер.СтрокаЛатиницей(ЧастиИмени.Фамилия);
	
	Возврат ВРег(ИмяЛатиницей) + " " + ВРег(ФамилияЛатиницей) // не локализуется
	
КонецФункции

Функция ЭтоНомерНациональногоПлатежногоИнструмента(Знач ОсновнойНомерДержателяКарты) Экспорт
	БИН = Число(Лев(ОсновнойНомерДержателяКарты, 4));
	Возврат БИН >= 2200 И БИН <= 2204
КонецФункции

Функция ОшибкиОсновногоНомераДержателяКарты(ОсновнойНомерДержателяКарты, ЭтоНациональныйПлатежныйИнструмент = Ложь) Экспорт
	Ошибки = Новый Массив;
	
	Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ОсновнойНомерДержателяКарты) Тогда
		Ошибки.Добавить(НСтр("ru = 'Допустимы только цифры'"));
		Возврат Ошибки;
	КонецЕсли;	
	
	МинимальнаяДлина = ?(ЭтоНациональныйПлатежныйИнструмент, 16, 13);
	Если СтрДлина(ОсновнойНомерДержателяКарты) < МинимальнаяДлина Или СтрДлина(ОсновнойНомерДержателяКарты) > 19 Тогда
		Ошибки.Добавить(СтрШаблон(НСтр("ru = 'Должен быть от %1 до 19 цифр'"), МинимальнаяДлина));
		Возврат Ошибки;
	КонецЕсли;	
	
	Если Не КонтрольнаяЦифраВерна(ОсновнойНомерДержателяКарты) Тогда
		Ошибки.Добавить(НСтр("ru = 'Не совпадает контрольная сумма'"));
	КонецЕсли; 
	
	Возврат Ошибки
КонецФункции	

// Проверка номера карты по алгоритму Луна (Luhn):
// 1. Цифры проверяемой последовательности нумеруются справа налево. 
// 2. Цифры, оказавшиеся на нечетных местах, остаются без изменений. 
// 3. Цифры, стоящие на четных местах, умножаются на 2. 
// 4. Если в результате такого умножения возникает двузначное число (больше 9), 
//    оно заменяется суммой цифр получившегося произведения - однозначным числом, то есть цифрой. 
// 5. Все полученные в результате преобразования цифры складываются. Если сумма кратна 10, то исходные данные верны. 
Функция КонтрольнаяЦифраВерна(Знач ОсновнойНомерДержателяКарты) Экспорт
	
	ДлинаНомера = СтрДлина(ОсновнойНомерДержателяКарты);
	
	Сумма = 0;
	Для Индекс = 1 По ДлинаНомера Цикл
		Цифра = Число(Сред(ОсновнойНомерДержателяКарты, ДлинаНомера - Индекс + 1, 1));
		Если Индекс % 2 = 0 Тогда
			Цифра = Цифра * 2;
			Если Цифра > 9 Тогда
				Цифра = (Цифра % 10) + 1
			КонецЕсли
		КонецЕсли;	
		Сумма = Сумма + Цифра
	КонецЦикла;
	
	Возврат Сумма % 10 = 0
	
КонецФункции	
	
#КонецОбласти

