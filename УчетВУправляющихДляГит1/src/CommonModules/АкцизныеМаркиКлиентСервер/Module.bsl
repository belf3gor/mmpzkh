
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьИндексАкцизнойМарки(ТекущаяСтрока, ИмяКолонкиКоличество = "Количество") Экспорт
	
	Если ТекущаяСтрока.МаркируемаяПродукция = Истина Тогда
		
		Если  ТекущаяСтрока[ИмяКолонкиКоличество] = ТекущаяСтрока.КоличествоАкцизныхМарок
			И ТекущаяСтрока[ИмяКолонкиКоличество] <> 0 Тогда
			ТекущаяСтрока.ИндексАкцизнойМарки = 1;
		Иначе
			ТекущаяСтрока.ИндексАкцизнойМарки = 2;
		КонецЕсли;
		
	Иначе
		
		ТекущаяСтрока.ИндексАкцизнойМарки = 0;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет поле индекса акцизной марки в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - структура со свойствами строки документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//
Процедура ЗаполнитьИндексАкцизнойМаркиДляСтрокиТабличнойЧасти(ТекущаяСтрока, СтруктураДействий) Экспорт
	
	ПараметрыДействия = Неопределено;
	Если СтруктураДействий.Свойство("ЗаполнитьИндексАкцизнойМарки", ПараметрыДействия) Тогда
		
		Если ПараметрыДействия <> Неопределено И ПараметрыДействия.Свойство("ИмяКолонкиКоличество") Тогда
			ИмяКолонкиКоличество = ПараметрыДействия.ИмяКолонкиКоличество;
		Иначе
			ИмяКолонкиКоличество = "Количество";
		КонецЕсли;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(ТекущаяСтрока, ИмяКолонкиКоличество);
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет соответствие переданного штрихкода формату Data Matrix.
//
// Параметры:
//  Штрихкод - Строка - проверяемый штрихкод.
//
// Возвращаемое значение:
//  Булево - Истина, если штрихкод в формате Data Matrix, Ложь - в противном случае.
//
Функция ЭтоШтрихкодDataMatrix(Штрихкод) Экспорт
	
	Если СтрДлина(Штрихкод) < 15 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Сред(Штрихкод, 4, 1) <> "-" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПроверяемыйШтрихкод = СтрЗаменить(Штрихкод, "-", "");
	
	Для Сч = 1 По Мин(15, СтрДлина(ПроверяемыйШтрихкод)) Цикл
		Если СтрНайти("0123456789", Сред(ПроверяемыйШтрихкод, Сч, 1)) = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Извлекает из переданного штрихкода тип, серию и номер марки.
//
// Параметры:
//  Штрихкод - Строка - штрихкод в формате Data Matrix, виды:
//     ВВВ-СССННННННННХХХХХХХХХХХХ - акцизная марка (АМ),
//     ВВВ-СССНННННННННХХХХХХХХХХХХ - федеральная спец. марка (ФСМ),
//  ТекстОшибки - Строка - если в процессе разбора произошла ошибка, в переменную вернется ее текст.
//
// Возвращаемое значение:
//  Структура - данные марки:
//   * ТипМарки - Строка(3),
//   * СерияМарки - Строка(3),
//   * НомерМарки - Строка(8 или 9).
//
Функция РазложитьШтрихкодDataMatrix(Штрихкод, ТекстОшибки = "") Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ТипМарки"  , "");
	Результат.Вставить("СерияМарки", "");
	Результат.Вставить("НомерМарки", "");
	
	Если НЕ ЭтоШтрихкодDataMatrix(Штрихкод) Тогда
		ТекстОшибки = НСтр("ru='Штрихкод %1 не соответствует формату Data Matrix.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Штрихкод);
		Возврат Результат;
	КонецЕсли;
	
	ТипМарки = АкцизныеМаркиВызовСервера.ТипАкцизнойМарки(Лев(Штрихкод, 3));
	
	Если НЕ ЗначениеЗаполнено(ТипМарки.ВидМарки) Тогда
		ТекстОшибки = НСтр("ru='Ошибка при обработке штрихкода %1: Не удалось определить вид акцизной марки (ФСМ или АМ).'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Штрихкод);
		Возврат Результат;
	КонецЕсли;
	
	ДлинаНомера = ?(ТипМарки.ВидМарки = "АМ", 8, 9);
	
	Результат.ТипМарки   = Лев(Штрихкод, 3);
	Результат.СерияМарки = Сред(Штрихкод, 5, 3);
	Результат.НомерМарки = Сред(Штрихкод, 8, ДлинаНомера);
	
	Возврат Результат;
	
КонецФункции

Функция СтруктураДанныхШтрихкода(Штрихкод) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("АлкогольнаяПродукция",    Неопределено);
	Результат.Вставить("ВложенныеШтрихкоды",      Новый Соответствие);
	Результат.Вставить("КодАлкогольнойПродукции", "");
	Результат.Вставить("Количество",              0);
	Результат.Вставить("МаркированныеТовары",     Новый Массив);
	Результат.Вставить("Номенклатура",            Неопределено);
	Результат.Вставить("НомерМарки",              "");
	Результат.Вставить("Серия",                   Неопределено);
	Результат.Вставить("СерияМарки",              "");
	Результат.Вставить("Справка2",                Неопределено);
	Результат.Вставить("Справки2",                Новый Массив);
	Результат.Вставить("Статус",                  Неопределено);
	Результат.Вставить("ТекстОшибки",             "");
	Результат.Вставить("ТипМарки",                "");
	Результат.Вставить("ТипУпаковки",             Неопределено);
	Результат.Вставить("ТипШтрихкода",            Неопределено);
	Результат.Вставить("Упаковка",                Неопределено);
	Результат.Вставить("Характеристика",          Неопределено);
	Результат.Вставить("Штрихкод",                Штрихкод);
	Результат.Вставить("ШтрихкодУпаковки",        Неопределено);
	Результат.Вставить("НазначениеШтрихкода",     "");
	Результат.Вставить("МаркируемаяПродукция",    Неопределено);
	Результат.Вставить("ДополнительныеПараметры", Неопределено);
	Возврат Результат;
	
КонецФункции

Процедура ОбработатьСохраненныйВыборДанныхПоАлкогольнойПродукции(Форма, ДанныеШтрихкода) Экспорт

	Если ДанныеШтрихкода = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ДанныеШтрихкода.ДополнительныеПараметры;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ЗапомнитьВыбор") 
		И ДополнительныеПараметры.ЗапомнитьВыбор Тогда
		
		Если ДополнительныеПараметры.Свойство("ДанныеВыбора")
			И ТипЗнч(ДополнительныеПараметры.ДанныеВыбора) = Тип("Структура") 
			И ДополнительныеПараметры.ДанныеВыбора.Количество() > 0 Тогда
		
			Форма.ДанныеВыбораПоМаркируемойПродукции = ДополнительныеПараметры.ДанныеВыбора;
			Форма.ДанныеВыбораПоМаркируемойПродукции.Вставить("АлкогольнаяПродукция", ДанныеШтрихКода.АлкогольнаяПродукция);
			Форма.ДанныеВыбораПоМаркируемойПродукции.Вставить("ТипШтрихКода", ДанныеШтрихКода.ТипШтрихКода);
			Форма.СохраненВыборПоМаркируемойПродукции = Истина;
			
			ШтрихкодированиеИСКлиентСервер.ОтобразитьСохраненныйВыборПоМаркируемойПродукции(Форма);
			
		КонецЕсли;
		
	ИначеЕсли Форма.ДанныеВыбораПоМаркируемойПродукции <> Неопределено Тогда
		
		ТребуетсяСбросВыбора = Ложь;
		
		Если Форма.ДанныеВыбораПоМаркируемойПродукции.ТипШтрихкода <> ДанныеШтрихкода.ТипШтрихкода Тогда
			
			ТребуетсяСбросВыбора = Истина;
			
		ИначеЕсли ДанныеШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.PDF417")
		          И ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция)
		          И ДанныеШтрихкода.АлкогольнаяПродукция <> Форма.ДанныеВыбораПоМаркируемойПродукции.АлкогольнаяПродукция Тогда
			
			ТребуетсяСбросВыбора = Истина;
			
		КонецЕсли;
		
		Если ТребуетсяСбросВыбора Тогда
		
			Форма.ДанныеВыбораПоМаркируемойПродукции  = Неопределено;
			Форма.СохраненВыборПоМаркируемойПродукции = Ложь;
			ШтрихкодированиеИСКлиентСервер.ОтобразитьСохраненныйВыборПоМаркируемойПродукции(Форма);
		
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти