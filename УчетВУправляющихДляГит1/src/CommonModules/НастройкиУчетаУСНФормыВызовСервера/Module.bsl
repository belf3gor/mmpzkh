
////////////////////////////////////////////////////////////////////////////////
// Универсальные методы для формы записи регистра и формы настройки налогов
//
// Серверные вызовы методов формы записи регистра сведений НастройкиУчетаУСН
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция НастройкиСистемыНалогообложения(Организация, Период) Экспорт
	
	Настройки = Новый Структура;
	
	Настройки.Вставить("ЭтоЮрЛицо", ЭтоЮрЛицо(Организация));
	
	Настройки.Вставить("ПрименяетсяУСНДоходы",             УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, Период));
	Настройки.Вставить("ПрименяетсяУСНДоходыМинусРасходы", УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, Период));
	Настройки.Вставить("ПлательщикЕНВД",                   УчетнаяПолитика.ПлательщикЕНВДЗаПериод(Организация, НачалоКвартала(Период), КонецКвартала(Период)));
	Настройки.Вставить("СписокПатентов",                   СписокПатентов(Организация, Период));
	
	Возврат Настройки;
	
КонецФункции

Функция СписокВыбораОтраженияАвансов(Запись, СписокВыбора, СписокПатентов) Экспорт
	
	СписокВыбора.Очистить();
	
	Если УчетнаяПолитика.ПрименяетсяУСН(Запись.Организация, Запись.Период) Тогда
		
		СписокВыбора.Добавить(
			ПредопределенноеЗначение("Перечисление.ПорядокОтраженияАвансов.ДоходУСН"),
			НСтр("ru = 'Доходы УСН'"));
		
		Если ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов") Тогда
			
			СписокВыбора.Добавить(
				ПредопределенноеЗначение("Перечисление.ПорядокОтраженияАвансов.ДоходКомитента"),
				НСтр("ru = 'Доходы комитента'"));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если УчетнаяПолитика.ПлательщикНДФЛ(Запись.Организация, Запись.Период) Тогда
		
		СписокВыбора.Добавить(
			ПредопределенноеЗначение("Перечисление.ПорядокОтраженияАвансов.ДоходИП"),
			НСтр("ru = 'Доходы ИП'"));
		
	КонецЕсли;
	
	Если УчетнаяПолитика.ПлательщикЕНВД(Запись.Организация, Запись.Период) Тогда
		
		СписокВыбора.Добавить(
			ПредопределенноеЗначение("Перечисление.ПорядокОтраженияАвансов.ДоходЕНВД"),
			НСтр("ru = 'Доходы ЕНВД'"));
		
	КонецЕсли;
	
	Если УчетнаяПолитика.ПрименяетсяУСНПатент(Запись.Организация, Запись.Период) Тогда
		
		Для Каждого Патент Из СписокПатентов Цикл
			СписокВыбора.Добавить(Патент.Значение, Патент.Представление);
		КонецЦикла;
	
	КонецЕсли;
	
	Если Запись.ПорядокОтраженияАванса = ПредопределенноеЗначение("Перечисление.ПорядокОтраженияАвансов.ДоходПатент")
		И ЗначениеЗаполнено(Запись.Патент)
		И НЕ СписокВыбора.НайтиПоЗначению(Запись.Патент) = Неопределено Тогда
		
		Возврат Запись.Патент;
		
	ИначеЕсли ЗначениеЗаполнено(Запись.ПорядокОтраженияАванса)
		И НЕ СписокВыбора.НайтиПоЗначению(Запись.ПорядокОтраженияАванса) = Неопределено Тогда
		
		Возврат Запись.ПорядокОтраженияАванса;
		
	Иначе
		
		Возврат ПредопределенноеЗначение("Перечисление.ПорядокОтраженияАвансов.ДоходУСН");
		
	КонецЕсли;
	
КонецФункции

Функция ДанныеУчетнойПолитики(ИмяРегистра, Организация, Период) Экспорт
	
	Возврат НастройкиУчета.КлючЗаписиДействующейУчетнойПолитики(ИмяРегистра, Организация, Период);
	
КонецФункции

Функция ЭтоЮрЛицо(Организация)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ЭтоЮрЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо")
			= Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	Иначе
		ЭтоЮрЛицо = Истина;
	КонецЕсли;
	
	Возврат ЭтоЮрЛицо;
	
КонецФункции

Функция СписокПатентов(Организация, Период) Экспорт
	
	СписокПатентов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец",      Организация);
	Запрос.УстановитьПараметр("ДатаНачала",    Период);
	Запрос.УстановитьПараметр("ДатаОкончания", НастройкиУчета.НайтиДатуОкончанияДействия(Период, Организация, "НастройкиСистемыНалогообложения"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Патенты.Ссылка,
	|	Патенты.Наименование
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(Патенты.ДатаНачала, ДЕНЬ) <= НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ)
	|	И НАЧАЛОПЕРИОДА(Патенты.ДатаОкончания, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|	И Патенты.Владелец = &Владелец
	|	И НЕ Патенты.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ПредставлениеПорядкаОтраженияАвансов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Доходы по патенту ""%1""'"), Выборка.Наименование);
			
			СписокПатентов.Добавить(Выборка.Ссылка, ПредставлениеПорядкаОтраженияАвансов);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокПатентов;
	
КонецФункции

#КонецОбласти
