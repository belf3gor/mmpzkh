
Функция ВыполнитьКомандуПечати(ОписаниеКоманды) Экспорт
	
	Если ОписаниеКоманды.Свойство("ЗаголовокФормы") И ЗначениеЗаполнено(ОписаниеКоманды.ЗаголовокФормы) Тогда
		ПараметрыПечати = Новый Структура("ЗаголовокФормы", ОписаниеКоманды.ЗаголовокФормы);
	Иначе
		ПараметрыПечати = ПолучитьЗаголовокПечатнойФормы(ОписаниеКоманды.ОбъектыПечати);
	КонецЕсли;
	
	Если ОписаниеКоманды.Свойство("ДополнительныеПараметры") Тогда
		ПараметрыПечати.Вставить("ДополнительныеПараметры", ОписаниеКоманды.ДополнительныеПараметры);
	КонецЕсли; 
	
	НачатьЗамерВремени(ОписаниеКоманды.Форма, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма, ПараметрыПечати);
	
КонецФункции

Функция ВыполнитьКомандуПечатиРеквизитовОрганизаций(ОписаниеКоманды) Экспорт
	
	Если Тип(ОписаниеКоманды.ОбъектыПечати) = Тип("Массив") И ОписаниеКоманды.ОбъектыПечати.Количество() = 1 Тогда
		ЗаголовокФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Печать реквизитов %1'"), ОписаниеКоманды.ОбъектыПечати[0]);
	Иначе
		ЗаголовокФормы = НСтр("ru='Печать реквизитов организаций'");
	КонецЕсли;
	
	ПараметрыПечати = Новый Структура("ЗаголовокФормы", ЗаголовокФормы);
	
	Если ОписаниеКоманды.Свойство("ДополнительныеПараметры") Тогда
		ПараметрыПечати.Вставить("ДополнительныеПараметры", ОписаниеКоманды.ДополнительныеПараметры);
	КонецЕсли; 
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма, ПараметрыПечати);
	
КонецФункции

// Выполняет команду печати реестра документов.
// 
// Параметры:
//	ОписаниеКоманды - структура, содержащая ключ, соответствующие таблице значений
//						создаваемой функций БСП УправлениеПечатью.СоздатьКоллекциюКомандПечати(),
//						и ключ Форма - управляемая форма, из которой вызвана команда печати.
//
Функция ВыполнитьКомандуПечатиРеестраДокументов(ОписаниеКоманды) Экспорт
	
	ФормаСписка = ОписаниеКоманды.Форма;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Заголовок", ОписаниеКоманды.ЗаголовокФормы);
	Если ФормаСписка.ИмяФормы = "Обработка.ПеренумерацияДокументов.Форма.Форма" Тогда
		ПараметрыФормы.Вставить("Ключ", Новый Структура("ОсновнаяТаблица, ТекстЗапроса"));
		Если ФормаСписка.ВидДокументов.Типы()[0] = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
			ПараметрыФормы.Ключ.ОсновнаяТаблица = "Документ.РасходныйКассовыйОрдер";
		ИначеЕсли ФормаСписка.ВидДокументов.Типы()[0] = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
			ПараметрыФормы.Ключ.ОсновнаяТаблица = "Документ.ПриходныйКассовыйОрдер";
		ИначеЕсли ФормаСписка.ВидДокументов.Типы()[0] = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ПараметрыФормы.Ключ.ОсновнаяТаблица = "Документ.СчетФактураВыданный";
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		ПараметрыФормы.Ключ.ТекстЗапроса = "";
		ПараметрыФормы.Вставить("Период", Новый СтандартныйПериод(НачалоДня(ФормаСписка.НачалоПериода), КонецДня(ФормаСписка.КонецПериода)));
		ПараметрыФормы.Вставить("Организация", ФормаСписка.Организация);
	ИначеЕсли ОписаниеКоманды.ДополнительныеПараметры.Свойство("АдресХранилищаНастройкиДинСпискаДляРеестра") Тогда
		ПараметрыФормы = ПолучитьИзВременногоХранилища(ОписаниеКоманды.ДополнительныеПараметры.АдресХранилищаНастройкиДинСпискаДляРеестра);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	ОткрытьФорму("Отчет.РеестрДокументов.Форма.ФормаОтчета", ПараметрыФормы, ФормаСписка, Новый УникальныйИдентификатор);
	
КонецФункции

Функция ВыполнитьКомандуПечатиКарточкиОС(ОписаниеКоманды) Экспорт
	
	ПараметрыПечати = ПолучитьЗаголовокПечатнойФормы(ОписаниеКоманды.ОбъектыПечати);
	
	Если ТипЗнч(ОписаниеКоманды.Форма) = Тип("УправляемаяФорма")
		И (ОписаниеКоманды.Форма.ИмяФормы = "Справочник.ОсновныеСредства.Форма.ФормаЭлемента") Тогда
		
		Если ЗначениеЗаполнено(ОписаниеКоманды.Форма.ДатаСведений) Тогда
			ПараметрыПечати.Вставить("ДатаСведений", КонецДня(ОписаниеКоманды.Форма.ДатаСведений));
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма, ПараметрыПечати);
	
КонецФункции

Функция ВыполнитьКомандуПечатиРеестраНДФЛ(ОписаниеКоманды) Экспорт
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, "ПФ_MXL_РеестрПеречисленныхСумм", 
	                                               ОписаниеКоманды.Ссылка, ОписаниеКоманды.Форма, Неопределено);
	
КонецФункции

// Выполняет команду формирования текста договора на основании шаблона.
//
Функция ВыполнитьКомандуПечатиТекстаДоговора(ОписаниеКоманды) Экспорт

	Если ТипЗнч(ОписаниеКоманды.ОбъектыПечати) <> Тип("Массив")
		ИЛИ ОписаниеКоманды.ОбъектыПечати.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Работаем только с одним объектом (первым в массиве)
	ОбъектПечати = ОписаниеКоманды.ОбъектыПечати[0];

	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ОбъектПечати", ОбъектПечати);

	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаРедактированияТекстаДоговора", ПараметрыФормы, ОписаниеКоманды.Форма);

КонецФункции

// Выполняет команду печати приложения к договору из счета на оплату.
//
Функция ВыполнитьКомандуПечатиПриложенияКДоговору(ОписаниеКоманды) Экспорт

	Если ТипЗнч(ОписаниеКоманды.ОбъектыПечати) <> Тип("Массив")
		ИЛИ ОписаниеКоманды.ОбъектыПечати.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Работаем только с одним объектом (первым в массиве)
	ОбъектПечати = ОписаниеКоманды.ОбъектыПечати[0];

	НомерИДатаДоговора = ПечатьДоговоровВызовСервера.НомерИДатаДоговораДляОбъекта(ОбъектПечати);
	
	ЗаголовокФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Приложение к договору № %1 от %2'"),
		НомерИДатаДоговора.Номер, Формат(НомерИДатаДоговора.Дата, "ДЛФ=D"));
	
	ПараметрыПечати = Новый Структура("ЗаголовокФормы", ЗаголовокФормы);

	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма, ПараметрыПечати);

КонецФункции

// Выполняет команду печати комплекта документов
//
Функция ПечатьКомплектаДокументов(ОписаниеКоманды) Экспорт

	ОткрытьФорму("ОбщаяФорма.НастройкаПечатиКомплекта", Новый Структура("Объекты, МенеджерПечати, ИмяФормы",
		ОписаниеКоманды.ОбъектыПечати, ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Форма.ИмяФормы));

КонецФункции

Функция ВыполнитьКомандуПечатиКонверта(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектыПечати", ОписаниеКоманды.ОбъектыПечати);
	
	ОткрытьФорму("ОбщаяФорма.НастройкаПечатиКонвертов", ПараметрыФормы);
	
КонецФункции

Функция ВыполнитьКомандуПечатиЦенников(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектыПечати", ОписаниеКоманды.ОбъектыПечати);
	ПараметрыФормы.Вставить("Вид", "Ценник");
	
	ОткрытьФорму("Обработка.ПечатьЭтикеток.Форма.НастройкаПечатиЭтикеток", ПараметрыФормы,ОписаниеКоманды.Форма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецФункции

Функция ВыполнитьКомандуПечатиЭтикеток(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектыПечати", ОписаниеКоманды.ОбъектыПечати);
	ПараметрыФормы.Вставить("Вид", "Этикетка");
	
	ОткрытьФорму("Обработка.ПечатьЭтикеток.Форма.НастройкаПечатиЭтикеток", ПараметрыФормы,ОписаниеКоманды.Форма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Процедуры для команд печати
Функция ПолучитьЗаголовокПечатнойФормы(ПараметрКоманды) Экспорт 
	
	Если Тип(ПараметрКоманды) = Тип("Массив") И ПараметрКоманды.Количество() = 1 Тогда 
		Возврат Новый Структура("ЗаголовокФормы", ПараметрКоманды[0]);
	Иначе
		Возврат Новый Структура;
	КонецЕсли;
	
КонецФункции

// ЗАМЕР ВРЕМЕНИ

Процедура НачатьЗамерВремени(Форма, ИдентификаторПечатнойФормы, ОбъектыПечати) Экспорт
	
	Если ТипЗнч(ОбъектыПечати) = Тип("Массив") И ОбъектыПечати.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если ИдентификаторПечатнойФормы = "Реестр" Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Форма.ИмяФормы, "ПоступлениеТоваровУслуг") > 0 Тогда
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ПечатьПоступлениеТоваровУслуг" + ИдентификаторПечатнойФормы);
	КонецЕсли;
		
	Если СтрНайти(Форма.ИмяФормы, "РеализацияТоваровУслуг") > 0 Тогда
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ПечатьРеализацияТоваровУслуг" + ИдентификаторПечатнойФормы);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////
// Печать факсимиле

// Процедура вызывает подключаемые обработчики добавленных команд формы ПечатьДокументов.
//
// Параметры:
//  Форма     - Управляемая форма.
//  Команда   - Команда формы.
//
Процедура ПечатьДокументовВыполнитьКоманду(Форма, Команда) Экспорт
	
	Результат = Новый Структура;
	Контекст  = Новый Структура;
	Контекст.Вставить("ИмяКоманды",    Команда.Имя);
	Контекст.Вставить("Представление", Форма.Заголовок);
	
	Если Форма.Элементы.НастройкиПечатныхФорм.ТекущиеДанные = Неопределено Тогда
		ИмяРеквизита = Неопределено;
	Иначе
		ИмяРеквизита = Форма.Элементы.НастройкиПечатныхФорм.ТекущиеДанные.ИмяРеквизита;
	КонецЕсли;
	Контекст.Вставить("ИмяРеквизита",  ИмяРеквизита);
	
	Форма.Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат);
	
КонецПроцедуры

// Процедура переопределяет ообработчик ОбработкаНавигационнойСсылки формы ПечатьДокументов.
//
// Параметры:
//  Форма                                      - Управляемая форма.
//  НавигационнаяСсылкаФорматированнойСтроки   - Строка - навигационная ссылка.
//  СтандартнаяОбработка                       - Булево, признак стандартной обработки.
//
Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "НастройкаФаксимилеОткрытьОрганизацию" Тогда
		СтандартнаяОбработка = Ложь;
		НастроитьПодписьИПечатьОткрытьОрганизацию(Форма.Организация);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьПодписьИПечатьОткрытьОрганизацию(Организация)
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Организация);
		ПараметрыФормы.Вставить("АктивироватьПолеПечать", Истина);
		
		ФормаОрганизации = ПолучитьФорму("Справочник.Организации.ФормаОбъекта", ПараметрыФормы);
		
		Если ФормаОрганизации.Открыта() Тогда
			Оповестить("ФормаОрганизации_АктивироватьПолеПечать", Организация);
			ФормаОрганизации.Активизировать();
		Иначе
			ФормаОрганизации.Открыть();
		КонецЕсли;
		
КонецПроцедуры


