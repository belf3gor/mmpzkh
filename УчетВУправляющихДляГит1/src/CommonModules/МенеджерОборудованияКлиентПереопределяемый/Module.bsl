
#Область ПрограммныйИнтерфейс

// Возвращает текущую дату, приведенную к часовому поясу сеанса.
// Предназначена для использования вместо функции ТекущаяДата().
//
// Возвращаемое значение:
//  Результат - текущая дата.
//
Функция ДатаСеанса() Экспорт
	
	Возврат ТекущаяДата();
	
КонецФункции

// Функция возвращает объект обработчика драйвера по его наименованию.
//
// Параметры:
//  ОбработчикДрайвера  - Перечисление, ссылка на обработчик драйвера подключаемого оборудования.
//  ЗагружаемыйДрайвер  - Булево, признак, что драйвер загружаемый
//  ТипОборудованияИмя  - Строка, представление типа оборудования
//
// Возвращаемое значение:
//  Результат - Используемый модуль обработчика драйвера.
//
Функция ПолучитьОбработчикДрайвера(ОбработчикДрайвера, ЗагружаемыйДрайвер, ТипОборудованияИмя) Экспорт

// Используем универсальный обработчик драйвера по стандарту "1С:Совместимо".
#Если ВебКлиент Тогда
	Результат = ПодключаемоеОборудованиеУниверсальныйДрайверАсинхронноКлиент; 
#Иначе
	Результат = ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
#КонецЕсли
	
	// Обработчики драйверов не удовлетворяющие стандарту "1С:Совместимо".
	Если Не ЗагружаемыйДрайвер И ОбработчикДрайвера <> Неопределено Тогда
		
		// Квартплата +
		Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1ССканерыШтрихкода") Тогда
			Возврат УПЖКХ_ПодключаемоеОборудование1ССканерыШтрихкода;
		ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолСканерыШтрихкода") Тогда
			Возврат УПЖКХ_ПодключаемоеОборудованиеАтолСканерыШтрихкода;
		ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикСканкодСканерыШтрихкода") Тогда
			Возврат УПЖКХ_ПодключаемоеОборудованиеСканкодСканерыШтрихкода;
		КонецЕсли;
		// Квартплата -
		
		// Сканеры штрихкода
		Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1ССканерыШтрихкода") Тогда
			Возврат ПодключаемоеОборудование1ССканерыШтрихкодаКлиент;
		КонецЕсли;
		// Конец Сканеры штрихкода
		
		// ККМ Офлайн
		Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолККМOffline") Тогда
			Возврат ОфлайнОборудованиеАтолККМКлиент;
		ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикШтрихМККМOffline") Тогда
			Возврат ОфлайнОборудованиеШтрихМККМКлиент;
		ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1СККМOffline") Тогда
			Возврат ОфлайнОборудование1СККМКлиент;
		ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1СЭвоторККМOffline") Тогда
			Возврат ОфлайнОборудование1СЭвоторКлиент;
		КонецЕсли;
		// Конец ККМ Офлайн
		
		// Web-сервис оборудование
		Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1СWebСервисОборудование") Тогда
			Возврат Неопределено;
		КонецЕсли;
		// Конец Web-сервис оборудование
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Процедура отправляет электронное сообщение на электронную почта и абонентский номер.
//
Процедура НачатьОтправкуЭлектронногоЧека(ПараметрыЧека, ТекстСообщения, ПокупательEmail, ПокупательНомер) Экспорт
	
	РассылкаЭлектронныхЧековКлиент.НачатьОтправкуЭлектронногоЧека(ПараметрыЧека, ТекстСообщения, ПокупательEmail, ПокупательНомер);
	
КонецПроцедуры

// Начинает рассылку или ставит задачу на рассылку нефискальных документов.
// Которые заданы в шаблоне чека.
Процедура НачатьРассылкуНефискальныхДокументов(Параметры) Экспорт
	
КонецПроцедуры

Процедура ОбработатьСобытие() Экспорт
	глПодключаемоеОборудованиеСобытиеОбработано = Истина;
КонецПроцедуры

Функция ЕстьНеобработанноеСобытие() Экспорт
	Возврат (глПодключаемоеОборудованиеСобытиеОбработано = ЛОЖЬ);
КонецФункции

Процедура НачатьПодключениеОборудованиеПриОткрытииФормы(Форма, ВидОборудования) Экспорт
	Если МенеджерОборудованияВызовСервераПереопределяемый.ИспользуетсяОборудование(ВидОборудования) Тогда
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключениеОборудованиеЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ОповещенияПриПодключении, Форма, ВидОборудования);
	КонецЕсли;
КонецПроцедуры

Процедура НачатьОтключениеОборудованиеПриЗакрытииФормы(Форма) Экспорт
	Если Форма.ИспользоватьПодключаемоеОборудование Тогда
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ОтключениеОборудованиеЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
		МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(ОповещенияПриПодключении, Форма);
	КонецЕсли;
КонецПроцедуры

Процедура СообщитьОбОшибке(РезультатВыполнения) Экспорт
	ТекстСообщения = НСтр("ru = 'При выполнении операции произошла ошибка:""%ОписаниеОшибки%"".'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", РезультатВыполнения.ОписаниеОшибки);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
КонецПроцедуры

#КонецОбласти
 
#Область РаботаСФормойЭкземпляраОборудования

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПриОткрытии".
//
Процедура ЭкземплярОборудованияПриОткрытии(Объект, ЭтаФорма, Отказ) Экспорт
	
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПередЗакрытием".
//
Процедура ЭкземплярОборудованияПередЗакрытием(Объект, ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПередЗаписью".
//
Процедура ЭкземплярОборудованияПередЗаписью(Объект, ЭтаФорма, Отказ, ПараметрыЗаписи) Экспорт
	
	Ошибки = Неопределено;
	
	Если (НЕ ЗначениеЗаполнено(Объект.Организация))
		И Объект.ТипОборудования <> ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.СканерШтрихкода")
		И Объект.ТипОборудования <> ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.СчитывательRFID") Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Организация", НСтр("ru='Не указана организация'"), Неопределено);
	КонецЕсли;
	
	Если (НЕ ЗначениеЗаполнено(ЭтаФорма.Склад))
		И (Объект.ТипОборудования = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККМОфлайн")) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Склад", НСтр("ru='Не указан склад (розничный магазин)'"), Неопределено);
	КонецЕсли;
	
	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	КонецЕсли;
	
	ПараметрыЗаписи.Вставить("Организация", Объект.Организация);
	ПараметрыЗаписи.Вставить("Склад", ЭтаФорма.Склад);
	ПараметрыЗаписи.Вставить("УзелОбмена", ЭтаФорма.УзелОбмена);
	
	Если Объект.ТипОборудования = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККТ") Тогда
		ПараметрыЗаписи.Вставить("Отправляет1СSMS", ЭтаФорма.Отправляет1СSMS = 1);
		ПараметрыЗаписи.Вставить("Отправляет1СEmail", ЭтаФорма.Отправляет1СEmail = 1);
		ПараметрыЗаписи.Вставить("ЗаполнятьКонтактныеДанные", ЭтаФорма.ЗаполнятьКонтактныеДанные);
	КонецЕсли; 
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПослеЗаписи".
//
Процедура ЭкземплярОборудованияПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи) Экспорт
	
	Если ПараметрыЗаписи.Свойство("НужноОбновитьИнтерфейс") Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
	ГруппаПараметрыРегистрацииККТ = ЭтаФорма.Элементы.Найти("ГруппаПараметрыРегистрацииККТ");
	Если ГруппаПараметрыРегистрацииККТ <> Неопределено Тогда
		ГруппаПараметрыРегистрацииККТ.Видимость = ЗначениеЗаполнено(Объект.Ссылка) И (Объект.ТипОборудования = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККТ"));
	КонецЕсли; 
	
КонецПроцедуры
// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ОбработкаНавигационнойСсылки".
//
Процедура ЭкземплярОборудованияОбработкаНавигационнойСсылки(Объект, ЭтаФорма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "НастроитьSMS" Тогда
		ОткрытьФорму("ОбщаяФорма.НастройкаОтправкиSMS",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "НастроитьEmail" Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена", ЭтотОбъект, Новый Структура("Форма", ЭтаФорма));
		РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);
	Иначе
		СтандартнаяОбработка = Истина;
	КонецЕсли; 
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ТипОборудованияОбработкаВыбора".
//
Процедура ЭкземплярОборудованияТипОборудованияВыбор(Объект, ЭтаФорма, ЭтотОбъект, Элемент, ВыбранноеЗначение) Экспорт
	
	Если ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККМОфлайн") Тогда
		ЭтаФорма.ОрганизацияВидимость = Истина;
		ЭтаФорма.Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
		ЭтаФорма.Элементы.Склад.АвтоОтметкаНезаполненного = Истина;
		ЭтаФорма.Элементы.Склад.ПодсказкаВвода = НСтр("ru='Укажите розничный магазин'");
	ИначеЕсли ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.СканерШтрихкода")
		ИЛИ  ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.СчитывательRFID") Тогда
		Объект.Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
		ЭтаФорма.ОрганизацияВидимость = Ложь;
		ЭтаФорма.Элементы.Организация.АвтоОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.Склад.ПодсказкаВвода = НСтр("ru='Если оборудование используется в розничном магазине'");
		ЭтаФорма.Элементы.Склад.АвтоОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.Склад.ОтметкаНезаполненного = Ложь;
	Иначе
		ЭтаФорма.ОрганизацияВидимость = Истина;
		ЭтаФорма.Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
		ЭтаФорма.Элементы.Склад.ПодсказкаВвода = НСтр("ru='Если оборудование используется в розничном магазине'");
		ЭтаФорма.Элементы.Склад.АвтоОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.Склад.ОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
	ГруппаОтправлятьЧеки = ЭтаФорма.Элементы.Найти("ГруппаОтправлятьЧеки");
	Если ГруппаОтправлятьЧеки <> Неопределено Тогда
		ГруппаОтправлятьЧеки.Видимость = Объект.ТипОборудования = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККТ");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОтправитьПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена(УчетнаяЗаписьНастроена, ДополнительныеПараметры) Экспорт
	
	Если УчетнаяЗаписьНастроена <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта",
		Новый Структура("Ключ", МенеджерОборудованияВызовСервераПереопределяемый.СистемнаяУчетнаяЗапись()),
		ДополнительныеПараметры.Форма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодключениеОборудованиеЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли; 
	
	ДополнительныеПараметры.Форма.ИспользоватьПодключаемоеОборудование = РезультатВыполнения.Результат;
КонецПроцедуры

Процедура ОтключениеОборудованиеЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При отключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли; 
	
	ДополнительныеПараметры.Форма.ИспользоватьПодключаемоеОборудование = НЕ РезультатВыполнения.Результат;
КонецПроцедуры
 
#КонецОбласти 

