
// Функциональность системы защиты, требующая привилегированного режима выполнения (полные права).
// В модуль включаются процедуры и функции, при выполнении которых могут потребоваться права,
// которыми может не обладать обычный пользователь.

#Область ОбщиеФункцииСистемыЗащиты

// Определяет, является ли конфигурация базовой версией.
// Включена в привилегированный модуль, так как в функции используется получение списка активных сеансов.
//
// Возвращаемое значение:
//  СтруктураРезультата – структура - структура результата
//    Ключи:
//      ЭтоБазоваяВерсия - Булево - определяет, является ли версия базовой
//      ПревышеноКоличествоСоединений - Булево - определяет, превышено ли количество соединений для базовой версии.
//
Функция ЭтоБазоваяВерсия(ПревышеноКоличествоСоединений = Неопределено) Экспорт
	
	ЭтоБазоваяВерсия = Ложь;
	
	// Определим, является ли версия базовой вообще.
	Если Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0 Тогда
		ЭтоБазоваяВерсия = Истина;
		
	ИначеЕсли Найти(ВРег(Метаданные.Имя), "ПРОФ") > 0 Тогда
		ЭтоБазоваяВерсия = Ложь;
		
	ИначеЕсли СЗК_Параметры.ВерсияБезПриставокЯвляетсяБазовой() Тогда
		ЭтоБазоваяВерсия = Истина;
		
	КонецЕсли;
	
	// Если версия базовая, то необходимо проверить количество соединений.
	// Если текущее соединение запущено не раньше всех, а сеансов больше 1,
	// то количество сеансов превышено.
	Если ЭтоБазоваяВерсия Тогда
		
		// Список сеансов, количество которых ограничено.
		МассивТиповПользовательскихСоединений = Новый Массив;
		МассивТиповПользовательскихСоединений.Добавить("1CV8");
		МассивТиповПользовательскихСоединений.Добавить("1CV8C");
		МассивТиповПользовательскихСоединений.Добавить("WebClient");
		
		Соединения = ПолучитьСоединенияИнформационнойБазы();
		
		КоличествоПользовательскихСеансов = 0;
		МинимальноеНачалоСеанса           = Неопределено;
		
		НомерТекущегоСеанса  = НомерСоединенияИнформационнойБазы();
		НачалоТекущегоСеанса = Дата(1,1,1);
		
		Для Каждого ТекСоединение Из Соединения Цикл
			
			Если Не МассивТиповПользовательскихСоединений.Найти(ТекСоединение.ИмяПриложения) = Неопределено Тогда
				
				// Вычисляем время самого раннего сеанса.
				Если МинимальноеНачалоСеанса = Неопределено Или ТекСоединение.НачалоСеанса < МинимальноеНачалоСеанса Тогда
					МинимальноеНачалоСеанса = ТекСоединение.НачалоСеанса;
				КонецЕсли;
				
				// Определяем начало текущего сеанса.
				Если ТекСоединение.НомерСоединения = НомерТекущегоСеанса Тогда
					НачалоТекущегоСеанса = ТекСоединение.НачалоСеанса;
				КонецЕсли;
				
				// Считаем количество активных сеансов.
				КоличествоПользовательскихСеансов = КоличествоПользовательскихСеансов + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Если количество сеансов > 1, а текущий сеанс не самый ранний, то в получении лицензии
		// текущему сеансу отказано.
		Если КоличествоПользовательскихСеансов > 1 И Не НачалоТекущегоСеанса = МинимальноеНачалоСеанса Тогда
			ПревышеноКоличествоСоединений = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЭтоБазоваяВерсия;
	
КонецФункции // ЭтоNFRВерсия()

#КонецОбласти
