
#Область СлужебныйПрограммныйИнтерфейс

// Устанавливает отображение команды "Пересчитать" в документах, рассчитывающих начисления
// по нескольким сотрудникам.
//
// Параметры:
//		Форма						- УправляемаяФорма
//      УстановитьАктивность		- Булево, если Истина кнопка активна.
//		ОтображатьКнопкуПересчета	- Булево, содержит свойство "Видимость".
//
Процедура УстановитьОтображениеКнопкиПересчитать(Форма, УстановитьАктивность = Ложь, ОтображатьКнопкуПересчета = Истина) Экспорт
	
	КнопкаПересчитатьДокумент = Форма.Элементы.Найти("ПересчитатьДокумент");
	Если КнопкаПересчитатьДокумент = Неопределено
		ИЛИ КнопкаПересчитатьДокумент.Доступность = УстановитьАктивность Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	Если УстановитьАктивность Тогда
		ЦветТекстаКнопки = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветОсобогоТекста");
		ЦветФонаКнопки = ОбщегоНазначенияКлиент.ЦветСтиля("ВыделеннаяКнопкаФон");
	Иначе
		ЦветТекстаКнопки = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветТекстаКнопки");
		ЦветФонаКнопки = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветФонаКнопки");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ПересчитатьДокумент",
		"ЦветТекста",
		ЦветТекстаКнопки);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ПересчитатьДокумент",
		"ЦветФона",
		ЦветФонаКнопки);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ПересчитатьДокумент",
		"Доступность",
		УстановитьАктивность);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ПересчитатьДокумент",
		"Видимость",
		ОтображатьКнопкуПересчета И НЕ Форма.РассчитыватьДокументыПриРедактировании);
	
КонецПроцедуры

Процедура СтрокаРасчетаПриНачалеРедактирования(Форма, ИмяТаблицы, ДанныеСтроки, НоваяСтрока, Копирование) Экспорт
	
	РасчетЗарплатыВнутреннийКлиент.СтрокаРасчетаПриНачалеРедактирования(Форма, ИмяТаблицы, ДанныеСтроки, НоваяСтрока, Копирование);
	
КонецПроцедуры

Процедура СтрокаРасчетаПриОкончанииРедактирования(Форма, ОписаниеТаблицы, ПересчитыватьСотрудникаБезусловно = Неопределено, ПроводитьПерерасчет = Истина, ОписаниеДокумента = Неопределено) Экспорт
	
	РасчетЗарплатыВнутреннийКлиент.СтрокаРасчетаПриОкончанииРедактирования(Форма, ОписаниеТаблицы, ПересчитыватьСотрудникаБезусловно, ПроводитьПерерасчет, ОписаниеДокумента);
	
КонецПроцедуры

// Отмена исправления в документе.
// Использование процедуры в форме документа-начисления предполагает наличие в форме 
// процедуры ЗаполнитьНачисленияСотрудника.
Процедура ОтменитьИсправление(Форма, ОписаниеТаблицы) Экспорт 
	
	РасчетЗарплатыВнутреннийКлиент.ОтменитьИсправление(Форма, ОписаниеТаблицы)
	
КонецПроцедуры

// Отмена исправления в документе.
// Использование процедуры в форме документа-начисления предполагает наличие в форме 
// процедуры ЗаполнитьНачисленияСотрудника.
Процедура ОтменитьВсеИсправления(Форма, ОписаниеТаблицы) Экспорт
	
	РасчетЗарплатыВнутреннийКлиент.ОтменитьВсеИсправления(Форма, ОписаниеТаблицы)
	
КонецПроцедуры

Процедура ФормаПодробнееОРасчетеНДФЛКорректировкиВыплатыВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, ОписаниеТаблицыКорректировкиВыплаты, МесяцНачисления, Организация) Экспорт
	РасчетЗарплатыВнутреннийКлиент.ФормаПодробнееОРасчетеНДФЛКорректировкиВыплатыВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, ОписаниеТаблицыКорректировкиВыплаты, МесяцНачисления, Организация);
КонецПроцедуры

Процедура ФормаПодробнееОРасчетеНДФЛПерераспределитьКорректировкиВыплаты(СтрокаКорректировкиВыплаты, РаботаВБюджетномУчреждении) Экспорт
	РасчетЗарплатыВнутреннийКлиент.ФормаПодробнееОРасчетеНДФЛПерераспределитьКорректировкиВыплаты(СтрокаКорректировкиВыплаты, РаботаВБюджетномУчреждении);
КонецПроцедуры

Процедура ФормаПодробнееОРасчетеНДФЛВыполнитьКомандуРедактированияРезультатовРаспределенияНачисленийИУдержаний(Форма, КорректировкиВыплаты, Организация, МесяцНачисления, Элемент, СтандартнаяОбработка) Экспорт
	РасчетЗарплатыВнутреннийКлиент.ФормаПодробнееОРасчетеНДФЛВыполнитьКомандуРедактированияРезультатовРаспределенияНачисленийИУдержаний(Форма, КорректировкиВыплаты, Организация, МесяцНачисления, Элемент, СтандартнаяОбработка);
КонецПроцедуры

Процедура ДобавитьИзмененныеДанные(ИзмененныеДанные, ИмяТаблицы, ФизическоеЛицо = Неопределено, Сотрудник = Неопределено, ВидРасчета = Неопределено) Экспорт
	
	НоваяСтрока = ИзмененныеДанные.Добавить();
	НоваяСтрока.ИмяТаблицы = ИмяТаблицы;
	
	Если ФизическоеЛицо <> Неопределено Тогда
		НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
	КонецЕсли;
	
	Если Сотрудник <> Неопределено Тогда
		НоваяСтрока.Сотрудник = Сотрудник;
	КонецЕсли;
	
	Если ВидРасчета <> Неопределено Тогда
		НоваяСтрока.ВидРасчета = ВидРасчета;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
