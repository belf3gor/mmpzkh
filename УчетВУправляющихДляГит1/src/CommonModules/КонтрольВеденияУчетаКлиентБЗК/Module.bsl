#Область СлужебныйПрограммныйИнтерфейс

// См. КонтрольВеденияУчетаСлужебныйКлиент.ИсправитьПроблему
Процедура ОткрытьОбработчикПереходаКИсправлению(Форма, Элемент, ПроблемныйОбъект, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРасшифровки = Форма.ОбработчикиИсправленияПроблем.Получить(Элемент.Имя);
	ИсправитьПроблему(Форма, СтруктураРасшифровки);
	
КонецПроцедуры

// См. КонтрольВеденияУчетаКлиент.ОткрытьОтчетПоПроблемамОбъекта
Процедура ОткрытьОтчетПоПроблемамОбъекта(Форма, ПроблемныйОбъект, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	МодульКонтрольВеденияУчетаКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("КонтрольВеденияУчетаКлиент");
	МодульКонтрольВеденияУчетаКлиент.ОткрытьОтчетПоПроблемамОбъекта(Форма, ПроблемныйОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

// См. КонтрольВеденияУчетаКлиент.ОткрытьОтчетПоПроблемамИзСписка
Процедура ОткрытьОтчетПоПроблемамИзСписка(Форма, ИмяСписка, Поле, СтандартнаяОбработка, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства = Форма[ИмяСписка].КомпоновщикНастроек.Настройки.ДополнительныеСвойства;
	Если Поле.Имя = ДополнительныеСвойства.КолонкаИндикатора Тогда
		
		ТаблицаФормы = Форма.Элементы.Найти(ДополнительныеСвойства.ИмяСписка);
		Если ТаблицаФормы <> Неопределено И ТаблицаФормы.ТекущиеДанные[Поле.Имя] > 0 Тогда
			
			МодульКонтрольВеденияУчетаКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("КонтрольВеденияУчетаКлиент");
			МодульКонтрольВеденияУчетаКлиент.ОткрытьОтчетПоПроблемамИзСписка(Форма, ИмяСписка, Поле, СтандартнаяОбработка, ДополнительныеПараметры);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// См. КонтрольВеденияУчетаСлужебныйКлиент.ИсправитьПроблему
Процедура ИсправитьПроблему(Форма, Расшифровка)
	
	ПараметрыИсправления = Новый Структура;
	ПараметрыИсправления.Вставить("ИдентификаторПроверки", Расшифровка.ИдентификаторПроверки);
	ПараметрыИсправления.Вставить("ВидПроверки",           Расшифровка.ВидПроверки);
	
	ОбработчикПереходаКИсправлению = Расшифровка.ОбработчикПереходаКИсправлению;
	Если СтрНачинаетсяС(ОбработчикПереходаКИсправлению, "ОбщаяФорма.") Или СтрНайти(ОбработчикПереходаКИсправлению, ".Форма") > 0 Тогда
		ОткрытьФорму(ОбработчикПереходаКИсправлению, ПараметрыИсправления, Форма);
	Иначе
		ОбработчикИсправления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОбработчикПереходаКИсправлению, ".");
		
		МодульОбработчикаИсправления  = ОбщегоНазначенияКлиент.ОбщийМодуль(ОбработчикИсправления[0]);
		ИмяПроцедуры = ОбработчикИсправления[1];
		
		ВыполнитьОбработкуОповещения(Новый ОписаниеОповещения(ИмяПроцедуры, МодульОбработчикаИсправления), ПараметрыИсправления);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
