#Область ПрограммныйИнтерфейс

#Область ФункцииРаботыGS1

// Разобрать строку штрихкода в соответствии со стандартом GS1.
//
Функция РазобратьСтрокуШтрихкодаGS1(Знач Штрихкод) Экспорт;
	
	РезультатРазбора = Новый Структура;
	РезультатРазбора.Вставить("Разобран"      , Ложь);
	РезультатРазбора.Вставить("ОписаниеОшибки");
	РезультатРазбора.Вставить("ПредставлениеШтрихкода", "");
	РезультатРазбора.Вставить("ДанныеШтрихкода", Новый Соответствие);
	
	КодыGS1 = МенеджерОборудованияМаркировкаКлиентСерверПовтИсп.КодыGS1();
	
	Если СтрНачинаетсяС(Штрихкод, "(") Тогда
		РазобратьСтрокуШтрихкодаGS1СоСкобками(Штрихкод, РезультатРазбора, КодыGS1);
	Иначе
		Разделитель = РазделительGS1();
		ЧастиШтрихкода = СтрРазделить(Штрихкод, Разделитель, Ложь);
		Для Каждого ЧастьБезРазделителей Из ЧастиШтрихкода Цикл
			РазобратьСтрокуШтрихкодаGS1Служебный(ЧастьБезРазделителей, РезультатРазбора, КодыGS1);
		КонецЦикла;
	КонецЕсли;
	
	Возврат РезультатРазбора;
	
КонецФункции

#КонецОбласти

#Область ФункцииМаркировкиПродукции

// Функция расшифровывает код маркировки продукции.
//
Функция РазобратьКодМаркировки(Знач КодМаркировки) Экспорт;
	
	ИдентификаторGTIN = "01";
	ИдентификаторСерийныйНомер = "21";
	ИдентификаторКлючаПроверки = "91";
	ИдентификаторКодаПроверки  = "92";
	
	// Определяем структуру результата. 
	ДанныеМаркировки = Новый Структура();
	ДанныеМаркировки.Вставить("Разобран", Ложь);
	ДанныеМаркировки.Вставить("ОписаниеОшибки");
	ДанныеМаркировки.Вставить("ПредставлениеШтрихкода" , "");
	ДанныеМаркировки.Вставить("ПотребительскаяУпаковка", Ложь);
	ДанныеМаркировки.Вставить("ДанныеШтрихкода", Новый Соответствие);
	
	ДанныеМаркировки.Вставить("ГлобальныйИдентификаторТорговойЕдиницы"); // GTIN
	ДанныеМаркировки.Вставить("СерийныйНомер"); // Серийный номер с потребительской или групповой обработки.
	ДанныеМаркировки.Вставить("ИдентификаторКлючаПроверки");
	ДанныеМаркировки.Вставить("КодПроверки");
	ДанныеМаркировки.Вставить("ДополнительныйИдентификаторПродукта");
	
	ДанныеМаркировки.Вставить("КодМаркировки");    // Исходный код маркировки. Для отображении на экране.
	ДанныеМаркировки.Вставить("КодМаркировкиККТ"); // Исходный код маркировки. Маскируемый для передачи на ККТ. 
 	ДанныеМаркировки.Вставить("EAN");           // Штрихкод товара преобразованный из GTIN

	ПозицияРазделителяGS1 = Найти(КодМаркировки, РазделительGS1());
	ПозицияРазделителяЭкран = Найти(КодМаркировки, ЭкранированныйСимволGS1());
	
	Если СтрНачинаетсяС(КодМаркировки, "(") Тогда
		
		КодыGS1 = МенеджерОборудованияМаркировкаКлиентСерверПовтИсп.КодыGS1();
		РазобратьСтрокуШтрихкодаGS1СоСкобками(КодМаркировки, ДанныеМаркировки, КодыGS1);
		
		Если ДанныеМаркировки.Разобран Тогда
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторGTIN);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = ЗначениеЭлемента.Значение;
			КонецЕсли;
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторСерийныйНомер);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.СерийныйНомер = ЗначениеЭлемента.Значение;
			КонецЕсли;
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторКлючаПроверки);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.ИдентификаторКлючаПроверки = ЗначениеЭлемента.Значение;
			КонецЕсли;
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторКодаПроверки);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.КодПроверки = ЗначениеЭлемента.Значение;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ПозицияРазделителяGS1 > 0 Или ПозицияРазделителяЭкран > 0 Тогда // В коде маркировки для групповых и транспортных упаковок присутствует символ разделитель GS1 (Dec 29).
		
		КодыGS1 = МенеджерОборудованияМаркировкаКлиентСерверПовтИсп.КодыGS1();
		Если ПозицияРазделителяЭкран > 0 Тогда
			ЧастиШтрихкода = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КодМаркировки, ЭкранированныйСимволGS1(), Ложь);
			ДанныеМаркировки.КодМаркировки = СтрЗаменить(КодМаркировки, ЭкранированныйСимволGS1(), "");
			ДанныеМаркировки.КодМаркировкиККТ = ДанныеМаркировки.КодМаркировки;
		Иначе
			ЧастиШтрихкода = СтрРазделить(КодМаркировки, РазделительGS1(), Ложь);
			ДанныеМаркировки.КодМаркировки = СтрЗаменить(КодМаркировки, РазделительGS1(), "");
			ДанныеМаркировки.КодМаркировкиККТ = СтрЗаменить(КодМаркировки, РазделительGS1(), ЭкранированныйСимволGS1());
		КонецЕсли;
		
		Для Каждого ЧастьБезРазделителей Из ЧастиШтрихкода Цикл
			РазобратьСтрокуШтрихкодаGS1Служебный(ЧастьБезРазделителей, ДанныеМаркировки, КодыGS1);
		КонецЦикла;
		
		Если ДанныеМаркировки.Разобран Тогда
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторGTIN);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = ЗначениеЭлемента.Значение;
			КонецЕсли;
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторСерийныйНомер);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.СерийныйНомер = ЗначениеЭлемента.Значение;
			КонецЕсли;
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторКлючаПроверки);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.ИдентификаторКлючаПроверки = ЗначениеЭлемента.Значение;
			КонецЕсли;
			ЗначениеЭлемента = ДанныеМаркировки.ДанныеШтрихкода.Получить(ИдентификаторКодаПроверки);
			Если ЗначениеЭлемента <> Неопределено Тогда
				ДанныеМаркировки.КодПроверки = ЗначениеЭлемента.Значение;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		// Код маркировки потребительской упаковке представляет собой строку символов без разделителей.
		ДанныеМаркировки.КодМаркировки = КодМаркировки;
		
		ДлиннаКода = СтрДлина(КодМаркировки);
		Если ДлиннаКода = 29 Тогда // Код маркировки табачной потребительской упаковки изложенные в постановлении правительстве №1433 от 27 ноября 2017.
			
			ДанныеМаркировки.ПотребительскаяУпаковка = Истина;
			ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Лев(КодМаркировки, 14); // Код товара по товарной номенклатуре GS1.
			ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 15, 7); // Код идентификации упаковки табачной продукции.
			ДанныеМаркировки.КодПроверки = Прав(КодМаркировки, 8); // Код проверки.
			ДанныеМаркировки.Разобран = Истина;
			
		ИначеЕсли ДлиннаКода = 31 Тогда // Код маркировки табачной потребительской упаковки, новые требования.
			
			ДанныеМаркировки.ПотребительскаяУпаковка = Истина;
			ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Лев(КодМаркировки, 14); // Код товара по товарной номенклатуре GS1.
			ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 15, 7); // Код идентификации упаковки табачной продукции.
			КодПроверки = Прав(КодМаркировки, 10); 
			ДанныеМаркировки.ИдентификаторКлючаПроверки = Лев(КодПроверки, 2); // Идентификатор ключа проверки.
			ДанныеМаркировки.КодПроверки = Прав(КодПроверки, 8); // Код проверки.
			ДанныеМаркировки.Разобран = Истина;
			
		Иначе
			ДанныеМаркировки.ОписаниеОшибки = НСтр("ru = 'Штрихкод не распознан.'")
		КонецЕсли;
	
	КонецЕсли;
	
	Если ДанныеМаркировки.Разобран Тогда
		// Пытаем получить торговый штрикод EAN8 или EAN13 из GTIN.
		GTIN = ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы;
		Пока Лев(GTIN, 1) = "0" И СтрДлина(GTIN) > 8 Цикл
			GTIN = Сред(GTIN, 2);
		КонецЦикла;
		ДанныеМаркировки.EAN = GTIN;
	КонецЕсли;
	
	Возврат ДанныеМаркировки;
	
КонецФункции

// Функция возвращает разделитель GS1.
//
Функция РазделительGS1() Экспорт;
	
	Возврат Символ(29); // Dec 29
	
КонецФункции

// Функция возвращает экранированный символ GS1.
//
Функция ЭкранированныйСимволGS1() Экспорт;
	
	Возврат "\x1d"; // Используется для экранирования символа GS1.
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КодыGS1Служебный() Экспорт;
	
	Коды = Новый Соответствие;
	
	ДобавитьКодGS1(Коды, "00"  , "SSCC"                      , 18);
	ДобавитьКодGS1(Коды, "01"  , "GTIN"                      , 14);
	ДобавитьКодGS1(Коды, "02"  , "CONTENT"                   , 14);
	ДобавитьКодGS1(Коды, "10"  , "BATCH_LOT"                 ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "11"  , "PROD_DATE"                 ,  6);
	ДобавитьКодGS1(Коды, "12"  , "DUE_DATE"                  ,  6);
	ДобавитьКодGS1(Коды, "13"  , "PACK_DATE"                 ,  6);
	ДобавитьКодGS1(Коды, "15"  , "BEST_BEFORE"               ,  6);
	ДобавитьКодGS1(Коды, "16"  , "SELL_BY"                   ,  6);
	ДобавитьКодGS1(Коды, "17"  , "EXPIRE"                    ,  6);
	ДобавитьКодGS1(Коды, "20"  , "VARIANT"                   ,  2);
	ДобавитьКодGS1(Коды, "21"  , "SERIAL"                    ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "22"  , "CPV"                       ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "240" , "ADDITIONAL_ID"             ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "241" , "CUSTOMER_PART_NO"          ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "242" , "MTO_VARIANT"               ,   ,  6);
	ДобавитьКодGS1(Коды, "243" , "PCN"                       ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "250" , "SECONDARY_SERIAL"          ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "251" , "REF_TO_SOURCE"             ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "253" , "GDTI"                      , 13, 17,  ТипGS1Число(), ТипGS1Строка());
	ДобавитьКодGS1(Коды, "254" , "GLN_EXTENSION_COMPONENT"   ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "255" , "GСТ"                       , 13, 12);
	ДобавитьКодGS1(Коды, "30"  , "VAR_COUNT"                 ,   , 8);
	ДобавитьКодGS1(Коды, "310n", "NET_WEIGHT_kg"             ,  6);
	ДобавитьКодGS1(Коды, "311n", "LENGTH_m"                  ,  6);
	ДобавитьКодGS1(Коды, "312n", "WIDTH_m"                   ,  6);
	ДобавитьКодGS1(Коды, "313n", "HEIGHT_m"                  ,  6);
	ДобавитьКодGS1(Коды, "314n", "AREA_m2"                   ,  6);
	ДобавитьКодGS1(Коды, "315n", "NET_VOLUME_l"              ,  6);
	ДобавитьКодGS1(Коды, "316n", "NET_VOLUME_m3"             ,  6);
	ДобавитьКодGS1(Коды, "320n", "NET_WEIGHT_lb"             ,  6);
	ДобавитьКодGS1(Коды, "321n", "LENGTH_i"                  ,  6);
	ДобавитьКодGS1(Коды, "322n", "LENGTH_f"                  ,  6);
	ДобавитьКодGS1(Коды, "323n", "LENGTH_y"                  ,  6);
	ДобавитьКодGS1(Коды, "324n", "WIDTH_i"                   ,  6);
	ДобавитьКодGS1(Коды, "325n", "WIDTH_f"                   ,  6);
	ДобавитьКодGS1(Коды, "326n", "WIDTH_y"                   ,  6);
	ДобавитьКодGS1(Коды, "327n", "HEIGHT_i"                  ,  6);
	ДобавитьКодGS1(Коды, "328n", "HEIGHT_f"                  ,  6);
	ДобавитьКодGS1(Коды, "329n", "HEIGHT_y"                  ,  6);
	ДобавитьКодGS1(Коды, "330n", "GROSS_WEIGHT_kg"           ,  6);
	ДобавитьКодGS1(Коды, "331n", "LENGTH_m_log"              ,  6);
	ДобавитьКодGS1(Коды, "332n", "WIDTH_m_log"               ,  6);
	ДобавитьКодGS1(Коды, "333n", "HEIGHT_m_log"              ,  6);
	ДобавитьКодGS1(Коды, "334n", "AREA_m2_log"               ,  6);
	ДобавитьКодGS1(Коды, "335n", "VOLUME_l_log"              ,  6);
	ДобавитьКодGS1(Коды, "336n", "VOLUME_m3_log"             ,  6);
	ДобавитьКодGS1(Коды, "337n", "KG_PER_m2"                 ,  6);
	ДобавитьКодGS1(Коды, "340n", "GROSS_WEIGHT_lb"           ,  6);
	ДобавитьКодGS1(Коды, "341n", "LENGTH_i_log"              ,  6);
	ДобавитьКодGS1(Коды, "342n", "LENGTH_f_log"              ,  6);
	ДобавитьКодGS1(Коды, "343n", "LENGTH_y_log"              ,  6);
	ДобавитьКодGS1(Коды, "344n", "WIDTH_i_log"               ,  6);
	ДобавитьКодGS1(Коды, "345n", "WIDTH_f_log"               ,  6);
	ДобавитьКодGS1(Коды, "346n", "WIDTH_y_log"               ,  6);
	ДобавитьКодGS1(Коды, "347n", "HEIGHT_i_log"              ,  6);
	ДобавитьКодGS1(Коды, "348n", "HEIGHT_f_log"              ,  6);
	ДобавитьКодGS1(Коды, "349n", "HEIGHT_y_log"              ,  6);
	ДобавитьКодGS1(Коды, "350n", "AREA_i2"                   ,  6);
	ДобавитьКодGS1(Коды, "351n", "AREA_f2"                   ,  6);
	ДобавитьКодGS1(Коды, "352n", "AREA_y2"                   ,  6);
	ДобавитьКодGS1(Коды, "353n", "AREA_i2_log"               ,  6);
	ДобавитьКодGS1(Коды, "354n", "AREA_f2_log"               ,  6);
	ДобавитьКодGS1(Коды, "355n", "AREA_y2_log"               ,  6);
	ДобавитьКодGS1(Коды, "356n", "NET_WEIGHT_t"              ,  6);
	ДобавитьКодGS1(Коды, "357n", "NET_VOLUME_oz"             ,  6);
	ДобавитьКодGS1(Коды, "360n", "NET_VOLUME_q"              ,  6);
	ДобавитьКодGS1(Коды, "361n", "NET_VOLUME_g"              ,  6);
	ДобавитьКодGS1(Коды, "362n", "VOLUME_q"                  ,  6);
	ДобавитьКодGS1(Коды, "363n", "VOLUME_g"                  ,  6);
	ДобавитьКодGS1(Коды, "364n", "VOLUME_i3"                 ,  6);
	ДобавитьКодGS1(Коды, "365n", "VOLUME_f3"                 ,  6);
	ДобавитьКодGS1(Коды, "366n", "VOLUME_y3"                 ,  6);
	ДобавитьКодGS1(Коды, "367n", "VOLUME_i3_log"             ,  6);
	ДобавитьКодGS1(Коды, "368n", "VOLUME_f3_log"             ,  6);
	ДобавитьКодGS1(Коды, "369n", "VOLUME_y3_log"             ,  6);
	ДобавитьКодGS1(Коды, "37"  , "COUNT"                     ,   ,  8);
	ДобавитьКодGS1(Коды, "390n", "AMOUNT"                    ,   , 15);
	ДобавитьКодGS1(Коды, "391n", "AMOUNT_ISO"                ,  3, 15);
	ДобавитьКодGS1(Коды, "392n", "PRICE"                     ,   , 15);
	ДобавитьКодGS1(Коды, "393n", "PRICE_ISO"                 ,  3, 15);
	ДобавитьКодGS1(Коды, "394n", "PRCNT_OFF"                 ,  4,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "400" , "ORDER_NUMBER"              ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "401" , "GINC"                      ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "402" , "GSIN"                      , 17,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "403" , "ROUTE"                     ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "410" , "SHIP_TO_LOC"               , 13);
	ДобавитьКодGS1(Коды, "411" , "BILL_TO"                   , 13);
	ДобавитьКодGS1(Коды, "412" , "PURCHASE_FROM"             , 13);
	ДобавитьКодGS1(Коды, "413" , "SHIP_FOR_LOC"              , 13);
	ДобавитьКодGS1(Коды, "414" , "LOC_No"                    , 13);
	ДобавитьКодGS1(Коды, "415" , "PAY_TO"                    , 13);
	ДобавитьКодGS1(Коды, "416" , "PROD_SERV_LOC"             , 13);
	ДобавитьКодGS1(Коды, "420" , "SHIP_TO_POST"              ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "421" , "SHIP_TO_POST_ISO"          ,  3,  9,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "422" , "ORIGIN"                    ,  3,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "423" , "CONTRY_INITIAL_PROCESS"    ,  3, 12);
	ДобавитьКодGS1(Коды, "424" , "CONTRY_PROCESS"            ,  3,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "425" , "CONTRY_DISASSEMBLY"        ,  3, 12);
	ДобавитьКодGS1(Коды, "426" , "CONTRY_FULL_PROCESS"       ,  3,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "427" , "ORIGIN_SUBDIVISION"        ,   ,  3,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7001", "NSN"                       , 13,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "7002", "MEAT_CUT"                  ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7003", "EXPIRY_TIME"               , 10,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "7004", "ACTIVE_POTENCY"            ,   ,  4);
	ДобавитьКодGS1(Коды, "7005", "CATCH_AREA"                ,   , 12,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7006", "FIRST_FREEZE_DATE"         ,  6,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "7007", "HARVEST_DATE"              ,  6,  6);
	ДобавитьКодGS1(Коды, "7008", "AQUATIC_SPECIES"           ,   ,  3,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7009", "FISHING_GEAR_TYPE"         ,   , 10,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7010", "PROD_METHOD"               ,   ,  2,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7020", "REFURB_LOT"                ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7021", "FUNC_STAT"                 ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7022", "REV_STAT"                  ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "7023", "GIAI_ASSEMBLY"             ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "703s", "PROCESSOR_s"               ,  3, 27,  ТипGS1Число(), ТипGS1Строка());
	ДобавитьКодGS1(Коды, "710" , "NHRN_PZN"                  ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "711" , "NHRN_CIP"                  ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "712" , "NHRN_CN"                   ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "713" , "NHRN_DRN"                  ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8001", "DIMENSIONS"                , 14,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "8002", "CMT_No"                    ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8003", "GRAI"                      , 14, 16,  ТипGS1Число(), ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8004", "GIAI"                      ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8005", "PRICE_PER_UNIT"            ,  6,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "8006", "ITIP_or_GCTIN"             , 18,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "8007", "IBAN"                      ,   , 34,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8008", "PROD_TIME"                 ,  8, 4,               ,               , Истина);
	ДобавитьКодGS1(Коды, "8010", "CPID"                      ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8011", "CPID_SERIAL"               ,   , 12);
	ДобавитьКодGS1(Коды, "8012", "VERSION"                   ,   , 20,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8017", "GSRN_PROVIDER"             , 18,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "8018", "GSRN_RECIPIENT"            , 18,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "8019", "SRIN"                      ,   , 10);
	ДобавитьКодGS1(Коды, "8020", "REF_No"                    ,   , 25,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8110", "COUPON_CODE_ID"            ,   , 70,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8111", "POINTS"                    ,  4,   ,               ,               , Истина);
	ДобавитьКодGS1(Коды, "8112", "PAPPERLESS_COUPON_CODE_ID" ,   , 70,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "8200", "PRODUCT_URL"               ,   , 70,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "90"  , "INTERNAL"                  ,   , 30,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "91"  , "INTERNAL1"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "92"  , "INTERNAL2"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "93"  , "INTERNAL3"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "94"  , "INTERNAL4"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "95"  , "INTERNAL5"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "96"  , "INTERNAL6"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "97"  , "INTERNAL7"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "98"  , "INTERNAL8"                 ,   , 90,               , ТипGS1Строка());
	ДобавитьКодGS1(Коды, "99"  , "INTERNAL9"                 ,   , 90,               , ТипGS1Строка());
	
	Возврат Коды
	
КонецФункции

Процедура РазобратьСтрокуШтрихкодаGS1СоСкобками(Штрихкод, РезультатРазбора, КодыGS1);
	
	РезультатРазбора.ПредставлениеШтрихкода = Штрихкод;
	
	ДлинаШтрихкода = СтрДлина(Штрихкод);
	МинимальнаяДлинаИдентификатораПрименения  = 2;
	МаксимальнаяДлинаИдентификатораПрименения = 4;
	
	НомерСимвола = 1;
	Пока НомерСимвола <= ДлинаШтрихкода Цикл
		
		Если Сред(Штрихкод, НомерСимвола, 1) <> "(" Тогда
			РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Номер символа %1%. Отсутствует ""("".'"), НомерСимвола);
			Возврат;
		КонецЕсли;
		
		НомерСимвола = НомерСимвола + 1;
		
		Позиция = СтрНайти(Штрихкод, ")",, НомерСимвола);
		Если Позиция = 0 Тогда
			РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Номер символа %1. Отсутствует "")"".'"), НомерСимвола);
			Возврат;
		КонецЕсли;
		
		ИдентификаторПрименения = Сред(Штрихкод, НомерСимвола, Позиция - НомерСимвола);
		ДлинаИдентификатора = СтрДлина(ИдентификаторПрименения);
		Если ДлинаИдентификатора < МинимальнаяДлинаИдентификатораПрименения Или ДлинаИдентификатора > МаксимальнаяДлинаИдентификатораПрименения Тогда
			РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Номер символа %1. Неизвестный идентификатор применения(AI) %2.'"), НомерСимвола, ИдентификаторПрименения);
			Возврат;
		КонецЕсли;
		
		ПоложениеДесятичнойТочкиСтрокой = "";
		ОписаниеКода = КодыGS1[ИдентификаторПрименения];
		Если ОписаниеКода = Неопределено Тогда
			Если ДлинаИдентификатора = МаксимальнаяДлинаИдентификатораПрименения Тогда
				ОписаниеКода = КодыGS1[Лев(ИдентификаторПрименения, МаксимальнаяДлинаИдентификатораПрименения - 1)];
				ПоложениеДесятичнойТочкиСтрокой = Прав(ИдентификаторПрименения, 1);
			КонецЕсли;
		КонецЕсли;
		
		Если ОписаниеКода = Неопределено Тогда
			РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Номер символа %1. Неизвестный идентификатор применения(AI) %2.'"), НомерСимвола, ИдентификаторПрименения);
			Возврат;
		КонецЕсли;
		
		НомерСимвола = Позиция + 1;
		
		Значение = "";
		Если ОписаниеКода.ФиксированнаяДлина > 0 Тогда
			Значение = Сред(ШтрихКод, НомерСимвола, ОписаниеКода.ФиксированнаяДлина);
			Если СтрДлина(Значение) <> ОписаниеКода.ФиксированнаяДлина Тогда
				РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Номер символа %5. Длина значения (%3) для идентификатора применения(AI) ""%1 %2"" меньше требуемой (%4)'"),
						ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(Значение), ОписаниеКода.ФиксированнаяДлина, НомерСимвола);
				Возврат;
			КонецЕсли;
			
			Если ОписаниеКода.ТипФиксированногоЗначения = ТипGS1Число() Тогда
				Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Значение) Тогда
					РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Номер символа %4. Значение (%3) для идентификатора применения(AI) ""%1 %2"" должно содержать только цифры'"),
							ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(Значение), НомерСимвола);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			НомерСимвола = НомерСимвола + ОписаниеКода.ФиксированнаяДлина;
		КонецЕсли;
		
		Если ОписаниеКода.ПеременнаяДлина > 0 И Позиция < СтрДлина(Штрихкод) Тогда
			ПозицияСледующегоИдентификатора = СтрНайти(Штрихкод, "(",, НомерСимвола);
			Если ПозицияСледующегоИдентификатора > 0 Тогда
				ЗначениеПеременное = Сред(Штрихкод, НомерСимвола, ПозицияСледующегоИдентификатора - НомерСимвола);
			Иначе
				ЗначениеПеременное = Сред(Штрихкод, НомерСимвола);
			КонецЕсли;
			
			Если СтрДлина(ЗначениеПеременное) > ОписаниеКода.ПеременнаяДлина Тогда
				РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Номер символа %5. Длина значения (%3) переменной части для идентификатора применения(AI) ""%1 %2"" больше требуемой (%4)'"),
						ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(ЗначениеПеременное), ОписаниеКода.ПеременнаяДлина, НомерСимвола);
				Возврат;
			КонецЕсли;
			Если ОписаниеКода.ТипПеременногоЗначения = ТипGS1Число() Тогда
				Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначениеПеременное) Тогда
					РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Номер символа %4. Значение (%3) для идентификатора применения(AI) ""%1 %2"" должно содержать только цифры'"),
							ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(ЗначениеПеременное), НомерСимвола);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			НомерСимвола = НомерСимвола + СтрДлина(ЗначениеПеременное);
			Значение = Значение + ЗначениеПеременное;
		КонецЕсли;
		
		ПоложениеДесятичнойТочки = 0;
		Если Не ПустаяСтрока(ПоложениеДесятичнойТочкиСтрокой) Тогда
			ПоложениеДесятичнойТочки = Число(ПоложениеДесятичнойТочкиСтрокой);
			Если ПоложениеДесятичнойТочки > 0 Тогда
				Для Индекс = 0 По ПоложениеДесятичнойТочки - СтрДлина(Значение) Цикл
					Значение = "0" + Значение;
				КонецЦикла;
				Значение = Лев(Значение, СтрДлина(Значение) - ПоложениеДесятичнойТочки) + "." + Прав(Значение, ПоложениеДесятичнойТочки);
			КонецЕсли;
		КонецЕсли;
		
		ОписаниеДанных = Новый Структура;
		ОписаниеДанных.Вставить("ПоложениеДесятичнойТочки", ПоложениеДесятичнойТочки);
		ОписаниеДанных.Вставить("Значение", Значение);
		РезультатРазбора.ДанныеШтрихкода.Вставить(ОписаниеКода.Код, ОписаниеДанных);
		
	КонецЦикла;
	
	РезультатРазбора.Разобран = Истина;
	
КонецПроцедуры

Процедура РазобратьСтрокуШтрихкодаGS1Служебный(Штрихкод, РезультатРазбора, КодыGS1);
	
	ДлинаШтрихкода = СтрДлина(Штрихкод);
	ПредставлениеШтрихкода = "";
	
	НомерСимвола = 1;
	Пока НомерСимвола <= ДлинаШтрихкода Цикл
		
		ИдентификаторПрименения = Сред(Штрихкод, НомерСимвола, 2);
		ОписаниеКода = КодыGS1[ИдентификаторПрименения];
		Если ОписаниеКода = Неопределено Тогда
			ИдентификаторПрименения = Сред(Штрихкод, НомерСимвола, 3);
			ОписаниеКода = КодыGS1[ИдентификаторПрименения];
			Если ОписаниеКода = Неопределено Тогда
				ИдентификаторПрименения = Сред(Штрихкод, НомерСимвола, 4);
				ОписаниеКода = КодыGS1[ИдентификаторПрименения];
				Если ОписаниеКода = Неопределено Тогда
					РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Неизвестный идентификатор применения(AI) %1.'"), ИдентификаторПрименения);
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		НомерСимвола = НомерСимвола + СтрДлина(ИдентификаторПрименения);
		
		ПоложениеДесятичнойТочкиСтрокой = "";
		Если ОписаниеКода.ЕстьПоложениеДесятичнойТочки Тогда
			ПоложениеДесятичнойТочкиСтрокой = Сред(Штрихкод, НомерСимвола, 1);
			НомерСимвола = НомерСимвола + 1;
		КонецЕсли;
		
		Значение = "";
		Если ОписаниеКода.ФиксированнаяДлина > 0 Тогда
			Значение = Сред(ШтрихКод, НомерСимвола, ОписаниеКода.ФиксированнаяДлина);
			Если СтрДлина(Значение) <> ОписаниеКода.ФиксированнаяДлина Тогда
				РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Длина значения (%3) для идентификатора применения(AI) ""%1 %2"" меньше требуемой (%4)'"),
						ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(Значение), ОписаниеКода.ФиксированнаяДлина);
				Возврат;
			КонецЕсли;
			Если ОписаниеКода.ТипФиксированногоЗначения = ТипGS1Число() Тогда
				Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Значение) Тогда
					РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Значение (%3) для идентификатора применения(AI) ""%1 %2"" должно содержать только цифры'"),
							ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(Значение));
					Возврат;
				КонецЕсли;
			КонецЕсли;
			НомерСимвола = НомерСимвола + ОписаниеКода.ФиксированнаяДлина;
		КонецЕсли;
		Если ОписаниеКода.ПеременнаяДлина > 0 Тогда
			ЗначениеПеременное = Сред(Штрихкод, НомерСимвола);
			Если СтрДлина(ЗначениеПеременное) > ОписаниеКода.ПеременнаяДлина Тогда
				РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Длина значения (%3) переменной части для идентификатора применения(AI) ""%1 %2"" больше требуемой (%4)'"),
						ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(ЗначениеПеременное), ОписаниеКода.ПеременнаяДлина);
				Возврат;
			КонецЕсли;
			Если ОписаниеКода.ТипПеременногоЗначения = ТипGS1Число() Тогда
				Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначениеПеременное) Тогда
					РезультатРазбора.ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Значение (%3) для идентификатора применения(AI) ""%1 %2"" должно содержать только цифры'"),
							ИдентификаторПрименения, ОписаниеКода.Имя, СтрДлина(ЗначениеПеременное));
					Возврат;
				КонецЕсли;
			КонецЕсли;
			НомерСимвола = НомерСимвола + СтрДлина(ЗначениеПеременное);
			Значение = Значение + ЗначениеПеременное;
		КонецЕсли;
		
		ПредставлениеШтрихкода = ПредставлениеШтрихкода + "(" + ИдентификаторПрименения + ПоложениеДесятичнойТочкиСтрокой + ")" + Значение;
		
		ПоложениеДесятичнойТочки = 0;
		Если Не ПустаяСтрока(ПоложениеДесятичнойТочкиСтрокой) Тогда
			ПоложениеДесятичнойТочки = Число(ПоложениеДесятичнойТочкиСтрокой);
			Если ПоложениеДесятичнойТочки > 0 Тогда
				Для Индекс = 0 По ПоложениеДесятичнойТочки - СтрДлина(Значение) Цикл
					Значение = "0" + Значение;
				КонецЦикла;
				Значение = Лев(Значение, СтрДлина(Значение) - ПоложениеДесятичнойТочки) + "." + Прав(Значение, ПоложениеДесятичнойТочки);
			КонецЕсли;
		КонецЕсли;
		
		ОписаниеДанных = Новый Структура;
		ОписаниеДанных.Вставить("ПоложениеДесятичнойТочки", ПоложениеДесятичнойТочки);
		ОписаниеДанных.Вставить("Значение", Значение);
		РезультатРазбора.ДанныеШтрихкода.Вставить(ОписаниеКода.Код, ОписаниеДанных);
		
	КонецЦикла;
	
	РезультатРазбора.ПредставлениеШтрихкода = РезультатРазбора.ПредставлениеШтрихкода + ПредставлениеШтрихкода;
	РезультатРазбора.Разобран = Истина;
	
КонецПроцедуры

Функция ТипGS1Число();
	
	Возврат "N";
	
КонецФункции

Функция ТипGS1Строка();
	
	Возврат "X";
	
КонецФункции

Процедура ДобавитьКодGS1(Коды, Код, Имя, ФиксированнаяДлина = 0, ПеременнаяДлина = 0, ТипФиксированногоЗначения = Неопределено, ТипПеременногоЗначения = Неопределено, ЕстьРазделитель = Неопределено);
	
	ВставляемыеКоды = Новый Массив;
	ПоследнийСимволКода = Прав(Код, 1);
	Если СтрНайти("0123456789", ПоследнийСимволКода) = 0 Тогда
		КодБезПоследнегоСимвола = Лев(Код, СтрДлина(Код) - 1);
		Если ПоследнийСимволКода = "n" Тогда
			Описание = ОписаниеКода(КодБезПоследнегоСимвола, Имя, ФиксированнаяДлина, ПеременнаяДлина, ТипФиксированногоЗначения, ТипПеременногоЗначения, ЕстьРазделитель);
			Описание.ЕстьПоложениеДесятичнойТочки = Истина;
			Коды.Вставить(КодБезПоследнегоСимвола, Описание);
		Иначе
			Для Индекс = 0 По 9 Цикл
				НовыйКод = КодБезПоследнегоСимвола + Строка(Индекс);
				Коды.Вставить(НовыйКод, ОписаниеКода(НовыйКод, Имя, ФиксированнаяДлина, ПеременнаяДлина, ТипФиксированногоЗначения, ТипПеременногоЗначения, ЕстьРазделитель));
			КонецЦикла;
		КонецЕсли;
	Иначе
		Коды.Вставить(Код, ОписаниеКода(Код, Имя, ФиксированнаяДлина, ПеременнаяДлина, ТипФиксированногоЗначения, ТипПеременногоЗначения, ЕстьРазделитель));
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеКода(Код, Имя, ФиксированнаяДлина = 0, ПеременнаяДлина = 0, ТипФиксированногоЗначения = Неопределено, ТипПеременногоЗначения = Неопределено, ЕстьРазделитель = Неопределено);
	
	ОписаниеКода = Новый Структура;
	ОписаниеКода.Вставить("Код", Код);
	ОписаниеКода.Вставить("Имя", Имя);
	ОписаниеКода.Вставить("ФиксированнаяДлина", ФиксированнаяДлина);
	Если ФиксированнаяДлина > 0 Тогда
		ОписаниеКода.Вставить("ТипФиксированногоЗначения", ?(ТипФиксированногоЗначения = Неопределено, ТипGS1Число(), ТипФиксированногоЗначения));
	КонецЕсли;
	ОписаниеКода.Вставить("ПеременнаяДлина", ПеременнаяДлина);
	Если ПеременнаяДлина > 0 Тогда
		ОписаниеКода.Вставить("ТипПеременногоЗначения", ?(ТипПеременногоЗначения = Неопределено, ТипGS1Число(), ТипПеременногоЗначения));
	КонецЕсли;
	ОписаниеКода.Вставить("ЕстьРазделитель", ?(ПеременнаяДлина > 0, Истина, ЗначениеЗаполнено(ЕстьРазделитель)));
	ОписаниеКода.Вставить("ЕстьПоложениеДесятичнойТочки", Ложь);
	
	Возврат ОписаниеКода;
	
КонецФункции

#КонецОбласти