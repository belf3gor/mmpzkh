
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// ПОДКЛЮЧЕНИЕ ОБЪЕКТОВ ПОДСИСТЕМЫ ЖКХ К ТИПОВЫМ МЕХАНИЗМАМ ПЕЧАТИ

// Процедура определения списка объектов, для которых доступна
// команда определения печатных форм. Необходимо для возможности
// подключения внешних печатных форм к документам.
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	Для Каждого ТекДокумент Из Метаданные.Документы Цикл
		
		ИмяДокумента = ТекДокумент.Имя;
		Если СтрНайти(ИмяДокумента, "КВП") > 0 Или СтрНайти(ИмяДокумента, "УПЖКХ") > 0 Тогда
			СписокОбъектов.Добавить(Документы[ИмяДокумента]);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ ПЕЧАТНОЙ ФОРМЫ ОПИСАНИЯ ПАРАМЕТРОВ

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписаниеПараметров") Тогда
	
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		                                                             "ОписаниеПараметров",
		                                                             "Описание параметров",
		                                                             СформироватьТабличныйДокументОписанияПараметров(ПараметрыПечати.ХранилищеСтруктурыОписанияПараметров, ПараметрыПечати.НаименованиеМакета));
		
	КонецЕсли;
	
КонецПроцедуры

// Осуществляет обращение к функции ПолучитьОписаниеПараметровПечатныхФорм(), расположенной в модуле менеджера объекта метаданных.
// В случае успеха, т.е. такая функция определена, возвращает "ХранилищеСтруктурыОписанияПараметров".
//
Функция ПолучитьОписаниеПараметров(ИмяОбъектаМетаданныхМакета) Экспорт
	
	Попытка
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяОбъектаМетаданныхМакета);
		
		ПозицияТочки = СтроковыеФункцииКлиентСервер.НайтиСимволСКонца(ИмяОбъектаМетаданныхМакета, ".");
		ИмяФормыОписанияПараметров = Прав(ИмяОбъектаМетаданныхМакета, СтрДлина(ИмяОбъектаМетаданныхМакета) - ПозицияТочки);
		
		КоллекцияОписанияПараметров = Новый Структура;
		
		Выполнить("КоллекцияОписанияПараметров = Менеджер.ПолучитьОписаниеПараметровПечатныхФорм(""" + ИмяФормыОписанияПараметров + """);");
		
		Если КоллекцияОписанияПараметров = Неопределено Тогда
			Возврат "";
		КонецЕсли;
		
		Возврат ПоместитьВоВременноеХранилище(КоллекцияОписанияПараметров, Новый УникальныйИдентификатор);
		
	Исключение
		
		Возврат "";
		
	КонецПопытки;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ СО СТРУКТУРОЙ ДАННЫХ ОПИСАНИЯ ПАРАМЕТРОВ

// Функция создает и возвращает пустую структуру.
//
Функция СоздатьКоллекциюОписанияМакетов() Экспорт
	
	КоллекцияДанных = Новый Структура();
	Возврат КоллекцияДанных;
	
КонецФункции

// Процедура добавляет новый элемент в описание макета.
//
Процедура ДобавитьЭлементВОписаниеПараметров(СтруктураНовогоЭлементаОписаниеПараметров, ИмяПараметра, ОписаниеПараметра) Экспорт
	
	СтруктураНовогоЭлементаОписаниеПараметров.Вставить(ИмяПараметра, ОписаниеПараметра);
	
КонецПроцедуры

// Функция добавляет область элементов в описание макета.
//
Функция ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, ИмяОбластиПараметров) Экспорт
	
	ОписаниеОбластиПараметров.Вставить(ИмяОбластиПараметров, Новый Структура);
	Возврат ОписаниеОбластиПараметров[ИмяОбластиПараметров];
	
КонецФункции

// Функция добавляет макет в описание параметров.
//
Функция ДобавитьМакетВОписаниеПараметров(ОписаниеОбластиПараметров, ИмяОбластиПараметров) Экспорт
	
	ОписаниеОбластиПараметров.Вставить(ИмяОбластиПараметров, Новый Структура);
	Возврат ОписаниеОбластиПараметров[ИмяОбластиПараметров];
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБХОДА СТРУКТУРЫ И ФОРМИРОВАНИЯ ТАБЛИЧНОГО ДОКУМЕНТА

// Функция возвращает сформированный табличный документ описания параметров.
//
Функция СформироватьТабличныйДокументОписанияПараметров(ХранилищеСтруктурыОписанияПараметров, НаименованиеМакета)
	
	СтруктураОписанияПараметров = ПолучитьИзВременногоХранилища(ХранилищеСтруктурыОписанияПараметров);
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	Макет = ПолучитьОбщийМакет("УПЖКХ_ОписаниеПараметровМакета");
	
	// Вывод заголовка.
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьШапка.Параметры.Заголовок = "Описание параметров макета """ + НаименованиеМакета + """";
	
	ДокументРезультат.Вывести(ОбластьШапка);
	
	// Вывод описания параметров.
	ОбластьГруппаПараметров  = Макет.ПолучитьОбласть("ОбластьГруппаПараметров");
	ОбластьОписаниеПараметра = Макет.ПолучитьОбласть("ОбластьОписаниеПараметра");
	ОбластьРазделитель       = Макет.ПолучитьОбласть("ОбластьРазделитель");
	
	Для Каждого ТекОписаниеМакета Из СтруктураОписанияПараметров Цикл
		ВывестиОписаниеПараметров(ДокументРезультат, ТекОписаниеМакета.Значение, ОбластьГруппаПараметров, ОбластьОписаниеПараметра, ОбластьРазделитель);
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

// Процедура выполняет обход структуры и вывод данных в макет.
//
Процедура ВывестиОписаниеПараметров(ДокументРезультат, ОписаниеПараметров, ОбластьГруппаПараметров, ОбластьОписаниеПараметра, ОбластьРазделитель)
	
	Для Каждого ТекЭлементОписания Из ОписаниеПараметров Цикл
		
		Если ТипЗнч(ТекЭлементОписания.Значение) = Тип("Структура") Тогда 
			
			// Выведем разделитель после вывода области.
			ДокументРезультат.Вывести(ОбластьРазделитель);
			
			// Выведем заголовок области параметров.
			ОбластьГруппаПараметров.Параметры.ГруппаПараметров = ТекЭлементОписания.Ключ;
			ДокументРезультат.Вывести(ОбластьГруппаПараметров);
			
			// Рекурсивно выведем параметры области.
			ВывестиОписаниеПараметров(ДокументРезультат, ТекЭлементОписания.Значение, ОбластьГруппаПараметров, ОбластьОписаниеПараметра, ОбластьРазделитель);
			
			Продолжить;
			
		КонецЕсли;
		
		ОбластьОписаниеПараметра.Параметры.ИмяПараметра      = ТекЭлементОписания.Ключ;
		ОбластьОписаниеПараметра.Параметры.ОписаниеПараметра = ТекЭлементОписания.Значение;
		ДокументРезультат.Вывести(ОбластьОписаниеПараметра);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти