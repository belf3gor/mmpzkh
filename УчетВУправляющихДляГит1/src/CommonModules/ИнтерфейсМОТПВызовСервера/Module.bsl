
#Область ПрограммныйИнтерфейс

#Область Авторизация
	
	// Возвращает текущий ключ сессии для обмена с МОТП.
	// 
	// Параметры:
	// 	Организация - СправочникСсылка.Организации - Организация.
	// 	СрокДейтвия - Дата, Неопределено           - Срок действия ключа сессии.
	// Возвращаемое значение:
	// 	Строка, Неопределено - Действующий ключ сессии для организации.
	Функция ТекущийКлючСессии(Знач Организация = Неопределено, Знач СрокДействия = Неопределено) Экспорт
		
		Попытка
			ДанныеКлючаСессииМОТП = ПараметрыСеанса["ДанныеКлючаСессииМОТП"].Получить();
		Исключение
			ДанныеКлючаСессииМОТП = Неопределено;
		КонецПопытки;
		
		// Ключ сессии еще не установлен
		Если ДанныеКлючаСессииМОТП = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если СрокДействия = Неопределено Тогда
			
			Таймаут      = 60;
			СрокДействия = ТекущаяДатаСеанса() + Таймаут;
			
		КонецЕсли;
		
		Если Организация <> Неопределено Тогда
			
			ДанныеКлючаСессииДляОрганизации = ДанныеКлючаСессииМОТП.Получить(Организация);
			
			Если ДанныеКлючаСессииДляОрганизации = Неопределено Тогда
				Возврат Неопределено;
			КонецЕсли;
			
			// Ключ сессии устарел
			Если ДанныеКлючаСессииДляОрганизации.ДействуетДо <= СрокДействия Тогда
				Возврат Неопределено;
			КонецЕсли;
			
		Иначе
			
			Для Каждого КлючИЗначение Из ДанныеКлючаСессииМОТП Цикл
				
				Если КлючИЗначение.Значение.ДействуетДо > СрокДействия Тогда
					
					ДанныеКлючаСессииДляОрганизации = КлючИЗначение.Значение;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ДанныеКлючаСессииДляОрганизации = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		КлючСессии = ДанныеКлючаСессииДляОрганизации.КлючСессии;
		
		Возврат КлючСессии;
		
	КонецФункции
	
	// Проверить актуальность ключа сессии.
	// 
	// Параметры:
	// 	Организация - СправочникСсылка.Организации - Организация.
	// 	СрокДействия - Дата, Неопределено - Требуемый срок действия ключа сессии.
	// Возвращаемое значение:
	// 	Булево - Необходимость обновления ключа сессии.
	Функция ТребуетсяОбновлениеКлючаСессии(Знач Организация = Неопределено, Знач СрокДействия = Неопределено) Экспорт
		
		КлючСессии = ТекущийКлючСессии(Организация, СрокДействия);
		
		ТребуетсяОбновление = (КлючСессии = Неопределено);
		
		Если Не ТребуетсяОбновление Тогда
			Возврат Ложь;
		КонецЕсли;
		
		КлючСессииОбновлен = ИнтерфейсМОТПСлужебный.ОбновитьКлючСессииНаСервере(Организация);
		
		Возврат Не КлючСессииОбновлен;
		
	КонецФункции
	
	// Запросить из сервиса ИС МОТП параметры авторизации.
	// 
	// Возвращаемое значение:
	// 	Структура - Описание:
	// * РезультатОтправкиЗапроса - (См. ИнтерфейсМОТПСлужебный.ОбработатьРезультатОтправкиHTTPЗапроса) - Результат отправки запроса.
	// * ПараметрыАвторизации     - (См. ИнтерфейсМОТПСлужебный.ПараметрыАвторизации) - Параметры авторизации.
	//                            - Неопределено - Если при получении параметров авторизации возникла ошибка.
	// * ТекстОшибки              - Строка                  - Текст сообщения об ошибке.
	Функция ЗапроситьПараметрыАвторизации() Экспорт
		
		ВозвращаемоеЗначение = Новый Структура;
		ВозвращаемоеЗначение.Вставить("РезультатОтправкиЗапроса", Неопределено);
		ВозвращаемоеЗначение.Вставить("ПараметрыАвторизации",     Неопределено);
		ВозвращаемоеЗначение.Вставить("ТекстОшибки",              "");
		
		ИнтернетПрокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси("HTTPS");
		
		ЗаголовокHTTP = Новый Соответствие();
		ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
		
		HTTPЗапрос  = Новый HTTPЗапрос("api/v3/auth/cert/key", ЗаголовокHTTP);
		HTTPОтвет   = Неопределено;
		ТекстОшибки = "";
		
		ЗащищенноеСоединение = ИнтеграцияИСПовтИсп.ЗащищенноеСоединение();
		
		Попытка
			
			Соединение = Новый HTTPСоединение(
				ИнтерфейсМОТПСлужебный.АдресСервера(),
				443,,,
				ИнтернетПрокси,
				60, ЗащищенноеСоединение);
			
			HTTPОтвет = Соединение.Получить(HTTPЗапрос);
			
		Исключение
			
			ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru='МОТП'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,,
				НСтр("ru='Ошибка получения параметров авторизации сервера ИС МОТП'") + Символы.ПС +
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		КонецПопытки;
		
		РезультатОтправкиЗапроса = ИнтерфейсМОТПСлужебный.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(
			HTTPОтвет, ТекстОшибки);
		
		ВозвращаемоеЗначение.РезультатОтправкиЗапроса = РезультатОтправкиЗапроса;
		
		Если РезультатОтправкиЗапроса.ОтветПолучен Тогда
			
			Если РезультатОтправкиЗапроса.КодСостояния = 200 Тогда
				
				ДанныеОтвета = ИнтерфейсМОТПСлужебный.ТекстJSONВОбъект(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияJSON);
				
				Если ДанныеОтвета = Неопределено Тогда
					
					ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсМОТПСлужебный.ТекстОшибкиПоРезультатуОтправкиЗапроса(
						НСтр("ru = 'Параметры авторизации не получены из ИС МОТП'"),
						РезультатОтправкиЗапроса);
					
				Иначе
					
					ПараметрыАвторизации = ИнтерфейсМОТПСлужебный.ПараметрыАвторизации();
					ПараметрыАвторизации.Идентификатор = ДанныеОтвета.uuid;
					ПараметрыАвторизации.Данные        = ДанныеОтвета.data;
					
					ВозвращаемоеЗначение.ПараметрыАвторизации = ПараметрыАвторизации;
					
				КонецЕсли;
				
			Иначе
				
				ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсМОТПСлужебный.ТекстОшибкиПоРезультатуОтправкиЗапроса(
						НСтр("ru = 'Параметры авторизации не получены из ИС МОТП'"),
						РезультатОтправкиЗапроса);
				
			КонецЕсли;
			
		Иначе
			
			ВозвращаемоеЗначение.ТекстОшибки = СтрШаблон(
				НСтр("ru='Параметры авторизации не получены из ИС МОТП.
					     |Текст ошибки: %1'"),
				РезультатОтправкиЗапроса.ТекстОшибки);
			
		КонецЕсли;
		
		Возврат ВозвращаемоеЗначение;
		
	КонецФункции
	
	// Выполнить запрос ключа сессии в МОТП.
	// 
	// Параметры:
	// 	ПараметрыЗапросаПоОрганизации - 
	// Возвращаемое значение:
	// 	Структура - Описание:
	// * РезультатОтправкиЗапроса - (См. ИнтерфейсМОТПСлужебный.ОбработатьРезультатОтправкиHTTPЗапроса) - Результат отправки запроса.
	// * Результат                - (См. ИнтерфейсМОТПСлужебный.ПараметрыКлючаСессии) - Параметры ключа сессии.
	//                            - Неопределено - При получении параметров ключа сессии произошла ошибка.
	// * ТекстОшибки              - Строка - Текст ошибки.
	Функция ЗапроситьКлючСессии(ПараметрыЗапросаПоОрганизации) Экспорт
		
		ВозвращаемоеЗначение = Новый Структура;
		ВозвращаемоеЗначение.Вставить("РезультатОтправкиЗапроса", Неопределено);
		ВозвращаемоеЗначение.Вставить("ПараметрыКлючаСессии",     Неопределено);
		ВозвращаемоеЗначение.Вставить("ТекстОшибки",              "");
		
		ИнтернетПрокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси("HTTPS");
		
		ТелоЗапроса     = Новый Структура;
		ТелоЗапроса.Вставить("uuid", ПараметрыЗапросаПоОрганизации.ПараметрыАвторизации.Идентификатор);
		ТелоЗапроса.Вставить("data", ПараметрыЗапросаПоОрганизации.СвойстваПодписи.Подпись);
		ТелоЗапросаJSON = ИнтерфейсМОТПСлужебный.ОбъектВТекстJSON(ТелоЗапроса);
		
		ЗаголовокHTTP = Новый Соответствие();
		ЗаголовокHTTP.Вставить("Content-Type",   "application/json; charset=utf-8");
		ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
		
		HTTPЗапрос  = Новый HTTPЗапрос("api/v3/auth/cert/", ЗаголовокHTTP);
		HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапросаJSON, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
		HTTPОтвет   = Неопределено;
		ТекстОшибки = "";
		
		ЗащищенноеСоединение = ИнтеграцияИСПовтИсп.ЗащищенноеСоединение();
		
		Попытка
			
			Соединение = Новый HTTPСоединение(
				ИнтерфейсМОТПСлужебный.АдресСервера(),
				443,,,
				ИнтернетПрокси,
				60, ЗащищенноеСоединение);
			
			HTTPОтвет = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
			
		Исключение
			
			ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru='МОТП'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,,
				НСтр("ru='Ошибка получения ключа сессии обмена с ИС МОТП'") + Символы.ПС +
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		КонецПопытки;
		
		РезультатОтправкиЗапроса = ИнтерфейсМОТПСлужебный.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(
			HTTPОтвет, ТекстОшибки);
		
		ВозвращаемоеЗначение.РезультатОтправкиЗапроса = РезультатОтправкиЗапроса;
		
		Если РезультатОтправкиЗапроса.ОтветПолучен Тогда
			
			Если РезультатОтправкиЗапроса.КодСостояния = 200 Тогда
				
				ДанныеОтвета = ИнтерфейсМОТПСлужебный.ТекстJSONВОбъект(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияJSON);
				
				Если ДанныеОтвета = Неопределено Тогда
					
					ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсМОТПСлужебный.ТекстОшибкиПоРезультатуОтправкиЗапроса(
						НСтр("ru='Ключ сессии не получен из ИС МОТП.'"),
						РезультатОтправкиЗапроса);
					
				Иначе
					
					ДействуетДо = ТекущаяДатаСеанса() + 900; // 15 минут
					РезультатРазбораТокена = ИнтерфейсМОТПСлужебный.РасшифроватьТокенJWT(ДанныеОтвета.token);
					Если РезультатРазбораТокена <> Неопределено Тогда
						ДействуетДо = МестноеВремя('19700101' + Цел(РезультатРазбораТокена.exp));
					КонецЕсли;
					
					ПараметрыКлючаСессии = ИнтерфейсМОТПСлужебный.ПараметрыКлючаСессии();
					ПараметрыКлючаСессии.КлючСессии  = ДанныеОтвета.token;
					ПараметрыКлючаСессии.ДействуетДо = ДействуетДо;
					
					ВозвращаемоеЗначение.ПараметрыКлючаСессии = ПараметрыКлючаСессии;
					
				КонецЕсли;
				
			Иначе
				
				ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсМОТПСлужебный.ТекстОшибкиПоРезультатуОтправкиЗапроса(
					НСтр("ru='Ключ сессии не получен из ИС МОТП.'"),
					РезультатОтправкиЗапроса);
				
			КонецЕсли;
			
		Иначе
			
			ВозвращаемоеЗначение.ТекстОшибки = СтрШаблон(
				НСтр("ru='Ключ сессии не получен из ИС МОТП.
					     |Текст ошибки: %1'"),
				РезультатОтправкиЗапроса.ТекстОшибки);
			
		КонецЕсли;
		
		Возврат ВозвращаемоеЗначение;
		
	КонецФункции
	
#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет запрос ключа сессии для организации с учетом результата подписания.
// 
// Параметры:
// 	ПараметрыЗапросовПоОрганизациям - Структура - Параметры
// Возвращаемое значение:
// 	Соответствие - Результат запроса ключей сессий по организациям.
Функция ЗапроситьКлючиСессий(ПараметрыЗапросовПоОрганизациям) Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие;
	
	Для Каждого ПараметрыЗапросаПоОрганизации Из ПараметрыЗапросовПоОрганизациям Цикл
		
		РезультатЗапросаКлючаСессии = ЗапроситьКлючСессии(ПараметрыЗапросаПоОрганизации);
		
		Если РезультатЗапросаКлючаСессии.ПараметрыКлючаСессии <> Неопределено Тогда
			
			ИнтерфейсМОТПСлужебный.УстановитьКлючСессии(
				ПараметрыЗапросаПоОрганизации.Организация,
				РезультатЗапросаКлючаСессии.ПараметрыКлючаСессии);
			
			// Ключ сессии обновлен
			ВозвращаемоеЗначение.Вставить(ПараметрыЗапросаПоОрганизации.Организация, Истина);
			
		Иначе
			
			// Ключ сессии не обновлен
			ВозвращаемоеЗначение.Вставить(ПараметрыЗапросаПоОрганизации.Организация, РезультатЗапросаКлючаСессии.ТекстОшибки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти
