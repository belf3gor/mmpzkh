#Область ПрограммныйИнтерфейс

// Определяет по значению штрихкода принадлежность к алкогольной продукции.
// 
// Параметры:
// 	Штрихкод - Строка - Штрихкод строкой.
// 	УчитыватьЛогистическуюУпаковку - Булево - Логистическая упаковка будет так же будет подвергнута анализу.
// Возвращаемое значение:
// 	Булево - Истина, если штрихкод принадлежит к алкогольной продукции.
Функция ЭтоШтрихкодАлкогольнойПродукции(Штрихкод, УчитыватьЛогистическуюУпаковку = Ложь) Экспорт

	ЭтоШтрихкодАлкогольнойПродукции = ЭтоШтрихкодАкцизнойМарки(Штрихкод)
		Или ЭтоШтрихкодСНомеромИСерией(Штрихкод);
		
	Если УчитыватьЛогистическуюУпаковку Тогда
		ЭтоШтрихкодАлкогольнойПродукции = ЭтоШтрихкодАлкогольнойПродукции
			Или ШтрихкодированиеЕГАИСКлиентСервер.ЭтоШтрихкодЛогистическойУпаковки(Штрихкод);
	КонецЕсли;
	
	Возврат ЭтоШтрихкодАлкогольнойПродукции;
	
КонецФункции

// Определяет по значению штрихкода принадлежность продукции к акцизной марке. Заполняет параметр ТипШтрихкода.
// 
// Параметры:
// 	Штрихкод - Строка - Значение штрихкода.
// 	ТипШтрихкода - Неопределено, ПеречислениеСсылка.ТипыШтрихкодов - Тип штрихкода.
// Возвращаемое значение:
// 	Булево - Истина, если зачение штрихкода является штрихкодом акцизной марки.
Функция ЭтоШтрихкодАкцизнойМарки(Штрихкод, ТипШтрихкода = Неопределено) Экспорт
	
	ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЧекККМ;
	ТипШтрихкодМарки = ФабрикаXDTO.Тип(
		Перечисления.ВидыДокументовЕГАИС.ПространствоИмен(
			ВидДокумента, Перечисления.ФорматыОбменаЕГАИС.ПустаяСсылка()), "BK");
	
	Попытка
		ТипШтрихкодМарки.Проверить(Штрихкод);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Если СтрДлина(Штрихкод) = 150 Тогда
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	Иначе 
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Определяет по значению штрихкода принадлежность продукции к марке, формат которой включает номер и серию. 
// Заполняет параметр «ТипШтрихкода»
// 
// Параметры:
// 	Штрихкод - Строка - Значение штрихкода.
// Возвращаемое значение:
// 	Булево - Истина, если значение штрихкода относится к определенному формату акцизной марки с номером и серией.
Функция ЭтоШтрихкодСНомеромИСерией(Штрихкод) Экспорт

	Если СтрДлина(Штрихкод) < 15 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Сред(Штрихкод, 4, 1) <> "-" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПроверяемыйШтрихкод = СтрЗаменить(Штрихкод, "-", "");
	
	Для Сч = 1 По Мин(15, СтрДлина(ПроверяемыйШтрихкод)) Цикл
		Если СтрНайти("0123456789", Сред(ПроверяемыйШтрихкод, Сч, 1)) = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;

КонецФункции

// Получает организацию ЕГАИС по контрагенту или организации, которая указана в реквизите Контрганент.
// 
// Параметры:
// 	ОрганизацияКонтрагентГосИС - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - по данному типу осуществяется связь
// 	организации или контрагента с организацей ЕГАИС.
// Возвращаемое значение:
// 	СправочникСсылка.КлассификаторОрганизацийЕГАИС - Организация ЕГАИС.
Функция ОрганизацияЕГАИС(ОрганизацияКонтрагентГосИС) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Контрагент = &ОрганизацияКонтрагентГосИС");
	Запрос.УстановитьПараметр("ОрганизацияКонтрагентГосИС", ОрганизацияКонтрагентГосИС);
	Результат = Запрос.Выполнить();
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ОрганизацияЕГАИС = Выборка.ОрганизацияЕГАИС;
		
	КонецЕсли;
	
	Возврат ОрганизацияЕГАИС;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Получает массив штрихкодов по переданному отбору.
//
// Параметры:
//  Отбор - Структура - структура с ключами:
//   * Номенклатура - ОпределяемыйТип.Номенклатура - ссылка на номенклатуру,
//   * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры - ссылка на характеристику номенклатуры,
//   * Упаковка - ОпределяемыйТип.Упаковка - ссылка на упаковку.
//
// Возвращаемое значение:
//  Массив - массив штрихкодов.
//
Функция ПолучитьШтрихкодыНоменклатуры(Отбор) Экспорт
	
	Результат = Новый Массив;
	ШтрихкодированиеНоменклатурыЕГАИСПереопределяемый.ПриПолученииШтрихкодовНоменклатуры(Результат, Отбор);
	
	Возврат Результат;
	
КонецФункции

Функция ВыполнитьДействие(Форма, Действие, Параметры) Экспорт

	Если Действие = "ОбработатьВыборСправки2" Тогда
		
		РезультатВыбора             = Параметры.РезультатВыбора;
		РезультатОбработкиШтрихкода = Параметры.РезультатОбработкиШтрихкода;
		КэшированныеЗначения        = Параметры.КэшированныеЗначения;
		РезультатВыбора = ОбработатьВыборСправки2(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения);
		
		Возврат РезультатВыбора;
		
	КонецЕсли;
	
	Если Действие = "ОбработатьВыборНоменклатуры" Тогда
		
		РезультатВыбора             = Параметры.РезультатВыбора;
		РезультатОбработкиШтрихкода = Параметры.РезультатОбработкиШтрихкода;
		КэшированныеЗначения        = Параметры.КэшированныеЗначения;
		РезультатВыбора = ОбработатьВыборНоменклатуры(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения);
		
		Возврат РезультатВыбора;
		
	КонецЕсли;

КонецФункции

Функция ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса) Экспорт
	
	ДокументСсылка                  = ПараметрыФормированияТекстаЗапроса.ДокументСсылка;
	ИспользоватьИдентификаторСтроки = ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки;
	ИмяПоляОрганизацияЕГАИС         = ПараметрыФормированияТекстаЗапроса.ИмяПоляОрганизацияЕГАИС;
	ИмяПоляАлкогольнаяПродукция     = ПараметрыФормированияТекстаЗапроса.ИмяПоляАлкогольнаяПродукция;
	ИмяВременнойТаблицы             = ПараметрыФормированияТекстаЗапроса.ИмяВременнойТаблицы;
	ЗаполнитьСправки2ИзРегистра     = ПараметрыФормированияТекстаЗапроса.ЗаполнитьСправки2ИзРегистра;
	ОрганизацияЕГАИС                = ПараметрыФормированияТекстаЗапроса.ОрганизацияЕГАИС;
	ИмяТабЧастиАкцизныхМарок        = ?(ЗначениеЗаполнено(ПараметрыФормированияТекстаЗапроса.ИмяТабЧастиАкцизныхМарок), 
		ПараметрыФормированияТекстаЗапроса.ИмяТабЧастиАкцизныхМарок, "АкцизныеМарки");
	
	ТекстЗапроса = "";
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		
		МетаданныеДокумента = ДокументСсылка.Метаданные();
		ТабличнаяЧастьСАкцизнымиМарками =  МетаданныеДокумента.ТабличныеЧасти.Найти(ИмяТабЧастиАкцизныхМарок);
		Если ТабличнаяЧастьСАкцизнымиМарками = Неопределено Тогда
			ТекстОшибки = НСтр("ru = 'У документа %1 отсутствует табличная часть %2.'");
			ВызватьИсключение СтрШаблон(ТекстОшибки, ДокументСсылка, ИмяТабЧастиАкцизныхМарок);
		КонецЕсли;
		
		РеквизитыТабличнойЧастиАкцизныеМарки = ТабличнаяЧастьСАкцизнымиМарками.Реквизиты;
		
		Если РеквизитыТабличнойЧастиАкцизныеМарки.Найти("ИдентификаторСтроки") <> Неопределено
			И ИспользоватьИдентификаторСтроки Тогда
			ЗначениеРеквизитаИдентификаторСтроки  = "ТабличнаяЧасть.ИдентификаторСтроки";
			ИспользоватьТабличнуюЧастьТовары      = Истина;
		Иначе
			ЗначениеРеквизитаИдентификаторСтроки  = "НЕОПРЕДЕЛЕНО";
			ИспользоватьТабличнуюЧастьТовары      = Ложь;
		КонецЕсли;
		
		Если РеквизитыТабличнойЧастиАкцизныеМарки.Найти("Справка2") <> Неопределено Тогда
			
			ЗначениеРеквизитаСправка2 = "ТабличнаяЧасть.Справка2";
			
			Если ИспользоватьТабличнуюЧастьТовары Тогда
				ЗначениеРеквизитаАлкогольнаяПродукция =
				"ВЫБОР КОГДА ТабличнаяЧасть.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка) ТОГДА
				|	ЕСТЬNULL(Товары.%ИмяПоляАлкогольнаяПродукция%, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))
				|ИНАЧЕ
				|	ЕСТЬNULL(ТабличнаяЧасть.Справка2.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))
				|КОНЕЦ
				|";
			Иначе
				ЗначениеРеквизитаАлкогольнаяПродукция =
				"ВЫБОР КОГДА ТабличнаяЧасть.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка) ТОГДА
				|	ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
				|ИНАЧЕ
				|	ЕСТЬNULL(ТабличнаяЧасть.Справка2.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))
				|КОНЕЦ
				|";
			КонецЕсли;
			
		Иначе
			
			ЗначениеРеквизитаСправка2 = "ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)";
			
			Если ИспользоватьТабличнуюЧастьТовары Тогда
				ЗначениеРеквизитаАлкогольнаяПродукция = "ЕСТЬNULL(Товары.%ИмяПоляАлкогольнаяПродукция%, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))";
			Иначе
				ЗначениеРеквизитаАлкогольнаяПродукция = "ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)";
			КонецЕсли;
			
		КонецЕсли;
		
		Если РеквизитыТабличнойЧастиАкцизныеМарки.Найти("ШтрихкодУпаковки") <> Неопределено Тогда
			ЗначениеРеквизитаШтрихкодРодительскойУпаковки = "ТабличнаяЧасть.ШтрихкодУпаковки";
		Иначе
			ЗначениеРеквизитаШтрихкодРодительскойУпаковки = "ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОрганизацияЕГАИС) Тогда
			ЗначениеРеквизитаОрганизацияЕГАИС = "&ОрганизацияЕГАИС";
		Иначе
			ЗначениеРеквизитаОрганизацияЕГАИС = "ТабличнаяЧасть.Ссылка." + ИмяПоляОрганизацияЕГАИС;
		КонецЕсли;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	%ОрганизацияЕГАИС%             КАК ОрганизацияЕГАИС,
		|	%ИдентификаторСтроки%          КАК ИдентификаторСтроки,
		|	%АлкогольнаяПродукция%         КАК АлкогольнаяПродукция,
		|	%Справка2%                     КАК Справка2,
		|	ТабличнаяЧасть.АкцизнаяМарка   КАК ШтрихкодУпаковки,
		|	%ШтрихкодРодительскойУпаковки% КАК ШтрихкодРодительскойУпаковки
		|ПОМЕСТИТЬ ВТВложенныеШтрихкодыИсходныеДанные
		|ИЗ
		|	%ИмяТабличнойЧасти% КАК ТабличнаяЧасть
		|		%Соединения%
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	ШтрихкодУпаковки,
		|	ШтрихкодРодительскойУпаковки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяТабличнойЧасти%",            МетаданныеДокумента.ПолноеИмя() + "." +ИмяТабЧастиАкцизныхМарок);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ОрганизацияЕГАИС%",             ЗначениеРеквизитаОрганизацияЕГАИС);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИдентификаторСтроки%",          ЗначениеРеквизитаИдентификаторСтроки);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%АлкогольнаяПродукция%",         СтрЗаменить(ЗначениеРеквизитаАлкогольнаяПродукция, "%ИмяПоляАлкогольнаяПродукция%", ИмяПоляАлкогольнаяПродукция));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Справка2%",                     ЗначениеРеквизитаСправка2);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ШтрихкодРодительскойУпаковки%", ЗначениеРеквизитаШтрихкодРодительскойУпаковки);
		
		Если ИспользоватьТабличнуюЧастьТовары Тогда
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса, "%Соединения%",
				СтрШаблон(
					"ЛЕВОЕ СОЕДИНЕНИЕ %1.%2 КАК Товары
					|ПО Товары.ИдентификаторСтроки = ТабличнаяЧасть.ИдентификаторСтроки
					|И Товары.ИдентификаторСтроки <> """"
					|",
					МетаданныеДокумента.ПолноеИмя(),
					МетаданныеДокумента.ТабличныеЧасти.Товары.Имя));
		Иначе
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса, "%Соединения%", "");
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ИсходныеДанные.ОрганизацияЕГАИС     КАК ОрганизацияЕГАИС,
	|	ИсходныеДанные.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ИсходныеДанные.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ИсходныеДанные.Справка2             КАК Справка2,
	|	ИсходныеДанные.ШтрихкодУпаковки     КАК Упаковка,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод КАК УпаковкаУровень1,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.ИдентификаторСтроки ЕСТЬ NULL ТОГДА
	|		ИсходныеДанные.ИдентификаторСтроки
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтрокиУровень1,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.АлкогольнаяПродукция ЕСТЬ NULL ТОГДА
	|		ИсходныеДанные.АлкогольнаяПродукция
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.АлкогольнаяПродукция
	|	КОНЕЦ КАК АлкогольнаяПродукцияУровень1,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.Справка2 ЕСТЬ NULL ТОГДА
	|		ИсходныеДанные.Справка2
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.Справка2
	|	КОНЕЦ КАК Справка2Уровень1
	|ПОМЕСТИТЬ ВложенныеШтрихкодыУпаковокУровень1
	|ИЗ
	|	&ВТВложенныеШтрихкодыИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО ИсходныеДанные.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВложенныеШтрихкодыИсходныеДанные КАК ТаблицаИдентификаторов
	|		ПО ТаблицаИдентификаторов.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|ГДЕ
	|	ИсходныеДанные.ШтрихкодРодительскойУпаковки = ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанные.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
	|	НЕОПРЕДЕЛЕНО                                КАК ИдентификаторСтроки,
	|	ИсходныеДанные.АлкогольнаяПродукция         КАК АлкогольнаяПродукция,
	|	ИсходныеДанные.Справка2                     КАК Справка2,
	|	ИсходныеДанные.ШтрихкодРодительскойУпаковки КАК Упаковка,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод КАК УпаковкаУровень1,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.ИдентификаторСтроки ЕСТЬ NULL ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтрокиУровень1,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.АлкогольнаяПродукция ЕСТЬ NULL ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.АлкогольнаяПродукция
	|	КОНЕЦ КАК АлкогольнаяПродукцияУровень1,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.Справка2 ЕСТЬ NULL ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.Справка2
	|	КОНЕЦ КАК Справка2Уровень1
	|ИЗ
	|	&ВТВложенныеШтрихкодыИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО ИсходныеДанные.ШтрихкодРодительскойУпаковки = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВложенныеШтрихкодыИсходныеДанные КАК ТаблицаИдентификаторов
	|		ПО ТаблицаИдентификаторов.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|ГДЕ
	|	ИсходныеДанные.ШтрихкодРодительскойУпаковки <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныеШтрихкодыУпаковокУровень1.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
	|	ВложенныеШтрихкодыУпаковокУровень1.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	ВложенныеШтрихкодыУпаковокУровень1.АлкогольнаяПродукция         КАК АлкогольнаяПродукция,
	|	ВложенныеШтрихкодыУпаковокУровень1.Справка2                     КАК Справка2,
	|	ВложенныеШтрихкодыУпаковокУровень1.Упаковка                     КАК Упаковка,
	|	ВложенныеШтрихкодыУпаковокУровень1.УпаковкаУровень1             КАК УпаковкаУровень1,
	|	ВложенныеШтрихкодыУпаковокУровень1.ИдентификаторСтрокиУровень1  КАК ИдентификаторСтрокиУровень1,
	|	ВложенныеШтрихкодыУпаковокУровень1.АлкогольнаяПродукцияУровень1 КАК АлкогольнаяПродукцияУровень1,
	|	ВложенныеШтрихкодыУпаковокУровень1.Справка2Уровень1             КАК Справка2Уровень1,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод             КАК УпаковкаУровень2,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.ИдентификаторСтроки ЕСТЬ NULL ТОГДА
	|		ВложенныеШтрихкодыУпаковокУровень1.ИдентификаторСтрокиУровень1
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтрокиУровень2,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.АлкогольнаяПродукция ЕСТЬ NULL ТОГДА
	|		ВложенныеШтрихкодыУпаковокУровень1.АлкогольнаяПродукцияУровень1
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.АлкогольнаяПродукция
	|	КОНЕЦ КАК АлкогольнаяПродукцияУровень2,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.Справка2 ЕСТЬ NULL ТОГДА
	|		ВложенныеШтрихкодыУпаковокУровень1.Справка2Уровень1
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.Справка2
	|	КОНЕЦ КАК Справка2Уровень2
	|ПОМЕСТИТЬ ВложенныеШтрихкодыУпаковокУровень2
	|ИЗ
	|	ВложенныеШтрихкодыУпаковокУровень1 КАК ВложенныеШтрихкодыУпаковокУровень1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО ВложенныеШтрихкодыУпаковокУровень1.УпаковкаУровень1 = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВложенныеШтрихкодыИсходныеДанные КАК ТаблицаИдентификаторов
	|		ПО ТаблицаИдентификаторов.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныеШтрихкодыУпаковокУровень2.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
	|	ВложенныеШтрихкодыУпаковокУровень2.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	ВложенныеШтрихкодыУпаковокУровень2.АлкогольнаяПродукция         КАК АлкогольнаяПродукция,
	|	ВложенныеШтрихкодыУпаковокУровень2.Справка2                     КАК Справка2,
	|	ВложенныеШтрихкодыУпаковокУровень2.Упаковка                     КАК Упаковка,
	|	ВложенныеШтрихкодыУпаковокУровень2.УпаковкаУровень1             КАК УпаковкаУровень1,
	|	ВложенныеШтрихкодыУпаковокУровень2.ИдентификаторСтрокиУровень1  КАК ИдентификаторСтрокиУровень1,
	|	ВложенныеШтрихкодыУпаковокУровень2.АлкогольнаяПродукцияУровень1 КАК АлкогольнаяПродукцияУровень1,
	|	ВложенныеШтрихкодыУпаковокУровень2.Справка2Уровень1             КАК Справка2Уровень1,
	|	ВложенныеШтрихкодыУпаковокУровень2.УпаковкаУровень2             КАК УпаковкаУровень2,
	|	ВложенныеШтрихкодыУпаковокУровень2.ИдентификаторСтрокиУровень2  КАК ИдентификаторСтрокиУровень2,
	|	ВложенныеШтрихкодыУпаковокУровень2.АлкогольнаяПродукцияУровень2 КАК АлкогольнаяПродукцияУровень2,
	|	ВложенныеШтрихкодыУпаковокУровень2.Справка2Уровень2             КАК Справка2Уровень2,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод             КАК УпаковкаУровень3,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.ИдентификаторСтроки ЕСТЬ NULL ТОГДА
	|		ВложенныеШтрихкодыУпаковокУровень2.ИдентификаторСтрокиУровень2
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтрокиУровень3,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.АлкогольнаяПродукция ЕСТЬ NULL ТОГДА
	|		ВложенныеШтрихкодыУпаковокУровень2.АлкогольнаяПродукцияУровень2
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.АлкогольнаяПродукция
	|	КОНЕЦ КАК АлкогольнаяПродукцияУровень3,
	|	ВЫБОР КОГДА ТаблицаИдентификаторов.Справка2 ЕСТЬ NULL ТОГДА
	|		ВложенныеШтрихкодыУпаковокУровень2.Справка2Уровень2
	|	ИНАЧЕ
	|		ТаблицаИдентификаторов.Справка2
	|	КОНЕЦ КАК Справка2Уровень3
	|ПОМЕСТИТЬ ВложенныеШтрихкодыУпаковокУровень3
	|ИЗ
	|	ВложенныеШтрихкодыУпаковокУровень2 КАК ВложенныеШтрихкодыУпаковокУровень2
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО ВложенныеШтрихкодыУпаковокУровень2.УпаковкаУровень2 = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВложенныеШтрихкодыИсходныеДанные КАК ТаблицаИдентификаторов
	|		ПО ТаблицаИдентификаторов.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
	|	ИсходныеДанные.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	ИсходныеДанные.АлкогольнаяПродукция         КАК АлкогольнаяПродукция,
	|	ИсходныеДанные.Справка2                     КАК Справка2,
	|	ИсходныеДанные.Упаковка                     КАК Упаковка,
	|	ИсходныеДанные.УпаковкаУровень1             КАК УпаковкаУровень1,
	|	ИсходныеДанные.ИдентификаторСтрокиУровень1  КАК ИдентификаторСтрокиУровень1,
	|	ИсходныеДанные.АлкогольнаяПродукцияУровень1 КАК АлкогольнаяПродукцияУровень1,
	|	ИсходныеДанные.Справка2Уровень1             КАК Справка2Уровень1,
	|	ИсходныеДанные.УпаковкаУровень2             КАК УпаковкаУровень2,
	|	ИсходныеДанные.ИдентификаторСтрокиУровень2  КАК ИдентификаторСтрокиУровень2,
	|	ИсходныеДанные.АлкогольнаяПродукцияУровень2 КАК АлкогольнаяПродукцияУровень2,
	|	ИсходныеДанные.Справка2Уровень2             КАК Справка2Уровень2,
	|	ИсходныеДанные.УпаковкаУровень3             КАК УпаковкаУровень3,
	|	ИсходныеДанные.ИдентификаторСтрокиУровень3  КАК ИдентификаторСтрокиУровень3,
	|	ИсходныеДанные.АлкогольнаяПродукцияУровень3 КАК АлкогольнаяПродукцияУровень3,
	|	ИсходныеДанные.Справка2Уровень3             КАК Справка2Уровень3
	|ПОМЕСТИТЬ ДанныеУпаковок
	|ИЗ
	|	ВложенныеШтрихкодыУпаковокУровень3 КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВложенныеШтрихкодыУпаковокУровень3 КАК ВложенныеШтрихкодыУпаковокУровень1
	|		ПО ИсходныеДанные.Упаковка = ВложенныеШтрихкодыУпаковокУровень1.УпаковкаУровень1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВложенныеШтрихкодыУпаковокУровень3 КАК ВложенныеШтрихкодыУпаковокУровень2
	|		ПО ИсходныеДанные.Упаковка = ВложенныеШтрихкодыУпаковокУровень2.УпаковкаУровень2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВложенныеШтрихкодыУпаковокУровень3 КАК ВложенныеШтрихкодыУпаковокУровень3
	|		ПО ИсходныеДанные.Упаковка = ВложенныеШтрихкодыУпаковокУровень3.УпаковкаУровень3
	|ГДЕ
	|	ВложенныеШтрихкодыУпаковокУровень1.Упаковка ЕСТЬ NULL
	|	И ВложенныеШтрихкодыУпаковокУровень2.Упаковка ЕСТЬ NULL
	|	И ВложенныеШтрихкодыУпаковокУровень3.Упаковка ЕСТЬ NULL
	|;
	|
	|//#РезультатЗапроса#////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУпаковок.ОрганизацияЕГАИС                                                         КАК ОрганизацияЕГАИС,
	|	ДанныеУпаковок.Упаковка                                                                 КАК Упаковка,
	|	ДанныеУпаковок.ИдентификаторСтроки                                                      КАК УпаковкаИдентификаторСтроки,
	|	ВЫБОР КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|		ЕСТЬNULL(СтатусыУпаковки.Справка2, &ПустаяСправка2)
	|	ИНАЧЕ
	|		ДанныеУпаковок.Справка2
	|	КОНЕЦ КАК УпаковкаСправка2,
	|	ДанныеУпаковок.Упаковка.ТипШтрихкода                                                    КАК УпаковкаТипШтрихкода,
	|	ДанныеУпаковок.Упаковка.ТипУпаковки                                                     КАК УпаковкаТипУпаковки,
	|	ДанныеУпаковок.Упаковка.ЗначениеШтрихкода                                               КАК УпаковкаШтрихкод,
	|	ДанныеУпаковок.Упаковка.Номенклатура                                                    КАК УпаковкаНоменклатура,
	|	ДанныеУпаковок.Упаковка.Характеристика                                                  КАК УпаковкаХарактеристика,
	|	ДанныеУпаковок.Упаковка.Серия                                                           КАК УпаковкаСерия,
	|	ДанныеУпаковок.Упаковка.ХешСумма                                                        КАК УпаковкаХешСумма,
	|	ВЫБОР
	|		КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковки.Статус, &ПустойСтатус)
	|		КОГДА ЕСТЬNULL(СтатусыУпаковки.Справка2, &ПустаяСправка2) = ДанныеУпаковок.Справка2 ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковки.Статус, &ПустойСтатус)
	|		ИНАЧЕ
	|			&ОшибкаЧтенияСтатуса
	|	КОНЕЦ КАК УпаковкаСтатус,
	|	ЕСТЬNULL(СтатусыУпаковки.АлкогольнаяПродукция, ДанныеУпаковок.АлкогольнаяПродукция) КАК УпаковкаАлкогольнаяПродукция,
	|
	|	ДанныеУпаковок.УпаковкаУровень1                                                         КАК УпаковкаУровень1,
	|	ДанныеУпаковок.ИдентификаторСтрокиУровень1                                              КАК УпаковкаУровень1ИдентификаторСтроки,
	|	ВЫБОР КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|		ЕСТЬNULL(СтатусыУпаковкиУровень1.Справка2, &ПустаяСправка2)
	|	ИНАЧЕ
	|		ДанныеУпаковок.Справка2Уровень1
	|	КОНЕЦ КАК УпаковкаУровень1Справка2,
	|	ДанныеУпаковок.УпаковкаУровень1.ТипШтрихкода                                            КАК УпаковкаУровень1ТипШтрихкода,
	|	ДанныеУпаковок.УпаковкаУровень1.ТипУпаковки                                             КАК УпаковкаУровень1ТипУпаковки,
	|	ДанныеУпаковок.УпаковкаУровень1.ЗначениеШтрихкода                                       КАК УпаковкаУровень1Штрихкод,
	|	ДанныеУпаковок.УпаковкаУровень1.Номенклатура                                            КАК УпаковкаУровень1Номенклатура,
	|	ДанныеУпаковок.УпаковкаУровень1.Характеристика                                          КАК УпаковкаУровень1Характеристика,
	|	ДанныеУпаковок.УпаковкаУровень1.Серия                                                   КАК УпаковкаУровень1Серия,
	|	ДанныеУпаковок.УпаковкаУровень1.ХешСумма                                                КАК УпаковкаУровень1ХешСумма,
	|	ВЫБОР
	|		КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковкиУровень1.Статус, &ПустойСтатус)
	|		КОГДА ЕСТЬNULL(СтатусыУпаковкиУровень1.Справка2, &ПустаяСправка2) = ДанныеУпаковок.Справка2Уровень1 ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковкиУровень1.Статус, &ПустойСтатус)
	|		ИНАЧЕ
	|			&ОшибкаЧтенияСтатуса
	|	КОНЕЦ КАК УпаковкаУровень1Статус,
	|	ЕСТЬNULL(СтатусыУпаковкиУровень1.АлкогольнаяПродукция, ДанныеУпаковок.АлкогольнаяПродукцияУровень1) КАК УпаковкаУровень1АлкогольнаяПродукция,
	|
	|	ДанныеУпаковок.УпаковкаУровень2                                                         КАК УпаковкаУровень2,
	|	ДанныеУпаковок.ИдентификаторСтрокиУровень2                                              КАК УпаковкаУровень2ИдентификаторСтроки,
	|	ВЫБОР КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|		ЕСТЬNULL(СтатусыУпаковкиУровень2.Справка2, &ПустаяСправка2)
	|	ИНАЧЕ
	|		ДанныеУпаковок.Справка2Уровень2
	|	КОНЕЦ КАК УпаковкаУровень2Справка2,
	|	ДанныеУпаковок.УпаковкаУровень2.ТипШтрихкода                                            КАК УпаковкаУровень2ТипШтрихкода,
	|	ДанныеУпаковок.УпаковкаУровень2.ТипУпаковки                                             КАК УпаковкаУровень2ТипУпаковки,
	|	ДанныеУпаковок.УпаковкаУровень2.ЗначениеШтрихкода                                       КАК УпаковкаУровень2Штрихкод,
	|	ДанныеУпаковок.УпаковкаУровень2.Номенклатура                                            КАК УпаковкаУровень2Номенклатура,
	|	ДанныеУпаковок.УпаковкаУровень2.Характеристика                                          КАК УпаковкаУровень2Характеристика,
	|	ДанныеУпаковок.УпаковкаУровень2.Серия                                                   КАК УпаковкаУровень2Серия,
	|	ДанныеУпаковок.УпаковкаУровень2.ХешСумма                                                КАК УпаковкаУровень2ХешСумма,
	|	ВЫБОР
	|		КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковкиУровень2.Статус, &ПустойСтатус)
	|		КОГДА ЕСТЬNULL(СтатусыУпаковкиУровень2.Справка2, &ПустаяСправка2) = ДанныеУпаковок.Справка2Уровень2 ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковкиУровень2.Статус, &ПустойСтатус)
	|		ИНАЧЕ
	|			&ОшибкаЧтенияСтатуса
	|	КОНЕЦ КАК УпаковкаУровень2Статус,
	|	ЕСТЬNULL(СтатусыУпаковкиУровень2.АлкогольнаяПродукция, ДанныеУпаковок.АлкогольнаяПродукцияУровень2) КАК УпаковкаУровень2АлкогольнаяПродукция,
	|
	|	ДанныеУпаковок.УпаковкаУровень3                                                         КАК УпаковкаУровень3,
	|	ДанныеУпаковок.ИдентификаторСтрокиУровень3                                              КАК УпаковкаУровень3ИдентификаторСтроки,
	|	ВЫБОР КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|		ЕСТЬNULL(СтатусыУпаковкиУровень3.Справка2, &ПустаяСправка2)
	|	ИНАЧЕ
	|		ДанныеУпаковок.Справка2Уровень3
	|	КОНЕЦ КАК УпаковкаУровень3Справка2,
	|	ДанныеУпаковок.УпаковкаУровень3.ТипШтрихкода                                            КАК УпаковкаУровень3ТипШтрихкода,
	|	ДанныеУпаковок.УпаковкаУровень3.ТипУпаковки                                             КАК УпаковкаУровень3ТипУпаковки,
	|	ДанныеУпаковок.УпаковкаУровень3.ЗначениеШтрихкода                                       КАК УпаковкаУровень3Штрихкод,
	|	ДанныеУпаковок.УпаковкаУровень3.Номенклатура                                            КАК УпаковкаУровень3Номенклатура,
	|	ДанныеУпаковок.УпаковкаУровень3.Характеристика                                          КАК УпаковкаУровень3Характеристика,
	|	ДанныеУпаковок.УпаковкаУровень3.Серия                                                   КАК УпаковкаУровень3Серия,
	|	ДанныеУпаковок.УпаковкаУровень3.ХешСумма                                                КАК УпаковкаУровень3ХешСумма,
	|	ВЫБОР
	|		КОГДА &ЗаполнитьСправки2ИзРегистра ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковкиУровень3.Статус, &ПустойСтатус)
	|		КОГДА ЕСТЬNULL(СтатусыУпаковкиУровень3.Справка2, &ПустаяСправка2) = ДанныеУпаковок.Справка2Уровень3 ТОГДА
	|			ЕСТЬNULL(СтатусыУпаковкиУровень3.Статус, &ПустойСтатус)
	|		ИНАЧЕ
	|			&ОшибкаЧтенияСтатуса
	|	КОНЕЦ КАК УпаковкаУровень3Статус,
	|	ЕСТЬNULL(СтатусыУпаковкиУровень3.АлкогольнаяПродукция, ДанныеУпаковок.АлкогольнаяПродукцияУровень3) КАК УпаковкаУровень3АлкогольнаяПродукция
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АкцизныеМаркиЕГАИС КАК СтатусыУпаковки
	|		ПО ДанныеУпаковок.Упаковка = СтатусыУпаковки.АкцизнаяМарка
	|			И (СтатусыУпаковки.ОрганизацияЕГАИС = ДанныеУпаковок.ОрганизацияЕГАИС)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АкцизныеМаркиЕГАИС КАК СтатусыУпаковкиУровень1
	|		ПО ДанныеУпаковок.УпаковкаУровень1 = СтатусыУпаковкиУровень1.АкцизнаяМарка
	|			И (СтатусыУпаковкиУровень1.ОрганизацияЕГАИС = ДанныеУпаковок.ОрганизацияЕГАИС)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АкцизныеМаркиЕГАИС КАК СтатусыУпаковкиУровень2
	|		ПО ДанныеУпаковок.УпаковкаУровень2 = СтатусыУпаковкиУровень2.АкцизнаяМарка
	|			И (СтатусыУпаковкиУровень2.ОрганизацияЕГАИС = ДанныеУпаковок.ОрганизацияЕГАИС)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АкцизныеМаркиЕГАИС КАК СтатусыУпаковкиУровень3
	|		ПО ДанныеУпаковок.УпаковкаУровень3 = СтатусыУпаковкиУровень3.АкцизнаяМарка
	|			И (СтатусыУпаковкиУровень3.ОрганизацияЕГАИС = ДанныеУпаковок.ОрганизацияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВложенныеШтрихкодыУпаковокУровень1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВложенныеШтрихкодыУпаковокУровень2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВложенныеШтрихкодыУпаковокУровень3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеУпаковок
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТВложенныеШтрихкодыИсходныеДанные", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаполнитьСправки2ИзРегистра",        Формат(ЗаполнитьСправки2ИзРегистра, "БЛ=ЛОЖЬ; БИ=ИСТИНА"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПустойСтатус",                       "ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОшибкаЧтенияСтатуса",                "ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ОшибкаЧтенияСтатуса)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПустаяСправка2",                     "ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДополнитьКоллекциюРезультатаОбработкиШтрихкода(РезультатОбработкиШтрихкода, ДанныеШтрихкода = Неопределено) Экспорт
	
	РезультатОбработкиШтрихкода.Вставить("Справки2",               Новый Массив);
	РезультатОбработкиШтрихкода.Вставить("ТребуетсяВыборСправки2", Ложь);
	
	// Для вывода сообщения об ошибке.
	РезультатОбработкиШтрихкода.Вставить("АлкогольнаяПродукция", Неопределено);
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода) И ШтрихкодированиеИС.ПрисутствуетАлкогольнаяПродукция(ДанныеШтрихкода.ВидыПродукции) Тогда
		РезультатОбработкиШтрихкода.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
		РезультатОбработкиШтрихкода.Штрихкод             = ДанныеШтрихкода.Штрихкод;
		РезультатОбработкиШтрихкода.ТипШтрихкода         = ДанныеШтрихкода.ТипШтрихкода;
	КонецЕсли;
	
КонецПроцедуры

Функция ИнициализироватьКоллекциюРезультатаОбработкиШтрихкода(ДанныеШтрихкода = Неопределено) Экспорт
	
	РезультатОбработкиШтрихкода = ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода();
	ДополнитьКоллекциюРезультатаОбработкиШтрихкода(РезультатОбработкиШтрихкода, ДанныеШтрихкода);
	РезультатОбработкиШтрихкода.ВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Алкогольная);
	
	Возврат РезультатОбработкиШтрихкода;
	
КонецФункции

Процедура ДополнитьДанныеПоШтрихкодамСпецификой(ДанныеПоШтрихкодам, ПараметрыСканирования) Экспорт
	
	ШтрихкодыУпаковок = Новый Массив;
	
	Если ДанныеПоШтрихкодам.Свойство("ВложенныеШтрихкоды")
		И ДанныеПоШтрихкодам.ВложенныеШтрихкоды <> Неопределено Тогда
		
		ДобавитьКолонкиДляДереваУпаковок(ДанныеПоШтрихкодам.ВложенныеШтрихкоды.ДеревоУпаковок);
		ДобавитьКолонкиДляТаблицыМаркированнаяПродукция(ДанныеПоШтрихкодам.ВложенныеШтрихкоды.МаркированныеТовары);
		
		ШтрихкодыУпаковок = ДанныеПоШтрихкодам.ВложенныеШтрихкоды.МаркированныеТовары.ВыгрузитьКолонку("ШтрихкодУпаковки");
		
	ИначеЕсли ДанныеПоШтрихкодам.Свойство("ОбработанныеШтрихкоды")
		И ДанныеПоШтрихкодам.ОбработанныеШтрихкоды <> Неопределено Тогда
		
		Для Каждого КлючЗначение Из ДанныеПоШтрихкодам.ОбработанныеШтрихкоды Цикл
			ШтрихкодыУпаковок.Добавить(КлючЗначение.Значение.ШтрихкодУпаковки);
		КонецЦикла;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаПолученияСпецификиДанныхШтрихкодов());
	Запрос.УстановитьПараметр("ШтрихкодыУпаковок", ШтрихкодыУпаковок);
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС",  ПараметрыСканирования.ОрганизацияЕГАИС);
	ДанныеСпецифики = Запрос.Выполнить().Выгрузить();
	ДанныеСпецифики.Индексы.Добавить("АкцизнаяМарка");
	
	КодыАлкогольнойПродукции                    = Новый Массив;
	ЭлементыДляЗаполненияАлкогольнойПродукции   = Новый Массив;
	ЗаполнитьАлкогольнуюПродукциюВСтрокахДерева = Ложь;
	
	Если ДанныеПоШтрихкодам.ВложенныеШтрихкоды <> Неопределено Тогда
		
		ЗаполнитьАлкогольнуюПродукциюВСтрокахДерева = Истина;
		Для Каждого СтрокаТЧ Из ДанныеПоШтрихкодам.ВложенныеШтрихкоды.МаркированныеТовары Цикл
			
			ДополнитьДанныеШтрихкода(
				ДанныеСпецифики, СтрокаТЧ, СтрокаТЧ.СтрокаДерева,
				КодыАлкогольнойПродукции, ЭлементыДляЗаполненияАлкогольнойПродукции)
			
		КонецЦикла;
		
		ДополнитьОбработанныеШтрихкодыПоДеревуУпаковок(ДанныеПоШтрихкодам);
		
	ИначеЕсли ДанныеПоШтрихкодам.ОбработанныеШтрихкоды <> Неопределено Тогда
		
		Для Каждого КлючИЗначение Из ДанныеПоШтрихкодам.ОбработанныеШтрихкоды Цикл
			
			ДанныеШтрихкода = КлючИЗначение.Значение;
			
			ДополнитьСвойстваКоллекцииДанныеШтрихкода(ДанныеШтрихкода);
			
			ДополнитьДанныеШтрихкода(
				ДанныеСпецифики, ДанныеШтрихкода, Неопределено,
				КодыАлкогольнойПродукции, ЭлементыДляЗаполненияАлкогольнойПродукции);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если КодыАлкогольнойПродукции.Количество() > 0 Тогда
		СоответствиеАлкогольнойПродукции = ИнтеграцияЕГАИС.СоответствиеАлкогольнойПродукции(КодыАлкогольнойПродукции);
		Для Каждого ДанныеШтрихкода Из ЭлементыДляЗаполненияАлкогольнойПродукции Цикл
			ДанныеШтрихкода.АлкогольнаяПродукция = СоответствиеАлкогольнойПродукции[ДанныеШтрихкода.КодАлкогольнойПродукции];
			Если ЗаполнитьАлкогольнуюПродукциюВСтрокахДерева Тогда
				ДанныеШтрихкода.СтрокаДерева.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
			КонецЕслИ;
		КонецЦикла;	
	КонецЕсли;
	
	Если ЗаполнитьАлкогольнуюПродукциюВСтрокахДерева Тогда
		// Для расчета итогов в дереве упаковок
		Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодыУпаковок(
			ДанныеПоШтрихкодам.ВложенныеШтрихкоды.ДеревоУпаковок,
			Неопределено, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьОбработанныеШтрихкодыПоДеревуУпаковок(ДанныеПоШтрихкодам)
	
	ДеревоУпаковок        = ДанныеПоШтрихкодам.ВложенныеШтрихкоды.ДеревоУпаковок;
	ОбработанныеШтрихкоды = ДанныеПоШтрихкодам.ОбработанныеШтрихкоды;
	
	Для Каждого КлючЗначение Из ОбработанныеШтрихкоды Цикл
		
		ДанныеШтрихкода = КлючЗначение.Значение;
		ДополнитьСвойстваКоллекцииДанныеШтрихкода(ДанныеШтрихкода);
		СтрокаДерева = ДеревоУпаковок.Строки.Найти(КлючЗначение.Ключ, "Штрихкод");
		ЗаполнитьЗначенияСвойств(ДанныеШтрихкода, СтрокаДерева);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьДанныеШтрихкода(ДанныеСпецифики, ДанныеШтрихкода, СтрокаДерева, КодыАлкогольнойПродукции, ЭлементыДляЗаполненияАлкогольнойПродукции)
	
	Отбор = Новый Структура("АкцизнаяМарка", ДанныеШтрихкода.ШтрихкодУпаковки);
	
	НайденныеСтроки = ДанныеСпецифики.НайтиСтроки(Отбор);
	ДанныеСоСпецификой = Неопределено;
	Для Каждого СтрокаПоиска Из НайденныеСтроки Цикл
		
		Если ДанныеСоСпецификой = Неопределено Тогда
			ДанныеСоСпецификой = СтрокаПоиска;
		КонецЕсли;
		
		Если СтрокаПоиска.Приоритет < ДанныеСоСпецификой.Приоритет Тогда
			ДанныеСоСпецификой = СтрокаПоиска;
		КонецЕсли;
		
		Если СтрокаПоиска.Приоритет = 1 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеСоСпецификой <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(ДанныеСоСпецификой.Статус)
			Или ДанныеШтрихкода.Статус = Неопределено Тогда
			ДанныеШтрихкода.Статус = ДанныеСоСпецификой.Статус;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДанныеСоСпецификой.Справка2)
			Или ДанныеШтрихкода.Справка2 = Неопределено Тогда
			ДанныеШтрихкода.Справка2 = ДанныеСоСпецификой.Справка2;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДанныеСоСпецификой.АлкогольнаяПродукция)
			Или ДанныеШтрихкода.АлкогольнаяПродукция = Неопределено Тогда
			ДанныеШтрихкода.АлкогольнаяПродукция    = ДанныеСоСпецификой.АлкогольнаяПродукция;
			ДанныеШтрихкода.КодАлкогольнойПродукции = ДанныеСоСпецификой.КодАлкогольнойПродукции;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция)
		И ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417 Тогда
		
		Если ТипЗнч(ДанныеШтрихкода) = Тип("Структура") Тогда
			Штрихкод = ДанныеШтрихкода.Штрихкод;
		Иначе
			Штрихкод = ДанныеШтрихкода.Штрихкод;
		КонецЕсли;
		
		ДанныеШтрихкода.КодАлкогольнойПродукции = АкцизныеМаркиВызовСервера.КодКлассификатораНоменклатурыЕГАИС(Штрихкод);
		КодыАлкогольнойПродукции.Добавить(ДанныеШтрихкода.КодАлкогольнойПродукции);
		ЭлементыДляЗаполненияАлкогольнойПродукции.Добавить(ДанныеШтрихкода);
		
	КонецЕсли;
	
	Если СтрокаДерева <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(
			СтрокаДерева, ДанныеШтрихкода,
			"Статус, Справка2, АлкогольнаяПродукция, КодАлкогольнойПродукции");
	КонецЕсли;
	
КонецПроцедуры

Функция РезультатОбработкиШтрихкодаМаркируемойПродукции(Форма, ДанныеШтрихкода, ПараметрыСканирования) Экспорт
	
	РезультатОбработкиШтрихкода = Неопределено;
	Штрихкод                    = ДанныеШтрихкода.Штрихкод;
	
	Если ЭтоШтрихкодАкцизнойМарки(Штрихкод) Тогда
		
		ДанныеДокументаОснования    = ШтрихкодированиеИС.ДанныеДокументаОснования(ПараметрыСканирования);
		УникальныйИдентификатор     = Форма.УникальныйИдентификатор;
		РезультатОбработкиШтрихкода = РезультатОбработкиШтрихкодаАкцизнойМарки(ДанныеШтрихкода, ПараметрыСканирования, ДанныеДокументаОснования, УникальныйИдентификатор);
		
		Если Не РезультатОбработкиШтрихкода.ТребуетсяВыборНоменклатуры Тогда
			
			РезультатОбработкиШтрихкода = ШтрихкодированиеИС.ОбработатьДанныеШтрихкода(Форма, ДанныеШтрихкода, ПараметрыСканирования);
			
		КонецЕсли;
		
	ИначеЕсли ЭтоШтрихкодСНомеромИСерией(Штрихкод) Тогда
		
		РезультатОбработкиШтрихкода = РезультатОбработкиШтрихкодаСНомеромИСерией(Форма, ДанныеШтрихкода, ПараметрыСканирования);
		
	КонецЕсли;
	
	Возврат РезультатОбработкиШтрихкода;
	
КонецФункции

Функция РезультатОбработкиШтрихкодаМаркируемойПродукцииПриОшибках(ДанныеШтрихкода) Экспорт
	
	РезультатДобавления = ИнициализироватьКоллекциюРезультатаОбработкиШтрихкода(ДанныеШтрихкода);
	РезультатДобавления.Штрихкод     = ДанныеШтрихкода.Штрихкод;
	РезультатДобавления.ТипШтрихкода = ДанныеШтрихкода.ТипШтрихкода;
	РезультатДобавления.ТекстОшибки  = ДанныеШтрихкода.ТекстОшибки;
	
	Возврат РезультатДобавления;
	
КонецФункции

Процедура ДополнитьРезультатДобавленияШтрихкодаПриОшибках(РезультатДобавления, ДанныеШтрихкода) Экспорт
	
	РезультатДобавления.Вставить("Справки2",               Новый Массив);
	РезультатДобавления.Вставить("ТребуетсяВыборСправки2", Ложь);
	РезультатДобавления.Вставить("АлкогольнаяПродукция",   Неопределено);
	РезультатДобавления.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
	
КонецПроцедуры

Процедура ВыполнитьПроверкуНаОшибки(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки) Экспорт

	Если Не ЕстьОшибки Тогда
		ВыполнитьПроверкуНаОшибкиКонтрольАкцизныхМарок(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки);
	КонецЕсли;
	
	Если Не ЕстьОшибки Тогда
		ВыполнитьПроверкуНаОшибкиПоДокументуОснования(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки);
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеНеизвестнойМаркируемойПродукции(Штрихкоды, ПараметрыСканирования) Экспорт

	ДанныеНеизвестнойМаркируемойПродукции = Новый Соответствие();
	ШтрихкодыАкцизныхМарок                = Новый Массив;
	ШтрихкодыМарокСНомеромИСерией         = Новый Массив;
	
	Для Каждого Штрихкод Из Штрихкоды Цикл
		
		ТипШтрихкодаАкцизнойМарки = Неопределено;
		Если АкцизныеМаркиВызовСервера.ЭтоШтрихкодАкцизнойМарки(Штрихкод, ТипШтрихкодаАкцизнойМарки) Тогда
			
			ШтрихкодыАкцизныхМарок.Добавить(Штрихкод);
			
		ИначеЕсли ЭтоШтрихкодСНомеромИСерией(Штрихкод) Тогда
			
			ШтрихкодыМарокСНомеромИСерией.Добавить(Штрихкод);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ШтрихкодыАкцизныхМарок.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(
			ДанныеНеизвестнойМаркируемойПродукции,
			ДанныеНеизвестныхШтрихкодовАкцизныхМарок(ШтрихкодыАкцизныхМарок, ПараметрыСканирования));
	КонецЕсли;
	
	Если ШтрихкодыМарокСНомеромИСерией.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(
			ДанныеНеизвестнойМаркируемойПродукции,
			ДанныеНеизвестныхШтрихкодовСНомеромИСерией(ШтрихкодыМарокСНомеромИСерией));
	КонецЕсли;
	
	Возврат ДанныеНеизвестнойМаркируемойПродукции;
	
КонецФункции

Процедура ДополнитьПараметрыЗаполненияТабличнойЧасти(ПараметрыЗаполнения) Экспорт
	
	ПараметрыЗаполнения.Вставить("ПроверитьСериюРассчитатьСтатус", Ложь);
	
КонецПроцедуры

Функция РезультатОбработкиШтрихкодаАкцизнойМарки(ДанныеШтрихкода, ПараметрыСканирования, ДанныеДокументаОснования, УникальныйИдентификатор) Экспорт
	
	УчитыватьДанныеВыбора = Ложь;
	ДанныеВыбора          = ПараметрыСканирования.ДанныеВыбораПоМаркируемойПродукции;
	
	РезультатОбработки = ИнициализироватьКоллекциюРезультатаОбработкиШтрихкода(ДанныеШтрихкода);
	РезультатОбработки.АдресДанныхШтрихкода = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, УникальныйИдентификатор);
	РезультатОбработки.ТекстОшибки          = ДанныеШтрихкода.ТекстОшибки;
	
	Если ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix
			И ДанныеШтрихкода.Справки2.Количество() > 0
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.Справка2) Тогда
		
		РезультатОбработки.ТребуетсяВыборСправки2 = Истина;
		
		Для Каждого ДанныеСправки2 Из ДанныеШтрихкода.Справки2 Цикл
			РезультатОбработки.Справки2.Добавить(ДанныеСправки2.Справка2);
		КонецЦикла;
		
	ИначеЕсли Не ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура)
			И ПараметрыСканирования.ЗапрашиватьНоменклатуру
			И (ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix
			Или ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417) Тогда
			
		Если ДанныеВыбора <> Неопределено Тогда
			
			Если ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417
					И ДанныеВыбора.ТипШтрихКода = Перечисления.ТипыШтрихкодов.PDF417
					И ЗначениеЗаполнено(ДанныеВыбора.АлкогольнаяПродукция)
					И ДанныеВыбора.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция
					И ЗначениеЗаполнено(ДанныеВыбора.Номенклатура) Тогда
				
				УчитыватьДанныеВыбора = Истина;
				
			ИначеЕсли ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix
					И ДанныеВыбора.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix Тогда
						
				УчитыватьДанныеВыбора = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Не ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция)
			И ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix
			И ПараметрыСканирования.ЗапрашиватьНоменклатуру Тогда
		
		Если ДанныеВыбора <> Неопределено
				И ДанныеВыбора.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix Тогда
			
			УчитыватьДанныеВыбора = Истина;
		
		КонецЕсли;
	
	КонецЕсли;
	
	Если УчитыватьДанныеВыбора Тогда
		
		ДанныеШтрихкода.АлкогольнаяПродукция = ДанныеВыбора.АлкогольнаяПродукция;
		ДанныеШтрихкода.Номенклатура         = ДанныеВыбора.Номенклатура;
		ДанныеШтрихкода.Характеристика       = ДанныеВыбора.Характеристика;
		ДанныеШтрихкода.Серия                = ДанныеВыбора.Серия;
		
		Если ЗначениеЗаполнено(ДанныеШтрихкода.ШтрихкодУпаковки) Тогда
			
			ЗаписатьДанныеВыбораПоАкцизнойМарке(ДанныеШтрихкода, ДанныеВыбора);
			
		КонецЕсли;
		
	КонецЕсли;

	Если Не ИнтеграцияИСКлиентСервер.ЭтоУпаковка(ДанныеШтрихКода.ТипУпаковки)
			И ПараметрыСканирования.ЗапрашиватьНоменклатуру
			И (Не ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура)
			Или Не ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция)) Тогда
		
		РезультатОбработки.ТребуетсяВыборНоменклатуры = Истина;
		
	КонецЕсли;
	
	Если Не ИнтеграцияИСКлиентСервер.ЭтоУпаковка(ДанныеШтрихКода.ТипУпаковки)
			И ПараметрыСканирования.ЗапрашиватьНоменклатуру
			И ЗначениеЗаполнено(ПараметрыСканирования.ДокументОснование)
			И Не РезультатОбработки.ТребуетсяВыборНоменклатуры
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.Серия) Тогда
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("Номенклатура", ДанныеШтрихкода.Номенклатура);
		ПараметрыПоиска.Вставить("Характеристика", ДанныеШтрихкода.Характеристика);
		
		НайденныеСтроки = ДанныеДокументаОснования.НайтиСтроки(ПараметрыПоиска);
		Если НайденныеСтроки.Количество() > 0
				И ЗначениеЗаполнено(НайденныеСтроки[0].Серия) Тогда
			
			ДанныеВыбора = ПараметрыСканирования.ДанныеВыбораПоМаркируемойПродукции;
			
			Если ДанныеВыбора <> Неопределено
					И ДанныеВыбора.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция
					И ДанныеВыбора.Номенклатура = ДанныеШтрихкода.Номенклатура
					И ДанныеВыбора.Характеристика = ДанныеШтрихкода.Характеристика
					И ЗначениеЗаполнено(ДанныеВыбора.Серия) Тогда
				
				ДанныеШтрихкода.Серия = ДанныеВыбора.Серия;
				
				Если ЗначениеЗаполнено(ДанныеШтрихкода.ШтрихкодУпаковки) Тогда
				
					ЗаписатьДанныеВыбораПоАкцизнойМарке(ДанныеШтрихкода, ДанныеВыбора);
				
				КонецЕсли
				
			Иначе
				
				РезультатОбработки.ТребуетсяВыборНоменклатуры = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РезультатОбработки.ТребуетсяВыборНоменклатуры Тогда
		
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("АлкогольнаяПродукция",          ДанныеШтрихкода.АлкогольнаяПродукция);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("КодАлкогольнойПродукции",       ДанныеШтрихкода.КодАлкогольнойПродукции);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("АкцизнаяМарка",                 ДанныеШтрихкода.ШтрихкодУпаковки);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("ТипШтрихкода",                  ДанныеШтрихкода.ТипШтрихкода);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("ТипУпаковки",                   ДанныеШтрихкода.ТипУпаковки);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("Штрихкод",                      ДанныеШтрихкода.Штрихкод);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("Номенклатура",                  ДанныеШтрихкода.Номенклатура);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("Характеристика",                ДанныеШтрихкода.Характеристика);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("АдресДанныхДокументаОснования", ПараметрыСканирования.АдресДанныхДокументаОснования);
		РезультатОбработки.ПараметрыВыбораНоменклатуры.Вставить("ДокументОснование",             ПараметрыСканирования.ДокументОснование);
		
	КонецЕсли;
	
	Возврат РезультатОбработки;
	
КонецФункции

Процедура ДополнитьСвойстваКоллекцииДанныеШтрихкода(КоллекцияДанныеШтрихкода) Экспорт
	
	КоллекцияДанныеШтрихкодаДляДополнения = Новый Структура;
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("АлкогольнаяПродукция",    Неопределено);
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("КодАлкогольнойПродукции", "");
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("НомерМарки",              "");
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("СерияМарки",              "");
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("Справка2",                Неопределено);
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("Справки2",                Новый Массив);
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("Статус",                  Неопределено);
	КоллекцияДанныеШтрихкодаДляДополнения.Вставить("ТипМарки",                "");
	
	Для Каждого КлючЗначение Из КоллекцияДанныеШтрихкодаДляДополнения Цикл
		
		Если Не КоллекцияДанныеШтрихкода.Свойство(КлючЗначение.Ключ) Тогда
			КоллекцияДанныеШтрихкода.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьДанныеШтрихкодаПоСправке2(ДанныеШтрихкода, Справка2) Экспорт
	
	ДанныеШтрихкода.Справка2 = Справка2;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Справки2ЕГАИС.АлкогольнаяПродукция           КАК АлкогольнаяПродукция,
	|	Справки2ЕГАИС.АлкогольнаяПродукция.Код       КАК КодАлкогольнойПродукции,
	|	Справки2ЕГАИС.ДокументОснование              КАК ДокументОснование,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура   КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.Серия          КАК Серия
	|ПОМЕСТИТЬ ВтДанные
	|ИЗ
	|	Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Справка2 = Справки2ЕГАИС.Ссылка
	|ГДЕ
	|	Справки2ЕГАИС.Ссылка = &Справка2
	|
	|;
	|ВЫБРАТЬ
	|	1                               КАК Приоритет,
	|	Товары.Справка2                 КАК Справка2,
	|	Товары.АлкогольнаяПродукция     КАК АлкогольнаяПродукция,
	|	Товары.АлкогольнаяПродукция.Код КАК КодАлкогольнойПродукции,
	|	Товары.Номенклатура             КАК Номенклатура,
	|	Товары.Характеристика           КАК Характеристика,
	|	Товары.Серия                    КАК Серия
	|ПОМЕСТИТЬ ВтСопоставлениеНоменклатуры
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДанные КАК ВтДанные
	|		ПО ВтДанные.ДокументОснование = Товары.Ссылка
	|ГДЕ
	|	Товары.Справка2 = &Справка2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                               КАК Приоритет,
	|	Товары.Справка2                 КАК Справка2,
	|	Товары.АлкогольнаяПродукция     КАК АлкогольнаяПродукция,
	|	Товары.АлкогольнаяПродукция.Код КАК КодАлкогольнойПродукции,
	|	Товары.Номенклатура             КАК Номенклатура,
	|	Товары.Характеристика           КАК Характеристика,
	|	Товары.Серия                    КАК Серия
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДанные КАК ВтДанные
	|		ПО ВтДанные.ДокументОснование = Товары.Ссылка
	|ГДЕ
	|	Товары.Справка2 = &Справка2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                КАК Приоритет,
	|	ВтДанные.АлкогольнаяПродукция    КАК АлкогольнаяПродукция,
	|	ВтДанные.КодАлкогольнойПродукции КАК КодАлкогольнойПродукции,
	|	ВтДанные.ДокументОснование       КАК ДокументОснование,
	|	ВтДанные.Номенклатура            КАК Номенклатура,
	|	ВтДанные.Характеристика          КАК Характеристика,
	|	ВтДанные.Серия                   КАК Серия
	|ИЗ
	|	ВтДанные КАК ВтДанные
	|
	|;
	|ВЫБРАТЬ
	|	ВтСопоставлениеНоменклатуры.Приоритет               КАК Приоритет,
	|	ВтСопоставлениеНоменклатуры.АлкогольнаяПродукция    КАК АлкогольнаяПродукция,
	|	ВтСопоставлениеНоменклатуры.КодАлкогольнойПродукции КАК КодАлкогольнойПродукции,
	|	ВтСопоставлениеНоменклатуры.Номенклатура            КАК Номенклатура,
	|	ВтСопоставлениеНоменклатуры.Характеристика          КАК Характеристика,
	|	ВтСопоставлениеНоменклатуры.Серия                   КАК Серия
	|ИЗ
	|	ВтСопоставлениеНоменклатуры
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет ВОЗР
	|");
	
	Запрос.УстановитьПараметр("Справка2", Справка2);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ДанныеШтрихкода.АлкогольнаяПродукция    = Выборка.АлкогольнаяПродукция;
		ДанныеШтрихкода.КодАлкогольнойПродукции = Выборка.КодАлкогольнойПродукции;
		
		Если Выборка.Количество() = 1
			Или Выборка.Приоритет = 1 Тогда
			ДанныеШтрихкода.Номенклатура   = Выборка.Номенклатура;
			ДанныеШтрихкода.Характеристика = Выборка.Характеристика;
			ДанныеШтрихкода.Серия          = Выборка.Серия;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОбработатьВыборНоменклатуры(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения) Экспорт
	
	ПараметрыСканирования = ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования(Форма);
	
	ДанныеШтрихкода = ОбработатьДанныеШтрихкодаПослеВыбораНоменклатуры(РезультатВыбора, РезультатОбработкиШтрихкода);
	
	Если ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции Тогда
		ШтрихкодированиеЕГАИСКлиентСервер.ОбработатьСохраненныйВыборДанныхПоАлкогольнойПродукции(Форма, ДанныеШтрихкода);
	КонецЕсли;
	
	ТипУпаковки = РезультатОбработкиШтрихкода.ПараметрыВыбораНоменклатуры.ТипУпаковки;
	ВложенныеШтрихкоды = Неопределено;
	
	Если ИнтеграцияИСКлиентСервер.ЭтоУпаковка(ТипУпаковки) Тогда
		
		ВложенныеШтрихкоды = ПолучитьИзВременногоХранилища(РезультатОбработкиШтрихкода.АдресДереваУпаковок);
		
	КонецЕсли;
	
	РезультатДобавленияШтрихкодаВДокумент = ШтрихкодированиеИС.ОбработатьДанныеШтрихкода(
		Форма, ДанныеШтрихкода, ПараметрыСканирования, ВложенныеШтрихкоды);
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

Функция ОбработатьДанныеШтрихкодаПослеВыбораНоменклатуры(РезультатВыбора, РезультатОбработкиШтрихкода) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеШтрихкода = ПолучитьИзВременногоХранилища(РезультатОбработкиШтрихкода.АдресДанныхШтрихкода);
	
	Если Не ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция) Тогда
		ДанныеШтрихкода.АлкогольнаяПродукция    = РезультатВыбора.АлкогольнаяПродукция;
		ДанныеШтрихкода.КодАлкогольнойПродукции = РезультатВыбора.КодАлкогольнойПродукции;
	КонецЕсли;
	
	ДанныеШтрихкода.ДополнительныеПараметры = РезультатВыбора.ДополнительныеПараметры;
	
	Если ДанныеШтрихкода.Номенклатура <> РезультатВыбора.Номенклатура
		Или ДанныеШтрихкода.Характеристика <> РезультатВыбора.Характеристика
		Или ДанныеШтрихкода.Серия <> РезультатВыбора.Серия Тогда
		
		ДанныеШтрихкода.Номенклатура   = РезультатВыбора.Номенклатура;
		ДанныеШтрихкода.Характеристика = РезультатВыбора.Характеристика;
		ДанныеШтрихкода.Серия          = РезультатВыбора.Серия;
		
		Если ДанныеШтрихкода.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			
			Если ЗначениеЗаполнено(ДанныеШтрихкода.ШтрихкодУпаковки) Тогда
				ШтрихкодУпаковкиОбъект = ДанныеШтрихкода.ШтрихкодУпаковки.ПолучитьОбъект();
				ШтрихкодУпаковкиОбъект.Номенклатура   = РезультатВыбора.Номенклатура;
				ШтрихкодУпаковкиОбъект.Характеристика = РезультатВыбора.Характеристика;
				ШтрихкодУпаковкиОбъект.Серия          = РезультатВыбора.Серия;
				ШтрихкодУпаковкиОбъект.Записать();
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция) Тогда
				СоответствиеНоменклатурыЕГАИС = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
				СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
				СоответствиеНоменклатурыЕГАИС.Номенклатура         = ДанныеШтрихкода.Номенклатура;
				СоответствиеНоменклатурыЕГАИС.Характеристика       = ДанныеШтрихкода.Характеристика;
				СоответствиеНоменклатурыЕГАИС.Серия                = ДанныеШтрихкода.Серия;
				СоответствиеНоменклатурыЕГАИС.Справка2             = ДанныеШтрихкода.Справка2;
				СоответствиеНоменклатурыЕГАИС.Записать();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого ДанныеМаркированногоТовара Из ДанныеШтрихкода.МаркированныеТовары Цикл
		
		Если Не ЗначениеЗаполнено(ДанныеМаркированногоТовара.Номенклатура) Тогда
			ДанныеМаркированногоТовара.Номенклатура   = РезультатВыбора.Номенклатура;
			ДанныеМаркированногоТовара.Характеристика = РезультатВыбора.Характеристика;
			ДанныеМаркированногоТовара.Серия          = РезультатВыбора.Серия;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДанныеМаркированногоТовара.АлкогольнаяПродукция) Тогда
			ДанныеМаркированногоТовара.АлкогольнаяПродукция    = РезультатВыбора.АлкогольнаяПродукция;
			ДанныеМаркированногоТовара.КодАлкогольнойПродукции = РезультатВыбора.КодАлкогольнойПродукции;
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ДанныеШтрихкода, РезультатОбработкиШтрихкода.АдресДанныхШтрихкода);
	
	Возврат ДанныеШтрихкода;
	
КонецФункции

Функция ТипШтрихкода(Штрихкод, ТипУпаковки) Экспорт
	
	Если ИнтеграцияИСКлиентСервер.ЭтоУпаковка(ТипУпаковки) Тогда
		Возврат ТипШтрихкодаУпаковки(Штрихкод);
	Иначе
		Возврат ТипШтрихкодаМаркируемойПродукции(Штрихкод);
	КонецЕсли;

КонецФункции

Процедура ДополнитьПараметрыФормированияВложенныхШтрихкодов(ПараметрыФормирования) Экспорт
	
	ПараметрыФормирования.Вставить("ЗаполнитьСправки2ИзРегистра",     Ложь);
	ПараметрыФормирования.Вставить("ИмяПоляОрганизацияЕГАИС",         "ОрганизацияЕГАИС");
	ПараметрыФормирования.Вставить("ИмяПоляАлкогольнаяПродукция",     "АлкогольнаяПродукция");
	ПараметрыФормирования.Вставить("ИспользоватьИдентификаторСтроки", Ложь);
	ПараметрыФормирования.Вставить("ИмяВременнойТаблицы",             "ВТВложенныеШтрихкодыИсходныеДанные");
	
КонецПроцедуры

Функция ВложенныеШтрихкодыУпаковокПоДокументу(ДокументСсылка, ЗаполнитьСправки2ИзРегистра = Ложь) Экспорт
	
	ПараметрыФормированияТекстаЗапроса = ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
	ПараметрыФормированияТекстаЗапроса.ДокументСсылка              = ДокументСсылка;
	ПараметрыФормированияТекстаЗапроса.ЗаполнитьСправки2ИзРегистра = ЗаполнитьСправки2ИзРегистра;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС") 
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктСписанияЕГАИС") 
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекЕГАИС") 
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекЕГАИСВозврат") Тогда
			
		ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Истина;
		ПараметрыФормированияТекстаЗапроса.ИмяПоляОрганизацияЕГАИС         = "ОрганизацияЕГАИС";
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
	
		ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Ложь;
		ПараметрыФормированияТекстаЗапроса.ИмяПоляОрганизацияЕГАИС         = "Грузополучатель";
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Истина;
		ПараметрыФормированияТекстаЗапроса.ИмяПоляОрганизацияЕГАИС         = "Грузоотправитель";
	Иначе
		
		ШтрихкодированиеЕГАИСПереопределяемый.ЗаполнитьПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов(
			ПараметрыФормированияТекстаЗапроса, ДокументСсылка);
		
	КонецЕсли;
	
	Возврат ШтрихкодыУпаковокПоДокументу(ПараметрыФормированияТекстаЗапроса);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ШтрихкодыУпаковокПоДокументу(ПараметрыФормированияТекстаЗапроса)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ПараметрыФормированияТекстаЗапроса.ДокументСсылка);
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ПараметрыФормированияТекстаЗапроса.ОрганизацияЕГАИС);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(
		ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса),
		"ВложенныеШтрихкоды");
	
	РезультатыЗапроса = ИнтеграцияИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	ВложенныеШтрихкодыУпаковок = ВложенныеШтрихкодыУпаковокПоВыборкеИМенеджеруВТ(
		РезультатыЗапроса.ВложенныеШтрихкоды.Выбрать(), МенеджерВременныхТаблиц);
	
	Возврат ВложенныеШтрихкодыУпаковок;
	
КонецФункции

Функция ВложенныеШтрихкодыУпаковокПоВыборкеИМенеджеруВТ(ВыборкаПерваяИтерация, МенеджерВременныхТаблиц) Экспорт
	
	ДеревоУпаковок      = ИнициализироватьДеревоУпаковок();
	МаркированныеТовары = ИнициализироватьТаблицуМаркированныеТовары();
	
	МаркированныеТовары.Индексы.Добавить("ШтрихкодУпаковки");
	
	СоответствиеСтрокДереваУпаковок = Новый Соответствие;
	
	ТаблицаШтрихкодов = Новый ТаблицаЗначений;
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодУпаковки",             Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодРодительскойУпаковки", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ИдентификаторСтроки",          Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(36)));
	ТаблицаШтрихкодов.Колонки.Добавить("АлкогольнаяПродукция",         Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("Справка2",                     Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("ОрганизацияЕГАИС",             Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УпаковкиВерхнегоУровня", Новый Соответствие);
	
	НуженПоискВложенныхШтрихкодов = Истина;
	НомерИтерации = 1;
	Пока НуженПоискВложенныхШтрихкодов Цикл
		
		Если НомерИтерации = 1 Тогда
			
			Выборка = ВыборкаПерваяИтерация;
			
		Иначе
			
			ИмяВременнойТаблицы = "ВТВложенныеШтрихкодыИсходныеДанные2";
			
			ТекстыЗапроса = Новый СписокЗначений;
			ТекстыЗапроса.Добавить(
				СтрШаблон(
					"ВЫБРАТЬ
					|	ИсходныеДанные.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
					|	ИсходныеДанные.ИдентификаторСтроки          КАК ИдентификаторСтроки,
					|	ИсходныеДанные.АлкогольнаяПродукция         КАК АлкогольнаяПродукция,
					|	ИсходныеДанные.Справка2                     КАК Справка2,
					|	ИсходныеДанные.ШтрихкодУпаковки             КАК ШтрихкодУпаковки,
					|	ИсходныеДанные.ШтрихкодРодительскойУпаковки КАК ШтрихкодРодительскойУпаковки
					|ПОМЕСТИТЬ %1
					|ИЗ
					|	&ИсходныеДанные КАК ИсходныеДанные", ИмяВременнойТаблицы));
			
			ПараметрыФормированияТекстаЗапроса = ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
			ПараметрыФормированияТекстаЗапроса.ДокументСсылка                  = Неопределено;
			ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Ложь;
			ПараметрыФормированияТекстаЗапроса.ИмяВременнойТаблицы             = ИмяВременнойТаблицы;
			ТекстыЗапроса.Добавить(
				ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса), "ВложенныеШтрихкоды");
			
			Если НомерИтерации > 1 Тогда
				ТекстыЗапроса.Добавить(
					СтрШаблон("УНИЧТОЖИТЬ %1", ИмяВременнойТаблицы));
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("ИсходныеДанные", ТаблицаШтрихкодов);
			РезультатыЗапроса = ИнтеграцияИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
			Выборка = РезультатыЗапроса.ВложенныеШтрихкоды.Выбрать();
			
		КонецЕсли;
		
		ТаблицаШтрихкодов.Очистить();
		
		Пока Выборка.Следующий() Цикл
			
			Если СоответствиеСтрокДереваУпаковок[Выборка.Упаковка] = Неопределено Тогда
				СтрокаРодитель = ДеревоУпаковок.Строки.Добавить();
				ЗаполнитьСтрокуДереваУпаковок(СтрокаРодитель, Выборка, 0, МаркированныеТовары, ДополнительныеПараметры);
				СоответствиеСтрокДереваУпаковок.Вставить(Выборка.Упаковка, СтрокаРодитель);
			Иначе
				СтрокаРодитель = СоответствиеСтрокДереваУпаковок[Выборка.Упаковка];
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.УпаковкаУровень1) Тогда
				
				Если СоответствиеСтрокДереваУпаковок[Выборка.УпаковкаУровень1] = Неопределено Тогда
					СтрокаУпаковкиУровень1 = СтрокаРодитель.Строки.Добавить();
					ЗаполнитьСтрокуДереваУпаковок(СтрокаУпаковкиУровень1, Выборка, 1, МаркированныеТовары, ДополнительныеПараметры);
					СоответствиеСтрокДереваУпаковок.Вставить(Выборка.УпаковкаУровень1, СтрокаУпаковкиУровень1);
				Иначе
					СтрокаУпаковкиУровень1 = СоответствиеСтрокДереваУпаковок[Выборка.УпаковкаУровень1];
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.УпаковкаУровень2) Тогда
					
					Если СоответствиеСтрокДереваУпаковок[Выборка.УпаковкаУровень2] = Неопределено Тогда
						СтрокаУпаковкиУровень2 = СтрокаУпаковкиУровень1.Строки.Добавить();
						ЗаполнитьСтрокуДереваУпаковок(СтрокаУпаковкиУровень2, Выборка, 2, МаркированныеТовары, ДополнительныеПараметры);
						СоответствиеСтрокДереваУпаковок.Вставить(Выборка.УпаковкаУровень2, СтрокаУпаковкиУровень2);
					Иначе
						СтрокаУпаковкиУровень2 = СоответствиеСтрокДереваУпаковок[Выборка.УпаковкаУровень2];
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.УпаковкаУровень3) Тогда
						
						Если СоответствиеСтрокДереваУпаковок[Выборка.УпаковкаУровень3] = Неопределено Тогда
							СтрокаУпаковкиУровень3 = СтрокаУпаковкиУровень2.Строки.Добавить();
							ЗаполнитьСтрокуДереваУпаковок(СтрокаУпаковкиУровень3, Выборка, 3, МаркированныеТовары, ДополнительныеПараметры);
							СоответствиеСтрокДереваУпаковок.Вставить(Выборка.УпаковкаУровень3, СтрокаУпаковкиУровень3);
						Иначе
							СтрокаУпаковкиУровень3 = СоответствиеСтрокДереваУпаковок[Выборка.УпаковкаУровень3];
						КонецЕсли;
						
						НоваяСтрока = ТаблицаШтрихкодов.Добавить();
						НоваяСтрока.ШтрихкодУпаковки     = Выборка.УпаковкаУровень3;
						НоваяСтрока.ИдентификаторСтроки  = Выборка.УпаковкаУровень3ИдентификаторСтроки;
						НоваяСтрока.АлкогольнаяПродукция = Выборка.УпаковкаУровень3АлкогольнаяПродукция;
						НоваяСтрока.Справка2             = Выборка.УпаковкаУровень3Справка2;
						НоваяСтрока.ОрганизацияЕГАИС     = Выборка.ОрганизацияЕГАИС;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НомерИтерации = НомерИтерации + 1;
		НуженПоискВложенныхШтрихкодов = ТаблицаШтрихкодов.Количество() > 0;
		
	КонецЦикла;
	
	КодыАлкогольнойПродукции = Новый Массив;
	Для Каждого СтрокаТЧ Из МаркированныеТовары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция)
			И ЗначениеЗаполнено(СтрокаТЧ.КодАлкогольнойПродукции) Тогда
			
			КодыАлкогольнойПродукции.Добавить(СтрокаТЧ.КодАлкогольнойПродукции);
			
		ИначеЕсли Не ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция)
			И Не ЗначениеЗаполнено(СтрокаТЧ.КодАлкогольнойПродукции)
			И АкцизныеМаркиВызовСервера.ЭтоШтрихкодАкцизнойМарки(СтрокаТЧ.Штрихкод) Тогда
			
			СтрокаТЧ.КодАлкогольнойПродукции = АкцизныеМаркиВызовСервера.КодКлассификатораНоменклатурыЕГАИС(СтрокаТЧ.Штрихкод);
			Если ЗначениеЗаполнено(СтрокаТЧ.СтрокаДерева) Тогда
				СтрокаТЧ.СтрокаДерева.КодАлкогольнойПродукции = СтрокаТЧ.КодАлкогольнойПродукции;
			КонецЕсли;
			
			КодыАлкогольнойПродукции.Добавить(СтрокаТЧ.КодАлкогольнойПродукции);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СоответствиеАлкогольнойПродукции = ИнтеграцияЕГАИС.СоответствиеАлкогольнойПродукции(КодыАлкогольнойПродукции);
	
	Для Каждого СтрокаТЧ Из МаркированныеТовары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция)
			И ЗначениеЗаполнено(СтрокаТЧ.КодАлкогольнойПродукции) Тогда
			
			АлкогольнаяПродукция = СоответствиеАлкогольнойПродукции[СтрокаТЧ.КодАлкогольнойПродукции];
			Если ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
				СтрокаТЧ.АлкогольнаяПродукция = АлкогольнаяПродукция;
				Если ЗначениеЗаполнено(СтрокаТЧ.СтрокаДерева) Тогда
					СтрокаТЧ.СтрокаДерева.АлкогольнаяПродукция = АлкогольнаяПродукция;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодыУпаковок(ДеревоУпаковок, Неопределено, Истина);
	
	Результат = Новый Структура;
	Результат.Вставить("ДеревоУпаковок",      ДеревоУпаковок);
	Результат.Вставить("МаркированныеТовары", МаркированныеТовары);
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьСтрокуДереваУпаковок(СтрокаДерева, Выборка, Уровень, МаркированныеТовары, ДополнительныеПараметры)
	
	ТекстУровень = ?(Уровень = 0, "", "Уровень" + Уровень);
	
	СтрокаДерева.ОрганизацияЕГАИС     = Выборка.ОрганизацияЕГАИС;
	СтрокаДерева.ШтрихкодУпаковки     = Выборка["Упаковка" + ТекстУровень];
	СтрокаДерева.ИдентификаторСтроки  = Выборка["Упаковка" + ТекстУровень + "ИдентификаторСтроки"];
	СтрокаДерева.ТипУпаковки          = Выборка["Упаковка" + ТекстУровень + "ТипУпаковки"];
	СтрокаДерева.ТипШтрихкода         = Выборка["Упаковка" + ТекстУровень + "ТипШтрихкода"];
	СтрокаДерева.Штрихкод             = Выборка["Упаковка" + ТекстУровень + "Штрихкод"];
	СтрокаДерева.Номенклатура         = Выборка["Упаковка" + ТекстУровень + "Номенклатура"];
	СтрокаДерева.Характеристика       = Выборка["Упаковка" + ТекстУровень + "Характеристика"];
	СтрокаДерева.Серия                = Выборка["Упаковка" + ТекстУровень + "Серия"];
	СтрокаДерева.ХешСумма             = Выборка["Упаковка" + ТекстУровень + "ХешСумма"];
	СтрокаДерева.Статус               = Выборка["Упаковка" + ТекстУровень + "Статус"];
	СтрокаДерева.Справка2             = Выборка["Упаковка" + ТекстУровень + "Справка2"];
	СтрокаДерева.АлкогольнаяПродукция = Выборка["Упаковка" + ТекстУровень + "АлкогольнаяПродукция"];
	
	Если СтрокаДерева.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
		
		Если Не ЗначениеЗаполнено(СтрокаДерева.АлкогольнаяПродукция)
			И Не ЗначениеЗаполнено(СтрокаДерева.КодАлкогольнойПродукции)
			И АкцизныеМаркиВызовСервера.ЭтоШтрихкодАкцизнойМарки(СтрокаДерева.Штрихкод) Тогда
			СтрокаДерева.КодАлкогольнойПродукции = АкцизныеМаркиВызовСервера.КодКлассификатораНоменклатурыЕГАИС(СтрокаДерева.Штрихкод);
		КонецЕсли;
		
		СтрокаТаблицы = МаркированныеТовары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаДерева);
		
		СтрокаТаблицы.СтрокаДерева           = СтрокаДерева;
		СтрокаТаблицы.УпаковкаВерхнегоУровня = СтрокаДереваВерхнегоУровня(СтрокаДерева, ДополнительныеПараметры.УпаковкиВерхнегоУровня);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокаДереваВерхнегоУровня(СтрокаДерева, УпаковкиВерхнегоУровня)
	
	УпаковкаВерхнегоУровня = УпаковкиВерхнегоУровня.Получить(СтрокаДерева);
	Если УпаковкаВерхнегоУровня <> Неопределено Тогда
		Возврат УпаковкаВерхнегоУровня;
	КонецЕсли;
	
	Если СтрокаДерева.Родитель <> Неопределено Тогда
		
		УпаковкаВерхнегоУровня = СтрокаДереваВерхнегоУровня(СтрокаДерева.Родитель, УпаковкиВерхнегоУровня);
		
		УпаковкиВерхнегоУровня.Вставить(СтрокаДерева, УпаковкаВерхнегоУровня);
		
		Возврат УпаковкаВерхнегоУровня;
		
	Иначе
		
		Возврат СтрокаДерева;
		
	КонецЕсли;
	
КонецФункции

// Возвращает структуру параметров, на основании которых будет формироваться запрос получения вложенных штрихкодов.
// 
// Параметры:
// Возвращаемое значение:
// 	Структура - Описание:
// * ИмяТабЧастиАкцизныхМарок - Булево - Наименование табличной части, где хранятся Акцизные марки.
// * ЗаполнитьСправки2ИзРегистра - Булево - Истина, если необходимо брать справки 2 из регистра сведений 
// 	Акцизные марки ЕГАИС.
// * ИмяВременнойТаблицы - Строка - Имя временной таблицы, на основании которой будут получены данные.
// * ИмяПоляАлкогольнаяПродукция - Строка - Наименование реквизита табличной части, где хранится значение Алкогольная
// 	продукция.
// * ИмяПоляОрганизацияЕГАИС - Строка - Наименование реквизита, где хранится значение Организация ЕГАИС.
// * ИспользоватьИдентификаторСтроки - Булево - Истина, в том случае, используется идентификатор строк для связи между 
//	 табличной частью с товарами и табличной частью с акцизными марками.
// * ДокументСсылка - Неопределено - Ссылка на документ, для которого необходимо получить данные по штрихкодам упаковок.
Функция ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	
	ВозвращаемоеЗначение.Вставить("ДокументСсылка",                  Неопределено);
	ВозвращаемоеЗначение.Вставить("ИспользоватьИдентификаторСтроки", Ложь);
	ВозвращаемоеЗначение.Вставить("ИмяПоляОрганизацияЕГАИС",         "ОрганизацияЕГАИС");
	ВозвращаемоеЗначение.Вставить("ИмяПоляАлкогольнаяПродукция",     "АлкогольнаяПродукция");
	ВозвращаемоеЗначение.Вставить("ИмяВременнойТаблицы",             "ВТВложенныеШтрихкодыИсходныеДанные");
	ВозвращаемоеЗначение.Вставить("ЗаполнитьСправки2ИзРегистра",     Ложь);
	ВозвращаемоеЗначение.Вставить("ИмяТабЧастиАкцизныхМарок",        "");
	ВозвращаемоеЗначение.Вставить("ОрганизацияЕГАИС",                Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ТипШтрихкодаМаркируемойПродукции(Штрихкод)
	
	ТипШтрихкода = Неопределено;
	
	Если СтрДлина(Штрихкод) = 150 Тогда
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	Иначе
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417;
	КонецЕсли;
	
	Возврат ТипШтрихкода;

КонецФункции

Функция ТипШтрихкодаУпаковки(Штрихкод)
	
	Возврат Перечисления.ТипыШтрихкодов.Code128;
	
КонецФункции

Функция РезультатОбработкиШтрихкодаСНомеромИСерией(Форма, ДанныеШтрихкода, ПараметрыСканирования)
	
	Если ПараметрыСканирования.КонтрольЗаполненияМарокСНомеромИСерией
		И ДанныеШтрихкода.Справки2.Количество() = 0 Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = ИнициализироватьКоллекциюРезультатаОбработкиШтрихкода(ДанныеШтрихкода);
		РезультатДобавленияШтрихкодаВДокумент.ТекстОшибки = СтрШаблон(НСтр("ru='По штрихкоду %1 справок 2 не обнаружено.'"), ДанныеШтрихкода.Штрихкод);
		
	ИначеЕсли ДанныеШтрихкода.Справки2.Количество() > 0
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.Справка2) Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = ИнициализироватьКоллекциюРезультатаОбработкиШтрихкода(ДанныеШтрихкода);
		РезультатДобавленияШтрихкодаВДокумент.ТребуетсяВыборСправки2 = Истина;
		РезультатДобавленияШтрихкодаВДокумент.АдресДанныхШтрихкода = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, Форма.УникальныйИдентификатор);
		
		Для Каждого ДанныеСправки2 Из ДанныеШтрихкода.Справки2 Цикл
			РезультатДобавленияШтрихкодаВДокумент.Справки2.Добавить(ДанныеСправки2.Справка2);
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(ДанныеШтрихкода.Справка2)
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = ИнициализироватьКоллекциюРезультатаОбработкиШтрихкода(ДанныеШтрихкода);
		РезультатДобавленияШтрихкодаВДокумент.ТребуетсяВыборНоменклатуры = Истина;
		РезультатДобавленияШтрихкодаВДокумент.АдресДанныхШтрихкода = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, Форма.УникальныйИдентификатор);
		
		РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("АлкогольнаяПродукция", ДанныеШтрихкода.АлкогольнаяПродукция);
		РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("ТипШтрихкода", Перечисления.ТипыШтрихкодов.DataMatrix);
		
	Иначе
	
		РезультатДобавленияШтрихкодаВДокумент = ШтрихкодированиеИС.ОбработатьДанныеШтрихкода(Форма, ДанныеШтрихкода, ПараметрыСканирования); // ШК с номером и серией
	
	КонецЕсли;
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

Функция ДанныеНеизвестныхШтрихкодовАкцизныхМарок(Штрихкоды, ПараметрыСканирования)
	
	ДанныеНеизвестныхАкцизныхМарок = Новый Соответствие;
	
	Для Каждого Штрихкод Из Штрихкоды Цикл
		
		НайденныеДанные = ДанныеНеизвестныхАкцизныхМарок[Штрихкод];
		Если НайденныеДанные <> Неопределено Тогда
			НайденныеДанные.Количество = НайденныеДанные.Количество + 1;
			Продолжить;
		КонецЕсли;
		
		ТипШтрихкода = ОпределитьТипШтрихкодаАкцизнойМарки(Штрихкод);
		ДанныеШтрихкода = ИнициализироватьДанныеШтрихкодаАкцизнойМарки();
		ДанныеШтрихкода.Количество   = 1;
		ДанныеШтрихкода.Штрихкод     = Штрихкод;
		ДанныеШтрихкода.ТипУпаковки  = Перечисления.ТипыУпаковок.МаркированныйТовар;
		ДанныеШтрихкода.ТипШтрихкода = ТипШтрихкода;
		ДанныеШтрихкода.ВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Алкогольная);
		
		Если ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417 Тогда
			АкцизныеМаркиВызовСервера.ЗаполнитьСопоставленнуюНоменклатуруПоАкцизнойМарке(Штрихкод, ДанныеШтрихкода);
		ИначеЕсли ЗначениеЗаполнено(ПараметрыСканирования.Номенклатура) Тогда
			ДанныеШтрихкода.Номенклатура   = ПараметрыСканирования.Номенклатура;
			ДанныеШтрихкода.Характеристика = ПараметрыСканирования.Характеристика;
		КонецЕсли;
	
		Если ПараметрыСканирования.КонтрольАкцизныхМарок Тогда
			АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(
				ПараметрыСканирования.ОперацияКонтроляАкцизныхМарок,
				ДанныеШтрихкода.Штрихкод,
				ДанныеШтрихкода.ТекстОшибки);
		КонецЕсли;
		
		Если ПараметрыСканирования.СоздаватьШтрихкодУпаковки
			И ПустаяСтрока(ДанныеШтрихкода.ТекстОшибки) Тогда
			
			ДанныеНовойУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СтруктураСозданияШтрихкодаУпаковки();
			ЗаполнитьЗначенияСвойств(ДанныеНовойУпаковки, ДанныеШтрихкода);
			
			ДанныеНовойУпаковки.Штрихкод    = Штрихкод;
			ДанныеНовойУпаковки.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар;
			ДанныеНовойУпаковки.Количество  = 1;
			
			ДанныеШтрихкода.ШтрихкодУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодУпаковки(ДанныеНовойУпаковки);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДанныеШтрихкода.КодАлкогольнойПродукции)
			И ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417 Тогда
			ДанныеШтрихкода.КодАлкогольнойПродукции = АкцизныеМаркиВызовСервера.КодКлассификатораНоменклатурыЕГАИС(ДанныеШтрихкода.Штрихкод);
		КонецЕсли;
		
		ДанныеНеизвестныхАкцизныхМарок.Вставить(Штрихкод, ДанныеШтрихкода);
		
	КонецЦикла;
	
	Возврат ДанныеНеизвестныхАкцизныхМарок;

КонецФункции

Функция ДанныеНеизвестныхШтрихкодовСНомеромИСерией(Штрихкоды)

	Результат = Новый Соответствие;

	ТаблицаНоменклатуры = Новый ТаблицаЗначений;
	ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТаблицаНоменклатуры.Колонки.Добавить("Характеристика");
	ТаблицаНоменклатуры.Колонки.Добавить("Упаковка");

	ТаблицаАлкогольнойПродукции = Новый ТаблицаЗначений;
	ТаблицаАлкогольнойПродукции.Колонки.Добавить("АлкогольнаяПродукция");
	ТаблицаАлкогольнойПродукции.Колонки.Добавить("КодАлкогольнойПродукции");

	Для Каждого Штрихкод Из Штрихкоды Цикл

		Если Результат[Штрихкод] <> Неопределено Тогда
			Результат[Штрихкод].Количество = Результат[Штрихкод].Количество + 1;
			Продолжить;
		КонецЕсли;

		ДанныеШтрихкода = ИнициализироватьДанныеШтрихкодаАкцизнойМарки();
		ДанныеШтрихкода.ТипУпаковки  = Перечисления.ТипыУпаковок.МаркированныйТовар;
		ДанныеШтрихкода.Штрихкод     = Штрихкод;
		ДанныеШтрихкода.Количество   = 1;
		ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
		ДанныеШтрихкода.ВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Алкогольная);

		СтруктураШтрихкода = АкцизныеМаркиКлиентСервер.РазложитьШтрихкодDataMatrix(Штрихкод, ДанныеШтрихкода.ТекстОшибки);

		Если ЗначениеЗаполнено(ДанныеШтрихкода.ТекстОшибки) Тогда
			Результат.Вставить(Штрихкод, ДанныеШтрихкода);
			Продолжить;
		КонецЕсли;

		ДанныеШтрихкода.ТипМарки = СтруктураШтрихкода.ТипМарки;
		ДанныеШтрихкода.СерияМарки = СтруктураШтрихкода.СерияМарки;
		ДанныеШтрихкода.НомерМарки = СтруктураШтрихкода.НомерМарки;

		ДанныеШтрихкода.Справки2 = Справки2ПоШтрихкодуСНомеромИСерией(СтруктураШтрихкода);

		ТаблицаНоменклатуры.Очистить();
		ТаблицаАлкогольнойПродукции.Очистить();

		Для Каждого ДанныеСправки2 Из ДанныеШтрихкода.Справки2 Цикл
			СтрокаТаблицыНоменклатуры = ТаблицаНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыНоменклатуры, ДанныеСправки2);

			СтрокаТаблицыАлкогольнойПродукции = ТаблицаАлкогольнойПродукции.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыАлкогольнойПродукции, ДанныеСправки2);
		КонецЦикла;

		ТаблицаНоменклатуры.Свернуть("Номенклатура, Характеристика, Упаковка");
		ТаблицаАлкогольнойПродукции.Свернуть("АлкогольнаяПродукция, КодАлкогольнойПродукции");

		Если ТаблицаНоменклатуры.Количество() = 1 Тогда
			ДанныеШтрихкода.Номенклатура = ТаблицаНоменклатуры[0].Номенклатура;
			ДанныеШтрихкода.Характеристика = ТаблицаНоменклатуры[0].Характеристика;
			ДанныеШтрихкода.Упаковка = ТаблицаНоменклатуры[0].Упаковка;
		КонецЕсли;

		Если ТаблицаАлкогольнойПродукции.Количество() = 1 Тогда
			ДанныеШтрихкода.КодАлкогольнойПродукции = ТаблицаАлкогольнойПродукции[0].КодАлкогольнойПродукции;
			ДанныеШтрихкода.АлкогольнаяПродукция = ТаблицаАлкогольнойПродукции[0].АлкогольнаяПродукция;
		КонецЕсли;

		Если ДанныеШтрихкода.Справки2.Количество() = 1 Тогда
			ДанныеШтрихкода.Справка2 = ДанныеШтрихкода.Справки2[0].Справка2;
		КонецЕсли;

		Результат.Вставить(Штрихкод, ДанныеШтрихкода);

	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция Справки2ПоШтрихкодуСНомеромИСерией(СтруктураШтрихкода)
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипМарки", СтруктураШтрихкода.ТипМарки);
	Запрос.УстановитьПараметр("СерияМарки", СтруктураШтрихкода.СерияМарки);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка                                  КАК Ссылка,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.НачальныйНомер                          КАК НачальныйНомер,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.КонечныйНомер                           КАК КонечныйНомер,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.АлкогольнаяПродукция             КАК АлкогольнаяПродукция,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.АлкогольнаяПродукция.Код         КАК КодАлкогольнойПродукции,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.НомерТТН                КАК НомерТТН,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.ДатаТТН                 КАК ДатаТТН,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.ДатаРозлива             КАК ДатаРозлива,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.Количество              КАК КоличествоПоСправке1,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.НомерПодтвержденияЕГАИС КАК НомерПодтвержденияЕГАИС,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.ДатаПодтвержденияЕГАИС  КАК ДатаПодтвержденияЕГАИС
	|ИЗ
	|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
	|ГДЕ
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.ТипМарки = &ТипМарки
	|	И Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.СерияМарки = &СерияМарки";
	
	НомерМарки = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(СтруктураШтрихкода.НомерМарки);
	
	ТаблицаСопоставления = Новый ТаблицаЗначений;
	ТаблицаСопоставления.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	
	ДобавленныеСправки2 = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НачальныйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Выборка.НачальныйНомер);
		КонечныйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Выборка.КонечныйНомер);
		
		Если НомерМарки >= НачальныйНомер И НомерМарки <= КонечныйНомер Тогда
			Если ДобавленныеСправки2.Найти(Выборка.Ссылка) = Неопределено Тогда
				ДанныеСправки2 = Новый Структура;
				ДанныеСправки2.Вставить("Справка2",                Выборка.Ссылка);
				ДанныеСправки2.Вставить("АлкогольнаяПродукция",    Выборка.АлкогольнаяПродукция);
				ДанныеСправки2.Вставить("КодАлкогольнойПродукции", Выборка.КодАлкогольнойПродукции);
				ДанныеСправки2.Вставить("НомерТТН",                Выборка.НомерТТН);
				ДанныеСправки2.Вставить("ДатаТТН",                 Выборка.ДатаТТН);
				ДанныеСправки2.Вставить("ДатаРозлива",             Выборка.ДатаРозлива);
				ДанныеСправки2.Вставить("КоличествоПоСправке1",    Выборка.КоличествоПоСправке1);
				ДанныеСправки2.Вставить("НомерПодтвержденияЕГАИС", Выборка.НомерПодтвержденияЕГАИС);
				ДанныеСправки2.Вставить("ДатаПодтвержденияЕГАИС",  Выборка.ДатаПодтвержденияЕГАИС);
				ДанныеСправки2.Вставить("Номенклатура");
				ДанныеСправки2.Вставить("Характеристика");
				ДанныеСправки2.Вставить("Упаковка");
				
				СтрокаТаблицы = ТаблицаСопоставления.Найти(Выборка.АлкогольнаяПродукция, "АлкогольнаяПродукция");
				Если СтрокаТаблицы = Неопределено Тогда
					СтрокаТаблицы = ТаблицаСопоставления.Добавить();
					СтрокаТаблицы.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
				КонецЕсли;
				
				Результат.Добавить(ДанныеСправки2);
				ДобавленныеСправки2.Добавить(Выборка.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияЕГАИС.ЗаполнитьСопоставленнуюПродукцию(ТаблицаСопоставления);
	
	Для Каждого ДанныеСправки2 Из Результат Цикл
		СтрокаТаблицы = ТаблицаСопоставления.Найти(ДанныеСправки2.АлкогольнаяПродукция, "АлкогольнаяПродукция");
		Если СтрокаТаблицы <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСправки2, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ОбработатьВыборСправки2(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения)
	
	ПараметрыСканирования = ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования(Форма);
	
	ДанныеШтрихкода = ОбработатьДанныеШтрихкодаПослеВыбораСправки2(РезультатВыбора, РезультатОбработкиШтрихкода);
	
	РезультатОбработки = ШтрихкодированиеИС.ОбработатьДанныеШтрихкода(Форма, ДанныеШтрихкода, ПараметрыСканирования);
	
	Возврат РезультатОбработки;
	
КонецФункции

Функция ТекстЗапросаПолученияСпецификиДанныхШтрихкодов()
	
	Возврат 
	"ВЫБРАТЬ
	|	&ОрганизацияЕГАИС                          КАК ОрганизацияЕГАИС,
	|	ШтрихкодыУпаковокТоваров.Ссылка            КАК АкцизнаяМарка,
	|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК Штрихкод
	|ПОМЕСТИТЬ ШтрихкодыУпаковок
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|ГДЕ
	|	ШтрихкодыУпаковокТоваров.Ссылка В (&ШтрихкодыУпаковок)
	|ИНДЕКСИРОВАТЬ ПО
	|	АкцизнаяМарка,
	|	ОрганизацияЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковок.АкцизнаяМарка                                                                                             КАК АкцизнаяМарка,
	|	ШтрихкодыУпаковок.Штрихкод                                                                                                  КАК Штрихкод,
	|	ШтрихкодыУпаковок.ОрганизацияЕГАИС                                                                                          КАК ОрганизацияЕГАИС,
	|	ЕСТЬNULL(АкцизныеМаркиЕГАИС.Статус,             ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка))                   КАК Статус,
	|	ЕСТЬNULL(АкцизныеМаркиЕГАИС.Справка2,           ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка))                            КАК Справка2,
	|	ЕСТЬNULL(АкцизныеМаркиЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(АкцизныеМаркиЕГАИС.АлкогольнаяПродукция.Код, """")                                                                 КАК КодАлкогольнойПродукции,
	|	1                                                                                                                           КАК Приоритет
	|ИЗ
	|	ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|		ПО ШтрихкодыУпаковок.АкцизнаяМарка = АкцизныеМаркиЕГАИС.АкцизнаяМарка
	|		И ШтрихкодыУпаковок.ОрганизацияЕГАИС = АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковок.АкцизнаяМарка,
	|	ШтрихкодыУпаковок.Штрихкод,
	|	ШтрихкодыУпаковок.ОрганизацияЕГАИС,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка),
	|	ЕСТЬNULL(АкцизныеМаркиЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ЕСТЬNULL(АкцизныеМаркиЕГАИС.АлкогольнаяПродукция.Код, """"),
	|	2
	|ИЗ
	|	ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|		ПО ШтрихкодыУпаковок.АкцизнаяМарка = АкцизныеМаркиЕГАИС.АкцизнаяМарка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШтрихкодыУпаковок.АкцизнаяМарка,
	|	ШтрихкодыУпаковок.Штрихкод,
	|	ШтрихкодыУпаковок.ОрганизацияЕГАИС,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка),
	|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Код, """"),
	|	3
	|ИЗ
	|	ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ШтрихкодыУпаковок.АкцизнаяМарка.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура";
	
КонецФункции

Процедура ДобавитьКолонкиДляТаблицыМаркированнаяПродукция(МаркированныеТовары)
	
	МаркированныеТовары.Колонки.Добавить("ОрганизацияЕГАИС",        Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	МаркированныеТовары.Колонки.Добавить("Статус",                  Неопределено);
	МаркированныеТовары.Колонки.Добавить("Справка2",                Неопределено);
	МаркированныеТовары.Колонки.Добавить("АлкогольнаяПродукция",    Неопределено);
	МаркированныеТовары.Колонки.Добавить("КодАлкогольнойПродукции", Неопределено);
	
КонецПроцедуры

Процедура ДобавитьКолонкиДляДереваУпаковок(ДеревоУпаковок)
	
	ДеревоУпаковок.Колонки.Добавить("ОрганизацияЕГАИС",        Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	ДеревоУпаковок.Колонки.Добавить("АлкогольнаяПродукция",    Неопределено);
	ДеревоУпаковок.Колонки.Добавить("Справка2",                Неопределено);
	ДеревоУпаковок.Колонки.Добавить("ВсеСправки2Указаны",      Новый ОписаниеТипов("Булево"));
	ДеревоУпаковок.Колонки.Добавить("Статус",                  Неопределено);
	ДеревоУпаковок.Колонки.Добавить("КодАлкогольнойПродукции", Неопределено);
	ДеревоУпаковок.Колонки.Добавить("КоличествоАкцизныхМарок", Новый ОписаниеТипов("Число"));
	
КонецПроцедуры

Функция ОпределитьТипШтрихкодаАкцизнойМарки(Штрихкод)

	ТипШтрихкодаАкцизнойМарки = Неопределено;
	
	Если АкцизныеМаркиВызовСервера.ЭтоШтрихкодАкцизнойМарки(Штрихкод, ТипШтрихкодаАкцизнойМарки) Тогда
		Возврат ТипШтрихкодаАкцизнойМарки;
	ИначеЕсли ЭтоШтрихкодСНомеромИСерией(Штрихкод) Тогда
		Возврат Перечисления.ТипыШтрихкодов.DataMatrix;
	КонецЕсли;
	
	Возврат ТипШтрихкодаАкцизнойМарки;
	
КонецФункции

Процедура ЗаписатьДанныеВыбораПоАкцизнойМарке(ДанныеШтрихкода, ДанныеВыбора)

	Если ЗначениеЗаполнено(ДанныеШтрихкода.ШтрихкодУпаковки) Тогда
		
		ШтрихкодУпаковкиОбъект = ДанныеШтрихкода.ШтрихкодУпаковки.ПолучитьОбъект();
		ШтрихкодУпаковкиОбъект.Номенклатура   = ДанныеВыбора.Номенклатура;
		ШтрихкодУпаковкиОбъект.Характеристика = ДанныеВыбора.Характеристика;
		ШтрихкодУпаковкиОбъект.Серия          = ДанныеВыбора.Серия;
		
		ШтрихкодУпаковкиОбъект.Записать();
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция) Тогда
		
		СоответствиеНоменклатурыЕГАИС = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
		СоответствиеНоменклатурыЕГАИС.Номенклатура         = ДанныеШтрихкода.Номенклатура;
		СоответствиеНоменклатурыЕГАИС.Характеристика       = ДанныеШтрихкода.Характеристика;
		СоответствиеНоменклатурыЕГАИС.Серия                = ДанныеШтрихкода.Серия;
		СоответствиеНоменклатурыЕГАИС.Справка2             = ДанныеШтрихкода.Справка2;
		СоответствиеНоменклатурыЕГАИС.Записать();
		
	КонецЕсли;

КонецПроцедуры

#Область ПроверкаНаОшибки

Процедура ВыполнитьПроверкуНаОшибкиПоДокументуОснования(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки)
	
	Если Не (ПараметрыСканирования.КонтрольРасхожденийСДокументомОснованием
		И ЗначениеЗаполнено(ПараметрыСканирования.ДокументОснование)) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокументаОснования = ШтрихкодированиеИС.ДанныеДокументаОснования(ПараметрыСканирования);
	ТекстОшибки = НСтр("ru = 'Не соответствует документу-основанию'");
	
	Если ДанныеПоШтрихкодам.ВложенныеШтрихкоды = Неопределено Тогда
			
		Для Каждого КлючЗначение Из ДанныеПоШтрихкодам.ОбработанныеШтрихкоды Цикл 
			ДанныеШтрихкода = КлючЗначение.Значение;
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Номенклатура",   ДанныеШтрихкода.Номенклатура);
			ПараметрыПоиска.Вставить("Характеристика", ДанныеШтрихкода.Характеристика);
			ПараметрыПоиска.Вставить("Серия",          ДанныеШтрихкода.Серия);
			
			НайденныеСтроки = ДанныеДокументаОснования.НайтиСтроки(ПараметрыПоиска);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				ДанныеШтрихкода.ТекстОшибки = ТекстОшибки;
				ЕстьОшибки = Истина;
			КонецЕсли;
			
		КонецЦикла;
			
	Иначе
		
		МаркированныеТовары = ДанныеПоШтрихкодам.ВложенныеШтрихкоды.МаркированныеТовары;
		Для Каждого СтрокаМаркированныеТовары Из МаркированныеТовары Цикл
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Номенклатура",   СтрокаМаркированныеТовары.Номенклатура);
			ПараметрыПоиска.Вставить("Характеристика", СтрокаМаркированныеТовары.Характеристика);
			ПараметрыПоиска.Вставить("Серия",          СтрокаМаркированныеТовары.Серия);
			
			НайденныеСтроки = ДанныеДокументаОснования.НайтиСтроки(ПараметрыПоиска);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				СтрокаМаркированныеТовары.СтрокаДерева.ЕстьОшибки  = Истина;
				СтрокаМаркированныеТовары.СтрокаДерева.ТекстОшибки = ТекстОшибки;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПроверкуНаОшибкиКонтрольАкцизныхМарок(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки)

	Если Не ПараметрыСканирования.КонтрольАкцизныхМарок Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеПоШтрихкодам.ВложенныеШтрихкоды = Неопределено Тогда
		
		Для Каждого КлючЗначение Из ДанныеПоШтрихкодам.ОбработанныеШтрихкоды Цикл
			
			ДанныеШтрихкода = КлючЗначение.Значение;
			
			ПроверитьМаркуПоСтатусу(КлючЗначение.Ключ, ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Статус,
									ПараметрыСканирования, ДанныеШтрихкода.ТекстОшибки);
			
			Если Не ПустаяСтрока(ДанныеШтрихкода.ТекстОшибки) Тогда
				
				ЕстьОшибки = Истина;
				Продолжить;
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДанныеШтрихкода.Статус) Тогда
				
				АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(
					ПараметрыСканирования.ОперацияКонтроляАкцизныхМарок,
					ДанныеШтрихкода.Штрихкод,
					ДанныеШтрихкода.ТекстОшибки);
					
				ЕстьОшибки = Не ПустаяСтрока(ДанныеШтрихкода.ТекстОшибки)
					
			КонецЕсли;
		
		КонецЦикла;
		
	Иначе
		
		МаркированныеТовары = ДанныеПоШтрихкодам.ВложенныеШтрихкоды.МаркированныеТовары;
		Для Каждого СтрокаМаркированныеТовары Из МаркированныеТовары Цикл
			
			ТекстОшибки = "";
			ПроверитьМаркуПоСтатусу(СтрокаМаркированныеТовары.Штрихкод, СтрокаМаркированныеТовары.ШтрихкодУпаковки,
									СтрокаМаркированныеТовары.Статус, ПараметрыСканирования, ТекстОшибки);
			
			Если ПустаяСтрока(ТекстОшибки) И Не ЗначениеЗаполнено(СтрокаМаркированныеТовары.Статус) Тогда
				
				АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(
					ПараметрыСканирования.ОперацияКонтроляАкцизныхМарок,
					СтрокаМаркированныеТовары.Штрихкод,
					ТекстОшибки);
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда
				ЕстьОшибки = Истина;
				СтрокаМаркированныеТовары.СтрокаДерева.ЕстьОшибки  = Истина;
				СтрокаМаркированныеТовары.СтрокаДерева.ТекстОшибки = ТекстОшибки;
				ДанныеПоШтрихкодам.ЕстьОшибкиВДеревеУпаковок       = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьМаркуПоСтатусу(Штрихкод, ШтрихкодУпаковки, СтатусМарки, ПараметрыСканирования, ТекстОшибки)
	
	ПредставлениеСтатуса = НСтр("ru = '<Нет статуса>'");
	
	ЭтоМарка150Символов = ЭтоАкцизнаяМарка150Символов(Штрихкод);
	Если ЭтоМарка150Символов И Не ПараметрыСканирования.КонтрольПустогоСтатуса150СимвольныхМарок
		И Не ЗначениеЗаполнено(СтатусМарки) Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ШтрихкодУпаковки) И Не ЭтоМарка150Символов Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыСканирования.ДоступныеСтатусы.Найти(СтатусМарки) = Неопределено
		Или ЭтоМарка150Символов И Не ЗначениеЗаполнено(СтатусМарки) Тогда
		
		Если ЗначениеЗаполнено(СтатусМарки) Тогда
			ПредставлениеСтатуса = СтатусМарки;
		КонецЕсли;
		
		ТекстОшибки = СтрШаблон(НСтр("ru='Статус: %1'"), ПредставлениеСтатуса);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ИнициализироватьДанныеШтрихкодаАкцизнойМарки()

	ДанныеШтрихкода = ШтрихкодированиеИС.ИнициализироватьДанныеШтрихкода();
	ДополнитьСвойстваКоллекцииДанныеШтрихкода(ДанныеШтрихкода);
	
	Возврат ДанныеШтрихкода;

КонецФункции

Функция ОбработатьДанныеШтрихкодаПослеВыбораСправки2(РезультатВыбора, РезультатОбработкиШтрихкода) 
	
	ДанныеШтрихкода = ПолучитьИзВременногоХранилища(РезультатОбработкиШтрихкода.АдресДанныхШтрихкода);
	
	ЗаполнитьДанныеШтрихкодаПоСправке2(ДанныеШтрихкода, РезультатВыбора);
	
	ПоместитьВоВременноеХранилище(ДанныеШтрихкода, РезультатОбработкиШтрихкода.АдресДанныхШтрихкода);
	
	Возврат ДанныеШтрихкода;
	
КонецФункции

Функция ИнициализироватьТаблицуМаркированныеТовары()
	
	МаркированныеТовары = ШтрихкодированиеИС.ИнициализироватьТаблицуМаркированныеТовары();
	ДобавитьКолонкиДляТаблицыМаркированнаяПродукция(МаркированныеТовары);
	
	Возврат МаркированныеТовары;
	
КонецФункции

Функция ИнициализироватьДеревоУпаковок()
	
	ДеревоУпаковок = ШтрихкодированиеИС.ИнициализироватьДеревоУпаковок();
	ДобавитьКолонкиДляДереваУпаковок(ДеревоУпаковок);
	
	Возврат ДеревоУпаковок;
	
КонецФункции

Функция ЭтоАкцизнаяМарка150Символов(Штрихкод)
	
	Возврат ЭтоШтрихкодАкцизнойМарки(Штрихкод) И СтрДлина(Штрихкод) = 150;
	
КонецФункции
#КонецОбласти
