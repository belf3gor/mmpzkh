#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подготавливает таблицу, содержащую планируемые платежи.
// Параметры:
//   Параметры - Структура - структура параметров фонового задания. Ключи структуры:
//     * Организация - СправочникСсылка.Организации
//   АдресХранилища- Строка - адрес временного хранилища, в которое помещается таблица планируемых платежей.
//
Процедура ЗаполнитьПланируемыеПлатежи(Параметры, АдресХранилища) Экспорт
	
	ПланируемыеПлатежи = ОстаткиПоДокументам(Параметры.Организация);
	
	ПоместитьВоВременноеХранилище(ПланируемыеПлатежи, АдресХранилища);
	
КонецПроцедуры

// Возвращает таблицу планируемых платежей, формируется по остатку кредиторской задолженности и неоплаченным счетам.
// Параметры
//   Организация - СправочникСсылка.Организации
//   ДатаОстатков - Дата
// 
// Возвращаемое значение:
//   ТаблицаПлатежей - ТаблицаЗначений - Таблица планируемых платежей.
//    * ДатаПлатежа
//    * Документ
//    * Расшифровка
//    * Контрагент
//    * ДоговорКонтрагента
//    * Сумма
Функция ПланируемыеПлатежи(Организация, ДатаОстатков) Экспорт
	
	Возврат ОстаткиПоДокументам(Организация, ДатаОстатков, Истина);
	
КонецФункции

// Возвращает остаток денег на счетах организации.
// Параметры
//   ДатаОстатков - Дата
//   Организация - СправочникСсылка.Организации
//   БанковскийСчет - СправочникСсылка.БанковскиеСчета - Необязательный параметр,
//                                                         если не указан – остаток по всем счетам.
// Возвращаемое значение:
//   Резульатат - Число - Остаток денег на счетах.
//
Функция ОстаткиДенегНаРасчетныхСчетах(ДатаОстатков, Организация, БанковскийСчет = Неопределено) Экспорт
	
	Результат = 0;
	
	СписокДоступныхОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	
	Если ЗначениеЗаполнено(Организация) И СписокДоступныхОрганизаций.Найти(Организация) <> Неопределено Тогда
		СписокОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	ИначеЕсли СписокДоступныхОрганизаций.Количество() <> 0 Тогда
		СписокОрганизаций = СписокДоступныхОрганизаций;
	Иначе
		
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОстатков",     ДатаОстатков);
	Запрос.УстановитьПараметр("Организации",      СписокОрганизаций);
	Запрос.УстановитьПараметр("БанковскийСчет",   БанковскийСчет);
	Запрос.УстановитьПараметр("ВидСубконтоБС",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета);
	Запрос.УстановитьПараметр("СчетаССубконтоБС", УчетДенежныхСредствПовтИсп.ПолучитьСчетаССубконтоБанковскиеСчета());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ОстаткиПоСчетам.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
	|		ХозрасчетныйОстатки.Субконто1 КАК БанковскийСчет
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ДатаОстатков,
	|				Счет В (&СчетаССубконтоБС),
	|				&ВидСубконтоБС,
	|				Организация В (&Организации)
	|					И &ОтборПоБанковскомуСчету) КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт = 0
	|		И ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт = 0
	|		И ХозрасчетныйОстатки.ВалютнаяСуммаОстаток = 0) КАК ОстаткиПоСчетам";
	
	ТекстУсловияОтборБанковскийСчет = ?(ЗначениеЗаполнено(БанковскийСчет), "СубКонто1 = &БанковскийСчет", "ИСТИНА");
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОтборПоБанковскомуСчету", ТекстУсловияОтборБанковскийСчет);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.СуммаОстаток;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Создает платежные поручения.
// Параметры:
//   Параметры - Структура - структура параметров. Ключи структуры:
//    *Платежи - строка - адрес таблицы платежей во временном хранилище
// Возвращаемое значение:
//   СозданныеДокументы - Массив - Документы оплаты, которые были созданы
// 
Функция СоздатьПлатежныеДокументы(Параметры) Экспорт
	
	СозданныеДокументы = Новый Массив;
	
	ТаблицаПлатежей = ПолучитьИзВременногоХранилища(Параметры.Платежи);
	
	Если ТипЗнч(ТаблицаПлатежей) <> Тип("ТаблицаЗначений") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СчетОрганизации = Параметры.СчетОрганизации;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаПлатежей", ТаблицаПлатежей);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПлатежей.Оплатить,
	|	ТаблицаПлатежей.Организация,
	|	ТаблицаПлатежей.НомерСтроки,
	|	ТаблицаПлатежей.СрокОплаты,
	|	ТаблицаПлатежей.СчетНаОплату КАК СчетНаОплату,
	|	ТаблицаПлатежей.ДокументРасчетов,
	|	ТаблицаПлатежей.ДатаДокумента,
	|	ТаблицаПлатежей.Договор,
	|	ТаблицаПлатежей.Контрагент,
	|	ТаблицаПлатежей.Валюта,
	|	ВЫБОР
	|		КОГДА ТаблицаПлатежей.СуммаПредоплата > 0
	|			ТОГДА ТаблицаПлатежей.СуммаПредоплата
	|		ИНАЧЕ ТаблицаПлатежей.СуммаДолг
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаПлатежей.ОсталосьДней,
	|	ТаблицаПлатежей.ИсходныйНомерСтроки
	|ПОМЕСТИТЬ Платежи
	|ИЗ
	|	&ТаблицаПлатежей КАК ТаблицаПлатежей
	|ГДЕ
	|	ТаблицаПлатежей.Оплатить
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Платежи.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Платежи.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|			ТОГДА Платежи.ДокументРасчетов
	|		ИНАЧЕ Платежи.СчетНаОплату
	|	КОНЕЦ КАК Документ,
	|	Платежи.Договор КАК Договор,
	|	Платежи.Контрагент КАК Контрагент,
	|	Платежи.Сумма КАК Сумма
	|ИЗ
	|	Платежи КАК Платежи
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	Организация,
	|	Контрагент";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаОрганизация.Следующий() Цикл
		
		ВыборкаКонтрагент = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ВыборкаДокумент = ВыборкаКонтрагент.Выбрать();
			
			НовыйДокумент = Документы.ПлатежноеПоручение.СоздатьДокумент();
			
			Если ВыборкаДокумент.Количество() = 1 Тогда
				
				ВыборкаДокумент.Следующий();
				
				НовыйДокумент.Заполнить(ВыборкаДокумент.Документ);
				
			Иначе // Сводные платежи — если совпадает организация, контрагент
				
				МассивПлатежейСводно = Новый Массив;
				
				Пока ВыборкаДокумент.Следующий() Цикл
					
					МассивПлатежейСводно.Добавить(ВыборкаДокумент.Документ);
				КонецЦикла;
				
				НовыйДокумент.Заполнить(МассивПлатежейСводно);
				
			КонецЕсли;
			
			Если НовыйДокумент.СчетОрганизации <> СчетОрганизации Тогда
				НовыйДокумент.СчетОрганизации = СчетОрганизации;
			КонецЕсли;
			
			Если НовыйДокумент.СуммаДокумента <> ВыборкаКонтрагент.Сумма Тогда
				ЧислоСтавкаНДС = УчетНДСПереопределяемый.ПолучитьСтавкуНДС(НовыйДокумент.СтавкаНДС);
				НовыйДокумент.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ВыборкаКонтрагент.Сумма, Истина, ЧислоСтавкаНДС);
				НовыйДокумент.СуммаДокумента = ВыборкаКонтрагент.Сумма;
				
				// Нужно переформировать назначение платежа
				АвтоЗначенияРеквизитов = УчетДенежныхСредствБП.СформироватьАвтоЗначенияРеквизитовПлательщикаПолучателя(
				НовыйДокумент.Организация, НовыйДокумент.СчетОрганизации, НовыйДокумент.Контрагент, 
				НовыйДокумент.СчетКонтрагента, НовыйДокумент.ПеречислениеВБюджет, НовыйДокумент.Дата);
				ЗаполнитьЗначенияСвойств(НовыйДокумент, АвтоЗначенияРеквизитов);
				
				Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(НовыйДокумент, АвтоЗначенияРеквизитов, Ложь, Истина);
				
			КонецЕсли;
			
			НовыйДокумент.Записать();
			
			СозданныеДокументы.Добавить(НовыйДокумент.Ссылка);
			
		КонецЦикла;
	КонецЦикла;
	
	РегистрыСведений.ДокументыИнтеграцииСБанком.ОтправитьОповещениеОбИзмененииПоДокументамВФоне(СозданныеДокументы);
	
	Возврат СозданныеДокументы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОстаткиПоДокументам(Организация, ДатаОстатков = Неопределено, ДляКалендаря = Ложь)
	
	ДоступныеОрганизации = Справочники.Организации.ДоступныеОрганизацииДляОтбора(Организация, Ложь);
	
	Если ДатаОстатков = Неопределено Тогда
		ДатаОстатков = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	СчетаУчетаРасчетов = БухгалтерскиеОтчеты.СчетаУчетаРасчетовПоставщиков();
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочаяДата",             ДатаОстатков);
	Запрос.УстановитьПараметр("СписокОрганизаций",       ДоступныеОрганизации);
	Запрос.УстановитьПараметр("ВидыДоговоров",           БухгалтерскиеОтчеты.ВидыДоговоровПоставщиков());
	Запрос.УстановитьПараметр("ГраницаОстатков",         Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконтоРасчетов",    ВидыСубконтоРасчетов());
	Запрос.УстановитьПараметр("СрокОплатыПоУмолчанию",   Константы.СрокОплатыПоставщикам.Получить());
	Запрос.УстановитьПараметр("ТипыДокументовРасчетов",  ТипыДокументовРасчетов());
	Запрос.УстановитьПараметр("СчетаДолговПоДокументам", СчетаУчетаРасчетов.СчетаСДокументомРасчетов);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",         ВалютаРегламентированногоУчета);
	
	Запрос.Текст = ТекстЗапросаПлатежи(ДляКалендаря);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ТекстЗапросаПлатежи(ДляКалендаря)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|	ХозрасчетныйОстатки.Субконто3 КАК ДокументРасчетов,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСумма,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Субконто3 ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				И ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Документ.ПоступлениеТоваровУслуг).СчетНаОплатуПоставщика <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Документ.ПоступлениеТоваровУслуг).СчетНаОплатуПоставщика.Проведен
	|				И (СтатусыДокументов.Статус ЕСТЬ NULL
	|					ИЛИ СтатусыДокументов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусОплатыСчета.НеОплачен), ЗНАЧЕНИЕ(Перечисление.СтатусОплатыСчета.ОплаченЧастично)))
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Документ.ПоступлениеТоваровУслуг).СчетНаОплатуПоставщика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|	КОНЕЦ КАК СчетНаОплату
	|ПОМЕСТИТЬ ОстаткиПоДокументамРасчетов
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаОстатков,
	|			Счет В (&СчетаДолговПоДокументам),
	|			&ВидыСубконтоРасчетов,
	|			ВЫРАЗИТЬ(Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&ВидыДоговоров)
	|				И ТИПЗНАЧЕНИЯ(Субконто3) В (&ТипыДокументовРасчетов)
	|				И (НЕ ВЫРАЗИТЬ(Субконто2 КАК Справочник.ДоговорыКонтрагентов).Валютный
	|					ИЛИ ВЫРАЗИТЬ(Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах)
	|				И Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
	|		ПО ХозрасчетныйОстатки.Организация = СтатусыДокументов.Организация
	|			И (ВЫБОР
	|				КОГДА ХозрасчетныйОстатки.Субконто3 ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						И ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Документ.ПоступлениеТоваровУслуг).СчетНаОплатуПоставщика <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|						И ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Документ.ПоступлениеТоваровУслуг).СчетНаОплатуПоставщика.Проведен
	|					ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Документ.ПоступлениеТоваровУслуг).СчетНаОплатуПоставщика = СтатусыДокументов.Документ
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыДокументов.Статус,
	|	ЕСТЬNULL(СрокиОплатыДокументов.СрокОплаты, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокОплаты,
	|	СчетНаОплатуПоставщика.Организация,
	|	СчетНаОплатуПоставщика.Контрагент КАК Контрагент,
	|	СчетНаОплатуПоставщика.Ссылка КАК СчетНаОплату,
	|	СчетНаОплатуПоставщика.СуммаДокумента КАК СуммаВВалюте,
	|	СчетНаОплатуПоставщика.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА СчетНаОплатуПоставщика.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА &ВалютаРеглУчета
	|		ИНАЧЕ СчетНаОплатуПоставщика.ВалютаДокумента
	|	КОНЕЦ КАК Валюта,
	|	СчетНаОплатуПоставщика.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИЛИ СчетНаОплатуПоставщика.ВалютаДокумента = &ВалютаРеглУчета КАК ВалютаСоответствуетРеглУчету
	|ПОМЕСТИТЬ НеоплаченныеСчетаВВалюте
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
	|		ПО (СтатусыДокументов.Документ = СчетНаОплатуПоставщика.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиОплатыДокументов КАК СрокиОплатыДокументов
	|		ПО СчетНаОплатуПоставщика.Организация = СрокиОплатыДокументов.Организация
	|			И СчетНаОплатуПоставщика.Ссылка = СрокиОплатыДокументов.Документ
	|ГДЕ
	|	СчетНаОплатуПоставщика.Проведен
	|	И СчетНаОплатуПоставщика.Организация В(&СписокОрганизаций)
	|	И (СчетНаОплатуПоставщика.ДоговорКонтрагента.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ СчетНаОплатуПоставщика.ДоговорКонтрагента.Валютный
	|			ИЛИ СчетНаОплатуПоставщика.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах)
	|	И ЕСТЬNULL(СтатусыДокументов.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусОплатыСчета.НеОплачен)) В (ЗНАЧЕНИЕ(Перечисление.СтатусОплатыСчета.НеОплачен), ЗНАЧЕНИЕ(Перечисление.СтатусОплатыСчета.ОплаченЧастично))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетНаОплатуПоставщика.Организация,
	|	СчетНаОплату,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ПОМЕСТИТЬ КурсыВалютДляСчетов
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ГраницаОстатков, ) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплатаСчетовОбороты.Организация КАК Организация,
	|	ОплатаСчетовОбороты.СчетНаОплату КАК СчетНаОплату,
	|	ОплатаСчетовОбороты.СуммаОборот
	|ПОМЕСТИТЬ ОплатаСчетов
	|ИЗ
	|	РегистрНакопления.ОплатаСчетов.Обороты(
	|			,
	|			&ГраницаОстатков,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И СчетНаОплату В
	|					(ВЫБРАТЬ
	|						НеоплаченныеСчетаВВалюте.СчетНаОплату
	|					ИЗ
	|						НеоплаченныеСчетаВВалюте КАК НеоплаченныеСчетаВВалюте
	|					ГДЕ
	|						НеоплаченныеСчетаВВалюте.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусОплатыСчета.ОплаченЧастично))) КАК ОплатаСчетовОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетНаОплату
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеоплаченныеСчетаВВалюте.СчетНаОплату,
	|	НеоплаченныеСчетаВВалюте.СрокОплаты КАК СрокОплаты,
	|	НеоплаченныеСчетаВВалюте.Организация,
	|	НеоплаченныеСчетаВВалюте.Контрагент КАК Контрагент,
	|	НеоплаченныеСчетаВВалюте.ДоговорКонтрагента,
	|	НеоплаченныеСчетаВВалюте.СуммаВВалюте КАК ВалютнаяСумма,
	|	(ВЫБОР
	|		КОГДА НеоплаченныеСчетаВВалюте.ВалютаСоответствуетРеглУчету
	|			ТОГДА НеоплаченныеСчетаВВалюте.СуммаВВалюте
	|		КОГДА НЕ КурсыВалютДляСчетов.Курс ЕСТЬ NULL
	|				И НЕ КурсыВалютДляСчетов.Кратность ЕСТЬ NULL
	|				И КурсыВалютДляСчетов.Кратность <> 0
	|			ТОГДА НеоплаченныеСчетаВВалюте.СуммаВВалюте
	|		ИНАЧЕ 0
	|	КОНЕЦ - ЕСТЬNULL(ОплатаСчетов.СуммаОборот, 0)) * КурсыВалютДляСчетов.Курс / КурсыВалютДляСчетов.Кратность КАК Сумма,
	|	НеоплаченныеСчетаВВалюте.Валюта КАК Валюта
	|ПОМЕСТИТЬ НеоплаченныеСчета
	|ИЗ
	|	НеоплаченныеСчетаВВалюте КАК НеоплаченныеСчетаВВалюте
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютДляСчетов КАК КурсыВалютДляСчетов
	|		ПО НеоплаченныеСчетаВВалюте.Валюта = КурсыВалютДляСчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОплатаСчетов КАК ОплатаСчетов
	|		ПО НеоплаченныеСчетаВВалюте.Организация = ОплатаСчетов.Организация
	|			И НеоплаченныеСчетаВВалюте.СчетНаОплату = ОплатаСчетов.СчетНаОплату
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеоплаченныеСчета.СрокОплаты КАК СрокОплатыСчета,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК СрокОплатыПоступления,
	|	НеоплаченныеСчета.СчетНаОплату,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетов,
	|	НеоплаченныеСчета.Организация,
	|	НеоплаченныеСчета.Контрагент,
	|	НеоплаченныеСчета.ДоговорКонтрагента,
	|	НеоплаченныеСчета.ВалютнаяСумма КАК ВалютнаяСуммаПредоплата,
	|	НеоплаченныеСчета.Сумма КАК СуммаПредоплата,
	|	0 КАК ВалютнаяСуммаДолг,
	|	0 КАК СуммаДолг,
	|	НеоплаченныеСчета.Валюта
	|ПОМЕСТИТЬ СписокСделокОбъединение
	|ИЗ
	|	НеоплаченныеСчета КАК НеоплаченныеСчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ВЫБОР
	|		КОГДА НЕ СрокиОплатыДокументов.СрокОплаты ЕСТЬ NULL
	|			ТОГДА СрокиОплатыДокументов.СрокОплаты
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОстаткиПоДокументамРасчетов.Договор.УстановленСрокОплаты
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ), ДЕНЬ, ОстаткиПоДокументамРасчетов.Договор.СрокОплаты)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ), ДЕНЬ, &СрокОплатыПоУмолчанию)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ОстаткиПоДокументамРасчетов.СчетНаОплату,
	|	ОстаткиПоДокументамРасчетов.ДокументРасчетов,
	|	ОстаткиПоДокументамРасчетов.Организация,
	|	ОстаткиПоДокументамРасчетов.Контрагент,
	|	ОстаткиПоДокументамРасчетов.Договор,
	|	0,
	|	0,
	|	ОстаткиПоДокументамРасчетов.ВалютнаяСумма,
	|	ОстаткиПоДокументамРасчетов.Сумма,
	|	ЕСТЬNULL(ОстаткиПоДокументамРасчетов.Валюта, ОстаткиПоДокументамРасчетов.ДокументРасчетов.ВалютаДокумента)
	|ИЗ
	|	ОстаткиПоДокументамРасчетов КАК ОстаткиПоДокументамРасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиОплатыДокументов КАК СрокиОплатыДокументов
	|		ПО ОстаткиПоДокументамРасчетов.Организация = СрокиОплатыДокументов.Организация
	|			И ОстаткиПоДокументамРасчетов.ДокументРасчетов = СрокиОплатыДокументов.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ОстаткиПоДокументамРасчетов.Организация = ДанныеПервичныхДокументов.Организация
	|			И ОстаткиПоДокументамРасчетов.ДокументРасчетов = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	(СрокиОплатыДокументов.СрокОплаты ЕСТЬ NULL
	|			ИЛИ СрокиОплатыДокументов.СрокОплаты <> ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СписокСделокОбъединение.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|				ТОГДА СписокСделокОбъединение.СрокОплатыПоступления
	|			ИНАЧЕ СписокСделокОбъединение.СрокОплатыСчета
	|		КОНЕЦ) КАК СрокОплаты,
	|	ВЫБОР
	|		КОГДА СписокСделокОбъединение.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|			ТОГДА СписокСделокОбъединение.ДокументРасчетов
	|		ИНАЧЕ СписокСделокОбъединение.СчетНаОплату
	|	КОНЕЦ КАК ГруппировкаПоДокументу,
	|	МАКСИМУМ(СписокСделокОбъединение.СчетНаОплату) КАК СчетНаОплату,
	|	МАКСИМУМ(СписокСделокОбъединение.ДокументРасчетов) КАК ДокументРасчетов,
	|	СписокСделокОбъединение.Организация,
	|	СписокСделокОбъединение.Контрагент,
	|	СписокСделокОбъединение.ДоговорКонтрагента,
	|	СУММА(СписокСделокОбъединение.ВалютнаяСуммаПредоплата) КАК ВалютнаяСуммаПредоплата,
	|	СУММА(СписокСделокОбъединение.СуммаПредоплата) КАК СуммаПредоплата,
	|	СУММА(СписокСделокОбъединение.ВалютнаяСуммаДолг) КАК ВалютнаяСуммаДолг,
	|	СУММА(СписокСделокОбъединение.СуммаДолг) КАК СуммаДолг,
	|	СписокСделокОбъединение.Валюта
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	СписокСделокОбъединение КАК СписокСделокОбъединение
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСделокОбъединение.Контрагент,
	|	СписокСделокОбъединение.ДоговорКонтрагента,
	|	СписокСделокОбъединение.Организация,
	|	СписокСделокОбъединение.Валюта,
	|	ВЫБОР
	|		КОГДА СписокСделокОбъединение.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|			ТОГДА СписокСделокОбъединение.ДокументРасчетов
	|		ИНАЧЕ СписокСделокОбъединение.СчетНаОплату
	|	КОНЕЦ";
	
	Если ДляКалендаря Тогда 
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ
		|	Результат.Организация,
		|	Результат.СрокОплаты КАК ДатаПлатежа,
		|	ВЫБОР
		|		КОГДА Результат.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|			ТОГДА Результат.СчетНаОплату
		|		ИНАЧЕ Результат.ДокументРасчетов
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА Результат.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОплатаПоСчету,
		|	Результат.Контрагент,
		|	Результат.ДоговорКонтрагента,
		|	Результат.Контрагент КАК Расшифровка,
		|	ВЫБОР
		|		КОГДА Результат.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|			ТОГДА Результат.СуммаПредоплата
		|		ИНАЧЕ Результат.СуммаДолг
		|	КОНЕЦ КАК Сумма,
		|	0 КАК НомерРаздела,
		|	Результат.СрокОплаты < &РабочаяДата КАК Просрочен
		|ПОМЕСТИТЬ РезультатДляКалендаря
		|ИЗ
		|	Результат КАК Результат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РезультатДляКалендаря.Организация,
		|	РезультатДляКалендаря.ДатаПлатежа,
		|	РезультатДляКалендаря.Документ,
		|	РезультатДляКалендаря.ОплатаПоСчету,
		|	РезультатДляКалендаря.Контрагент,
		|	РезультатДляКалендаря.ДоговорКонтрагента,
		|	РезультатДляКалендаря.Расшифровка,
		|	РезультатДляКалендаря.Сумма,
		|	РезультатДляКалендаря.НомерРаздела,
		|	РезультатДляКалендаря.Просрочен,
		|	ЕСТЬNULL(ПлатежноеПоручение.Ссылка, ЗНАЧЕНИЕ(Документ.ПлатежноеПоручение.ПустаяСсылка)) КАК ПлатежныйДокумент
		|ИЗ
		|	РезультатДляКалендаря КАК РезультатДляКалендаря
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
		|		ПО (НЕ РезультатДляКалендаря.Просрочен)
		|			И (ПлатежноеПоручение.ДокументОснование = РезультатДляКалендаря.Документ)
		|			И (ПлатежноеПоручение.Организация = РезультатДляКалендаря.Организация)";
		
	Иначе
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ
		|	ИСТИНА КАК Оплатить,
		|	Результат.СрокОплаты КАК СрокОплаты,
		|	РАЗНОСТЬДАТ(&РабочаяДата, Результат.СрокОплаты, ДЕНЬ) КАК ОсталосьДней,
		|	Результат.СчетНаОплату,
		|	Результат.ДокументРасчетов,
		|	Результат.Организация,
		|	Результат.Контрагент,
		|	Результат.ДоговорКонтрагента,
		|	Результат.ВалютнаяСуммаПредоплата,
		|	Результат.СуммаПредоплата,
		|	Результат.ВалютнаяСуммаДолг КАК ВалютнаяСуммаДолг,
		|	Результат.СуммаДолг КАК СуммаДолг,
		|	Результат.Валюта,
		|	ВЫБОР
		|		КОГДА Результат.СрокОплаты = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеЗаполненСрокОплаты
		|ИЗ
		|	Результат КАК Результат
		|
		|УПОРЯДОЧИТЬ ПО
		|	НеЗаполненСрокОплаты,
		|	СрокОплаты";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТипыДокументовРасчетов()
	
	НужныеТипы = Новый Массив;
	НужныеТипы.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	НужныеТипы.Добавить(Тип("ДокументСсылка.ПоступлениеДопРасходов"));
	НужныеТипы.Добавить(Тип("ДокументСсылка.ПоступлениеНМА"));
	
	Возврат НужныеТипы;
	
КонецФункции

Функция ВидыСубконтоРасчетов()

	ВидыСубконтоРасчетов = Новый Массив;
	ВидыСубконтоРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконтоРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);

	Возврат ВидыСубконтоРасчетов;

КонецФункции

#КонецОбласти

#КонецЕсли