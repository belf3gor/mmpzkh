#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументСсылка = Параметры.ДокументСсылка;
	АдресХранилища = Параметры.АдресХранилища;
	
	ПолучитьОбработатьДанныеКСопоставлению(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьКонтрагента =1;
	
	Если СопоставлятьКонтрагента 
		И ПустаяСтрока(ДанныеПокупателя) Тогда
		СоздатьКонтрагента = 2;
		ДанныеПокупателя = НСтр("ru = '<Данные не указаны>'");
		Элементы.СоздатьКонтрагента.ТолькоПросмотр = Истина;
		Элементы.ВыбратьСуществующего.ТолькоПросмотр = Истина;
		УстановитьДоступностьВыбораКонтрагента(ЭтотОбъект);
	КонецЕсли;
	
	Если СопоставлятьНоменклатуру Тогда
		ВидНоменклатурыУслуга = Справочники.ВидыНоменклатуры.ЭлементВидНоменклатурыПоУмолчанию(Истина);
		ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.ПолучитьЕдиницуИзмеренияПоУмолчанию();
	КонецЕсли;

	ПереключитьСтраницы(ЭтотОбъект, СопоставлятьКонтрагента);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВсеДанныеСопоставлены Тогда
		
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("Контрагент",                                       Контрагент);
		ПараметрОповещения.Вставить("ИдентификаторВызывающейФормы",                     ВладелецФормы.УникальныйИдентификатор);
		ПараметрОповещения.Вставить("АдресТаблицыСопоставленныхДанныхВХранилище",       АдресХранилища);
		ПараметрОповещения.Вставить("ДанныеСопоставленыАвтоматически",                  Истина);
		
		Оповестить("ЗаполненыДанныеИнтернетМагазин", ПараметрОповещения, ВладелецФормы);
		
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ПеренестиВДокумент Тогда
		
		ПриЗакрытииФормыНаСервере();
		
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("Контрагент",                                       Контрагент);
		ПараметрОповещения.Вставить("ИдентификаторВызывающейФормы",                     ВладелецФормы.УникальныйИдентификатор);
		ПараметрОповещения.Вставить("АдресТаблицыСопоставленныхДанныхВХранилище",       АдресХранилища);
		ПараметрОповещения.Вставить("ДанныеСопоставленыАвтоматически",                  Ложь);
		
		Оповестить("ЗаполненыДанныеИнтернетМагазин", ПараметрОповещения, ВладелецФормы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СоздатьКонтрагентаПриИзменении(Элемент)
	УстановитьДоступностьВыбораКонтрагента(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокНоменклатурыАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено
		И НЕ ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
		
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Новый СписокЗначений;
		ТекстПодбора = НСтр("ru = 'Создать: '")
			+ ТекДанные.Наименование
			+ ?(ПустаяСтрока(ТекДанные.Артикул), "", ", " + ТекДанные.Артикул)
			+ ?(ПустаяСтрока(ТекДанные.Единица), "", ", " + ТекДанные.Единица);
		ДанныеВыбора.Добавить(ТекстПодбора);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено 
		И ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеЗаполнения = Новый Структура();
		ДанныеЗаполнения.Вставить("НаименованиеПолное",   ТекДанные.Наименование);
		ДанныеЗаполнения.Вставить("Артикул",              ТекДанные.Артикул);
		ДанныеЗаполнения.Вставить("Услуга",               ТекДанные.Услуга);
		ДанныеЗаполнения.Вставить("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
		ДанныеЗаполнения.Вставить("Родитель",             ГруппаНоменклатуры);
		
		Если ТекДанные.Услуга Тогда
			ДанныеЗаполнения.Вставить("ВидНоменклатуры",  ВидНоменклатурыУслуга);
		Иначе
			ДанныеЗаполнения.Вставить("ВидНоменклатуры",  ВидНоменклатуры);
		КонецЕсли;
		
		БазоваяЕдиница = ТекДанные.Единица;
		Если Не ЗначениеЗаполнено(ТекДанные.Единица)
			И НЕ ТекДанные.Услуга Тогда
			БазоваяЕдиница = ЕдиницаИзмерения;
		КонецЕсли;
		ДанныеЗаполнения.Вставить("ЕдиницаИзмерения",     БазоваяЕдиница);
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("ТекстЗаполнения", ТекДанные.Наименование);
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
		ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",ПараметрыФормы, Элемент);
	Иначе
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			ТекДанные.ЗначокДействия = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураОчистка(Элемент, СтандартнаяОбработка)
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекДанные.ЗначокДействия = 0;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Назад(Команда)
	
	ПереключитьСтраницы(ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	ПереключитьСтраницы(ЭтотОбъект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
КонецПроцедуры

&НаКлиенте
Процедура Настройка(Команда)
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("НастройкиОбменаСИнтернетМагазиномЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура("НастройкаРеквизитов", Истина);
	ОткрытьФорму("Обработка.ОбменСИнтернетМагазином.Форма.ФормаНастройки",ПараметрыФормы,ЭтотОбъект,,,,ОповещениеОЗавершении);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ПолучитьОбработатьДанныеКСопоставлению(Отказ)
	
	ЕстьНовыйКонтрагент = Ложь;
	ЕстьНоваяНоменклатура = Ложь;
	ТаблицаНесопоставленнойНоменклатуры = Неопределено;
	ДанныеКонтрагента = Неопределено;
	
	НесопоставленныеОбъекты = РегистрыСведений.НесопоставленныеОбъектыИнтернетМагазина.СоздатьНаборЗаписей();
	НесопоставленныеОбъекты.Отбор.Документ.Установить(ДокументСсылка);
	НесопоставленныеОбъекты.Прочитать();
	
	Если НесопоставленныеОбъекты.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НесопоставленныеОбъектыХранилище = НесопоставленныеОбъекты[0].ДанныеОбъекта;
	НесопоставленныеДанные = НесопоставленныеОбъектыХранилище.Получить();
	ЕстьНовыйКонтрагент = НесопоставленныеДанные.Свойство("ДанныеКонтрагента", ДанныеКонтрагента);
	ЕстьНоваяНоменклатура = НесопоставленныеДанные.Свойство("ДанныеНоменклатуры", ТаблицаНесопоставленнойНоменклатуры);
	
	НесопоставленныеОбъекты.Очистить();
	НесопоставленныеОбъекты.Записать();
	
	// Несопоставленные объекты могли сопоставить в другом счете или вручную
	ДанныеДокумента = ДанныеДокумента(ДокументСсылка);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеДокумента, "Организация, ВалютаДокумента");
	ЗагрузитьНастройки();
	
	Если ЕстьНовыйКонтрагент Тогда
		Контрагент = Обработки.ОбменСИнтернетМагазином.КонтрагентПоИдентификаторуМагазина(ДанныеКонтрагента.Идентификатор);
		СопоставлятьКонтрагента = НЕ ЗначениеЗаполнено(Контрагент);
	КонецЕсли;
	
	Если ЕстьНоваяНоменклатура Тогда
		
		УникальныеИдентификаторы = Новый Массив;
		ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(УникальныеИдентификаторы,
			ТаблицаНесопоставленнойНоменклатуры.ВыгрузитьКолонку("Идентификатор"));
		РанееСопоставленнаяНоменклатура = Обработки.ОбменСИнтернетМагазином.НоменклатураПоИдентификаторамМагазина(УникальныеИдентификаторы);
		РанееСопоставленнаяНоменклатура.Индексы.Добавить("Идентификатор");
		
		ЕдиницыИзмерения = Новый Соответствие;
		Для каждого СтрокаТаблицы из ТаблицаНесопоставленнойНоменклатуры Цикл
			ДанныеСопоставления = РанееСопоставленнаяНоменклатура.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
			Если ДанныеСопоставления = Неопределено Тогда
				
				НоваяСтрока = НесопоставленнаяНоменклатура.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы.ДанныеНоменклатуры, "Наименование, Артикул, Услуга");
				НоваяСтрока.НомерСтрокиЗаказа = СтрокаТаблицы.НомерСтрокиЗаказа;
				НоваяСтрока.НаименованиеПредставление  = "Новый: " + НоваяСтрока.Наименование;
				НоваяСтрока.ИдентификаторНоменклатуры  = СтрокаТаблицы.Идентификатор;
				НоваяСтрока.ИдентификаторПредставление = "Код магазина: " + СтрокаТаблицы.Идентификатор;
				
				НоваяСтрока.ЗначокДействия             = 2;
				КодЕдиницы = СтрокаТаблицы.ДанныеНоменклатуры.Единица.Код;
				Если ЗначениеЗаполнено(КодЕдиницы) Тогда
					БазоваяЕдиница = ЕдиницыИзмерения.Получить(КодЕдиницы);
					Если БазоваяЕдиница = Неопределено Тогда
						БазоваяЕдиница = Справочники.КлассификаторЕдиницИзмерения.ЕдиницаИзмеренияПоКоду(КодЕдиницы);
						ЕдиницыИзмерения.Вставить(КодЕдиницы, БазоваяЕдиница);
					КонецЕсли;
					НоваяСтрока.Единица                    = БазоваяЕдиница;
				КонецЕсли;
				
			Иначе
				
				НовоеСопоставление = СопоставленнаяНоменклатура.Добавить();
				НовоеСопоставление.НомерСтрокиЗаказа = СтрокаТаблицы.НомерСтрокиЗаказа;
				НовоеСопоставление.Номенклатура = ДанныеСопоставления.Ссылка;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СопоставлятьНоменклатуру = НесопоставленнаяНоменклатура.Количество() > 0;
		
		Если СопоставленнаяНоменклатура.Количество() > 0 Тогда
			АдресХранилища = ПоместитьВоВременноеХранилище(СопоставленнаяНоменклатура.Выгрузить(), АдресХранилища);
		КонецЕсли;
		
	КонецЕсли;
	
	Если СопоставлятьКонтрагента Тогда
		
		НаименованиеКонтрагента = "";
		Если НЕ ПустаяСтрока(ДанныеКонтрагента.ОфициальноеНаименование) Тогда
			НаименованиеКонтрагента = ДанныеКонтрагента.ОфициальноеНаименование;
		ИначеЕсли НЕ ДанныеКонтрагента.ЮрЛицо И НЕ ПустаяСтрока(ДанныеКонтрагента.ФИО) Тогда
			НаименованиеКонтрагента = ДанныеКонтрагента.ФИО;
		КонецЕсли;
		
		Если ПустаяСтрока(НаименованиеКонтрагента) Тогда
			Если ЗначениеЗаполнено(ДанныеКонтрагента.НаименованиеПолное) Тогда
				НаименованиеКонтрагента = ДанныеКонтрагента.НаименованиеПолное;
			Иначе
				НаименованиеКонтрагента = "-";
			КонецЕсли;
		КонецЕсли;
		
		ИНН = ДанныеКонтрагента.ИНН;
		КПП = ДанныеКонтрагента.КПП;
		
		ДанныеПокупателя = НаименованиеКонтрагента
			+ ?(ЗначениеЗаполнено(ИНН), ", " + "ИНН " + ИНН, "")
			+ ?(ЗначениеЗаполнено(КПП), ", " + "КПП " + КПП, "");
		АдресФакт = "";
		АдресЮр = "";
		Телефон = "";
		ЭП = "";
		
		Для Каждого СтрокаИнформации Из ДанныеКонтрагента.КонтактнаяИнформация Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаИнформации.Представление) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВРег(СтрокаИнформации.Вид) = ВРег("ФактическийАдрес") Тогда
				
				АдресФакт = СтрокаИнформации.Представление;
				
			ИначеЕсли ВРег(СтрокаИнформации.Вид) = ВРег("ЮридическийАдрес") Тогда
				
				АдресЮр = СтрокаИнформации.Представление;
				
			ИначеЕсли ВРег(СтрокаИнформации.Вид) = ВРег("ТелефонРабочий")
				ИЛИ ВРег(СтрокаИнформации.Вид) = ВРег("ТелефонВнутренний")
				ИЛИ ВРег(СтрокаИнформации.Вид) = ВРег("ТелефонМобильный")
				ИЛИ ВРег(СтрокаИнформации.Вид) = ВРег("ТелефонДомашний") Тогда
				
				Телефон = СтрокаИнформации.Представление;
				
			ИначеЕсли ВРег(СтрокаИнформации.Вид) = ВРег("Почта")
				ИЛИ ВРег(СтрокаИнформации.Вид) = ВРег("ЭлектроннаяПочта") Тогда
				
				ЭП = СтрокаИнформации.Представление;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ДанныеПокупателя = ДанныеПокупателя
			+ ?(ЗначениеЗаполнено(Телефон),", " + "тел.: " + Телефон, "")
			+ ?(ЗначениеЗаполнено(ЭП), ", " + "Email: " + ЭП, "")
			+ ?(ЗначениеЗаполнено(АдресЮр), ", " + "Адрес:" + АдресЮр, "")
			+ ?(НЕ ЗначениеЗаполнено(АдресЮр) И ЗначениеЗаполнено(АдресФакт), ", " + "Адрес: " + АдресФакт, "");
			
	КонецЕсли;
	
	ВсеДанныеСопоставлены = НЕ СопоставлятьНоменклатуру И НЕ СопоставлятьКонтрагента;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	НастройкиЗагрузки = ОбменСИнтернетМагазином.ПолучитьНастройкиОбмена();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НастройкиЗагрузки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьВыбораКонтрагента(Форма)
	Форма.Элементы.Контрагент.Доступность = Форма.СоздатьКонтрагента = 2;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Серый текст для новой номенклатуры
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СписокНоменклатура");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"НесопоставленнаяНоменклатура.Номенклатура", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСерый);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("НесопоставленнаяНоменклатура.НаименованиеПредставление"));
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОбменаСИнтернетМагазиномЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗагрузитьНастройки();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииФормыНаСервере()
	
	НесопоставленныеОбъекты = НесопоставленныеОбъектыХранилище.Получить();
	Если СопоставлятьКонтрагента Тогда
		ДанныеКонтрагента = НесопоставленныеОбъекты.ДанныеКонтрагента;
		Если СоздатьКонтрагента = 1 Тогда
			Контрагент = СоздатьКонтрагента(ДанныеКонтрагента, Организация, ГруппаКонтрагентов);
		КонецЕсли;
	
		РегистрыСведений.КонтрагентыИнтернетМагазина.УстановитьСоответствие(ДанныеКонтрагента.Идентификатор, Контрагент);
		
	КонецЕсли;
	
	Если СопоставлятьНоменклатуру Тогда
		
		ОтборПустаяНоменклатура = Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
		НезаполненныеСтроки = НесопоставленнаяНоменклатура.НайтиСтроки(ОтборПустаяНоменклатура);
		// Создадим недостающую номенклатуру
		Если НезаполненныеСтроки.Количество() > 0 Тогда
			ТаблицаНесопоставленнойНоменклатуры = НесопоставленныеОбъекты.ДанныеНоменклатуры;
			
			ЗначенияПоУмолчанию = ЗначенияРеквизитовНоменклатурыПоУмолчанию();
			Для Каждого СтрокаКЗаполнению из НезаполненныеСтроки Цикл
				СтрокаДанных = ТаблицаНесопоставленнойНоменклатуры.Найти(СтрокаКЗаполнению.НомерСтрокиЗаказа, "НомерСтрокиЗаказа");
				Номенклатура = Обработки.ОбменСИнтернетМагазином.СоздатьНоменклатуру(СтрокаДанных.ДанныеНоменклатуры, ЗначенияПоУмолчанию);
				СтрокаКЗаполнению.Номенклатура = Номенклатура;
			КонецЦикла;
		КонецЕсли;
		
		Для каждого ДанныеНоменклатура Из НесопоставленнаяНоменклатура Цикл
			РегистрыСведений.НоменклатураИнтернетМагазина.УстановитьСоответствие(
				ДанныеНоменклатура.ИдентификаторНоменклатуры,
				ДанныеНоменклатура.Номенклатура);
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НесопоставленнаяНоменклатура, СопоставленнаяНоменклатура);
		Если СопоставленнаяНоменклатура.Количество() > 0 Тогда
			АдресХранилища = ПоместитьВоВременноеХранилище(СопоставленнаяНоменклатура.Выгрузить(), АдресХранилища);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеДокумента(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетНаОплатуПокупателю.Организация,
	|	СчетНаОплатуПокупателю.Ссылка,
	|	СчетНаОплатуПокупателю.Контрагент,
	|	СчетНаОплатуПокупателю.ВалютаДокумента
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	|ГДЕ
	|	СчетНаОплатуПокупателю.Ссылка = &ДокументСсылка";
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Запрос.Выполнить().Выгрузить()[0]);
	
КонецФункции

&НаСервереБезКонтекста 
Функция СоздатьКонтрагента(ДанныеКонтрагента, Организация, ГруппаКонтрагентов)
	
	Возврат Обработки.ОбменСИнтернетМагазином.СоздатьКонтрагента(ДанныеКонтрагента, Организация, ГруппаКонтрагентов);
	
КонецФункции

&НаСервере
Функция ЗначенияРеквизитовНоменклатурыПоУмолчанию()
	
	ПоляСтруктуры = "ГруппаНоменклатуры, ВидНоменклатуры, ВидНоменклатурыУслуга, НоменклатурнаяГруппа, ЕдиницаИзмерения";
	ЗначенияРеквизитов = Новый Структура(ПоляСтруктуры);
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, ЭтотОбъект, ПоляСтруктуры);
	Возврат ЗначенияРеквизитов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура ПереключитьСтраницы(Форма, СтраницаКонтрагента)
	
	Элементы = Форма.Элементы;
	Если СтраницаКонтрагента Тогда
		Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаКонтрагент;
		
		Элементы.ФормаНазад.Видимость = Ложь;
		
		Элементы.ФормаПеренестиВДокумент.Видимость = НЕ Форма.СопоставлятьНоменклатуру;
		
		Элементы.ФормаДалее.Видимость = Форма.СопоставлятьНоменклатуру;
		Элементы.ФормаДалее.КнопкаПоУмолчанию = Элементы.ФормаДалее.Видимость;
		
		Форма.Заголовок = НСтр("ru = 'Помощник сопоставления контрагентов'");
		Элементы.ДекорацияЗаголовок.Заголовок = НСтр("ru = 'Сопоставьте покупателя интернет-магазина с данными в информационной базе'");
	Иначе
		Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаНоменклатура;
		
		Элементы.ФормаНазад.Видимость = Форма.СопоставлятьКонтрагента;
		Элементы.ФормаДалее.Видимость = Ложь;
		
		Элементы.ФормаПеренестиВДокумент.Видимость = Истина;
		Элементы.ФормаПеренестиВДокумент.КнопкаПоУмолчанию = Истина;
		
		Форма.Заголовок = НСтр("ru = 'Помощник сопоставления номенклатуры'");
		Элементы.ДекорацияЗаголовок.Заголовок = НСтр("ru = 'Сопоставьте товары и услуги интернет-магазина с данными в информационной базе'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

