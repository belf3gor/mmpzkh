////////////////////////////////////////////////////////////////////////////////
// Модуль объекта Обработка.СопоставлениеНоменклатурыБЭД
//  
////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Находит и помещает варианты сопоставления номенклатуры во временное хранилище.
// Используется для поиска вариантов в фоном режиме.
//
// Параметры:
//  Параметры - Структура - параметры поиска вариантов:
//   * НаборНоменклатурыКонтрагентов - Массив - набор номенклатуры контрагентов, для которой нужно найти варианты.
//                                              См. ОбменСКонтрагентамиСлужебныйКлиентСервер.НоваяНоменклатураКонтрагента.
//  АдресРезультата - Строка - адрес во временном хранилище, по которому будут помещены найденные варианты.
//
Процедура НайтиВариантыСопоставленияНоменклатуры(Параметры, АдресРезультата) Экспорт
	
	НайденныеВарианты = ОбменСКонтрагентамиСлужебный.ПодобратьВариантыСопоставленияНоменклатуры(Параметры.НаборНоменклатурыКонтрагентов);
	
	ПоместитьВоВременноеХранилище(НайденныеВарианты, АдресРезультата);
	
КонецПроцедуры

// Поиск номенклатуры по идентификаторам для последующего сопоставления, с помещением результата во временное хранилище.
//
// Параметры:
//  Параметры - Массив - массив структур с ключами: ИдентификаторНоменклатуры (Строка), ИдентификаторХарактеристики (Строка).
//  АдресРезультата - Строка - адрес во временном хранилище, по которому будут помещены найденные варианты.
//
Процедура НайтиВариантыСопоставленияНоменклатурыПоИдентификаторам(Параметры, АдресРезультата) Экспорт
	
	НайденныеСсылки = Новый Массив;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.РаботаСНоменклатурой") Тогда
		
		МодульРаботаСНоменклатурой = ОбщегоНазначения.ОбщийМодуль("РаботаСНоменклатурой");
		
		НайденныеСсылки = МодульРаботаСНоменклатурой.НоменклатураИХарактеристикиПоИдентификаторамСПроверкойВСервисе(Параметры);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(НайденныеСсылки, АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#Иначе
	
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
	
#КонецЕсли