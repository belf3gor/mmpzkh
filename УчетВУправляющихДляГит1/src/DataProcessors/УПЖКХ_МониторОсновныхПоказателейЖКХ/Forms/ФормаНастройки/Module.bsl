
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область Обработчики_событий_формы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияРеквизитов();
	
	ПостоянныйРаздел = Перечисления.УПЖКХ_РазделыМонитораРуководителяЖКХ.ПолучитьОсновнойРазделМонитора();
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область Обработчики_команд_формы

&НаКлиенте
// Обработчик команды "УстановитьФлажки" формы.
Процедура УстановитьФлажки(Команда)
	
	ЕстьИзменения = Ложь;
	
	Для Каждого ТекЭлемент Из СписокРазделов Цикл
		
		Если НЕ ТекЭлемент.Пометка Тогда
			
			ТекЭлемент.Пометка = Истина;
			ЕстьИзменения      = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = ЕстьИзменения;
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "УстановитьСтандартныеНастройки" формы.
Процедура УстановитьСтандартныеНастройки(Команда)
	
	ЗаполнитьЗначенияРеквизитов(Ложь);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "СохранитьИЗакрыть" формы.
Процедура СохранитьИЗакрыть(Команда)
	
	СохранитьНастройкиНаСервере();
	
	Закрыть(Модифицированность);
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "Отмена" формы.
Процедура Отмена(Команда)
	
	Закрыть(Ложь);
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "СнятьФлажки" формы.
Процедура СнятьФлажки(Команда)
	
	ЕстьИзменения = Ложь;
	
	Для Каждого ТекЭлемент Из СписокРазделов Цикл
		
		Если ТекЭлемент.Значение = ПостоянныйРаздел Тогда
			
			Продолжить;
			
		ИначеЕсли ТекЭлемент.Пометка Тогда
			
			ТекЭлемент.Пометка = Ложь;
			ЕстьИзменения      = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = ЕстьИзменения;
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область Обработчики_событий_элементов_формы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ВыполнитьСравнение".
Процедура ВыполнитьСравнениеПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ВариантОкругления".
Процедура ВариантОкругленияПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "СписокРазделов".
Процедура СписокРазделовПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ПоказыватьУведомлениеОНастройке".
Процедура ПоказыватьУведомлениеОНастройкеПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область Вспомогательные_процедуры_и_функции

&НаСервере
// Процедура заполняет значения реквизитов формы из структуры.
Процедура ЗаполнитьЗначенияРеквизитов(ИзВнешнихДанных = Истина)
	
	Если ИзВнешнихДанных Тогда
		СтруктураЗначений = Параметры;
	Иначе
		СтруктураЗначений = Обработки.УПЖКХ_МониторОсновныхПоказателейЖКХ.ПолучитьСтандартныеНастройки();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураЗначений, "СписокРазделов, ВариантОкругления,
															|ВыполнитьСравнение, ПоказыватьУведомлениеОНастройке");
	
КонецПроцедуры

&НаСервере
// Процедура сохраняет настройки в Хранилище общих настроек.
Процедура СохранитьНастройкиНаСервере()
	
	ХранилищеОбщихНастроек.Сохранить("МониторРуководителяЖКХ", "СписокРазделов", СписокРазделов);
	
	ХранилищеОбщихНастроек.Сохранить("МониторРуководителяЖКХ", "ПоказыватьУведомлениеОНастройке", ПоказыватьУведомлениеОНастройке);
	
	ХранилищеОбщихНастроек.Сохранить("МониторРуководителяЖКХ", "ВыполнитьСравнение", ВыполнитьСравнение);
	
	ХранилищеОбщихНастроек.Сохранить("МониторРуководителяЖКХ", "ВариантОкругления", ВариантОкругления);
	
КонецПроцедуры

#КонецОбласти
