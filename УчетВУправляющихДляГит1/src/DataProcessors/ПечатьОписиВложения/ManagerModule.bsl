#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьВложения") Тогда
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьВложения", "Опись вложения",
			СформироватьПечатнуюФорму(ПараметрыПечати, ИмяМакета),,ИмяМакета);
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	
КонецПроцедуры

Функция НоваяТаблицаВложенийОписи() Экспорт
	
	ВложенныеПредметы = Новый ТаблицаЗначений;
	
	ВложенныеПредметы.Колонки.Добавить("НаименованиеПредмета", Новый ОписаниеТипов("Строка"));
	ВложенныеПредметы.Колонки.Добавить("Количество",
		ОбщегоНазначения.ОписаниеТипаЧисло(3, 0, ДопустимыйЗнак.Неотрицательный));
	ВложенныеПредметы.Колонки.Добавить("ОбъявленнаяЦенность",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	
	Возврат ВложенныеПредметы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция осуществляет печать формы ф. 107 "Опись вложения" для отправки ценных писем
//
// Параметры:
//  ПараметрыПечати - Структура - структура данных описи. Элементы Структуры:
//      * АдресДанныхОписи - Строка - адрес временного хранилища, Содержит структуру с элементами
//          * Отправитель - Строка - организация/физ.лицо
//          * ВложенныеПредметы - ТаблицаЗначений - опись вложенных предметов, состоит из колонок:
//              * НаименованиеПредмета - Строка - наименование вложенного предмета
//              * Количество           - Число  - количество вложенных предметов
//              * ОбъявленнаяЦенность  - Число  - объявленная ценность вложенного предмета
// 
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма описи вложения
//
Функция СформироватьПечатнуюФорму(ПараметрыПечати, ИмяМакета)
	
	ДанныеОписи = ПолучитьИзВременногоХранилища(ПараметрыПечати.АдресДанныхОписи);
	
	ИмяМакета = "ПФ_MXL_ОписьВложения";
	МакетОписи = ПолучитьМакет(ИмяМакета);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОписьВложения";
	
	// Шапка.
	Шапка = МакетОписи.ПолучитьОбласть("Шапка");
	ТабличныйДокумент.Вывести(Шапка);
	ТабличныйДокумент.Присоединить(МакетОписи.ПолучитьОбласть("РазделительШапка"));
	ТабличныйДокумент.Присоединить(Шапка);
	
	ПочтовыйИдентификатор = МакетОписи.ПолучитьОбласть("ПочтовыйИдентификатор");
	ТабличныйДокумент.Вывести(ПочтовыйИдентификатор);
	ТабличныйДокумент.Присоединить(МакетОписи.ПолучитьОбласть("РазделительПочтовыйИдентификатор"));
	ТабличныйДокумент.Присоединить(ПочтовыйИдентификатор);
	
	// Таблица описи.
	ШапкаТаблицы = МакетОписи.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ШапкаТаблицы);
	ТабличныйДокумент.Присоединить(МакетОписи.ПолучитьОбласть("РазделительШапкаТаблицы"));
	ТабличныйДокумент.Присоединить(ШапкаТаблицы);
	
	ВложенныеПредметы = ДанныеОписи.ВложенныеПредметы;
	КолСтрок = ВложенныеПредметы.Количество();
	Для НомерСтроки = 1 По 20 Цикл // количество выводимых строк таблицы
		
		СтрокаОписи = МакетОписи.ПолучитьОбласть("СтрокаТаблицы");
		Если НомерСтроки <= КолСтрок Тогда
			СтрокаОписи.Параметры.Заполнить(ВложенныеПредметы[НомерСтроки - 1]);
			СтрокаОписи.Параметры.ПорядковыйНомер = НомерСтроки;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(СтрокаОписи);
		ТабличныйДокумент.Присоединить(МакетОписи.ПолучитьОбласть("РазделительСтрокаТаблицы"));
		ТабличныйДокумент.Присоединить(СтрокаОписи);
		
	КонецЦикла;
	
	ПодвалТаблицы = МакетОписи.ПолучитьОбласть("ПодвалТаблицы");
	ПодвалТаблицы.Параметры.ИтогоКоличество          = ВложенныеПредметы.Итог("Количество");
	ПодвалТаблицы.Параметры.ИтогоОбъявленнаяЦенность = ВложенныеПредметы.Итог("ОбъявленнаяЦенность");
	ТабличныйДокумент.Вывести(ПодвалТаблицы);
	ТабличныйДокумент.Присоединить(МакетОписи.ПолучитьОбласть("РазделительПодвалТаблицы"));
	ТабличныйДокумент.Присоединить(ПодвалТаблицы);
	
	// Подвал.
	Подвал = МакетОписи.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Отправитель = ДанныеОписи.Отправитель;
	ТабличныйДокумент.Вывести(Подвал);
	ТабличныйДокумент.Присоединить(МакетОписи.ПолучитьОбласть("РазделительПодвал"));
	ТабличныйДокумент.Присоединить(Подвал);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли