#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Настройки = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить("ПодборНМА", "");
	Если Настройки <> Неопределено Тогда
		Если Настройки.Свойство("ИсторияПоискаНМА") Тогда
			Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(Настройки.ИсторияПоискаНМА);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") Тогда
		
		Для каждого ЭлементОтбора Из Параметры.Отбор Цикл
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ПодборТаблица,
				ЭлементОтбора.Ключ, ЭлементОтбора.Значение, Истина);
		КонецЦикла;
		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
	КонецЕсли;

	Если ЭтоАдресВременногоХранилища(Параметры.АдресВХранилище) Тогда
		НМА = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		Объект.Корзина.Загрузить(НМА);
	КонецЕсли;

	СформироватьИнформационнуюНадпись(ЭтаФорма);

	ТекущаяГруппа = Справочники.НематериальныеАктивы.ПустаяСсылка();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЗавершениеРаботы И ДобавленыНовые Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если НЕ ПеренестиВДокумент И ДобавленыНовые Тогда

		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ВопросПеренестиВДокументЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Подобранные нематериальные активы не перенесены в документ.
			|
			|Перенести?'"), РежимДиалогаВопрос.ДаНетОтмена);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;

	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ИсторияПоискаНМА", Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());

	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("ПодборНМА", "", ПараметрыЗакрытия);

	Если ПеренестиВДокумент Тогда
		АдресВХранилище = ПоместитьВХранилище();
		Структура = Новый Структура("АдресВХранилище", АдресВХранилище);
		ПеренестиВДокумент = Истина;
		ОповеститьОВыборе(Структура);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)

	ПрименитьПоиск();

КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)

	ПрименитьПоиск();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИерархия

&НаКлиенте
Процедура ИерархияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	УстановитьОтборПоИерархии(ВыбраннаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ИерархияПриАктивизацииСтроки(Элемент)

	ТекущаяСтрока = Элементы.Иерархия.ТекущаяСтрока;
	Если ТекущаяСтрока <> ТекущаяГруппа Тогда
		ТекущаяГруппа = ТекущаяСтрока;
		УстановитьОтборПоИерархии(ТекущаяСтрока);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодборТаблица

&НаКлиенте
Процедура ПодборТаблицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущиеДанные <> Неопределено И НЕ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("НематериальныйАктив", Элемент.ТекущиеДанные.Ссылка);
		ДобавитьВКорзину(СтруктураПараметры, 1);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКорзина

&НаКлиенте
Процедура КорзинаПриИзменении(Элемент)

	ЭтаФорма.Модифицированность = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)

	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьИнформационнуюНадпись(Форма)

	ШаблонНадписи = НСтр("ru = 'Всего подобрано %1 позиции(ия)'");
	Форма.ИнформационнаяНадпись = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНадписи, Форма.Объект.Корзина.Количество());

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоИерархии(Группа)

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ПодборТаблица, "Ссылка",
		Группа, ЗначениеЗаполнено(Группа), ВидСравненияКомпоновкиДанных.ВИерархии);

КонецПроцедуры

&НаКлиенте
Процедура ПрименитьПоиск()

	Использование = ЗначениеЗаполнено(СтрокаПоиска);

	ГруппаОтбора = ОтборыСписковКлиентСервер.СоздатьГруппуЭлементовОтбора(
		ЭтаФорма.ПодборТаблица.Отбор.Элементы, "ПоискПоПодстроке",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора, "Наименование", СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора, "НаименованиеПолное", СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора, "Код", СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);

	СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.СтрокаПоиска.СписокВыбора, СтрокаПоиска);
	ОбновитьОтображениеДанных();

КонецПроцедуры

&НаСервере
Функция ПоместитьВХранилище()

	АдресВХранилище = ПоместитьВоВременноеХранилище(Объект.Корзина.Выгрузить(), УникальныйИдентификатор);

	Возврат АдресВХранилище;

КонецФункции

&НаКлиенте
Процедура ДобавитьВКорзину(Параметры, Количество)

	РезультатПоиска = Объект.Корзина.НайтиСтроки(Параметры);
	Если РезультатПоиска.Количество() = 0 Тогда
		ТекущаяСтрока = Объект.Корзина.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Параметры);

		ДобавленыНовые = Истина;
	Иначе
		ТекущаяСтрока = РезультатПоиска[0];
	КонецЕсли;

	// Активизируем текущую строку табличной части
	Элементы.Корзина.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();

	СформироватьИнформационнуюНадпись(ЭтаФорма);

	ЭтаФорма.Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПеренестиВДокументЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		ДобавленыНовые = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти