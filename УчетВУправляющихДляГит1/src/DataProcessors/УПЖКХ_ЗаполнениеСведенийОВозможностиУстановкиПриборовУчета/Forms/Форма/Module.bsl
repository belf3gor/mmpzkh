
#Область ВспомогательныеПроцедурыИФункции

&НаСервере
// Процедура записывает сведения для объектов.
Процедура ЗаписатьСведения()
	
	ВыборкаОбъектовИУслуг = ПолучитьВыборкуОбъектовИУслугДляЗаписи();
	
	Пока ВыборкаОбъектовИУслуг.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.УПЖКХ_СведенияОВозможностиУстановкиПриборовУчетаВЗданияхИПомещениях.СоздатьМенеджерЗаписи();
		Если ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания") Тогда
			МенеджерЗаписи.Здание = ВыборкаОбъектовИУслуг.ЗданиеПомещение;
		Иначе
			МенеджерЗаписи.Здание = Здание;
			МенеджерЗаписи.Помещение = ВыборкаОбъектовИУслуг.ЗданиеПомещение;
		КонецЕсли;
		МенеджерЗаписи.Услуга = ВыборкаОбъектовИУслуг.Услуга;
		МенеджерЗаписи.ТехническаяВозможностьПрисутствует = ВыборкаОбъектовИУслуг.ТехническаяВозможность;
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Если ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания") Тогда
				УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Сведения для Услуги "" + ВыборкаОбъектовИУслуг.Услуга + "" на здание " + ВыборкаОбъектовИУслуг.ЗданиеПомещение + " не записаны: " + ОписаниеОшибки());
			Иначе
				УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Сведения для Услуги "" + ВыборкаОбъектовИУслуг.Услуга + "" на помещение " + ВыборкаОбъектовИУслуг.ЗданиеПомещение + " здания " + Здание +" не записаны: " + ОписаниеОшибки());
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Функция возвращает выборку объектов и услуг.
Функция ПолучитьВыборкуОбъектовИУслугДляЗаписи()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объекты",Объекты.Выгрузить());
	Запрос.УстановитьПараметр("Услуги", Услуги.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.ЗданиеПомещение КАК ЗданиеПомещение
	|ПОМЕСТИТЬ ВрОбъектыИсходная
	|ИЗ
	|	&Объекты КАК Объекты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВрОбъектыИсходная.ЗданиеПомещение КАК ЗданиеПомещение,
	|	ЕСТЬNULL(КВП_Здания.ЭтоГруппа, ЛОЖЬ) КАК ЭтоГруппа
	|ПОМЕСТИТЬ ВрОбъекты
	|ИЗ
	|	ВрОбъектыИсходная КАК ВрОбъектыИсходная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КВП_Здания КАК КВП_Здания
	|		ПО ВрОбъектыИсходная.ЗданиеПомещение = КВП_Здания.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.ЗданиеПомещение КАК Группа
	|ПОМЕСТИТЬ ГруппыЗданий
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.ЗданиеПомещение ССЫЛКА Справочник.КВП_Здания
	|	И Объекты.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_Здания.Ссылка КАК Здание
	|ПОМЕСТИТЬ ЗданияПоГруппам
	|ИЗ
	|	Справочник.КВП_Здания КАК КВП_Здания
	|ГДЕ
	|	КВП_Здания.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ
	|				ГруппыЗданий.Группа
	|			ИЗ
	|				ГруппыЗданий КАК ГруппыЗданий)
	|	И НЕ КВП_Здания.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.ЗданиеПомещение КАК ЗданиеПомещение
	|ПОМЕСТИТЬ ВрВсеЗдания
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.ЗданиеПомещение ССЫЛКА Справочник.КВП_Здания
	|	И НЕ Объекты.ЭтоГруппа
	|	И НЕ Объекты.ЗданиеПомещение = ЗНАЧЕНИЕ(Справочник.КВП_Здания.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗданияПоГруппам.Здание
	|ИЗ
	|	ЗданияПоГруппам КАК ЗданияПоГруппам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Объекты.ЗданиеПомещение
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.ЗданиеПомещение ССЫЛКА Справочник.УПЖКХ_Помещения
	|	И НЕ Объекты.ЗданиеПомещение = ЗНАЧЕНИЕ(Справочник.УПЖКХ_Помещения.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Услуги.Услуга КАК Услуга,
	|	Услуги.ТехническаяВозможностьПрисутствует КАК ТехническаяВозможность
	|ПОМЕСТИТЬ ВрВсеУслуги
	|ИЗ
	|	&Услуги КАК Услуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеУслуги.Услуга КАК Услуга,
	|	ВсеУслуги.ТехническаяВозможность КАК ТехническаяВозможность
	|ПОМЕСТИТЬ ВрУслуги
	|ИЗ
	|	ВрВсеУслуги КАК ВсеУслуги
	|ГДЕ
	|	НЕ ВсеУслуги.Услуга = ЗНАЧЕНИЕ(Справочник.КВП_Услуги.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокЗданий.ЗданиеПомещение КАК ЗданиеПомещение,
	|	СписокУслуг.Услуга КАК Услуга,
	|	СписокУслуг.ТехническаяВозможность КАК ТехническаяВозможность,
	|	ПРЕДСТАВЛЕНИЕ(СписокЗданий.ЗданиеПомещение) КАК ЗданиеПомещениеНаименование,
	|	ПРЕДСТАВЛЕНИЕ(СписокУслуг.Услуга) КАК УслугаНаименование
	|ИЗ
	|	ВрВсеЗдания КАК СписокЗданий,
	|	ВрУслуги КАК СписокУслуг";
	
	ВыборкаОбъектовИУслуг = Запрос.Выполнить().Выбрать();
	
	Возврат ВыборкаОбъектовИУслуг;
	
КонецФункции

&НаСервере
// Процедура изменяет видимость поля "Здание".
Процедура ИзменениеВидимости()
	
	Если ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания") Тогда
		Здание = ПредопределенноеЗначение("Справочник.КВП_Здания.ПустаяСсылка");
		Элементы.Здание.Видимость = Ложь;
		НовыеПараметры = Новый ФиксированныйМассив(Новый Массив);
		Элементы.ОбъектыЗданиеПомещение.ПараметрыВыбора = НовыеПараметры;
		Элементы.ОбъектыЗданиеПомещение.ВыборГруппИЭлементов = ГруппыИЭлементы.ГруппыИЭлементы;
	Иначе
		Элементы.Здание.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "ПроверитьИУдалитьВыбранныеОбъекты()".
Процедура ОбработатьРезультатВопросаУдалитьВыбранныеОбъекты(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объекты.Очистить();
		ИзменениеВидимости();
	Иначе
		Если ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания") Тогда
			ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Помещения");
		Иначе
			ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания")
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "ЗданиеОбработкаВыбора".
Процедура ОбработатьРезультатВопросаОчиститьПомещения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Здание = ДополнительныеПараметры.НовоеЗначение;
		МассивПараметров = Новый Массив;
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Здание);
		МассивПараметров.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(МассивПараметров);
		Элементы.ОбъектыЗданиеПомещение.ПараметрыВыбора = НовыеПараметры;
		Объекты.Очистить();
	Иначе
		Здание = ДополнительныеПараметры.СтароеЗначение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Обработчик события "ПриСозданииНаСервере" формы.
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Здание.Видимость = Ложь;
	ВариантЗаполненияСведений = Перечисления.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания;
	
КонецПроцедуры

// Обработчик события "ОбработкаВыбора" формы.
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если Объекты.НайтиСтроки(Новый Структура("ЗданиеПомещение", ВыбранноеЗначение)).Количество() = 0 Тогда
		НоваяСтрокаТЧ = Объекты.Добавить();
		НоваяСтрокаТЧ.ЗданиеПомещение = ВыбранноеЗначение;
	Иначе
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Объект уже добавлен в табличную часть.");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// Обработчик события "ПриИзменении" переключателя "ВариантЗаполненияСведений".
&НаКлиенте
Процедура ВариантЗаполненияСведенийПриИзменении(Элемент)
	
	Если Объекты.Количество()>0 Тогда
		
		ТекстВопроса = "Табличная часть с выбранными зданиями/помещениями будет очищена. Продолжить?";
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработатьРезультатВопросаУдалитьВыбранныеОбъекты", ЭтаФорма),
					   ТекстВопроса,
					   РежимДиалогаВопрос.ДаНет);
	Иначе
		ИзменениеВидимости();
	КонецЕсли;
	
	
КонецПроцедуры

// Обработчик события "ПередНачаломДобавления" табличной части "Объекты".
&НаКлиенте
Процедура ОбъектыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Помещения") Тогда
		Если Здание.Пустая() Тогда
			Отказ = Истина;
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Перед началом добавления необходимо заполнить поле ""Здание""");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "НачалоВыбора" колонки "ЗданиеПомещение" табличной части "Объекты".
&НаКлиенте
Процедура ОбъектыЗданиеПомещениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания") Тогда
		ФормаЗдание = ПолучитьФорму("Справочник.КВП_Здания.ФормаВыбора",,Элемент);
		ФормаЗдание.Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
		ФормаЗдание.Открыть();
	Иначе
		ЗначениеОтбора = Новый Структура("Владелец", Здание);
		ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
		ОткрытьФорму("Справочник.УПЖКХ_Помещения.ФормаВыбора", ПараметрыВыбора, Элемент);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "ОбработкаВыбора" поля "Здание".
&НаКлиенте
Процедура ЗданиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объекты.Количество()>0 И НЕ ВыбранноеЗначение = Здание Тогда
		ДопПараметры = Новый Структура("СтароеЗначение, НовоеЗначение", Здание, ВыбранноеЗначение);
		ТекстВопроса = "Табличная часть с выбранными помещениями будет очищена. Продолжить?";
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработатьРезультатВопросаОчиститьПомещения", ЭтаФорма, ДопПараметры),
					   ТекстВопроса,
					   РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "ОбработкаВыбора" колонки "Услуга" табличной части "Услуги".
&НаКлиенте
Процедура УслугиУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Услуги.НайтиСтроки(Новый Структура("Услуга", ВыбранноеЗначение)).Количество() > 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Услуга """+ ВыбранноеЗначение +""" уже добавлена в табличную часть.");
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик команды "ПодборОбъекта".
&НаКлиенте
Процедура ПодборОбъекта(Команда)
	
	Если ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Здания") Тогда
		ФормаЗдание = ПолучитьФорму("Справочник.КВП_Здания.ФормаВыбора",,ЭтотОбъект);
		ФормаЗдание.Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
	Иначе
		Если Не Здание.Пустая()Тогда
			ЗначениеОтбора = Новый Структура("Владелец", Здание);
			ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
			ФормаЗдание = ПолучитьФорму("Справочник.УПЖКХ_Помещения.ФормаВыбора", ПараметрыВыбора, ЭтотОбъект);
		Иначе
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Перед подбором необходимо заполнить поле Здание");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ФормаЗдание.ЗакрыватьПриВыборе = Ложь;
	ФормаЗдание.Открыть();
	
КонецПроцедуры

// Обработчик команды "Записать".
&НаКлиенте
Процедура Записать(Команда)
	
	Если Объекты.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не заполнены здания/помещения.");
	ИначеЕсли Услуги.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не заполнены услуги.");
	ИначеЕсли ВариантЗаполненияСведений = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВариантыЗаполненияСведенийОВозможностиУстановкиПУ.Помещения")
		И Здание.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не заполнено здание.");
	Иначе
		ЗаписатьСведения();
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Запись сведений завершена.");
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти





