
&НаКлиенте
Перем ЗаданныеВопросы;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресСведенийОбОрганизации = Параметры.АдресСведенийОбОрганизации;
	СведенияОбОрганизации = ПолучитьИзВременногоХранилища(АдресСведенийОбОрганизации);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СведенияОбОрганизации);
	
	ВводЗадолженности = Параметры.ВводЗадолженности;
	Правило           = Параметры.Правило;
	
	КодЗадачи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Правило, "Владелец.Код");
	
	ЭтоИПНулевка = УчетСтраховыхВзносовИП.ЭтоИПНулевка(Организация);
	
	Если Не ЭтоИПНулевка Тогда
		Элементы.НадписьДополнение3.Заголовок = НСтр("ru = 'За годы, которые вы не оплатили, будут начислены взносы.'");
		Элементы.НадписьПС.Заголовок = НСтр("ru = 'ПФР:'");
		Элементы.НадписьМС.Заголовок = НСтр("ru = 'ФФОМС:'");
	КонецЕсли;
	
	Период = ПомощникиПоУплатеНалоговИВзносов.ГраницаОтчетностиПрошлыхПериодов(Организация);
	
	ЗаполнитьЗадолженность();
	
	НомерВопроса  = 0;
	Если ВводЗадолженности Тогда
		СледующийВопрос = "ГруппаВводЗадолженности";
	ИначеЕсли Подключена1СОтчетность И ЭтоИПНулевка Тогда
		
		Если РегистрацияВПрошломГоду Тогда
			СледующийВопрос = "ГруппаВопрос8";
		Иначе
			СледующийВопрос = "ГруппаВопрос7";
		КонецЕсли;
		
	Иначе
	
		Если РегистрацияВПрошломГоду Тогда
			СледующийВопрос = "ГруппаВопрос6";
			Если Не ЭтоИПНулевка Тогда
				ОплаченныеГоды.Добавить(ГодНачалаДеятельности, Формат(ГодНачалаДеятельности, "ЧГ=0") + " " + НСтр("ru = 'год'"));
			КонецЕсли;
		ИначеЕсли РегистрацияДо3Лет Тогда
			
			СледующийВопрос = "ГруппаВопрос1";
			Для Год = ГодНачалаДеятельности По ГодТекущий - 1 Цикл
				ОплаченныеГоды.Добавить(Год, Формат(Год, "ЧГ=0") + " " + НСтр("ru = 'год'"));
			КонецЦикла;
			
		ИначеЕсли РегистрацияБолее3Лет Тогда
			
			СледующийВопрос = "ГруппаВопрос1";
			Для Год = ГодТекущий - 3 По ГодТекущий - 1 Цикл
				ОплаченныеГоды.Добавить(Год, Формат(Год, "ЧГ=0") + " " + НСтр("ru = 'год'"));
			КонецЦикла;
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаданныеВопросы = Новый Массив;
	Далее();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Отправлен запрос в ФНС через 1С-Отчетность.
	Если ИмяСобытия = "Успешная отправка"
		И ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("РезультатОтправки")
		И ТипЗнч(Параметр.РезультатОтправки) = Тип("ДокументСсылка.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика") Тогда
		
		ЗапрошенаСправкаСохранитьСостояниеПомощника(Организация, Параметр.РезультатОтправки);
		Оповестить("ПомощникОплатыВзносовИП_ИзменениеСостояния");
		
		Результат = Новый Структура;
		Результат.Вставить("АдресСведенийОбОрганизации", АдресСведенийОбОрганизации);
		Результат.Вставить("РезультатТестирования",      Неопределено); // результат тестирования обработан в форме тестов
		Результат.Вставить("ОплаченныеГоды",             ОплаченныеГоды);
		Результат.Вставить("ДолгПС",  ДолгПС);
		Результат.Вставить("ПеняПС",  ПеняПС);
		Результат.Вставить("ШтрафПС", ШтрафПС);
		Результат.Вставить("ДолгМС",  ДолгМС);
		Результат.Вставить("ПеняМС",  ПеняМС);
		Результат.Вставить("ШтрафМС", ШтрафМС);
		
		Закрыть(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Переключатель1ПриИзменении(Элемент)
	
	ПодготовитьВопрос1();
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура Переключатель4_1ПриИзменении(Элемент)
	
	Переключатель4_2 = "";
	
КонецПроцедуры

&НаКлиенте
Процедура Переключатель4_2ПриИзменении(Элемент)
	
	Переключатель4_1 = "";
	
КонецПроцедуры

&НаКлиенте
Процедура Переключатель2ПриИзменении(Элемент)
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура Флажок3_1ПриИзменении(Элемент)
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура Флажок3_2ПриИзменении(Элемент)
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура Флажок3_3ПриИзменении(Элемент)
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура Переключатель8ПриИзменении(Элемент)
	
	СледующийВопрос = Переключатель8;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КнопкаДалее(Команда)
	
	Далее();
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНазад(Команда)
	
	Назад();
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаГотово(Команда)
	
	Далее();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Далее()
	
	НомерВопроса = НомерВопроса + 1;
	ПерейтиКВопросу();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад()
	
	НомерВопроса = НомерВопроса - 1;
	ЗаданныеВопросы.Удалить(ЗаданныеВопросы.ВГраница());
	СледующийВопрос = ЗаданныеВопросы[ЗаданныеВопросы.ВГраница()];
	ПерейтиКВопросу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКВопросу(ШагНазад = Ложь)
	
	ИмяТекущейСтраницы = Элементы.ГруппаТест.ТекущаяСтраница.Имя;
	
	Если ИмяТекущейСтраницы = "ГруппаВопрос3" Тогда
		
		// Запоминаем годы, когда взносы были оплачены.
		Для Н = 1 по 3 Цикл
			
			ИмяЭлемента = "Флажок3_" + Н;
			Элемент = Элементы[ИмяЭлемента];
			Если Не Элемент.Видимость Тогда
				Прервать;
			КонецЕсли;
			ОплаченныеГоды[Н - 1].Пометка = ЭтотОбъект[ИмяЭлемента];
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СледующийВопрос) Тогда
		
		Если ИмяТекущейСтраницы = "ГруппаВопрос1" Тогда
			СледующийВопрос = Переключатель1;
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВопрос2" Тогда
			
			СледующийВопрос = Переключатель2;
			Если РегистрацияВПрошломГоду И СледующийВопрос = "ГруппаВопрос3" Тогда
				Если ЭтоИПНулевка Тогда
					СледующийВопрос = "ГруппаВопрос4"; // пропускаем вопрос о годах
				Иначе
					СледующийВопрос = "ГруппаВопрос6_1"; // спрашиваем, оплачены ли взносы за прошлый год, список годов не выводим
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВопрос3" Тогда
			
			КоличествоПометок = 0;
			Для Каждого ЭлементСписка Из ОплаченныеГоды Цикл
				
				Если ЭлементСписка.Пометка Тогда
					КоличествоПометок = КоличествоПометок + 1;
				КонецЕсли;
				
			КонецЦикла;
			Если КоличествоПометок = 0 Тогда // ни один год не оплачен
				Если ЭтоИПНулевка Тогда
					СледующийВопрос = "ГруппаВопрос4";
				Иначе // если это не нулевка, завершаем тест на этом вопросе
					СледующийВопрос = РезультатЕстьДолги();
				КонецЕсли;
			ИначеЕсли КоличествоПометок = ОплаченныеГоды.Количество() Тогда // все года оплачены
				СледующийВопрос = РезультатПрошлыеГодыОплачены();
			Иначе
				СледующийВопрос = РезультатЕстьДолги();
			КонецЕсли;
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВопрос6_1" Тогда
			СледующийВопрос = РезультатЕстьДолги();
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВопрос4" Тогда
			СледующийВопрос = ?(ЗначениеЗаполнено(Переключатель4_1), Переключатель4_1, Переключатель4_2);
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВопрос6" Тогда
			СледующийВопрос = Переключатель6;
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВопрос7" Тогда
			СледующийВопрос = Переключатель7;
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВопрос8" Тогда
			СледующийВопрос = Переключатель8;
		ИначеЕсли ИмяТекущейСтраницы = "ГруппаВводЗадолженности" Тогда
			СледующийВопрос = РезультатВведенаЗадолженность();
		КонецЕсли;
		
	КонецЕсли;
	
	Если СледующийВопрос = "ГруппаВопрос1" Тогда
		ПодготовитьВопрос1();
	ИначеЕсли СледующийВопрос = "ГруппаВопрос2" Тогда
		ПодготовитьВопрос2();
	ИначеЕсли СледующийВопрос = "ГруппаВопрос3" Тогда
		ПодготовитьВопрос3();
	ИначеЕсли СледующийВопрос = "ГруппаВопрос4" Тогда
		ПодготовитьВопрос4();
	ИначеЕсли СледующийВопрос = "ГруппаВопрос6" Тогда
		ПодготовитьВопрос6();
	ИначеЕсли СледующийВопрос = "ГруппаВопрос6_1" Тогда
		ПодготовитьВопрос6_1();
	ИначеЕсли СледующийВопрос = "ГруппаВопрос7" Тогда
		ПодготовитьВопрос7();
	ИначеЕсли СледующийВопрос = "ГруппаВопрос8" Тогда
		ПодготовитьВопрос8();
	ИначеЕсли СледующийВопрос = "ГруппаВводЗадолженности" Тогда
		ПодготовитьСтраницуВводаЗадолженности();
	КонецЕсли;
	
	Если СледующийВопрос = РезультатПрошлыеГодыОплачены()
		ИЛИ СледующийВопрос = РезультатЕстьДолги()
		ИЛИ СледующийВопрос = РезультатПодготовитьЗаявление()
		ИЛИ СледующийВопрос = РезультатВНалоговуюНеПойду()
		ИЛИ СледующийВопрос = РезультатПолучитьСправку()
		ИЛИ СледующийВопрос = РезультатВведенаЗадолженность() Тогда
		
		Результат = Новый Структура;
		Если СледующийВопрос = РезультатВведенаЗадолженность()
			И (ДолгПС + ДолгМС + ПеняПС + ПеняМС + ШтрафПС + ШтрафМС) = 0 Тогда
			
			// Пользователь указал, что задолженность по взносам = 0
			СледующийВопрос = РезультатПрошлыеГодыОплачены(); 
		КонецЕсли;
		
		ПроверитьРезультатИЗавершитьТест(СледующийВопрос);
		
	Иначе
		
		Элементы.ГруппаТест.ТекущаяСтраница = Элементы[СледующийВопрос];
		УстановитьЗаголовок();
		Если Не ШагНазад Тогда
			ЗаданныеВопросы.Добавить(СледующийВопрос);
		КонецЕсли;
		СледующийВопрос = "";
		
	КонецЕсли;
	
КонецПроцедуры

// Первый вопрос, если с момента регистрации ИП прошло более года.
&НаКлиенте
Процедура ПодготовитьВопрос1()
	
	Шаблон = НСтр("ru = 'Оплатили ли вы страховые взносы за %1-%2 годы?'");
	Элементы.НадписьВопрос1.Заголовок = СтрШаблон(Шаблон,
		?(РегистрацияБолее3Лет, Формат(ГодТекущий - 3, "ЧГ=0"), Формат(ГодНачалаДеятельности, "ЧГ=0")),
		Формат(ГодТекущий - 1, "ЧГ=0"));
	Если Не ЗначениеЗаполнено(Переключатель1) Тогда
		Переключатель1 = Элементы.Переключатель1.СписокВыбора[0].Значение;
	КонецЕсли;
	Элементы.КнопкаНазад.Видимость  = Ложь;
	Если Переключатель1 = РезультатПрошлыеГодыОплачены() Тогда
		Элементы.КнопкаДалее.Видимость  = Ложь;
		Элементы.КнопкаГотово.Видимость = Истина;
		Элементы.КнопкаГотово.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.КнопкаДалее.Видимость  = Истина;
		Элементы.КнопкаДалее.КнопкаПоУмолчанию = Истина;
		Элементы.КнопкаГотово.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьВопрос2()
	
	Если Не ЗначениеЗаполнено(Переключатель2) Тогда
		Переключатель2  = Элементы.Переключатель2.СписокВыбора[0].Значение;
	КонецЕсли;
	Элементы.КнопкаНазад.Видимость  = Истина;
	Элементы.КнопкаДалее.Видимость  = Истина;
	Элементы.КнопкаДалее.КнопкаПоУмолчанию = Истина;
	Элементы.КнопкаГотово.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьВопрос3()
	
	Элементы.Флажок3_1.Видимость = Ложь;
	Элементы.Флажок3_2.Видимость = Ложь;
	Элементы.Флажок3_3.Видимость = Ложь;
	
	Сч = 0;
	Для Каждого ЭлементСписка Из ОплаченныеГоды Цикл
		
		Сч = Сч + 1;
		ИмяЭлемента = "Флажок3_" + Сч;
		Элемент = Элементы[ИмяЭлемента];
		Элемент.Видимость       = Истина;
		Элемент.Заголовок       = ЭлементСписка.Представление;
		ЭтотОбъект[ИмяЭлемента] = ЭлементСписка.Пометка;
		
	КонецЦикла;
	
	Элементы.КнопкаНазад.Видимость  = Истина;
	Элементы.КнопкаДалее.Видимость  = ЭтоИПНулевка;
	Элементы.КнопкаДалее.КнопкаПоУмолчанию = ЭтоИПНулевка;
	Элементы.КнопкаГотово.Видимость = Не ЭтоИПНулевка;
	Элементы.КнопкаГотово.КнопкаПоУмолчанию = Не ЭтоИПНулевка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьВопрос4()
	
	Если Не (ЗначениеЗаполнено(Переключатель4_1) ИЛИ ЗначениеЗаполнено(Переключатель4_2)) Тогда
		Переключатель4_1  = Элементы.Переключатель4_1.СписокВыбора[0].Значение;
	КонецЕсли;
	
	Если РегистрацияБолее3Лет Тогда
		Элементы.НадписьДополнение4_2.Заголовок = НСтр("ru = 'Взносы будут рассчитаны за последние 3 года.'");
	КонецЕсли;
	
	Элементы.КнопкаНазад.Видимость  = Истина;
	Элементы.КнопкаДалее.Видимость  = Ложь;
	Элементы.КнопкаГотово.Видимость = Истина;
	Элементы.КнопкаГотово.КнопкаПоУмолчанию = Истина;
	
КонецПроцедуры

// Первый вопрос, если ИП зарегистрировался в прошлом году.
&НаКлиенте
Процедура ПодготовитьВопрос6()
	
	Шаблон = НСтр("ru = 'Оплатили ли вы страховые взносы за %1 год?'");
	Элементы.НадписьВопрос6.Заголовок = СтрШаблон(Шаблон, Формат(ГодНачалаДеятельности, "ЧГ=0"));
	Если Не ЗначениеЗаполнено(Переключатель6) Тогда
		Переключатель6 = Элементы.Переключатель6.СписокВыбора[0].Значение;
	КонецЕсли;
	Элементы.КнопкаНазад.Видимость  = Ложь;
	Элементы.КнопкаДалее.Видимость  = Истина;
	Элементы.КнопкаДалее.КнопкаПоУмолчанию = Истина;
	Элементы.КнопкаГотово.Видимость = Ложь;
	
КонецПроцедуры

// Первый вопрос, если ИП зарегистрировался в прошлом году, регулярная деятельность.
&НаКлиенте
Процедура ПодготовитьВопрос6_1()
	
	Шаблон = НСтр("ru = 'Начисление взносов за %1 год'");
	Элементы.НадписьВопрос6_1.Заголовок = СтрШаблон(Шаблон, Формат(ГодНачалаДеятельности, "ЧГ=0"));
	Элементы.КнопкаНазад.Видимость  = Истина;
	Элементы.КнопкаДалее.Видимость  = Ложь;
	Элементы.КнопкаГотово.КнопкаПоУмолчанию = Истина;
	Элементы.КнопкаГотово.Видимость = Истина;
	
КонецПроцедуры

// Первый вопрос, если с момента регистрации ИП прошло более года  и есть 1С-Отчетность.
&НаКлиенте
Процедура ПодготовитьВопрос7()
	
	Шаблон = НСтр("ru = 'Оплатили ли вы страховые взносы за %1-%2 годы?'");
	Элементы.НадписьВопрос7.Заголовок = СтрШаблон(Шаблон,
		?(РегистрацияБолее3Лет, Формат(ГодТекущий - 3, "ЧГ=0"), Формат(ГодНачалаДеятельности, "ЧГ=0")),
		Формат(ГодТекущий - 1, "ЧГ=0"));
	Если Не ЗначениеЗаполнено(Переключатель7) Тогда
		Переключатель7 = Элементы.Переключатель7.СписокВыбора[0].Значение;
	КонецЕсли;
	Элементы.КнопкаНазад.Видимость  = Ложь;
	Элементы.КнопкаДалее.Видимость  = Истина;
	Элементы.КнопкаДалее.КнопкаПоУмолчанию = Истина;
	Элементы.КнопкаГотово.Видимость = Ложь;
	
КонецПроцедуры

// Первый вопрос, если ИП зарегистрировался в прошлом году и есть 1С-Отчетность.
&НаКлиенте
Процедура ПодготовитьВопрос8()
	
	Шаблон = НСтр("ru = 'Оплатили ли вы страховые взносы за %1 год?'");
	Элементы.НадписьВопрос8.Заголовок = СтрШаблон(Шаблон, Формат(ГодНачалаДеятельности, "ЧГ=0"));
	Если Не ЗначениеЗаполнено(Переключатель8) Тогда
		Переключатель8 = Элементы.Переключатель8.СписокВыбора[0].Значение;
	КонецЕсли;
	Элементы.КнопкаНазад.Видимость  = Ложь;
	Элементы.КнопкаДалее.Видимость  = Истина;
	Элементы.КнопкаДалее.КнопкаПоУмолчанию = Истина;
	Элементы.КнопкаГотово.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьСтраницуВводаЗадолженности()
	
	Если ВводЗадолженности Тогда
		Элементы.КнопкаНазад.Видимость = Ложь;
	Иначе
		Элементы.КнопкаНазад.Видимость = Истина;
	КонецЕсли;
	Элементы.КнопкаДалее.Видимость  = Ложь;
	Элементы.КнопкаГотово.Видимость = Истина;
	Элементы.КнопкаГотово.КнопкаПоУмолчанию = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовок()
	
	ВсегоВопросов = 4;
	Если Элементы.ГруппаТест.ТекущаяСтраница = Элементы.ГруппаВводЗадолженности Тогда
		Если ВводЗадолженности Тогда
			Заголовок = НСтр("ru = 'Укажите задолженность из справки'");
		Иначе
			Заголовок = НСтр("ru = 'Шаг 3 из 3'");
		КонецЕсли;
	Иначе
		
		ИмяТекущейСтраницы = Элементы.ГруппаТест.ТекущаяСтраница.Имя;
		Если РегистрацияВПрошломГоду Тогда
			ВсегоВопросов = 3;
		Иначе
			
			КоличествоПометок = 0;
			Для Н = 1 По 3 Цикл
			
				ИмяЭлемента = "Флажок3_" + Н;
				Элемент = Элементы[ИмяЭлемента];
				Если Элемент.Видимость И ЭтотОбъект[ИмяЭлемента] Тогда
					КоличествоПометок = КоличествоПометок + 1;
				КонецЕсли;
			
			КонецЦикла;
			Если ЭтоИПНулевка Тогда
				ВсегоВопросов = ?(КоличествоПометок = 0, 4, 3);
			Иначе
				ВсегоВопросов = 3;
			КонецЕсли;
			
			Если ИмяТекущейСтраницы = "ГруппаВопрос2" Тогда
				Если ЭтоИПНулевка Тогда
					ВсегоВопросов = ?(КоличествоПометок = 0, 4, 3);
				Иначе
					ВсегоВопросов = 3;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НомерВопроса = 1 Тогда
			Заголовок = НСтр("ru = 'Шаг 1'");
		Иначе
			Шаблон = НСтр("ru = 'Шаг %1 из %2'");
			Заголовок = СтрШаблон(Шаблон, НомерВопроса, ВсегоВопросов);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРезультатИЗавершитьТест(РезультатТестирования)
	
	Если РезультатТестирования = РезультатПолучитьСправку() Тогда // запрос справки через 1С-Отчетность
		ЗапроситьСправкуЧерезИнтернет();
	Иначе
		
		Результат = Новый Структура;
		Результат.Вставить("АдресСведенийОбОрганизации", АдресСведенийОбОрганизации);
		Результат.Вставить("РезультатТестирования",     РезультатТестирования);
		Результат.Вставить("ОплаченныеГоды",            ОплаченныеГоды);
		Результат.Вставить("Организация",               Организация);
		Результат.Вставить("КодЗадачи",                 КодЗадачи);
		Результат.Вставить("Период",                    Период);
		Результат.Вставить("ДолгПС",                    ДолгПС);
		Результат.Вставить("ПеняПС",                    ПеняПС);
		Результат.Вставить("ШтрафПС",                   ШтрафПС);
		Результат.Вставить("ДолгМС",                    ДолгМС);
		Результат.Вставить("ПеняМС",                    ПеняМС);
		Результат.Вставить("ШтрафМС",                   ШтрафМС);
		
		Если ЭтоИПНулевка Тогда
			ЗавершитьТестНулевка(Результат);
		Иначе
			ЗавершитьТестРегулярнаяДеятельность(Результат);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьТестРегулярнаяДеятельность(Результат)
	
	РезультатТестирования = Результат.РезультатТестирования;
	
	РегулярнаяДеятельностьОбработатьРезультатНаСервере(Результат);
	Оповестить("НалогиПрошлыхПериодов_ИзмененыОстатки",, Организация);
	
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма")
		И СтрНайти(ВладелецФормы.ИмяФормы, "ФормаОплатыЗаПрошлыеПериоды") > 0
		И ВладелецФормы.Открыта() Тогда
		
		ВладелецФормы.Активизировать();
	ИначеЕсли РезультатТестирования = РезультатЕстьДолги() Или РезультатТестирования = РезультатВведенаЗадолженность() Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация",              Организация);
		ПараметрыФормы.Вставить("Правило",                  Правило);
		
		ОткрытьФорму("Обработка.ПомощникУплатыНалоговВзносовПрошлыхЛет.Форма.ФормаОплатыЗаПрошлыеПериоды", ПараметрыФормы);
	КонецЕсли;
	
	Закрыть(КодВозвратаДиалога.ОК);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьТестНулевка(Результат)
	
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма")
		И СтрНайти(ВладелецФормы.ИмяФормы, "ФормаВзносыИПНулевка") > 0
		И ВладелецФормы.Открыта() Тогда
			
		ВладелецФормы.Активизировать();
	Иначе
		ОткрытьФорму("Обработка.РасчетСтраховыхВзносовИП.Форма.ФормаВзносыИПНулевка", Результат);
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РегулярнаяДеятельностьОбработатьРезультатНаСервере(Результат)
	
	СохранитьНачальныеОстаткиПоВзносам(Результат);
	ЗаписатьОпросПройден(Результат);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНачальныеОстаткиПоВзносам(Результат)
	
	ВидНалогаОМС = Перечисления.ВидыНалогов.ФиксированныеВзносы_ФФОМС;
	ВидНалогаПФР = Перечисления.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть;
	
	ТаблицаОстатков = ТаблицаОстатков(Результат.Организация, Результат.КодЗадачи);
	Если Результат.РезультатТестирования = РезультатВведенаЗадолженность() Тогда
		
		// ПФР
		НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(Новый Структура("ВидНалога", ВидНалогаПФР));
		Для Каждого СтрокаОстатков из НайденныеСтроки Цикл
			Если СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог Тогда
				СтрокаОстатков.Задолженность = Результат.ДолгПС;
			ИначеЕсли СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.ПениСам Тогда
				СтрокаОстатков.Задолженность = Результат.ПеняПС;
			ИначеЕсли СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Штраф Тогда
				СтрокаОстатков.Задолженность = Результат.ШтрафПС;
			ИначеЕсли СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела Тогда
				СтрокаОстатков.Задолженность = 0;
			КонецЕсли;
		КонецЦикла;
		
		// ОМС
		НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(Новый Структура("ВидНалога", ВидНалогаОМС));
		Для Каждого СтрокаОстатков из НайденныеСтроки Цикл
			Если СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог Тогда
				СтрокаОстатков.Задолженность = Результат.ДолгМС;
			ИначеЕсли СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.ПениСам Тогда
				СтрокаОстатков.Задолженность = Результат.ПеняМС;
			ИначеЕсли СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Штраф Тогда
				СтрокаОстатков.Задолженность = Результат.ШтрафМС;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Результат.РезультатТестирования = РезультатЕстьДолги() Тогда
		СуммыДоходовПоДекларациям = Обработки.ПодготовкаОтчетностиПрошлыхПериодов.СуммыДоходовПрошлыхЛет(
			Результат.Организация, ЗадачиБухгалтераКлиентСервер.КодЗадачиУСН());
		ДолгПС = 0;
		ДолгМС = 0;
		ВзносыСвышеПредела = 0;
		Для Каждого Год Из Результат.ОплаченныеГоды Цикл
			Если Год.Пометка Тогда
				Продолжить;
			КонецЕсли;
			ПериодНалога = Дата(Год.Значение, 1, 1);
			Периодичность = Перечисления.Периодичность.Год;
			ФиксированныеСтраховыеВзносыКУплате = УчетСтраховыхВзносовИП.ФиксированныеСтраховыеВзносыКУплате(
				Результат.Организация, ПериодНалога, Периодичность);
			ДолгПС = ДолгПС + ФиксированныеСтраховыеВзносыКУплате.СуммаВзносаПФР;
			ДолгМС = ДолгМС + ФиксированныеСтраховыеВзносыКУплате.СуммаВзносаФФОМС;
				
			СуммаДоходаПоДекларации = СуммыДоходовПоДекларациям.Получить(Год.Значение);
			// Суммы дополнительных взносов на ОПС.
			Если ЗначениеЗаполнено(СуммаДоходаПоДекларации) Тогда
				СтруктураДоходов = Новый Структура("СуммаДоходаИП, СуммаДоходаУСН, ВмененныйДоход, ПотенциальноВозможныйДоход", 0, 0, 0, 0);
				СтруктураДоходов.СуммаДоходаИП = СуммаДоходаПоДекларации;
				ДопВзносы = УчетСтраховыхВзносовИП.СтраховыеВзносыСДоходовКУплате(
					Результат.Организация, ПериодНалога, СтруктураДоходов, Ложь);
				ВзносыСвышеПредела = ВзносыСвышеПредела + ДопВзносы.СуммаВзносаПФРсДоходов;
			КонецЕсли;
		КонецЦикла;
		
		НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(Новый Структура("ВидНалога", ВидНалогаПФР));
		Для Каждого СтрокаОстатков из НайденныеСтроки Цикл
			Если СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог Тогда
				СтрокаОстатков.Задолженность = ДолгПС;
			ИначеЕсли СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела Тогда
				СтрокаОстатков.Задолженность = ВзносыСвышеПредела;
			КонецЕсли;
		КонецЦикла;
		
		НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(Новый Структура("ВидНалога", ВидНалогаОМС));
		Для Каждого СтрокаОстатков из НайденныеСтроки Цикл
			Если СтрокаОстатков.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог Тогда
				СтрокаОстатков.Задолженность = ДолгМС;
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;
	
	ПараметрыДляОбработки = Новый Структура;
	ПараметрыДляОбработки.Вставить("Организация",       Результат.Организация);
	ПараметрыДляОбработки.Вставить("ДатаВводаОстатков", Результат.Период);
	ПараметрыДляОбработки.Вставить("ТаблицаОстатков",   ТаблицаОстатков);
	
	Обработки.ПомощникУплатыНалоговВзносовПрошлыхЛет.ОтразитьЗадолженностьПоНалогамВзносам(
		ПараметрыДляОбработки, Неопределено);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТаблицаОстатков(Организация, КодЗадачи)
	
	Результат = Обработки.ПомощникУплатыНалоговВзносовПрошлыхЛет.НоваяТаблицаОстатков();
	
	Для Каждого ВидНалога Из Обработки.ПомощникУплатыНалоговВзносовПрошлыхЛет.ВидыНалоговПоКодуЗадачи(Организация, КодЗадачи) Цикл
		Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоВиду(ВидНалога);
		СчетУчета = Справочники.ВидыНалоговИПлатежейВБюджет.СчетУчета(Налог);
		Для Каждого ВидПлатежа из ВидыПлатежей(ВидНалога) Цикл
			СтрокаТаблицы = Результат.Добавить();
			СтрокаТаблицы.ВидПлатежаВБюджет = ВидПлатежа;
			СтрокаТаблицы.ВидНалога         = ВидНалога;
			СтрокаТаблицы.Налог             = Налог;
			СтрокаТаблицы.СчетУчета         = СчетУчета;
			СтрокаТаблицы.Задолженность     = 0;
			СтрокаТаблицы.Переплата         = 0;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьОпросПройден(Результат)
	
	Обработки.ПомощникУплатыНалоговВзносовПрошлыхЛет.ЗаписатьТестПоНалогуПройден(
		Результат.Организация, Результат.КодЗадачи);

КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьСправкуЧерезИнтернет()
	
	ВидСверки = ПредопределенноеЗначение("Перечисление.ВидыУслугПриИОН.ПредставлениеСправкиОСостоянииРасчетовСБюджетом");
	ЭлектронныйДокументооборотСФНСКлиент.СоздатьЗапросНаСверкуСФНС(Организация, ВидСверки, Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РезультатПолучитьСправку()
	
	Возврат "ПолучитьСправку";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РезультатПрошлыеГодыОплачены()
	
	Возврат "ПрошлыеГодыОплачены";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РезультатЕстьДолги()
	
	Возврат "ЕстьДолги";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РезультатПодготовитьЗаявление()
	
	Возврат "ПодготовитьЗаявление";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РезультатВНалоговуюНеПойду()
	
	Возврат "ВНалоговуюНеПойду";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РезультатВведенаЗадолженность()
	
	Возврат "ВведенаЗадолженность";
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗапрошенаСправкаСохранитьСостояниеПомощника(Знач Организация, Знач ДокументЗапросаСправки)
	
	ДанныеРегистра = Новый Структура;
	ДанныеРегистра.Вставить("Организация",   Организация);
	ДанныеРегистра.Вставить("Состояние",     Перечисления.СостоянияПомощникаОплатыСтраховыхВзносовИП.ЗапрошенаСправкаОСостоянииРасчетов);
	ДанныеРегистра.Вставить("ЗапросСправки", ДокументЗапросаСправки);
	
	РегистрыСведений.СостоянияПомощникаОплатыСтраховыхВзносовИП.СохранитьСостояниеПомощника(ДанныеРегистра);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗадолженность()

	Если ЭтоИПНулевка Тогда
		Возврат;
	КонецЕсли;
	
	ВидНалогаПФР = Перечисления.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть;
	НачальныеОстатки = Обработки.ПомощникУплатыНалоговВзносовПрошлыхЛет.НачальныеОстаткиПоНалогам(Организация, Период);
	Для Каждого ВидНалога Из Обработки.ПомощникУплатыНалоговВзносовПрошлыхЛет.ВидыНалоговПоКодуЗадачи(Организация, КодЗадачи) Цикл
		НайденныеСтроки = НачальныеОстатки.НайтиСтроки(Новый Структура("ВидНалога", ВидНалога));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если ВидНалога = ВидНалогаПФР Тогда
				Если НайденнаяСтрока.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог Тогда
					ДолгПС = НайденнаяСтрока.Задолженность;
				ИначеЕсли НайденнаяСтрока.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.ПениСам Тогда
					ПеняПС = НайденнаяСтрока.Задолженность;
				ИначеЕсли НайденнаяСтрока.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Штраф Тогда
					ШтрафПС = НайденнаяСтрока.Задолженность;
				КонецЕсли;
			Иначе
				Если НайденнаяСтрока.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог Тогда
					ДолгМС = НайденнаяСтрока.Задолженность;
				ИначеЕсли НайденнаяСтрока.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.ПениСам Тогда
					ПеняМС = НайденнаяСтрока.Задолженность;
				ИначеЕсли НайденнаяСтрока.ВидПлатежаВБюджет = Перечисления.ВидыПлатежейВГосБюджет.Штраф Тогда
					ШтрафМС = НайденнаяСтрока.Задолженность;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидыПлатежей(ВидНалога)
	
	Результат = Обработки.ПомощникУплатыНалоговВзносовПрошлыхЛет.ПоддерживаемыеВидыНалоговыхОбязательств();
	Если ВидНалога = Перечисления.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть Тогда
		Результат.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
