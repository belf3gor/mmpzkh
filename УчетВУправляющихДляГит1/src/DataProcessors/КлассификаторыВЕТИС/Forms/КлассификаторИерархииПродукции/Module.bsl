
#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущиеДанныеИдентификатор; //используется для передачи текущей строки в обработчик ожидания

#КонецОбласти

#Область ОбработчикиСобытийФормы

Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВыборВидаПродукции = Параметры.ВыборВидаПродукции;
	
	ЗаполнитьТипыПродукции();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоПродукцииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Выбрать(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПродукцииПередРазворачиванием(Элемент, Строка, Отказ)
	
	ТекущиеДанныеИдентификатор = Строка;
	ПодключитьОбработчикОжидания("ПриРазворачиванииСтроки",0.1,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриРазворачиванииСтроки()
	
	ОчиститьСообщения();
	
	ТекущаяСтрока = ДеревоПродукции.НайтиПоИдентификатору(ТекущиеДанныеИдентификатор);
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Продукция) Тогда
		ЗагрузитьСписокВидовПродукцииПоПродукции(ТекущаяСтрока.GUID, 1, ТекущаяСтрока);
	ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.ТипПродукции) Тогда
		ЗагрузитьСписокПродукцииПоТипу(ТекущаяСтрока.GUID, 1, ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ТекущиеДанные = Элементы.ДеревоПродукции.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыборВидаПродукции Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.ВидПродукции) Тогда
			Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
				ОповеститьОВыборе(ТекущиеДанные.Ссылка);
			Иначе
				ЗагруженнаяСсылка = ЗагрузитьГруппуПродукции(ТекущиеДанные.ПолучитьИдентификатор());
				ОповеститьОВыборе(ЗагруженнаяСсылка);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ОповеститьОВыборе(ТекущиеДанные.Ссылка);
	Иначе
		ЗагруженнаяСсылка = ЗагрузитьГруппуПродукции(ТекущиеДанные.ПолучитьИдентификатор());
		ОповеститьОВыборе(ЗагруженнаяСсылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоПродукцииНаименование.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПродукции.Наименование");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='идет загрузка...'"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыПродукции()
	
	ТипыПродукции = ПродукцияВЕТИСВызовСервера.ТипыПродукции();
	
	Для Каждого СтрокаТипПродукции Из ТипыПродукции Цикл
		
		СтрокаДерева = ДеревоПродукции.ПолучитьЭлементы().Добавить();
		СтрокаДерева.Наименование = СтрокаТипПродукции.Значение;
		СтрокаДерева.ЕстьВБазе = 1;
		СтрокаДерева.GUID = СтрокаТипПродукции.Ключ;
		СтрокаДерева.ТипПродукции = СтрокаТипПродукции.Значение;
		СтрокаДерева.Ссылка = СтрокаТипПродукции.Значение;
		
		СтрокаДерева.ПолучитьЭлементы().Добавить();
		
	КонецЦикла;
	
КонецПроцедуры

#Область ОбменСВЕТИС

&НаКлиенте
Функция ЗагрузитьСписокПродукцииПоТипу(КодТипаПродукции, НомерСтраницы, СтрокаРодитель)
	
	Результат = ПродукцияВЕТИСВызовСервера.СписокПродукции(КодТипаПродукции,НомерСтраницы,Истина);
	
	Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	СписокЭлементовПродукции = СтрокаРодитель.ПолучитьЭлементы();
	Если НомерСтраницы = 1
		И СписокЭлементовПродукции.Количество() > 0 Тогда
		СписокЭлементовПродукции.Очистить();
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Результат.Список Цикл
		
		НоваяСтрока = СписокЭлементовПродукции.Добавить();
		НоваяСтрока.Активность    = СтрокаТЧ.active;
		НоваяСтрока.Актуальность  = СтрокаТЧ.last;
		НоваяСтрока.GUID          = СтрокаТЧ.GUID;
		НоваяСтрока.UUID          = СтрокаТЧ.UUID;
		НоваяСтрока.Наименование  = СтрокаТЧ.Name;
		НоваяСтрока.ДатаСоздания  = СтрокаТЧ.createDate;
		НоваяСтрока.ДатаИзменения = СтрокаТЧ.updateDate;
		
		НоваяСтрока.ЕстьВБазе     = Число(ЗначениеЗаполнено(СтрокаТЧ.Ссылка));
		НоваяСтрока.Ссылка        = СтрокаТЧ.Ссылка;
		
		НоваяСтрока.КодТНВЭД = СтрокаТЧ.code;
		
		НоваяСтрока.ТипПродукции = СтрокаРодитель.Наименование;
		НоваяСтрока.Продукция = СтрокаТЧ.Name;
		НоваяСтрока.ПолучитьЭлементы().Добавить();
	КонецЦикла;
	
	Если Результат.КоличествоСтраниц > НомерСтраницы Тогда
		ЗагрузитьСписокПродукцииПоТипу(КодТипаПродукции, НомерСтраницы + 1, СтрокаРодитель);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ЗагрузитьСписокВидовПродукцииПоПродукции(ПродукцияGUID, НомерСтраницы, СтрокаРодитель)
	
	Результат = ПродукцияВЕТИСВызовСервера.СписокВидовПродукции(ПродукцияGUID, НомерСтраницы, Истина);
	
	Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	СписокЭлементовПродукции = СтрокаРодитель.ПолучитьЭлементы();
	Если НомерСтраницы = 1
		И СписокЭлементовПродукции.Количество() > 0 Тогда
		СписокЭлементовПродукции.Очистить();
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Результат.Список Цикл
		
		НоваяСтрока = СписокЭлементовПродукции.Добавить();
		НоваяСтрока.Активность    = СтрокаТЧ.active;
		НоваяСтрока.Актуальность  = СтрокаТЧ.last;
		НоваяСтрока.GUID          = СтрокаТЧ.GUID;
		НоваяСтрока.UUID          = СтрокаТЧ.UUID;
		НоваяСтрока.Наименование  = СтрокаТЧ.Name;
		НоваяСтрока.ДатаСоздания  = СтрокаТЧ.createDate;
		НоваяСтрока.ДатаИзменения = СтрокаТЧ.updateDate;
		
		НоваяСтрока.ЕстьВБазе     = Число(ЗначениеЗаполнено(СтрокаТЧ.Ссылка));
		НоваяСтрока.Ссылка        = СтрокаТЧ.Ссылка;
		
		НоваяСтрока.КодТНВЭД = СтрокаТЧ.code;
		
		НоваяСтрока.ТипПродукции = СтрокаРодитель.ТипПродукции;
		НоваяСтрока.Продукция = СтрокаРодитель.Продукция;
		НоваяСтрока.ВидПродукции = СтрокаТЧ.Name;
		
	КонецЦикла;
	
	Если Результат.КоличествоСтраниц > НомерСтраницы Тогда
		ЗагрузитьСписокВидовПродукцииПоПродукции(ПродукцияGUID, НомерСтраницы + 1, СтрокаРодитель);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗагрузитьГруппуПродукции(ИдентификаторСтроки)
	УстановитьПривилегированныйРежим(Истина);
	ТекущаяСтрока = ДеревоПродукции.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если ЗначениеЗаполнено(ТекущаяСтрока.ВидПродукции) Тогда
		Возврат ИнтеграцияВЕТИС.ВидПродукции(ТекущаяСтрока.GUID);
	ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.Продукция) Тогда
		Возврат ИнтеграцияВЕТИС.Продукция(ТекущаяСтрока.GUID);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти
