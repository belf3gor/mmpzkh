&НаКлиенте
Перем ПараметрыОбработчика;

&НаКлиенте
Перем ФормаДлительнойОперации Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СтранаРоссия = Справочники.СтраныМира.Россия;
	
	ИнициализироватьВспомогательныеРеквизитыФормы();
	
	ОбработатьПереданныеПараметры();
	ПредприятияХозяйствующиеСубъектыВЕТИС.ЗаполнитьСписокВыбораВидовПредприятия(Элементы.ВидыДеятельностиНаименование);
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ИнициализироватьПоляКонтактнойИнформации();
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СостояниеДобавленияХозяйствующегоСубъекта <> ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ПустаяСсылка")
		И Не ЗначениеЗаполнено(Контрагент) Тогда
		ЗаполнитьРеквизитыХозяйствующегоСубъектаПоИНН();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьВходящееСообщение") Тогда
		
		Если Элемент.Имя = "ТекстРезультат" Тогда
			
			ПоказатьЗначение(, ВходящееСообщение);
			
		ИначеЕсли Элемент.Имя = "ТекстСозданиеПредприятияПослеХозяйствующегоСубъектаРезультат" Тогда
			
			ПоказатьЗначение(, ВходящееСообщениеСозданиеПредприятияПослеХозяйствующегоСубъекта);
			
		ИначеЕсли Элемент.Имя = "ТекстСвязываниеРезультат" Тогда
			
			ПоказатьЗначение(, ВходящееСообщениеСвязывание);
			
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьИсходящееСообщение") Тогда
		
		Если Элемент.Имя = "ТекстРезультат"
			Или Элемент.Имя = "ТекстОжидание" Тогда
		
			ПоказатьЗначение(, ИсходящееСообщение);
			
		ИначеЕсли Элемент.Имя = "ТекстСозданиеПредприятияПослеХозяйствующегоСубъектаОжидание"
			Или Элемент.Имя = "ТекстСозданиеПредприятияПослеХозяйствующегоСубъектаРезультат" Тогда
			
			ПоказатьЗначение(, ИсходящееСообщениеСозданиеПредприятияПослеХозяйствующегоСубъекта);
			
		ИначеЕсли Элемент.Имя = "ТекстСвязываниеОжидание"
			Или Элемент.Имя = "ТекстСвязываниеРезультат" Тогда
			
			ПоказатьЗначение(, ИсходящееСообщениеСвязывание);
			
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьРезультат") Тогда
		
		Если Элемент.Имя = "ТекстРезультат" Тогда
			
			Если СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена") Тогда
				ПоказатьЗначение(, ХозяйствующийСубъект);
			Иначе
				ПоказатьЗначение(, Предприятие);
			КонецЕсли;
			
		ИначеЕсли Элемент.Имя = "ТекстСозданиеПредприятияПослеХозяйствующегоСубъектаРезультат" Тогда
			
			ПоказатьЗначение(, Предприятие);
			
		ИначеЕсли Элемент.Имя = "ТекстСвязываниеРезультат" Тогда
			
			ПоказатьЗначение(, ХозяйствующийСубъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипХозяйствующегоСубъектаПриИзменении(Элемент)
	
	ЗаполнитьРеквизитыХозяйствующегоСубъектаПоИНН();
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	ЗаполнитьРеквизитыХозяйствующегоСубъектаПоИНН();
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		КонтрагентПриИзмененииСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УказыватьДанныеПредприятияПриИзменении(Элемент)
	
	Если СоздаватьПредприятиеПослеХозяйствующегоСубъекта Тогда
		СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
	Иначе
		СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ПустаяСсылка");
	КонецЕсли;
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

#Область РедактированиеАдреса

&НаКлиенте
Процедура АдресПредприятияСтранаМираПриИзменении(Элемент)
	
	ДанныеСтраныМира = ПрочиеКлассификаторыВЕТИСВызовСервера.ДанныеСтраныМира(АдресПредприятияСтранаМира);
	
	ДанныеАдресаПредприятия = ИнтеграцияВЕТИСКлиентСервер.СтруктураДанныхАдреса();
	ДанныеАдресаПредприятия.СтранаGUID          = ДанныеСтраныМира.Идентификатор;
	ДанныеАдресаПредприятия.СтранаПредставление = ДанныеСтраныМира.Наименование;
	
	АдресПредприятия               = "";
	ПредставлениеАдресаПредприятия = "";
	
	Элементы.АдресПредприятия.Видимость      = (АдресПредприятияСтранаМира  = ПредопределенноеЗначение("Справочник.СтраныМира.Россия"));
	Элементы.АдресПредприятияВЕТИС.Видимость = (АдресПредприятияСтранаМира <> ПредопределенноеЗначение("Справочник.СтраныМира.Россия"));
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПредприятияСтранаМираОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресХозяйствующегоСубъектаСтранаМираПриИзменении(Элемент)
	
	ДанныеСтраныМира = ПрочиеКлассификаторыВЕТИСВызовСервера.ДанныеСтраныМира(АдресХозяйствующегоСубъектаСтранаМира);
	
	ДанныеАдресаХозяйствующегоСубъекта = ИнтеграцияВЕТИСКлиентСервер.СтруктураДанныхАдреса();
	ДанныеАдресаХозяйствующегоСубъекта.СтранаGUID          = ДанныеСтраныМира.Идентификатор;
	ДанныеАдресаХозяйствующегоСубъекта.СтранаПредставление = ДанныеСтраныМира.Наименование;
	
	АдресХозяйствующегоСубъекта               = "";
	ПредставлениеАдресаХозяйствующегоСубъекта = "";
	
	Элементы.АдресХозяйствующегоСубъекта.Видимость      = (АдресХозяйствующегоСубъектаСтранаМира  = ПредопределенноеЗначение("Справочник.СтраныМира.Россия"));
	Элементы.АдресХозяйствующегоСубъектаВЕТИС.Видимость = (АдресХозяйствующегоСубъектаСтранаМира <> ПредопределенноеЗначение("Справочник.СтраныМира.Россия"));
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресХозяйствующегоСубъектаПриИзменении(Элемент)
	
	Текст = Элемент.ТекстРедактирования;
	Если ПустаяСтрока(Текст) Тогда
		// Очистка данных, сбрасываем как представления, так и внутренние значения полей.
		АдресХозяйствующегоСубъекта = "";
		Возврат;
	КонецЕсли;
	
	// Формируем внутренние значения полей по тексту и параметрам формирования из
	// реквизита ВидКонтактнойИнформацииАдресаДоставки.
	ПредставлениеАдресаХозяйствующегоСубъекта = Текст;
	АдресХозяйствующегоСубъекта = ЗначенияПолейКонтактнойИнформацииСервер(Текст, ВидКонтактнойИнформацииАдреса);
	ДанныеАдресаХозяйствующегоСубъекта = ДанныеАдресаХозяйствующегоСубъектаКлиент();
	
	СформироватьСписокВыбораНаименованияПредприятия();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресХозяйствующегоСубъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Если представление было изменено в поле и сразу нажата кнопка выбора, то необходимо 
	// привести данные в соответствие и сбросить внутренние поля для повторного разбора.
	Если Элемент.ТекстРедактирования <> ПредставлениеАдресаХозяйствующегоСубъекта Тогда
		ПредставлениеАдресаХозяйствующегоСубъекта = Элемент.ТекстРедактирования;
		АдресХозяйствующегоСубъекта               = "";
	КонецЕсли;
	
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ВидКонтактнойИнформацииАдреса,
		АдресХозяйствующегоСубъекта,
		ПредставлениеАдресаХозяйствующегоСубъекта);
	// Переопределямый заголовок формы, по умолчанию отобразятся данные по ВидКонтактнойИнформации.
	ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru='Адрес хозяйствующего субъекта'"));
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресХозяйствующегоСубъектаОчистка(Элемент, СтандартнаяОбработка)
	
	// Сбрасываем как представления, так и внутренние значения полей.
	ПредставлениеАдресаХозяйствующегоСубъекта = "";
	АдресХозяйствующегоСубъекта               = "";
	ДанныеАдресаХозяйствующегоСубъекта        = ДанныеАдресаХозяйствующегоСубъектаКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресХозяйствующегоСубъектаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение)<>Тип("Структура") Тогда
		// Отказ от выбора, данные неизменны.
		Возврат;
	КонецЕсли;
	
	ПредставлениеАдресаХозяйствующегоСубъекта = ВыбранноеЗначение.Представление;
	АдресХозяйствующегоСубъекта               = ВыбранноеЗначение.КонтактнаяИнформация;
	ДанныеАдресаХозяйствующегоСубъекта        = ДанныеАдресаХозяйствующегоСубъектаКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресХозяйствующегоСубъектаСтранаМираОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПредприятияПриИзменении(Элемент)
	
	Текст = Элемент.ТекстРедактирования;
	Если ПустаяСтрока(Текст) Тогда
		// Очистка данных, сбрасываем как представления, так и внутренние значения полей.
		АдресПредприятия = "";
		Возврат;
	КонецЕсли;
	
	// Формируем внутренние значения полей по тексту и параметрам формирования из
	// реквизита ВидКонтактнойИнформацииАдресаДоставки.
	ПредставлениеАдресаПредприятия = Текст;
	АдресПредприятия = ЗначенияПолейКонтактнойИнформацииСервер(Текст, ВидКонтактнойИнформацииАдреса);
	ДанныеАдресаПредприятия = ДанныеАдресаПредприятияКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПредприятияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Если представление было изменено в поле и сразу нажата кнопка выбора, то необходимо 
	// привести данные в соответствие и сбросить внутренние поля для повторного разбора.
	Если Элемент.ТекстРедактирования <> ПредставлениеАдресаПредприятия Тогда
		ПредставлениеАдресаПредприятия = Элемент.ТекстРедактирования;
		АдресПредприятия               = "";
	КонецЕсли;
	
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ВидКонтактнойИнформацииАдреса,
		АдресПредприятия,
		ПредставлениеАдресаПредприятия);
	// Переопределямый заголовок формы, по умолчанию отобразятся данные по ВидКонтактнойИнформации.
	ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru='Адрес предприятия ВетИС'"));
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресХозяйствующегоСубъектаВЕТИСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ДанныеАдреса", ДанныеАдресаХозяйствующегоСубъекта);
	
	ОткрытьФорму(
		"Обработка.КлассификаторыВЕТИС.Форма.РедактированиеАдреса",
		ПараметрыОткрытияФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбработатьРезультатРедактированияАдресаХозяйствующегоСубъекта", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПредприятияОчистка(Элемент, СтандартнаяОбработка)
	
	// Сбрасываем как представления, так и внутренние значения полей.
	ПредставлениеАдресаПредприятия = "";
	АдресПредприятия               = "";
	ДанныеАдресаПредприятия        = ДанныеАдресаПредприятияКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПредприятияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение)<>Тип("Структура") Тогда
		// Отказ от выбора, данные неизменны.
		Возврат;
	КонецЕсли;
	
	ПредставлениеАдресаПредприятия = ВыбранноеЗначение.Представление;
	АдресПредприятия               = ВыбранноеЗначение.КонтактнаяИнформация;
	ДанныеАдресаПредприятия        = ДанныеАдресаПредприятияКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПредприятияВЕТИСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ДанныеАдреса", ДанныеАдресаПредприятия);
	
	ОткрытьФорму(
		"Обработка.КлассификаторыВЕТИС.Форма.РедактированиеАдреса",
		ПараметрыОткрытияФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбработатьРезультатРедактированияАдресаПредприятия", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыДеятельности



#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеХозяйствующегоСубъекта Тогда
		
		ПроверитьКорректностьУказанияДанныхХозяйствующегоСубъекта(Отказ);
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия Тогда
		
		ПроверитьКорректностьУказанияДанныхПредприятия(Отказ);
		
	КонецЕсли;
		
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеХозяйствующегоСубъекта Тогда 
		
		Если ЗначениеЗаполнено(СостояниеДобавленияПредприятия) Тогда
			ПерейтиКУказаниюДанныхПредприятия();
		Иначе
			ВыполнитьЗапросНаДобавлениеИзменениеХозяйствующегоСубъекта();
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия Тогда
		
		Если ХозяйствующийСубъектСоздан
			И ПредприятиеСоздано Тогда
			
			ВыполнитьЗапросНаДобавлениеИзменениеХозяйствующегоСубъекта();
			
		ИначеЕсли ПредприятиеСоздано Тогда
			
			ВыполнитьЗапросНаДобавлениеИзменениеПредприятия();
			
		Иначе
			
			Если ЗначениеЗаполнено(СобственникПредприятия)
				И ЗначениеЗаполнено(GLN) Тогда
				
				СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
				
			КонецЕсли;
			
			Если СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче") Тогда
				
				ВыполнитьЗапросНаДобавлениеИзменениеХозяйствующегоСубъекта();
				
			Иначе
				
				ВыполнитьЗапросНаДобавлениеИзменениеПредприятия();
				
			КонецЕсли;
				
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросРезультат Тогда
		
		Если ЗначениеЗаполнено(СостояниеДобавленияХозяйствующегоСубъекта)
			И ЗначениеЗаполнено(СостояниеДобавленияПредприятия) Тогда
			
			ДанныеВозврата = Новый Структура;
			ДанныеВозврата.Вставить("Предприятие",          Предприятие);
			ДанныеВозврата.Вставить("ХозяйствующийСубъект", ХозяйствующийСубъект);
			
			Закрыть(ДанныеВозврата);
			
		ИначеЕсли ЗначениеЗаполнено(СостояниеДобавленияХозяйствующегоСубъекта) Тогда
			
			Закрыть(ХозяйствующийСубъект);
			
		ИначеЕсли ЗначениеЗаполнено(СостояниеДобавленияПредприятия) Тогда
			
			Закрыть(Предприятие);
			
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия
		И ЗначениеЗаполнено(СостояниеДобавленияХозяйствующегоСубъекта) Тогда
		
		Если ХозяйствующийСубъектСоздан Тогда
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеХозяйствующегоСубъекта;
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросРезультат Тогда
		
		Если ЗначениеЗаполнено(СостояниеДобавленияХозяйствующегоСубъекта) Тогда
			Если ЗначениеЗаполнено(СостояниеДобавленияПредприятия) Тогда
				Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия;
				Если ПредприятиеСоздано Тогда
					СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
				КонецЕсли;
			Иначе
				Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеХозяйствующегоСубъекта;
				Если ХозяйствующийСубъектСоздан Тогда
					СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
				КонецЕсли;
			КонецЕсли;
		Иначе
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия;
			Если ПредприятиеСоздано Тогда
				СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросОшибка Тогда
		
		Если ЗначениеЗаполнено(СостояниеДобавленияХозяйствующегоСубъекта) Тогда
			Если ЗначениеЗаполнено(СостояниеДобавленияПредприятия) Тогда
				Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия;
			Иначе
				Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеХозяйствующегоСубъекта;
			КонецЕсли;
		Иначе
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка") Тогда
		СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
	КонецЕсли;
	
	Если СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка") Тогда
		СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
	КонецЕсли;
	
	Если СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка") Тогда
		СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче");
	КонецЕсли;
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоИНН(Команда)
	
	ИННЗаполненКорректно = Истина;
	
	ТекстСообщения = "";
	Если ПустаяСтрока(ИНН) Тогда
		ИННЗаполненКорректно = Ложь;
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, 
		                                                                          ЭтоЮрЛицо(ТипХозяйствующегоСубъекта),
		                                                                          ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,"ИНН",,);
			
	КонецЕсли;
	
	Если ЗаполнениеРеквизитовПоДаннымИННВозможно(ИННЗаполненКорректно, ЭтотОбъект) Тогда
		
		ОтключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте");
		РеквизитыКонтрагента = ДанныеКонтрагентаПоИНН(ЭтоЮрЛицо(ТипХозяйствующегоСубъекта),
		                                              ИНН,
		                                              ФоновоеЗаданиеИдентификатор);
		
		ВыполнитьЗаполнениеРеквизитовПоИНН(РеквизитыКонтрагента);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияФормы

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры()
	
	ХозяйствующийСубъект                          = Параметры.ХозяйствующийСубъект;
	Если Параметры.СоздаетсяХозяйствующийСубъект Тогда
		СостояниеДобавленияХозяйствующегоСубъекта = Перечисления.СтатусыОбработкиСообщенийВЕТИС.КПередаче;
	Иначе
		СостояниеДобавленияПредприятия            = Перечисления.СтатусыОбработкиСообщенийВЕТИС.КПередаче;
	КонецЕсли;
	
	СобственнаяОрганизацияЗначениеПоУмолчанию            = Неопределено;
	СобственныйТорговыйОбъектЗначениеПоУмолчанию         = Неопределено;
	СобственныйПроизводственныйОбъектЗначениеПоУмолчанию = Неопределено;
	СторонняяОрганизацияЗначениеПоУмолчанию              = Неопределено;
	СтороннийТорговыйОбъектЗначениеПоУмолчанию           = Неопределено;
	
	ИнтеграцияВЕТИСПереопределяемый.ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(
		СобственнаяОрганизацияЗначениеПоУмолчанию,
		СобственныйТорговыйОбъектЗначениеПоУмолчанию,
		СобственныйПроизводственныйОбъектЗначениеПоУмолчанию,
		СторонняяОрганизацияЗначениеПоУмолчанию,
		СтороннийТорговыйОбъектЗначениеПоУмолчанию);
	
	Если ЗначениеЗаполнено(СостояниеДобавленияХозяйствующегоСубъекта) Тогда
		
		Элементы.СтраницыПомощника.ТекущаяСтраница      = Элементы.ДанныеХозяйствующегоСубъекта;
		ТипХозяйствующегоСубъекта                       = Перечисления.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо;
		СоздаватьПредприятиеПослеХозяйствующегоСубъекта = Истина;
		
		МассивТиповКонтрагент = Новый Массив;
		МассивТиповКонтрагент.Добавить(ТипЗнч(СторонняяОрганизацияЗначениеПоУмолчанию));
		Элементы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов(МассивТиповКонтрагент);
		
		АдресХозяйствующегоСубъектаСтранаМира = Справочники.СтраныМира.Россия;
		
		Если ЗначениеЗаполнено(Параметры.Контрагент) Тогда
			
			Контрагент = Параметры.Контрагент;
			ЗаполнитьДанныеХозяйствующегоСубъектаПоКонтрагенту();
			
		ИначеЕсли ТипЗнч(Параметры.ОтборХозяйствующийСубъект) = Тип("Структура") Тогда
			
			Если Параметры.ОтборХозяйствующийСубъект.Свойство("Тип") Тогда
				ТипХозяйствующегоСубъекта = Параметры.ОтборХозяйствующийСубъект.Тип;
			КонецЕсли;
			
			Если Параметры.ОтборХозяйствующийСубъект.Свойство("ИНН") Тогда
				ИНН = Параметры.ОтборХозяйствующийСубъект.ИНН;
			КонецЕсли;
			
			Если Параметры.ОтборХозяйствующийСубъект.Свойство("КПП") Тогда
				КПП = Параметры.ОтборХозяйствующийСубъект.КПП;
			КонецЕсли;
			
			Если Параметры.ОтборХозяйствующийСубъект.Свойство("ОГРН") Тогда
				ОГРН = Параметры.ОтборХозяйствующийСубъект.ОГРН;
			КонецЕсли;
			
			Если Параметры.ОтборХозяйствующийСубъект.Свойство("НаименованиеПолное") Тогда
				НаименованиеХозяйствующегоСубъекта = Параметры.ОтборХозяйствующийСубъект.НаименованиеПолное;
			ИначеЕсли Параметры.ОтборХозяйствующийСубъект.Свойство("Наименование") Тогда
				НаименованиеХозяйствующегоСубъекта = Параметры.ОтборХозяйствующийСубъект.Наименование;
			КонецЕсли;
			
			Если Параметры.ОтборХозяйствующийСубъект.Свойство("ДанныеАдреса") Тогда
				АдресХозяйствующегоСубъекта               = Параметры.ОтборХозяйствующийСубъект.Адрес;
				ДанныеАдресаХозяйствующегоСубъекта        = Параметры.ОтборХозяйствующийСубъект.ДанныеАдреса;
				ПредставлениеАдресаХозяйствующегоСубъекта = ДанныеАдресаХозяйствующегоСубъекта.ПредставлениеАдреса;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеАдресаХозяйствующегоСубъекта <> Неопределено
			И ЗначениеЗаполнено(ДанныеАдресаХозяйствующегоСубъекта.СтранаGUID) Тогда
			АдресХозяйствующегоСубъектаСтранаМира = ИнтеграцияВЕТИСПовтИсп.СтранаМира(ДанныеАдресаХозяйствующегоСубъекта.СтранаGUID);
		Иначе
			АдресХозяйствующегоСубъектаСтранаМира = Справочники.СтраныМира.Россия;
		КонецЕсли;
		
		ПредприятияХозяйствующиеСубъектыВЕТИС.ЗаполнитьСписокВыбораОрганизационноПравовыхФорм(Элементы.ОрганизационноПравоваяФорма);
		
	Иначе
		
		АдресПредприятияСтранаМира = Справочники.СтраныМира.Россия;
		
		Если ЗначениеЗаполнено(ХозяйствующийСубъект) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ХозяйствующиеСубъектыВЕТИС.СоответствуетОрганизации КАК СоответствуетОрганизации,
			|	ХозяйствующиеСубъектыВЕТИС.Наименование             КАК Наименование
			|ИЗ
			|	Справочник.ХозяйствующиеСубъектыВЕТИС КАК ХозяйствующиеСубъектыВЕТИС
			|ГДЕ
			|	ХозяйствующиеСубъектыВЕТИС.Ссылка = &ХозяйствующийСубъект";
			
			Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				
				МассивТиповТорговыйОбъект = Новый Массив;
				
				СобственникПредприятия              = ХозяйствующийСубъект;
				ХозяйствующийСубъектДляОбменаСВЕТИС = ХозяйствующийСубъект;
				Элементы.ТорговыйОбъект.Видимость   = Истина;
				
				Если Выборка.СоответствуетОрганизации Тогда
					
					МассивТиповТорговыйОбъект.Добавить(ТипЗнч(СобственныйТорговыйОбъектЗначениеПоУмолчанию));
					
					МассивТиповПроизводственныйОбъект = Новый Массив;
					МассивТиповПроизводственныйОбъект.Добавить(ТипЗнч(СобственныйПроизводственныйОбъектЗначениеПоУмолчанию));
					Элементы.ПроизводственныйОбъект.ОграничениеТипа = Новый ОписаниеТипов(МассивТиповПроизводственныйОбъект);
					Элементы.ПроизводственныйОбъект.Видимость = (СобственныйПроизводственныйОбъектЗначениеПоУмолчанию <> Неопределено);
					
				Иначе
					
					МассивТиповТорговыйОбъект.Добавить(ТипЗнч(СтороннийТорговыйОбъектЗначениеПоУмолчанию));
					
				КонецЕсли;
			
				Элементы.ТорговыйОбъект.ОграничениеТипа = Новый ОписаниеТипов(МассивТиповТорговыйОбъект);
				
				НаименованиеХозяйствующегоСубъекта = Выборка.Наименование;
				
			КонецЕсли;
			
			Элементы.ХозяйствующийСубъект.Видимость = Ложь;
			
		ИначеЕсли ТипЗнч(Параметры.ОтборПредприятие) = Тип("Структура") Тогда
			
			Если Параметры.ОтборПредприятие.Свойство("ДанныеАдреса") Тогда
				АдресПредприятия               = Параметры.ОтборПредприятие.Адрес;
				ДанныеАдресаПредприятия        = Параметры.ОтборПредприятие.ДанныеАдреса;
				ПредставлениеАдресаПредприятия = ДанныеАдресаПредприятия.ПредставлениеАдреса;
			КонецЕсли;
			
			Если Параметры.ОтборПредприятие.Свойство("Наименование") Тогда
				НаименованиеПредприятия = Параметры.ОтборПредприятие.Наименование;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеАдресаПредприятия <> Неопределено
			И ЗначениеЗаполнено(ДанныеАдресаПредприятия.СтранаGUID) Тогда
			
			СтранаМира = ИнтеграцияВЕТИСПовтИсп.СтранаМира(ДанныеАдресаПредприятия.СтранаGUID);
			Если СтранаМира <> Справочники.СтраныМира.Россия Тогда
				АдресПредприятия               = "";
				ДанныеАдресаПредприятия        = Новый Структура;
				ПредставлениеАдресаПредприятия = "";
			КонецЕсли;
		КонецЕсли;
		
		АдресПредприятияСтранаМира = Справочники.СтраныМира.Россия;
		
		ТипПредприятия                             = Перечисления.ТипыПредприятийВЕТИС.Предприятие;
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия;
		СостояниеДобавленияПредприятия             = Перечисления.СтатусыОбработкиСообщенийВЕТИС.КПередаче;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьВспомогательныеРеквизитыФормы()
	
	ЦветГиперссылки     = ЦветаСтиля.ЦветГиперссылкиГосИС;
	ЦветПроблема        = ЦветаСтиля.ЦветТекстаПроблемаГосИС;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.РаботаСКонтрагентами") Тогда
		ИнтеграцияВЕТИСПереопределяемый.НастройкиПодключенияКСервисуИППЗаданы(НастройкиПодключенияКСервисуИППЗаданы);
	Иначе
		НастройкиПодключенияКСервисуИППЗаданы = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеЗапросовКВЕТИС

&НаКлиенте
Процедура ВыполнитьЗапросНаДобавлениеИзменениеПредприятия()
	
	РезультатОбмена = ЗаявкиВЕТИСВызовСервера.ПодготовитьЗапросНаРегистрациюИзменениеПредприятия(
	            ?(ЗначениеЗаполнено(ХозяйствующийСубъектДляОбменаСВЕТИС), ХозяйствующийСубъектДляОбменаСВЕТИС, Неопределено),
	            ДанныеПредприятияДляЗапроса(),
	            УникальныйИдентификатор);
	
	ОбработатьРезультатОбменаСВЕТИС(РезультатОбмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросНаДобавлениеСвязиПредприятия()

	РезультатОбмена = ЗаявкиВЕТИСВызовСервера.ПодготовитьЗапросНаСозданиеУдалениеСвязиПредприятияИХозяйствующегоСубъекта(
	                      ?(ЗначениеЗаполнено(ХозяйствующийСубъектДляОбменаСВЕТИС), ХозяйствующийСубъектДляОбменаСВЕТИС, Неопределено),
	                      Предприятие,
	                      ПредопределенноеЗначение("Перечисление.СпособыИзмененияВерсионныхОбъектовВЕТИС.Создать"),
	                      GLN,
	                      УникальныйИдентификатор);
	
	ОбработатьРезультатОбменаСВЕТИС(РезультатОбмена);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросНаДобавлениеИзменениеХозяйствующегоСубъекта()
	
	РезультатОбмена = ЗаявкиВЕТИСВызовСервера.ПодготовитьЗапросНаРегистрациюИзменениеХозяйствующегоСубъекта(
	            ?(ЗначениеЗаполнено(ХозяйствующийСубъектДляОбменаСВЕТИС), ХозяйствующийСубъектДляОбменаСВЕТИС, Неопределено),
	            ДанныеХозяйствующегоСубъектаДляЗапроса(),
	            УникальныйИдентификатор);
	
	ОбработатьРезультатОбменаСВЕТИС(РезультатОбмена);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаЗапросовКВЕТИС

&НаКлиенте
Процедура ПереключитьНаСтраницуОжиданияРезультатаЗапроса(ДанныеДляОбработки)
	
	Если ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаРегистрациюИзменениеХозяйствующегоСубъекта") Тогда
		
		Если Не СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче") Тогда
			Возврат;
		КонецЕсли;
		
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросОжидание;
		ИсходящееСообщение                         = ДанныеДляОбработки.ИсходящееСообщение;
		СостояниеДобавленияХозяйствующегоСубъекта  = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОбрабатывается");
	
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаРегистрациюИзменениеПредприятия") Тогда
		
		Если Не СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче") Тогда
			Возврат;
		КонецЕсли;
		
		Если СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена") Тогда
			
			Элементы.СтраницыСозданиеПредприятияПослеХозяйствующегоСубъекта.ТекущаяСтраница = Элементы.СтраницаЗапросСозданиеПредприятияПослеХозяйствующегоСубъектаОжидание;
			ИсходящееСообщениеСозданиеПредприятияПослеХозяйствующегоСубъекта                = ДанныеДляОбработки.ИсходящееСообщение;
			
		Иначе
			
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросОжидание;
			ИсходящееСообщение = ДанныеДляОбработки.ИсходящееСообщение;
			
		КонецЕсли;
		
		СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОбрабатывается");
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаСозданиеИзменениеСвязиСПлощадкой") Тогда
		
		СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОбрабатывается");
		
		Элементы.СтраницыЗапросСвязывание.ТекущаяСтраница = Элементы.СтраницаЗапросСвязываниеОжидание;
		ИсходящееСообщениеСвязывание = ДанныеДляОбработки.ИсходящееСообщение;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатОбменаСВЕТИС(РезультатОбмена)
	
	ДанныеДляОбработки = Неопределено;
	
	КоличествоИзменений = РезультатОбмена.Изменения.Количество();

	Если КоличествоИзменений > 0 Тогда
		ДанныеДляОбработки = РезультатОбмена.Изменения[КоличествоИзменений - 1];
	КонецЕсли;
	
	Если ДанныеДляОбработки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатОбмена.Ожидать <> Неопределено Тогда
		ПереключитьНаСтраницуОжиданияРезультатаЗапроса(ДанныеДляОбработки);
		СформироватьТекстОжиданиеРезультатаОбменаВЕТИС(ДанныеДляОбработки);
	КонецЕсли;
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
	ИнтеграцияВЕТИСКлиент.ОбработатьРезультатОбмена(РезультатОбмена, ЭтотОбъект,, ОповещениеПриЗавершенииОбмена(), Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменОбработкаОжидания()
	
	ИнтеграцияВЕТИСКлиент.ПродолжитьВыполнениеОбмена(ЭтотОбъект,, ОповещениеПриЗавершенииОбмена(), Ложь);
	
КонецПроцедуры

&НаКлиенте
Функция ОповещениеПриЗавершенииОбмена()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПолученияРезультатОбработкиЗаявки", ЭтотОбъект);
	
	Возврат ОписаниеОповещения;
	
КонецФункции

&НаКлиенте
Процедура ПослеПолученияРезультатОбработкиЗаявки(Изменения, ДополнительныеПараметры) Экспорт
	
	ДанныеДляОбработки = Неопределено;
	
	Для Каждого ЭлементДанных Из Изменения Цикл
		ДанныеДляОбработки = ЭлементДанных;
	КонецЦикла;
	
	Если ДанныеДляОбработки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеДляОбработки.НовыйСтатус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОтклонена")
		ИЛИ НЕ ПустаяСтрока(ДанныеДляОбработки.ТекстОшибки) Тогда
		
		ВывестиИнформациюОбОшибке(ДанныеДляОбработки);
		
	ИначеЕсли ДанныеДляОбработки.НовыйСтатус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена") Тогда
		
		ВывестиИнформациюОУспешномРезультатеОбмена(ДанныеДляОбработки);
		
		Если ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияХозяйствующегоСубъекта") Тогда
			
			Если СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче") Тогда
				ВыполнитьЗапросНаДобавлениеИзменениеПредприятия();
			КонецЕсли;
			
		ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияПредприятия")
			И ЗначениеЗаполнено(GLN)
			И СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче") Тогда
			
			ВыполнитьЗапросНаДобавлениеСвязиПредприятия();
			
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьТекстОжиданиеРезультатаОбменаВЕТИС(ДанныеДляОбработки)
	
	Если ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаРегистрациюИзменениеХозяйствующегоСубъекта") Тогда
		
		Если ХозяйствующийСубъектСоздан Тогда
			ТекстТипОперации = НСтр("ru = 'изменение'");
		Иначе
			ТекстТипОперации = НСтр("ru = 'добавление'");
		КонецЕсли;
		
		Строки = Новый Массив;
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
		Строки.Добавить(" ");
		Строки.Добавить(
		Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru='на %1 хозяйствующего субъекта %2 передан в ВетИС.'"), ТекстТипОперации, НаименованиеХозяйствующегоСубъекта)));
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаРегистрациюИзменениеПредприятия") Тогда
		
		Если ПредприятиеСоздано Тогда
			ТекстТипОперации = НСтр("ru = 'изменение'");
		Иначе
			ТекстТипОперации = НСтр("ru = 'добавление'");
		КонецЕсли;
		
		Строки = Новый Массив;
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
		Строки.Добавить(" ");
		Строки.Добавить(
		Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru='на %1 предприятия %2 передан в ВетИС.'"), ТекстТипОперации, НаименованиеПредприятия)));
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаСозданиеИзменениеСвязиСПлощадкой")  Тогда
		
		Строки = Новый Массив;
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
		Строки.Добавить(" ");
		Строки.Добавить(
		Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru='на связывание предприятия %1 с хозяйствующим субъектом %2 передан в ВетИС.'"),
			          НаименованиеПредприятия, 
			          НаименованиеХозяйствующегоСубъекта)));
	КонецЕсли;
	
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'Получение ответа от сервера может занять продолжительное время.
			           |Дождитесь ответа или закройте окно для продолжения
			           |выполнения операции в фоновом режиме.'")));
			
			
	СформированныйТекст = Новый ФорматированнаяСтрока(Строки);
	
	Если ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаРегистрациюИзменениеХозяйствующегоСубъекта") Тогда
		ТекстОжидание = СформированныйТекст;
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаРегистрациюИзменениеПредприятия") Тогда
		Если СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена") Тогда
			ТекстСозданиеПредприятияПослеХозяйствующегоСубъектаОжидание = СформированныйТекст;
		Иначе
			ТекстОжидание = СформированныйТекст;
		КонецЕсли;
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаСозданиеИзменениеСвязиСПлощадкой")  Тогда
		ТекстСвязываниеОжидание = СформированныйТекст;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиИнформациюОбОшибке(ДанныеДляОбработки)
	
	ТекстОшибки = ДанныеДляОбработки.ТекстОшибки;
	
	Строки = Новый Массив;
	Строки.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'Ошибка:'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки,, ЦветПроблема));
	
	СформированнаяСтрока = Новый ФорматированнаяСтрока(Строки);
	
	Если ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияХозяйствующегоСубъекта") Тогда
		
		ТекстОшибка = СформированнаяСтрока;
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросОшибка;
		СостояниеДобавленияХозяйствующегоСубъекта  = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка");
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияПредприятия") Тогда
		
		Если СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена") Тогда
			ТекстСозданиеПредприятияПослеХозяйствующегоСубъектаОшибка = СформированнаяСтрока;
			Элементы.СтраницыСозданиеПредприятияПослеХозяйствующегоСубъекта.ТекущаяСтраница = Элементы.СтраницаЗапросСозданиеПредприятияПослеХозяйствующегоСубъектаОшибка;
		Иначе
			ТекстОшибка = СформированнаяСтрока;
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросОшибка;
		КонецЕсли;
		
		СостояниеДобавленияПредприятия  = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка");
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросСозданияИзмененияСвязиСПлощадкой") Тогда
		
		ТекстСвязываниеОшибка = СформированнаяСтрока;
		Элементы.СтраницыЗапросСвязывание.ТекущаяСтраница = Элементы.СтраницаЗапросСвязываниеОшибка;
		
		СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиИнформациюОУспешномРезультатеОбмена(ДанныеДляОбработки)

	ВходящееСообщение = ДанныеДляОбработки.ВходящееСообщение;
	
	Строки = Новый Массив;
	Строки.Добавить(НСтр("ru = 'На'"));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
	Строки.Добавить(" ");
	
	Если ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияХозяйствующегоСубъекта") Тогда
		
		Если ХозяйствующийСубъектСоздан Тогда
			ТекстПолучения = СтрШаблон(НСтр("ru = 'о изменении хозяйствующего субъекта %1 получен'"), НаименованиеХозяйствующегоСубъекта);
			ТекстЗавершено = НСтр("ru = 'Изменен хозяйствующий субъект'");
		Иначе
			ТекстПолучения = СтрШаблон(НСтр("ru = 'о добавлении хозяйствующего субъекта %1 получен'"), НаименованиеХозяйствующегоСубъекта);
			ТекстЗавершено = НСтр("ru = 'Добавлен хозяйствующий субъект'");
		КонецЕсли;
		
		ХозяйствующийСубъект                       = ДанныеДляОбработки.Объект;
		ХозяйствующийСубъектСоздан                 = Истина;
		СостояниеДобавленияХозяйствующегоСубъекта  = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена");
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияПредприятия") Тогда
		
		Если ПредприятиеСоздано Тогда
			ТекстПолучения = СтрШаблон(НСтр("ru = 'о изменении предприятия %1 получен'"), НаименованиеПредприятия);
			ТекстЗавершено = НСтр("ru = 'Изменено предприятие'");
		Иначе
			ТекстПолучения = СтрШаблон(НСтр("ru = 'о добавлении предприятия %1 получен'"), НаименованиеПредприятия);
			ТекстЗавершено = НСтр("ru = 'Добавлено предприятие'");
		КонецЕсли;
		
		Если ТипЗнч(ДанныеДляОбработки.Объект) = Тип("СправочникСсылка.ПредприятияВЕТИС") Тогда
			Предприятие = ДанныеДляОбработки.Объект;
		Иначе
			Для Каждого ИзмененныйОбъект Из ДанныеДляОбработки.Объект Цикл
				Если ТипЗнч(ИзмененныйОбъект) = Тип("СправочникСсылка.ПредприятияВЕТИС") Тогда
					Предприятие = ИзмененныйОбъект;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПредприятиеСоздано              = Истина;
		СостояниеДобавленияПредприятия  = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена");
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросСозданияИзмененияСвязиСПлощадкой") Тогда
		
		ТекстПолучения = СтрШаблон(НСтр("ru = 'о связывании предприятия %1 получен'"), НаименованиеПредприятия);
		ТекстЗавершено = НСтр("ru = 'Связывание предприятия завершено'");
		
		СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена");
		
	КонецЕсли;
	
	Строки.Добавить(Новый ФорматированнаяСтрока(ТекстПолучения));
	
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'ответ'"),, ЦветГиперссылки,, "ОткрытьВходящееСообщение"));
	Строки.Добавить(".");
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(ТекстЗавершено, , ЦветГиперссылки,, "ОткрытьРезультат"));
	Строки.Добавить(".");
	
	СформированнаяСтрока = Новый ФорматированнаяСтрока(Строки);

	Если ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияХозяйствующегоСубъекта") Тогда
		
		ТекстРезультат = Новый ФорматированнаяСтрока(Строки);
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросРезультат;
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросРегистрацииИзмененияПредприятия") Тогда
		
		Если СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена") Тогда
			
			ТекстСозданиеПредприятияПослеХозяйствующегоСубъектаРезультат = Новый ФорматированнаяСтрока(Строки);
			Элементы.СтраницыСозданиеПредприятияПослеХозяйствующегоСубъекта.ТекущаяСтраница = Элементы.СтраницаСозданиеПредприятияПослеХозяйствующегоСубъектаЗапросРезультат;
			
		Иначе
			
			ТекстРезультат = Новый ФорматированнаяСтрока(Строки);
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросРезультат;
			
		КонецЕсли;
		
	ИначеЕсли ДанныеДляОбработки.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросСозданияИзмененияСвязиСПлощадкой") Тогда
		
		ТекстСвязываниеРезультат = СформированнаяСтрока;
		Элементы.СтраницыЗапросСвязывание.ТекущаяСтраница = Элементы.СтраницаСвязываниеЗапросРезультат;
		СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПодготовкаДанныхЗапросовКВЕТИС

&НаКлиенте
Функция ДанныеПредприятияДляЗапроса()

	ДанныеПредприятия = ИнтеграцияВЕТИСКлиентСервер.СтруктураДанныеПредприятия();
	
	ДанныеПредприятия.Ссылка                 = Предприятие;
	ДанныеПредприятия.Наименование           = НаименованиеПредприятия;
	ДанныеПредприятия.СобственникПредприятия = СобственникПредприятия;
	ДанныеПредприятия.Тип                    = ТипПредприятия;
	
	ДанныеПредприятия.ВидыДеятельности = Новый Массив;
	Для Каждого СтрокаТЧ Из ВидыДеятельности Цикл
		ДанныеПредприятия.ВидыДеятельности.Добавить(СтрокаТЧ.Наименование);
	КонецЦикла;
	
	ДанныеПредприятия.ДанныеАдреса = ДанныеАдресаПредприятия;
	ДанныеПредприятия.Комментарий  = ПричинаДобавленияПредприятия;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТорговыйОбъект", ТорговыйОбъект);
	ДополнительныеПараметры.Вставить("ПроизводственныйОбъект", ПроизводственныйОбъект);
	
	ДанныеПредприятия.ДополнительныеПараметры = ДополнительныеПараметры;
	
	Возврат ДанныеПредприятия;

КонецФункции

&НаКлиенте
Функция ДанныеХозяйствующегоСубъектаДляЗапроса()

	ДанныеХозяйствующегоСубъекта = ИнтеграцияВЕТИСКлиентСервер.СтруктураДанныеХозяйствующегоСубъекта();
	
	ДанныеХозяйствующегоСубъекта.Ссылка             = ХозяйствующийСубъект;
	ДанныеХозяйствующегоСубъекта.Наименование       = НаименованиеХозяйствующегоСубъекта;
	ДанныеХозяйствующегоСубъекта.НаименованиеПолное = ПолноеНаименованиеХозяйствующегоСубъекта;
	ДанныеХозяйствующегоСубъекта.Тип                = ТипХозяйствующегоСубъекта;
	
	Если АдресХозяйствующегоСубъектаСтранаМира = СтранаРоссия Тогда
		
		ДанныеХозяйствующегоСубъекта.ИНН                = ИНН;
		
		Если ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо") Тогда
			ДанныеХозяйствующегоСубъекта.КПП = КПП;
		КонецЕсли;
		
		Если ТипХозяйствующегоСубъекта <> ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо") Тогда
			ДанныеХозяйствующегоСубъекта.ФИО = НаименованиеХозяйствующегоСубъекта;
		КонецЕсли;
		
		Если ТипХозяйствующегоСубъекта <> ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ФизическоеЛицо") Тогда
			ДанныеХозяйствующегоСубъекта.ОГРН = ОГРН;
			ДанныеХозяйствующегоСубъекта.ОрганизационноПравоваяФормаИдентификатор = ОрганизационноПравоваяФорма;
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеХозяйствующегоСубъекта.ДанныеАдреса = ДанныеАдресаХозяйствующегоСубъекта;
	ДанныеХозяйствующегоСубъекта.Комментарий  = ПричинаДобавленияХозяйствующегоСубъекта;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Контрагент", Контрагент);
	
	ДанныеХозяйствующегоСубъекта.ДополнительныеПараметры = ДополнительныеПараметры;
	
	Возврат ДанныеХозяйствующегоСубъекта;

КонецФункции

#КонецОбласти

#Область ПроверкаКорректностиУказанияДанных

&НаКлиенте
Процедура ПроверитьКорректностьУказанияДанныхПредприятия(Отказ)

	Если Не ЗначениеЗаполнено(ТипПредприятия) Тогда
		
		ТекстСообщения = НСтр("ru = 'Тип предприятия не заполнен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ТипПредприятия",, Отказ);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(GLN) Тогда
		
		РезультатПроверки = ИнтеграцияВЕТИСКлиентСервер.ЭтоШтриховойКодЕАN13(GLN);
		
		Если Не РезультатПроверки.Соответствует Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.ТекстОшибки,, "GLN",, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПредставлениеАдресаПредприятия) Тогда
		
		ТекстСообщения = НСтр("ru = 'Адрес не заполнен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПредставлениеАдреса",, Отказ);
		
	ИначеЕсли ДанныеАдресаПредприятия = Неопределено
		Или ТипЗнч(ДанныеАдресаПредприятия) <> Тип("Структура") Тогда
		
		ТекстСообщения = НСтр("ru = 'Адрес заполнен некорректно. Необходимо выбирать значения из классификатора'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПредставлениеАдреса",, Отказ);
		
	Иначе
		
		ИнтеграцияВЕТИСКлиент.ПроверитьКорректностьДанныхАдреса(ДанныеАдресаПредприятия, "ПредставлениеАдреса", Отказ)
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаименованиеПредприятия) Тогда
		
		ТекстСообщения = НСтр("ru = 'Наименование предприятия не заполнено'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Наименование",, Отказ);
		
	КонецЕсли;
	
	Если ВидыДеятельности.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не указано ни одного вида деятельности'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВидыДеятельности",, Отказ);
		
	Иначе
		
		ЕстьХотьОдинВидДеятельности = Ложь;
		
		Для Каждого ВидДеятельности Из ВидыДеятельности Цикл
			
			Если Не ПустаяСтрока(ВидДеятельности.Наименование) Тогда
				
				ЕстьХотьОдинВидДеятельности = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не ЕстьХотьОдинВидДеятельности Тогда
			
			ТекстСообщения = НСтр("ru = 'Не указано ни одного вида деятельности'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВидыДеятельности",, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПричинаДобавленияПредприятия) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не указана причина добавления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПричинаДобавления",, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКорректностьУказанияДанныхХозяйствующегоСубъекта(Отказ)

	Если Не ЗначениеЗаполнено(ТипХозяйствующегоСубъекта) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не заполнен вид хозяйствующего субъекта'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ТипХозяйствующегоСубъекта",, Отказ);
		
		Возврат;
		
	КонецЕсли;
	
	ЭтоЮрЛицо = ЭтоЮрЛицо(ТипХозяйствующегоСубъекта);
	
	Если АдресХозяйствующегоСубъектаСтранаМира = СтранаРоссия Тогда
	
		Если ПустаяСтрока(ИНН) Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнен ИНН'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ИНН",, Отказ);
			
		Иначе
			
			ТекстОшибки = "";
			Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ЭтоЮрЛицо, ТекстОшибки) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "ИНН",, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоЮрЛицо 
			И Не ПустаяСтрока(КПП) Тогда
			
			ТекстОшибки = "";
			Если НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(КПП, ТекстОшибки) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "КПП",, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоЮрлицо 
			И ПустаяСтрока(ОГРН) Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнен ОГРН'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ОГРН",, Отказ);
			
		ИначеЕсли Не ПустаяСтрока(ОГРН) Тогда
			
			ТекстОшибки = "";
			Если НЕ РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ОГРН, ЭтоЮрЛицо, ТекстОшибки) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "ОГРН",, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаименованиеХозяйствующегоСубъекта) Тогда
		
		ТекстСообщения = НСтр("ru = 'Наименование хозяйствующего субъекта не заполнено'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "НаименованиеХозяйствующегоСубъекта",, Отказ);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПредставлениеАдресаХозяйствующегоСубъекта) Тогда
		
		ТекстСообщения = НСтр("ru = 'Адрес не заполнен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПредставлениеАдресаХозяйствующегоСубъекта",, Отказ);
		
	ИначеЕсли ДанныеАдресаХозяйствующегоСубъекта = Неопределено
		Или ТипЗнч(ДанныеАдресаХозяйствующегоСубъекта) <> Тип("Структура") Тогда
		
		ТекстСообщения = НСтр("ru = 'Адрес заполнен некорректно. Необходимо выбирать значения из классификатора'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПредставлениеАдресаХозяйствующегоСубъекта",, Отказ);
		
	Иначе
		
		ИнтеграцияВЕТИСКлиент.ПроверитьКорректностьДанныхАдреса(ДанныеАдресаХозяйствующегоСубъекта, "ПредставлениеАдресаХозяйствующегоСубъекта", Отказ)
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПричинаДобавленияХозяйствующегоСубъекта) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не указана причина добавления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПричинаДобавленияХозяйствующегоСубъекта",, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСАдресами

&НаКлиенте
Функция ДанныеАдресаПредприятияКлиент(ОчищатьСообщения = Истина, Отказ = Ложь)
	Попытка
		ДанныеАдресаСтруктурой = ИнтеграцияВЕТИСВызовСервера.ДанныеАдресаПоАдресуXML(АдресПредприятия, ПредставлениеАдресаПредприятия);
	Исключение
		Если АдресПредприятияСтранаМира = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
			ИмяПоля = "АдресПредприятия";
			ТекстСообщения = НСтр("ru = 'Не удалось прочитать данные адреса предприятия. Возможно не корректно введен регион. Повторите ввод.'");
		Иначе
			ИмяПоля = "АдресПредприятияВЕТИС";
			ТекстСообщения = НСтр("ru = 'Не удалось прочитать данные адреса предприятия. Возможно не корректно введены данные. Повторите ввод. Причина ошибки: %1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ОписаниеОшибки());
		КонецЕсли;
		Если ОчищатьСообщения Тогда
			ОчиститьСообщения();
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ИмяПоля);
		ДанныеАдресаСтруктурой = Неопределено;
		
		Отказ = Истина;
	КонецПопытки;
	
	Возврат ДанныеАдресаСтруктурой;
	
КонецФункции

&НаКлиенте
Функция ДанныеАдресаХозяйствующегоСубъектаКлиент(ОчищатьСообщения = Истина, Отказ = Ложь)
	Попытка
		ДанныеАдресаСтруктурой = ИнтеграцияВЕТИСВызовСервера.ДанныеАдресаПоАдресуXML(АдресХозяйствующегоСубъекта, ПредставлениеАдресаХозяйствующегоСубъекта);
	Исключение
		Если АдресХозяйствующегоСубъектаСтранаМира = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
			ИмяПоля = "АдресХозяйствующегоСубъекта";
			ТекстСообщения = НСтр("ru = 'Не удалось прочитать данные адреса хозяйствующего субъекта. Возможно не корректно введен регион. Повторите ввод.'");
		Иначе
			ИмяПоля = "АдресХозяйствующегоСубъектаВЕТИС";
			ТекстСообщения = НСтр("ru = 'Не удалось прочитать данные адреса хозяйствующего субъекта. Возможно не корректно введены данные. Повторите ввод. Причина ошибки: %1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ОписаниеОшибки());
		КонецЕсли;
		Если ОчищатьСообщения Тогда
			ОчиститьСообщения();
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ИмяПоля);
		ДанныеАдресаСтруктурой = Неопределено;
		
		Отказ = Истина;
	КонецПопытки;
	
	Возврат ДанныеАдресаСтруктурой;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьПоляКонтактнойИнформации()
	
	// Реквизит формы, контролирующий работу с адресом.
	// Используемые поля аналогичны полям справочника ВидыКонтактнойИнформации.
	ВидКонтактнойИнформацииАдреса = УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес);
	Если ВидКонтактнойИнформацииАдреса.НастройкиПроверки = Неопределено Тогда 
		ВидКонтактнойИнформацииАдреса.НастройкиПроверки = Новый Структура;
	КонецЕсли;
	ВидКонтактнойИнформацииАдреса.НастройкиПроверки.Вставить("ТолькоНациональныйАдрес",      Истина);
	ВидКонтактнойИнформацииАдреса.НастройкиПроверки.Вставить("ВключатьСтрануВПредставление", Ложь);
	ВидКонтактнойИнформацииАдреса.НастройкиПроверки.Вставить("СкрыватьНеактуальныеАдреса",   Ложь);
	
	// Считываем данные из полей адреса в реквизиты для редактирования.
	Если АдресХозяйствующегоСубъектаСтранаМира = Справочники.СтраныМира.Россия Тогда
		ПредставлениеАдресаХозяйствующегоСубъекта = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(АдресХозяйствующегоСубъекта);
	КонецЕсли;
	Если АдресПредприятияСтранаМира = Справочники.СтраныМира.Россия Тогда
		ПредставлениеАдресаПредприятия = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(АдресПредприятия);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияПолейКонтактнойИнформацииСервер(Знач Представление, Знач ВидКонтактнойИнформации, Знач Комментарий = Неопределено)
	
	// Создаем новый экземпляр по представлению.
	Результат = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияXMLПоПредставлению(Представление, ВидКонтактнойИнформации);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатРедактированияАдресаПредприятия(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	АдресПредприятия               = "";
	ДанныеАдресаПредприятия        = Результат;
	ПредставлениеАдресаПредприятия = Результат.ПредставлениеАдреса;
	
	СформироватьСписокВыбораНаименованияПредприятия();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатРедактированияАдресаХозяйствующегоСубъекта(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	АдресХозяйствующегоСубъекта               = "";
	ДанныеАдресаХозяйствующегоСубъекта        = Результат;
	ПредставлениеАдресаХозяйствующегоСубъекта = Результат.ПредставлениеАдреса;
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормы(Форма)
	
	МассивСтатусовНеОбрабатывалось = Новый Массив;
	МассивСтатусовНеОбрабатывалось.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ПустаяСсылка"));
	МассивСтатусовНеОбрабатывалось.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.КПередаче"));
	
	Элементы = Форма.Элементы;
	
	Элементы.GLN.Видимость = ЗначениеЗаполнено(Форма.СобственникПредприятия);
	Элементы.РезультатЗапросаСвязыванияПредприятияХозяйствующегоСубъекта.Видимость = 
	                  (МассивСтатусовНеОбрабатывалось.Найти(Форма.СостояниеСвязывания) = Неопределено);
	
	Элементы.РезультатЗапросаСозданиеПредприятияПослеХозяйствующегоСубъекта.Видимость = 
	        Форма.СостояниеДобавленияХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена")
	        И (МассивСтатусовНеОбрабатывалось.Найти(Форма.СостояниеДобавленияПредприятия) = Неопределено);
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеХозяйствующегоСубъекта Тогда
		УправлениеЭлементамиДанныеХозяйствующегоСубъекта(Форма);
	КонецЕсли;
	
	Если Форма.РежимПросмотра Тогда
		Элементы.ДанныеПредприятия.ТолькоПросмотр       = Истина;
		Элементы.ПричинаДобавленияПредприятия.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьЗаголовокФормы(Форма);
	УправлениеЭлементамиНавигацииПомощника(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормы(Форма)

	Если Форма.РежимПросмотра Тогда
		
		Форма.Заголовок = НСтр("ru = 'Просмотр данных предприятия'");
		
	ИначеЕсли ЗначениеЗаполнено(Форма.СостояниеДобавленияХозяйствующегоСубъекта)
			И ЗначениеЗаполнено(Форма.СостояниеДобавленияПредприятия) Тогда
			
		Если Форма.ХозяйствующийСубъектСоздан Тогда
			Форма.Заголовок = НСтр("ru = 'Изменение хозяйствующего субъекта и предприятия'");
		Иначе
			Форма.Заголовок = НСтр("ru = 'Создание хозяйствующего субъекта и предприятия'");
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(Форма.СостояниеДобавленияХозяйствующегоСубъекта) Тогда
		
		Если Форма.ХозяйствующийСубъектСоздан Тогда
			Форма.Заголовок = НСтр("ru = 'Изменение хозяйствующего субъекта'");
		Иначе
			Форма.Заголовок = НСтр("ru = 'Создание хозяйствующего субъекта'");
		КонецЕсли;
			
	ИначеЕсли ЗначениеЗаполнено(Форма.СостояниеДобавленияПредприятия) Тогда
		
		Если Форма.ПредприятиеСоздано Тогда
			Форма.Заголовок = НСтр("ru = 'Изменение предприятия'");
		Иначе
			Форма.Заголовок = НСтр("ru = 'Создание предприятия'");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиНавигацииПомощника(Форма)

	Элементы = Форма.Элементы;
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеХозяйствующегоСубъекта Тогда
	
		Элементы.Назад.Видимость   = Ложь;
		Элементы.Далее.Видимость   = Истина;
		Элементы.Закрыть.Видимость = Истина;
		
		Элементы.Закрыть.Заголовок = НСтр("ru = 'Отмена'");
		
		Если ЗначениеЗаполнено(Форма.СостояниеДобавленияПредприятия) Тогда
			Элементы.Далее.Заголовок   = НСтр("ru = 'К данным предприятия'");
		ИначеЕсли Форма.ХозяйствующийСубъектСоздан Тогда
			Элементы.Далее.Заголовок   = НСтр("ru = 'Изменить'");
		Иначе
			Элементы.Далее.Заголовок   = НСтр("ru = 'Создать'");
		КонецЕсли;
	
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия Тогда
		
		Если Форма.РежимПросмотра Тогда
			
			Элементы.Назад.Видимость   = Ложь;
			Элементы.Далее.Видимость   = Ложь;
			Элементы.Закрыть.Видимость = Истина;
			Элементы.Закрыть.Заголовок = НСтр("ru = 'Закрыть'");
			
		Иначе
			
			Элементы.Закрыть.Видимость = Истина;
			Элементы.Далее.Видимость   = Истина;
			
			Если Форма.ПредприятиеСоздано Тогда
					Элементы.Далее.Заголовок   = НСтр("ru = 'Изменить'");
				Иначе
					Элементы.Далее.Заголовок   = НСтр("ru = 'Создать'");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Форма.СостояниеДобавленияХозяйствующегоСубъекта) Тогда
				
				Элементы.Назад.Видимость = Истина;
				Элементы.Назад.Заголовок = НСтр("ru = 'К хозяйствующему субъекту'");
				
			Иначе
				
				Элементы.Назад.Видимость   = Ложь;
				
				Если Форма.ПредприятиеСоздано Тогда
					Элементы.Далее.Заголовок   = НСтр("ru = 'Изменить'");
				Иначе
					Элементы.Далее.Заголовок   = НСтр("ru = 'Создать'");
				КонецЕсли
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросОжидание Тогда
		
		Элементы.Назад.Видимость   = Ложь;
		Элементы.Далее.Видимость   = Ложь;
		Элементы.Закрыть.Видимость = Истина;
		Элементы.Закрыть.Заголовок = НСтр("ru = 'Продолжить в фоне'");
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросОшибка Тогда
		
		Если ЗначениеЗаполнено(Форма.СостояниеДобавленияПредприятия) Тогда
			Элементы.Назад.Заголовок = НСтр("ru = 'К предприятию'");
		Иначе
			Элементы.Назад.Заголовок = НСтр("ru = 'К хозяйствующему субъекту'");
		КонецЕсли;
		
		Элементы.Назад.Видимость   = Истина;
		Элементы.Закрыть.Видимость = Истина;
		Элементы.Закрыть.Заголовок = НСтр("ru = 'Отмена'");
		Элементы.Далее.Видимость   = Ложь;
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаЗапросРезультат Тогда
		
		Элементы.Назад.Видимость = Истина;
		
		Если Форма.СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОбрабатывается")
			Или Форма.СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОбрабатывается") Тогда
			
			Элементы.Назад.Видимость = Ложь;
			Элементы.Далее.Видимость = Истина;
			Элементы.Далее.Заголовок = НСтр("ru = 'Продолжить в фоне'");
			
		ИначеЕсли Форма.СостояниеДобавленияПредприятия = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка")
			Или Форма.СостояниеСвязывания = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.Ошибка") Тогда
			
			Элементы.Назад.Видимость = Истина;
			Элементы.Далее.Видимость = Ложь;
			
		Иначе
			
			Элементы.Назад.Видимость = Истина;
			
			Если ЗначениеЗаполнено(Форма.СостояниеДобавленияПредприятия) Тогда
				Элементы.Назад.Заголовок = НСтр("ru = 'Изменить предприятие'");
			Иначе
				Элементы.Назад.Заголовок = НСтр("ru = 'Изменить хозяйствующий субъект'");
			КонецЕсли;
			
			Элементы.Далее.Видимость = Истина;
			Элементы.Далее.Заголовок = НСтр("ru = 'Готово'");
			Элементы.Закрыть.Видимость = Ложь;
			
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиДанныеХозяйствующегоСубъекта(Форма)

	Элементы = Форма.Элементы;
	
	Если Не Форма.АдресХозяйствующегоСубъектаСтранаМира = Форма.СтранаРоссия Тогда
		
		Элементы.КПП.Видимость  = Ложь;
		Элементы.ОГРН.Видимость = Ложь;
	
	ИначеЕсли Форма.ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо") Тогда
		
		Элементы.ИНН.ПодсказкаВвода             = НСтр("ru = 'Введите 10 цифр'");
		Элементы.КПП.Видимость                  = Истина;
		Элементы.ОГРН.Видимость                 = Истина;
		Элементы.ОГРН.ПодсказкаВвода            = НСтр("ru = 'Введите 13 цифр'");
		Элементы.ОГРН.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Форма.ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ИндивидуальныйПредприниматель") Тогда
		
		Элементы.ИНН.ПодсказкаВвода             = НСтр("ru = 'Введите 12 цифр'");
		Элементы.КПП.Видимость                  = Ложь;
		Элементы.ОГРН.Видимость                 = Истина;
		Элементы.ОГРН.ПодсказкаВвода            = НСтр("ru = 'Введите 15 цифр'");
		Элементы.ОГРН.АвтоОтметкаНезаполненного = Ложь;
		
	ИначеЕсли Форма.ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ФизическоеЛицо") Тогда
		
		Элементы.ИНН.ПодсказкаВвода = НСтр("ru = 'Введите 12 цифр'");
		Элементы.КПП.Видимость      = Ложь;
		Элементы.ОГРН.Видимость     = Ложь;
		
	КонецЕсли;
	
	Если Не Форма.НастройкиПодключенияКСервисуИППЗаданы 
		Или Не Форма.АдресХозяйствующегоСубъектаСтранаМира = Форма.СтранаРоссия Тогда
		Элементы.ЗаполнитьПоИНН.Видимость = Ложь;
	Иначе
		
		Элементы.ЗаполнитьПоИНН.Видимость = Истина;
		
		Если Не ПустаяСтрока(Форма.ИНН) 
			И (Форма.ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо") 
			  Или Форма.ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ИндивидуальныйПредприниматель")) Тогда
			
			Элементы.ЗаполнитьПоИНН.Доступность = Истина;
			
		Иначе
			
			Элементы.ЗаполнитьПоИНН.Доступность = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ИНН.Видимость = (Форма.АдресХозяйствующегоСубъектаСтранаМира = Форма.СтранаРоссия);
	 
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеРеквизитовПоИНН

&НаКлиенте
Процедура ФоновоеЗаданиеПроверитьНаКлиенте()
	
	РезультатВыполнения = ИнтеграцияВЕТИСВызовСервера.ФоновоеЗаданиеВыполнено(ФоновоеЗаданиеИдентификатор, ФоновоеЗаданиеАдресХранилища);
	Если РезультатВыполнения.ЗаданиеВыполнено Тогда
		ВыполнитьЗаполнениеРеквизитовПоИНН(РезультатВыполнения.РеквизитыКонтрагента);
	Иначе
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
		ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", ПараметрыОбработчика.ТекущийИнтервал, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаполнениеРеквизитовПоИНН(РеквизитыКонтрагента, ЗаполнятьИНН = Ложь)
	
	Если РеквизитыКонтрагента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		
		ИнтеграцияВЕТИСКлиент.ПоказатьПользователюОшибкуПолученияРеквизитовКонтрагентаПоИНН(РеквизитыКонтрагента.ОписаниеОшибки);
		
	Иначе
		
		ЗаполнитьРеквизитыХозяйствующегоСубъектаПоПолученнымДанным(РеквизитыКонтрагента);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыХозяйствующегоСубъектаПоПолученнымДанным(РеквизитыКонтрагента)

	НаименованиеХозяйствующегоСубъекта       = РеквизитыКонтрагента.Наименование;
	ИНН                                      = РеквизитыКонтрагента.ИНН;
	ПолноеНаименованиеХозяйствующегоСубъекта = РеквизитыКонтрагента.НаименованиеПолное;
	
	Если РеквизитыКонтрагента.Свойство("КПП") Тогда
		КПП = РеквизитыКонтрагента.КПП;
	Иначе
		КПП = "";
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("ПравоваяФорма") Тогда
		ТаблицаОПФ = ПрочиеКлассификаторыВЕТИСВызовСервера.ОрганизационноПравовыеФормы();
		
		ПараметрыПоиска = Новый Структура("Наименование", РеквизитыКонтрагента.ПравоваяФорма);
		НайденныеСтроки = ТаблицаОПФ.НайтиСтроки(ПараметрыПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			НайденныйЭлемент = Элементы.ОрганизационноПравоваяФорма.СписокВыбора.НайтиПоЗначению(НайденныеСтроки[0].GUID);
			Если НайденныйЭлемент <> Неопределено Тогда
				ОрганизационноПравоваяФорма = НайденныйЭлемент.Значение;
			Иначе
				ОрганизационноПравоваяФорма = "";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;		

КонецПроцедуры

&НаСервере
Функция ФоновоеЗаданиеДанныеПартнераПоИННЗапустить(ИНН, ЭтоЮрЛицо, УникальныйИдентификатор, ИдентификаторЗадания)
	
	РезультатЗапуска = Новый Структура("ЗаданиеЗапущено, РеквизитыКонтрагента", Ложь, Неопределено);
	РезультатЗапуска.Вставить("ИдентификаторЗадания","");
	РезультатЗапуска.Вставить("АдресХранилища","");
	
	Если ТипЗнч(ИдентификаторЗадания) = Тип("УникальныйИдентификатор") Тогда
		Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
		
		Если Задание <> Неопределено
			И Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
			Задание.Отменить();
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормирования = Новый Структура;
	ПараметрыФормирования.Вставить("ИНН", ИНН);
	ПараметрыФормирования.Вставить("ЭтоЮридическоеЛицо", ЭтоЮрЛицо);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НСтр("ru = 'Работа с контрагентами: получение реквизитов по ИНН.'");
	
	Попытка
		РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(
			"ИнтеграцияВЕТИС.ДанныеКонтрагентаПоИННФоновоеЗадание",
			ПараметрыФормирования,
			ПараметрыВыполненияВФоне);
	Исключение
		Возврат РезультатЗапуска;
	КонецПопытки;
	
	РезультатЗапуска.ИдентификаторЗадания  = РезультатФоновогоЗадания.ИдентификаторЗадания;
	РезультатЗапуска.АдресХранилища        = РезультатФоновогоЗадания.АдресРезультата;
	
	Если РезультатФоновогоЗадания.Статус = "Выполнено" Тогда
		РезультатЗапуска.РеквизитыКонтрагента = ПолучитьИзВременногоХранилища(РезультатФоновогоЗадания.АдресРезультата);
	Иначе
		РезультатЗапуска.ЗаданиеЗапущено      = Истина;
	КонецЕсли;
	
	Если РезультатЗапуска.РеквизитыКонтрагента.Свойство("ИсторияРеквизитов") Тогда
		РезультатЗапуска.РеквизитыКонтрагента.Удалить("ИсторияРеквизитов");
	КонецЕсли;
	
	Возврат РезультатЗапуска;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗаполнениеРеквизитовПоДаннымИННВозможно(ИННЗаполненКорректно, Форма)
	
	Возврат ИННЗаполненКорректно 
	        И Форма.НастройкиПодключенияКСервисуИППЗаданы
	        И (Форма.ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо")
	        ИЛИ Форма.ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ИндивидуальныйПредприниматель")); 
	
КонецФункции

&НаСервере
Функция ДанныеКонтрагентаПоИНН(ЭтоЮридическоеЛицо, ИНН, ИдентификаторЗадания)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.РаботаСКонтрагентами") Тогда
	
		Если ТипЗнч(ИдентификаторЗадания) = Тип("УникальныйИдентификатор") Тогда
			Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
			
			Если Задание <> Неопределено
				И Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
				Задание.Отменить();
			КонецЕсли;
		КонецЕсли;
		
		МодульРаботаСКонтрагентами = ОбщегоНазначения.ОбщийМодуль("РаботаСКонтрагентами");
		
		Если ЭтоЮридическоеЛицо Тогда
			ДанныеКонтрагента = МодульРаботаСКонтрагентами.РеквизитыЮридическогоЛицаПоИНН(ИНН);
		Иначе
			ДанныеКонтрагента = МодульРаботаСКонтрагентами.РеквизитыПредпринимателяПоИНН(ИНН);
		КонецЕсли;
		
		Если ТипЗнч(ДанныеКонтрагента) = Тип("Структура")
			И ДанныеКонтрагента.Свойство("ИсторияРеквизитов") Тогда
			
			ДанныеКонтрагента.Удалить("ИсторияРеквизитов");
			
		КонецЕсли;
		
		Возврат ДанныеКонтрагента;
		
	Иначе
	
		Возврат Неопределено;
	
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьРеквизитыХозяйствующегоСубъектаПоИНН()

	ЭтоЮрЛицо = ЭтоЮрЛицо(ТипХозяйствующегоСубъекта);
	ИННЗаполненКорректно = Истина;
	
	ТекстСообщения = "";
	Если ПустаяСтрока(ИНН) Тогда
		
		ИННЗаполненКорректно = Ложь;
		
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ЭтоЮрЛицо, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,".ИНН",,);
			
	КонецЕсли;
	
	Если ЗаполнениеРеквизитовПоДаннымИННВозможно(ИННЗаполненКорректно, ЭтотОбъект) Тогда
		
		РезультатЗапуска = ФоновоеЗаданиеДанныеПартнераПоИННЗапустить(ИНН,
		                                                              ЭтоЮрЛицо,
		                                                              УникальныйИдентификатор,
		                                                              ФоновоеЗаданиеИдентификатор);
		
		ФоновоеЗаданиеИдентификатор  = РезультатЗапуска.ИдентификаторЗадания;
		ФоновоеЗаданиеАдресХранилища = РезультатЗапуска.АдресХранилища;
		
		Если РезультатЗапуска.ЗаданиеЗапущено Тогда
			ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
			ПараметрыОбработчика.ТекущийИнтервал = 2;
			ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", 2, Истина);
		Иначе
			ВыполнитьЗаполнениеРеквизитовПоИНН(РезультатЗапуска.РеквизитыКонтрагента);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура ПерейтиКУказаниюДанныхПредприятия()
	
	Если Не ЗначениеЗаполнено(ПредставлениеАдресаПредприятия) Тогда
		
		ПредставлениеАдресаПредприятия = ПредставлениеАдресаХозяйствующегоСубъекта;
		Если ТипЗнч(ДанныеАдресаХозяйствующегоСубъекта) = Тип("Структура") Тогда
			ДанныеАдресаПредприятия = ДанныеАдресаХозяйствующегоСубъекта;
		КонецЕсли;
		
		СформироватьСписокВыбораНаименованияПредприятия();
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПричинаДобавленияПредприятия) Тогда
		
		ПричинаДобавленияПредприятия = ПричинаДобавленияХозяйствующегоСубъекта;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипПредприятия) Тогда
		
		ТипПредприятия = ПредопределенноеЗначение("Перечисление.ТипыПредприятийВЕТИС.Предприятие");
		
	КонецЕсли;
	
	Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.ДанныеПредприятия;
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСписокВыбораНаименованияПредприятия()

	СписокВыбораНаименования = Элементы.Наименование.СписокВыбора;
	
	СписокВыбораНаименования.Очистить();
	
	ПредставлениеНаименования = "";
	
	Если Не ПустаяСтрока(ПредставлениеАдресаПредприятия) Тогда
		
		Если ЗначениеЗаполнено(НаименованиеХозяйствующегоСубъекта) Тогда
			
			ПредставлениеНаименования = СтрШаблон("%1 (%2)", ПредставлениеАдресаПредприятия, НаименованиеХозяйствующегоСубъекта);
			
		Иначе
			
			ПредставлениеНаименования = ПредставлениеАдресаПредприятия;
			
		КонецЕсли;
		
		СписокВыбораНаименования.Добавить(ПредставлениеНаименования);
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(ПредставлениеНаименования)
		И Не ПустаяСтрока(НаименованиеПредприятия)
		И ПредставлениеНаименования <> НаименованиеПредприятия Тогда
		
		СписокВыбораНаименования.Добавить(НаименованиеПредприятия);
		
	КонецЕсли;
	
	Элементы.Наименование.КнопкаВыпадающегоСписка = СписокВыбораНаименования.Количество() > 0;
	
	Если ПустаяСтрока(НаименованиеПредприятия)
		И СписокВыбораНаименования.Количество() > 0 Тогда
		
		НаименованиеПредприятия = СписокВыбораНаименования.Получить(0).Значение;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоЮрЛицо(ТипХозяйствующегоСубъекта)

	Возврат (ТипХозяйствующегоСубъекта = ПредопределенноеЗначение("Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо"));

КонецФункции 

&НаСервере
Процедура ЗаполнитьДанныеХозяйствующегоСубъектаПоКонтрагенту();
	
	ДанныеХозяйствующегоСубъекта = ИнтеграцияВЕТИС.ДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта(Контрагент);
	
	ТипХозяйствующегоСубъекта          = ДанныеХозяйствующегоСубъекта.Тип;
	ИНН                                = ДанныеХозяйствующегоСубъекта.ИНН;
	КПП                                = ДанныеХозяйствующегоСубъекта.КПП;
	ОГРН                               = ДанныеХозяйствующегоСубъекта.ОГРН;
	НаименованиеХозяйствующегоСубъекта = ДанныеХозяйствующегоСубъекта.Наименование;
	
	Если Не ПустаяСтрока(ДанныеХозяйствующегоСубъекта.НаименованиеПолное) Тогда
		ПолноеНаименованиеХозяйствующегоСубъекта = ДанныеХозяйствующегоСубъекта.НаименованиеПолное;
	Иначе
		ПолноеНаименованиеХозяйствующегоСубъекта = ДанныеХозяйствующегоСубъекта.Наименование;
	КонецЕсли;
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииСервер()
	
	ЗаполнитьДанныеХозяйствующегоСубъектаПоКонтрагенту();
	ЗаполнитьАдресХозяйствующегоСубъектаПоКонтрагенту();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАдресХозяйствующегоСубъектаПоКонтрагенту()
	
	АдресХозяйствующегоСубъектаСтранаМира = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "СтранаРегистрации");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

