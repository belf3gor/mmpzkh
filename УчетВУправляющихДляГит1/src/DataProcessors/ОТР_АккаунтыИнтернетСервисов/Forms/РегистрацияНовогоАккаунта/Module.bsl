
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Обработчик "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОповеститьФормуРегистрации" Тогда
		ДанныеЛогина = Новый Структура;
		ДанныеЛогина.Вставить("Логин", Логин);
		Оповестить("ПодключениеВыполнено", ДанныеЛогина);
		Закрыть(); // закрывает форму кодового слова
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
// Устанавливает видимость элементов формы.
//
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.КнопкаПодтвердить.Доступность = Форма.СогласиеНаРегистрацию;
	
КонецПроцедуры // УстановитьВидимостьЭлементов()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик "ПриИзменении" флага "СогласиеНаРегистрацию".
//
Процедура СогласиеНаРегистрациюПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область МеханизмыВзаимодействияСВебСервисом

&НаСервере
// Выполняет отправку параметров доступа для регистрации на сервисе.
//
Функция ВыполнитьОтправкуПараметровДоступаДляРегистрацииНаСервере(СведенияОбОшибке)
	
	СведенияОбОшибке = "";
	
	Если ПроверитьПравильностьПараметровДоступа() Тогда
		// Формирует структуру с регистрационными данными.
		СтруктураРегистрации = ОТР_АккаунтыИнтернетСервисовСервер.ПодготовитьСтруктуруРегистрации(Логин, Пароль, АдресЭлектроннойПочты, Телефон);
		// Отправляет параметры на проверку.
		ПередачаПараметровДоступаВыполненаУспешно = ОТР_АккаунтыИнтернетСервисовСервер.ЗарегистрироватьАккаунт(СтруктураРегистрации, СведенияОбОшибке);
		Возврат ПередачаПараметровДоступаВыполненаУспешно;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
//Выполняет проверку корректности введенных параметров доступа.
//
Функция ПроверитьПравильностьПараметровДоступа()
	
	ПараметрыДоступаКорректны = Истина;
	
	Если Логин = "" Тогда
		Элементы.НадписьКорректностьЛогина.Видимость = Истина;
		ПараметрыДоступаКорректны = Ложь;
	Иначе
		Элементы.НадписьКорректностьЛогина.Видимость = Ложь;
	КонецЕсли;
	
	Если ОТР_АккаунтыИнтернетСервисовСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(АдресЭлектроннойПочты) Тогда
		Элементы.НадписьКорректностьЭлектроннойПочты.Видимость = Ложь;
	Иначе
		Элементы.НадписьКорректностьЭлектроннойПочты.Видимость = Истина;
		ПараметрыДоступаКорректны = Ложь;
	КонецЕсли;
	
	Если Пароль = "" Тогда
		Элементы.НадписьКорректностьПароля.Видимость = Истина;
		ПараметрыДоступаКорректны = Ложь;
	Иначе
		Элементы.НадписьКорректностьПароля.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ Пароль = "" И (ПодтверждениеПароля = "" ИЛИ НЕ Пароль = ПодтверждениеПароля) Тогда
		Элементы.НадписьКорректностьПодтвержденногоПароля.Видимость = Истина;
		ПараметрыДоступаКорректны = Ложь;
	Иначе
		Элементы.НадписьКорректностьПодтвержденногоПароля.Видимость = Ложь;
	КонецЕсли;
	
	Возврат ПараметрыДоступаКорректны;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
// Отправляет регистрационные данные для проверки и сразу же отправляет на указанную почту кодовое слово.
//
Процедура КомандаПодтвердитьДанные(Команда)
	
	ОчиститьСообщения();
	СведенияОбОшибке = "";
	
	Значение = ВыполнитьОтправкуПараметровДоступаДляРегистрацииНаСервере(СведенияОбОшибке);
	
	Если Значение Тогда
		Структура = ОТР_АккаунтыИнтернетСервисовСервер.ПодготовитьСтруктуруРегистрации(Логин, Пароль, АдресЭлектроннойПочты, Телефон = "");
		ОткрытьФорму("Обработка.ОТР_АккаунтыИнтернетСервисов.Форма.КодовоеСлово", Структура);
	Иначе
		Сообщить("Регистрация не выполнена");
	КонецЕсли;
	
	Если Не СведенияОбОшибке = "" Тогда
		ПоказатьПредупреждение(, СведенияОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Закрывает форму.
//
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

