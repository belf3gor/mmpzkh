
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		Разрешение.Вставить("ОдинМиллиметрШирины",          0.535);
		Разрешение.Вставить("ОдинМиллиметрВысоты",          2.711);
	#КонецЕсли
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		Элементы.НаПринтерЭтикеток.Видимость = ПоддерживаетсяПринтерЭтикеток();
	Иначе
		Элементы.НаПринтерЭтикеток.Видимость = Ложь;
	КонецЕсли;
	
	ЗаполнитьПоДаннымМакета();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПечатьНаОбычномПринтере = Истина;
	РазмерЭтикетки = "Малый";
	Количество = 1;
	
	СписокНоменклатуры = Обработки.ПечатьЭтикеток.НоменклатураДляПечатиЦенников(Параметры.ОбъектыПечати);
	Если СписокНоменклатуры.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нет номенклатуры для отображения'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СписокОбъектов.ЗагрузитьЗначения(Параметры.ОбъектыПечати);
	
	Если Параметры.Вид = "Этикетка" Тогда
		Заголовок = НСтр("ru = 'Печать этикеток'");
		Элементы.Количество.Видимость = ТипЗнч(Параметры.ОбъектыПечати[0]) = Тип("СправочникСсылка.Номенклатура") И СписокОбъектов.Количество() = 1;
	Иначе
		Заголовок = НСтр("ru = 'Печать ценников'");
		Элементы.Количество.Видимость = Ложь;
	КонецЕсли;
	
	ВидЭтикетки = Параметры.Вид;
	
	ИмяШаблонаЭтикетки = ИмяШаблонаЭтикетки(ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыШаблонаЭтикеток(ИмяШаблонаЭтикетки));
	
	Если  Параметры.Вид = "Этикетка" 
		И ТипЗнч(Параметры.ОбъектыПечати[0]) <> Тип("СправочникСсылка.Номенклатура") Тогда
		
		КоличествоПредставление = "<Из документа>";
	Иначе
		КоличествоПредставление = "1";
	КонецЕсли; 
	Элементы.ДекорацияКоличество.Видимость = НЕ Элементы.Количество.Видимость;
	
	ТипЦен = ТипЦенИзДокументов(Параметры.ОбъектыПечати);
	
	Элементы.ТипЦен.Видимость = НЕ ЗначениеЗаполнено(ТипЦен);
	Элементы.ДекорацияТипЦен.Видимость = ЗначениеЗаполнено(ТипЦен);
	
	Элементы.ГруппаЦены.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьТипыЦенНоменклатуры");
	
	Элементы.РазмерМалый.СписокВыбора.Очистить();
	Элементы.РазмерМалый.СписокВыбора.Добавить("Малый", ОбщегоНазначения.ЗначениеРеквизитаОбъекта("Справочник.ХранилищеШаблонов.Шаблон"+ВидЭтикетки+"Малый", "РазмерМакета"));
	
	Элементы.РазмерБольшой.СписокВыбора.Очистить();
	Элементы.РазмерБольшой.СписокВыбора.Добавить("Большой", ОбщегоНазначения.ЗначениеРеквизитаОбъекта("Справочник.ХранилищеШаблонов.Шаблон"+ВидЭтикетки+"Большой", "РазмерМакета"));
	
	ЕстьПравоРедактированияМакета = ПравоДоступа("Просмотр", Метаданные.ОбщиеФормы.РедакторЭтикетокФормаРедактированияМакета);
	
	Элементы.РедактироватьШаблон.Видимость       = ЕстьПравоРедактированияМакета;
	
	Разрешение = Новый Структура;
	
	Эталон = ПолучитьМакетЭталон();
	Рисунок = Эталон.Рисунки[0];
	
	ВысотаСтрокиВМиллиметрах = Рисунок.Верх;
	ШиринаСтолбцаВМиллиметрах = Рисунок.Лево;
	
	ВысотаСтроки	= Эталон.Область("R1").ВысотаСтроки;
	ШиринаСтолбца	= Эталон.Область("C1").ШиринаКолонки;
		
	Разрешение.Вставить("КоличествоМиллиметровВПикселеВысота", Рисунок.Высота/200);
	Разрешение.Вставить("КоличествоМиллиметровВПикселеШирина", Рисунок.Ширина/200);
	Разрешение.Вставить("ОдинМиллиметрШирины",                 ШиринаСтолбца / ШиринаСтолбцаВМиллиметрах);
	Разрешение.Вставить("ОдинМиллиметрВысоты",                 ВысотаСтроки / ВысотаСтрокиВМиллиметрах);
	
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ИмяШаблонаЭтикетки = ИмяШаблонаЭтикетки(ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыШаблонаЭтикеток(ИмяШаблонаЭтикетки));
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Настройки.Очистить();
	
	Настройки.Вставить(ВидЭтикетки+"РазмерЭтикетки",    РазмерЭтикетки);
	Настройки.Вставить(ВидЭтикетки+"НаОбычныйПринтер",  ПечатьНаОбычномПринтере);
	Настройки.Вставить(ВидЭтикетки+"СразуНаПринтер",    СразуНаПринтер);
	Настройки.Вставить(ВидЭтикетки+"ТипЦен",            ТипЦен);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаПринтерЭтикетокПриИзменении(Элемент)
	
	ИмяШаблонаЭтикетки = ИмяШаблонаЭтикетки(ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыШаблонаЭтикеток(ИмяШаблонаЭтикетки));
	
	УправлениеФормой(ЭтотОбъект);
	ЗаполнитьПоДаннымМакета();
КонецПроцедуры

&НаКлиенте
Процедура Размер2ПриИзменении(Элемент)
	ИмяШаблонаЭтикетки = ИмяШаблонаЭтикетки(ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыШаблонаЭтикеток(ИмяШаблонаЭтикетки));
	ЗаполнитьПоДаннымМакета();
КонецПроцедуры

&НаКлиенте
Процедура Размер1ПриИзменении(Элемент)
	ИмяШаблонаЭтикетки = ИмяШаблонаЭтикетки(ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыШаблонаЭтикеток(ИмяШаблонаЭтикетки));
	ЗаполнитьПоДаннымМакета();
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)
	ЗаполнитьПоДаннымМакета();
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотрВыбор(Элемент, Область, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НЕ Элементы.РедактироватьШаблон.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("РедактированиеМакетаЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьРедактированиеМакета(Оповещение, XMLОписаниеМакета, АдресХранилищаСКД);
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Напечатать(Команда)
	Перем ОписаниеОшибки;
	Если ПечатьНаОбычномПринтере Тогда
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("АдресХранилищаСКД", АдресХранилищаСКД);
		ПараметрыПечати.Вставить("XMLОписаниеМакета", XMLОписаниеМакета);
		ПараметрыПечати.Вставить("Разрешение",        Разрешение);
		
		ПараметрыПечати.Вставить("ТипЦен", ТипЦен);
		ПараметрыПечати.Вставить("Количество", Количество);
		
		Если СразуНаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Обработка.ПечатьЭтикеток", ВидЭтикетки, СписокОбъектов.ВыгрузитьЗначения(), ПараметрыПечати);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.ПечатьЭтикеток", ВидЭтикетки, СписокОбъектов.ВыгрузитьЗначения(), ЭтотОбъект, ПараметрыПечати);
		КонецЕсли; 
		
		Закрыть();
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключениеПринтераЭтикетокЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОписаниеОповещения, УникальныйИдентификатор, "ПринтерЭтикеток" );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьШаблон(Команда)
	Оповещение = Новый ОписаниеОповещения("РедактированиеМакетаЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьРедактированиеМакета(Оповещение, XMLОписаниеМакета, АдресХранилищаСКД);
КонецПроцедуры


#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

#Область ЗавершениеВызововПроцедур

&НаКлиенте
Процедура ПодключениеПринтераЭтикетокЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Если НЕ Значение.Результат Тогда
		ТекстСообщения = НСтр ( "ru = 'При подключении оборудования произошла ошибка: 
		|""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", Значение.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли; 

	РезультатПодготовкиДанных = ДанныеДляПечатиЭтикеток(СписокОбъектов.ВыгрузитьЗначения(), АдресХранилищаСКД, XMLОписаниеМакета, ТипЦен);
	Если НЕ РезультатПодготовкиДанных.Успешно Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПодготовкиДанных.СообщениеОбОшибке);
		Возврат;
	КонецЕсли; 
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПечатьЭтикетокЗавершение", ЭтотОбъект);
	
	МенеджерОборудованияКлиент.НачатьПечатьЭтикеток(ОповещениеПриЗавершении, УникальныйИдентификатор, XMLОписаниеМакета, РезультатПодготовкиДанных.ДанныеДляПечатиЭтикеток);

КонецПроцедуры 

&НаКлиенте
Процедура ПечатьЭтикетокЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если НЕ Значение.Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Значение.ОписаниеОшибки);
		Возврат;
	КонецЕсли;

	Закрыть();
КонецПроцедуры 

&НаКлиенте
Процедура РедактированиеМакетаЗавершение(Значение, Параметры) Экспорт
	Если Значение = КодВозвратаДиалога.ОК Тогда
		РедактированиеМакетаЗавершениеНаСервере(Параметры);
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти 

&НаСервереБезКонтекста
Функция ПоддерживаетсяПринтерЭтикеток()
	
	Возврат ПравоДоступа("Чтение", Метаданные.Справочники.ПодключаемоеОборудование) 
		И МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("ПринтерЭтикеток").Количество() > 0;
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция ИмяШаблонаЭтикетки(Форма)
	Возврат СтрШаблон("Шаблон%1%2", Форма.ВидЭтикетки, ?(НЕ Форма.ПечатьНаОбычномПринтере, "ПринтерЭтикеток", Форма.РазмерЭтикетки));
КонецФункции 

&НаСервереБезКонтекста
Функция ДанныеДляПечатиЭтикеток(СписокОбъектов, АдресХранилищаСКД, XMLОписаниеМакета, ТипЦен)
	СписокНоменклатуры = Обработки.ПечатьЭтикеток.НоменклатураДляПечатиЦенников(СписокОбъектов);
	
	Возврат Обработки.ПечатьЭтикеток.ДанныеДляПечатиЭтикеток(СписокНоменклатуры, АдресХранилищаСКД, XMLОписаниеМакета, ТипЦен);
КонецФункции 

&НаСервереБезКонтекста
Функция ТипЦенИзДокументов(СписокОбъектов)
	Запрос = Новый Запрос;
	
	ЧастиЗапроса = Новый Массив;
	
	Для каждого СписокОбъектовПоТипу Из ОбщегоНазначенияБП.РазложитьСписокПоТипамОбъектов(СписокОбъектов) Цикл
		Если СписокОбъектовПоТипу.Ключ = Метаданные.Документы.УстановкаЦенНоменклатуры Тогда 
			
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
			|	УстановкаЦенНоменклатуры.ТипЦен КАК ТипЦен
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка В(&СписокОбъектов)";
		ИначеЕсли СписокОбъектовПоТипу.Ключ = Метаданные.Документы.ПоступлениеТоваровУслуг Тогда 
			
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
			|	ПоступлениеТоваровУслуг.Склад.ТипЦенРозничнойТорговли КАК ТипЦен
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
			|ГДЕ
			|	ПоступлениеТоваровУслуг.Ссылка В(&СписокОбъектов)";
		Иначе
			Продолжить;
		КонецЕсли;
		
		ИмяПеременной = "СписокОбъектов"+Формат(ЧастиЗапроса.Количество(), "ЧГ=0");
		
		Запрос.УстановитьПараметр(ИмяПеременной, СписокОбъектовПоТипу.Значение);
		ЧастиЗапроса.Добавить(СтрЗаменить(ТекстЗапроса, "СписокОбъектов", ИмяПеременной));
	КонецЦикла; 
	
	Если ЧастиЗапроса.Количество() = 0 Тогда
		Возврат ПредопределенноеЗначение("Справочник.ТипыЦенНоменклатуры.ПустаяСсылка");
	КонецЕсли; 
	
	Запрос.Текст = СтрСоединить(ЧастиЗапроса, Символы.ПС+"ОБЪЕДИНИТЬ"+Символы.ПС);
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Количество() = 1 Тогда
		Результат.Следующий();
		Возврат Результат.ТипЦен;
	Иначе
		Возврат ПредопределенноеЗначение("Справочник.ТипыЦенНоменклатуры.ПустаяСсылка");
	КонецЕсли; 
КонецФункции 

&НаСервереБезКонтекста
Функция ПараметрыШаблонаЭтикеток(ИмяШаблонаЭтикетки)
	Результат = Новый Структура;
	Результат.Вставить("АдресХранилищаСКД");
	Результат.Вставить("XMLОписаниеМакета");
	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта("Справочник.ХранилищеШаблонов."+ИмяШаблонаЭтикетки, "ПоляШаблона, XMLОписаниеМакета");
	
	Если НЕ ЗначениеЗаполнено(РеквизитыОбъекта.ПоляШаблона) Тогда
		Возврат Результат;
	КонецЕсли; 
	
	МакетПоляШаблона = Справочники.ХранилищеШаблонов.ПолучитьМакет(РеквизитыОбъекта.ПоляШаблона);
	
	Результат.Вставить("АдресХранилищаСКД", ПоместитьВоВременноеХранилище(МакетПоляШаблона, Новый УникальныйИдентификатор));
	Результат.Вставить("XMLОписаниеМакета", РеквизитыОбъекта.XMLОписаниеМакета);
	
	Возврат Результат;
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьМакетЭталон()
	
	Возврат Справочники.ПодключаемоеОборудование.ПолучитьМакет("МакетДляОпределенияКоэффициентовЕдиницИзмерения");
	
КонецФункции

&НаСервере
Процедура РедактированиеМакетаЗавершениеНаСервере(Параметры)
	
	ИмяШаблонаЭтикетки = ИмяШаблонаЭтикетки(ЭтотОбъект);
	
	ШаблонСсылка = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ХранилищеШаблонов."+ИмяШаблонаЭтикетки);
	Если ШаблонСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Элементы["Размер"+РазмерЭтикетки].СписокВыбора.Очистить();
	Элементы["Размер"+РазмерЭтикетки].СписокВыбора.Добавить(РазмерЭтикетки, Параметры.РазмерМакета);
	
	Шаблон = ШаблонСсылка.ПолучитьОбъект();
	
	ЗаполнитьЗначенияСвойств(Шаблон, Параметры, "XMLОписаниеМакета, РазмерМакета");
	
	Шаблон.Поля.Очистить();
	Для каждого ПолеДанных Из Параметры.Поля Цикл
		ЗаполнитьЗначенияСвойств(Шаблон.Поля.Добавить(), ПолеДанных);
	КонецЦикла; 
	
	Шаблон.Записать();
	
	XMLОписаниеМакета = Параметры.XMLОписаниеМакета;
	
	ЗаполнитьПоДаннымМакета();
КонецПроцедуры 

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	Если Настройки[ВидЭтикетки+"РазмерЭтикетки"] <> Неопределено Тогда
		Настройки["РазмерЭтикетки"] = Настройки[ВидЭтикетки+"РазмерЭтикетки"];
	КонецЕсли; 
	
	Если Настройки[ВидЭтикетки+"ТипЦен"] <> Неопределено И Элементы.ТипЦен.Видимость Тогда
		Настройки["ТипЦен"] = Настройки[ВидЭтикетки+"ТипЦен"];
	КонецЕсли; 
	
	Если Настройки[ВидЭтикетки+"СразуНаПринтер"] <> Неопределено Тогда
		Настройки["СразуНаПринтер"] = Настройки[ВидЭтикетки+"СразуНаПринтер"];
	КонецЕсли; 
	
	Если Настройки[ВидЭтикетки+"НаОбычныйПринтер"] <> Неопределено Тогда
		Настройки["ПечатьНаОбычномПринтере"] = Настройки[ВидЭтикетки+"НаОбычныйПринтер"];
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Элементы = Форма.Элементы;

	Элементы.ГруппаРазмер.Видимость    = Форма.ПечатьНаОбычномПринтере;
	Элементы.ГруппаДекорации.Видимость = НЕ Форма.ПечатьНаОбычномПринтере;
	Элементы.СразуНаПринтер.Видимость  = Форма.ПечатьНаОбычномПринтере;
КонецПроцедуры 

#Область ОтображениеЭтикетки

&НаСервереБезКонтекста
Функция ЕстьИнформацияОЦенах(СодержимоеXMLФайла)
	РеквизитыЦен = Новый Массив;
	РеквизитыЦен.Добавить("Цена");
	РеквизитыЦен.Добавить("ДатаЦены");
	РеквизитыЦен.Добавить("ВалютаЦены");
	
	Для Каждого ОписаниеПоляXML Из СодержимоеXMLФайла.Поля Цикл
		Если ЗначениеЗаполнено(ОписаниеПоляXML.Значение) И РеквизитыЦен.Найти(ОписаниеПоляXML.Значение) <> Неопределено Тогда
			Возврат Истина;
		КонецЕсли; 
	КонецЦикла;

	Возврат Ложь;
КонецФункции 

&НаСервере
Процедура ЗаполнитьПоДаннымМакета()
	Перем СодержимоеXMLФайла, СообщениеОбОшибке;
	
	Если МенеджерОборудованияВызовСервера.ПолучитьОписаниеМакета(XMLОписаниеМакета, СообщениеОбОшибке, СодержимоеXMLФайла) Тогда
		Макет.Очистить();
		
		ШиринаЭтикетки = СодержимоеXMLФайла.Ширина;
		ВысотаЭтикетки = СодержимоеXMLФайла.Высота;
		Ориентация = СодержимоеXMLФайла.Ориентация;
		
		СписокНоменклатуры = Обработки.ПечатьЭтикеток.НоменклатураДляПечатиЦенников(СписокОбъектов.ВыгрузитьЗначения());
		Если СписокНоменклатуры.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// Для предварительного просмотра возьмем первую строку из списка
		СтрокаНоменклатуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СписокНоменклатуры[0]);
		
		Элементы.ТипЦен.Видимость = НЕ Элементы.ДекорацияТипЦен.Видимость И ЕстьИнформацияОЦенах(СодержимоеXMLФайла);
		
		ДанныеДляПечатиЭтикеток = Обработки.ПечатьЭтикеток.ДанныеДляПечатиЭтикеток(
			СписокНоменклатуры.Скопировать(СтрокаНоменклатуры), 
			АдресХранилищаСКД, XMLОписаниеМакета, ТипЦен);
		
		Если ДанныеДляПечатиЭтикеток.Успешно Тогда
			ТабличныйДокумент = Обработки.ПечатьЭтикеток.ЗаполнитьТабличныйДокумент(
				Разрешение, 
				ДанныеДляПечатиЭтикеток.ДанныеДляПечатиЭтикеток[0]);
				
			ТабличныйДокумент.Область().АвтоВысотаСтроки = Ложь;
			ТабличныйДокумент.Область().ВысотаСтроки =  Разрешение.ОдинМиллиметрВысоты;
			ТабличныйДокумент.Область().ШиринаКолонки = Разрешение.ОдинМиллиметрШирины;
			ТабличныйДокумент.Область().ЦветФона = Новый Цвет(128,128,128);
			ТабличныйДокумент.Область(2, 2, ВысотаЭтикетки+1, ШиринаЭтикетки+1).ЦветФона = Новый Цвет(255,255,255);
			
			Макет.Вывести(ТабличныйДокумент);
		КонецЕсли; 
		
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти 
