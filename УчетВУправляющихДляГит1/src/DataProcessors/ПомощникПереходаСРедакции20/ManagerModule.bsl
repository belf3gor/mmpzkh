#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ВыполнитьСохранениеНумерацииВФоне(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатВыполнения = Новый Структура();
	Попытка
		
		ВыполнитьСохранениеНумерации();
		
		ПараметрыПомощника = ОбновлениеСПредыдущейРедакции.ПараметрыПереходаСРедакции20();
		ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции20 = Ложь;
		ОбновлениеСПредыдущейРедакции.УстановитьПараметрыПереходаСРедакции20(ПараметрыПомощника);
		
		РезультатВыполнения.Вставить("ВыполненоУспешно", Истина);
		
	Исключение
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Помощник перехода с 20.Восстановление нумерации'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		РезультатВыполнения.Вставить("ВыполненоУспешно", Ложь);
		РезультатВыполнения.Вставить("ИнформацияОбОшибке", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура ВыполнитьСохранениеНумерацииПриОбновлении() Экспорт
	
	ПараметрыПомощника = ОбновлениеСПредыдущейРедакции.ПараметрыПереходаСРедакции20();
	
	Если НЕ ЗначениеЗаполнено(Константы.УдалитьНомерВерсииКонфигурации.Получить()) Тогда
		ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции20 = Ложь;
	Иначе
		ПрефиксыИзменены = ПрефиксыПослеПереходаС20Изменены();
		Если НЕ ПрефиксыИзменены Тогда
			ВыполнитьСохранениеНумерации();
			ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции20 = Ложь;
		Иначе
			ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции20 = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбновлениеСПредыдущейРедакции.УстановитьПараметрыПереходаСРедакции20(ПараметрыПомощника);
	
КонецПроцедуры

Функция ПолучитьТаблицуОрганизацийСПрефиксами() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Организации.Ссылка
	|		ИНАЧЕ Организации.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
	|	Организации.ПрефиксБП20 КАК ПрефиксОрганизацииРедакции20,
	|	"""" КАК ПрефиксПодразделенияРедакции20,
	|	Организации.Префикс КАК ПрефиксРедакции30,
	|	ИСТИНА КАК ПрефиксУникален
	|ИЗ
	|	Справочник.Организации КАК Организации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Организации.Ссылка
	|		ИНАЧЕ Организации.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ПодразделенияОрганизаций.Ссылка,
	|	Организации.ПрефиксБП20,
	|	ПодразделенияОрганизаций.ПрефиксБП20,
	|	ПодразделенияОрганизаций.Префикс,
	|	ИСТИНА
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО Организации.Ссылка = ПодразделенияОрганизаций.Владелец
	|			И (ПодразделенияОрганизаций.ОбособленноеПодразделение = ИСТИНА)
	|			И (ПодразделенияОрганизаций.ПрефиксБП20 <> """")
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	Организация,
	|	ПодразделениеОрганизации
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ОрганизацииСПрефиксами = Запрос.Выполнить().Выгрузить();
	ОрганизацииСПрефиксами.Колонки.Добавить("ПрефиксРедакции20", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(6)));
	Для Каждого ПрефиксОрганизации ИЗ ОрганизацииСПрефиксами Цикл
		Если ЗначениеЗаполнено(ПрефиксОрганизации.ПрефиксОрганизацииРедакции20) Тогда
			ПрефиксОрганизации.ПрефиксРедакции20 = ПрефиксОрганизации.ПрефиксОрганизацииРедакции20;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПрефиксОрганизации.ПодразделениеОрганизации)
			И ЗначениеЗаполнено(ПрефиксОрганизации.ПрефиксПодразделенияРедакции20) Тогда
			ПрефиксОрганизации.ПрефиксРедакции20 = ПрефиксОрганизации.ПрефиксРедакции20 + ПрефиксОрганизации.ПрефиксПодразделенияРедакции20;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОрганизацииСПрефиксами;
	
КонецФункции

Процедура ПараметрыРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	ПоказатьПомощникПереходаСРедакции20 = Ложь;
	Если ПравоДоступа("Использование", Метаданные.Обработки.ПомощникПереходаСРедакции20) Тогда
		ПараметрыПомощника = ОбновлениеСПредыдущейРедакции.ПараметрыПереходаСРедакции20();
		ПоказатьПомощникПереходаСРедакции20 = ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции20;
	КонецЕсли;
	
	Параметры.Вставить("ПоказатьПомощникПереходаСРедакции20", ПоказатьПомощникПереходаСРедакции20);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПрефиксыПослеПереходаС20Изменены()
	
	Если СокрЛП(Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить())
		<> СокрЛП(Константы.ПрефиксУзлаРаспределеннойИнформационнойБазыБП20.Получить()) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТаблицаОрганизацийСПрефиксами = ПолучитьТаблицуОрганизацийСПрефиксами();
	ТаблицаОрганизацийСПрефиксами.Свернуть("ПрефиксРедакции20, ПрефиксРедакции30", "");
	Для Каждого ПараПрефиксов Из ТаблицаОрганизацийСПрефиксами Цикл
		
		Если ПараПрефиксов.ПрефиксРедакции20 <> ПараПрефиксов.ПрефиксРедакции30 Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ВыполнитьСохранениеНумерации()
	
	ПрефиксИБ20 = Константы.ПрефиксУзлаРаспределеннойИнформационнойБазыБП20.Получить();
	
	ДокументыИсключения = ПолучитьДокументыИсключения();
	
	ТаблицаОрганизацийСПрефиксами = ПолучитьТаблицуОрганизацийСПрефиксами();
	Для Каждого МетаданныеДокумента ИЗ Метаданные.Документы Цикл
				
		Если ДокументыИсключения.Найти(МетаданныеДокумента.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаПрефикса ИЗ ТаблицаОрганизацийСПрефиксами Цикл 
			
			МассивПользовательскихПрефиксов = ПолучитьМассивПользовательскихПрефиксовДокумента(МетаданныеДокумента.Имя);
			
			Для Каждого Префиксы ИЗ МассивПользовательскихПрефиксов Цикл
				ВыполнитьСохранениеНумерацииДляДокумента(МетаданныеДокумента, СтрокаПрефикса.Организация, СтрокаПрефикса.ПодразделениеОрганизации, 
															ПрефиксИБ20, Префиксы.Префикс20, Префиксы.Префикс30);															
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура ВыполнитьСохранениеНумерацииДляДокумента(МетаданныеДокумента, Организация, Подразделение, ПрефиксИБ20, ПользовательскийПрефикс20, ПользовательскийПрефикс30)
	
	ПрефиксРедакции20 = ПолучитьПолныйПрефиксРедакции20(ПрефиксИБ20, Организация, Подразделение, ПользовательскийПрефикс20);
	ПрефиксРедакции30 = ПолучитьПолныйПрефиксРедакции30(Организация, Подразделение, ПользовательскийПрефикс30);
	
	СписокПодразделений = ПолучитьСписокПодразделенийПоПрефиксу(Организация, Подразделение);
	
	СоздатьДокументыСохраненияНумерацииДляВидаДокумента(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции20, ПрефиксРедакции30);

КонецПроцедуры

Функция ПолучитьСписокПодразделенийПоПрефиксу(Организация, Подразделение)
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ПрефиксПодразделения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подразделение, "Префикс");
	Иначе
		ПрефиксПодразделения = "";
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("ПрефиксПодразделения", ПрефиксПодразделения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка КАК Подразделение
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация
	|	И ПодразделенияОрганизаций.Префикс = &ПрефиксПодразделения";
	
	СписокПодразделений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Подразделение");
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		СписокПодразделений.Добавить(Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	КонецЕсли;
	
	Возврат СписокПодразделений;
	
КонецФункции

Процедура СоздатьДокументыСохраненияНумерацииДляВидаДокумента(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции20, ПрефиксРедакции30)
	
	Если МетаданныеДокумента.Автонумерация
		И МетаданныеДокумента.ДлинаНомера > 0 Тогда
		
		Если МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Год Тогда
			
			ДатаПериода = ТекущаяДатаСеанса();
			СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции20, ПрефиксРедакции30, НачалоГода(ДатаПериода), КонецГода(ДатаПериода));
			
			ДатаПериода = НачалоГода(ТекущаяДатаСеанса())-1;
			СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции20, ПрефиксРедакции30, НачалоГода(ДатаПериода), КонецГода(ДатаПериода));
			
		ИначеЕсли МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Непериодический Тогда
			
			СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции20, ПрефиксРедакции30);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
 
Процедура СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции20, ПрефиксРедакции30, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено)
	
	НомерДокументаСПрефиксом20 = ПолучитьМаксимальныйНомерДокументаСПрефиксом(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции20, НачалоПериода, ОкончаниеПериода);
	
	Если НомерДокументаСПрефиксом20 <> Неопределено Тогда
		
		НомерДокументаСПрефиксом30 = ПолучитьМаксимальныйНомерДокументаСПрефиксом(МетаданныеДокумента, Организация, СписокПодразделений, ПрефиксРедакции30, НачалоПериода, ОкончаниеПериода);
		Если НомерДокументаСПрефиксом30 <> Неопределено
			И НомерДокументаСПрефиксом30 >= НомерДокументаСПрефиксом20 Тогда
			Возврат;
		КонецЕсли;
		
		НомерРедакции30 = ПолучитьНомер30(МетаданныеДокумента, НомерДокументаСПрефиксом20, ПрефиксРедакции20, ПрефиксРедакции30);
		
		Если НомерРедакции30 <> Неопределено Тогда
			СлужебныйДокумент = Документы[МетаданныеДокумента.Имя].СоздатьДокумент();
			
			СвойстваЗаполнения = Новый Структура;
			Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
				СвойстваЗаполнения.Вставить("Организация", Организация);
			КонецЕсли;
			
			Если МетаданныеДокумента.Реквизиты.Найти("Комментарий") <> Неопределено Тогда
				СлужебныйДокумент.Комментарий = "#Служебный документ для сохранения нумерации после обновления с редакции 2.0";
			КонецЕсли;
			СлужебныйДокумент.Номер = НомерРедакции30;
			ЗаполнитьЗначенияСвойств(СлужебныйДокумент, СвойстваЗаполнения);
			СлужебныйДокумент.Заполнить(СвойстваЗаполнения);
			СлужебныйДокумент.Дата = ?(НачалоПериода = Неопределено, НачалоГода(ТекущаяДатаСеанса()), НачалоПериода);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СлужебныйДокумент);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМаксимальныйНомерДокументаСПрефиксом(МетаданныеДокумента, Организация, СписокПодразделений, Префикс, НачалоПериода, ОкончаниеПериода)
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ШаблонНомера", Префикс + "%");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(Документ.Номер) КАК Номер
	|ИЗ
	|	Документ."+МетаданныеДокумента.Имя+" КАК Документ
	|ГДЕ
	|	Документ.Номер Подобно &ШаблонНомера";
	
	Если НачалоПериода <> Неопределено
		И ОкончаниеПериода <> Неопределено Тогда
		
		Запрос.Параметры.Вставить("ДатаНачалаПериода", НачалоПериода);
		Запрос.Параметры.Вставить("ДатаОкончаниеПериода", ОкончаниеПериода);
		
		Запрос.Текст = Запрос.Текст + "
		|	И Документ.Дата >= &ДатаНачалаПериода
		|	И Документ.Дата <= &ДатаОкончаниеПериода";
		
	КонецЕсли;
	
	Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
		
		Запрос.Параметры.Вставить("Организация", Организация);
		
		Запрос.Текст = Запрос.Текст + "
		|	И Документ.Организация = &Организация";
	КонецЕсли;
	
	Если МетаданныеДокумента.Имя = "ПеремещениеТоваров" Тогда
		
		Запрос.Параметры.Вставить("СписокПодразделений", СписокПодразделений);
		Запрос.Текст = Запрос.Текст + "
		|	И Документ.ПодразделениеОтправитель В (&СписокПодразделений)";
		
	ИначеЕсли МетаданныеДокумента.Реквизиты.Найти("ПодразделениеОрганизации") <> Неопределено Тогда
		
		Запрос.Параметры.Вставить("СписокПодразделений", СписокПодразделений);
		Запрос.Текст = Запрос.Текст + "
		|	И Документ.ПодразделениеОрганизации В (&СписокПодразделений)";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И
		Выборка.Номер <> NULL Тогда
		Возврат Выборка.Номер;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьНомер30(Документ, НомерДокументаСПрефиксом20, ПрефиксРедакции20, ПрефиксРедакции30)
	
	Если Лев(НомерДокументаСПрефиксом20, СтрДлина(ПрефиксРедакции20)) <> ПрефиксРедакции20 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НомерБезПрефикса = Сред(НомерДокументаСПрефиксом20, СтрДлина(ПрефиксРедакции20)+1);
	МаксимальнаяДлинаНомера = Документ.ДлинаНомера;
	
	ПользовательскийПрефикс = "";
	Для К = 1 По СтрДлина(НомерБезПрефикса) Цикл
		Если СтрНайти("0123456789", Сред(НомерБезПрефикса, К, 1))=0 Тогда
			ПользовательскийПрефикс = ПользовательскийПрефикс + Сред(НомерБезПрефикса, К, 1);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	НомерБезПрефикса = Сред(НомерБезПрефикса, СтрДлина(ПользовательскийПрефикс)+1);
	
	Если СтрДлина(ПрефиксРедакции30 + ПользовательскийПрефикс + НомерБезПрефикса) > МаксимальнаяДлинаНомера Тогда
		
		//удаляем лидирующие нули номера пока длина номера не будет равна максимальному номеру из конфигуратора
		Пока Лев(НомерБезПрефикса, 1) = "0"
			И СтрДлина(ПрефиксРедакции30 + ПользовательскийПрефикс + НомерБезПрефикса) > МаксимальнаяДлинаНомера Цикл
			НомерБезПрефикса = Сред(НомерБезПрефикса, 2);
		КонецЦикла;
		
	ИначеЕсли СтрДлина(ПрефиксРедакции30 + ПользовательскийПрефикс + НомерБезПрефикса) < МаксимальнаяДлинаНомера Тогда
		
		//добавляем лидирующие нули номера пока длина номера не будет равна максимальному номеру из конфигуратора
		Пока СтрДлина(ПрефиксРедакции30 + ПользовательскийПрефикс + НомерБезПрефикса) < МаксимальнаяДлинаНомера Цикл
			НомерБезПрефикса = "0" + НомерБезПрефикса;
		КонецЦикла;
		
	КонецЕсли;
	
	Если СтрДлина(ПрефиксРедакции30 + ПользовательскийПрефикс + НомерБезПрефикса) > МаксимальнаяДлинаНомера Тогда
		Возврат Неопределено;
	Иначе
		Возврат ПрефиксРедакции30 + ПользовательскийПрефикс + НомерБезПрефикса;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПолныйПрефиксРедакции20(ПрефиксИБ20, Организация, Подразделение, ПользовательскийПрефикс)
	
	ПрефиксОрганизацииРедакции20 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ПрефиксБП20");
	Если ЗначениеЗаполнено(ПрефиксОрганизацииРедакции20) Тогда
		Префикс = ПрефиксОрганизацииРедакции20;
	Иначе
		Префикс = "0";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Подразделение) 
		И БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		ПрефиксПодразделения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подразделение, "ПрефиксБП20");
		
		Если ЗначениеЗаполнено(ПрефиксПодразделения) Тогда
			Если Префикс = "0" Тогда
				Префикс = ПрефиксПодразделения + Префикс;
			Иначе
				Префикс = Префикс + ПрефиксПодразделения;
			КонецЕсли;
		Иначе
			Префикс = Префикс + "0";
		КонецЕсли;
		
	КонецЕсли;
	
	Префикс = ПользовательскийПрефикс + Префикс;
	
	Если НЕ ПустаяСтрока(ПрефиксИБ20) Тогда
		
		Префикс = ПрефиксИБ20 + Префикс;
		
	КонецЕсли;
	
	Возврат Префикс;
	
КонецФункции

Функция ПолучитьПолныйПрефиксРедакции30(Организация, Подразделение, ПользовательскийПрефикс)
	
	Возврат ПрефиксацияОбъектовБПСобытия.ПрефиксИнформационнойБазыОрганизацииПодразделения(Организация, Подразделение, ПользовательскийПрефикс);
	
КонецФункции

Функция ПолучитьДокументыИсключения()
	
	ДокументыИсключения = Новый Массив;
	ТипыПодписки = Новый Массив();
	ТипыПодписки.Добавить(Метаданные.ПодпискиНаСобытия.УстановитьПрефиксИнформационнойБазыОрганизацииПодразделенияНомеруДокумента.Источник);
	ТипыПодписки.Добавить(Метаданные.ПодпискиНаСобытия.УстановитьПрефиксИнформационнойБазыИОрганизацииНомеруДокумента.Источник);
	
	Для Каждого ТипДокумента ИЗ Метаданные.Документы Цикл
		ТипСодержитсяВПодписке = Ложь;
		Для Каждого Типы Из ТипыПодписки Цикл
			Если Типы.СодержитТип(Тип("ДокументОбъект."+ТипДокумента.Имя)) Тогда
				ТипСодержитсяВПодписке = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ТипСодержитсяВПодписке Тогда
			ДокументыИсключения.Добавить(ТипДокумента.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыИсключения;
	
КонецФункции

Функция ПолучитьМассивПользовательскихПрефиксовДокумента(ИмяДокумента)
	
	МассивПрефиксов = Новый Массив;
	
	Если ИмяДокумента = "СчетФактураВыданный" Тогда
		МассивПрефиксов.Добавить(Новый Структура("Префикс20, Префикс30", "", "0"));
		МассивПрефиксов.Добавить(Новый Структура("Префикс20, Префикс30", "И", "И"));
		МассивПрефиксов.Добавить(Новый Структура("Префикс20, Префикс30", "А", "А"));
	Иначе
		МассивПрефиксов.Добавить(Новый Структура("Префикс20, Префикс30", "", ""));
	КонецЕсли;
	
	Возврат МассивПрефиксов;
	
КонецФункции


#КонецЕсли