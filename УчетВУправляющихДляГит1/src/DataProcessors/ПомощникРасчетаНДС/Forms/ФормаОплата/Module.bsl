
#Область ОбъявлениеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Организация",   Объект.Организация);
	Параметры.Свойство("Правило",       Правило);
	Параметры.Свойство("ПериодСобытия", Объект.Период);
	Параметры.Свойство("Срок",          Срок);
	
	МожноСоздаватьДокументыУплаты = ПравоДоступа("Изменение", Метаданные.Документы.ПлатежноеПоручение);
	
	Элементы.Организация.Видимость = Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоКвартала(Объект.Период), КонецКвартала(Объект.Период), Истина);
	Заголовок = СтрШаблон(НСтр("ru = 'Отчетность по НДС, уплата 1/3 за %1'"), ПредставлениеПериода);
	Элементы.НалогКУплате.Заголовок = СтрШаблон(НСтр("ru = 'Налог к уплате за %1'"), ПредставлениеПериода);
	
	Объект.Период = НачалоКвартала(Объект.Период);
	Объект.Организация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СоставРазделов = Новый Структура("Расчет, Уплата, Сверка", Истина, Истина, Истина);
	Результат = ПолучитьПоказателиДляРасчетаНалогаНаСервере(СоставРазделов);
	
	Если Результат.Статус = "Выполнено" Тогда
		ЗагрузитьРезультат();
	Иначе
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресРезультата;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьВыполнениеЗаданияПриОткрытии", 
			ПараметрыОбработчикаОжидания.ТекущийИнтервал,
			Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Оплатить(Команда)
	
	ОповещениеУплаты = Новый ОписаниеОповещения("ОбработатьУплату", ЭтотОбъект);
	ПараметрыФормыПлатежногоДокумента = ПараметрыФормыПлатежногоДокументаПоСтроке(ИндексОчередногоПлатежа);
	ОткрытьФорму("Документ.ПлатежноеПоручение.ФормаОбъекта", ПараметрыФормыПлатежногоДокумента, ЭтаФорма,,,,ОповещениеУплаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСверку(Команда)
	
	ОповещениеВыполнениеСверки = Новый ОписаниеОповещения("ОбработатьВыполнениеСверки", ЭтотОбъект);
	ОткрытьФорму(ОписаниеДействияСверка.ИмяФормы, ОписаниеДействияСверка.ПараметрыФормы,
		 ЭтаФорма,,,,ОповещениеВыполнениеСверки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСсылкаПомощникНажатие(Элемент)
	
	ИмяФормыПлатежногоДокумента = "Обработка.ПомощникРасчетаНДС.Форма.Форма";
	
	ПараметрыФормыПомощника = ПараметрыФормыПомощника();
	
	ОповещениеУплаты = Новый ОписаниеОповещения("ОбработатьУплату", ЭтотОбъект);
	ОткрытьФорму(ИмяФормыПлатежногоДокумента, ПараметрыФормыПомощника, ЭтаФорма,,,,ОповещениеУплаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлатеж1Нажатие(Элемент)
	
	ОткрытьПлатежныйДокумент(0);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлатеж2Нажатие(Элемент)
	
	ОткрытьПлатежныйДокумент(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлатеж3Нажатие(Элемент)
	
	ОткрытьПлатежныйДокумент(2);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
		ЗагрузитьРезультат();
		Если ФормаДлительнойОперации.Открыта()
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		КонецЕсли;
	Иначе
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьВыполнениеЗадания", 
			ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПоказателиДляРасчетаНалогаНаСервере(СоставРазделов)
	
	Если Элементы.СтраницыПомощник.ТекущаяСтраница = Элементы.СтраницаРабочая Тогда
		Элементы.СтраницыПомощник.ТекущаяСтраница  = Элементы.СтраницаПустая;
	КонецЕсли;
	
	ПараметрыЗадачи = Обработки.ПомощникРасчетаНДС.НовыеПараметрыЗадачи();
	ПараметрыЗадачи.Организация     = Объект.Организация;
	ПараметрыЗадачи.ПериодСобытия   = Объект.Период;
	ПараметрыЗадачи.НачалоПериода   = НачалоКвартала(Объект.Период);
	ПараметрыЗадачи.КонецПериода    = КонецКвартала(Объект.Период);
	ПараметрыЗадачи.Правило = Правило; // для сверки
	ПараметрыЗадачи.Срок    = Срок;    // для сверки
	ПараметрыЗадачи.ЭтоЗадачаОплаты = Истина;
	ЗаполнитьЗначенияСвойств(ПараметрыЗадачи.СоставРазделов, СоставРазделов);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("Обработки.ПомощникРасчетаНДС.ПоказателиДляРасчета", 
		ПараметрыЗадачи, ПараметрыВыполнения);
		
	АдресХранилища = Результат.АдресРезультата;
	
	Если Результат.Статус = "Выполнено" Тогда
		ЗагрузитьРезультат();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультат()
	
	ПомощникРасчетаНДС.ЗагрузитьРезультат(ЭтотОбъект, АдресХранилища);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыполнениеСверки(РезультатЗакрытия = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	СоставРазделов = Новый Структура("Расчет, Уплата, Сверка", Ложь, Ложь, Истина);
	Результат = ПолучитьПоказателиДляРасчетаНалогаНаСервере(СоставРазделов);
	
	Если Результат.Статус = "Выполнено" Тогда
		ЗагрузитьРезультат();
	Иначе
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресРезультата;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьВыполнениеЗадания",
			ПараметрыОбработчикаОжидания.ТекущийИнтервал,
			Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗаданияПриОткрытии()
	
	Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
		ЗагрузитьРезультат();
	Иначе
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьВыполнениеЗаданияПриОткрытии", 
			ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПлатежныйДокумент(Идентификатор)
	
	ОповещениеУплаты = Новый ОписаниеОповещения("ОбработатьУплату", ЭтотОбъект);
	
	Если ТипЗнч(Платежи[Идентификатор].ПлатежныеПоручения) = Тип("Массив")
		И Платежи[Идентификатор].ПлатежныеПоручения.Количество() > 1 Тогда
		
		СписокДокументов = Новый СписокЗначений;
		СписокДокументов.ЗагрузитьЗначения(Платежи[Идентификатор].ПлатежныеПоручения);
		СписокВыделения = Новый Структура("Ссылка", СписокДокументов);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Организация", Объект.Организация);
		
		ПервыйДокумент = Платежи[Идентификатор].ПлатежныеПоручения[0];
		
		ИмяФормыСписка = "Документ.ПлатежноеПоручение.ФормаСписка";
		ОткрытьФорму(ИмяФормыСписка, Новый Структура("Отбор, ТекущаяСтрока, СписокВыделения",
			Отбор, ПервыйДокумент, СписокВыделения), ЭтотОбъект, Истина,,,ОповещениеУплаты);
		
	Иначе
		ИмяФормыПлатежногоДокумента = "Документ.ПлатежноеПоручение.ФормаОбъекта";
		ПараметрыФормыПлатежногоДокумента = ПараметрыФормыПлатежногоДокументаПоСтроке(Идентификатор);
		
		ОткрытьФорму(ИмяФормыПлатежногоДокумента, ПараметрыФормыПлатежногоДокумента, ЭтаФорма,,,,ОповещениеУплаты);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыФормыПлатежногоДокументаПоСтроке(Идентификатор)
	
	Возврат ПомощникРасчетаНДС.ПараметрыФормыПлатежногоДокументаПоСтроке(ЭтотОбъект, Идентификатор);
	
КонецФункции

&НаСервере
Функция ПараметрыФормыПомощника()
	
	ПараметрыФормыПомощника =  Новый Структура();
	ПараметрыФормыПомощника.Вставить("ПериодСобытия",    Объект.Период);
	ПараметрыФормыПомощника.Вставить("Организация",      Объект.Организация);
	ПараметрыФормыПомощника.Вставить("КонтекстныйВызов", Истина);
	
	Возврат ПараметрыФормыПомощника;
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	Если Элементы.СтраницыПомощник.ТекущаяСтраница = Элементы.СтраницаПустая Тогда
		Элементы.СтраницыПомощник.ТекущаяСтраница  = Элементы.СтраницаРабочая;
	КонецЕсли;

	ПомощникРасчетаНДС.НастроитьБлокОплата(ЭтотОбъект);
	
	Если СверкаВыполнена Тогда
		Элементы.ВыполнитьСверкуСсылка.Заголовок = ЗапросНаСверкуНаименование;
		Элементы.ВыполнитьСверкуСсылка.Видимость = Истина;
		Элементы.ВыполнитьСверку.Видимость       = Ложь;
	Иначе
		Элементы.ВыполнитьСверкуСсылка.Видимость = Ложь;
		Элементы.ВыполнитьСверку.Видимость       = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУплату(РезультатЗакрытия = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	СоставРазделов = Новый Структура("Расчет, Уплата, Сверка", Ложь, Истина, Ложь);
	Результат = ПолучитьПоказателиДляРасчетаНалогаНаСервере(СоставРазделов);
	
	Если Результат.Статус = "Выполнено" Тогда
		ЗагрузитьРезультат();
	Иначе
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресРезультата;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьВыполнениеЗадания",
			ПараметрыОбработчикаОжидания.ТекущийИнтервал,
			Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

