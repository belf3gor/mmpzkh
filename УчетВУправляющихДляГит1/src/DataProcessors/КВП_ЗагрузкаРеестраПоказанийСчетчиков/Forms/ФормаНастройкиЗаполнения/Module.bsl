
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область ПрочиеПроцедурыИФункции

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Настр_ИмяФайлаЗагрузки = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Заполняет настройки загрузки файла.
Процедура ПолучитьДанные(ТаблицаНастроек)
	
	НастройкиЗагрузки = РегистрыСведений.КВП_НастройкиЗагрузкиИзАС.СоздатьНаборЗаписей();
	НастройкиЗагрузки.Отбор.Организация.Установить(Настр_Организация);
	НастройкиЗагрузки.Отбор.ВидОперации.Установить(Перечисления.КВП_ВидыНастроекЗагрузкиИзАС.ЗагрузкаИзСистемСбораПоказанийПриборовУчета);
	НастройкиЗагрузки.Прочитать();
	
	Если НастройкиЗагрузки.Количество() > 0 Тогда
		Настр_ФорматФайлаЗагрузки      = НастройкиЗагрузки[0].ФорматФайлаЗагрузки;
		Настр_ИмяФайлаЗагрузки         = НастройкиЗагрузки[0].ИмяФайлаЗагрузки;
	КонецЕсли;
	
	Настр_ТаблицаНастроекПриЗагрузке.Загрузить(ТаблицаНастроек);
	
КонецПроцедуры  //ПолучитьДанные()

&НаСервере
// Сохраняет настройки на сервере.
Функция СохранитьНастройкиНаСервере()
	
	НастройкиЗагрузки = РегистрыСведений.КВП_НастройкиЗагрузкиИзАС.СоздатьНаборЗаписей();
	НастройкиЗагрузки.Отбор.Организация.Установить(Настр_Организация);
	НастройкиЗагрузки.Отбор.ВидОперации.Установить(Перечисления.КВП_ВидыНастроекЗагрузкиИзАС.ЗагрузкаИзСистемСбораПоказанийПриборовУчета);
	
	НоваяЗапись = НастройкиЗагрузки.Добавить();
	НоваяЗапись.Организация         = Настр_Организация;
	НоваяЗапись.ВидОперации         = Перечисления.КВП_ВидыНастроекЗагрузкиИзАС.ЗагрузкаИзСистемСбораПоказанийПриборовУчета;
	НоваяЗапись.ФорматФайлаЗагрузки = Настр_ФорматФайлаЗагрузки;
	НоваяЗапись.ИмяФайлаЗагрузки    = Настр_ИмяФайлаЗагрузки;
	
	НастройкиЗагрузки.Записать();
	
	Возврат ПоместитьВоВременноеХранилище(Настр_ТаблицаНастроекПриЗагрузке.Выгрузить(), Новый УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДанныеОбъекта") Тогда
		
		Настр_Организация = Параметры.ДанныеОбъекта.Организация;
		ПолучитьДанные(Параметры.ДанныеОбъекта.НастройкаЗаполнения.Выгрузить());
		
	КонецЕсли;
	
	Если Параметры.Свойство("РасширениеПодключено") Тогда
		Элементы.Настр_ИмяФайлаЗагрузки.Видимость = Параметры.РасширениеПодключено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "Настр_ФорматФайлаЗагрузки".
Процедура Настр_ФорматФайлаЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ВидОперации", ПредопределенноеЗначение(
											"Перечисление.КВП_ВидыНастроекЗагрузкиИзАС.ЗагрузкаИзСистемСбораПоказанийПриборовУчета"));
	
	ФормаВыбораФормата = ПолучитьФорму( "Справочник.КВП_НастройкиЗагрузкиВыгрузки.ФормаВыбора",
										Новый Структура("Отбор, ТекущаяСтрока", СтруктураОтбора, Настр_ФорматФайлаЗагрузки),
										ЭтаФорма);
	ФормаВыбораФормата.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьРезультатВыбораНастройкиЗагрузки", ЭтаФорма);
	ФормаВыбораФормата.Открыть();
	
КонецПроцедуры // Настр_ФорматФайлаЗагрузкиНачалоВыбора()

&НаКлиенте
// Обработчик результата закрытия формы выбора справочника "Настройки загрузки",
// вызванного в процедуре "Настр_ФорматФайлаЗагрузкиНачалоВыбора()".
Процедура ОбработатьРезультатВыбораНастройкиЗагрузки(ВыбранноеЗначение, ДопПараметры) Экспорт
	
	Если НЕ ВыбранноеЗначение = Неопределено
	   И НЕ ВыбранноеЗначение.Пустая() Тогда
		Настр_ФорматФайлаЗагрузки = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры // ОбработатьРезультатВыбораНастройкиЗагрузки()

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "Настр_ИмяФайлаЗагрузки".
Процедура Настр_ИмяФайлаЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Настр_ФорматФайлаЗагрузки.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбран формат файла загрузки.");
		Возврат;
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ФорматФайла = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Настр_ФорматФайлаЗагрузки, "ФорматФайла");
	
	Если ФорматФайла = "TXT" Тогда
		ДиалогВыбораФайла.Фильтр		=	"Файл данных (*.txt)|*.txt";
		ДиалогВыбораФайла.Расширение	=	"txt";
	ИначеЕсли ФорматФайла = "CSV" Тогда
		ДиалогВыбораФайла.Фильтр		=	"Файл данных (*.csv)|*.csv";
		ДиалогВыбораФайла.Расширение	=	"csv";
	ИначеЕсли ФорматФайла = "XLS" Тогда
		ДиалогВыбораФайла.Фильтр		=	"Файл данных (*.xls)|*.xls|(*.xlsx)|*.xlsx";
		ДиалогВыбораФайла.Расширение	=	"xls";
	ИначеЕсли ФорматФайла = "DBF" Тогда
		ДиалогВыбораФайла.Фильтр		=	"Файл данных (*.dbf)|*.dbf";
		ДиалогВыбораФайла.Расширение	=	"dbf";
	ИначеЕсли ФорматФайла = "XML" Тогда
		ДиалогВыбораФайла.Фильтр		=	"Файл данных (*.xml)|*.xml";
		ДиалогВыбораФайла.Расширение	=	"xml";
	КонецЕсли;
		
	ДиалогВыбораФайла.Заголовок						=	"Выберите файл";
	ДиалогВыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогВыбораФайла.ИндексФильтра					=	0;
	ДиалогВыбораФайла.ПолноеИмяФайла				=	Настр_ИмяФайлаЗагрузки;
	
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "СохранитьНастройки".
Процедура СохранитьНастройки(Команда)
	
	АдресХранилища = СохранитьНастройкиНаСервере();
	
	Оповестить("НастройкиЗагрузки_Обновить", АдресХранилища);
	
	Закрыть(Истина);
	
КонецПроцедуры

#КонецОбласти