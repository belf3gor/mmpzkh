
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ВариантЗагрузкиЭД") Тогда
		Объект.ВариантЗагрузкиЭД = Параметры.ВариантЗагрузкиЭД;
	Иначе
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru='Обработка не предназначена для непосредственного использования.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстПредупреждения);
	КонецЕсли;
	
	Объект.ГлубинаПоиска = Параметры.ГлубинаПоиска;
	Контрагент           = Параметры.Контрагент;
	
	Если Объект.ВариантЗагрузкиЭД = Перечисления.ВариантыЗагрузкиЭД.СчетНаОплату Тогда
		Заголовок = Нстр("ru='Загрузка реквизитов из счета на оплату'");
		ИмяСтраницыДанных = "ГруппаДанныхДокументов";
	ИначеЕсли Объект.ВариантЗагрузкиЭД = Перечисления.ВариантыЗагрузкиЭД.РеализацияТоваровИУслуг Тогда
		Заголовок = Нстр("ru='Загрузка реквизитов из реализации товаров и услуг'");
		ИмяСтраницыДанных = "ГруппаДанныхДокументов";
	Иначе
		Заголовок = Нстр("ru='Заполнение реквизитов контрагента из электронной почты'");
		ИмяСтраницыДанных = "ГруппаДанныхКарточек";
		Элементы.Заполнить.Заголовок = НСтр("ru='Заполнить'");
	КонецЕсли;
	
	УчетнаяЗапись = ЗагрузкаПочтовыхСообщений.УчетнаяЗаписьПользователяДляЗагрузкиСообщений();
	
	Параметры.Свойство("ИдентификаторФормыВладельца", ИдентификаторФормыВладельца);
	
	Элементы.ГлубинаПоиска.Видимость = УправлениеВидимостьюГлубинаПоиска(УчетнаяЗапись);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если НЕ ЗначениеЗаполнено(Настройки.Получить("УчетнаяЗапись")) Тогда
		Настройки.Вставить("УчетнаяЗапись", ЗагрузкаПочтовыхСообщений.УчетнаяЗаписьПользователяДляЗагрузкиСообщений());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) Тогда
		Элементы.ГлубинаПоиска.Видимость = УправлениеВидимостьюГлубинаПоиска(УчетнаяЗапись);
		ПараметрыОбработчикаОжидания = ИнициализироватьПараметрыОбработчикаОжидания();
		ПрочитатьПисьмаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) И ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ПрочитатьПисьма();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) Тогда
		
		КлючеваяОперация = "";
		Если Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.СчетНаОплату") Тогда
			КлючеваяОперация = "ЗагрузкаСчетаНаОплатуИзЭлектроннойПочты";
		ИначеЕсли Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.РеализацияТоваровИУслуг") Тогда
			КлючеваяОперация = "ЗагрузкаРеализацииТоваровИУслугИзЭлектроннойПочты";
		ИначеЕсли Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.Карточка") Тогда
			КлючеваяОперация = "ЗагрузкаКарточкиКонтрагентаИзЭлектроннойПочты";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КлючеваяОперация) Тогда
			ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
		КонецЕсли;
		
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗагрузкиДанных", 1, Истина);
	Иначе
		ТекущаяСтраница = ИмяСтраницыДанных;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы И ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) Тогда
		
		ЗагрузкаДанныхОтменаНаСервере(ИдентификаторФоновогоЗадания);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетнаяЗаписьПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		УправлениеФормой(ЭтотОбъект, Истина);
		ПрочитатьПисьма();
	Иначе
		Объект.ДанныеКарточек.Очистить();
		Объект.ДанныеЭлектронныхДокументов.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГлубинаПоискаПриИзменении(Элемент)
	
	ПрочитатьПисьма();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДанныеКарточек

&НаКлиенте
Процедура ДанныеКарточекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураРеквизитов = Элемент.ТекущиеДанные.СтруктураРеквизитов;
	ОбработатьВыборЭлектронногоДокумента(СтруктураРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКарточекПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКарточекПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДанныеЭлектронныхДокументов

&НаКлиенте
Процедура ДанныеЭлектронныхДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "ДанныеЭлектронныхДокументовДокумент" Тогда
		ПоказатьТабличныйДокумент();
		Возврат;
	КонецЕсли;
	
	СтруктураРеквизитов = Элемент.ТекущиеДанные.СтруктураРеквизитов;
	ОбработатьВыборЭлектронногоДокумента(СтруктураРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеЭлектронныхДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеЭлектронныхДокументовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
	Если ТипЗнч(ТекущийЭлемент) = Тип("ТаблицаФормы") Тогда
		Если ТекущийЭлемент.Имя = "ДанныеКарточек" Тогда
			СтруктураРеквизитов = Элементы.ДанныеКарточек.ТекущиеДанные.СтруктураРеквизитов;
			ОбработатьВыборЭлектронногоДокумента(СтруктураРеквизитов);
		ИначеЕсли ТекущийЭлемент.Имя = "ДанныеЭлектронныхДокументов" Тогда
			СтруктураРеквизитов = Элементы.ДанныеЭлектронныхДокументов.ТекущиеДанные.СтруктураРеквизитов;
			ОбработатьВыборЭлектронногоДокумента(СтруктураРеквизитов);
		КонецЕсли;
	Иначе
		СообщениеПользователю = НСтр("ru='Выберите документ для загрузки'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаДанныхОтмена(Команда)
	
	ЗагрузкаДанныхОтменаНаСервере(ИдентификаторФоновогоЗадания);
	ТекущаяСтраница = ИмяСтраницыДанных;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПрочитатьПисьма()
	
	ПараметрыОбработчикаОжидания = ИнициализироватьПараметрыОбработчикаОжидания();
	
	Если НЕ УчетнаяЗаписьНастроенаНаПолучениеПочты(УчетнаяЗапись) Тогда
		ТекстСообщения = НСтр("ru = 'Для работы требуется настройка учетной записи электронной почты на получение сообщений.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
			УчетнаяЗапись,
			"ИспользоватьДляПолучения");
		Возврат;
	КонецЕсли;
	
	ПрочитатьПисьмаНаСервере();
	
	Если ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗагрузкиДанных", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПисьмаНаСервере()
	
	Если НЕ УчетнаяЗаписьНастроенаНаПолучениеПочты(УчетнаяЗапись) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.Карточка") Тогда
		ПрочитатьПисьмаСКарточками();
	Иначе
		ПрочитатьПисьмаСДокументами();
	КонецЕсли;
	
	ТекущаяСтраница = "ГруппаВыполняетсяЗагрузкаДанных";
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПрочитанныеДанные()
	
	ПрочитанныеДанные = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(ПрочитанныеДанные) = Тип("ТаблицаЗначений") И ПрочитанныеДанные.Количество() > 0 Тогда
		
		ИдентификаторФоновогоЗадания = Неопределено;
		
		Если Объект.ВариантЗагрузкиЭД = Перечисления.ВариантыЗагрузкиЭД.Карточка Тогда
			Для Каждого ЭлементДанных Из ПрочитанныеДанные Цикл
				СтрокаДанныхКарточки = Объект.ДанныеКарточек.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДанныхКарточки, ЭлементДанных.ДанныеКарточки);
				СтрокаДанныхКарточки.СтруктураРеквизитов = ЭлементДанных.ДанныеКарточки;
			КонецЦикла;
			ПроверитьДублиИННКонтрагентов(Объект.ДанныеКарточек, Контрагент);
			
		ИначеЕсли Объект.ВариантЗагрузкиЭД = Перечисления.ВариантыЗагрузкиЭД.СчетНаОплату Тогда
			Для Каждого ЭлементДанных Из ПрочитанныеДанные Цикл
				СтрокаДанных = Объект.ДанныеЭлектронныхДокументов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДанных, ЭлементДанных);
				ПредставлениеДокумента = НСтр("ru='Счет %1 от %2'");
				ПредставлениеДокумента = СтрШаблон(ПредставлениеДокумента,
					ЭлементДанных.НомерСчета,
					Формат(ЭлементДанных.ДатаСчета, "ДЛФ=D"));
				СтрокаДанных.Документ = ПредставлениеДокумента;
				СтрокаДанных.ТабличныйДокумент = ПоместитьВоВременноеХранилище(ЭлементДанных.ТабличныйДокумент,
					УникальныйИдентификатор);
				СтрокаДанных.СтруктураРеквизитов = ЭлементДанных.ДанныеДокумента;
			КонецЦикла;
			
		ИначеЕсли Объект.ВариантЗагрузкиЭД = Перечисления.ВариантыЗагрузкиЭД.РеализацияТоваровИУслуг Тогда
			Для Каждого ЭлементДанных Из ПрочитанныеДанные Цикл
				СтрокаДанных = Объект.ДанныеЭлектронныхДокументов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДанных, ЭлементДанных);
				СтрокаДанных.ТабличныйДокумент = ПоместитьВоВременноеХранилище(ЭлементДанных.ТабличныйДокумент,
					УникальныйИдентификатор);
				СтрокаДанных.СтруктураРеквизитов = ПоместитьВоВременноеХранилище(ЭлементДанных.ДанныеДокумента,
					УникальныйИдентификатор);
				СтрокаДанных.ФайлДанных = ПоместитьВоВременноеХранилище(ЭлементДанных.ФайлДанных,
					УникальныйИдентификатор);
				СтрокаДанных.ФайлТабличногоДокумента = ПоместитьВоВременноеХранилище(ЭлементДанных.ФайлТабличногоДокумента,
					УникальныйИдентификатор);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗагрузкиДанных()
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаданиеВыполнено(ИдентификаторФоновогоЗадания) Тогда
		ТекущаяСтраница = ИмяСтраницыДанных;
		ЗагрузитьПрочитанныеДанные();
		УправлениеФормой(ЭтотОбъект);
		
	Иначе
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьВыполнениеЗагрузкиДанных",
			ПараметрыОбработчикаОжидания.ТекущийИнтервал,
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИнициализироватьПараметрыОбработчикаОжидания()
	
	Возврат Новый Структура("МинимальныйИнтервал,МаксимальныйИнтервал,ТекущийИнтервал,КоэффициентУвеличенияИнтервала",
		1, 15, 1, 1.4);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборЭлектронногоДокумента(СтруктураРеквизитовЭД)
	
	ЕстьОшибки = Ложь;
	
	Если Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.Карточка") Тогда
		Закрыть(СтруктураРеквизитовЭД);
	ИначеЕсли Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.СчетНаОплату") Тогда
		ПодготовитьРеквизитыСчета(СтруктураРеквизитовЭД, ЕстьОшибки);
		Если НЕ ЕстьОшибки Тогда
			Закрыть(СтруктураРеквизитовЭД);
		КонецЕсли;
	ИначеЕсли Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.РеализацияТоваровИУслуг") Тогда
		
		ТекущиеДанные = Элементы.ДанныеЭлектронныхДокументов.ТекущиеДанные;
		Если ЗначениеЗаполнено(ТекущиеДанные.ТекстОшибки) Тогда
			Сообщить(ТекущиеДанные.ТекстОшибки);
			Возврат;
		КонецЕсли;
		ИдентификаторСтроки = Элементы.ДанныеЭлектронныхДокументов.ТекущаяСтрока;
		СтруктураЭД = ПодготовитьСтруктуруЭД(ИдентификаторСтроки);
		Закрыть(СтруктураЭД);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьСтруктуруЭД(ИдентификаторСтроки)
	
	ТекущиеДанные = Объект.ДанныеЭлектронныхДокументов.НайтиПоИдентификатору(ИдентификаторСтроки);
	ДанныеДокумента = ПолучитьИзВременногоХранилища(ТекущиеДанные.СтруктураРеквизитов);
	ИдентификаторФормы = ?(ЗначениеЗаполнено(ИдентификаторФормыВладельца), ИдентификаторФормыВладельца, УникальныйИдентификатор);
	СтруктураЭД = ЭлектронноеВзаимодействиеБП.ПолучитьСтруктуруЭД(ДанныеДокумента, ИдентификаторФормы, ТекущиеДанные.ФайлДанных, ТекущиеДанные.Наименование);
	
	// ищем данные счета-фактуры
	Отбор = Новый Структура("УИД", ТекущиеДанные.СчетФактураУИД);
	НайденныеСтроки = Объект.ДанныеЭлектронныхДокументов.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() <> 0 Тогда
		
		ДанныеСФ = НайденныеСтроки[0].СтруктураРеквизитов;
		СтруктураДанныхСФ = ПолучитьИзВременногоХранилища(ДанныеСФ);
		Если ТипЗнч(СтруктураДанныхСФ) = Тип("Структура") Тогда
			
			СтруктураЭД.Вставить("ДанныеСФ", ПоместитьВоВременноеХранилище(СтруктураДанныхСФ, ИдентификаторФормы));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекущиеДанные.НомерСчФ) Тогда
		
		СтруктураЭД.Вставить("НомерСФ" , ТекущиеДанные.НомерСчФ);
		СтруктураЭД.Вставить("ДатаСФ" , ТекущиеДанные.ДатаСчФ);
		
	КонецЕсли;
	
	Возврат СтруктураЭД;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьТабличныйДокумент()
		
	ТекущиеДанные = Элементы.ДанныеЭлектронныхДокументов.ТекущиеДанные;	
	Если ТекущиеДанные.РасширениеФайла = "xlsx" Тогда
				
		Если ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
			
			ИмяВременногоФайла = ТекущиеДанные.Документ + "." + ТекущиеДанные.РасширениеФайла;
			ПолучитьФайл(ТекущиеДанные.ФайлТабличногоДокумента, ИмяВременногоФайла, Истина);			
			
		Иначе
			
			#Если Не ВебКлиент Тогда
			
				ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ТекущиеДанные.РасширениеФайла);
				ПолучитьФайл(ТекущиеДанные.ФайлТабличногоДокумента, ИмяВременногоФайла, Ложь);							
				Если ТекущиеДанные.РасширениеФайла = "xlsx" Тогда
					
					ЗапуститьПриложение(ИмяВременногоФайла);
					
				КонецЕсли;
			
			#КонецЕсли
			
		КонецЕсли;
				
	Иначе
	
		ТабличныйДокумент = ПолучитьИзВременногоХранилища(ТекущиеДанные.ТабличныйДокумент);
		ТабличныйДокумент.Защита = Истина;
		ТабличныйДокумент.Показать(ТекущиеДанные.Документ);
	
	КонецЕсли;
	
КонецПроцедуры

#Область ЗагрузкаКарточки

&НаСервере
Процедура ПрочитатьПисьмаСКарточками()
	
	Объект.ДанныеКарточек.Очистить();
	
	ИмяЗадания = НСтр("ru = 'Чтение карточек контрагентов'");
	
	НастройкиЧтенияПочты = Новый Структура;
	НастройкиЧтенияПочты.Вставить("ГлубинаПоиска", Объект.ГлубинаПоиска);
	НастройкиЧтенияПочты.Вставить("УчетнаяЗапись", УчетнаяЗапись);
	
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(Новый УникальныйИдентификатор,
					"Обработки.ПрямойОбменЭД.ПрочитатьКарточки",
					НастройкиЧтенияПочты,
					ИмяЗадания);
	
	ИдентификаторФоновогоЗадания = Результат.ИдентификаторЗадания;
	АдресРезультата = Результат.АдресХранилища;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ТекущаяСтраница = ИмяСтраницыДанных;
		ЗагрузитьПрочитанныеДанные();
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьДублиИННКонтрагентов(ДанныеКарточек, Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИННКонтрагентов", ОбщегоНазначения.ВыгрузитьКолонку(ДанныеКарточек, "ИНН", Истина));
	Запрос.УстановитьПараметр("Контрагент"     , Контрагент);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Контрагенты.ИНН КАК ИННКонтрагентаВБазе
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН В(&ИННКонтрагентов)
	|	И НЕ Контрагенты.Ссылка = &Контрагент";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ДублиКонтрагентов = РезультатЗапроса.Выгрузить();
	
	Отбор = Новый Структура;
	
	Для Каждого ДубльКонтрагента Из ДублиКонтрагентов Цикл
		Отбор.Вставить("ИНН", ДубльКонтрагента.ИННКонтрагентаВБазе);
		КарточкиКонтрагентовСДублемПоИНН = ДанныеКарточек.НайтиСтроки(Отбор);
		Для Каждого КарточкаКонтрагентаСДублемПоИНН Из КарточкиКонтрагентовСДублемПоИНН Цикл
			КарточкаКонтрагентаСДублемПоИНН.ЕстьДубльПоИНН = Истина;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаДокументов

&НаСервере
Процедура ПрочитатьПисьмаСДокументами()
	
	Объект.ДанныеЭлектронныхДокументов.Очистить();
	
	ИмяЗадания = НСтр("ru='Чтение электронных документов'");
	
	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("Показывать", Истина);
	Элементы.ДанныеЭлектронныхДокументов.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	
	НастройкиЧтенияПочты = Новый Структура;
	НастройкиЧтенияПочты.Вставить("ГлубинаПоиска"          , Объект.ГлубинаПоиска);
	НастройкиЧтенияПочты.Вставить("УчетнаяЗапись"          , УчетнаяЗапись);
	НастройкиЧтенияПочты.Вставить("ВариантзагрузкиЭД"      , Объект.ВариантЗагрузкиЭД);
	НастройкиЧтенияПочты.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(Новый УникальныйИдентификатор,
					"Обработки.ПрямойОбменЭД.ПрочитатьДокументы",
					НастройкиЧтенияПочты,
					ИмяЗадания);
	
	ИдентификаторФоновогоЗадания = Результат.ИдентификаторЗадания;
	АдресРезультата = Результат.АдресХранилища;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ТекущаяСтраница = ИмяСтраницыДанных;
		ЗагрузитьПрочитанныеДанные();
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПодготовитьРеквизитыСчета(СтруктураРеквизитов, ЕстьОшибки)
	
	Обработки.ПрямойОбменЭД.ДополнитьСтруктуруРеквизитовСчета(СтруктураРеквизитов, ЕстьОшибки);
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция УчетнаяЗаписьНастроенаНаПолучениеПочты(Знач УчетнаяЗапись)
	
	Возврат ЗначениеЗаполнено(УчетнаяЗапись) И УчетнаяЗапись.ПолучитьОбъект() <> Неопределено 
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "ИспользоватьДляПолучения");
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(Знач ИдентификаторФоновогоЗадания)
	
	Возврат Обработки.ПрямойОбменЭД.ЗаданиеВыполнено(ИдентификаторФоновогоЗадания);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗагрузкаДанныхОтменаНаСервере(Знач ИдентификаторФоновогоЗадания)
	
	Если ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторФоновогоЗадания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма, ПроверятьВидимостьОтборов = Ложь)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
		
	ЭтоГруппаДанных = СтрНайти(Форма.ТекущаяСтраница, "ГруппаВыполняетсяЗагрузкаДанных") = 0;
	Элементы.ГруппаДанные.Видимость						 = ЭтоГруппаДанных;
	Элементы.ГруппаВыполняетсяЗагрузкаДанных.Видимость	 = Не ЭтоГруппаДанных;
	Если ЭтоГруппаДанных Тогда
		Элементы.ГруппаДанныхКарточек.Видимость		 = Ложь;
		Элементы.ГруппаДанныхДокументов.Видимость	 = Ложь;
		Элементы[Форма.ИмяСтраницыДанных].Видимость	 = Истина;
	КонецЕсли;
	
	Если Объект.ВариантЗагрузкиЭД = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.Карточка") Тогда
		ИмяТабличнойЧасти = "ДанныеКарточек";
	Иначе
		ИмяТабличнойЧасти = "ДанныеЭлектронныхДокументов";
	КонецЕсли;
	
	Если Объект[ИмяТабличнойЧасти].Количество() > 0 Тогда
		Форма.ТекущийЭлемент = Элементы[ИмяТабличнойЧасти];
	КонецЕсли;
	
	Если Форма.ТекущаяСтраница = "ГруппаВыполняетсяЗагрузкаДанных" Тогда
		Элементы.ЗагрузкаДанныхОтмена.Видимость = Истина;
		Элементы.ЗагрузкаДанныхОтмена.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ЗагрузкаДанныхОтмена.Видимость = Ложь;
		Элементы.Заполнить.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	Если ПроверятьВидимостьОтборов Тогда
		Элементы.ГлубинаПоиска.Видимость = УправлениеВидимостьюГлубинаПоиска(Форма.УчетнаяЗапись);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УправлениеВидимостьюГлубинаПоиска(УчетнаяЗапись)
	
	Результат = Ложь;
	
	Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ПочтовыйПротокол = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "ПротоколВходящейПочты");
		Результат = ВРег(ПочтовыйПротокол) = "IMAP";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

