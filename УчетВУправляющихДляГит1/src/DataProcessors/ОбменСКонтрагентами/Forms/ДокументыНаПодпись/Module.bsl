
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВыполнятьКОНаСервере Тогда
		ДействияПриОткрытии();
	Иначе
		Доступность = Ложь;
		Обработчик = Новый ОписаниеОповещения("ПослеУстановкиРасширенияДляРаботыСКриптографией", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Для работы с ЭП необходимо установить
								|расширение работы с криптографией.'");
		ЭлектроннаяПодписьКлиент.УстановитьРасширение(Ложь, Обработчик, ТекстВопроса);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД") Тогда
		ТекстСообщения = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("РаботаСЭД");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции("ИспользоватьЭлектронныеПодписиЭД") Тогда
		ТекстСообщения = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("ПодписаниеЭД");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		
		ВидыДокументов = ОбменСКонтрагентамиСлужебный.ВидыДокументовДляОтбораВСписках();
		Элементы.ВидДокумента.СписокВыбора.ЗагрузитьЗначения(ВидыДокументов);
		ВыполнятьКОНаСервере = ЭлектронноеВзаимодействиеСлужебный.ВыполнятьКриптооперацииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		ПерезаполнитьТаблицы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСКонтрагентамиСлужебныйКлиент.ОткрытьЭДДляПросмотра(Элементы.ТаблицаДокументов.ТекущиеДанные.ЭлектронныйДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСертификатовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СертификатПодписи = Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат;
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокДокументовПоСертификату();
	ПерейтиНаСтраницу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеЭДПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)
	
	МассивЭД = Новый Массив;
	Для Каждого ТекСтрока Из ТаблицаДокументов Цикл
		Если ТекСтрока.Выбрать Тогда
			МассивЭД.Добавить(ТекСтрока.ЭлектронныйДокумент);
		КонецЕсли;
	КонецЦикла;
	
	ОбменСКонтрагентамиКлиент.СформироватьПодписатьОтправитьЭД(Неопределено, МассивЭД);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьВсе(Команда)
	
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	// По выделенному сертификату найдем все документы на подпись
	СертификатПодписи = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0].Сертификат, Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат);
	
	ПараметрыОтбора = Новый Структура("Сертификат", СертификатПодписи);
	СтрокиДокументов = СводнаяТаблица.НайтиСтроки(ПараметрыОтбора);
	
	МассивДокументовНаПодпись = Новый Массив;
	Для Каждого ЭлементТаблицы Из СтрокиДокументов Цикл
		МассивДокументовНаПодпись.Добавить(ЭлементТаблицы.ЭлектронныйДокумент);
	КонецЦикла;
	
	ОбменСКонтрагентамиКлиент.СформироватьПодписатьОтправитьЭД(Неопределено, МассивДокументовНаПодпись);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКСпискуСертификатов(Команда)
	
	ПерейтиНаСтраницу(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСпискуДокументов(Команда)
	
	СертификатПодписи = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0].Сертификат, Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат);
		
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокДокументовПоСертификату();
	ПерейтиНаСтраницу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВыделенные(Команда)
	
	МассивСтрок = Элементы.ТаблицаДокументов.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = ТаблицаДокументов.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Выбрать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуСоВсехСтрок(Команда)
	
	Для Каждого ТекДокумент Из ТаблицаДокументов Цикл
		Если ТекДокумент.Выбрать Тогда
			ТекДокумент.Выбрать = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокСертификатовИДокументов(МассивОтпечатковСертификатов)
	
	ТаблицаДоступныхСертификатов = ОбменСКонтрагентамиСлужебный.ТаблицаДоступныхДляПодписиСертификатов(
																			МассивОтпечатковСертификатов);
	ЗаполнитьСводнуюТаблицу(ТаблицаДоступныхСертификатов);
	ЗаполнитьСписокСертификатов(ТаблицаДоступныхСертификатов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСертификатов(ТаблицаДоступныхСертификатов)
	
	ТаблицаСертификатов.Очистить();
	Для Каждого ТекСтрока Из ТаблицаДоступныхСертификатов Цикл
		СтрокаТаблицы = ТаблицаСертификатов.Добавить();
		СтрокаТаблицы.Сертификат = ТекСтрока.Ссылка;
		СтрокаТаблицы.Отпечаток = ТекСтрока.Отпечаток;
		СтрокаТаблицы.ПарольПользователя = ТекСтрока.ПарольПользователя;
		ПараметрыОтбора = Новый Структура("Сертификат", ТекСтрока.Ссылка);
		СтрокаТаблицы.КоличествоДокументов = СводнаяТаблица.НайтиСтроки(ПараметрыОтбора).Количество();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСводнуюТаблицу(ТаблицаДоступныхСертификатов)
	
	ЗапросПоДокументам = Новый Запрос;
	
	СтруктураДопОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Контрагент) Тогда 
		СтруктураДопОтбора.Вставить("Контрагент", Контрагент);
		ЗапросПоДокументам.УстановитьПараметр("Контрагент", Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(ВидДокумента) Тогда
		ТипВидаДокумента = ТипЗнч(ВидДокумента);
		Если ТипВидаДокумента = Тип("ПеречислениеСсылка.ВидыЭД") Тогда
			ЗапросПоДокументам.УстановитьПараметр("ВидЭД", ВидДокумента);
			
			ТипДокумента = Неопределено;
			Если ВидДокумента = Перечисления.ВидыЭД.СчетНаОплату Тогда
				ТипДокумента = Перечисления.ТипыЭД.СчетНаОплату;
			ИначеЕсли ВидДокумента = Перечисления.ВидыЭД.ТОРГ12Продавец Тогда
				ТипДокумента = Перечисления.ТипыЭД.ТоварнаяНакладная;
			ИначеЕсли ВидДокумента = Перечисления.ВидыЭД.АктВыполненныхРабот Тогда
				ТипДокумента = Перечисления.ТипыЭД.АктВыполненныхРабот;
			КонецЕсли;
			Если ТипДокумента = Неопределено Тогда
				СтруктураДопОтбора.Вставить("ВидЭД", ВидДокумента);
			Иначе
				СтруктураДопОтбора.Вставить("ВидЭДИлиТипЭД");
				ЗапросПоДокументам.УстановитьПараметр("ТипДокумента", ТипДокумента);
			КонецЕсли;
		ИначеЕсли ТипВидаДокумента = Тип("ПеречислениеСсылка.ТипыЭД") Тогда
			СтруктураДопОтбора.Вставить("ТипДокумента", ВидДокумента);
			ЗапросПоДокументам.УстановитьПараметр("ТипДокумента", ВидДокумента);
		ИначеЕсли ОбменСКонтрагентамиСлужебный.ЭтоПрикладнойВидЭД(ВидДокумента) Тогда
			СтруктураДопОтбора.Вставить("ВидЭД", Перечисления.ВидыЭД.ПрикладнойЭД);
			ЗапросПоДокументам.УстановитьПараметр("ВидЭД", Перечисления.ВидыЭД.ПрикладнойЭД);
			СтруктураДопОтбора.Вставить("ПрикладнойВидЭД", ВидДокумента);
			ЗапросПоДокументам.УстановитьПараметр("ПрикладнойВидЭД", ВидДокумента);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(НаправлениеЭД) Тогда 
		СтруктураДопОтбора.Вставить("НаправлениеЭД", НаправлениеЭД);
		ЗапросПоДокументам.УстановитьПараметр("НаправлениеЭД", НаправлениеЭД);
	КонецЕсли;
	
	ОбменСКонтрагентами.ИнициализироватьЗапросЭлектронныхДокументовНаПодписи(ЗапросПоДокументам, Ложь, СтруктураДопОтбора);
	ЗапросПоДокументам.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	ЗапросПоДокументам.УстановитьПараметр("ПользовательНеУказан", Пользователи.СсылкаНеуказанногоПользователя());
	Таблица = ЗапросПоДокументам.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(Таблица, "СводнаяТаблица");
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьТаблицы()
	
	Оповещение = Новый ОписаниеОповещения("ПослеПолученияОтпечатковПерезаполнитьТаблицы", ЭтотОбъект);
	ЭлектроннаяПодписьКлиент.ПолучитьОтпечаткиСертификатов(Оповещение, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияОтпечатковПерезаполнитьТаблицы(Отпечатки, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Отпечатки) = Тип("Строка") Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Отпечатки);
		Возврат;
	КонецЕсли;
	
	МассивОтпечатковСертификатов = Новый Массив;
	Для Каждого КлючЗначение Из Отпечатки Цикл
		МассивОтпечатковСертификатов.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	ОтпечаткиСервера = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.МассивОтпечатковСертификатов();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивОтпечатковСертификатов, ОтпечаткиСервера, Истина);
	
	ЗаполнитьСписокСертификатовИДокументов(МассивОтпечатковСертификатов);
	ЗаполнитьСписокДокументовПоСертификату();
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьДокументыНаПодпись() 
	
	ПроверочныеДанные = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0], Элементы.ТаблицаСертификатов.ТекущиеДанные);
	
	Если ПроверочныеДанные.КоличествоДокументов = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'По данному сертификату нет документов на подпись'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиНаСтраницу(КДетализации)
	
	Если КДетализации Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаДетализации;
		Заголовок = НСтр("ru = 'Документы на подпись по сертификату'")+ ": " + СертификатПодписи;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСводки;
		Заголовок = НСтр("ru = 'Документы на подпись'");
	КонецЕсли;
	
	Элементы.Подписать.Заголовок = НСтр("ru = 'Подписать и отправить отмеченные'");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументовПоСертификату()
	
	ТаблицаДокументов.Очистить();
	ПараметрыОтбора = Новый Структура("Сертификат", СертификатПодписи);
	СтрокиДокументов = СводнаяТаблица.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаСДокументом Из СтрокиДокументов Цикл
		СтрокаТаблицы = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаСДокументом);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ДействияПриОткрытии()
	
	Отказ = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПослеПолученияОтпечатковВыполнитьДействия", ЭтотОбъект);
	ЭлектроннаяПодписьКлиент.ПолучитьОтпечаткиСертификатов(Оповещение, Истина, НЕ ВыполнятьКОНаСервере);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Служебные обработчики асинхронных диалогов

&НаКлиенте
Процедура ПослеПолученияОтпечатковВыполнитьДействия(Отпечатки, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Отпечатки) <> Тип("Соответствие") Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	МассивОтпечатковСертификатов = Новый Массив;
	Для Каждого КлючЗначение Из Отпечатки Цикл
		МассивОтпечатковСертификатов.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	ОтпечаткиСервера = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.МассивОтпечатковСертификатов();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивОтпечатковСертификатов, ОтпечаткиСервера);

	ЗаполнитьСписокСертификатовИДокументов(МассивОтпечатковСертификатов);
	
	Если ТаблицаСертификатов.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Нет сертификатов подписи для пользователя
										|или не настроены правила подписи документов.'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждения", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстПредупреждения);
	ИначеЕсли ТаблицаСертификатов.Количество() > 1 Тогда
		ПерейтиНаСтраницу(Ложь);
	Иначе
		СертификатПодписи = ТаблицаСертификатов[0].Сертификат;
		ЗаполнитьСписокДокументовПоСертификату();
		ПерейтиНаСтраницу(Истина);
		Элементы.ГруппаКнопкиНазад.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупреждения(ДополнительныеПараметры = Неопределено) Экспорт
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУстановкиРасширенияДляРаботыСКриптографией(РасширениеУстановлено, ДополнительныеПараметры) Экспорт
	
	Если РасширениеУстановлено = Истина Тогда
		Доступность = Истина;
		ВыполнятьКОНаСервере = Ложь;
		ДействияПриОткрытии();
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
