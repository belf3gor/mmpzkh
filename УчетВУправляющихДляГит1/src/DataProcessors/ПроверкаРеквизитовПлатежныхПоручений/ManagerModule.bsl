#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПроверитьНаличиеНекорректныхПлатежей(Интерактивно = Ложь) Экспорт
	
	// Проверяем по доступу
	Если Не ПравоДоступа("Просмотр", Метаданные.Обработки.ПроверкаРеквизитовПлатежныхПоручений) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверяем только в главном узле
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверяем только если есть право просмотра "ПлатежныеПоручения"
	Если Не ПравоДоступа("Просмотр", Метаданные.Документы.ПлатежноеПоручение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не Интерактивно Тогда
		НеПроверятьПриНачалеРаботы = ХранилищеОбщихНастроек.Загрузить("ПроверкаРеквизитовПлатежныхПоручений", "НеПроверятьПриНачалеРаботы");
		Если НеПроверятьПриНачалеРаботы = Истина Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Проверяем только для ИП
	Если Не ЕстьИндивидуальныеПредприниматели() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверяем только если есть хоть одно некорректное платежное поручение
	Если Не ЕстьНекорректныеПлатежи() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьТаблицуДокументов(ТаблицаДокументов) Экспорт
	
	ТаблицаДокументов.Очистить();
	
	Выборка = ВыборкаНекорректныеПлатежи();
	
	ШаблонПредставления = НСтр("ru = 'Платежное поручение %1 от %2'");
	ШаблонОписанияОшибки = НСтр("ru = 'Для фиксированных взносов указан будущий страховой период (%1). При основании ""ТП"" следует указать период, за который производится уплата налога (сбора)'");
	Пока Выборка.Следующий() Цикл
		
		ПоказателиПериода = ПлатежиВБюджетКлиентСервер.РазобратьНалоговыйПериод(Выборка.ОшибочноеЗначение);
		Если Год(Выборка.ДатаПлатежа) < ПоказателиПериода.Год Тогда // Оплатили будущий период
			СтрокаТаблицы = ТаблицаДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			
			СтрокаТаблицы.Пометка = Истина;
			СтрокаТаблицы.НомерПлатежа = УчетДенежныхСредствКлиентСервер.НомерОбъектаБезПрефикса(Выборка.НомерПлатежа);
			СтрокаТаблицы.ПравильноеЗначение = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(Выборка.ДатаПлатежа, ПоказателиПериода.Периодичность);
			СтрокаТаблицы.ПлатежноеПоручениеПредставление = СтрШаблон(ШаблонПредставления, Выборка.НомерПлатежа, Формат(Выборка.ДатаПлатежа, "ДФ=dd.MM.yyyy"));
			СтрокаТаблицы.ОписаниеОшибки = СтрШаблон(ШаблонОписанияОшибки, СтрокаТаблицы.ОшибочноеЗначение);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЗаявленияОбУточненииПлатежа(ТаблицаДокументов, ИдентификаторФормы) Экспорт
	
	КэшРеквизитовОрганизации = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из ТаблицаДокументов Цикл
		
		Если Не СтрокаТаблицы.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы.ЗаявлениеОбУточненииПлатежа =
			СтрШаблон(НСтр("ru = 'Заявление об уточнении платежа %1 от %2.rtf'"), СтрокаТаблицы.НомерПлатежа, Формат(СтрокаТаблицы.ДатаПлатежа, "ДФ=dd.MM.yyyy"));
		
		ПараметрыЗаявления = ПараметрыЗаявленияОбУточненииПлатежа(СтрокаТаблицы);
		СтрокаТаблицы.АдресФайлаЗаявления = ЗаявлениеОбУточненииПлатежа(ПараметрыЗаявления, КэшРеквизитовОрганизации, ИдентификаторФормы);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьИндивидуальныеПредприниматели()
	
	Возврат ПолучитьФункциональнуюОпцию("ВестиУчетИндивидуальногоПредпринимателя");
	
КонецФункции

Функция ЕстьНекорректныеПлатежи()
	
	Выборка = ВыборкаНекорректныеПлатежи();
	Пока Выборка.Следующий() Цикл
		
		ПоказателиПериода = ПлатежиВБюджетКлиентСервер.РазобратьНалоговыйПериод(Выборка.ОшибочноеЗначение);
		Если Год(Выборка.ДатаПлатежа) < ПоказателиПериода.Год Тогда // Оплатили будущий период
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ВыборкаНекорректныеПлатежи()
	
	МассивОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТ_Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&МассивОрганизаций)
	|	И Организации.ЮридическоеФизическоеЛицо = &ЮридическоеФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыНалоговИПлатежейВБюджет.Ссылка КАК Налог
	|ПОМЕСТИТЬ ВТ_Налоги
	|ИЗ
	|	Справочник.ВидыНалоговИПлатежейВБюджет КАК ВидыНалоговИПлатежейВБюджет
	|ГДЕ
	|	ВидыНалоговИПлатежейВБюджет.ВидНалога В(&ВидыНалогов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлатежноеПоручение.Ссылка КАК ПлатежноеПоручениеСсылка,
	|	ПлатежноеПоручение.Дата КАК ДатаПлатежа,
	|	ПлатежноеПоручение.Номер КАК НомерПлатежа,
	|	ПлатежноеПоручение.СуммаДокумента КАК СуммаПлатежа,
	|	ПлатежноеПоручение.Организация КАК Организация,
	|	ПлатежноеПоручение.ПоказательПериода КАК ОшибочноеЗначение
	|ПОМЕСТИТЬ ВТ_Платежи
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Организации КАК ВТ_Организации
	|		ПО ПлатежноеПоручение.Организация = ВТ_Организации.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Налоги КАК ВТ_Налоги
	|		ПО ПлатежноеПоручение.Налог = ВТ_Налоги.Налог
	|ГДЕ
	|	ПлатежноеПоручение.Дата >= &ДатаНачалаОбзора
	|	И ПлатежноеПоручение.Проведен
	|	И ПлатежноеПоручение.ВидОперации = &ВидОперации
	|	И ПлатежноеПоручение.СуммаДокумента > 0
	|	И ПОДСТРОКА(ПлатежноеПоручение.ПоказательПериода, 0, 5) = ""ГД.00""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Платежи.ПлатежноеПоручениеСсылка КАК ПлатежноеПоручениеСсылка,
	|	ВТ_Платежи.ДатаПлатежа КАК ДатаПлатежа,
	|	ВТ_Платежи.НомерПлатежа КАК НомерПлатежа,
	|	ВТ_Платежи.СуммаПлатежа КАК СуммаПлатежа,
	|	ВТ_Платежи.Организация КАК Организация,
	|	ВТ_Платежи.ОшибочноеЗначение КАК ОшибочноеЗначение
	|ИЗ
	|	ВТ_Платежи КАК ВТ_Платежи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияБанковскихДокументов КАК СостоянияБанковскихДокументов
	|		ПО ВТ_Платежи.Организация = СостоянияБанковскихДокументов.Организация
	|			И ВТ_Платежи.ПлатежноеПоручениеСсылка = СостоянияБанковскихДокументов.СсылкаНаОбъект
	|ГДЕ
	|	СостоянияБанковскихДокументов.Состояние = &Состояние
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа";
	
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога);
	Запрос.УстановитьПараметр("ДатаНачалаОбзора", Дата(Год(ТекущаяДатаСеанса()) - 3, 1, 1));
	Запрос.УстановитьПараметр("ЮридическоеФизическоеЛицо", Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
	Запрос.УстановитьПараметр("Состояние", Перечисления.СостоянияБанковскихДокументов.Оплачено);
	
	МассивНалогов = Новый Массив;
	МассивНалогов.Добавить(Перечисления.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть);
	МассивНалогов.Добавить(Перечисления.ВидыНалогов.ФиксированныеВзносы_ПФР_НакопительнаяЧасть);
	МассивНалогов.Добавить(Перечисления.ВидыНалогов.ФиксированныеВзносы_ФФОМС);
	МассивНалогов.Добавить(Перечисления.ВидыНалогов.ФиксированныеВзносы_ФСС);
	Запрос.УстановитьПараметр("ВидыНалогов", МассивНалогов);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПараметрыЗаявленияОбУточненииПлатежа(ДанныеСтроки)
	
	ПараметрыЗаявления = Новый Структура;
	
	ПараметрыЗаявления.Вставить("Организация", ДанныеСтроки.Организация);
	ПараметрыЗаявления.Вставить("ДатаПлатежа", Формат(ДанныеСтроки.ДатаПлатежа, "ДФ=dd.MM.yyyy"));
	ПараметрыЗаявления.Вставить("НомерПлатежа", ДанныеСтроки.НомерПлатежа);
	ПараметрыЗаявления.Вставить("СуммаПлатежа", ДанныеСтроки.СуммаПлатежа);
	ПараметрыЗаявления.Вставить("КодПоля", НСтр("ru = '107'"));
	ПараметрыЗаявления.Вставить("ОшибочноеЗначение", ДанныеСтроки.ОшибочноеЗначение);
	ПараметрыЗаявления.Вставить("ПравильноеЗначение", ДанныеСтроки.ПравильноеЗначение);
	
	Возврат ПараметрыЗаявления;
	
КонецФункции

Функция ЗаявлениеОбУточненииПлатежа(ПараметрыЗаявления, КэшРеквизитовОрганизации, ИдентификаторФормы)
	
	Макет = ПолучитьМакет("ЗаявлениеОбУточненииПлатежа");
	
	ПараметрыОрганизации = КэшРеквизитовОрганизации.Получить(ПараметрыЗаявления.Организация);
	Если ПараметрыОрганизации = Неопределено Тогда
		ПараметрыОрганизации = РеквизитыОрганизации(ПараметрыЗаявления.Организация);
		КэшРеквизитовОрганизации.Вставить(ПараметрыЗаявления.Организация, ПараметрыОрганизации);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыЗаявления, ПараметрыОрганизации);
	
	ПараметрыЗаявления.Вставить("ДатаЗаявления", Формат(ТекущаяДатаСеанса(), "ДФ=dd.MM.yyyy"));
	
	Текст = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Макет.ПолучитьТекст(), ПараметрыЗаявления);
	
	ДокументРезультат = Новый ФорматированныйДокумент;
	ДокументРезультат.УстановитьHTML(Текст, Новый Структура());
	
	ШрифтТекстаУчредительныхДокументов = Новый Шрифт("Times New Roman", 12);
	
	Для Каждого Параграф Из ДокументРезультат.Элементы Цикл
		Параграф.МеждустрочныйИнтервал = 1.5;
	КонецЦикла;
	
	ИмяФайла = ПолучитьИмяВременногоФайла("rtf");
	ЭлектронноеВзаимодействиеБП.КонвертироватьВФорматRTF(ДокументРезультат, ИмяФайла);
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
	АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ИдентификаторФормы);
	УдалитьФайлы(ИмяФайла);
	
	Возврат АдресХранилища;
	
КонецФункции

Функция РеквизитыОрганизации(Организация)
	
	СведенияОбОрганизации = Новый Структура;
	
	ФИОпредпринимателя = Справочники.Организации.НаименованияНаДату(Организация, ТекущаяДатаСеанса()).ФИО;
	
	НаименованиеОрганизацииВРодительномПадеже = СтрШаблон(НСтр("ru = 'индивидуального предпринимателя %1'"),
		СклонениеПредставленийОбъектов.ПросклонятьФИО(ФИОпредпринимателя.Представление, 2));
	
	СведенияОбОрганизации.Вставить("НаименованиеОрганизации", НаименованиеОрганизацииВРодительномПадеже);
	
	АдресОрганизации = УправлениеКонтактнойИнформациейБП.КонтактнаяИнформацияНаДату(
		Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	СведенияОбОрганизации.Вставить("АдресОрганизации", АдресОрганизации.Представление);
	
	ОписанияРеквизитовОрганизации = Новый Массив;
	
	СведенияОбОрганизации.Вставить("РеквизитыОрганизации", 
		СтрШаблон(НСтр("ru = 'ИНН: %1'"), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ИНН")));
	
	ДанныеНалоговогоОргана = ДанныеГосударственныхОрганов.РеквизитыНалоговогоОрганаПоОрганизации(Организация);
	
	СведенияОбОрганизации.Вставить("НаименованиеИФНС", 
		СклонениеПредставленийОбъектов.ПросклонятьПредставление(ДанныеНалоговогоОргана.ФНС_Наименование, 3));
	СведенияОбОрганизации.Вставить("АдресИФНС", ДанныеНалоговогоОргана.ФНС_Адрес);
	
	СведенияОбОрганизации.Вставить("Заявитель", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИОпредпринимателя));
	
	СведенияОбОрганизации.Вставить("ДолжностьЗаявителя", НСтр("ru = 'Индивидуальный предприниматель'"));
	
	Возврат СведенияОбОрганизации;
	
КонецФункции

#КонецОбласти

#КонецЕсли
