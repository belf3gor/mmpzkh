
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмеющийсяТокен = Обработки.УПЖКХ_ЗагрузкаКадастровыхНомеров.ПолучитьТокенДляAPIРосреестра();
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик команды "Сохранить токен".
//
Процедура КомандаСохранитьТокен(Команда)
	
	Если ПустаяСтрока(НовыйТокен) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Новый токен не заполнен.");
	ИначеЕсли НовыйТокен = ИмеющийсяТокен Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Новый токен идентичен имеющемуся.");
	Иначе
		
		Если ПроверитьФорматТокена() Тогда
			// Сохранение токена и закрытие формы.
			СохранитьТокенНаСервере();
			Закрыть();
		Иначе
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Неверный формат токена.");
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
// Обработчик команды "Отмена".
//
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// РАБОТА С ТОКЕНОМ

#Область РаботаСТокеном

&НаСервере
// Выполняет проверку правильности формата токена.
//
Функция ПроверитьФорматТокена()
	
	Возврат Обработки.УПЖКХ_ЗагрузкаКадастровыхНомеров.ПроверитьФорматТокена(НовыйТокен);
	
КонецФункции

&НаСервере
// Выполняет сохранение токена.
//
Процедура СохранитьТокенНаСервере()
	
	Обработки.УПЖКХ_ЗагрузкаКадастровыхНомеров.СохранитьТокен(НовыйТокен);
	
КонецПроцедуры

#КонецОбласти

