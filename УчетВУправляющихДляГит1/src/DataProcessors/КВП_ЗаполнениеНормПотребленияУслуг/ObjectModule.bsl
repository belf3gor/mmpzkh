
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыМодуляОбъекта

// Процедура инициализирует значения реквизитов формы по умолчанию.
//
Процедура ИнициализацияРеквизитов() Экспорт
	
	ДатаУстановки = НачалоМесяца(УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату());
	
КонецПроцедуры // ИнициализацияРеквизитов()

// Получает список лицевых счетов из табличной части "Объекты".
Функция ПолучитьСписокЛицевыхСчетов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Объекты", Объекты);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.Объект
	|ПОМЕСТИТЬ ВрОбъекты
	|ИЗ
	|	&Объекты КАК Объекты";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.Объект
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.Объект ССЫЛКА Справочник.КВП_ЛицевыеСчета
	|	И НЕ Объекты.Объект.ЭтоГруппа";
	СписокЛС = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.Объект
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.Объект ССЫЛКА Справочник.КВП_ЛицевыеСчета
	|	И Объекты.Объект.ЭтоГруппа";
	СписокГрупп = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Объект");
	СписокЛСГрупп = Новый СписокЗначений;
	Если СписокГрупп.Количество() > 0 Тогда
		СписокЛСГрупп = КВП_ПолучитьСписокЛицевыхСчетовПоГруппам(СписокГрупп, КонецДня(ДатаУстановки), ТекущаяДата());
	КонецЕсли;
	
	Для Каждого ТекущийЛС Из СписокЛСГрупп Цикл
		НоваяСтрокаЛС = СписокЛС.Добавить();
		НоваяСтрокаЛС.Объект = ТекущийЛС.Значение;
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.Объект
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.Объект ССЫЛКА Справочник.КВП_Здания";
	СписокЗданий = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Объект");
	
	СписокЛСЗданий  =Новый СписокЗначений;
	Если СписокЗданий.Количество() > 0 Тогда
		СписокЛСЗданий = КВП_ПолучитьСписокЛицевыхСчетовПоЗданиям(СписокЗданий, КонецДня(ДатаУстановки), ТекущаяДата());
	КонецЕсли;
	
	Для Каждого ТекущийЛС Из СписокЛСЗданий Цикл
		НоваяСтрокаЛС = СписокЛС.Добавить();
		НоваяСтрокаЛС.Объект = ТекущийЛС.Значение;
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.Объект
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.Объект ССЫЛКА Справочник.КВП_Подъезды";
	СписокПодъездов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Объект");
	
	СписокЛСПодъездов = Новый СписокЗначений;
	Если СписокПодъездов.Количество() > 0 Тогда
		СписокЛСПодъездов = КВП_ПолучитьСписокЛицевыхСчетовПоПодъездам(СписокПодъездов, КонецДня(ДатаУстановки), ТекущаяДата());
	КонецЕсли;
	
	Для Каждого ТекущийЛС Из СписокЛСПодъездов Цикл
		НоваяСтрокаЛС = СписокЛС.Добавить();
		НоваяСтрокаЛС.Объект = ТекущийЛС.Значение;
	КонецЦикла;
	
	СписокЛС.Свернуть("Объект");
	
	Возврат СписокЛС;
	
КонецФункции // ПолучитьСписокЛицевыхСчетов()

// Получает список зданий из табличной части "Объекты".
Функция ПолучитьСписокЗданий() Экспорт
	
	Запрос = Новый Запрос;
	//Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Объекты", Объекты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.Объект
	|ПОМЕСТИТЬ ВрОбъекты
	|ИЗ
	|	&Объекты КАК Объекты
	|;
	|///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК Группа
	|ПОМЕСТИТЬ ГруппыЗданий
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.Объект ССЫЛКА Справочник.КВП_Здания
	|	И Объекты.Объект.ЭтоГруппа
	|;
	|///////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_Здания.Ссылка КАК Здание
	|ПОМЕСТИТЬ ЗданияПоГруппам
	|ИЗ
	|	Справочник.КВП_Здания КАК КВП_Здания
	|ГДЕ
	|	КВП_Здания.Ссылка В ИЕРАРХИИ 
	|			(ВЫБРАТЬ 
	|				ГруппыЗданий.Группа
	|			ИЗ
	|				ГруппыЗданий КАК ГруппыЗданий)
	|	И НЕ КВП_Здания.ЭтоГруппа
	|;
	|///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект
	|ИЗ
	|	ВрОбъекты КАК Объекты
	|ГДЕ
	|	Объекты.Объект ССЫЛКА Справочник.КВП_Здания
	|	И НЕ Объекты.Объект.ЭтоГруппа 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗданияПоГруппам.Здание
	|ИЗ
	|	ЗданияПоГруппам КАК ЗданияПоГруппам
	|";
	
	СписокЗданий = Запрос.Выполнить().Выгрузить();
	СписокЗданий.Свернуть("Объект");
	
	Возврат СписокЗданий;
	
КонецФункции // ПолучитьСписокЗданий()

#КонецОбласти

#КонецЕсли
