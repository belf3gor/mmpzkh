&НаКлиенте
Перем ФормаВыбораСистемыНалогообложения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура ДанныеРегистрацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДанныеРегистраций.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПерейтиКРегистрацииПрограммы(ТекущиеДанные.АдресХранилищаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияПриИзменении(Элемент)
	
	Если СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(СистемаНалогообложения) = Неопределено Тогда
		ПлательщикЕНВД = Ложь;
		ПрименяетсяУСНПатент = Ложь;
		ПлательщикТорговогоСбора = Ложь;
	КонецЕсли;
	
	Если СистемыНалогообложенияДопускающиеТрудНаемныхРаботников.НайтиПоЗначению(СистемаНалогообложения) = Неопределено Тогда
		ИспользуетсяТрудНаемныхРаботников = Ложь;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьФайлРегистрации(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьРасширениеРаботыСФайламиЗавершение", ЭтотОбъект,
		Новый Структура("ИдентификаторФормы", УникальныйИдентификатор));
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРегистрацию(Команда)
	
	ТекущиеДанные = Элементы.ДанныеРегистраций.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПерейтиКРегистрацииПрограммы(ТекущиеДанные.АдресХранилищаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьРаботу(Команда)
	
	Если ЗначениеЗаполнено(ДанныеОрганизации.ИНН) 
		И СтрДлина(ДанныеОрганизации.ИНН) <> СтрДлина(ИННРегистрации) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПредупреждениеЗавершение", ЭтотОбъект);
		ТекстСообщения = НСтр("ru = 'При перерегистрации нельзя изменять вид организации.
								|Необходимо провести активацию в новой информационной базе.'");
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	Если ДанныеОрганизации.Организация.Пустая() ИЛИ ДанныеОрганизации.ИНН = ИННРегистрации Тогда
		
		ЗавершитьАктивацию();
		
	Иначе
		
		ШаблонВопроса = НСтр("ru = 'В информационной базе уже ведется учет по организации %1 с ИНН %2.
			|После выполнения активации ИНН будет заменен на %3.'");
		ТекстВопроса = СтрШаблон(ШаблонВопроса, ДанныеОрганизации.НаименованиеСокращенное, 
			ДанныеОрганизации.ИНН, ИННРегистрации);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.ОК, "Выполнить активацию");
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		Оповещение = Новый ОписаниеОповещения("НачатьРаботуЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановитьИнтерфейсНаСервере(Знач ВидОрганизации, Знач СистемаНалогообложения, Знач ИспользуетсяТрудНаемныхРаботников)
	
	Возврат Обработки.НачалоРаботы.УстановитьПодходящийИнтерфейс(ВидОрганизации, СистемаНалогообложения, ИспользуетсяТрудНаемныхРаботников);
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьАктивацию()
	
	СоздатьОрганизацию();
	
	УстановленныйВариантИнтерфейса = УстановитьИнтерфейсНаСервере(ВидОрганизации, СистемаНалогообложения, ИспользуетсяТрудНаемныхРаботников);
	
	ОбщегоНазначенияБПВызовСервера.УстановитьСтандартныйИнтерфейс();
	
	ОбновитьИнтерфейс();
	
	Если УстановленныйВариантИнтерфейса = "ИнтерфейсТаксиПростой" Тогда
		ОткрытьФорму("Обработка.ПанелиПростойИнтерфейс.Форма.ПанельПомощь");
	КонецЕсли;
	
	Если ЭтотОбъект.Открыта() Тогда
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьРаботуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ЗавершитьАктивацию();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаАктивироватьЧерезИнтернетНажатие(Элемент)
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаАктивацияЧерезИнтернет");
	ТекстОшибкиАктивации	 = Новый ФорматированнаяСтрока("");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаАктивироватьСПомощьюФайлаРегистрацииНажатие(Элемент)
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаАктивацияИзФайла");
	ТекстОшибкиАктивации	 = Новый ФорматированнаяСтрока("");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаВыбратьДругойФайлРегистрацииНажатие(Элемент)
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаАктивацияИзФайла");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаВыбратьДругуюУчетнуюЗаписьНажатие(Элемент)
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаАктивацияЧерезИнтернет");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаВыбратьДругуюРегистрациюНажатие(Элемент)
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаВыборРегистрации");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьЧерезИнтернет(Команда)
	
	СпособАктивации = "АктивацияЧерезИнтернет";
	Если Не ЗначениеЗаполнено(ЛогинИнтернетПоддержки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите логин'"),, "ЛогинИнтернетПоддержки");
		
		Возврат;
		
	ИначеЕсли Не ЗначениеЗаполнено(ПарольИнтернетПоддержки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите пароль'"),, "ПарольИнтернетПоддержки");
		
		Возврат;
		
	КонецЕсли;
	
	НачатьАктивациюЧерезИнтернет();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаВосстановлениеПароляНажатие(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
		ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin("/remind_request"),
		НСтр("ru = 'Восстановление пароля'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаИнструкцияНажатие(Элемент)
	
	ОткрытьФормуИнструкции();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИнформацияОбАктивацииИзФайлаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПорядокАктивации" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФормуИнструкции();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодключитьРасширениеРаботыСФайламиЗавершение(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	
	Если РасширениеРаботыСФайламиПодключено Тогда
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.Фильтр             = "(*.zip)|*.zip";
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.Заголовок          = НСтр("ru='Выберите файл регистрации'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПомещениеФайлаЕстьРасширениеРаботыСФайламиЗавершение", ЭтотОбъект);
		НачатьПомещениеФайлов(ОписаниеОповещения,, ДиалогВыбораФайла, Истина, ДополнительныеПараметры.ИдентификаторФормы);
		
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПомещениеФайлаБезРасширенияРаботыСФайламиЗавершение", ЭтотОбъект);
		НачатьПомещениеФайла(ОписаниеОповещения,,, Истина,  ДополнительныеПараметры.ИдентификаторФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлаБезРасширенияРаботыСФайламиЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт

	Если Результат Тогда
		
		РасширениеФайла = НРег(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ВыбранноеИмяФайла));
		Если РасширениеФайла = "zip" Тогда
			
			ОбработатьФайлАктивации(Адрес);
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Данные для активации программы должны быть в файле с расширением zip.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлаЕстьРасширениеРаботыСФайламиЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

	Если ПомещенныеФайлы <> Неопределено И ПомещенныеФайлы.Количество() > 0 Тогда
		
		ОбработатьФайлАктивации(ПомещенныеФайлы[0].Хранение);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФайлАктивации(АдресХранилища)
	
	СпособАктивации = "АктивацияИзФайла";
	ОбработатьДанныеАктивацииСервер(АдресХранилища);
	
	Если АктивацияВыполнена Тогда
		ОповеститьОбАктивацииИЗакрытьОкно();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеАктивацииСервер(АдресХранилищаДанных)
	
	// Обработка файла регистрации
	ТекстОшибкиАктивации = Новый ФорматированнаяСтрока("");
	СписокРегистраций = Новый Массив;
	ВерныеРегистрации = Новый Массив;
	Если СпособАктивации = "АктивацияИзФайла" Тогда
		
		СписокРегистраций = НачалоРаботы.РегистрацииИзФайла(АдресХранилищаДанных);
		
		ВерныеРегистрации = ВерныеРегистрации(СписокРегистраций);
		
		Если СписокРегистраций.Количество() = 0 Тогда
			
			ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(
				НСтр("ru = 'Выбранный файл не содержит регистрационных данных. Выберите другой файл.'"));
			
		ИначеЕсли ВерныеРегистрации.Количество() = 0 Тогда
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(НСтр("ru = 'В файле содержатся некорректные регистрационные данные. Получите файл регистрации на'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Портале 1С:ИТС'"),,,,"https://portal.1c.ru/software"));
			ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(МассивСтрок);
			
		КонецЕсли;
		
	Иначе // через Интернет
		
		ДанныеСВебСервиса = ПолучитьИзВременногоХранилища(АдресХранилищаДанных);
		ОшибкаСВебСервиса = "";
		КодОшибки = 0;
		Если ДанныеСВебСервиса = Неопределено Тогда
			
			ОшибкаСВебСервиса = "Неопределено";
			
		Иначе
			
			СписокРегистраций = ДанныеСВебСервиса.Регистрации;
			ОшибкаСВебСервиса = ДанныеСВебСервиса.Ошибка;
			КодОшибки         = ДанныеСВебСервиса.КодОшибки;
			
		КонецЕсли;
		
		Если ОшибкаСВебСервиса = "Неопределено"
			ИЛИ ОшибкаСВебСервиса = "ОшибкаПодключения" Тогда
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(НСтр("ru = 'При подключении к сервису возникла ошибка. Возможно, указаны неверные настройки'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'прокси-сервера'"),,,, "e1cib/app/ОбщаяФорма.ПараметрыПроксиСервера"));
			МассивСтрок.Добавить(". " + НСтр("ru = 'Подробности в'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'журнале регистрации'"),,,, "e1cib/app/Обработка.ЖурналРегистрации"));
			МассивСтрок.Добавить(".");
			ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(МассивСтрок);
			
		ИначеЕсли ОшибкаСВебСервиса = "ОшибкаАвторизации" Тогда
			
			ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(
				НСтр("ru = 'Неверный логин или пароль. Укажите правильные данные для авторизации.'"));
				
		ИначеЕсли ОшибкаСВебСервиса = "ОшибкаСервиса" Тогда
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'При подключении к сервису возникла ошибка (код %1). Возможно, указаны неверные настройки'") + " ",
									КодОшибки));
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'прокси-сервера'"),,,, "e1cib/app/ОбщаяФорма.ПараметрыПроксиСервера"));
			МассивСтрок.Добавить(". " + НСтр("ru = 'Подробности в'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'журнале регистрации'"),,,, "e1cib/app/Обработка.ЖурналРегистрации"));
			МассивСтрок.Добавить(".");
			ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(МассивСтрок);
			
		Иначе
			ВерныеРегистрации = ВерныеРегистрации(СписокРегистраций);
			
			Если ВерныеРегистрации.Количество() = 0 Тогда
				
				МассивСтрок = Новый Массив;
				МассивСтрок.Добавить(НСтр("ru = 'Для учетной записи нет ни одной зарегистрированной поставки.'") + " ");
				МассивСтрок.Добавить(НСтр("ru = 'Список поставок можно посмотреть в Личном кабинете'") + " ");
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Портала 1С:ИТС'"),,,, "https://portal.1c.ru/software"));
				МассивСтрок.Добавить(НСтр("ru = '.'"));
				ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(МассивСтрок);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Если нет ошибок
	Если ПустаяСтрока(ТекстОшибкиАктивации) Тогда
		
		ОбработатьРегистрации(ВерныеРегистрации);
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Функция ВерныеРегистрации(СписокРегистраций)
	
	ВерныеРегистрации = Новый Массив;
	
	Если СписокРегистраций.Количество() > 0 Тогда
		
		Для Каждого Регистрация Из СписокРегистраций Цикл
			
			СведенияОРегистрации = Регистрация.СведенияОРегистрации;
			Если СведенияОРегистрации.РегистрацияСуществует
				И СведенияОРегистрации.ПодписьРегистрацииВерна Тогда
				
				ВерныеРегистрации.Добавить(Регистрация);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ВерныеРегистрации;
	
КонецФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Параметр АктивацияОрганизации показывает, что нужно выполнять только
	// активацию существующей организации, без возможности изменения ИНН
	АктивацияОрганизации = Параметры.АктивацияОрганизации;
	
	ДанныеОрганизации = Обработки.НачалоРаботы.ПолучитьДанныеОрганизации();
	
	ТекстОшибкиАктивации = Новый ФорматированнаяСтрока("");
	Если НачалоРаботы.ДоступенСервисАктивации() Тогда
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаАктивацияЧерезИнтернет");
	Иначе 
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаАктивацияИзФайла");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ЛогинПарольИПП = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	УстановитьПривилегированныйРежим(Ложь);
	Если ЛогинПарольИПП <> Неопределено Тогда
		
		ЛогинИнтернетПоддержки  = ЛогинПарольИПП.Логин;
		ПарольИнтернетПоддержки = ЛогинПарольИПП.Пароль;
		
	КонецЕсли;
	
	СистемыНалогообложенияДопускающиеСовмещение.ЗагрузитьЗначения(Обработки.НачалоРаботы.СистемыНалогообложенияДопускающиеСовмещение());
	СистемыНалогообложенияДопускающиеТрудНаемныхРаботников.ЗагрузитьЗначения(Обработки.НачалоРаботы.СистемыНалогообложенияДопускающиеТрудНаемныхРаботников());
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	
	ЕстьОшибка = Не ПустаяСтрока(Форма.ТекстОшибкиАктивации);
	
	Элементы.ГруппаОшибкаПриАктивацииИзФайла.Видимость       = ЕстьОшибка И Форма.СпособАктивации = "АктивацияИзФайла";
	Элементы.ГруппаОшибкаПриАктивацииЧерезИнтернет.Видимость = ЕстьОшибка И Форма.СпособАктивации = "АктивацияЧерезИнтернет";
	
	Элементы.ТекстОшибкиПриАктивацииИзФайла.Заголовок       = Форма.ТекстОшибкиАктивации;
	Элементы.ТекстОшибкиПриАктивацииЧерезИнтернет.Заголовок = Форма.ТекстОшибкиАктивации;
	
	// Установим видимость гиперссылок, возвращающих на предыдущий экран
	НесколькоРегистраций = Форма.ДанныеРегистраций.Количество() > 1;
	
	Элементы.ГиперссылкаВыбратьДругойФайлРегистрации.Видимость      = НЕ НесколькоРегистраций И Форма.СпособАктивации = "АктивацияИзФайла";
	Элементы.ГиперссылкаВыбратьДругойФайлРегистрацииВыбор.Видимость = НесколькоРегистраций И Форма.СпособАктивации = "АктивацияИзФайла";
	Элементы.ГиперссылкаВыбратьДругуюУчетнуюЗапись.Видимость        = НЕ НесколькоРегистраций И Форма.СпособАктивации = "АктивацияЧерезИнтернет";
	Элементы.ГиперссылкаВыбратьДругуюУчетнуюЗаписьВыбор.Видимость   = НесколькоРегистраций И Форма.СпособАктивации = "АктивацияЧерезИнтернет";
	Элементы.ГиперссылкаВыбратьДругуюРегистрацию.Видимость          = НесколькоРегистраций;
	
	ЭтоЮридическоеЛицо = Форма.ВидОрганизации = "ЮридическоеЛицо";
	
	Элементы.ПлательщикЕНВД.Видимость = Форма.СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(Форма.СистемаНалогообложения) <> Неопределено;
	Элементы.ПрименяетсяУСНПатент.Видимость = Форма.СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(Форма.СистемаНалогообложения) <> Неопределено
		И НЕ ЭтоЮридическоеЛицо;
	Элементы.ТорговыйСбор.Видимость = Форма.СистемыНалогообложенияДопускающиеСовмещение.НайтиПоЗначению(Форма.СистемаНалогообложения) <> Неопределено;
	
	Элементы.ИспользуетсяТрудНаемныхРаботников.Видимость = Не ЭтоЮридическоеЛицо
		И Форма.СистемыНалогообложенияДопускающиеТрудНаемныхРаботников.НайтиПоЗначению(Форма.СистемаНалогообложения) <> Неопределено;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПерейтиНаСтраницу(Форма, АктивнаяСтраница)
	
	Форма.АктивнаяСтраница = АктивнаяСтраница;
	
	Элементы = Форма.Элементы;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы[Форма.АктивнаяСтраница];
	
	Если Форма.АктивнаяСтраница = "СтраницаАктивацияИзФайла" Тогда
		
		Элементы.ВыбратьФайлРегистрации.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли Форма.АктивнаяСтраница = "СтраницаАктивацияЧерезИнтернет" Тогда
		
		Элементы.АктивироватьЧерезИнтернет.КнопкаПоУмолчанию	 = Истина;
		Элементы.ГруппаОжиданиеАктивацииЧерезИнтернет.Видимость	 = Ложь;
		
	ИначеЕсли Форма.АктивнаяСтраница = "СтраницаВыборРегистрации" Тогда
		
		Элементы.ВыбратьРегистрацию.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли Форма.АктивнаяСтраница = "СтраницаНачатьРаботу" Тогда
		
		Элементы.НачатьРаботу.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРегистрации(Регистрации)
	
	Если Регистрации.Количество() = 0 Тогда
		Возврат;
	Иначе
		
		Если АктивацияОрганизации
			И ЗначениеЗаполнено(ДанныеОрганизации.Организация) Тогда
			// В информационной базе уже создана организация и форма открыта в режиме только активации.
			// Нужно найти данные для ее регистрации выполнить регистрацию.
			
			РегистрацияТекущейОрганизации = Обработки.НачалоРаботы.РегистрацияОрганизации(ДанныеОрганизации, Регистрации);
			
			Если РегистрацияТекущейОрганизации <> Неопределено Тогда
				НачалоРаботы.ЗаписатьРегистрацию(РегистрацияТекущейОрганизации.СведенияОРегистрации,
							РегистрацияТекущейОрганизации.Регистрация, РегистрацияТекущейОрганизации.ЭлектроннаяПодпись);
				АктивацияВыполнена = Истина;
				// Сохраним логин и пароль интернет-поддержки
				
				Если СпособАктивации = "АктивацияЧерезИнтернет" Тогда
					// Сохраняем логин и пароль
					ДанныеАутентификации = Новый Структура("Логин, Пароль", ЛогинИнтернетПоддержки, ПарольИнтернетПоддержки);
					ИнтернетПоддержкаПользователей.СохранитьДанныеАутентификации(ДанныеАутентификации);
				КонецЕсли;
				
			Иначе
				
				МассивСтрокОшибки = Новый Массив;
				Если СпособАктивации = "АктивацияЧерезИнтернет" Тогда
					МассивСтрокОшибки.Добавить(НСтр("ru = 'Для учетной записи'"));
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(Новый ФорматированнаяСтрока(ЛогинИнтернетПоддержки, 
																	Новый Шрифт( , , Истина)));
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(НСтр("ru = 'не зарегистрирована организация'"));
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(ДанныеОрганизации.НаименованиеСокращенное);
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(НСтр("ru = 'с ИНН'"));
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(Новый ФорматированнаяСтрока(ДанныеОрганизации.ИНН,
																	Новый Шрифт( , , Истина)));
					МассивСтрокОшибки.Добавить("." + Символы.ПС);
					МассивСтрокОшибки.Добавить(НСтр("ru = 'Укажите учетную запись, на которую зарегистрирована программа.'"));
				Иначе
					МассивСтрокОшибки.Добавить(НСтр("ru = 'Выбранный файл не содержит сведений о регистрации программы для организации'"));
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(ДанныеОрганизации.НаименованиеСокращенное);
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(НСтр("ru = 'с ИНН'"));
					МассивСтрокОшибки.Добавить(" ");
					МассивСтрокОшибки.Добавить(Новый ФорматированнаяСтрока(ДанныеОрганизации.ИНН,
																	Новый Шрифт( , , Истина)));
					МассивСтрокОшибки.Добавить("." + Символы.ПС);
					МассивСтрокОшибки.Добавить(НСтр("ru = 'Выберите другой файл.'"));
					
				КонецЕсли;
				ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(МассивСтрокОшибки);
			КонецЕсли;
			
		Иначе
			
			Если Регистрации.Количество() = 1 Тогда
				ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаНачатьРаботу");
				
				ДанныеРегистраций.Очистить();
				
				УстановитьРегистрационныеДанные(ПоместитьВоВременноеХранилище(Регистрации[0], УникальныйИдентификатор));
				
			Иначе
				
				ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаВыборРегистрации");
				
				ДанныеРегистраций.Очистить();
				Для Каждого Регистрация Из Регистрации Цикл
					
					Данные = Регистрация.СведенияОРегистрации.ДанныеРегистрации;
					СтрокаТаблицы = ДанныеРегистраций.Добавить();
					СтрокаТаблицы.НаименованиеОрганизации	 = Данные.Наименование;
					СтрокаТаблицы.ИНН						 = Данные.ИНН;
					СтрокаТаблицы.АдресХранилищаРегистрации	 = ПоместитьВоВременноеХранилище(Регистрация, УникальныйИдентификатор);
					СтрокаТаблицы.Представление				 = Данные.Наименование + Символы.ПС
					+ НСтр("ru = 'ИНН:'")+ " " + Данные.ИНН;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРегистрационныеДанные(АдресХранилища)
	
	АдресХранилищаРегистрации = АдресХранилища;
	
	Регистрация = ПолучитьИзВременногоХранилища(АдресХранилищаРегистрации);
	
	РегистрационныеДанныеСтрокой = 
		НачалоРаботы.РегистрационныеДанныеФорматированнойСтрокой(Регистрация.СведенияОРегистрации);
	
	ИННРегистрации = Регистрация.СведенияОРегистрации.ДанныеРегистрации.ИНН;
	
	ВидОрганизации = Обработки.НачалоРаботы.ВидОрганизации(ИННРегистрации);
	
	ЗаполнитьСписокВыбораСистемНалогообложения();
	
	Если ВидОрганизации = "ЮридическоеЛицо" И (СистемаНалогообложения = "Патентная" Или СистемаНалогообложения = "НалогНаПрофессиональныйДоход")
		ИЛИ НЕ ЗначениеЗаполнено(СистемаНалогообложения) Тогда
		СистемаНалогообложения = Обработки.НачалоРаботы.СистемаНалогообложенияПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораСистемНалогообложения()
	
	ЭтоИндивидуальныйПредприниматель = (ВидОрганизации <> "ЮридическоеЛицо");
	
	Элементы.СистемаНалогообложения.СписокВыбора.Очистить();
	Если ЭтоИндивидуальныйПредприниматель
		И ТекущаяДатаСеанса() >= НалогНаПрофессиональныйДоходКлиентСервер.ДатаНачалаЭксперимента() Тогда
		Элементы.СистемаНалогообложения.СписокВыбора.Добавить("НалогНаПрофессиональныйДоход", НСтр("ru='Налог на профессиональный доход (""самозанятые"")'"));
	КонецЕсли;
	Элементы.СистемаНалогообложения.СписокВыбора.Добавить("УпрощеннаяДоходы", НСтр("ru='УСН 6%'"));
	Элементы.СистемаНалогообложения.СписокВыбора.Добавить("УпрощеннаяДоходыМинусРасходы", НСтр("ru='УСН 15%'"));
	Если ЭтоИндивидуальныйПредприниматель Тогда
		Элементы.СистемаНалогообложения.СписокВыбора.Добавить("Патентная", НСтр("ru='Только патент'"));
		Элементы.СистемаНалогообложения.СписокВыбора.Добавить("ЕНВД", НСтр("ru='Только ЕНВД'"));
	КонецЕсли;
	Если ЭтоИндивидуальныйПредприниматель Тогда
		Элементы.СистемаНалогообложения.СписокВыбора.Добавить("Общая", НСтр("ru='Общая (НДФЛ)'"));
	Иначе
		Элементы.СистемаНалогообложения.СписокВыбора.Добавить("Общая", НСтр("ru='Общая (налог на прибыль)'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьОрганизацию()
	
	ДанныеРегистрации = ПолучитьИзВременногоХранилища(АдресХранилищаРегистрации);
	Если ДанныеРегистрации <> Неопределено Тогда
		
		Если СпособАктивации = "АктивацияЧерезИнтернет" Тогда
			// Сохраняем логин и пароль
			ДанныеАутентификации = Новый Структура("Логин, Пароль", ЛогинИнтернетПоддержки, ПарольИнтернетПоддержки);
			ИнтернетПоддержкаПользователей.СохранитьДанныеАутентификации(ДанныеАутентификации);
		КонецЕсли;
		
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Создание организации'");
		ПараметрыВыполнения.ОжидатьЗавершение = 0;
		
		Налогообложение = Обработки.НачалоРаботы.НовыйНалогообложениеОрганизации();
		Налогообложение.СистемаНалогообложения =   СистемаНалогообложения;
		Налогообложение.ПлательщикЕНВД =           ПлательщикЕНВД;
		Налогообложение.ПрименяетсяУСНПатент =     ПрименяетсяУСНПатент;
		Налогообложение.ПлательщикТорговогоСбора = ПлательщикТорговогоСбора;
		Налогообложение.ИспользуетсяТрудНаемныхРаботников = ИспользуетсяТрудНаемныхРаботников;
		
		НачалоРаботы.ВыполнитьРегистрациюОрганизации(ДанныеРегистрации.СведенияОРегистрации, Налогообложение, ДанныеРегистрации.Регистрация, ДанныеРегистрации.ЭлектроннаяПодпись);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеСВебСервиса()
	
	ТекстОшибкиАктивации = Новый ФорматированнаяСтрока(""); // очищаем
	Элементы.ГруппаОшибкаПриАктивацииЧерезИнтернет.Видимость = Ложь;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение регистрационных данных из веб-сервиса'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	ПараметрыЗадания = Новый Структура("ЛогинИПП, ПарольИПП", ЛогинИнтернетПоддержки, ПарольИнтернетПоддержки);
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("НачалоРаботы.РегистрацииИзВебСервиса",
		ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ПолучитьДанныеСВебСервисаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	УстановитьДоступностьЭлементовОжидание(Ложь);
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ОбработатьДанныеАктивацииСервер(Результат.АдресРезультата);
	
	Если АктивацияВыполнена Тогда
		ОповеститьОбАктивацииИЗакрытьОкно();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовОжидание(Ожидание)
	
	Элементы.Страницы.ТекущаяСтраница.ТолькоПросмотр                   = Ожидание;
	
	Элементы.ГруппаОжиданиеАктивацииЧерезИнтернет.Видимость            = Ожидание;
	
	Элементы.АктивироватьЧерезИнтернет.Видимость                       = НЕ Ожидание;
	Элементы.ГиперссылкаАктивироватьСПомощьюФайлаРегистрации.Видимость = НЕ Ожидание;
	
	Элементы.ГруппаКомандаНачалаРаботы.Видимость  = НЕ Ожидание;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьАктивациюЧерезИнтернет()
	
	УстановитьДоступностьЭлементовОжидание(Истина);
	
	ДлительнаяОперация = ПолучитьДанныеСВебСервиса();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПолучитьДанныеСВебСервисаЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Процедура ПерейтиКРегистрацииПрограммы(АдресХранилища)
	
	ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаНачатьРаботу");
	
	УстановитьРегистрационныеДанные(АдресХранилища);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредупреждениеЗавершение(Результат) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуИнструкции()
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АктивацияОрганизации", АктивацияОрганизации);
	ОткрытьФорму("Обработка.НачалоРаботы.Форма.ПорядокАктивации", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбАктивацииИЗакрытьОкно()
	
	ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Программа успешно активирована'"),
						ДанныеОрганизации.НаименованиеСокращенное, ДанныеОрганизации.ИНН);
	
	ПоказатьОповещениеПользователя(ТекстОповещения , , , БиблиотекаКартинок.ДлительнаяОперация48);
	
	Если ЭтотОбъект.Открыта() Тогда
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти