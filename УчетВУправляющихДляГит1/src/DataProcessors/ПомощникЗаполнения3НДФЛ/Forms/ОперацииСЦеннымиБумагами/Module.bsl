
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период = Параметры.Период;
	Декларация3НДФЛВыбраннаяФорма = Параметры.Декларация3НДФЛВыбраннаяФорма;
	
	Если Параметры.Свойство("СтруктураДоходовВычетов")
		И ЗначениеЗаполнено(Параметры.СтруктураДоходовВычетов)
		И Параметры.СтруктураДоходовВычетов.Свойство("ДанныеФормы")
		И ЗначениеЗаполнено(Параметры.СтруктураДоходовВычетов.ДанныеФормы) Тогда
		ЗаполнитьФормуИзДанных(Параметры.СтруктураДоходовВычетов.ДанныеФормы);
	Иначе
		ЗаполнитьНовуюФорму();
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛ.ИсточникДоходовПриСозданииНаСервере(ЭтотОбъект, Ложь);
	УстановитьКлючСохраненияПоложенияОкна(ЭтотОбъект);
	
	УстановитьПараметрыВыбораКодаДохода(Элементы.ДоходыКодДохода);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ПомощникЗаполнения3НДФЛ.ПроверитьЗаполнениеРеквизитовИсточникаДоходов(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	
	Для Индекс = 0 По Доходы.Количество() - 1 Цикл
		НомерСтроки = Индекс + 1;
		СтрокаДоходы = Доходы[Индекс];
		Если ПустаяСтрока(СтрокаДоходы.ВидДохода) Тогда
			ТекстОшибки = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", , НСтр("ru = 'Код дохода'"), НомерСтроки, "Доходы");
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Доходы", НомерСтроки, "ВидДохода");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , ПутьКТабличнойЧасти, , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаДоходы.СуммаДохода) Тогда
			ТекстОшибки = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", , НСтр("ru = 'Сумма дохода'"), НомерСтроки, "Доходы");
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Доходы", НомерСтроки, "СуммаДохода");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , ПутьКТабличнойЧасти, , Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаДоходы.СуммаВычета) И Не ЗначениеЗаполнено(СтрокаДоходы.ВидВычета) Тогда
			ТекстОшибки = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", , НСтр("ru = 'Код вычета'"), НомерСтроки, "Доходы");
			ПутьКТабличнойЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Доходы", НомерСтроки, "ВидВычета");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , ПутьКТабличнойЧасти, , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОрганизацииФормыДляОтчетности.ПроверитьКодПоОКТМОНаФорме(ОКТМО, "ОКТМО", Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолеПоискаИНННаименованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПолеПоискаИНННаименование)
		И НЕ ЗначениеЗаполнено(ИНН) 
		И НЕ ЗначениеЗаполнено(Наименование) Тогда
		
		ПомощникЗаполнения3НДФЛКлиент.ЗаполнитьРеквизитыПоДаннымЕГР(ПолеПоискаИНННаименование, ОповещениеПослеЗаполненияПоИНН());
		ОтключитьЗаполнениеПоИНН = Истина;
		ПодключитьОбработчикОжидания("Подключаемый_ВключитьЗаполнениеПоИНН", 0.1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	ИНН = СокрП(ИНН);
	ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(ЭтотОбъект, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КПППриИзменении(Элемент)
	
	КПП = СокрП(КПП);
	ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(ЭтотОбъект, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоходыКодВычетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Доходы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеДоступныхВычетовДоходам = УчетНДФЛКлиентПовтИсп.ВычетыКДоходам(Год(Период));
	
	МассивДоступныхВычетов = СоответствиеДоступныхВычетовДоходам.Получить(ТекущиеДанные.ВидДохода);
	
	Если МассивДоступныхВычетов <> Неопределено Тогда
		МассивПараметровВыбора = Новый Массив;
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("СписокОтбора", Новый ФиксированныйМассив(МассивДоступныхВычетов)));
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаполнитьПоИНН(Команда)
	
	Если НЕ ЗначениеЗаполнено(ИНН) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Поле ""ИНН"" не заполнено'"));
		ТекущийЭлемент = Элементы.ИНН;
		Возврат;
	ИначеЕсли НЕ ОшибокПоИННнет Тогда
		ПоказатьПредупреждение(, Строка(РезультатПроверкиИНН));
		ТекущийЭлемент = Элементы.ИНН;
		Возврат;
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛКлиент.ВыполнитьЗаполнениеРеквизитовПоИНН(ИНН, ОповещениеПослеЗаполненияПоИНН());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоДаннымЕГР(Команда)
	
	ПомощникЗаполнения3НДФЛКлиент.ЗаполнитьРеквизитыПоДаннымЕГР(ПолеПоискаИНННаименование, ОповещениеПослеЗаполненияПоИНН());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоНаименованию(Команда)
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Поле ""Наименование"" не заполнено'"));
		ТекущийЭлемент = Элементы.Наименование;
	Иначе
		ПомощникЗаполнения3НДФЛКлиент.ВыполнитьЗаполнениеРеквизитовПоНаименованию(Наименование, ОповещениеПослеЗаполненияПоИНН());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРезультата = СохранитьРезультаты();
	
	Закрыть(СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьФормуИзДанных(ДанныеФормы)
	
	Для Каждого ИмяРеквизита Из МассивРеквизитовФормы() Цикл
		ДанныеФормы.Свойство(ИмяРеквизита, ЭтотОбъект[ИмяРеквизита]);
	КонецЦикла;
	
	Если ДанныеФормы.Свойство("Доходы") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеФормы.Доходы, Доходы);
	КонецЕсли;
	
	ЗаполнениеРеквизитовПлашкой = НЕ ЗначениеЗаполнено(Наименование);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНовуюФорму()
	
	ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	ЗаполнениеРеквизитовПлашкой = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МассивРеквизитовФормы()
	
	Массив = Новый Массив;
	Массив.Добавить("ВидКонтрагента");
	Массив.Добавить("Наименование");
	Массив.Добавить("ИНН");
	Массив.Добавить("КПП");
	Массив.Добавить("ОКТМО");
	Массив.Добавить("НалогУдержанный");
	
	Возврат Массив;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКлючСохраненияПоложенияОкна(Форма)
	
	ПрефиксКлючаСохранения = "";
	
	ПомощникЗаполнения3НДФЛКлиентСервер.УстановитьКлючСохраненияПоложенияОкна(Форма, ПрефиксКлючаСохранения);
	
КонецПроцедуры

&НаСервере
Функция СохранитьРезультаты()
	
	СтруктураРезультата = Новый Структура;
	
	Информация = НСтр("ru = 'Операции с ценными бумагами (%1)'");
	
	// Информация для формы помощника.
	СтруктураРезультата.Вставить("Вид", ПредопределенноеЗначение("Перечисление.ИсточникиДоходовФизическихЛиц.ОперацииСЦеннымиБумагами"));
	СтруктураРезультата.Вставить("Информация",  СтрШаблон(Информация, Наименование));
	СтруктураРезультата.Вставить("СуммаДохода", Доходы.Итог("СуммаДохода"));
	СтруктураРезультата.Вставить("СуммаВычета", Доходы.Итог("СуммаВычета"));
	
	// Данные формы для восстановления.
	СтруктураРезультата.Вставить("ДанныеФормы", СохранитьДанныеФормы());
	
	// Данные для отчетности.
	СтруктураРезультата.Вставить("ДанныеДекларации", СохранитьДанныеДекларации());
	
	Возврат СтруктураРезультата;
	
КонецФункции

&НаСервере
Функция СохранитьДанныеФормы()
	
	ДанныеФормы = Новый Структура;
	Для Каждого ИмяРеквизита Из МассивРеквизитовФормы() Цикл
		ДанныеФормы.Вставить(ИмяРеквизита, ЭтотОбъект[ИмяРеквизита]);
	КонецЦикла;
	
	ТаблицаДоходов = Доходы.Выгрузить();
	ДанныеФормы.Вставить("Доходы", ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаДоходов));
	ДанныеФормы.Вставить("ЕстьДоходыПоИИС", Ложь);
	ДанныеФормы.Вставить("ЕстьДоходыПоИнымОперациям", Ложь);
	
	// Коды видов доходов по операциям с ценными бумагами, учитываемым
	// на индивидуальном инвестиционном счете.
	КодыДоходовИИС = "1544,1545,1546,1547,1548,1549,1551,1552,1553,1554";
	
	ВидыДоходов = ТаблицаДоходов.ВыгрузитьКолонку("ВидДохода");
	КодыДоходов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВидыДоходов, "Код");
	Для Каждого КодДохода Из КодыДоходов Цикл
		
		Если СтрНайти(КодыДоходовИИС, КодДохода.Значение.Код) > 0 Тогда
			ДанныеФормы.ЕстьДоходыПоИИС = Истина;
		Иначе
			ДанныеФормы.ЕстьДоходыПоИнымОперациям = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеФормы;
	
КонецФункции

&НаСервере
Функция СохранитьДанныеДекларации()
	
	КодыВидовДоходовРФ = Отчеты.РегламентированныйОтчет3НДФЛ.КодыВидовДоходовРФ(Декларация3НДФЛВыбраннаяФорма);
	
	ДанныеДекларации = Новый Структура;
	ДанныеДекларации.Вставить("КодВидаДохода", КодыВидовДоходовРФ.ОперацииСЦеннымиБумагами);
	ДанныеДекларации.Вставить("Наименование", Наименование);
	ДанныеДекларации.Вставить("ИНН", ИНН);
	ДанныеДекларации.Вставить("КПП", КПП);
	ДанныеДекларации.Вставить("ОКТМО", ОКТМО);
	ДанныеДекларации.Вставить("НалогУдержанный", НалогУдержанный);
	
	ТаблицаДоходов = Доходы.Выгрузить(, "ВидДохода, ВидВычета, СуммаДохода, СуммаВычета");
	ТаблицаДоходов.Колонки.Добавить("КодДохода", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ТаблицаДоходов.Колонки.Добавить("КодВычета", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	
	ДанныеДекларации.Вставить("СуммаДохода", ТаблицаДоходов.Итог("СуммаДохода"));
	
	// Вместо ссылок сохраним коды доходов и вычетов.
	МассивВидовДоходов = ТаблицаДоходов.ВыгрузитьКолонку("ВидДохода");
	КодыДоходов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивВидовДоходов, "Код");
	
	МассивВидовВычетов = ТаблицаДоходов.ВыгрузитьКолонку("ВидВычета");
	КодыВычетов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивВидовВычетов, "КодПрименяемыйВНалоговойОтчетностиС2016Года");
	
	Для Каждого СтрокаДоходов Из ТаблицаДоходов Цикл
		СтрокаДоходов.КодДохода = КодыДоходов[СтрокаДоходов.ВидДохода];
		СтрокаДоходов.КодВычета = КодыВычетов[СтрокаДоходов.ВидВычета];
	КонецЦикла;
	
	ДанныеДекларации.Вставить("Доходы", ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаДоходов));
	ДанныеДекларации.Вставить("НалоговаяБаза", РассчитатьНалоговуюБазу(ТаблицаДоходов));
	
	Возврат ДанныеДекларации;
	
КонецФункции

&НаСервереБезКонтекста
Функция РассчитатьНалоговуюБазу(ТаблицаДоходов)
	
	ТаблицаДоходов.Свернуть("ВидДохода", "СуммаДохода, СуммаВычета");
	
	НалоговаяБаза = 0;
	Для Каждого СтрокаДоходов Из ТаблицаДоходов Цикл
		ОблагаемаяСумма = СтрокаДоходов.СуммаДохода - СтрокаДоходов.СуммаВычета;
		НалоговаяБаза = НалоговаяБаза + Макс(0, ОблагаемаяСумма);
	КонецЦикла;
	
	Возврат НалоговаяБаза;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьПараметрыВыбораКодаДохода(Элемент)
	
	МассивВидовДоходов = КодыДоходовПоЦеннымБумагам();
	
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивВидовДоходов)));
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КодыДоходовПоЦеннымБумагам()
	
	СтрокаКодовДоходовПоЦеннымБумагам = "1530,1531,1532,1533,1535,1536,1537,1538,1539,1541,1544,1545,1546,1547,1548,1549,1551,1552,1553,1554";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДоходовНДФЛ.Ссылка
	|ИЗ
	|	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	|ГДЕ
	|	ВидыДоходовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2010Года В(&КодыДоходов)";
	Запрос.УстановитьПараметр("КодыДоходов", СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаКодовДоходовПоЦеннымБумагам));
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
	
КонецФункции

#Область ЗаполнениеРеквизитовКонтрагента

&НаКлиенте
Функция ОповещениеПослеЗаполненияПоИНН()
	
	Возврат Новый ОписаниеОповещения("ПослеЗаполненияПоИНН", ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаполненияПоИНН(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
		ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(ЭтотОбъект, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВключитьЗаполнениеПоИНН()
	
	ОтключитьЗаполнениеПоИНН = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
