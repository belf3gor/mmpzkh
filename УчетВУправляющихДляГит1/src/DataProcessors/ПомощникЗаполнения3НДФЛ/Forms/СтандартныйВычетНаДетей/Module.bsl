
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидДохода = Перечисления.ИсточникиДоходовФизическихЛиц.ПредпринимательскаяДеятельность;
	СемейноеПоложениеНеИзменялось = Истина;
	
	Если Параметры.Свойство("СтруктураДоходовВычетов") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураДоходовВычетов, , "СведенияОДетях");
		Если Параметры.СтруктураДоходовВычетов.Свойство("СведенияОДетях") Тогда
			СведенияОДетях.Очистить();
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Параметры.СтруктураДоходовВычетов.СведенияОДетях, СведенияОДетях);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СведенияОДетях[0]);
		КонецЕсли;
	Иначе
		КоличествоМесяцев = РассчитатьКоличествоМесяцев(
			Параметры.Организация, Параметры.Период, Параметры.Декларация3НДФЛВыбраннаяФорма, УникальныйИдентификатор);
		ЗаполнитьТаблицуСтандартныйВычет();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
	КлючСохраненияПоложенияОкна = СемейноеПоложениеНеИзменялось;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если СемейноеПоложениеНеИзменялось Тогда
		ТекстОшибкиВсегоДетей   = НСтр("ru = 'Число несовершеннолетних детей превышает общее количество детей'");
		ТекстОшибкиДетиИнвалиды = НСтр("ru = 'Детей-инвалидов больше, чем несовершеннолетних детей'");
		Если Несовершеннолетних > ВсегоДетей Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиВсегоДетей, , "ВсегоДетей", , Отказ);
		КонецЕсли;
		
		Если РодныеДетиИнвалиды + ПриемныеДетиИнвалиды > Несовершеннолетних Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиДетиИнвалиды, , "Несовершеннолетних", , Отказ);
		КонецЕсли;
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ВсегоДетей");
		МассивНепроверяемыхРеквизитов.Добавить("Несовершеннолетних");
		
		// Хотя бы в одном из месяцев должно быть указано общее количество детей.
		Если СведенияОДетях.Итог("ВсегоДетей") = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Укажите общее количество детей хотя бы в одной строке'");
			ПутьКСтроке = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СведенияОДетях", 1, "ВсегоДетей");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКСтроке, , Отказ);
			ПроверяемыеРеквизиты.Добавить("СведенияОДетях.ВсегоДетей");
		КонецЕсли;
		
		// Хотя бы в одном из месяцев должно быть указано количество несовершеннолетних детей.
		Если СведенияОДетях.Итог("Несовершеннолетних") = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Укажите количество несовершеннолетних детей хотя бы в одной строке'");
			ПутьКСтроке = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СведенияОДетях", 1, "Несовершеннолетних");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКСтроке, , Отказ);
			ПроверяемыеРеквизиты.Добавить("СведенияОДетях.Несовершеннолетних");
		КонецЕсли;
		
		// Если количество детей указано хотя бы в одной строке, то проверяем корректность заполнения построчно.
		Если НЕ Отказ Тогда
			ТекстОшибкиВсегоДетей   = НСтр("ru = 'В %1 число несовершеннолетних детей превышает общее количество детей'");
			ТекстОшибкиДетиИнвалиды = НСтр("ru = 'В %1 детей-инвалидов больше, чем несовершеннолетних детей'");
			Для Индекс = 0 По СведенияОДетях.Количество() - 1 Цикл
				СтрокаТаблицы = СведенияОДетях[Индекс];
				НомерСтроки = Индекс + 1;
				Если СтрокаТаблицы.Несовершеннолетних > СтрокаТаблицы.ВсегоДетей Тогда
					ПутьКСтроке = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СведенияОДетях", НомерСтроки, "ВсегоДетей");
					ТекстСообщения = СтрШаблон(ТекстОшибкиВсегоДетей, МесяцВПредложномПадеже(НомерСтроки));
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКСтроке, , Отказ);
				КонецЕсли;
				
				Если СтрокаТаблицы.РодныеДетиИнвалиды + СтрокаТаблицы.ПриемныеДетиИнвалиды > СтрокаТаблицы.Несовершеннолетних Тогда
					ПутьКСтроке = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СведенияОДетях", НомерСтроки, "Несовершеннолетних");
					ТекстСообщения = СтрШаблон(ТекстОшибкиДетиИнвалиды, МесяцВПредложномПадеже(НомерСтроки));
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКСтроке, , Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидДоходаПриИзменении(Элемент)
	УстановитьПодсказкуКоличествоМесяцев(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СемейноеПоложениеПриИзменении(Элемент)
	Если СемейноеПоложениеНеИзменялось Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СведенияОДетях[0]);
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВсегоДетейПриИзменении(Элемент)
	СведенияОДетях[0].ВсегоДетей = ВсегоДетей;
	ЗаполнитьЗначенияТаблицыСведенияОДетях(СведенияОДетях[0], "ВсегоДетей");
КонецПроцедуры

&НаКлиенте
Процедура НесовершеннолетнихПриИзменении(Элемент)
	СведенияОДетях[0].Несовершеннолетних = Несовершеннолетних;
	ЗаполнитьЗначенияТаблицыСведенияОДетях(СведенияОДетях[0], "Несовершеннолетних");
КонецПроцедуры

&НаКлиенте
Процедура РодныеДетиИнвалидыПриИзменении(Элемент)
	СведенияОДетях[0].РодныеДетиИнвалиды = РодныеДетиИнвалиды;
	ЗаполнитьЗначенияТаблицыСведенияОДетях(СведенияОДетях[0], "РодныеДетиИнвалиды");
	УстановитьЗаголовокГруппы(ЭтотОбъект, "ГруппаДетиИнвалиды", ТекстЗаголовкаГруппыДетиИнвалиды(ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПриемныеДетиИнвалидыПриИзменении(Элемент)
	СведенияОДетях[0].ПриемныеДетиИнвалиды = ПриемныеДетиИнвалиды;
	ЗаполнитьЗначенияТаблицыСведенияОДетях(СведенияОДетях[0], "ПриемныеДетиИнвалиды");
	УстановитьЗаголовокГруппы(ЭтотОбъект, "ГруппаДетиИнвалиды", ТекстЗаголовкаГруппыДетиИнвалиды(ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПрименяетсяДвойнойВычетПриИзменении(Элемент)
	СведенияОДетях[0].ПрименяетсяДвойнойВычет = ПрименяетсяДвойнойВычет;
	ЗаполнитьЗначенияТаблицыСведенияОДетях(СведенияОДетях[0], "ПрименяетсяДвойнойВычет");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСтандартныйВычет

&НаКлиенте
Процедура СведенияОДетяхВсегоДетейПриИзменении(Элемент)
	ЗаполнитьЗначенияТаблицыСведенияОДетях(Элементы.СведенияОДетях.ТекущиеДанные, "ВсегоДетей");
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДетяхНесовершеннолетнихПриИзменении(Элемент)
	ЗаполнитьЗначенияТаблицыСведенияОДетях(Элементы.СведенияОДетях.ТекущиеДанные, "Несовершеннолетних");
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДетяхРодныеДетиИнвалидыПриИзменении(Элемент)
	ЗаполнитьЗначенияТаблицыСведенияОДетях(Элементы.СведенияОДетях.ТекущиеДанные, "РодныеДетиИнвалиды");
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДетяхПриемныеДетиИнвалидыПриИзменении(Элемент)
	ЗаполнитьЗначенияТаблицыСведенияОДетях(Элементы.СведенияОДетях.ТекущиеДанные, "ПриемныеДетиИнвалиды");
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДетяхПрименяетсяДвойнойВычетПриИзменении(Элемент)
	ЗаполнитьЗначенияТаблицыСведенияОДетях(Элементы.СведенияОДетях.ТекущиеДанные, "ПрименяетсяДвойнойВычет");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Вид",               ПредопределенноеЗначение("Перечисление.ВычетыФизическихЛиц.СтандартныйНаДетей"));
	СтруктураОтвета.Вставить("Информация",        СтрШаблон(НСтр("ru = 'Вычет на детей (%1)'"), Несовершеннолетних));
	СтруктураОтвета.Вставить("ВидДохода",         ВидДохода);
	СтруктураОтвета.Вставить("СемейноеПоложениеНеИзменялось", СемейноеПоложениеНеИзменялось);
	СтруктураОтвета.Вставить("КоличествоМесяцев", КоличествоМесяцев);
	СтруктураОтвета.Вставить("СведенияОДетях",    ПоместитьСведенияОДетяхВМассив(СведенияОДетях));
	
	СуммыВычета = РассчитатьСуммыВычета();
	СтруктураОтвета.Вставить("СтандартныйВычет",  СуммыВычета.СтандартныйВычет);
	СтруктураОтвета.Вставить("ДвойнойВычет",      СуммыВычета.ДвойнойВычет);
	СтруктураОтвета.Вставить("ВычетНаИнвалидов",  СуммыВычета.ВычетНаИнвалидов);
	СтруктураОтвета.Вставить("ДвойнойВычетНаИнвалидов", СуммыВычета.ДвойнойВычетНаИнвалидов);
	
	СтруктураОтвета.Вставить("СуммаВычета",       СуммыВычета.Всего);
	
	Закрыть(СтруктураОтвета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ГруппаНетИзменений.Видимость = Форма.СемейноеПоложениеНеИзменялось;
	Форма.Элементы.ГруппаЕстьИзменения.Видимость  = Не Форма.СемейноеПоложениеНеИзменялось;
	
	УстановитьЗаголовокГруппы(Форма, "ГруппаДетиИнвалиды", ТекстЗаголовкаГруппыДетиИнвалиды(Форма));
	
	УстановитьПодсказкуКоличествоМесяцев(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСтандартныйВычет()
	
	Для НомерМесяца = 1 По 12 Цикл
		
		СтрокаВычет = СведенияОДетях.Добавить();
		СтрокаВычет.НомерМесяца = НомерМесяца;
		СтрокаВычет.Месяц = Формат(Дата(2, НомерМесяца, 1), "ДФ=ММММ");
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначенияТаблицыСведенияОДетях(СтрокаЭталон, ИмяКолонки)
	
	Для каждого СтрокаТаблицы Из СведенияОДетях Цикл
		Если СтрокаТаблицы.НомерМесяца > СтрокаЭталон.НомерМесяца Тогда
			СтрокаТаблицы[ИмяКолонки] = СтрокаЭталон[ИмяКолонки];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокГруппы(Форма, НазваниеГруппы, ЗаголовокТекст)
	
	Форма.Элементы[НазваниеГруппы].ЗаголовокСвернутогоОтображения = ЗаголовокТекст;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗаголовкаГруппыДетиИнвалиды(Форма)
	
	СтрокаСведений = Форма.СведенияОДетях[0];
	ТекстЗаголовка = СтрШаблон(НСтр("ru = 'Из них детей-инвалидов: %1'"),
		Формат(СтрокаСведений.РодныеДетиИнвалиды + СтрокаСведений.ПриемныеДетиИнвалиды, "ЧН=; ЧГ=0"));
	
	Возврат ТекстЗаголовка;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьПодсказкуКоличествоМесяцев(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КоличествоМесяцевРасширеннаяПодсказка",
		"Заголовок",
		ТекстПодсказкиКоличествоМесяцев(Форма.ВидДохода));
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПодсказкиКоличествоМесяцев(ВидДохода)
	
	Если ВидДохода = ПредопределенноеЗначение("Перечисление.ИсточникиДоходовФизическихЛиц.ОплатаТруда") Тогда
		ТекстПодсказки = НСтр("ru = 'Рассчитайте количество месяцев применения
		|вычета по справке 2-НДФЛ.
		|Применение вычета прекращается с месяца,
		|в котором общая сумма дохода с начала года
		|превысила 350 тыс. руб.'");
	ИначеЕсли ВидДохода = ПредопределенноеЗначение("Перечисление.ИсточникиДоходовФизическихЛиц.ПредпринимательскаяДеятельность") Тогда
		ТекстПодсказки = НСтр("ru = 'Рассчитывается автоматически по доходам
		|от предпринимательской деятельности.
		|Применение вычета прекращается с месяца,
		|в котором общая сумма дохода с начала года
		|превысила 350 тыс. руб.'");
	Иначе
		ТекстПодсказки = НСтр("ru = 'Рассчитайте самостоятельно количество месяцев
		|применения вычета по полученным доходам.
		|Применение вычета прекращается с месяца,
		|в котором общая сумма дохода с начала года
		|превысила 350 тыс. руб.'");
	КонецЕсли;
	
	Возврат ТекстПодсказки;
	
КонецФункции

&НаСервереБезКонтекста
Функция МесяцВПредложномПадеже(НомерМесяца)
	
	Если НомерМесяца = 1 Тогда
		Возврат НСтр("ru = 'январе'");
	ИначеЕсли НомерМесяца = 2 Тогда
		Возврат НСтр("ru = 'феврале'");
	ИначеЕсли НомерМесяца = 3 Тогда
		Возврат НСтр("ru = 'марте'");
	ИначеЕсли НомерМесяца = 4 Тогда
		Возврат НСтр("ru = 'апреле'");
	ИначеЕсли НомерМесяца = 5 Тогда
		Возврат НСтр("ru = 'мае'");
	ИначеЕсли НомерМесяца = 6 Тогда
		Возврат НСтр("ru = 'июне'");
	ИначеЕсли НомерМесяца = 7 Тогда
		Возврат НСтр("ru = 'июле'");
	ИначеЕсли НомерМесяца = 8 Тогда
		Возврат НСтр("ru = 'августе'");
	ИначеЕсли НомерМесяца = 9 Тогда
		Возврат НСтр("ru = 'сентябре'");
	ИначеЕсли НомерМесяца = 10 Тогда
		Возврат НСтр("ru = 'октябре'");
	ИначеЕсли НомерМесяца = 11 Тогда
		Возврат НСтр("ru = 'ноябре'");
	ИначеЕсли НомерМесяца = 12 Тогда
		Возврат НСтр("ru = 'декабре'");
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервереБезКонтекста
Функция ПоместитьСведенияОДетяхВМассив(ЗНАЧ СведенияОДетях)
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(СведенияОДетях.Выгрузить());
	
КонецФункции

#Область РасчетСуммыВычетов

&НаКлиенте
Функция РассчитатьСуммыВычета()
	
	СуммыВычета = Новый Структура("СтандартныйВычет, ДвойнойВычет, ВычетНаИнвалидов, ДвойнойВычетНаИнвалидов, Всего", 0, 0, 0, 0, 0);
	
	РазмерыВычетов = РазмерыВычетов();
	
	КоличествоИтераций = Мин(СведенияОДетях.Количество(), КоличествоМесяцев) - 1;
	Для Индекс = 0 По КоличествоИтераций Цикл
		СтрокаТаблицы = СведенияОДетях[Индекс];
		
		СтандартныйВычет = СтандартныйВычетПоКоличествуДетей(СтрокаТаблицы, РазмерыВычетов);
		ВычетНаИнвалидов = СтрокаТаблицы.РодныеДетиИнвалиды * РазмерыВычетов.РоднойИнвалид
			+ СтрокаТаблицы.ПриемныеДетиИнвалиды * РазмерыВычетов.ПриемныйИнвалид;
		
		Если СтрокаТаблицы.ПрименяетсяДвойнойВычет Тогда
			СуммыВычета.ДвойнойВычет = СуммыВычета.ДвойнойВычет + (СтандартныйВычет * 2);
			СуммыВычета.ДвойнойВычетНаИнвалидов = СуммыВычета.ДвойнойВычетНаИнвалидов + (ВычетНаИнвалидов * 2);
		Иначе
			СуммыВычета.СтандартныйВычет = СуммыВычета.СтандартныйВычет + СтандартныйВычет;
			СуммыВычета.ВычетНаИнвалидов = СуммыВычета.ВычетНаИнвалидов + ВычетНаИнвалидов;
		КонецЕсли;
	КонецЦикла;
	
	СуммыВычета.Всего = СуммыВычета.СтандартныйВычет + СуммыВычета.ДвойнойВычет
		+ СуммыВычета.ВычетНаИнвалидов + СуммыВычета.ДвойнойВычетНаИнвалидов;
	
	Возврат СуммыВычета;
	
КонецФункции

&НаКлиенте
Функция РазмерыВычетов()
	
	РазмерыВычетов = Новый Структура;
	РазмерыВычетов.Вставить("ПервыйРебенок", 1400);
	РазмерыВычетов.Вставить("ВторойРебенок", 1400);
	РазмерыВычетов.Вставить("ТретийРебенок", 3000);
	РазмерыВычетов.Вставить("РоднойИнвалид", 12000);
	РазмерыВычетов.Вставить("ПриемныйИнвалид", 6000);
	
	Возврат РазмерыВычетов;
	
КонецФункции

&НаКлиенте
Функция СтандартныйВычетПоКоличествуДетей(СтрокаДети, РазмерыВычетов)
	
	Если СтрокаДети.ВсегоДетей < 3 Тогда
		ДетейДо3 = СтрокаДети.Несовершеннолетних;
	Иначе
		ДетейДо3 = Макс(2 - (СтрокаДети.ВсегоДетей - СтрокаДети.Несовершеннолетних), 0);
	КонецЕсли;
	
	ВычетНаПервого = ?(ДетейДо3 > 0, РазмерыВычетов.ПервыйРебенок, 0);
	ВычетНаВторого = ?(ДетейДо3 > 1, РазмерыВычетов.ВторойРебенок, 0);
	
	ДетейПосле3 = СтрокаДети.Несовершеннолетних - ДетейДо3;
	
	Возврат ВычетНаПервого + ВычетНаВторого + (ДетейПосле3 * РазмерыВычетов.ТретийРебенок);
	
КонецФункции

#КонецОбласти

&НаСервереБезКонтекста
Функция РассчитатьКоличествоМесяцев(Организация, Период, Декларация3НДФЛВыбраннаяФорма, УникальныйИдентификатор)
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Организация",   Организация);
	ПараметрыЗапроса.Вставить("НачалоПериода", НачалоГода(Период));
	ПараметрыЗапроса.Вставить("КонецПериода",  КонецГода(Период));
	ПараметрыЗапроса.Вставить("УникальныйИдентификаторФормы", УникальныйИдентификатор);
	
	ТаблицаДоходовРасходов = УчетДоходовИРасходовПредпринимателя.ДоходыРасходыОтПредпринимательскойДеятельностиЗаПериод3НДФЛ(ПараметрыЗапроса);
	
	ПределыВычетов = Отчеты.РегламентированныйОтчет3НДФЛ.ПределыВычетов(Декларация3НДФЛВыбраннаяФорма);
	
	ОбщаяСуммаДоходов = 0;
	КоличествоМесяцев = 0;
	Для Каждого СтрокаДоходыРасходы Из ТаблицаДоходовРасходов Цикл
		
		ОбщаяСуммаДоходов = ОбщаяСуммаДоходов + Макс(СтрокаДоходыРасходы.ИтогоДоходов - СтрокаДоходыРасходы.ИтогоРасходов, 0);
		
		Если ОбщаяСуммаДоходов > ПределыВычетов.ВычетНаДетейДоходы Тогда
			Прервать;
		КонецЕсли;
		
		КоличествоМесяцев = КоличествоМесяцев + 1;
		
	КонецЦикла;
	
	Возврат КоличествоМесяцев;
	
КонецФункции

#КонецОбласти
