
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
// Заполняет таблицу услуг по прямому договору.
Процедура ЗаполнитьУслугиПоПрямомуДоговору()
	
	Объект.УслугиПрямойДоговор.Очистить();
	СтрокаУслуги = Объект.УслугиПрямойДоговор.Добавить();
	СтрокаУслуги.НаименованиеУслуги = "Отопление (в т.ч. твердое топливо)";
	СтрокаУслуги = Объект.УслугиПрямойДоговор.Добавить();
	СтрокаУслуги.НаименованиеУслуги = "Горячее водоснабжение";
	СтрокаУслуги = Объект.УслугиПрямойДоговор.Добавить();
	СтрокаУслуги.НаименованиеУслуги = "Электроснабжение в квартирах";
	СтрокаУслуги = Объект.УслугиПрямойДоговор.Добавить();
	СтрокаУслуги.НаименованиеУслуги = "Газ";
	СтрокаУслуги = Объект.УслугиПрямойДоговор.Добавить();
	СтрокаУслуги.НаименованиеУслуги = "Холодное водоснабжение и водоотведение";
	
КонецПроцедуры  //ЗаполнитьУслугиПоПрямомуДоговору()

&НаСервере
// Процедура выгрузки данных.
Процедура ВыгрузкаДанных()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект", Тип("ОбработкаОбъект.КВП_ВыгрузкаВВЦКП"));
	
	Если Объект.ТипВыгрузки = "СведенияОЛьготниках" Тогда
		ТаблицаСведений = ОбработкаОбъект.ПолучитьТаблицуСведенийОЛьготниках();
	Иначе
		ТаблицаСведений = ОбработкаОбъект.ПолучитьТаблицуСведенийОНачисленнойПлате();
	КонецЕсли;
	
	ОбработкаОбъект.СформироватьФайлВыгрузки(ТаблицаСведений);
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
// Открывает диалог выбора файла.
//
Процедура ВыборКаталога()
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.Заголовок               = "Выберите каталог";
	ДиалогВыбораКаталога.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораКаталога.ИндексФильтра           = 0;
	ДиалогВыбораКаталога.Каталог                 = Объект.ИмяКаталогаВыгрузки;
	
	ДиалогВыбораКаталога.Показать(Новый ОписаниеОповещения("ВыборКаталогаЗавершение", ЭтотОбъект));
	
КонецПроцедуры

// Обрабатывает результат выбора каталога.
&НаКлиенте
Процедура ВыборКаталогаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено Тогда
		Объект.ИмяКаталогаВыгрузки = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Сохраняет настройки.
//
Процедура СохранитьНастройкиСервер()
	
	ИмяОбработки = "КВП_ВыгрузкаВВЦКП";
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить(ИмяОбработки + "СтрокаНастроек", ,
																	Объект.УслугиПрямойДоговор.Выгрузить());
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация",            Объект.Организация);
	СтруктураПараметров.Вставить("ПериодВыгрузки",         Объект.ПериодВыгрузки);
	СтруктураПараметров.Вставить("ФорматВыгрузки",         Объект.ФорматВыгрузки);
	СтруктураПараметров.Вставить("ТипВыгрузки",            Объект.ТипВыгрузки);
	СтруктураПараметров.Вставить("ИмяКаталогаВыгрузки",    Объект.ИмяКаталогаВыгрузки);
	СтруктураПараметров.Вставить("ЛицевойСчетОрганизации", Объект.ЛицевойСчетОрганизации);
	СтруктураПараметров.Вставить("ЛицевойСчетКонтрагента", Объект.ЛицевойСчетКонтрагента);
	СтруктураПараметров.Вставить("КодОрганизации",         Объект.КодОрганизации);
	СтруктураПараметров.Вставить("ЖилищныеУслуги",         Объект.ЖилищныеУслуги.Выгрузить());
	СтруктураПараметров.Вставить("КоммунальныеУслуги",     Объект.КоммунальныеУслуги.Выгрузить());
	СтруктураПараметров.Вставить("УслугиПрямойДоговор",    Объект.УслугиПрямойДоговор.Выгрузить());
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить("ПараметрыВыгрузки_КВП_ВыгрузкаСведенийОЛьготниках", ,
																	СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
// Обновляет настройки выгрузки.
//
Процедура ОбновитьНастройкиВыгрузки(Адрес)
	
	НастройкаИзХранилища = ПолучитьИзВременногоХранилища(Адрес);
	
	Объект.ЛицевойСчетКонтрагента = НастройкаИзХранилища.ЛицевойСчетКонтрагента;
	Объект.ЛицевойСчетОрганизации = НастройкаИзХранилища.ЛицевойСчетОрганизации;
	Объект.КодОрганизации = НастройкаИзХранилища.КодОрганизации;
	Объект.ЖилищныеУслуги.Загрузить(НастройкаИзХранилища.ЖилищныеУслуги);
	Объект.КоммунальныеУслуги.Загрузить(НастройкаИзХранилища.КоммунальныеУслуги);
	Объект.УслугиПрямойДоговор.Загрузить(НастройкаИзХранилища.УслугиПрямойДоговор);
	
КонецПроцедуры

&НаСервере
// Проверяет наличие указанного каталога.
//
Процедура ПроверитьНАличиеКаталога()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект", Тип("ОбработкаОбъект.КВП_ВыгрузкаВВЦКП"));
	
	Если НЕ ОбработкаОбъект.ПроверкаСуществованияКаталога() Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПередОткрытием" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяОбработки = "КВП_ВыгрузкаВВЦКП";
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект", Тип("ОбработкаОбъект.КВП_ВыгрузкаВВЦКП"));
	ОбработкаОбъект.ИнициализацияРеквизитов();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Попытка
		
		ВременнаяТаб = УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекЗагрузить(ИмяОбработки + "СтрокаНастроек");
		
		Если ВременнаяТаб.Количество() = 0 Или ВременнаяТаб.Количество() <> 5 Тогда
			
			ЗаполнитьУслугиПоПрямомуДоговору();
			
			УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить(ИмяОбработки + "СтрокаНастроек",
																			, Объект.УслугиПрямойДоговор.Выгрузить());
			
		Иначе
			Объект.УслугиПрямойДоговор.Загрузить(ВременнаяТаб);
		КонецЕсли;
		
	Исключение
		
		ЗаполнитьУслугиПоПрямомуДоговору();
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	Объект.НеЗаполнятьНастройкиПриОткрытии = Ложь;
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтотОбъект, "Объект.ПериодВыгрузки", "ПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередЗакрытием" формы.
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиСервер();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "НастройкиВыгрузки_Обновить" Тогда
		Если ЗначениеЗаполнено(Параметр) Тогда
			ОбновитьНастройкиВыгрузки(Параметр);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "НачалоВыбора" поля ввода ИмяФайлаЗагрузки.
//
Процедура ИмяКаталогаВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ВыборКаталога();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "Открытие" поля ввода ИмяКаталогаВыгрузки.
//
Процедура ИмяКаталогаВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = ЛОЖЬ;
	
	ПроверитьНаличиеКаталога();
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ИмяКаталогаВыгрузкиОткрытиеЗавершение", ЭтотОбъект), Объект.ИмяКаталогаВыгрузки);
	
КонецПроцедуры

// Обрабатывает завершение процедуры открытия файла с использованием ассоциированного с ним приложения.
&НаКлиенте
Процедура ИмяКаталогаВыгрузкиОткрытиеЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ

#Область ОбработчикиСобытийКомандныхПанелей

&НаКлиенте
// Обработчик нажатия кнопки "Настройка" командной панели.
//
Процедура Настройка(Команда)
	
	ФормаНастройки = ПолучитьФорму("Обработка.КВП_ВыгрузкаВВЦКП.Форма.ФормаНастройка",
									Новый Структура("ДанныеОбъекта", Объект));
	ФормаНастройки.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаНастройки.ВладелецФормы = ЭтаФорма;
	ФормаНастройки.Открыть();
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "ВыгрузитьДанные".
Процедура ВыгрузитьДанные(Команда)

	Если Объект.Организация.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Не выбрана организация.");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ФорматВыгрузки) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Не выбран формат файла выгрузки.");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ТипВыгрузки) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Не выбран тип выгрузки.");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ИмяКаталогаВыгрузки) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Не выбран каталог файла выгрузки.");
		Возврат;
	КонецЕсли;
	
	ВыгрузкаДанных();
	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////////////////////////////////////////
// МЕСЯЦ СТРОКОЙ

#Область ОбработчикиИзмененияПериода

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ПериодСтрокой".
//
Процедура МесяцСтрокаПриИзменении(Элемент)

	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "Объект.ПериодВыгрузки",
													 "ПериодСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаНачалоВыбора(ЭтотОбъект, ЭтотОбъект, "Объект.ПериодВыгрузки", "ПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "Регулирование" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "Объект.ПериодВыгрузки",
													  "ПериодСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "АвтоПодбор" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОкончаниеВводаТекста" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)

	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти



