#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ВыполнитьПеренумерацию(Параметры, АдресРезультата) Экспорт
	
	НачалоПериода = Параметры.НачалоПериода;
	КонецПериода = Параметры.КонецПериода;
	Организация = Параметры.Организация;
	ВидДокументов = Параметры.ВидДокументов;
	ИзменяемыеДокументы = Параметры.ИзменяемыеДокументы;
	СписокНомеров = ИзменяемыеДокументы.ВыгрузитьКолонку("НовыйНомер");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка КАК Ссылка
	|ИЗ
	|	&ТаблицаОбъектов КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТаблицаОбъектов.ПометкаУдаления = ИСТИНА
	|	И ТаблицаОбъектов.Организация = &Организация
	|	И ТаблицаОбъектов.Номер В(&СписокНомеров)
	|	&ДополнительныеУсловия";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаОбъектов", ВидДокументов);
	
	Если ВидДокументов = "Документ.СчетФактураВыданный" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныеУсловия", "И ТаблицаОбъектов.Исправление = ЛОЖЬ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныеУсловия", "");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(КонецПериода));
	Запрос.УстановитьПараметр("СписокНомеров", СписокНомеров);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.УстановитьНовыйНомер();
		Попытка
			// Здесь только помеченные на удаление документы, они не проводятся.
			ДокументОбъект.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Перенумерация объектов'"), УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(), ДокументОбъект, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
	Перенумерованные = Новый Массив;
	ЗаблокированныеДокументы = Новый Массив;
	Для Каждого Документ Из ИзменяемыеДокументы Цикл
		ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Номер = Документ.НовыйНомер;
		Отказ = Ложь;
		Попытка
			Если ДокументОбъект.Проведен Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ДокументОбъект.Записать();
			КонецЕсли;
			Документ.НомерИзменен = Истина;
		Исключение
			// освобождаем номер
			ДокументОбъект.УстановитьНовыйНомер();
			Попытка
				Если ДокументОбъект.Проведен Тогда
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					ДокументОбъект.Записать();
				КонецЕсли;
			Исключение
				ЗаблокированныеДокументы.Добавить(ДокументОбъект.Ссылка);
				
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Перенумерация объектов'"), УровеньЖурналаРегистрации.Ошибка,
					ДокументОбъект.Метаданные(), ДокументОбъект, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				Отказ = Истина;
			КонецПопытки;
		КонецПопытки;
		Если Не Отказ Тогда
			Перенумерованные.Добавить(Документ.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Документ Из ИзменяемыеДокументы.НайтиСтроки(Новый Структура("НомерИзменен", Ложь)) Цикл
		Если ЗаблокированныеДокументы.Найти(Документ.Ссылка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Номер = Документ.НовыйНомер;
		Попытка
			Если ДокументОбъект.Проведен Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ДокументОбъект.Записать();
			КонецЕсли;
			Документ.НомерИзменен = Истина;
		Исключение
			ЗаблокированныеДокументы.Добавить(ДокументОбъект.Ссылка);
		КонецПопытки;
	КонецЦикла;
	
	ИзмененныеДокументы = ИзменяемыеДокументы.Скопировать(ИзменяемыеДокументы.НайтиСтроки(Новый Структура("НомерИзменен", Истина)), "Ссылка").ВыгрузитьКолонку("Ссылка");
	НеизмененныеДокументы = ИзменяемыеДокументы.Скопировать(ИзменяемыеДокументы.НайтиСтроки(Новый Структура("НомерИзменен", Ложь)), "Ссылка").ВыгрузитьКолонку("Ссылка");
	
	Результат = Новый Структура;
	Результат.Вставить("ИзмененныеДокументы", ИзмененныеДокументы);
	Результат.Вставить("НеизмененныеДокументы", НеизмененныеДокументы);
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

#КонецЕсли