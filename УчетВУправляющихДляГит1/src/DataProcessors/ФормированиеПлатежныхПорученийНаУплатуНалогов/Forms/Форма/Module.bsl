#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОстатков) Тогда
		Объект.ДатаОстатков = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Объект.Организация);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если НЕ ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		УчетДенежныхСредствБП.УстановитьБанковскийСчет(
			Объект.СчетОрганизации, Объект.Организация, ВалютаРегламентированногоУчета);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СпособОплаты) Тогда
		
		Объект.СпособОплаты = ?(ЭтоЮрЛицо,
			Перечисления.СпособыУплатыНалогов.БанковскийПеревод,
			Перечисления.СпособыУплатыНалогов.НаличнымиПоКвитанции);
		
	ИначеЕсли Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.НаличнымиПоКвитанции И ЭтоЮрЛицо Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Уплата налогов и взносов наличными по квитанции возможна только для индивидуальных предпринимателей'"));
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Параметры.Платежи) Тогда
		
		// Таблица остатков передана в параметрах
		Платежи = ПолучитьИзВременногоХранилища(Параметры.Платежи);
		Объект.БухОстатки.Загрузить(Платежи);
		УстановитьОплатуСтрокТаблицы(ЭтотОбъект, Истина);
		ЗаполнитьДобавленныеКолонкиТаблиц();
		
		СозданныеДокументы = СоздатьПлатежныеДокументыНаСервере();
		Если СозданныеДокументы = Неопределено Тогда
			СообщениеОбОшибке = НСтр("ru = 'Платежные документы не созданы'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,,, Отказ);
		КонецЕсли;
		СписокПлатежныхДокументов.ЗагрузитьЗначения(СозданныеДокументы);
		
	ИначеЕсли ЗначениеЗаполнено(Объект.ДатаОстатков) И ЗначениеЗаполнено(Объект.Организация) Тогда
		
		БухОстаткиЗаполнитьНаСервере();
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СчетОрганизации)
		И Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.БанковскийПеревод Тогда
		ВыбранныйСпособОплаты = Объект.СчетОрганизации;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораСпособовОплатыНаСервере();
	
	Если ВыбранныйСпособОплаты = Неопределено И НЕ ЭтоЮрЛицо Тогда
		Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.НаличнымиПоКвитанции;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СписокПлатежныхДокументов.Количество() > 0 Тогда;
		ОткрытьСозданныеДокументы(СписокПлатежныхДокументов.ВыгрузитьЗначения());
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаОстатковПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаОстатков) И ЗначениеЗаполнено(Объект.Организация) Тогда
		БухОстаткиЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаОстатков) И ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетОрганизацииПриИзменении(Элемент)
	
	Объект.СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.БанковскийПеревод");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйСпособОплатыПриИзменении(Элемент)
	
	Если ТипЗнч(ВыбранныйСпособОплаты) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		Объект.СпособОплаты    = ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.БанковскийПеревод");
		Объект.СчетОрганизации = ВыбранныйСпособОплаты;
	Иначе
		Объект.СпособОплаты    = ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.НаличнымиПоКвитанции");
		Объект.СчетОрганизации = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйСпособОплатыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияТекстИнформацииОСпискеЗадачОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьСписокЗадач" Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация", Объект.Организация);
		ОткрытьФорму("ОбщаяФорма.СписокЗадач", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыБухОстатки

&НаКлиенте
Процедура БухОстаткиОплатитьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.БухОстатки.ТекущиеДанные;
	
	СуммаКОплате = СуммаКОплате + ?(ТекущиеДанные.Оплатить, ТекущиеДанные.Сумма, -ТекущиеДанные.Сумма);
	
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиСуммаПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПлатежныеДокументы(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если СуммаКОплате = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Нет остатков, отмеченных для оплаты'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.БухОстатки");
		Возврат;
	КонецЕсли;
	
	АктуализированыРеквизитыПлатежаВБюджет = Ложь;
	СозданныеДокументы = СоздатьПлатежныеДокументыНаСервере(АктуализированыРеквизитыПлатежаВБюджет);
	
	Если АктуализированыРеквизитыПлатежаВБюджет Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Актуализированы коды бюджетной классификации'"),
			"e1cib/data/Справочник.ВидыНалоговИПлатежейВБюджет.Форма.ФормаСписка",
			НСтр("ru = 'Виды налогов'"),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	Если СозданныеДокументы <> Неопределено Тогда;
		ОткрытьСозданныеДокументы(СозданныеДокументы);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиЗаполнить(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		БухОстаткиЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиОтметитьВсе(Команда)
	
	УстановитьОплатуСтрокТаблицы(ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиСнятьВсе(Команда)
	
	УстановитьОплатуСтрокТаблицы(ЭтотОбъект, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	// БухОстаткиВидНалоговогоОбязательства
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "БухОстаткиВидНалоговогоОбязательства");
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", 
		Новый ПолеКомпоновкиДанных("Объект.БухОстатки.ВидНалоговогоОбязательстваПредставление"));

	// БухОстаткиРегистрацияВНалоговомОргане
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "БухОстаткиРегистрацияВНалоговомОргане");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ЭлементУО.Отбор, "Объект.БухОстатки.РегистрацияВНалоговомОргане", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	//Элементы.СпособыОплаты.Доступность  = ЗначениеЗаполнено(Объект.Организация);
	Элементы.ВыбранныйСпособОплаты.Доступность = Элементы.ВыбранныйСпособОплаты.СписокВыбора.Количество() > 1;
	
	Элементы.СчетОрганизации.Видимость = Форма.ЭтоЮрЛицо;
	Элементы.ВыбранныйСпособОплаты.Видимость = Не Форма.ЭтоЮрЛицо;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Объект.Организация);
	
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(
		Объект.СчетОрганизации, Объект.Организация, ВалютаРегламентированногоУчета);
	
	Если Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.НаличнымиПоКвитанции И ЭтоЮрЛицо Тогда
		Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.БанковскийПеревод;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СчетОрганизации) 
		И Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.БанковскийПеревод Тогда
		ВыбранныйСпособОплаты = Объект.СчетОрганизации;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораСпособовОплатыНаСервере();
	
	Если ВыбранныйСпособОплаты = Неопределено И НЕ ЭтоЮрЛицо Тогда
		Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.НаличнымиПоКвитанции;
	КонецЕсли;
	
	БухОстаткиЗаполнитьНаСервере();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораСпособовОплатыНаСервере()
	
	СписокВыбора = Элементы.ВыбранныйСпособОплаты.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если ЭтоЮрЛицо Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		БанковскиеСчетаОрганизации = Справочники.БанковскиеСчета.БанковскиеСчетаОрганизации(
			Объект.Организация, ВалютаРегламентированногоУчета);
		
		Если БанковскиеСчетаОрганизации.Количество() = 1 Тогда
			БанковскийСчет = БанковскиеСчетаОрганизации[0];
			СписокВыбора.Добавить(БанковскийСчет.Ссылка, НСтр("ru = 'С банковского счета'"));
		Иначе
			ШаблонПредставления = НСтр("ru = 'С банковского счета %1'");
			Для Каждого БанковскийСчет Из БанковскиеСчетаОрганизации Цикл
				СписокВыбора.Добавить(БанковскийСчет.Ссылка, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонПредставления, БанковскийСчет.Представление));
			КонецЦикла;
		КонецЕсли;
		
		СписокВыбора.Добавить(Неопределено, НСтр("ru = 'Наличными по квитанции'"));
		
	КонецЕсли;
	
	Если СписокВыбора.НайтиПоЗначению(ВыбранныйСпособОплаты) = Неопределено Тогда
		ВыбранныйСпособОплаты = Справочники.БанковскиеСчета.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура БухОстаткиЗаполнитьНаСервере()
	
	Платежи = Обработки.ФормированиеПлатежныхПорученийНаУплатуНалогов.ОстаткиНаСчетах68и69(
		Объект.Организация, Объект.ДатаОстатков);
		
	Объект.БухОстатки.Загрузить(Платежи);
	
	УстановитьОплатуСтрокТаблицы(ЭтотОбъект, Истина);
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Для Каждого СтрокаТаблицы Из Объект.БухОстатки Цикл
		
		ВидыОбязательств = Перечисления.ВидыПлатежейВГосБюджет.СписокВидовНалоговыхОбязательств(
			СтрокаТаблицы.Налог, Объект.ДатаОстатков);
		ВидОбязательстваВСписке = ВидыОбязательств.НайтиПоЗначению(СтрокаТаблицы.ВидНалоговогоОбязательства);
		Если ВидОбязательстваВСписке = Неопределено Тогда
			СтрокаТаблицы.ВидНалоговогоОбязательства = ВидыОбязательств[0].Значение;
			СтрокаТаблицы.ВидНалоговогоОбязательстваПредставление = ВидыОбязательств[0].Представление;
		Иначе
			СтрокаТаблицы.ВидНалоговогоОбязательстваПредставление = ВидОбязательстваВСписке.Представление;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОплатуСтрокТаблицы(Форма, ЗначениеОтметки)
	
	Для каждого СтрокаТаблицы Из Форма.Объект.БухОстатки Цикл
		СтрокаТаблицы.Оплатить = ЗначениеОтметки;
	КонецЦикла;
	
	ОбновитьИтоги(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Форма.СуммаКОплате = 0;
	Для каждого СтрокаТаблицы Из Форма.Объект.БухОстатки Цикл
		Если СтрокаТаблицы.Оплатить Тогда
			Форма.СуммаКОплате = Форма.СуммаКОплате + СтрокаТаблицы.Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СоздатьПлатежныеДокументыНаСервере(АктуализированыРеквизитыПлатежаВБюджет = Неопределено)
	
	Отбор = Новый Структура("Оплатить", Истина);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация",     Объект.Организация);
	СтруктураПараметров.Вставить("СчетОрганизации", Объект.СчетОрганизации);
	СтруктураПараметров.Вставить("СпособОплаты",    Объект.СпособОплаты);
	СтруктураПараметров.Вставить("Платежи",
		ПоместитьВоВременноеХранилище(Объект.БухОстатки.Выгрузить(Отбор), УникальныйИдентификатор));
	
	Возврат Обработки.ФормированиеПлатежныхПорученийНаУплатуНалогов.СоздатьПлатежныеДокументы(
		СтруктураПараметров, АктуализированыРеквизитыПлатежаВБюджет);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьСозданныеДокументы(СозданныеДокументы)
	
	Если СозданныеДокументы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПервыйДокумент = СозданныеДокументы[0];
	ТипСозданныхДокументов = ТипЗнч(ПервыйДокумент);
	
	ОповеститьОбИзменении(ТипСозданныхДокументов);
	
	Если СозданныеДокументы.Количество() = 1 Тогда
		
		ПоказатьЗначение(, ПервыйДокумент);
		
	Иначе
		
		Отбор = Новый Структура;
		Отбор.Вставить("Организация", Объект.Организация);
		
		Если ТипСозданныхДокументов = Тип("ДокументСсылка.ПлатежноеПоручение") Тогда
			Отбор.Вставить("СчетОрганизации", Объект.СчетОрганизации);
			ИмяФормыСписка = "Документ.ПлатежноеПоручение.ФормаСписка";
		ИначеЕсли ТипСозданныхДокументов = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
			ИмяФормыСписка = "Документ.РасходныйКассовыйОрдер.ФормаСписка";
		Иначе
			Возврат;
		КонецЕсли;
		
		СписокДокументов = Новый СписокЗначений;
		СписокДокументов.ЗагрузитьЗначения(СозданныеДокументы);
		СписокВыделения = Новый Структура("Ссылка", СписокДокументов);
		ПараметрыФормы = Новый Структура("Отбор, ТекущаяСтрока, СписокВыделения", Отбор, ПервыйДокумент, СписокВыделения);
		ОткрытьФорму(ИмяФормыСписка, ПараметрыФормы, ЭтотОбъект, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
