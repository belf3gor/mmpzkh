////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Параметры.Платежи) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Объект.Организация     = Параметры.Организация;
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(Объект.СчетОрганизации, Объект.Организация, ВалютаРегламентированногоУчета);
	
	Объект.СпособОплаты    = Параметры.СпособОплаты;
	
	Декларация             = Параметры.Декларация;
	ПериодСобытия          = Параметры.ПериодСобытия;
	Правило		           = Параметры.Правило;
	ДатаДекларации         = Параметры.ДатаДекларации;
	ОписаниеДействия       = Параметры.ОписаниеДействия;
	ПоказательПериода      = Параметры.ПоказательПериода;
	ВидНалога              = Параметры.ВидНалога;
	
	Платежи.Загрузить(ПолучитьИзВременногоХранилища(Параметры.Платежи));
	
	Заголовок = ОписаниеДействия + " - " + Объект.Организация.НаименованиеСокращенное;
	
	ЗаполнитьНаименованияБюджетнойКлассификации();
	
	ОбновитьИзображениеКалендаря();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПлатежныйДокумент_УплатаНалогов" Тогда
		Если Параметр.ПоказательПериода = ПоказательПериода И Параметр.ДокументОснование = Декларация Тогда
			Отбор = Новый Структура("КБК, ОКАТО");
			ЗаполнитьЗначенияСвойств(Отбор, Параметр);
			НайденныеПлатежи = Платежи.НайтиСтроки(Отбор);
			Если НайденныеПлатежи.Количество() = 1 Тогда
				Платеж = НайденныеПлатежи[0];
				Платеж.ПлатежноеПоручение = Параметр.Ссылка;
				Платеж.Оплачено           = Параметр.Оплачено;
				Платеж.Сумма              = Параметр.Сумма;
				НомерКонтейнера = ЗадачиБухгалтераКлиентСервер.НомерКонтейнера(Платеж.ПолучитьИдентификатор());
				ЗаполнитьСтатус(ЭтаФорма, НомерКонтейнера, Платеж);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьПлатежныйДокумент(Команда)
	
	Идентификатор = ЗадачиБухгалтераКлиентСервер.Идентификатор(Команда.Имя);
	Если Идентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФормыПлатежногоДокумента = ?(Объект.СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.НаличнымиПоКвитанции"),
		"Документ.РасходныйКассовыйОрдер.ФормаОбъекта", "Документ.ПлатежноеПоручение.ФормаОбъекта");
		
	ОткрытьФорму(ИмяФормыПлатежногоДокумента, ПараметрыФормыПлатежногоДокумента(Идентификатор));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Отрисовка формы

&НаСервере
Процедура ОбновитьИзображениеКалендаря()
	
	// Заполним контейнер данными событий
	Для Каждого Платеж Из Платежи Цикл
		
		НомерКонтейнера = ЗадачиБухгалтераКлиентСервер.НомерКонтейнера(Платеж.ПолучитьИдентификатор());
		
		// Обеспечим контейнер
		Если Элементы.Найти("Событие" + НомерКонтейнера) = Неопределено Тогда
			КопироватьЭлементСПодчиненными(ЭтаФорма, Элементы.Событие, Элементы.События, НомерКонтейнера);
		КонецЕсли;
		
		ОформитьСобытие(Платеж, НомерКонтейнера);
		
		Элементы["Событие" + НомерКонтейнера].Видимость = Истина;
		
	КонецЦикла;
	
	// СуммаВсего
	Элемент = Элементы["СуммаВсего"];
	Элемент.Заголовок = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Платежи.Итог("Сумма"), , , " "); // ЧРГ=' '
	
	// Уберем лишние контейнеры
	Элементы.Событие.Видимость = Ложь;
	КУдалению = Новый Массив;
	Для Каждого Контейнер Из Элементы.События.ПодчиненныеЭлементы Цикл
		Идентификатор = ЗадачиБухгалтераКлиентСервер.Идентификатор(Контейнер.Имя);
		Если Идентификатор = Неопределено Тогда
			// Это шаблон
			Продолжить;
		КонецЕсли;
		Если Платежи.НайтиПоИдентификатору(Идентификатор) = Неопределено Тогда
			КУдалению.Добавить(Контейнер);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент Из КУдалению Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОформитьСобытие(Событие, Номер)
	
	// Описание
	Элемент = Элементы["Действие" + Номер];
	Элемент.Заголовок = Событие.Наименование;
	
	// ОКАТО
	Элемент = Элементы["ОКАТО" + Номер];
	Элемент.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1: %2'"),
		ПлатежиВБюджетКлиентСервер.ЗаголовокКодаТерритории(),
		Событие.ОКАТО);
	
	// Сумма
	Элемент = Элементы["Сумма" + Номер];
	Элемент.Заголовок = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Событие.Сумма, , , " "); // ЧРГ=' '
	
	// Статус
	ЗаполнитьСтатус(ЭтаФорма, Номер, Событие);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаименованияБюджетнойКлассификации()
	
	Для Каждого Платеж Из Платежи Цикл
		
		Если ЗначениеЗаполнено(Платеж.ВидНалога) Тогда
			// Вид налога по декларации
			Платеж.Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоВиду(Платеж.ВидНалога);
		ИначеЕсли ЗначениеЗаполнено(ВидНалога) Тогда
			// Вид налога по коду задачи
			Платеж.Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоВиду(ВидНалога);
		ИначеЕсли Не ПустаяСтрока(Платеж.КБК) Тогда
			Платеж.Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоКБК(Платеж.КБК);
		КонецЕсли;
		
		Если ПустаяСтрока(Платеж.КБК) Тогда
			// Декларация без кода КБК
			Платеж.КБК = Справочники.ВидыНалоговИПлатежейВБюджет.КБК(Платеж.Налог, , ПериодСобытия);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Платеж.Налог) Тогда
			Платеж.Наименование = Строка(Платеж.Налог);
		Иначе
			
			ЭталонныйКБК = ПлатежиВБюджетКлиентСервер.ШаблонКБК(Платеж.КБК);
			ОписаниеКБК  = Справочники.ВидыНалоговИПлатежейВБюджет.НайтиКодДоходаБюджета(
				ЭталонныйКБК, Год(ОбщегоНазначения.ТекущаяДатаПользователя()));
				
			Если Не ПустаяСтрока(ОписаниеКБК.КраткоеНаименование) Тогда
				Платеж.Наименование = ОписаниеКБК.КраткоеНаименование;
			ИначеЕсли Не ПустаяСтрока(ОписаниеКБК.Наименование) Тогда
				Платеж.Наименование = ОписаниеКБК.Наименование;
			Иначе
				Платеж.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Платеж по КБК %1'"), Платеж.КБК);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСтатус(Форма, НомерКонтейнера, Событие)
	
	Элемент = Форма.Элементы["Статус" + НомерКонтейнера];
	Если Не ЗначениеЗаполнено(Событие.ПлатежноеПоручение) Тогда
		Элемент.Заголовок = "";
	ИначеЕсли Не Событие.Оплачено Тогда
		Элемент.Заголовок = НСтр("ru = 'Подготовлен'");
	Иначе
		Элемент.Заголовок = НСтр("ru = 'Оплачен'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КопироватьЭлементСПодчиненными(Форма, Источник, Владелец, Номер)
	
	ТипИсточника = ТипЗнч(Источник);
	Приемник = Форма.Элементы.Добавить(Источник.Имя + Номер, ТипИсточника, Владелец);
	
	Если ТипИсточника = Тип("ГруппаФормы") Тогда
		Приемник.Вид = Источник.Вид;
		ЗаполнитьЗначенияСвойств(Приемник, Источник, , "Имя,ПутьКДаннымЗаголовка,ПодчиненныеЭлементы");
		Для Каждого ПодчиненныйЭлемент Из Источник.ПодчиненныеЭлементы Цикл
			КопироватьЭлементСПодчиненными(Форма, ПодчиненныйЭлемент, Приемник, Номер);
		КонецЦикла;
	ИначеЕсли ТипИсточника = Тип("КнопкаФормы") Тогда
		ИмяКоманды = Источник.ИмяКоманды + Номер;
		Если Форма.Команды.Найти(ИмяКоманды) = Неопределено Тогда
			НоваяКоманда = Форма.Команды.Добавить(ИмяКоманды);
			ЗаполнитьЗначенияСвойств(НоваяКоманда, Форма.Команды[Источник.ИмяКоманды]);
		КонецЕсли;
		Приемник.ИмяКоманды = ИмяКоманды;
		ЗаполнитьЗначенияСвойств(Приемник, Источник, , "Имя, ИмяКоманды");
	Иначе
		Приемник.Вид = Источник.Вид;
		ЗаполнитьЗначенияСвойств(Приемник, Источник, , "Имя");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Создание платежных документов

&НаСервере
Функция ПараметрыФормыПлатежногоДокумента(Идентификатор)
	
	СтрокаПлатежа = Платежи.НайтиПоИдентификатору(Идентификатор);
	
	Если СтрокаПлатежа = Неопределено Тогда
		Возврат Новый Структура;
	КонецЕсли;
	
	Возврат ПараметрыФормыПлатежногоДокументаПоСтроке(СтрокаПлатежа);
	
КонецФункции

&НаСервере
Функция ПараметрыФормыПлатежногоДокументаПоСтроке(СтрокаПлатежа)
	
	Если ЗначениеЗаполнено(СтрокаПлатежа.ПлатежноеПоручение) Тогда
		Возврат Новый Структура("Ключ", СтрокаПлатежа.ПлатежноеПоручение);
	КонецЕсли;
	
	// Параметры формы для заполнения нового платежного документа
	
	ОписаниеПлатежа = ВыполнениеЗадачБухгалтера.НовыйОписаниеПлатежа(); // Передаем параметры в структуре, потому что их много
	ОписаниеПлатежа.Период                     = ПериодСобытия;
	ОписаниеПлатежа.Налог                      = СтрокаПлатежа.Налог;
	ОписаниеПлатежа.ВидНалоговогоОбязательства = ?(ЗначениеЗаполнено(СтрокаПлатежа.ВидНалоговогоОбязательства), СтрокаПлатежа.ВидНалоговогоОбязательства, Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ОписаниеПлатежа.Организация                = Объект.Организация;
	ОписаниеПлатежа.СпособОплаты               = Объект.СпособОплаты;
	ОписаниеПлатежа.ПоказательПериода          = ПоказательПериода;
	ОписаниеПлатежа.Аванс                      = СтрокаПлатежа.Аванс;
	ОписаниеПлатежа.КБК                        = СтрокаПлатежа.КБК;
	ОписаниеПлатежа.ОКАТО                      = СтрокаПлатежа.ОКАТО;
	ОписаниеПлатежа.КодНалоговогоОргана        = СтрокаПлатежа.КодНалоговогоОргана;
	ОписаниеПлатежа.Сумма                      = СтрокаПлатежа.Сумма;
	ОписаниеПлатежа.Описание                   = ?(ЗначениеЗаполнено(СтрокаПлатежа.НазначениеПлатежа), СтрокаПлатежа.НазначениеПлатежа, ОписаниеДействия);
	ОписаниеПлатежа.Декларация                 = Декларация;
	ОписаниеПлатежа.ДатаДекларации             = ДатаДекларации;
	
	ЗначенияЗаполнения = ВыполнениеЗадачБухгалтера.ЗначенияЗаполненияПлатежногоДокумента(ОписаниеПлатежа);
	Возврат Новый Структура("ЗначенияЗаполнения, ПериодСобытия, Правило", ЗначенияЗаполнения, ПериодСобытия, Правило);
	
КонецФункции

&НаСервере
Функция СформироватьНаСервере()
	
	СозданныеДокументы = Новый СписокЗначений; //для отбора в списке нужен список
	
	Для каждого СтрокаПлатежа Из Платежи Цикл
		Если ЗначениеЗаполнено(СтрокаПлатежа.ПлатежноеПоручение) Тогда
			СозданныеДокументы.Добавить(СтрокаПлатежа.ПлатежноеПоручение);
			Продолжить;
		КонецЕсли;
		
		Результат = Неопределено;
		
		Если Объект.СпособОплаты = Перечисления.СпособыУплатыНалогов.НаличнымиПоКвитанции Тогда
			
			ПараметрыФормы = ПараметрыФормыПлатежногоДокументаПоСтроке(СтрокаПлатежа);
			ДокументОбъект = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
			ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийРКО.УплатаНалога;
			ДокументОбъект.Заполнить(ПараметрыФормы.ЗначенияЗаполнения);
			
			ВыполнениеЗадачБухгалтера.УстановитьСвойстваПлатежаПриРегистрации(ДокументОбъект, Правило, ПериодСобытия);
			
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				Результат = ДокументОбъект.Ссылка;
			Исключение
				ТекстСообщения = НСтр("ru = 'Не сформирован расходный кассовый ордер на %1 руб.%2'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, СтрокаПлатежа.Сумма, Символы.ПС + Символы.Таб + СтрокаПлатежа.НазначениеПлатежа);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				ТекстОшибки = НСтр("ru = 'Не удалось создать документ.
                                    |%1'");
				ОписаниеОшибки = СтрШаблон(ТекстОшибки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(
					ИмяСобытияВЖурналеРегистрации(), 
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Документы.РасходныйКассовыйОрдер,
					,
					ОписаниеОшибки);
			КонецПопытки;
		Иначе
			ПараметрыФормы = ПараметрыФормыПлатежногоДокументаПоСтроке(СтрокаПлатежа);
			ДокументОбъект = Документы.ПлатежноеПоручение.СоздатьДокумент();
			ДокументОбъект.Заполнить(ПараметрыФормы.ЗначенияЗаполнения);
			
			ВыполнениеЗадачБухгалтера.УстановитьСвойстваПлатежаПриРегистрации(ДокументОбъект, Правило, ПериодСобытия);
			
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				Результат = ДокументОбъект.Ссылка;
			Исключение
				ТекстСообщения = НСтр("ru = 'Не сформировано платежное поручение на %1 руб.%2'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, СтрокаПлатежа.Сумма, Символы.ПС + Символы.Таб + СтрокаПлатежа.НазначениеПлатежа);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				ТекстОшибки = НСтр("ru = 'Не удалось создать документ.
                                    |%1'");
				ОписаниеОшибки = СтрШаблон(ТекстОшибки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(
					ИмяСобытияВЖурналеРегистрации(), 
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Документы.ПлатежноеПоручение,
					,
					ОписаниеОшибки);
			КонецПопытки;
			
		КонецЕсли;
		Если ЗначениеЗаполнено(Результат) Тогда
			СтрокаПлатежа.ПлатежноеПоручение = Результат;
			СозданныеДокументы.Добавить(СтрокаПлатежа.ПлатежноеПоручение);
			
			НомерКонтейнера = ЗадачиБухгалтераКлиентСервер.НомерКонтейнера(СтрокаПлатежа.ПолучитьИдентификатор());
			// Обеспечим контейнер
			Если Элементы.Найти("Событие" + НомерКонтейнера) = Неопределено Тогда
				КопироватьЭлементСПодчиненными(ЭтаФорма, Элементы.Событие, Элементы.События, НомерКонтейнера);
			КонецЕсли;
			ОформитьСобытие(СтрокаПлатежа, НомерКонтейнера);
			Элементы["Событие" + НомерКонтейнера].Видимость = Истина;
			
		КонецЕсли;
	КонецЦикла;
	
	РегистрыСведений.ДокументыИнтеграцииСБанком.ОтправитьОповещениеОбИзмененииПоДокументамВФоне(СозданныеДокументы);
	
	Возврат СозданныеДокументы;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяСобытияВЖурналеРегистрации()

	Возврат НСтр("ru = 'Формирование платежных поручений на уплату налогов'", ОбщегоНазначения.КодОсновногоЯзыка());

КонецФункции

&НаКлиенте
Процедура Сформировать(Команда)
	
	ПараметрКоманды = СформироватьНаСервере();

	ИмяФормыПлатежногоДокумента = ?(Объект.СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.НаличнымиПоКвитанции"),
		"Документ.РасходныйКассовыйОрдер.ФормаСписка", "Документ.ПлатежноеПоручение.ФормаСписка");
	
	ЗначенияОтборов = Новый Структура;
	ЗначенияОтборов.Вставить("Ссылка", ПараметрКоманды);
	
	ПараметрыФормы = Новый Структура("СписокВыделения", ЗначенияОтборов);
	
	ОткрытьФорму(ИмяФормыПлатежногоДокумента, ПараметрыФормы, ЭтотОбъект, Истина);
	
КонецПроцедуры

