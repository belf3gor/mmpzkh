
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РезультатПроверкиНастроек = Параметры.РезультатПроверки;
	
	// Если база файловая, то не показываем ссылки для настроек, так как в них нет смысла.
	// Настраивать можно только для режима клиент-сервер.
	ПоказыватьСсылки = РезультатПроверкиНастроек.РежимРаботы;
	
	ОтобразитьРезультатПроверки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПроверитьНастройкиРегламентныхЗаданий" Тогда
		
		НачатьПроверкуНастроекРегламентныхЗаданий();
		ОжидатьЗавершенияПроверкиНастроекРегламентныхЗаданий();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияЗаголовокОбработкаНавигационнойСсылки(
	Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СсылкаНаИнструкцию = ОбменСКонтрагентамиСлужебныйКлиент.СсылкаНаИнструкциюПоНастройкеЭДО();
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаИнструкцию);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСертификатОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуСертификатов();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПарольСертификатаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуСертификатов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсказкаПроверятьПодписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	АктивироватьНастройкуПроверкиПодписиНаСервере();
	ОжидатьЗавершенияПроверкиНастроекРегламентныхЗаданий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсказкаСоздаватьПодписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	АктивироватьНастройкуСозданияПодписиНаСервере();
	ОжидатьЗавершенияПроверкиНастроекРегламентныхЗаданий();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьЗадание(Команда)
	
	Оповестить("ПомощникНастроекРегламентныхЗаданийВключитьЗадание", РезультатПроверкиНастроек.Операция);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НачатьПроверкуНастроекРегламентныхЗаданий()
	
	ПроверкаНастроек = Обработки.ПанельАдминистрированияЭДО.НачатьПроверкуНастроекРегламентныхЗаданий(
		УникальныйИдентификатор, Истина, РезультатПроверкиНастроек.Операция);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершенияПроверкиНастроекРегламентныхЗаданий()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru='Проверяется возможность включения регламентного задания.'");
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатПроверкиНастроекРегламентныхЗаданий", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ПроверкаНастроек, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатПроверкиНастроекРегламентныхЗаданий(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус <> "Выполнено" Тогда
		
		Если Результат.Статус = "Ошибка" Тогда
			
			ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(
				НСтр("ru='Автоматическая проверка настроек регламентных заданий'"),
				Результат.ПодробноеПредставлениеОшибки,
				Результат.КраткоеПредставлениеОшибки);
			
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	РезультатПроверкиНастроек = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	ОтобразитьРезультатПроверки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСертификатов()
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияЭДО.Форма.СписокСертификатов",,
		ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьРезультатПроверки()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("отправка",    НСтр("ru='Автоматическая отправка документов'"));
	Заголовки.Вставить("получение",   НСтр("ru='Автоматическое получение документов'"));
	Заголовки.Вставить("поумолчанию", НСтр("ru='Автоматическая отправка/получение документов'"));
	
	Заголовок = Заголовки[НРег(РезультатПроверкиНастроек.Операция)];
	
	Если РезультатПроверкиНастроек.Успех Тогда
		ЗаголовокПодсказка = НСтр("ru='Настройки для автоматической отправки/получения выполнены.'");
	Иначе
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru='Для работы с электронными документами в автоматическом режиме требуется дополнительная настройка.'"));
		Строки.Добавить(" ");
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Узнать больше'"),,,, "ПерейтиВСправкуВИнтернете"));
		ЗаголовокПодсказка = Новый ФорматированнаяСтрока(Строки);
	КонецЕсли;
	
	Элементы.ДекорацияЗаголовок.Заголовок = ЗаголовокПодсказка;
	Элементы.ВключитьЗадание.Доступность  = РезультатПроверкиНастроек.Успех;
	
	// Режим работы.
	КартинкаРежимРаботы = ИндексКартинкиСостояния(РезультатПроверкиНастроек.РежимРаботы);
	Описание = ОписаниеСостояния(Элементы.НадписьРежимРаботы, РезультатПроверкиНастроек.РежимРаботы);
	УстановитьТекстЭлемента(Элементы.НадписьРежимРаботы, Описание);
	
	// Наличие криптопровайдера.
	КартинкаКриптоПровайдер = ИндексКартинкиСостояния(РезультатПроверкиНастроек.ЕстьКриптоПровайдер);
	Описание = ОписаниеСостояния(Элементы.НадписьКриптоПровайдер, РезультатПроверкиНастроек.ЕстьКриптоПровайдер);
	УстановитьТекстЭлемента(Элементы.НадписьКриптоПровайдер, Описание);
	
	// Наличие сертификатов.
	КартинкаСертификат = ИндексКартинкиСостояния(РезультатПроверкиНастроек.ЕстьСертификаты);
	Описание = ОписаниеСостояния(Элементы.НадписьСертификат, РезультатПроверкиНастроек.ЕстьСертификаты);
	УстановитьТекстЭлемента(Элементы.НадписьСертификат, Описание);
	
	// Наличие паролей.
	КартинкаПарольСертификата = ИндексКартинкиСостояния(РезультатПроверкиНастроек.ПаролиСохранены);
	Описание = ОписаниеСостояния(Элементы.НадписьПарольСертификата, РезультатПроверкиНастроек.ПаролиСохранены);
	УстановитьТекстЭлемента(Элементы.НадписьПарольСертификата, Описание);
	
	// Проверка подписи на сервере.
	КартинкаПроверкаПодписи = ИндексКартинкиСостояния(РезультатПроверкиНастроек.ПроверкаПодписи);
	Описание = ОписаниеСостояния(Элементы.НадписьПроверятьПодпись, РезультатПроверкиНастроек.ПроверкаПодписи);
	УстановитьТекстЭлемента(Элементы.НадписьПроверятьПодпись, Описание);
	
	// Создание подписи на сервере.
	КартинкаСозданиеПодписи = ИндексКартинкиСостояния(РезультатПроверкиНастроек.СозданиеПодписи);
	Описание = ОписаниеСостояния(Элементы.НадписьСоздаватьПодпись, РезультатПроверкиНастроек.СозданиеПодписи);
	УстановитьТекстЭлемента(Элементы.НадписьСоздаватьПодпись, Описание);
	
КонецПроцедуры

&НаСервере
Функция ИндексКартинкиСостояния(ИндексСостояния)
	
	// Индекс состояния и индекс картинки в коллекции могут не совпадать, необходимо установить соответствие.
	
	// Индексы состояний.
	// 0 - Блокирующая ошибка.
	// 1 - Неблокирующая ошибка.
	// 2 - Ошибок нет.
	
	Индексы = Новый Соответствие; // состояние - индекс картинки в коллекции
	Индексы.Вставить(0, 2);
	Индексы.Вставить(1, 1);
	Индексы.Вставить(2, 0);
	
	Возврат Индексы[ИндексСостояния];
	
КонецФункции

&НаСервере
Процедура УстановитьТекстЭлемента(Элемент, Описание)
	
	Элемент.Заголовок                      = Описание.Заголовок;
	Элемент.РасширеннаяПодсказка.Заголовок = Описание.Подсказка
	
КонецПроцедуры

&НаСервере
Функция ОписаниеСостояния(ЭлементФормы, ИндексСостояния)
	
	// Индексы состояний.
	// 0 - Блокирующая ошибка.
	// 1 - Неблокирующая ошибка.
	// 2 - Ошибок нет.
	
	ОписаниеСостояний = Новый Соответствие;
	ОписаниеПодсказок = Новый Соответствие;
	
	ОписаниеПодсказок.Вставить(2, ""); // если нет ошибок, то подсказку не выводим
	
	Если ЭлементФормы = Элементы.НадписьРежимРаботы Тогда
		
		ОписаниеСостояний.Вставить(0, НСтр("ru='Информационная база должна работать в режиме клиент-сервер'"));
		ОписаниеПодсказок.Вставить(0, НСтр("ru='Работа регламентных заданий по отправке и получению документов поддерживается только в режиме клиент-сервер.'"));
		
		ОписаниеСостояний.Вставить(2, НСтр("ru='Информационная база работает в режиме клиент-сервер'"));
		
	ИначеЕсли ЭлементФормы = Элементы.НадписьКриптоПровайдер Тогда
		
		ОписаниеСостояний.Вставить(0, НСтр("ru='Необходимо установить криптопровайдер'"));
		ОписаниеПодсказок.Вставить(0, НСтр("ru='Криптопровайдер должен быть установлен на сервере.'"));
		
		ОписаниеСостояний.Вставить(2, НСтр("ru='Криптопровайдер установлен на сервере'"));
		
	ИначеЕсли ЭлементФормы = Элементы.НадписьСертификат Тогда
		
		ОписаниеСостояний.Вставить(0, НСтр("ru='Нет доступных сертификатов'"));
		ОписаниеПодсказок.Вставить(0, НСтр("ru='По каждому профилю настроек ЭДО должен быть сертификат, установленный на сервере. Сертификат должен быть установлен для пользователя, от имени которого работает сервер 1с.'"));
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru='Не у всех профилей есть доступные'"));
		Строки.Добавить(" ");
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='сертификаты'"),,,, ?(ПоказыватьСсылки, "ОткрытьФормуСертификатов", "")));
		Строки.Добавить(" ");
		Строки.Добавить(НСтр("ru='на сервере.'"));
		
		ОписаниеСостояний.Вставить(1, Новый ФорматированнаяСтрока(Строки));
		ОписаниеПодсказок.Вставить(1, НСтр("ru='Автоматически получать документы можно только по тем профилям настроек ЭДО, по которым есть сертификат. Сертификат должен быть установлен для пользователя, от имени которого работает сервер 1с.'"));
		
		ОписаниеСостояний.Вставить(2, НСтр("ru='Есть доступные сертификаты на сервере'"));
		
	ИначеЕсли ЭлементФормы = Элементы.НадписьПарольСертификата Тогда
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru='Пароли'"));
		Строки.Добавить(" ");
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='сертификатов'"),,,, ?(ПоказыватьСсылки, "ОткрытьФормуСертификатов", "")));
		Строки.Добавить(" ");
		Строки.Добавить(НСтр("ru='не сохранены'"));
		
		ОписаниеСостояний.Вставить(0, Новый ФорматированнаяСтрока(Строки));
		ОписаниеПодсказок.Вставить(0, НСтр("ru='Пароль для сертификата должен быть сохранен без привязки к пользователю и не должен быть пустым.'"));
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru='Пароли сохранены не для всех'"));
		Строки.Добавить(" ");
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='сертификатов'"),,,, ?(ПоказыватьСсылки, "ОткрытьФормуСертификатов", "")));
		
		ОписаниеСостояний.Вставить(1, Новый ФорматированнаяСтрока(Строки));
		ОписаниеПодсказок.Вставить(1, НСтр("ru='Отправлять/получать документы автоматически можно только по сертификатам с сохраненным паролем.'"));
		
		ОписаниеСостояний.Вставить(2, НСтр("ru='Пароли сертификатов сохранены'"));
		
	ИначеЕсли ЭлементФормы = Элементы.НадписьПроверятьПодпись Тогда
		
		ОписаниеСостояний.Вставить(0, НСтр("ru='Проверка подписей и сертификатов на сервере'"));
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru='Проверка подписей и сертификатов должна происходить на сервере.'") + Символы.ПС);
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Нажмите, чтобы активировать'"),,,, ?(ПоказыватьСсылки, "АктивироватьПроверкуНаСервере", "")));
		ОписаниеПодсказок.Вставить(0, Новый ФорматированнаяСтрока(Строки));
		
		
		ОписаниеСостояний.Вставить(2, НСтр("ru='Проверка подписей и сертификатов выполняется на сервере'"));
		
	ИначеЕсли ЭлементФормы = Элементы.НадписьСоздаватьПодпись Тогда
		
		ОписаниеСостояний.Вставить(0, НСтр("ru='Подпись и шифрование на сервере'"));
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru='Подпись и шифрование должно происходить на сервере.'") + Символы.ПС);
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Нажмите, чтобы активировать'"),,,, ?(ПоказыватьСсылки, "АктивироватьПодписьНаСервере", "")));
		ОписаниеПодсказок.Вставить(0, Новый ФорматированнаяСтрока(Строки));
		
		ОписаниеСостояний.Вставить(2, НСтр("ru='Подпись и шифрование выполняется на сервере'"));
		
	КонецЕсли;
	
	Возврат
		Новый Структура("Заголовок, Подсказка", ОписаниеСостояний[ИндексСостояния], ОписаниеПодсказок[ИндексСостояния]);
	
КонецФункции

&НаСервере
Процедура АктивироватьНастройкуПроверкиПодписиНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Константы.ПроверятьЭлектронныеПодписиНаСервере.Установить(Истина);
	ОбновитьПовторноИспользуемыеЗначения();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	НачатьПроверкуНастроекРегламентныхЗаданий();
	
КонецПроцедуры

&НаСервере
Процедура АктивироватьНастройкуСозданияПодписиНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Константы.СоздаватьЭлектронныеПодписиНаСервере.Установить(Истина);
	ОбновитьПовторноИспользуемыеЗначения();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	НачатьПроверкуНастроекРегламентныхЗаданий();
	
КонецПроцедуры

#КонецОбласти