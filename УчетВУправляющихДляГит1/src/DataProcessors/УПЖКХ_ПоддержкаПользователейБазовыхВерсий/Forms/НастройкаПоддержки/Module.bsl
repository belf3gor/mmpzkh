
#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Процедура сохраняет регистрационный номер программного продукта.
//
Процедура СохранитьРегистрационныйНомерПрограммногоПродуктаНаСервере(РегистрационныйНомер)
	
	УПЖКХ_ТиповыеМетодыСервер.СохранитьРегистрационныйНомерПрограммногоПродукта(РегистрационныйНомер);
	
КонецПроцедуры

&НаСервереБезКонтекста
// Функция проверяет наличие действующей подписки.
//
Функция ПроверитьНаличиеДействующейПодпискиИТСОтраслевойНаСервере(РегистрационныйНомер)
	
	Возврат УПЖКХ_ПоддержкаПользователейБазовыхВерсийСервер.ПроверитьНаличиеДействующейПодпискиИТСОтраслевой(РегистрационныйНомер);
	
КонецФункции

&НаКлиенте
// Процедура обновляет текст состояния подписки ИТС.
//
Процедура ПоказатьТекстРезультатаПроверки()
	
	Если ПустаяСтрока(РегистрационныйНомер) Тогда
		ТекстСостоянияПодписки = "";
	ИначеЕсли РезультатПроверки = Истина Тогда
		ТекстСостоянияПодписки = "Подписка ИТС Отраслевой оформлена.";
	ИначеЕсли РезультатПроверки = Ложь Тогда
		ТекстСостоянияПодписки = "Подписка ИТС Отраслевой не оформлена.";
	Иначе
		ТекстСостоянияПодписки = "При получении сведений о подписке ИТС Отраслевой возникла ошибка.
								 |Возможно, отсутствует соединение с интернетом.";
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстСостоянияПодписки) Тогда
		ПоказатьПредупреждение(, ТекстСостоянияПодписки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Получение регистрационного номера из сохраненной настройки.
	РегистрационныйНомер = УПЖКХ_ТиповыеМетодыСервер.РегистрационныйНомерПрограммногоПродукта();
	
	Если ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Такси Тогда
		Элементы.ГруппаЗаголовкаРегНомера.Отображение = ОтображениеОбычнойГруппы.Нет;
		Элементы.ГруппаКонтентаРегНомер.Отображение = ОтображениеОбычнойГруппы.Нет;
	КонецЕсли;
	
	Если Параметры.Свойство("РезультатПроверки") Тогда
		РезультатПроверки = Параметры.РезультатПроверки;
	КонецЕсли;
	
	// Если регистрационный номер не определен или известен результат проверки,
	// то проверку при открытии формы не выполняем.
	ПроверитьНаличиеПодпискиПриОткрытии = (Не Параметры.Свойство("РезультатПроверки") И Не ПустаяСтрока(РегистрационныйНомер));
	Если ПроверитьНаличиеПодпискиПриОткрытии Тогда
		РезультатПроверки = ПроверитьНаличиеДействующейПодпискиИТСОтраслевойНаСервере(РегистрационныйНомер);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПоказатьТекстРезультатаПроверки", 0.6, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "ПроверитьНаличиеДействующейПодпискиИТСОтраслевой".
//
Процедура ПроверитьНаличиеДействующейПодпискиИТСОтраслевой(Команда)
	
	// Проверка невозможна без заполненного номера.
	Если ПустаяСтрока(РегистрационныйНомер) Тогда
		РезультатПроверки = Неопределено;
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан регистрационный номер продукта!'"),, "РегистрационныйНомер");
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПроверитьНаличиеДействующейПодпискиИТСОтраслевойНаСервере(РегистрационныйНомер);
	
	ПоказатьТекстРезультатаПроверки();
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "СохранитьНастройки".
//
Процедура СохранитьНастройки(Команда)
	
	Если ПустаяСтрока(РегистрационныйНомер) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьСохранениеНастройкИЗакрытиеФормы", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения, НСтр("ru = 'Регистрационный номер продукта не указан, функциональность, требущая подписки ИТС Отраслевой, будет недоступна!'"));
		Возврат;
	КонецЕсли;
	
	ПродолжитьСохранениеНастройкИЗакрытиеФормы();
	
КонецПроцедуры

&НаКлиенте
// Обработчик завершения предупреждения пользователю.
//
Процедура ПродолжитьСохранениеНастройкИЗакрытиеФормы(Результат = Неопределено) Экспорт
	
	СохранитьРегистрационныйНомерПрограммногоПродуктаНаСервере(РегистрационныйНомер);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти
