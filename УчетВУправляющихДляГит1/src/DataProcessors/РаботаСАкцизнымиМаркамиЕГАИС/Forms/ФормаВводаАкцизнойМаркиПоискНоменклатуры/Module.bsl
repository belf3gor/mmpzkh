
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ТипыНоменклатуры.ЗагрузитьЗначения(Метаданные.ОпределяемыеТипы.Номенклатура.Тип.Типы());
	
	Заголовок = НСтр("ru = 'Сканирование штрихкода'");
	
	АкцизнаяМарка           = Параметры.АкцизнаяМарка;
	АлкогольнаяПродукция    = Параметры.АлкогольнаяПродукция;
	КодАлкогольнойПродукции = Параметры.КодАлкогольнойПродукции;
	Штрихкод                = Параметры.Штрихкод;
	ТипШтрихКода            = Параметры.ТипШтрихКода;
	
	Если ЗначениеЗаполнено(Параметры.ДокументОснование)
		И ЭтоАдресВременногоХранилища(Параметры.АдресДанныхДокументаОснования) Тогда
		
		ДанныеДокументаОснования.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресДанныхДокументаОснования));
		КонтролироватьПоДокументуОснованию = Истина;
		
	КонецЕсли;
	
	ШтрихкодированиеНоменклатурыЕГАИСПереопределяемый.ПравоРегистрацииШтрихкодовНоменклатуры(ПравоРегистрацииШтрихкодовНоменклатурыДоступно);
	
	СброситьРазмерыИПоложениеОкна();
	ПоказатьИнформациюОТребуемыхДействиях();
	
	СобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	СобытияФормЕГАИСПереопределяемый.УстановитьПараметрыВыбораНоменклатуры(ЭтотОбъект, "Номенклатура");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоддерживаемыеТипыПодключаемогоОборудования = "СканерШтрихкода";
	
	ОповещениеПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(
		ОповещениеПриПодключении,
		ЭтотОбъект,
		ПоддерживаемыеТипыПодключаемогоОборудования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОповещениеПриОтключении = Новый ОписаниеОповещения("ОтключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(
		ОповещениеПриОтключении, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СобытияФормИСКлиентПереопределяемый.ОбработкаОповещенияОбработаныНеизвестныеШтрихкоды(
		Новый ОписаниеОповещения("Подключаемый_ОбработаныНеизвестныеШтрихкоды", ЭтотОбъект),
		ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
	СобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Не ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеСобытия = Новый Структура;
	ОписаниеСобытия.Вставить("Источник", Источник);
	ОписаниеСобытия.Вставить("Событие" , Событие);
	ОписаниеСобытия.Вставить("Данные"  , Данные);
	
	Результат = МенеджерОборудованияКлиент.ПолучитьСобытиеОтУстройства(ОписаниеСобытия);
	
	Если Результат <> Неопределено
		И Результат.Источник = "ПодключаемоеОборудование"
		И Результат.ИмяСобытия = "ScanData"
		И Найти(ПоддерживаемыеТипыПодключаемогоОборудования, "СканерШтрихкода") > 0 Тогда
		
		ОбработатьДанныеСканераШтрихкодов(СобытияФормИСКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Результат.Параметр));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипыНоменклатуры.НайтиПоЗначению(ТипЗнч(ВыбранноеЗначение)) <> Неопределено Тогда
		
		Если ВыбранноеЗначение <> Номенклатура
			И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			Номенклатура = ВыбранноеЗначение;
			ПослеВыбораНоменклатуры();
			ПоказатьПредупреждениеНетСопоставленияНоменклатуре();
			ОтключитьОтметкуНезаполненного();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПоясняющийТекстОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "КомандаОткрытьАлкогольнуюПродукциюЕГАИС" Тогда
		
		ПоказатьЗначение(, АлкогольнаяПродукция);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "КомандаЗапроситьАлкогольнуюПродукциюЕГАИС" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Операция",          ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросАлкогольнойПродукции"));
		ПараметрыФормы.Вставить("ИмяПараметра",      "КОД");
		ПараметрыФормы.Вставить("ЗначениеПараметра", КодАлкогольнойПродукции);
		
		ОткрытьФорму(
			"ОбщаяФорма.ФормированиеИсходящегоЗапросаЕГАИС",
			ПараметрыФормы,
			ЭтотОбъект,,,,
			Новый ОписаниеОповещения("ПослеЗакрытияФормыФормированиеИсходящегоЗапроса", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "СкопироватьШтриховойКодВБуферОбмена" Тогда
		
		ИнтеграцияИСКлиент.СкопироватьШтрихКодВБуферОбмена(Элементы.БуферОбмена, Штрихкод);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АлкогольнаяПродукцияПриИзменении(Элемент)
	
	ПриИзмененииАлкогольнойПродукции();
	ПоказатьПредупреждениеНетСопоставленияАлкогольнойПродукции();
	ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ПриИзмененииНоменклатуры();
	ПоказатьПредупреждениеНетСопоставленияНоменклатуре();
	ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	
	ПриИзмененииХарактеристики();
	ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	
	ОпределитьДоступностьГотово(ЭтотОбъект);
	ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОшибкаДобавленияАлкогольнойПродукцииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "СкопироватьШтриховойКодВБуферОбмена" Тогда
		
		ИнтеграцияИСКлиент.СкопироватьШтрихКодВБуферОбмена(Элементы.БуферОбмена, Штрихкод);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ОчиститьСообщения();
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНеТребуетсяУказаниеДополнительныхДанных Тогда
		
		Если Не ЗначениеЗаполнено(Штрихкод) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Штрихкод""'"),,"ШтрихкодНоменклатуры");
			Возврат;
		КонецЕсли;
		
		ОбработатьДанныеСканераШтрихкодов(Новый Структура("Штрихкод, Количество", ШтрихкодНоменклатуры, 1));
		
	Иначе
		
		Результат = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(Штрихкод);
		ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект);
		Результат.Количество = 1;
		
		Если ЗапомнитьВыбор Тогда
			
			ДанныеВыбора = Новый Структура;
			ДанныеВыбора.Вставить("Номенклатура",   Номенклатура);
			ДанныеВыбора.Вставить("Характеристика", Характеристика);
			ДанныеВыбора.Вставить("Серия",          Серия);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ЗапомнитьВыбор", Истина);
			ДополнительныеПараметры.Вставить("ДанныеВыбора", ДанныеВыбора);
			
			Результат.ДополнительныеПараметры = ДополнительныеПараметры;
			
		КонецЕсли;
	
		Закрыть(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтсканироватьШК(Команда)
	
	ОчиститьСообщения();
	
	ШтрихкодированиеИСКлиентПереопределяемый.ПоказатьВводШтрихкода(
		Новый ОписаниеОповещения("РучнойВводШтрихкодаЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Штрихкоды

&НаКлиенте
Процедура ОбработатьДанныеСканераШтрихкодов(ДанныеШтрихкода)
	
	Штрихкод = ДанныеШтрихкода.Штрихкод;
	
	ДанныеСопоставления = ПолучитьДанныеПоШтрихкоду(Штрихкод);
	Если ЗначениеЗаполнено(ДанныеСопоставления) Тогда
		
		Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНеТребуетсяУказаниеДополнительныхДанных Тогда
			
			Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаТребуетсяУказаниеДополнительныхДанных;
			ЗаполнитьДанныеФормыПоДаннымСопоставления();
			
		Иначе
			
			Результат = РезультатИзмененияНоменклатурыПоДаннымСканирования(ДанныеСопоставления);
			
			Если Не ПустаяСтрока(Результат) Тогда
				
				ПоказатьПредупреждение(, Результат);
				
			Иначе
				
				ПоказатьПредупреждениеНетСопоставленияАлкогольнойПродукции();
				ПоказатьПредупреждениеНетСопоставленияНоменклатуре();
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если ПравоРегистрацииШтрихкодовНоменклатурыДоступно Тогда
			
			ДанныеШтрихкодаИАлкогольнойПродукции = Новый Структура;
			ДанныеШтрихкодаИАлкогольнойПродукции.Вставить("АлкогольнаяПродукция", АлкогольнаяПродукция);
			ДанныеШтрихкодаИАлкогольнойПродукции.Вставить("Штрихкод",             ДанныеШтрихкода.Штрихкод);
			ДанныеШтрихкодаИАлкогольнойПродукции.Вставить("Количество",           ДанныеШтрихкода.Количество);
			
			ДанныеШтрихкодов = Новый Массив;
			ДанныеШтрихкодов.Добавить(ДанныеШтрихкодаИАлкогольнойПродукции);
			
			АдресДанныхШтрихкодов = ПоместитьВоВременноеХранилище(ДанныеШтрихкодов, УникальныйИдентификатор);
			
			ПодключитьОбработчикОжидания("Подключаемый_ОткрытьФормуРегистрацииШтрихкодовНоменклатуры", 0.1, Истина);
			
		Иначе
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Номенклатура со штрихкодом %1 не найдена'"), Штрихкод));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеФормыПоДаннымСопоставления()
	
	Если Не ЗначениеЗаполнено(АлкогольнаяПродукция) 
		 И ЗначениеЗаполнено(ДанныеСопоставления.АлкогольнаяПродукция) Тогда
		АлкогольнаяПродукция = ДанныеСопоставления.АлкогольнаяПродукция;
	КонецЕсли;
	
	Номенклатура   = ДанныеСопоставления.Номенклатура;
	Элементы.Номенклатура.РежимВыбораИзСписка   = Ложь;
	Элементы.Номенклатура.ТолькоПросмотр        = Истина;
	
	Характеристика = ДанныеСопоставления.Характеристика;
	Элементы.Характеристика.РежимВыбораИзСписка = Ложь;
	Элементы.Характеристика.ТолькоПросмотр      = Истина;
	
	ОпределитьДоступностьСерии();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработаныНеизвестныеШтрихкоды(ДанныеШтрихкодов, ДополнительныеПараметры) Экспорт
	
	Для Каждого ДанныеШтрихкода Из ДанныеШтрихкодов Цикл
		ОбработатьДанныеСканераШтрихкодов(ДанныеШтрихкода);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьФормуРегистрацииШтрихкодовНоменклатуры()
	
	ДанныеШтрихкодов = ПолучитьИзВременногоХранилища(АдресДанныхШтрихкодов);
	
	ШтрихкодированиеНоменклатурыЕГАИСКлиентПереопределяемый.ОткрытьФормуРегистрацииШтрихкодовНоменклатуры(ЭтотОбъект, ДанныеШтрихкодов);
	
КонецПроцедуры

#КонецОбласти

#Область Оборудование

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При отключении оборудования произошла ошибка: ""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоШтрихкоду(Штрихкод)
	
	ДанныеСопоставления = Неопределено;
	ШтрихкодированиеНоменклатурыЕГАИСПереопределяемый.НайтиПоШтрихкоду(ДанныеСопоставления, Штрихкод);
	Возврат ДанныеСопоставления;
	
КонецФункции

#Область ФормированиеНачальнойСтраницы

&НаСервере
Процедура ПоказатьИнформациюОТребуемыхДействиях()
	
	ИспользоватьАкцизныеМарки = Истина;
	Если Не КонтролироватьПоДокументуОснованию Тогда
		Элементы.Серия.Видимость = Ложь;
	КонецЕсли;

	Если ТипШтрихКода = Перечисления.ТипыШтрихкодов.PDF417 Тогда 
		
		ПоказатьИформациюОТребуемыхДействияхPDF417();
		
	Иначе
		
		ПоказатьИформациюОТребуемыхДействияхDataMatrix();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТребуетсяСопоставитьСНоменклатуройПредприятия()

	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНеТребуетсяУказаниеДополнительныхДанных;
	
	МассивСтрок = Новый Массив;
	
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'Алкогольная продукция'"),,
			ЦветаСтиля.ПоясняющийТекст));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НаименованиеАлкогольнойПродукции(),
			Новый Шрифт(,,,,Истина),
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"КомандаОткрытьАлкогольнуюПродукциюЕГАИС"));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'не сопоставлена с номенклатурой предприятия.
			           |Отсканируйте штрихкод товара EAN-13.'"),,
			ЦветаСтиля.ПоясняющийТекст));
	
	ПоясняющийТекст = Новый ФорматированнаяСтрока(МассивСтрок);

КонецПроцедуры

#Область ФормированиеНачальнойСтраницыPDF417

&НаСервере
Процедура ПоказатьИформациюОТребуемыхДействияхPDF417()
	
	Элементы.АлкогольнаяПродукция.Видимость = Ложь;
	
	Если Не ЗначениеЗаполнено(КодАлкогольнойПродукции)
		И ТипШтрихКода = Перечисления.ТипыШтрихкодов.PDF417
		И ЗначениеЗаполнено(АкцизнаяМарка) Тогда
		
		КодАлкогольнойПродукции = АкцизныеМаркиВызовСервера.КодКлассификатораНоменклатурыЕГАИС(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(АкцизнаяМарка, "ЗначениеШтрихкода"));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КодАлкогольнойПродукции)
		И Не ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
		АлкогольнаяПродукция = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.НайтиПоКоду(КодАлкогольнойПродукции);
	КонецЕсли;
	
	Элементы.ЗавершитьРедактирование.Видимость   = ЗначениеЗаполнено(АлкогольнаяПродукция);
	Элементы.ДекорацияУдалосьПодобрать.Видимость = ЗначениеЗаполнено(АлкогольнаяПродукция);
	Элементы.ДекорацияКартинка.Видимость         = ЗначениеЗаполнено(АлкогольнаяПродукция);
	Элементы.ШтрихкодНоменклатуры.Видимость      = ЗначениеЗаполнено(АлкогольнаяПродукция);
	
	Если ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
		
		ПолучитьДанныеОНоменклатуреХарактеристиках();
		
		Если СопоставленнаяНоменклатура.Количество() = 0 Тогда
			
			Если НеоднозначноеСоответствиеНетВДанныхОснования Тогда
				ПоказатьНеоднозначноеСоответствиеНетВДанныхОснования();
			Иначе
				ПоказатьТребуетсяСопоставитьСНоменклатуройПредприятия();
			КонецЕсли;
			
		Иначе
			
			ПоказатьТребуетсяУточнениеДанных();
			
		КонецЕсли;
		
	Иначе
		
		ПоказатьАлкогольнаяПродукцияНеНайдена();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьНеоднозначноеСоответствиеНетВДанныхОснования()

	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНеоднозначноеСоответствиеНетВДанныхДокументаОснования;
	
	Элементы.ЗавершитьРедактирование.Видимость     = Ложь;
	Элементы.ДекорацияУдалосьПодобрать.Видимость   = Ложь;
	Элементы.ПоясняющийТекст.Видимость             = Ложь;
	Элементы.Закрыть.Заголовок                     = НСтр("ru = 'Закрыть'");
	Элементы.Закрыть.КнопкаПоУмолчанию             = Истина;
	Элементы.ГруппаПодвал.РастягиватьПоГоризонтали = Истина;
	
	ТекстОшибки = НСтр("ru = 'Сопоставление с номенклатурой не однозначное, при этом данные сопоставления не соответствуют документу основанию'");
	
	Префикс = СтрШаблон(
		НСтр("ru = 'Невозможно добавить алкогольную продукцию ""%1"" с кодом акцизной марки'"),
		АлкогольнаяПродукция);
	
	Элементы.ДекорацияОшибкаДобавленияАлкогольнойПродукции.Заголовок = Новый ФорматированнаяСтрока(
		Префикс, " ",
		Новый ФорматированнаяСтрока(
			ШтрихкодированиеИСКлиентСервер.ПредставлениеШтрихкода(Штрихкод),
			Новый Шрифт(,,,,Истина),
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"СкопироватьШтриховойКодВБуферОбмена"), " ",
		СтрШаблон(НСтр("ru = 'по причине:
		                     |%1'"), ТекстОшибки));
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТребуетсяУточнениеДанных()
	
	Если КонтролироватьПоДокументуОснованию Тогда
		
		ПоказатьТребуетсяУточнениеСКонтролем();
		
	Иначе
		
		ПоказатьТребуетсяУточнениеБезКонтроля();
		
	КонецЕсли;
	
	Элементы.ГруппаВопросУдалосьПодобрать.Видимость = Истина;
	Элементы.ЗавершитьРедактирование.Заголовок = НСтр("ru = 'Да'");
	Элементы.Закрыть.Заголовок                 = НСтр("ru = 'Нет'");
	
	ЗаполнитьСписокВыбораНоменклатуры(ЭтотОбъект);
	ПриИзмененииНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТребуетсяУточнениеСКонтролем()

	ЗапомнитьВыбор = Истина;
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаТребуетсяУказаниеДополнительныхДанных;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		Элементы.Номенклатура.Видимость   = Ложь;
		Элементы.Характеристика.Видимость = Ложь;
		
		Заголовок = НСтр("ru = 'Уточнение серии'");
		Элементы.ГруппаПояснениеДополнительныеДанные.Видимость = Ложь;
		
	Иначе
		
		Заголовок = НСтр("ru = 'Уточнение данных'");
		
		ВывестиТекстНеоднозначноСопоставлена();
		ВывестиИнформациюСканированииШтрихкода();
		ВывестиТекстСохранениеВыбораPDF417();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТребуетсяУточнениеБезКонтроля()

	Элементы.Серия.Видимость = Ложь;
	
	Заголовок = НСтр("ru = 'Уточнение данных'");
	
	ЗапомнитьВыбор = Истина;
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаТребуетсяУказаниеДополнительныхДанных;
	
	ВывестиТекстНеоднозначноСопоставлена();
	ВывестиИнформациюСканированииШтрихкода();
	ВывестиТекстСохранениеВыбораPDF417();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТекстНеоднозначноСопоставлена()
	
	МассивСтрок = Новый Массив;
	
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'Алкогольная продукция'"),,
			ЦветаСтиля.ПоясняющийТекст));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НаименованиеАлкогольнойПродукции(),
			Новый Шрифт(,,,,Истина),
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"КомандаОткрытьАлкогольнуюПродукциюЕГАИС"));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'не однозначно сопоставлена с номенклатурой предприятия.'"),,
			ЦветаСтиля.ПоясняющийТекст));
	
	ПоясняющийТекст = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТекстСохранениеВыбораPDF417()

	ТекстЗаголовка = НСтр("ru = 'При последовательном сканировании такой же алкогольной продукции не будет показываться эта форма. Будут использованы указанные данные.'");
	
	Элементы.ЗапомнитьВыбор.РасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(ТекстЗаголовка, , ЦветаСтиля.СтатусОбработкиПередаетсяГосИС);

КонецПроцедуры

&НаСервере
Процедура ПоказатьАлкогольнаяПродукцияНеНайдена()
	
	Элементы.ДекорацияКартинка.Видимость    = Истина;
	Элементы.ШтрихкодНоменклатуры.Видимость = Истина;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНеТребуетсяУказаниеДополнительныхДанных;
	
	МассивСтрок = Новый Массив;
	
	Если ЗначениеЗаполнено(КодАлкогольнойПродукции) Тогда
		МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'Алкогольная продукция c кодом'"),,
				ЦветаСтиля.ПоясняющийТекст));
		МассивСтрок.Добавить(" ");
		МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
				Строка(КодАлкогольнойПродукции),
				Новый Шрифт(,,,,Истина),
				ЦветаСтиля.ЦветГиперссылкиГосИС,,
				"КомандаЗапроситьАлкогольнуюПродукциюЕГАИС"));
		МассивСтрок.Добавить(" ");
		МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'не найдена в информационной базе.'"),,
				ЦветаСтиля.ПоясняющийТекст));
		МассивСтрок.Добавить(" ");
		МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'Запросить из ЕГАИС'"),
				Новый Шрифт(,,,,Истина),
				ЦветаСтиля.ЦветГиперссылкиГосИС,,
				"КомандаЗапроситьАлкогольнуюПродукциюЕГАИС"));
	Иначе
		МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'Алкогольная продукция не найдена в информационной базе.
					       |Отложите ее в сторону.'"),,
				ЦветаСтиля.ПоясняющийТекст));
	КонецЕсли;
	
	ПоясняющийТекст = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеНачальнойСтраницыDataMatrix

&НаСервере
Процедура ПоказатьИформациюОТребуемыхДействияхDataMatrix()

	Если КонтролироватьПоДокументуОснованию Тогда
		
		Если ДанныеДокументаОснования.Количество() = 0 Тогда
			
			ПоказатьНетМаркированнойПродукцииВОснованииDataMatrix();
			Возврат;
			
		Иначе
			
			ПоказатьТребуетсяИдентификацияСКонтролем();
			
		КонецЕсли;
		
	Иначе
		
		ПоказатьТребуетсяИдентификацияБезКонтроля();
		
	КонецЕсли;
	
	Элементы.ГруппаВопросУдалосьПодобрать.Видимость = Истина;
	Элементы.ЗавершитьРедактирование.Заголовок = НСтр("ru = 'Да'");
	Элементы.Закрыть.Заголовок                 = НСтр("ru = 'Нет'");
	
	ВывестиТекстСохранениеВыбораDataMatrix();
	
	ПриИзмененииАлкогольнойПродукции();
	
	Если ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
		
		НоменклатураИзменена = Истина;
		
		Если Элементы.Номенклатура.РежимВыбораИзСписка Тогда
			Если Элементы.Номенклатура.СписокВыбора.НайтиПоЗначению(Параметры.Номенклатура) <> Неопределено Тогда
				Номенклатура = Параметры.Номенклатура;
				НоменклатураИзменена = Истина;
			КонецЕсли;
		Иначе
			Номенклатура = Параметры.Номенклатура;
			НоменклатураИзменена = Истина;
		КонецЕсли;
		
		Если НоменклатураИзменена Тогда
			ПриИзмененииНоменклатуры();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТребуетсяИдентификацияСКонтролем()

	ПолучитьДанныеВыбораПоДокументуОснованиюDataMatrix();
	
	Элементы.АлкогольнаяПродукция.РежимВыбораИзСписка = Истина;
	Элементы.Номенклатура.РежимВыбораИзСписка         = Истина;
	
	ЗаполнитьСписокВыбораАлкогольнойПродукцииПоОснованию();
	
	ЗапомнитьВыбор = Ложь;
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаТребуетсяУказаниеДополнительныхДанных;
	
	Заголовок = НСтр("ru = 'Уточнение данных'");
	
	ВывестиТекстИдентификацияАкцизнойМарки();
	
	ВывестиИнформациюСканированииШтрихкода();

КонецПроцедуры

&НаСервере
Процедура ПоказатьТребуетсяИдентификацияБезКонтроля()

	ЗапомнитьВыбор = Ложь;
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаТребуетсяУказаниеДополнительныхДанных;
	
	Заголовок = НСтр("ru = 'Уточнение данных'");

	ВывестиТекстИдентификацияАкцизнойМарки();
	
	ВывестиИнформациюСканированииШтрихкода();

КонецПроцедуры

&НаСервере
Процедура ВывестиТекстИдентификацияАкцизнойМарки()

	МассивСтрок = Новый Массив;
	
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'Акцизная марка'"),,
			ЦветаСтиля.ПоясняющийТекст));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			ШтрихкодированиеИСКлиентСервер.ПредставлениеШтрихкода(Штрихкод),
			Новый Шрифт(,,,,Истина),
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"СкопироватьШтриховойКодВБуферОбмена"));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'не идентифицирована. Укажите информацию о бутылке.'"),,
			ЦветаСтиля.ПоясняющийТекст));
	
	ПоясняющийТекст = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТекстСохранениеВыбораDataMatrix()

	ТекстЗаголовка = НСтр("ru = 'При последовательном сканировании акцизных марок, не содержащих информацию об алкогольной продукции, не будет показываться эта форма. Будут использованы указанные данные.'");
	
	Элементы.ЗапомнитьВыбор.РасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(ТекстЗаголовка, , ЦветаСтиля.СтатусОбработкиПередаетсяГосИС);

КонецПроцедуры

&НаСервере
Процедура ПоказатьНетМаркированнойПродукцииВОснованииDataMatrix()
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНеоднозначноеСоответствиеНетВДанныхДокументаОснования;
	
	Элементы.ЗавершитьРедактирование.Видимость     = Ложь;
	Элементы.ДекорацияУдалосьПодобрать.Видимость   = Ложь;
	Элементы.ПоясняющийТекст.Видимость             = Ложь;
	Элементы.Закрыть.Заголовок                     = НСтр("ru = 'Закрыть'");
	Элементы.Закрыть.КнопкаПоУмолчанию             = Истина;
	Элементы.ГруппаПодвал.РастягиватьПоГоризонтали = Истина;
	
	ТекстОшибки = НСтр("ru = 'Отсканирована неизвестная акцизная марка, при этом в документе-распоряжении нет маркируемой алкогольной продукции.'");
	
	Префикс = НСтр("ru = 'Невозможно добавить алкогольную продукцию с кодом акцизной марки'");
	
	Элементы.ДекорацияОшибкаДобавленияАлкогольнойПродукции.Заголовок = Новый ФорматированнаяСтрока(
		Префикс, " ",
		Новый ФорматированнаяСтрока(
			ШтрихкодированиеИСКлиентСервер.ПредставлениеШтрихкода(Штрихкод),
			Новый Шрифт(,,,,Истина),
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"СкопироватьШтриховойКодВБуферОбмена"), " ",
		СтрШаблон(
			НСтр("ru = 'по причине:
			           |%1'"), ТекстОшибки));

КонецПроцедуры

#КонецОбласти

&НаСервере
Функция НаименованиеАлкогольнойПродукции()

	НаименованиеАлкогольнойПродукции = Строка(АлкогольнаяПродукция);
	Если СтрДлина(НаименованиеАлкогольнойПродукции) > 40 Тогда
		НаименованиеАлкогольнойПродукции = Лев(НаименованиеАлкогольнойПродукции, 40) + "...";
	КонецЕсли;
	
	Возврат НаименованиеАлкогольнойПродукции;

КонецФункции

&НаСервере
Процедура ВывестиИнформациюСканированииШтрихкода()
	
	ТекстУкажитеДополнительныеДанные = Новый ФорматированнаяСтрока(
			НСтр("ru = 'Отсканируйте штрихкод товара EAN-13 или укажите данные вручную.'"),,
			ЦветаСтиля.ТекстИнформационнойНадписиЕГАИС);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаШтрихКода

&НаКлиенте
Процедура РучнойВводШтрихкодаЗавершение(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	ОбработатьДанныеСканераШтрихкодов(ДанныеШтрихкода);
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанных

&НаСервере
Процедура ПолучитьДанныеОНоменклатуреХарактеристиках()
	
	СопоставленнаяНоменклатура.Очистить();
	
	ДанныеСопоставленияАлкогольнойПродукции
	           = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СопоставленнаяАлкогольнойПродукцииНоменклатура(АлкогольнаяПродукция,
	                                                                                                           КонтролироватьПоДокументуОснованию);
	
	Если КонтролироватьПоДокументуОснованию Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеДокументаОснования.Номенклатура   КАК Номенклатура,
		|	ДанныеДокументаОснования.Характеристика КАК Характеристика,
		|	ДанныеДокументаОснования.Серия          КАК Серия,
		|	ДанныеДокументаОснования.Количество     КАК Количество
		|ПОМЕСТИТЬ ДанныеДокументаОснования
		|ИЗ
		|	&ДанныеДокументаОснования КАК ДанныеДокументаОснования
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСопоставленияАлкогольнойПродукции.Номенклатура  КАК Номенклатура,
		|	ДанныеСопоставленияАлкогольнойПродукции.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ДанныеСопоставленияАлкогольнойПродукции
		|ИЗ
		|	&ДанныеСопоставленияАлкогольнойПродукции КАК ДанныеСопоставленияАлкогольнойПродукции
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеСопоставленияАлкогольнойПродукции.Номенклатура   КАК Номенклатура,
		|	ДанныеСопоставленияАлкогольнойПродукции.Характеристика КАК Характеристика
		|ИЗ
		|	ДанныеСопоставленияАлкогольнойПродукции КАК ДанныеСопоставленияАлкогольнойПродукции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаОснования КАК ДанныеДокументаОснования
		|		ПО ДанныеСопоставленияАлкогольнойПродукции.Номенклатура = ДанныеДокументаОснования.Номенклатура
		|			И ДанныеСопоставленияАлкогольнойПродукции.Характеристика = ДанныеДокументаОснования.Характеристика
		|ИТОГИ ПО
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("ДанныеДокументаОснования",                ДанныеДокументаОснования.Выгрузить());
		Запрос.УстановитьПараметр("ДанныеСопоставленияАлкогольнойПродукции", ДанныеСопоставленияАлкогольнойПродукции);
		
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
		
			НоваяСтрока = СопоставленнаяНоменклатура.Добавить();
			НоваяСтрока.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			
			ВыборкаХарактеристики = ВыборкаНоменклатура.Выбрать();
			
			Пока ВыборкаХарактеристики.Следующий() Цикл
				
				НоваяСтрока.Характеристики.Добавить(ВыборкаХарактеристики.Характеристика);
				
			КонецЦикла;
		
		КонецЦикла;
		
		Если СопоставленнаяНоменклатура.Количество() = 0
			И ДанныеСопоставленияАлкогольнойПродукции.Количество() > 0 Тогда
			
			НеоднозначноеСоответствиеНетВДанныхОснования = Истина;
			
		КонецЕсли;
		
	Иначе
		
		Для Каждого ЭлементСоответствия Из ДанныеСопоставленияАлкогольнойПродукции Цикл
			
			НоваяСтрока = СопоставленнаяНоменклатура.Добавить();
			НоваяСтрока.Номенклатура = ЭлементСоответствия.Ключ;
			НоваяСтрока.Характеристики.ЗагрузитьЗначения(ЭлементСоответствия.Значение);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораНоменклатуры(Форма)
	
	СписокВыбора = Форма.Элементы.Номенклатура.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если Форма.ТипШтрихКода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.PDF417") Тогда
			
		КоллекцияСтрок = Форма.СопоставленнаяНоменклатура;
		
	Иначе
		
		Если Форма.КонтролироватьПоДокументуОснованию Тогда
		
			Если ЗначениеЗаполнено(Форма.АлкогольнаяПродукция) Тогда
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("АлкогольнаяПродукция", Форма.АлкогольнаяПродукция);
			
			КоллекцияСтрок = Форма.СопоставленнаяАлкогольнаяПродукцияДокумента.НайтиСтроки(ПараметрыПоиска);
			
			Иначе
			
				КоллекцияСтрок = Форма.СопоставленнаяНоменклатура;
			
			КонецЕсли;
		
		Иначе
			
			Если ЗначениеЗаполнено(Форма.АлкогольнаяПродукция) Тогда
				
				КоллекцияСтрок = Форма.СопоставленнаяНоменклатура;
				
			Иначе
				
				Возврат;
				
			КонецЕсли;
		
		КонецЕсли;
		
		
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из КоллекцияСтрок Цикл
		СписокВыбора.Добавить(СтрокаТаблицы.Номенклатура);
	КонецЦикла;
	
	Если СписокВыбора.Количество() = 1 Тогда
		Форма.Номенклатура                         = СписокВыбора[0].Значение;
		Форма.Элементы.Номенклатура.ТолькоПросмотр = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораАлкогольнойПродукцииПоОснованию()
	
	МассивАлкогольнойПродукции = СопоставленнаяАлкогольнаяПродукцияДокумента.Выгрузить().ВыгрузитьКолонку("АлкогольнаяПродукция");
	
	МассивАлкогольнойПродукции = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивАлкогольнойПродукции);
	
	Элементы.АлкогольнаяПродукция.СписокВыбора.ЗагрузитьЗначения(МассивАлкогольнойПродукции);
	
	Если Элементы.АлкогольнаяПродукция.СписокВыбора.Количество() = 1 Тогда
		
		АлкогольнаяПродукция = Элементы.АлкогольнаяПродукция.СписокВыбора[0].Значение;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораАлкогольнойПродукцииПоНоменклатуре()

	СписокВыбора = Элементы.АлкогольнаяПродукция.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если КонтролироватьПоДокументуОснованию Тогда
		
		Элементы.АлкогольнаяПродукция.РежимВыбораИзСписка = Истина;
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Номенклатура", Номенклатура);
			
			НайденныеСтроки = СопоставленнаяАлкогольнаяПродукцияДокумента.НайтиСтроки(ПараметрыПоиска);
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если СписокВыбора.НайтиПоЗначению(НайденнаяСтрока.АлкогольнаяПродукция) = Неопределено Тогда
					СписокВыбора.Добавить(НайденнаяСтрока.АлкогольнаяПродукция);
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			ЗаполнитьСписокВыбораАлкогольнойПродукцииПоОснованию();
			
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			
			Элементы.АлкогольнаяПродукция.РежимВыбораИзСписка = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
			|ИЗ
			|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
			|ГДЕ
			|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
			|	И ВЫБОР
			|			КОГДА &ХарактеристикаУказана
			|				ТОГДА СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ";
			
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("Характеристика", Характеристика);
			Запрос.УстановитьПараметр("ХарактеристикаУказана", ЗначениеЗаполнено(Характеристика));
			
			СписокВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("АлкогольнаяПродукция"));
			Элементы.АлкогольнаяПродукция.РежимВыбораИзСписка = Истина;
			
		Иначе
			
			Элементы.АлкогольнаяПродукция.РежимВыбораИзСписка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокВыбора.Количество() = 1 Тогда
		АлкогольнаяПродукция = СписокВыбора[0].Значение;
		ПолучитьДанныеОНоменклатуреХарактеристиках();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеВыбораПоДокументуОснованиюDataMatrix()

	СопоставленнаяНоменклатура.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументаОснования.Номенклатура   КАК Номенклатура,
	|	ДанныеДокументаОснования.Характеристика КАК Характеристика,
	|	ДанныеДокументаОснования.Серия          КАК Серия,
	|	ДанныеДокументаОснования.Количество     КАК Количество
	|ПОМЕСТИТЬ ДанныеДокументаОснования
	|ИЗ
	|	&ДанныеДокументаОснования КАК ДанныеДокументаОснования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ДанныеДокументаОснования.Номенклатура              КАК Номенклатура,
	|	ДанныеДокументаОснования.Характеристика            КАК Характеристика
	|ПОМЕСТИТЬ СопоставленнаяАлкогольнаяПродукцияДокумента
	|ИЗ
	|	ДанныеДокументаОснования КАК ДанныеДокументаОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ДанныеДокументаОснования.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ДанныеДокументаОснования.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СопоставленнаяАлкогольнаяПродукцияДокумента.Номенклатура   КАК Номенклатура,
	|	СопоставленнаяАлкогольнаяПродукцияДокумента.Характеристика КАК Характеристика
	|ИЗ
	|	СопоставленнаяАлкогольнаяПродукцияДокумента КАК СопоставленнаяАлкогольнаяПродукцияДокумента
	|ИТОГИ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ
	|	СопоставленнаяАлкогольнаяПродукцияДокумента.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СопоставленнаяАлкогольнаяПродукцияДокумента.Номенклатура         КАК Номенклатура,
	|	СопоставленнаяАлкогольнаяПродукцияДокумента.Характеристика       КАК Характеристика
	|ИЗ
	|	СопоставленнаяАлкогольнаяПродукцияДокумента КАК СопоставленнаяАлкогольнаяПродукцияДокумента";
	
	Запрос.УстановитьПараметр("ДанныеДокументаОснования", ДанныеДокументаОснования.Выгрузить());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаНоменклатура = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		НоваяСтрока = СопоставленнаяНоменклатура.Добавить();
		НоваяСтрока.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		
		ВыборкаХарактеристики = ВыборкаНоменклатура.Выбрать();
		
		Пока ВыборкаХарактеристики.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаХарактеристики.Характеристика) Тогда
				НоваяСтрока.Характеристики.Добавить(ВыборкаХарактеристики.Характеристика);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	СопоставленнаяАлкогольнаяПродукцияДокумента.Загрузить(Результат[3].Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаИзмененийРеквизитовФормы

&НаСервере
Процедура ПослеВыбораНоменклатуры()

	ЗаполнитьСписокВыбораАлкогольнойПродукцииПоНоменклатуре();
	Если ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
		ПриИзмененииАлкогольнойПродукции();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииНоменклатуры()
	
	Если ТипШтрихКода = Перечисления.ТипыШтрихкодов.DataMatrix Тогда
		
		ЗаполнитьСписокВыбораАлкогольнойПродукцииПоНоменклатуре();
		
	КонецЕсли;
	
	Элементы.Характеристика.СписокВыбора.Очистить();
	Элементы.Серия.СписокВыбора.Очистить();
	
	ОпределитьДоступностьХарактеристики();
	ОпределитьДоступностьСерии();
	ОпределитьДоступностьГотово(ЭтотОбъект);
	
КонецПроцедуры

Функция РезультатИзмененияНоменклатурыПоДаннымСканирования(ДанныеСопоставления)
	
	ТекстОшибки = "";
	
	Если Не АкцизныеМаркиЕГАИС.НоменклатураЯвляетсяАлкогольнойМаркируемойПродукцией(ДанныеСопоставления.Номенклатура) Тогда
		
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Считан штриход номенклатуры ""%1"", но она не является маркируемой алкогольной продукцией.'"), ДанныеСопоставления.Номенклатура);
		Возврат ТекстОшибки;
		
	КонецЕсли;
	
	Если ТипШтрихКода = Перечисления.ТипыШтрихкодов.PDF417 Тогда
		
		Если Элементы.Номенклатура.СписокВыбора.НайтиПоЗначению(ДанныеСопоставления.Номенклатура) = Неопределено Тогда
			
			Если ДанныеДокументаОснования.Количество() = 0 Тогда
				
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Считан штриход номенклатуры ""%1"", но она не соответствует алкогольной продукции.'"), ДанныеСопоставления.Номенклатура);
				
			Иначе
				
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Считан штриход номенклатуры ""%1"", но она не соответствует данным документа - основания.'"), ДанныеСопоставления.Номенклатура);
				
			КонецЕсли;
			
			Возврат ТекстОшибки;
			
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
			
			Если Элементы.Номенклатура.СписокВыбора.НайтиПоЗначению(ДанныеСопоставления.Номенклатура) = Неопределено Тогда
			
				Если ДанныеДокументаОснования.Количество() = 0 Тогда
					
					ТекстОшибки = СтрШаблон(НСтр("ru = 'Считан штриход номенклатуры ""%1"", но она не соответствует алкогольной продукции.'"), ДанныеСопоставления.Номенклатура);
					
				Иначе
					
					ТекстОшибки = СтрШаблон(НСтр("ru = 'Считан штриход номенклатуры ""%1"", но она не соответствует данным документа - основания.'"), ДанныеСопоставления.Номенклатура);
					
				КонецЕсли;
				
				Возврат ТекстОшибки;
			
			КонецЕсли;
			
		Иначе
			
			Если ДанныеДокументаОснования.Количество() > 0 Тогда
				
				ПараметрыПоиска = Новый Структура;
				ПараметрыПоиска.Вставить("Номенклатура", ДанныеСопоставления.Номенклатура);
				Если ЗначениеЗаполнено(ДанныеСопоставления.Характеристика) Тогда
					ПараметрыПоиска.Вставить("Характеристика", ДанныеСопоставления.Характеристика);
				КонецЕсли;
				
				НайденныеСтроки = ДанныеДокументаОснования.НайтиСтроки(ПараметрыПоиска);
				Если НайденныеСтроки.Количество() = 0 Тогда
					
					Если ЗначениеЗаполнено(ДанныеСопоставления.Характеристика) Тогда
						ТекстОшибки = СтрШаблон(НСтр("ru = 'Считан штриход номенклатуры ""%1"", но она не соответствует данным документа - основания.'"),
						                        ДанныеСопоставления.Номенклатура);
					Иначе
						ТекстОшибки = СтрШаблон(НСтр("ru = 'Считан штриход номенклатуры ""%1"" с характеристикой ""%2"",  но она не соответствует данным документа - основания.'"),
						                        ДанныеСопоставления.Номенклатура,
						                        ДанныеСопоставления.Характеристика);
					КонецЕсли;
					
					Возврат ТекстОшибки;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Номенклатура = ДанныеСопоставления.Номенклатура;
	ПриИзмененииНоменклатуры();
	
	Если ЗначениеЗаполнено(ДанныеСопоставления.Характеристика) Тогда
		
		Если Элементы.Характеристика.СписокВыбора.НайтиПоЗначению(ДанныеСопоставления.Характеристика) = Неопределено Тогда
			
			Если КонтролироватьПоДокументуОснованию Тогда
				
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Считаный штриход соответствует характеристике ""%1"", но она не соответствует данным документа - основания.'"),
				                        ДанныеСопоставления.Характеристика);
				
			Иначе
				
				ТекстОшибки = СтрШаблон(НСтр("ru = 'Считаный штриход соответствует характеристике ""%1"", но она не сопоставлена алкогольной продукции.'"),
				                        ДанныеСопоставления.Характеристика);
				
			КонецЕсли;
			
			Возврат ТекстОшибки;
		
		КонецЕсли;
		
		Характеристика = ДанныеСопоставления.Характеристика;
		ПриИзмененииХарактеристики();
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Процедура ПриИзмененииАлкогольнойПродукции()
	
	Элементы.Номенклатура.СписокВыбора.Очистить();
	Элементы.Характеристика.СписокВыбора.Очистить();
	Элементы.Серия.СписокВыбора.Очистить();
	
	Если ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
		
		Элементы.Номенклатура.РежимВыбораИзСписка = Истина;
		
		Если ТипШтрихКода = Перечисления.ТипыШтрихкодов.PDF417
			Или Не КонтролироватьПоДокументуОснованию Тогда
			
			ПолучитьДанныеОНоменклатуреХарактеристиках();
			
		КонецЕсли;
		
	Иначе
		
		Номенклатура   = Неопределено;
		Характеристика = Неопределено;
		Серия          = Неопределено;
		
		Если Не КонтролироватьПоДокументуОснованию Тогда
			Элементы.Номенклатура.РежимВыбораИзСписка = Ложь;
			ЗаполнитьСписокВыбораАлкогольнойПродукцииПоНоменклатуре();
		Иначе
			ЗаполнитьСписокВыбораАлкогольнойПродукцииПоОснованию();
		КонецЕсли;
		
		Элементы.Номенклатура.ТолькоПросмотр = Ложь;
		
	КонецЕсли;
	
	ЗаполнитьСписокВыбораНоменклатуры(ЭтотОбъект);
	ОпределитьДоступностьХарактеристики();
	ОпределитьДоступностьСерии();
	ОпределитьДоступностьГотово(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииХарактеристики()

	ОпределитьДоступностьСерии();
	ОпределитьДоступностьГотово(ЭтотОбъект);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОпределитьДоступностьГотово(Форма)

	КомандаДоступна = Истина;
	
	Если Не ЗначениеЗаполнено(Форма.АлкогольнаяПродукция) Тогда
		
		КомандаДоступна = Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Форма.Номенклатура) Тогда
		
		КомандаДоступна = Ложь;
		
	КонецЕсли;
	
	Если Форма.ТребуетсяУказаниеХарактеристики
		И Не ЗначениеЗаполнено(Форма.Характеристика) Тогда
		
		КомандаДоступна = Ложь;
		
	КонецЕсли;
	
	Если Форма.ТребуетсяУказаниеСерии 
		И Не ЗначениеЗаполнено(Форма.Серия) Тогда
		
		КомандаДоступна = Ложь;
		
	КонецЕсли;
	
	Форма.Элементы.ЗавершитьРедактирование.Доступность = КомандаДоступна;

КонецПроцедуры

&НаСервере
Процедура ОпределитьДоступностьХарактеристики()
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		
		ХарактеристикаДоступна          = Ложь;
		ТребуетсяУказаниеХарактеристики = Ложь;
		
	Иначе
		
		ТребуетсяУказаниеХарактеристики = Ложь;
		ХарактеристикаДоступна          = Ложь;
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("Номенклатура", Номенклатура);
		
		НайденныеСтроки = СопоставленнаяНоменклатура.НайтиСтроки(ПараметрыПоиска);
		
		Если НайденныеСтроки.Количество() > 0
			И НайденныеСтроки[0].Характеристики.Количество() > 0 Тогда
			
			ТребуетсяУказаниеХарактеристики = Истина;
			
			Для Каждого ЭлементСписка Из НайденныеСтроки[0].Характеристики Цикл
				Элементы.Характеристика.СписокВыбора.Добавить(ЭлементСписка.Значение);
			КонецЦикла;
			
			Если Элементы.Характеристика.СписокВыбора.Количество() = 1 Тогда
				Характеристика = Элементы.Характеристика.СписокВыбора[0].Значение;
			Иначе
				ХарактеристикаДоступна          = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элементы.Характеристика.СписокВыбора.Количество() = 0 Тогда
		Элементы.Характеристика.ПодсказкаВвода = НСтр("ru = '<характеристики не используются>'");
		Элементы.Характеристика.АвтоОтметкаНезаполненного = Ложь;
	Иначе
		Элементы.Характеристика.ПодсказкаВвода = "";
		Элементы.Характеристика.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
	Элементы.Характеристика.ТолькоПросмотр = Не ХарактеристикаДоступна;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьДоступностьСерии()

	Элементы.Серия.СписокВыбора.Очистить();
	
	Если Не КонтролироватьПоДокументуОснованию Тогда
		
		СерияДоступна          = Ложь;
		Серия                  = Неопределено;
		ТребуетсяУказаниеСерии = Ложь;
		
		Возврат;
	
	ИначеЕсли Не ЗначениеЗаполнено(Номенклатура) Тогда
		
		СерияДоступна          = Ложь;
		Серия                  = Неопределено;
		ТребуетсяУказаниеСерии = Ложь;
		
	Иначе
		
		Если КонтролироватьПоДокументуОснованию Тогда
			
			СерияДоступна = Ложь;
			
			ТребуетсяУказаниеСерии          = Ложь;
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Номенклатура", Номенклатура);
			
			НайденныеСтроки = ДанныеДокументаОснования.НайтиСтроки(ПараметрыПоиска);
			
			МассивДоступныхСерий = Новый Массив;
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				
				Если ЗначениеЗаполнено(НайденныеСтроки[0].Серия) Тогда
					
					ТребуетсяУказаниеСерии = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ТребуетсяУказаниеСерии Тогда
				
				МассивДоступныхСерий = Новый Массив;
				
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					Если МассивДоступныхСерий.Найти(НайденнаяСтрока.Серия) = Неопределено Тогда
						
						МассивДоступныхСерий.Добавить(НайденнаяСтрока.Серия);
						
					КонецЕсли;
					
				КонецЦикла;
				
				Элементы.Серия.СписокВыбора.ЗагрузитьЗначения(МассивДоступныхСерий);
				
				Если МассивДоступныхСерий.Количество() = 1 Тогда
					
					Серия = МассивДоступныхСерий[0];
					
				КонецЕсли;
				
				Если МассивДоступныхСерий.Найти(Серия) = Неопределено Тогда
					
					Серия = Неопределено;
					
				КонецЕсли;
				
				Если ТребуетсяУказаниеХарактеристики
					И Не ЗначениеЗаполнено(Характеристика)
					Тогда
					
					СерияДоступна = Ложь;
					
				Иначе
					
					СерияДоступна = Истина;
					
				КонецЕсли;
				
			Иначе
				
				СерияДоступна          = Ложь;
				ТребуетсяУказаниеСерии = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Серия.ТолькоПросмотр = Не СерияДоступна;
	
	Если СерияДоступна Тогда
		Элементы.Серия.АвтоОтметкаНезаполненного = Истина;
		Элементы.Серия.ПодсказкаВвода = НСтр("ru = '<укажите серию>'");
	Иначе
		Элементы.Серия.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Серия.ПодсказкаВвода = НСтр("ru = '<серия не указывается>'");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПослеЗакрытияФормыФормированиеИсходящегоЗапроса(Результат, ДополнительныеПараметры) Экспорт
	
	ПоказатьИнформациюОТребуемыхДействиях();
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить("Обработка.РаботаСАкцизнымиМаркамиЕГАИС.Форма.ФормаВводаАкцизнойМаркиПоискНоменклатуры", "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект,
	                                                                                                           "Характеристика",
	                                                                                                           "ТребуетсяУказаниеХарактеристики");
	
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не Элементы.Номенклатура.РежимВыбораИзСписка Тогда
	
		СтандартнаяОбработка = Ложь;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ВидАлкогольнойПродукцииМаркируемый", Истина);
		
		СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(ЭтотОбъект, ПараметрыОтбора);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениеНетСопоставленияАлкогольнойПродукции()

	Если ЗначениеЗаполнено(АлкогольнаяПродукция)
		И Не Элементы.АлкогольнаяПродукция.РежимВыбораИзСписка Тогда
		
		Если СопоставленнаяНоменклатура.Количество() = 0 Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Выбранная алкогольная продукция не сопоставлена с номенклатурой. Выполнить сопоставление можно в табличной части формы документа.'");
			
			ПоказатьПредупреждение(, ТекстПредупреждения);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениеНетСопоставленияНоменклатуре()

	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		Если Не ЗначениеЗаполнено(АлкогольнаяПродукция) 
			И Элементы.АлкогольнаяПродукция.СписокВыбора.Количество() = 0 Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Выбранная номенклатура не сопоставлена с алкогольной продукцией. Выполнить сопоставление можно в табличной части формы документа.'");
			
			ПоказатьПредупреждение(, ТекстПредупреждения);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#КонецОбласти
