#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Конструктор таблицы, описывающей параметры задач, необходимые для расчета статуса задачи.
//
Функция НовыеПараметрыЗадач() Экспорт
	
	ПараметрыЗадач = РегистрыСведений.ЗадачиБухгалтера.КлючиЗадач();
	
	ПараметрыЗадач.Колонки.Добавить("Срок",   ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ПараметрыЗадач.Колонки.Добавить("Статус", РегистрыСведений.ЗадачиБухгалтера.ТипСтатуса());
	
	Возврат ПараметрыЗадач;
	
КонецФункции

// Заполняет в переданной таблице ПараметрыЗадач колонку Статус.
//
// Параметры:
//  ПараметрыЗадач - ТаблицаЗначений - Состав колонок см. Обработки.ПомощникУплатыНалога.НовыеПараметрыЗадачи()
//
Процедура ЗаполнитьСтатусыЗадач(ПараметрыЗадач) Экспорт
	
	Для Каждого ПараметрыЗадачи Из ПараметрыЗадач Цикл
		
		ПараметрыЗадачи.Статус = СтатусУплаты(ПараметрыЗадачи);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПоказателиПатента(Патент, СрокПлатежа) Экспорт
	
	Показатели = НовыйПоказателиПатента();
	
	ДанныеПатента = СведенияОПатенте(Патент);
	
	Показатели.Организация = ДанныеПатента.Организация;
	Показатели.РегистрацияВНалоговомОргане = ДанныеПатента.РегистрацияВНалоговомОргане;
	Показатели.НаименованиеИФНС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ДанныеПатента.РегистрацияВНалоговомОргане, "Наименование");
	
	Показатели.ДатаОкончания = ДанныеПатента.ДатаОкончания;
	Показатели.КБК = ДанныеПатента.КБК;
	
	Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоКБК(Показатели.КБК);
	Показатели.ВидНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Налог, "ВидНалога");
	
	ПредыдущийПлатеж = 0;
	ТекущийПлатеж    = 0;
	
	ПредыдущийПлатежОписание = "";
	ТекущийПлатежОписание    = "";
	
	ФорматДат = "ДФ=dd.MM.yyyy";
	
	Если ДанныеПатента.ДваПлатежа Тогда
		// Два платежа
		Если ДанныеПатента.ДатаПервогоПлатежа = СрокПлатежа Тогда
			ТекущийПлатеж = ДанныеПатента.СуммаПервогоПлатежа;
			ТекущийПлатежОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '1/3 стоимости до %1'"), Формат(ДанныеПатента.ДатаПервогоПлатежа, ФорматДат));
		Иначе
			ПредыдущийПлатеж = ДанныеПатента.СуммаПервогоПлатежа;
			ПредыдущийПлатежОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '1/3 стоимости до %1'"), Формат(ДанныеПатента.ДатаПервогоПлатежа, ФорматДат));
			
			ТекущийПлатеж = ДанныеПатента.СуммаВторогоПлатежа;
			ТекущийПлатежОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '2/3 стоимости до %1'"), Формат(ДанныеПатента.ДатаВторогоПлатежа, ФорматДат));
		КонецЕсли;
	Иначе
		// Один платеж
		ТекущийПлатеж = ДанныеПатента.СуммаПервогоПлатежа;
		ТекущийПлатежОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Стоимость патента до %1'"), Формат(ДанныеПатента.ДатаПервогоПлатежа, ФорматДат));
	КонецЕсли;
	
	Показатели.ТекущийПлатеж            = ТекущийПлатеж;
	Показатели.ПредыдущийПлатеж         = ПредыдущийПлатеж;
	Показатели.ТекущийПлатежОписание    = ТекущийПлатежОписание;
	Показатели.ПредыдущийПлатежОписание = ПредыдущийПлатежОписание;
	
	Если ДанныеПатента.ДваПлатежа Тогда
		Если СрокПлатежа = ДанныеПатента.ДатаПервогоПлатежа Тогда
			ВидПлатежа = Перечисления.ВидыПлатежейПоПатенту.ПервыйПлатеж;
		Иначе
			ВидПлатежа = Перечисления.ВидыПлатежейПоПатенту.ВторойПлатеж;
		КонецЕсли;
	Иначе
		ВидПлатежа = Перечисления.ВидыПлатежейПоПатенту.ЕдинственныйПлатеж;
	КонецЕсли;
	
	Показатели.ВидПлатежа = ВидПлатежа;
	
	Возврат Показатели;
	
КонецФункции

Функция ПоказателиРасходовУменьшающихНалог(Организация, РегистрацияВНалоговомОргане, Патент, ВидПлатежа) Экспорт
	
	ПоказателиРасходов = НовыйПоказателиРасходовУменьшающихНалог();
	
	РасходыВсего = РегистрыСведений.РасходыНаОнлайнКассыУменьшающиеНалогПСН.ЗарегистрированныеРасходы(
		Организация, РегистрацияВНалоговомОргане);
	
	ПоказателиРасходов.РасходыНаОнлайнКассыВсего          = РасходыВсего.Сумма;
	ПоказателиРасходов.РасходыНаОнлайнКассыКоличествоКасс = РасходыВсего.КоличествоКасс;
	
	Если ПоказателиРасходов.РасходыНаОнлайнКассыВсего = 0 Тогда
		// Не имеет смысла запрашивать распределение нулевой суммы.
		Возврат ПоказателиРасходов;
	КонецЕсли;
	
	РасходыПоПатентам = РегистрыСведений.РасходыНаОнлайнКассыУменьшающиеНалогПСН.УменьшениеПлатежейПоПатентам(
		Организация, РегистрацияВНалоговомОргане);
	
	НалоговыйВычетВсего = РасходыПоПатентам.Итог("НалоговыйВычет");
	
	ОтборПатент = Новый Структура("Патент", Патент);
	РасходыПоПатенту = РасходыПоПатентам.Скопировать(ОтборПатент);
	
	НалоговыйВычетТекущийПатент   = РасходыПоПатенту.Итог("НалоговыйВычет");
	НалоговыйВычетСледующийПлатеж = 0;
	
	Если ВидПлатежа = Перечисления.ВидыПлатежейПоПатенту.ПервыйПлатеж Тогда
		// Отдельно передадим уменьшение первого платежа
		ОтборВидПлатежа = Новый Структура("ВидПлатежа", Перечисления.ВидыПлатежейПоПатенту.ПервыйПлатеж);
		НалоговыйВычетТекущийПлатеж = РасходыПоПатенту.Скопировать(ОтборВидПлатежа, "НалоговыйВычет").Итог("НалоговыйВычет");
		НалоговыйВычетСледующийПлатеж = НалоговыйВычетТекущийПатент - НалоговыйВычетТекущийПлатеж;
	Иначе
		// Вычет по второму платежу или по оплате "короткого" патента показывается для всей стоимости патента.
		НалоговыйВычетТекущийПлатеж = НалоговыйВычетТекущийПатент;
	КонецЕсли;
	
	ПоказателиРасходов.НалоговыйВычетТекущийПатент   = НалоговыйВычетТекущийПатент;
	ПоказателиРасходов.НалоговыйВычетТекущийПлатеж   = НалоговыйВычетТекущийПлатеж;
	ПоказателиРасходов.НалоговыйВычетСледующийПлатеж = НалоговыйВычетСледующийПлатеж;
	ПоказателиРасходов.НалоговыйВычетДругиеПатенты   = НалоговыйВычетВсего - НалоговыйВычетТекущийПатент;
	ПоказателиРасходов.НалоговыйВычетОстаток         = Макс(РасходыВсего.Сумма - НалоговыйВычетВсего, 0);
	
	Возврат ПоказателиРасходов;
	
КонецФункции

Функция ПоказателиУведомления(Организация, РегистрацияВНалоговомОргане, Патент, СрокПлатежа) Экспорт
	
	Результат = НовыйПоказателиУведомления();
	
	ДанныеУведомления = Отчеты.РегламентированноеУведомлениеУменьшениеНалогаККТ.ДанныеПоследнегоУведомления(
		Организация, РегистрацияВНалоговомОргане);
	
	Результат.ЕстьУведомление = ДанныеУведомления <> Неопределено;
	
	Если НЕ Результат.ЕстьУведомление Тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат.Уведомление = ДанныеУведомления.Ссылка;
	
	Результат.УведомлениеПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1 от %2'"),
			НСтр("ru = 'Уведомление об уменьшении налога'"),
			Формат(ДанныеУведомления.Дата, "ДФ=dd.MM.yyyy"));
	
	Результат.УведомлениеДата = ДанныеУведомления.Дата;
	
	РеквизитыПатента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Патент, "ДатаВыдачи, НомерПатента");
	
	НалоговыйВычетВсего         = 0;
	НалоговыйВычетТекущийПатент = 0;
	НалоговыйВычетТекущийПлатеж = 0;
	
	Для Каждого ЛистБ Из ДанныеУведомления.ДанныеЛистовБ Цикл
		
		НалоговыйВычетВсего = НалоговыйВычетВсего + ЛистБ.Стр160 + ЛистБ.Стр180 + ЛистБ.Стр200;
		
		Если СокрЛП(ЛистБ.Стр120) = СокрЛП(РеквизитыПатента.НомерПатента)
			И ЛистБ.Стр130 = РеквизитыПатента.ДатаВыдачи Тогда
			
			НалоговыйВычетТекущийПатент = НалоговыйВычетТекущийПатент + ЛистБ.Стр160 + ЛистБ.Стр180 + ЛистБ.Стр200;
			
			Если НачалоДня(СрокПлатежа) = ЛистБ.Стр170 Тогда
				// Платеж 1/3.
				НалоговыйВычетТекущийПлатеж = НалоговыйВычетТекущийПлатеж + ЛистБ.Стр180;
			ИначеЕсли НачалоДня(СрокПлатежа) = ЛистБ.Стр190 Тогда
				// Нарастающий итог: платеж 2/3 + платеж 1/3.
				НалоговыйВычетТекущийПлатеж = НалоговыйВычетТекущийПлатеж + ЛистБ.Стр200 + ЛистБ.Стр180;
			ИначеЕсли НачалоДня(СрокПлатежа) = ЛистБ.Стр150 Тогда
				// Единственный платеж.
				НалоговыйВычетТекущийПлатеж = НалоговыйВычетТекущийПлатеж + ЛистБ.Стр160;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	НалоговыйВычетДругиеПатенты = НалоговыйВычетВсего - НалоговыйВычетТекущийПатент;
	
	Результат.НалоговыйВычетТекущийПатент = НалоговыйВычетТекущийПатент;
	Результат.НалоговыйВычетТекущийПлатеж = НалоговыйВычетТекущийПлатеж;
	Результат.НалоговыйВычетДругиеПатенты = НалоговыйВычетДругиеПатенты;
	
	Результат.РасходыНаОнлайнКассыВсего = ДанныеУведомления.ДанныеЛистовА.Итог("СумРасхККТ");
	Результат.НалоговыйВычетОстаток     = Макс(Результат.РасходыНаОнлайнКассыВсего - НалоговыйВычетВсего, 0);
	
	Возврат Результат;
	
КонецФункции

Функция СравниваемыеПоказателиУведомления() Экспорт
	
	ИменаПоказателей = Новый Массив;
	
	ИменаПоказателей.Добавить("РасходыНаОнлайнКассыВсего");
	ИменаПоказателей.Добавить("НалоговыйВычетТекущийПатент");
	ИменаПоказателей.Добавить("НалоговыйВычетТекущийПлатеж");
	ИменаПоказателей.Добавить("НалоговыйВычетДругиеПатенты");
	ИменаПоказателей.Добавить("НалоговыйВычетОстаток");
	
	Возврат ИменаПоказателей;
	
КонецФункции

Функция ДокументыУплатыПатента(Организация, Патент, ПериодСобытия, ВидНалога) Экспорт
	
	ПараметрыУплатыНалогов = ПомощникиПоУплатеНалоговИВзносов.НовыеПараметрыУплатыНалогов();
	
	ПараметрыУплатыНалогов.Правило = Патент;
	
	ПараметрыУплатыНалогов.ВидыНалогов.Добавить(ВидНалога);
	ПараметрыУплатыНалогов.ВидыНалоговыхОбязательств.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
	
	НачалоПериода = НачалоГода(ПериодСобытия);
	КонецПериода  = КонецДня(ПериодСобытия);
	
	Возврат ПомощникиПоУплатеНалоговИВзносов.ДокументыУплатыНалогов(Организация,
		НачалоПериода, КонецПериода, ПараметрыУплатыНалогов);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СведенияОПатенте(Патент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Патент", Патент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправочникПатенты.Ссылка КАК Патент,
	|	СправочникПатенты.Наименование КАК Наименование,
	|	СправочникПатенты.Владелец КАК Организация,
	|	ВЫБОР
	|		КОГДА СправочникПатенты.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|			ТОГДА СправочникПатенты.НалоговыйОрган
	|		ИНАЧЕ СправочникПатенты.Владелец.РегистрацияВНалоговомОргане
	|	КОНЕЦ КАК РегистрацияВНалоговомОргане,
	|	СправочникПатенты.КБК КАК КБК,
	|	СправочникПатенты.ДатаНачала КАК ДатаНачала,
	|	СправочникПатенты.ДатаОкончания КАК ДатаОкончания,
	|	СправочникПатенты.СуммаПервогоПлатежа КАК СуммаПервогоПлатежа,
	|	СправочникПатенты.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	СправочникПатенты.СуммаВторогоПлатежа КАК СуммаВторогоПлатежа,
	|	СправочникПатенты.ДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	ВЫБОР
	|		КОГДА СправочникПатенты.СуммаВторогоПлатежа > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДваПлатежа
	|ИЗ
	|	Справочник.Патенты КАК СправочникПатенты
	|ГДЕ
	|	СправочникПатенты.Ссылка = &Патент"
	;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ДанныеПатента = Новый Структура;
	
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеПатента.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
	КонецЦикла;
	
	Возврат ДанныеПатента;
	
КонецФункции

Функция СтатусУплаты(ПараметрыЗадачи)
	
	Организация   = ПараметрыЗадачи.Организация;
	ПериодСобытия = ПараметрыЗадачи.ПериодСобытия;
	Патент        = ПараметрыЗадачи.Правило;
	Срок          = ПараметрыЗадачи.Срок;
	
	ПоказателиПатента = ПоказателиПатента(Патент, Срок);
	
	СуммаПлатежаПоЗадаче = ПоказателиПатента.ТекущийПлатеж + ПоказателиПатента.ПредыдущийПлатеж;
	
	Если СуммаПлатежаПоЗадаче = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ПоказателиРасходов = ПоказателиРасходовУменьшающихНалог(Организация,
		ПоказателиПатента.РегистрацияВНалоговомОргане,
		Патент,
		ПоказателиПатента.ВидПлатежа);
	
	СуммаНалогаКУплате = Макс(СуммаПлатежаПоЗадаче - ПоказателиРасходов.НалоговыйВычетТекущийПлатеж, 0);
	
	Если СуммаНалогаКУплате = 0 Тогда
		Возврат "Оплачено";
	КонецЕсли;
	
	ДокументыУплаты = ДокументыУплатыПатента(Организация, Патент, ПериодСобытия, ПоказателиПатента.ВидНалога);
	
	Уплачено = ПомощникиПоУплатеНалоговИВзносов.СуммаОплаты(ДокументыУплаты);
	
	Если Уплачено >= СуммаНалогаКУплате Тогда
		Возврат "Оплачено";
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция НовыйПоказателиПатента()
	
	Показатели = Новый Структура;
	
	Показатели.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Показатели.Вставить("РегистрацияВНалоговомОргане", Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Показатели.Вставить("НаименованиеИФНС", "");
	Показатели.Вставить("ДатаОкончания", '00010101');
	Показатели.Вставить("КБК", "");
	Показатели.Вставить("ВидНалога", Перечисления.ВидыНалогов.ПустаяСсылка());
	Показатели.Вставить("ТекущийПлатеж", 0);
	Показатели.Вставить("ПредыдущийПлатеж", 0);
	Показатели.Вставить("ТекущийПлатежОписание", "");
	Показатели.Вставить("ПредыдущийПлатежОписание", "");
	Показатели.Вставить("ВидПлатежа", Перечисления.ВидыПлатежейПоПатенту.ПустаяСсылка());
	
	Возврат Показатели;
	
КонецФункции

Функция НовыйПоказателиРасходовУменьшающихНалог()
	
	Показатели = Новый Структура;
	
	Показатели.Вставить("РасходыНаОнлайнКассыВсего",          0);
	Показатели.Вставить("РасходыНаОнлайнКассыКоличествоКасс", 0);
	Показатели.Вставить("НалоговыйВычетТекущийПатент",        0);
	Показатели.Вставить("НалоговыйВычетТекущийПлатеж",        0);
	Показатели.Вставить("НалоговыйВычетСледующийПлатеж",      0);
	Показатели.Вставить("НалоговыйВычетДругиеПатенты",        0);
	Показатели.Вставить("НалоговыйВычетОстаток",              0);
	
	Возврат Показатели;
	
КонецФункции

Функция НовыйПоказателиУведомления()
	
	Показатели = Новый Структура;
	
	Показатели.Вставить("Уведомление", Неопределено);
	Показатели.Вставить("ЕстьУведомление", Ложь);
	Показатели.Вставить("УведомлениеПредставление", "");
	Показатели.Вставить("УведомлениеДата", '00010101');
	Показатели.Вставить("РасходыНаОнлайнКассыВсего", 0);
	Показатели.Вставить("НалоговыйВычетТекущийПатент", 0);
	Показатели.Вставить("НалоговыйВычетТекущийПлатеж", 0);
	Показатели.Вставить("НалоговыйВычетДругиеПатенты", 0);
	Показатели.Вставить("НалоговыйВычетОстаток", 0);
	
	Возврат Показатели;
	
КонецФункции

#КонецОбласти

#КонецЕсли
