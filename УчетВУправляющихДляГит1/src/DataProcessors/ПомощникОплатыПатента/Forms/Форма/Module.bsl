
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветПодсветки = ЦветаСтиля.БыстрыеОтборыФонГруппы;
	
	Организация   = Параметры.Организация;
	Патент        = Параметры.Патент;
	ПериодСобытия = Параметры.ПериодСобытия;
	Срок          = Параметры.Срок;
	
	Если НЕ ЗначениеЗаполнено(Патент)
		И НЕ Справочники.Патенты.ИспользуетсяНесколькоПатентов(Организация, ПериодСобытия) Тогда
		Патент = УчетПСН.ПатентПоУмолчанию(Организация, ПериодСобытия);
	КонецЕсли;
	
	ЕстьПравоСозданияДокументов = ПравоДоступа("Изменение", Метаданные.Документы.ПлатежноеПоручение)
		И ПравоДоступа("Изменение", Метаданные.Документы.РасходныйКассовыйОрдер);
	
	ЕстьПравоСозданияУведомления = ПравоДоступа("Изменение", Метаданные.Документы.УведомлениеОСпецрежимахНалогообложения);
	
	УстановитьФункциональныеОпцииФормы();
	
	ЗаполнитьПоказателиРассчитатьНалог();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеПатента" Тогда
		
		// Изменены реквизиты патента.
		
		Если ТипЗнч(Параметр) = Тип("Структура")
			И Параметр.Свойство("Ссылка") И Параметр.Ссылка = Патент Тогда
			
			ЗаполнитьПоказателиРассчитатьНалог();
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_ПлатежныйДокумент_УплатаНалогов" Тогда
		
		// Записан документ ПлатежноеПоручение или РасходныйКассовыйОрдер с видом операции "Уплата налога".
		
		Если ТипЗнч(Параметр) = Тип("Структура")
			И Параметр.Свойство("Организация") И Параметр.Организация = Организация
			И Параметр.КБК = КБК Тогда
			
			ОбработатьЗаписьДокументаНаУплатуНалога();
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_РасходыНаКассовуюТехнику" Тогда
		
		ЗаполнитьРасходыРассчитатьНалог();
	
	ИначеЕсли ИмяСобытия = "Запись_РасходыНаОнлайнКассыУменьшающиеНалогПСН"
		И Параметр = РегистрацияВНалоговомОргане Тогда
		
		ЗаполнитьРасходыРассчитатьНалог();
		
	ИначеЕсли ИмяСобытия = "ИзменениеВыписки" Тогда
		
		ОбработатьЗаписьДокументаНаУплатуНалога();
		
	ИначеЕсли ИмяСобытия = "Запись_УведомлениеОСпецрежимахНалогообложения" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура")
			И ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметр, "Организация", Неопределено) = Организация
			И ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметр, "РегистрацияВИФНС", Неопределено) = РегистрацияВНалоговомОргане
			И ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметр, "ВидУведомления", Неопределено)
				= ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеУменьшениеНалогаККТ") Тогда
			
			ЗаполнитьПоказателиУведомления();
			УправлениеФормой(ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ЗначениеЗаполнено(Организация)
		И ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация) Тогда
		
		ТекстСообщения = НСтр("ru = 'Организации - юридические лица не могут применять патентную систему налогообложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Организация", , Отказ);
		
		МассивНепроверяемыхРеквизитов.Добавить("Организация");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_ПлатежОбработкаНавигационнойСсылки(Элемент, ТекстСсылки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПлатежныхДокументов = ПомощникиПоУплатеНалоговИВзносовКлиент.ПараметрыОбработкиПлатежныхДокументов(
		Платежи, "Платеж", ОповещениеУдаленияПлатежногоДокумента());
	
	ПомощникиПоУплатеНалоговИВзносовКлиент.ОбработкаНавигационнойСсылкиПлатежногоДокумента(Элемент,
		ТекстСсылки, ПараметрыПлатежныхДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеИФНСНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(, РегистрацияВНалоговомОргане);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРасходыНаОнлайнКассыОбработкаНавигационнойСсылки(Элемент, ТекстСсылки, СтандартнаяОбработка)
	
	Если ТекстСсылки = "ДобавитьРасходыНаККТ" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("УменьшаемыйНалог",
			ПредопределенноеЗначение("Перечисление.ВидыНалоговУменьшаемыхНаРасходыККТ.Патент"));
		ЗначенияЗаполнения.Вставить("Организация", Организация);
		ЗначенияЗаполнения.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("ВызовИзПомощника",   Истина);
		
		ОткрытьФорму("Документ.РасходыНаОнлайнКассыУменьшающиеНалоги.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасходыНаОнлайнКассыВсегоНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьСписокРасходыНаОнлайнКассы();
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыйВычетДругиеПатентыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьРаспределениеРасходовНаОнлайнКассы();
	
КонецПроцедуры

&НаКлиенте
Процедура УведомлениеПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(, Уведомление);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОплатитьСБанковскогоСчета(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьДокументУплатыНалога(ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.БанковскийПеревод"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьНаличнымиПоКвитанции(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьДокументУплатыНалога(ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.НаличнымиПоКвитанции"));
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьУведомление(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = УчетПСНВызовСервера.ДанныеЗаполненияУведомленияОбУменьшенииНалога(
		Организация,
		РегистрацияВНалоговомОргане);
	
	// Если есть уведомление, созданное сегодня - перезаполним существующее, иначе создадим новое.
	Если ЗначениеЗаполнено(Уведомление) И НачалоДня(УведомлениеДата) = НачалоДня(ТекущаяДата()) Тогда
		ДанныеЗаполнения.Вставить("Ссылка", Уведомление);
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОткрытьИЗаполнитьФормуУведомленияККТ(ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоказателиРассчитатьНалог()
	
	Если НЕ ЗначениеЗаполнено(Патент) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеПатента();
	
	ЗаполнитьРасходыУменьшающиеНалог();
	
	ЗаполнитьПоказателиУведомления();
	
	НайтиИОтобразитьДокументыОплаты();
	
	РасчетСуммыКУплате(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасходыРассчитатьНалог()
	
	ЗаполнитьРасходыУменьшающиеНалог();
	
	ЗаполнитьПоказателиУведомления();
	
	НайтиИОтобразитьДокументыОплаты();
	
	РасчетСуммыКУплате(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПатента()
	
	Показатели = Обработки.ПомощникОплатыПатента.ПоказателиПатента(Патент, Срок);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Показатели);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасходыУменьшающиеНалог()
	
	Если НЕ ПрименяетсяВычетПоОнлайнКассам Тогда
		Возврат;
	КонецЕсли;
	
	ПоказателиРасходов = Обработки.ПомощникОплатыПатента.ПоказателиРасходовУменьшающихНалог(Организация,
		РегистрацияВНалоговомОргане, Патент, ВидПлатежа);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПоказателиРасходов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказателиУведомления()
	
	Если НЕ ПрименяетсяВычетПоОнлайнКассам Тогда
		Возврат;
	КонецЕсли;
	
	ПоказателиУведомления = Обработки.ПомощникОплатыПатента.ПоказателиУведомления(
		Организация, РегистрацияВНалоговомОргане, Патент, Срок);
	
	Если ПоказателиУведомления.ЕстьУведомление Тогда
		
		Уведомление = ПоказателиУведомления.Уведомление;
		УведомлениеПредставление = ПоказателиУведомления.УведомлениеПредставление;
		УведомлениеДата = ПоказателиУведомления.УведомлениеДата;
		
		УведомлениеАктуально = ПоказателиУведомленияСоответствуютПомощнику(ПоказателиУведомления);
		
	Иначе
		
		Уведомление = Документы.УведомлениеОСпецрежимахНалогообложения.ПустаяСсылка();
		УведомлениеПредставление = "";
		УведомлениеДата = '00010101';
		УведомлениеАктуально = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоказателиУведомленияСоответствуютПомощнику(ПоказателиУведомления)
	
	СравниваемыеПоказатели = Обработки.ПомощникОплатыПатента.СравниваемыеПоказателиУведомления();
	
	Для Каждого ИмяПоказателя Из СравниваемыеПоказатели Цикл
		
		Если ПоказателиУведомления[ИмяПоказателя] <> ЭтотОбъект[ИмяПоказателя] Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура НайтиИОтобразитьДокументыОплаты()
	
	ДокументыУплаты = Обработки.ПомощникОплатыПатента.ДокументыУплатыПатента(
		Организация,
		Патент,
		ПериодСобытия,
		ВидНалога);
	
	Платежи.Загрузить(ДокументыУплаты);
	
	ПомощникиПоУплатеНалоговИВзносов.ОтобразитьПлатежи(ЭтотОбъект, Платежи, "Платеж");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РасчетСуммыКУплате(Форма)
	
	Форма.Уплачено = Форма.Платежи.Итог("Сумма");
	
	Форма.СуммаНалога  = Форма.ТекущийПлатеж + Форма.ПредыдущийПлатеж - Форма.Уплачено;
	Форма.СуммаКУплате = Форма.СуммаНалога - Форма.НалоговыйВычетТекущийПлатеж;
	
	УправлениеФормой(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	ОформитьТекущийПлатеж(Форма);
	
	ОформитьРасходыНаОнлайнКассыВсего(Форма);
	
	ОформитьНалоговыйВычет(Форма);
	
	ОформитьУведомление(Форма);
	
	ОформитьКомандыФормы(Форма);
	
	ОформитьСуммуКУплате(Форма);
	
КонецПроцедуры

#Область ОбработкаСобытийСпискаПлатежей

&НаКлиенте
Функция ОповещениеУдаленияПлатежногоДокумента()
	Возврат Новый ОписаниеОповещения("УдалитьДокументУплатыНаКлиентеЗавершение", ЭтотОбъект);
КонецФункции

&НаКлиенте
Процедура УдалитьДокументУплатыНаКлиентеЗавершение(ДокументУплатыДляУдаления, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ДокументУплатыДляУдаления) Тогда
		УдалитьДокументУплаты(ДокументУплатыДляУдаления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДокументУплаты(ДокументУплатыДляУдаления)
	
	ДокументУплатыОбъект = ДокументУплатыДляУдаления.ПолучитьОбъект();
	ДокументУплатыОбъект.УстановитьПометкуУдаления(Истина);
	
	НайтиИОтобразитьДокументыОплаты();
	
	РасчетСуммыКУплате(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОбработатьЗаписьДокументаНаУплатуНалога()
	
	НайтиИОтобразитьДокументыОплаты();
	РасчетСуммыКУплате(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументУплатыНалога(СпособУплаты)
	
	ОписаниеДействияПлатеж = ОписаниеДействияДляНовогоДокументаУплатыНалога(Организация, Патент,
		СуммаКУплате, СпособУплаты, ПериодСобытия);
	
	Если ОписаниеДействияПлатеж <> Неопределено Тогда
		ВыполнениеЗадачБухгалтераКлиент.ВыполнитьДействие(ОписаниеДействияПлатеж);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеДействияДляНовогоДокументаУплатыНалога(Организация, Патент, Сумма, СпособУплаты, ПериодСобытия)
	
	Возврат ВыполнениеЗадачБухгалтера.ОписаниеДействияПлатежПоПатенту(Организация, Патент, Сумма, СпособУплаты, ПериодСобытия);
	
КонецФункции

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПрименяетсяВычетПоОнлайнКассам = УчетПСН.ПрименяетсяВычетПоОнлайнКассам(Организация, ПериодСобытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокРасходыНаОнлайнКассы()
	
	Отбор = Новый Структура;
	Отбор.Вставить("УменьшаемыйНалог",
		ПредопределенноеЗначение("Перечисление.ВидыНалоговУменьшаемыхНаРасходыККТ.Патент"));
	Отбор.Вставить("Организация", Организация);
	Отбор.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("УменьшаемыйНалог",
		ПредопределенноеЗначение("Перечисление.ВидыНалоговУменьшаемыхНаРасходыККТ.Патент"));
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("НалоговыйПериод", ДатаОкончания);
	ПараметрыФормы.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	
	ОткрытьФорму("Документ.РасходыНаОнлайнКассыУменьшающиеНалоги.Форма.ФормаСписокРасходов", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРаспределениеРасходовНаОнлайнКассы()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	ПараметрыФормы.Вставить("ТекущийПатент", Патент);
	ПараметрыФормы.Вставить("РасходыНаОнлайнКассыВсего", РасходыНаОнлайнКассыВсего);
	ПараметрыФормы.Вставить("НалоговыйВычетТекущийПатент", НалоговыйВычетТекущийПатент);
	
	ОткрытьФорму("Обработка.ПомощникОплатыПатента.Форма.РаспределениеВычетаПоПатентам", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура ОформитьТекущийПлатеж(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ПредыдущийПлатеж.Видимость = Форма.ПредыдущийПлатеж > 0;
	
	Элементы.ТекущийПлатеж.Заголовок    = Форма.ТекущийПлатежОписание;
	Элементы.ПредыдущийПлатеж.Заголовок = Форма.ПредыдущийПлатежОписание;
	
	Элементы.СуммаНалога.Видимость          = Форма.ПрименяетсяВычетПоОнлайнКассам;
	Элементы.СуммаНалогаБезВычета.Видимость = НЕ Форма.ПрименяетсяВычетПоОнлайнКассам;
	
	Элементы.ГруппаРасходыНаОнлайнКассы.Видимость = Форма.ПрименяетсяВычетПоОнлайнКассам;
	Элементы.ГруппаОплатаНалога.Видимость         = Форма.ПрименяетсяВычетПоОнлайнКассам;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОформитьРасходыНаОнлайнКассыВсего(Форма)
	
	Если НЕ Форма.ПрименяетсяВычетПоОнлайнКассам Тогда
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	
	ФорматСумм = "ЧДЦ=; ЧН=0";
	
	ЭлементыНадписи = Новый Массив;
	
	Если Форма.РасходыНаОнлайнКассыВсего = 0 Тогда
		
		Элементы.РасходыНаОнлайнКассыВсего.Видимость = Ложь;
		Форма.НадписьРасходыНаОнлайнКассы =
			Новый ФорматированнаяСтрока(НСтр("ru = 'Добавить сведения о расходах'"), , , , "ДобавитьРасходыНаККТ");
		
	Иначе
		
		Элементы.РасходыНаОнлайнКассыВсего.Видимость = Истина;
		
		Если Форма.РасходыНаОнлайнКассыКоличествоКасс > 1 Тогда // Одну кассу не показываем.
			ТекстКоличествоКасс = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 касса;;%1 кассы;%1 касс;%1 касс'"),
				Форма.РасходыНаОнлайнКассыКоличествоКасс);
			ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(%1)'"), ТекстКоличествоКасс);
		Иначе
			ТекстНадписи = "";
		КонецЕсли;
		
		Форма.НадписьРасходыНаОнлайнКассы = Новый ФорматированнаяСтрока(ТекстНадписи);
		Элементы.НадписьРасходыНаОнлайнКассы.Видимость = Не ПустаяСтрока(ТекстНадписи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОформитьНалоговыйВычет(Форма)
	
	Если НЕ Форма.ПрименяетсяВычетПоОнлайнКассам Тогда // Незачем отображать невидимое.
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаУведомление.Видимость = Форма.РасходыНаОнлайнКассыВсего > 0;
	
	ОтображатьРасшифровкуВычета = ТребуетсяОтобразитьРасшифровкуВычета(Форма);
	
	Элементы.НалоговыйВычетТекущийПлатеж.Видимость = ОтображатьРасшифровкуВычета;
	Элементы.ГруппаПоясненияВычета.Видимость       = ОтображатьРасшифровкуВычета;
	
	Элементы.НалоговыйВычетДругиеПатенты.Видимость   = Форма.НалоговыйВычетДругиеПатенты > 0;
	Элементы.НалоговыйВычетСледующийПлатеж.Видимость = Форма.НалоговыйВычетСледующийПлатеж > 0;
	Элементы.НалоговыйВычетОстаток.Видимость         = Форма.НалоговыйВычетОстаток > 0;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОформитьУведомление(Форма)
	
	Если НЕ Форма.ПрименяетсяВычетПоОнлайнКассам Тогда // Незачем отображать невидимое.
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	
	ОтображатьУведомление            = Форма.РасходыНаОнлайнКассыВсего > 0;
	
	Элементы.ГруппаУведомление.Видимость = ОтображатьУведомление;
	
	Элементы.СформироватьУведомление.Видимость  = НЕ Форма.УведомлениеАктуально;
	Элементы.УведомлениеПредставление.Видимость = Форма.УведомлениеАктуально;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОформитьКомандыФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	ТребуетсяУведомление = Форма.ЕстьПравоСозданияУведомления
		И Форма.ПрименяетсяВычетПоОнлайнКассам
		И Форма.РасходыНаОнлайнКассыВсего > 0
		И (НЕ ЗначениеЗаполнено(Форма.Уведомление) ИЛИ НЕ Форма.УведомлениеАктуально);
	
	Элементы.СформироватьУведомление.Доступность = ТребуетсяУведомление;
	
	ТребуетсяУплата = Форма.ЕстьПравоСозданияДокументов И Форма.СуммаКУплате > 0;
	
	Элементы.ОплатитьСБанковскогоСчета.Доступность    = ТребуетсяУплата;
	Элементы.ОплатитьНаличнымиПоКвитанции.Доступность = ТребуетсяУплата;
	
	УведомлениеПоУмолчанию = ТребуетсяУведомление;
	УплатаПоУмолчанию = ТребуетсяУплата И НЕ УведомлениеПоУмолчанию;
	
	Элементы.ГруппаФормированиеУведомления.ЦветФона = ?(УведомлениеПоУмолчанию, Форма.ЦветПодсветки, Новый Цвет);
	Элементы.ГруппаКомандыУплаты.ЦветФона = ?(УплатаПоУмолчанию, Форма.ЦветПодсветки, Новый Цвет);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОформитьСуммуКУплате(Форма)
	
	Элементы = Форма.Элементы;
	
	ЕстьРасшифровкаВычета = ТребуетсяОтобразитьРасшифровкуВычета(Форма);
	
	Элементы.СуммаКУплате.Заголовок = ?(ЕстьРасшифровкаВычета,
		НСтр("ru = 'Текущий платеж с учетом уменьшения'"),
		НСтр("ru = 'Текущий платеж с учетом расходов'"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТребуетсяОтобразитьРасшифровкуВычета(Форма)
	
	ТребуетсяРасшифровкаВычета = Форма.НалоговыйВычетДругиеПатенты > 0
		ИЛИ Форма.НалоговыйВычетОстаток > 0
		ИЛИ Форма.НалоговыйВычетСледующийПлатеж > 0;
	
	Возврат ТребуетсяРасшифровкаВычета;
	
КонецФункции

#КонецОбласти
