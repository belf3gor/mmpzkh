#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТНСправкаРазделБ") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТНСправкаРазделБ",
			НСтр("ru = 'Раздел ""Б"" справки к ТТН'"),
			ПечатьТТНСправкаРазделБ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьТТНСправкаРазделБ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ЗапросПоСтранам = Новый Запрос;
	ЗапросПоСтранам.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ЗапросПоСтранам.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.КодСтраныЧисло КАК КодСтраныЧисло,
	|	ВложенныйЗапрос.КодСтраныСтрока КАК КодСтраныСтрока
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТТН.Грузоотправитель.КодСтраны КАК КодСтраныЧисло,
	|		ВЫРАЗИТЬ("""" КАК СТРОКА(3)) КАК КодСтраныСтрока
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		ТТН.Ссылка В(&МассивДокументов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТН.Грузополучатель.КодСтраны,
	|		ВЫРАЗИТЬ("""" КАК СТРОКА(3))
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		ТТН.Ссылка В(&МассивДокументов)) КАК ВложенныйЗапрос";
	
	ТаблицаСоответствийКодов = ЗапросПоСтранам.Выполнить().Выгрузить();
	
	Для Каждого СтрокаКодов Из ТаблицаСоответствийКодов Цикл
		СтрокаКодов.КодСтраныСтрока = Формат(СтрокаКодов.КодСтраныЧисло, "ЧГ=");
	КонецЦикла;
	
	ПустойКонтрагент = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ОрганизацияКонтрагентГосИС");
	
	ЗапросПоЛицензиатам = Новый Запрос;
	ЗапросПоЛицензиатам.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	ЗапросПоЛицензиатам.УстановитьПараметр("ПустойКонтрагент", ПустойКонтрагент);
	
	ЗапросПоЛицензиатам.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Контрагент КАК Лицензиат,
	|	ВложенныйЗапрос.ДатаТТН КАК ДатаТТН
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТТНИсходящаяЕГАИС.Грузоотправитель.Контрагент КАК Контрагент,
	|		ТТНИсходящаяЕГАИС.ДатаТТН КАК ДатаТТН
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|	ГДЕ
	|		ТТНИсходящаяЕГАИС.Ссылка В(&МассивДокументов)
	|		И ТТНИсходящаяЕГАИС.Грузоотправитель.Контрагент <> &ПустойКонтрагент
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТНИсходящаяЕГАИС.Грузополучатель.Контрагент,
	|		ТТНИсходящаяЕГАИС.ДатаТТН
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|	ГДЕ
	|		ТТНИсходящаяЕГАИС.Ссылка В(&МассивДокументов)
	|		И ТТНИсходящаяЕГАИС.Грузополучатель.Контрагент <> &ПустойКонтрагент) КАК ВложенныйЗапрос";
	
	ТаблицаЛицензий = ЗапросПоЛицензиатам.Выполнить().Выгрузить();
	ТаблицаЛицензий.Колонки.Добавить("Наименование" , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150)));
	ТаблицаЛицензий.Колонки.Добавить("ДатаНачала"   , Новый ОписаниеТипов("Дата"));
	ТаблицаЛицензий.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	ТаблицаЛицензий.Колонки.Добавить("КемВыдана"    , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200)));
	
	ИнтеграцияЕГАИСПереопределяемый.ЗаполнитьТаблицуЛицензийНаАлкоголь(ТаблицаЛицензий);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСоответствийКодов", ТаблицаСоответствийКодов);
	Запрос.УстановитьПараметр("ТаблицаЛицензий"         , ТаблицаЛицензий);
	Запрос.УстановитьПараметр("МассивДокументов"        , МассивОбъектов);
	Запрос.УстановитьПараметр("ПустаяОрганизация"       , ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ОрганизацияКонтрагентГосИС"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСоответствийКодов.КодСтраныЧисло,
	|	ТаблицаСоответствийКодов.КодСтраныСтрока
	|ПОМЕСТИТЬ ТаблицаСоответствийКодов
	|ИЗ
	|	&ТаблицаСоответствийКодов КАК ТаблицаСоответствийКодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЛицензий.Лицензиат,
	|	ТаблицаЛицензий.ДатаТТН,
	|	ТаблицаЛицензий.Наименование,
	|	ТаблицаЛицензий.ДатаНачала,
	|	ТаблицаЛицензий.ДатаОкончания,
	|	ТаблицаЛицензий.КемВыдана
	|ПОМЕСТИТЬ ТаблицаЛицензий
	|ИЗ
	|	&ТаблицаЛицензий КАК ТаблицаЛицензий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыТТН.Ссылка.Грузоотправитель.Сопоставлено, ЛОЖЬ)
	|			ТОГДА ТоварыТТН.Ссылка.Грузоотправитель.Контрагент
	|		ИНАЧЕ &ПустаяОрганизация
	|	КОНЕЦ КАК Продавец,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыТТН.Ссылка.Грузополучатель.Сопоставлено, ЛОЖЬ)
	|			ТОГДА ТоварыТТН.Ссылка.Грузополучатель.Контрагент
	|		ИНАЧЕ &ПустаяОрганизация
	|	КОНЕЦ КАК Покупатель,
	|	ЕСТЬNULL(ЛицензияПродавца.Наименование, """") КАК ЛицензияПродавцаНаименование,
	|	ЕСТЬNULL(ЛицензияПродавца.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК ЛицензияПродавцаДатаНачала,
	|	ЕСТЬNULL(ЛицензияПродавца.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ЛицензияПродавцаДатаОкончания,
	|	ЕСТЬNULL(ЛицензияПродавца.КемВыдана, """") КАК ЛицензияПродавцаВыдана,
	|	ЕСТЬNULL(ЛицензияПокупателя.Наименование, """") КАК ЛицензияПокупателяНаименование,
	|	ЕСТЬNULL(ЛицензияПокупателя.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК ЛицензияПокупателяДатаНачала,
	|	ЕСТЬNULL(ЛицензияПокупателя.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ЛицензияПокупателяДатаОкончания,
	|	ЕСТЬNULL(ЛицензияПокупателя.КемВыдана, """") КАК ЛицензияПокупателяВыдана,
	|	ТоварыТТН.АлкогольнаяПродукция.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫРАЗИТЬ(ТоварыТТН.Количество * ЕСТЬNULL(ТоварыТТН.АлкогольнаяПродукция.Объем, 0) / 10 КАК ЧИСЛО(15, 3)) КАК КоличествоДАЛ,
	|	ТоварыТТН.Количество КАК КоличествоЕдиниц,
	|	""шт"" КАК НаименованиеЕдиницы,
	|	СтранаПродавца.КодАльфа2 КАК КодСтраныПродавца,
	|	СтранаПокупателя.КодАльфа2 КАК КодСтраныПокупателя,
	|	ТоварыТТН.Ссылка.НомерТТН КАК НомерТТН,
	|	ТоварыТТН.Ссылка.ДатаТТН КАК ДатаТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТоварыТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЛицензий КАК ЛицензияПродавца
	|		ПО ТоварыТТН.Ссылка.Грузоотправитель.Контрагент = ЛицензияПродавца.Лицензиат
	|			И ТоварыТТН.Ссылка.ДатаТТН = ЛицензияПродавца.ДатаТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЛицензий КАК ЛицензияПокупателя
	|		ПО ТоварыТТН.Ссылка.Грузополучатель.Контрагент = ЛицензияПокупателя.Лицензиат
	|			И ТоварыТТН.Ссылка.ДатаТТН = ЛицензияПокупателя.ДатаТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтранаПродавца
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСоответствийКодов КАК СоответствиеКодаСтраныПродавца
	|			ПО СтранаПродавца.Код = СоответствиеКодаСтраныПродавца.КодСтраныСтрока
	|		ПО (ТоварыТТН.Ссылка.Грузоотправитель.КодСтраны = СоответствиеКодаСтраныПродавца.КодСтраныЧисло)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтранаПокупателя
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСоответствийКодов КАК СоответствиеКодаСтраныПокупателя
	|			ПО СтранаПокупателя.Код = СоответствиеКодаСтраныПокупателя.КодСтраныСтрока
	|		ПО (ТоварыТТН.Ссылка.Грузополучатель.КодСтраны = СоответствиеКодаСтраныПокупателя.КодСтраныЧисло)
	|ГДЕ
	|	ТоварыТТН.Ссылка В(&МассивДокументов)";
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТНИсходящаяЕГАИС_ТТНСправкаРазделБ";
	
	ЗаполнитьТабличныйДокументТТНСправкаРазделБ(ТабличныйДокумент, Запрос, ОбъектыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Процедура заполняет табличный документ Раздел "Б" справки к ТТН.
//
Процедура ЗаполнитьТабличныйДокументТТНСправкаРазделБ(ТабличныйДокумент, Запрос, ОбъектыПечати)
	
	ТабличныйДокумент.ПолеСверху = 15;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСнизу = 15;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьРазделаБСправкиТТН.ПФ_MXL_ТТН_СправкаРазделБ");
	ОсновнаяОбласть = Макет.ПолучитьОбласть("ОсновнаяОбласть");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		СведенияОПродавце = Новый Структура();
		СведенияОПродавце.Вставить("ПолноеНаименование", "");
		СведенияОПродавце.Вставить("ФактическийАдрес", "");
		СведенияОПродавце.Вставить("ИНН", "");
		СведенияОПродавце.Вставить("КПП", "");
		
		ИнтеграцияИСПереопределяемый.ЗаполнитьСведенияОбОрганизации(ДанныеПечати.Продавец, СведенияОПродавце, ДанныеПечати.ДатаТТН);
		
		СведенияОПокупателе = Новый Структура();
		СведенияОПокупателе.Вставить("ПолноеНаименование", "");
		СведенияОПокупателе.Вставить("ФактическийАдрес", "");
		СведенияОПокупателе.Вставить("ИНН", "");
		СведенияОПокупателе.Вставить("КПП", "");

		ИнтеграцияИСПереопределяемый.ЗаполнитьСведенияОбОрганизации(ДанныеПечати.Покупатель, СведенияОПокупателе, ДанныеПечати.ДатаТТН);
		
		ОсновнаяОбласть.Параметры.НаименованиеПродавца =
			ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование");
		ОсновнаяОбласть.Параметры.НаименованиеПокупателя =
			ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование");
		
		ОсновнаяОбласть.Параметры.АдресПродавца =
			ОписаниеОрганизации(СведенияОПродавце, "ФактическийАдрес");
		ОсновнаяОбласть.Параметры.АдресПокупателя =
			ОписаниеОрганизации(СведенияОПокупателе, "ФактическийАдрес");
			
		ОсновнаяОбласть.Параметры.СтрокаЛицензииПродавца =
			ДанныеПечати.ЛицензияПродавцаНаименование +
			?(ЗначениеЗаполнено(ДанныеПечати.ЛицензияПродавцаДатаНачала), ", " + НСтр("ru='срок действия лицензии с'") + " " + Формат(ДанныеПечати.ЛицензияПродавцаДатаНачала, "ДЛФ=D"), "") +
			?(ЗначениеЗаполнено(ДанныеПечати.ЛицензияПродавцаДатаОкончания), " по " + Формат(ДанныеПечати.ЛицензияПродавцаДатаОкончания, "ДЛФ=D"), "") +
			?(ЗначениеЗаполнено(ДанныеПечати.ЛицензияПродавцаВыдана), " " + НСтр("ru='выдана'") + " " + ДанныеПечати.ЛицензияПродавцаВыдана, "");
		ОсновнаяОбласть.Параметры.СтрокаЛицензииПокупателя =
			ДанныеПечати.ЛицензияПокупателяНаименование +
			?(ЗначениеЗаполнено(ДанныеПечати.ЛицензияПокупателяДатаНачала), ", " + НСтр("ru='срок действия лицензии с'") + " " + Формат(ДанныеПечати.ЛицензияПокупателяДатаНачала, "ДЛФ=D"), "") +
			?(ЗначениеЗаполнено(ДанныеПечати.ЛицензияПокупателяДатаОкончания), " по " + Формат(ДанныеПечати.ЛицензияПокупателяДатаОкончания, "ДЛФ=D"), "") +
			?(ЗначениеЗаполнено(ДанныеПечати.ЛицензияПокупателяВыдана), " " + НСтр("ru='выдана'") + " " + ДанныеПечати.ЛицензияПокупателяВыдана, "");
			
		ОсновнаяОбласть.Параметры.КодСтраныПродавца = ДанныеПечати.КодСтраныПродавца;
		ОсновнаяОбласть.Параметры.КодСтраныПокупателя = ДанныеПечати.КодСтраныПокупателя;
		
		ОсновнаяОбласть.Параметры.ИННКПППродавца =
			ОписаниеОрганизации(СведенияОПродавце, "ИНН") +
			" / " + ОписаниеОрганизации(СведенияОПродавце, "КПП");
		ОсновнаяОбласть.Параметры.ИННКПППокупателя =
			ОписаниеОрганизации(СведенияОПокупателе, "ИНН") +
			" / " + ОписаниеОрганизации(СведенияОПокупателе, "КПП");
		
		ОсновнаяОбласть.Параметры.НаименованиеПродукции = ДанныеПечати.НоменклатураНаименование;
		
		ОсновнаяОбласть.Параметры.Количество = Формат(ДанныеПечати.КоличествоДАЛ, "ЧРГ=' '") + " " + НСтр("ru='дал.'") + " / " +
			Формат(ДанныеПечати.КоличествоЕдиниц, "ЧРГ=' '") + " " + ДанныеПечати.НаименованиеЕдиницы;
		
		ОсновнаяОбласть.Параметры.НомерТТН = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.НомерТТН, Ложь, Истина);
		
		ОсновнаяОбласть.Параметры.ДатаТТН = ДанныеПечати.ДатаТТН;
		
		РуководительПродавца = ИнтеграцияИС.ДанныеРуководителяОрганизации(ДанныеПечати.Продавец, ДанныеПечати.ДатаТТН);
		ОсновнаяОбласть.Параметры.ОтветственныйПродавца = РуководительПродавца.Должность + " " + ФамилияИнициалыФизЛица(РуководительПродавца.Руководитель);
		
		РуководительПокупателя = ИнтеграцияИС.ДанныеРуководителяОрганизации(ДанныеПечати.Покупатель, ДанныеПечати.ДатаТТН);
		ОсновнаяОбласть.Параметры.ОтветственныйПокупателя = РуководительПокупателя.Должность + " " + ФамилияИнициалыФизЛица(РуководительПокупателя.Руководитель);
		
		ТабличныйДокумент.Вывести(ОсновнаяОбласть);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает структуру данных со сводным описанием контрагента.
//
Функция ОписаниеОрганизации(СписокСведений, Список = "", СПрефиксом = Истина) Экспорт

	Если ПустаяСтрока(Список) Тогда
		Список = "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет";
	КонецЕсли;
	
	Список = СтрЗаменить(Список, "БанковскиеРеквизиты", "НомерСчета,Банк,БИК,КоррСчет");

	Результат = "";

	СоответствиеПараметров = Новый Соответствие();
	СоответствиеПараметров.Вставить("ПолноеНаименование", " ");
	СоответствиеПараметров.Вставить("ИНН",                " " + НСтр("ru='ИНН'") + " ");
	СоответствиеПараметров.Вставить("КПП",                " " + НСтр("ru='КПП'") + " ");
	СоответствиеПараметров.Вставить("ЮридическийАдрес",   " ");
	СоответствиеПараметров.Вставить("ФактическийАдрес",   " ");
	СоответствиеПараметров.Вставить("Телефоны",           " " + НСтр("ru='тел.:'") + " ");
	СоответствиеПараметров.Вставить("НомерСчета",         " " + НСтр("ru='р/с'") + " ");
	СоответствиеПараметров.Вставить("Банк",               " " + НСтр("ru='в банке'") + " ");
	СоответствиеПараметров.Вставить("БИК",                " " + НСтр("ru='БИК'") + " ");
	СоответствиеПараметров.Вставить("КоррСчет",           " " + НСтр("ru='к/с'") + " ");
	СоответствиеПараметров.Вставить("КодПоОКПО",          " " + НСтр("ru='Код по ОКПО'") + " ");
	СоответствиеПараметров.Вставить("КодПоОКАТО",         " " + НСтр("ru='Код по ОКАТО'") + " ");

	Список          = Список + ?(Прав(Список, 1) = ",", "", ",");
	ЧислоПараметров = СтрЧислоВхождений(Список, ",");

	Для Счетчик = 1 По ЧислоПараметров Цикл

		ПозЗапятой = Найти(Список, ",");

		Если ПозЗапятой > 0  Тогда
			
			ИмяПараметра = Лев(Список, ПозЗапятой - 1);
			Список       = Сред(Список, ПозЗапятой + 1, СтрДлина(Список));

			Попытка
				СтрокаДополнения = "";
				СписокСведений.Свойство(ИмяПараметра, СтрокаДополнения);

				Если ПустаяСтрока(СтрокаДополнения) Тогда
					Продолжить;
				КонецЕсли;

				Префикс = СоответствиеПараметров[ИмяПараметра];
				Если Не ПустаяСтрока(Результат)  Тогда
					Результат = Результат + ",";
				КонецЕсли; 

				Результат = Результат + ?(СПрефиксом = Истина, Префикс, "") + СтрокаДополнения;
			Исключение
				
				ТекстСообщения  = НСтр("ru='Не удалось определить значение параметра организации: %ИмяПараметра%'");
				ТекстСообщения  = СтрЗаменить(ТекстСообщения, "%ИмяПараметра%", ИмяПараметра);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
			КонецПопытки;

		КонецЕсли;

	КонецЦикла;

	Возврат СокрЛП(Результат);

КонецФункции

Функция ФамилияИнициалыФизЛица(Объект) Экспорт
	
	ФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(Объект)," ");
	
	КоличествоПодстрок = ФИО.Количество();
	Фамилия            = ?(КоличествоПодстрок > 0,ФИО[0],"");
	Имя                = ?(КоличествоПодстрок > 1,ФИО[1],"");
	Отчество           = ?(КоличествоПодстрок > 2,ФИО[2],"");
	
	Возврат ?(Не ПустаяСтрока(Фамилия), 
				Фамилия + ?(Не ПустаяСтрока(Имя)," " + Лев(Имя,1) + "." + ?(Не ПустаяСтрока(Отчество),Лев(Отчество,1)+".", ""), ""),
				"");
				
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
