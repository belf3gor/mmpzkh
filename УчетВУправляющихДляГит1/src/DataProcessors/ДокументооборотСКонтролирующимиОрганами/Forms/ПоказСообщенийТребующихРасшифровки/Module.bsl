&НаКлиенте
Перем КонтекстЭДОКлиент;

&НаКлиенте
Перем МассивСообщенийКлиент Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Сообщения = Неопределено Тогда 
		Отказ = Истина;
		Возврат;
	Иначе
		МассивСообщений = Параметры.Сообщения;
	КонецЕсли;
	
	Если ТипЗнч(МассивСообщений) <> Тип("Массив") И МассивСообщений.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыИНастройки(МассивСообщений, Отказ);
	
	ОпределитьКоличествоСообщенийКРасшифровке();
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ПродолжитьАвтообмен = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = Неопределено ИЛИ ТипЗнч(Параметр) <> Тип("Массив") Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ЗаполнитьРеквизитыИНастройки(Параметр, Отказ);
	Если Отказ Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаРасшифровать(Команда)
	
	ПродолжитьАвтообмен = Истина;
	ЗакрытьФормуИНачатьРасшифровку();
	
КонецПроцедуры

&НаКлиенте
Процедура БольшеНеПоказывать(Команда)
	
	ПродолжитьАвтообмен = Ложь;
	Закрыть(ПродолжитьАвтообмен);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПозже(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыИНастройки(МассивСообщений, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТранспортноеСообщение.ЦиклОбмена.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранспортноеСообщение.Ссылка) КАК КоличествоСообщений
	|ИЗ
	|	Документ.ТранспортноеСообщение КАК ТранспортноеСообщение
	|ГДЕ
	|	ТранспортноеСообщение.Ссылка В(&Ссылка)
	|	И НЕ ТранспортноеСообщение.УчетнаяЗапись.ОтключитьАвтообмен
	|	И НЕ ТранспортноеСообщение.ЦиклОбмена.Организация.УчетнаяЗаписьОбмена = &ПустаяУчетнаяЗапись
	|
	|СГРУППИРОВАТЬ ПО
	|	ТранспортноеСообщение.ЦиклОбмена.Организация";
	Запрос.УстановитьПараметр("Ссылка", МассивСообщений);
	Запрос.УстановитьПараметр("ПустаяУчетнаяЗапись", Справочники.УчетныеЗаписиДокументооборота.ПустаяСсылка());
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОрганизацииИзСообщений = Результат.ВыгрузитьКолонку("Организация");
	
	ТаблицаРасшифровкиПоОрганизациям.Очистить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		
		НоваяСтрока = ТаблицаРасшифровкиПоОрганизациям.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультата);
		НоваяСтрока.Отметка = Истина;
		
	КонецЦикла;
	
	// По организациям сообщения есть, сохраняем параметр в реквизит
	Для Каждого ЭлементМассива Из МассивСообщений Цикл 
		НоваяСтрока = ТребующиеРасшифровки.Добавить();
		НоваяСтрока.ТранспортноеСообщение = ЭлементМассива;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	Если МассивСообщенийКлиент = Неопределено ИЛИ ТипЗнч(МассивСообщенийКлиент) <> Тип("Массив") Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ЗаполнитьРеквизитыИНастройки(МассивСообщенийКлиент, Отказ);
	Если Отказ Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуИНачатьРасшифровку()
 
	СобратьСообщенияДляРасшифровки();
	
	ВсегоСообщений = ТребующиеРасшифровки.Количество();
	
	Если ВсегоСообщений = 0 Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	// Расшифровка будет запущена сразу после закрытия этой формы вместе с формой бублика.
	ДополнительныеПараметры = ДопПараметрыДляРасшифровки();
	Закрыть(ДополнительныеПараметры);
	
КонецПроцедуры
	
&НаСервере
Процедура СобратьСообщенияДляРасшифровки()
	
	МассивОрганизаций = РеквизитФормыВЗначение("ТаблицаРасшифровкиПоОрганизациям").ВыгрузитьКолонку("Организация");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СвойстваТранспортныхСообщений.ТранспортноеСообщение.ЦиклОбмена.Организация КАК Организация,
	|	СвойстваТранспортныхСообщений.ТранспортноеСообщение КАК Ссылка
	|ИЗ
	|	РегистрСведений.СвойстваТранспортныхСообщений КАК СвойстваТранспортныхСообщений
	|ГДЕ
	|	СвойстваТранспортныхСообщений.ТранспортноеСообщение.ЦиклОбмена.Организация В(&Организации)
	|	И НЕ СвойстваТранспортныхСообщений.ТранспортноеСообщение.УчетнаяЗапись.ОтключитьАвтообмен
	|	И НЕ СвойстваТранспортныхСообщений.ТранспортноеСообщение.ЦиклОбмена.Организация.УчетнаяЗаписьОбмена = &ПустаяУчетнаяЗапись
	|	И СвойстваТранспортныхСообщений.ТребуетРасшифровки";
	Запрос.УстановитьПараметр("ПустаяУчетнаяЗапись", 	Справочники.УчетныеЗаписиДокументооборота.ПустаяСсылка());
	Запрос.УстановитьПараметр("Организации", 			МассивОрганизаций);
	
	ТребующиеРасшифровки.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НоваяСтрока = ТребующиеРасшифровки.Добавить();
		НоваяСтрока.Организация = Выборка.Организация;
		НоваяСтрока.ТранспортноеСообщение = Выборка.Ссылка;
		НоваяСтрока.ТипТранспортногоСообщения = Выборка.Ссылка.Тип;
	КонецЦикла;
	
	// уточнение количества собранных вх.сообщений
	ПромежуточнаяТаблица = ТребующиеРасшифровки.Выгрузить();
	ПромежуточнаяТаблица.Свернуть("Организация");
	
	Для Каждого СтрокаСвертки ИЗ ПромежуточнаяТаблица Цикл 
		
		Отбор = Новый Структура("Организация", СтрокаСвертки.Организация);
		
		РезультатОтбора = ТаблицаРасшифровкиПоОрганизациям.НайтиСтроки(Отбор);
		Если РезультатОтбора.Количество() > 0 Тогда 
			ОтборТребующихРасшифровки = ТребующиеРасшифровки.НайтиСтроки(Отбор);
			РезультатОтбора[0].КоличествоСообщений = ОтборТребующихРасшифровки.Количество();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДопПараметрыДляРасшифровки()

	АдресТребующиеРасшифровки = ПоместитьВоВременноеХранилище(
		РеквизитФормыВЗначение("ТребующиеРасшифровки"), 
		Новый УникальныйИдентификатор);
		
	АдресТаблицаРасшифровкиПоОрганизациям = ПоместитьВоВременноеХранилище(
		РеквизитФормыВЗначение("ТаблицаРасшифровкиПоОрганизациям"),
		Новый УникальныйИдентификатор);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("АдресТребующиеРасшифровки", АдресТребующиеРасшифровки);
	ДополнительныеПараметры.Вставить("АдресТаблицаРасшифровкиПоОрганизациям", АдресТаблицаРасшифровкиПоОрганизациям);
	
	Возврат ДополнительныеПараметры;

КонецФункции

&НаСервере
Процедура ОпределитьКоличествоСообщенийКРасшифровке()

	КоличествоСообщенийКРасшифровке = 0;
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасшифровкиПоОрганизациям Цикл
		КоличествоСообщенийКРасшифровке = КоличествоСообщенийКРасшифровке + СтрокаТаблицы.КоличествоСообщений;
	КонецЦикла;
	
	ТекстНадписи = НСтр("ru = 'Получено %1 от контролирующих органов.
                         |Расшифровать сообщения сейчас?'");
						 
	ЧислоИПредметИсчисления = ДлительнаяОтправкаКлиентСервер.ЧислоИПредметИсчисления(
		КоличествоСообщенийКРасшифровке,
		"сообщение",
		"сообщения",
		"сообщений",
		"с");
						 
	ТекстНадписи = СтрШаблон(ТекстНадписи, ЧислоИПредметИсчисления);
	Элементы.ТекстНадписи.Заголовок = ТекстНадписи;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

#КонецОбласти

