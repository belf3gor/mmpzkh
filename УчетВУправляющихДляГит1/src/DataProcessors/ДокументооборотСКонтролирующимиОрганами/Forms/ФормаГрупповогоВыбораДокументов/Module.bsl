&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Организация = Параметры.Организация;
	
	СформироватьТаблицу(Параметры.ДокументыИсточники);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументыВыбранПриИзменении(Элемент)
	ИзменитьОформлениеКоличестваВыбранных();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ДокументыИсточники.ТекущиеДанные <> Неопределено Тогда 
		
		Если Поле.Имя = "ДокументыДокумент" Тогда 
			
			СтандартнаяОбработка = Ложь;
			ПоказатьЗначение(,Элементы.ДокументыИсточники.ТекущиеДанные.Документ);
			
		ИначеЕсли Поле.Имя = "ДокументыПредставлениеВложений" Тогда
			
			Если Элементы.ДокументыИсточники.ТекущиеДанные.ЕстьЭлектронныйДокумент Тогда 
				
				СтандартнаяОбработка = Ложь;
				
				ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ОткрытьАктуальныйЭД(
					Элементы.ДокументыИсточники.ТекущиеДанные.Документ);
				
			Иначе
				
				ОписаниеОповещения = Новый ОписаниеОповещения(
					"ДокументыВыбор_ПослеУточненияСоставаВложений", 
					ЭтотОбъект);
					
				ДополнительныеПараметры = Новый Структура();
				ДополнительныеПараметры.Вставить("Сканы", Элементы.ДокументыИсточники.ТекущиеДанные.Сканы);
				ДополнительныеПараметры.Вставить("УникальныйИдентификаторРодителя", УникальныйИдентификатор);
					
				ОткрытьФорму(
					КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.ФормаБыстройКорректировкиВложений",
					ДополнительныеПараметры,
					,
					,
					,
					,
					ОписаниеОповещения);
				
			КонецЕсли;
			
		ИначеЕсли Поле.Имя = "ДокументыПредставлениеВложений" Тогда
			
			ИзменитьОформлениеКоличестваВыбранных();

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВыбор_ПослеУточненияСоставаВложений(Вложения, ВходящийКонтекст) Экспорт

	Если Вложения = Неопределено Тогда
		Возврат;
	Конецесли;
	
	Если Элементы.ДокументыИсточники.ТекущиеДанные <> Неопределено Тогда
		ОбновитьВложения(Элементы.ДокументыИсточники.ТекущиеДанные.Документ, Вложения)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВложения(ДокументИсточник, Вложения) Экспорт

	Отбор = Новый Структура();
	Отбор.Вставить("Документ", ДокументИсточник);
	 
	НайденныеСтроки = ДокументыИсточники.НайтиСтроки(Отбор);
	
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		НайденнаяСтрока.Сканы = Вложения;
	КонецЦикла;
	
	ИзменитьОформлениеВложений();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если НЕ ПроверкаПройдена() Тогда
		Возврат;
	КонецЕсли;
	
	Результат = СформироватьРезультатВыборка();
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверкаПройдена()
	
	// Количество сканов, отмеченных флажками
	
	ЕстьОшибка = Ложь;
	
	ВыбраноДокументов = 0;
	Для каждого СтрокаДокумента Из ДокументыИсточники Цикл
		
		Если СтрокаДокумента.Пометка Тогда
			
			Если НетВложений(СтрокаДокумента) Тогда
				
				ЕстьОшибка  = Истина;
				
				ТекстОшибки = НСтр("ru = 'У документа ""'") + Строка(СтрокаДокумента.Документ) + НСтр("ru = '"" отсутствуют вложения'");
				Индекс      = ДокументыИсточники.Индекс(СтрокаДокумента);
				Поле        = "ДокументыИсточники[" + Формат(Индекс, "ЧГ=0") + "].Количество";
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,Поле);
				
			Иначе
				ВыбраноДокументов = ВыбраноДокументов + 1;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВыбраноДокументов = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Выберите хотя бы один документ'"));
		ЕстьОшибка = Истина;
	КонецЕсли;
	
	Возврат НЕ ЕстьОшибка;
	
КонецФункции

&НаСервере
Функция СформироватьРезультатВыборка()
	
	// Открываем транзакцию
	НачатьТранзакцию();
	МассивВыбранныхДокументов = Новый Массив;
	
	Для каждого ДокументИсточник Из ДокументыИсточники Цикл
		
		Если НЕ ДокументИсточник.Пометка Тогда
			Продолжить;
		Конецесли;
		
		Если ДокументИсточник.ЕстьЭлектронныйДокумент Тогда
			
			СтруктураСвойств = Новый Структура;
			СтруктураСвойств.Вставить("ВыбранныйДокумент", 	ДокументИсточник.Документ);
			СтруктураСвойств.Вставить("ВидДокументаФНС", 	ДокументИсточник.ВидДокументаФНС);
			
			МассивВыбранныхДокументов.Добавить(СтруктураСвойств);
			
			Продолжить;
		КонецЕсли;
		
		НовыйЭлемент = Справочники.СканированныеДокументыДляПередачиВЭлектронномВиде.СоздатьЭлемент();
		НовыйЭлемент.Организация 				= Организация;
		НовыйЭлемент.ВидДокумента 				= Перечисления.ВидыПредставляемыхДокументов.ИныеДокументы;
		НовыйЭлемент.ВерсияПриказа 				= Перечисления.ПриказОписиИсходящихДокументов.ПриказММВ_7_6_16;
		НовыйЭлемент.Наименование 	 			= ДокументИсточник.СведенияДокумента;
		НовыйЭлемент.СведенияДокумента 			= ДокументИсточник.СведенияДокумента;
		НовыйЭлемент.СведенияДокументаОснования = ДокументИсточник.СведенияДокументаОснования;
		
		Попытка
			НовыйЭлемент.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось записать элемент справочника'") + ":
			|" + ОписаниеОшибки());
			
			ОтменитьТранзакцию();
			Возврат Неопределено;
		КонецПопытки;
		
		ОбъектСсылка = НовыйЭлемент.Ссылка;
		
		СтруктураСвойств = Новый Структура;
		СтруктураСвойств.Вставить("ВыбранныйДокумент", 	ОбъектСсылка);
		СтруктураСвойств.Вставить("ВидДокументаФНС", 	Перечисления.ВидыПредставляемыхДокументов.ИныеДокументы);
		
		МассивВыбранныхДокументов.Добавить(СтруктураСвойств);
		
		// Присоединяем файлы методами БСП
		Если ЗначениеЗаполнено(ДокументИсточник.Сканы) Тогда
			Для каждого Скан Из ДокументИсточник.Сканы Цикл
				
				Если НЕ Скан.Пометка Тогда
					Продолжить;
				Конецесли;
				
				ЧастиИмени = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(Скан.Представление);
				РасширениеФайлаБезТочки = Сред(ЧастиИмени.Расширение, 2);
				
				ДополнительныеПараметры = Новый Структура();
				ДополнительныеПараметры.Вставить("ВладелецФайлов", 				ОбъектСсылка);
				ДополнительныеПараметры.Вставить("ИмяБезРасширения", 			ЧастиИмени.ИмяБезРасширения);
				ДополнительныеПараметры.Вставить("Автор", 						Неопределено);
				ДополнительныеПараметры.Вставить("РасширениеБезТочки", 			РасширениеФайлаБезТочки);
				ДополнительныеПараметры.Вставить("ВремяИзмененияУниверсальное", Неопределено);
				
				ПрисоединенныйФайлСсылка = ПрисоединенныеФайлы.ДобавитьПрисоединенныйФайл(
					ДополнительныеПараметры,
					Скан.Значение.АдресДанных);
					
				ПрисоединенныйФайлОбъект = ПрисоединенныйФайлСсылка.ПолучитьОбъект();
				ПрисоединенныйФайлОбъект.НомерСтраницы = ДокументИсточник.Сканы.Индекс(Скан) + 1;
				ПрисоединенныйФайлОбъект.Записать();
					
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();
	
	Возврат МассивВыбранныхДокументов;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;

КонецПроцедуры

&НаСервере
Процедура СформироватьТаблицу(ПараметрыДокументыИсточники)
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	
	// Описание присоединенных сканов
	ФайлыИсточников = СвойстваПрисоединенныхСканов(ПараметрыДокументыИсточники);
	
	Для каждого ДокументИсточник Из ПараметрыДокументыИсточники Цикл
		
		НоваяСтрока = ДокументыИсточники.Добавить();
		
		Если ТипЗнч(ДокументИсточник) = Тип("Структура") Тогда
			
			ДокументСсылка = ДокументИсточник.Ссылка;
			
			НоваяСтрока.СведенияДокумента          = ДокументИсточник.Описание;
			НоваяСтрока.СведенияДокументаОснования = ДокументИсточник.Основание;
			
		Иначе
				
			ДокументСсылка = ДокументИсточник;
			НоваяСтрока.СведенияДокумента = Строка(ДокументСсылка);
			
		КонецЕсли;
		
		НоваяСтрока.Документ = ДокументСсылка;
		НоваяСтрока.Пометка  = Истина;
		
		ИнициализироватьВложения(
			ДокументСсылка, 
			ФайлыИсточников, 
			НоваяСтрока,
			КонтекстЭДОСервер);
		
	КонецЦикла;
	
	ИзменитьОформлениеВложений();
	ИзменитьОформлениеКоличестваВыбранных();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьВложения(ДокументИсточник, ФайлыИсточников, НоваяСтрока, КонтекстЭДОСервер)
	
	ЭлектронныеДокументы = КонтекстЭДОСервер.ЭлектронныеДокументыЭДО(ДокументИсточник);
	
	НоваяСтрока.ЕстьЭлектронныйДокумент = ЭлектронныеДокументы.ЕстьЭлектронныйДокумент;
	
	Если ЭлектронныеДокументы.ЕстьЭлектронныйДокумент Тогда
		НоваяСтрока.ВидДокументаФНС = ЭлектронныеДокументы.ВидДокументаФНС;
	Иначе
		
		// Если нет документа 1С-ЭДО, тогда должен быть скан.
		
		ПрисоединенныеСканы = ФайлыИсточников.Получить(ДокументИсточник);
		
		ЕстьСканы = НЕ (ПрисоединенныеСканы = Неопределено
			ИЛИ ТипЗнч(ПрисоединенныеСканы) = Тип("Массив") И ПрисоединенныеСканы.Количество() = 0);
		
		Если ЕстьСканы Тогда
			
			Сканы = Новый СписокЗначений;
			
			Для каждого ПрисоединенныйСкан Из ПрисоединенныеСканы Цикл
				Сканы.Добавить(ПрисоединенныйСкан, ПрисоединенныйСкан.Имя, Истина);
			КонецЦикла;
			
			НоваяСтрока.Сканы = Сканы;
			
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеВложений()
	
	Для каждого СтрокаДокумента Из ДокументыИсточники Цикл
		
		Если СтрокаДокумента.ЕстьЭлектронныйДокумент Тогда
			СтрокаДокумента.ПредставлениеВложений = НСтр("ru = 'XML-документ'");
		Иначе
			
			Если НетВложений(СтрокаДокумента) Тогда
				СтрокаДокумента.ПредставлениеВложений = НСтр("ru = 'Выбрать сканы'");
			Иначе
				
				// Количество сканов, отмеченных флажками
				КоличествоВложений = 0;
				Для каждого Скан Из СтрокаДокумента.Сканы Цикл
					Если Скан.Пометка Тогда
						КоличествоВложений = КоличествоВложений + 1;
					КонецЕсли;
				КонецЦикла; 
				 
				СтрокаДокумента.ПредставлениеВложений = ДлительнаяОтправкаКлиентСервер.ЧислоИПредметИсчисления(
					КоличествоВложений,
					НСтр("ru = 'скан'"),
					НСтр("ru = 'скана'"),
					НСтр("ru = 'сканов'"),
					"м");
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
	ИзменитьОформлениеКоличестваВыбранных();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НетВложений(СтрокаДокумента)
	
	НетВложений = НЕ СтрокаДокумента.ЕстьЭлектронныйДокумент 
		И (СтрокаДокумента.Сканы = Неопределено
		ИЛИ (ТипЗнч(СтрокаДокумента.Сканы) = Тип("Массив") 
		ИЛИ ТипЗнч(СтрокаДокумента.Сканы) = Тип("СписокЗначений")) 
		И СтрокаДокумента.Сканы.Количество() = 0);
		
	Возврат НетВложений;
	
КонецФункции

&НаСервере
Процедура ИзменитьОформлениеКоличестваВыбранных()
	
	// Выбрано: N из M скан[-ов, -... , -...]
	
	ПараметрыОтбора = Новый Структура("Пометка", Истина);
	РезультатПоиска = ДокументыИсточники.НайтиСтроки(ПараметрыОтбора);
	
	ЗаголовокКолонки = НСтр("ru = 'Выбрано: %1 из %2'");
	
	ЧислоИПредметИсчисления = ДлительнаяОтправкаКлиентСервер.ЧислоИПредметИсчисления(
		РезультатПоиска.Количество(),
		НСтр("ru = 'документ'"),
		НСтр("ru = 'документа'"),
		НСтр("ru = 'документов'"),
		"м");
					
	ЗаголовокКолонки = СтрШаблон(ЗаголовокКолонки, ЧислоИПредметИсчисления, ДокументыИсточники.Количество());
	
	Элементы.КоличествоВыбранных.Заголовок = ЗаголовокКолонки;
	
КонецПроцедуры

&НаСервере
Функция СвойстваПрисоединенныхСканов(ДокументыИсточники)
	
	МассивСвойствФайлов = Новый Массив;
	ФайлыИсточников = Новый Соответствие;
	
	Для каждого ДокументИсточник Из ДокументыИсточники Цикл
		ФайлыИсточников.Вставить(ДокументИсточник, МассивСвойствФайлов);
	КонецЦикла; 
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонтекстЭДОСервер.ПолучитьИзображенияПрисоединенныхФайловИсточников(ФайлыИсточников, УникальныйИдентификатор);
	
	ЕстьОписания = Ложь;
	Для каждого Строка Из ФайлыИсточников Цикл
		Если ЗначениеЗаполнено(Строка.Значение) Тогда
			ЕстьОписания = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЕстьОписания Тогда
		//нет присоединенных файлов по БСП механизму
		//попытаемся получить через переопределеяемый метод
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервераПереопределяемый.ПолучитьИзображенияПрисоединенныхФайловИсточников(ФайлыИсточников, УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат ФайлыИсточников; 
	
КонецФункции

#КонецОбласти




