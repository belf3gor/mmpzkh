
&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

//////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	
	ОчиститьСообщения();
	
	РезультатВыполнения = КомандаВыполнитьНаСервере();
	
	Если НЕ РезультатВыполнения.РеквизитыЗаполненыКорректно Тогда		
		Возврат;
	КонецЕсли;
	
	Если НЕ РезультатВыполнения.ЗаданиеВыполнено Тогда
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		
		ФормаДлительнойОперации.Заголовок = НСтр("ru = 'Заполнение начальных остатков УСН'");
		ФормаДлительнойОперации.Элементы.ДекорацияПоясняющийТекстДлительнойОперации.Заголовок = НСтр("ru = 'Выполняется заполнение начальных остатков.
																								|Пожалуйста, подождите...'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КомандаВыполнитьНаСервере()

	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("РеквизитыЗаполненыКорректно", Истина);
	РезультатВыполнения.Вставить("ЗаданиеВыполнено", Ложь);
	
	// проверим заполнение реквизитов
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указана организация!'"), , "Объект.Организация", , Отказ);
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаПереходаНаУСН) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указана дата перехода на УСН!'"), , "Объект.ДатаПереходаНаУСН" , , Отказ);
	КонецЕсли;	

	Если Отказ Тогда
		РезультатВыполнения.РеквизитыЗаполненыКорректно = Ложь;
		Возврат РезультатВыполнения;	
	КонецЕсли; 
	
	// вызываем процедуру заполнения остатков - синхронно или асинхронно, в зависимости от вида ИБ - файловая или клиент-сервер
	ПараметрыДляОстатков = Новый Структура;
	ПараметрыДляОстатков.Вставить("Организация",  Объект.Организация);
	ПараметрыДляОстатков.Вставить("ДатаПерехода", Объект.ДатаПереходаНаУСН);
	ПараметрыДляОстатков.Вставить("ВидОперации",  Перечисления.ВидыОперацийПереходаНаУСН.ВводНачальныхОстатковУСН);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Обработки.ЗаполнениеНачальныхОстатковУСН.ЗаполнитьНачальныеОстаткиУСН(ПараметрыДляОстатков, АдресХранилища);
		
		РезультатВыполнения.Вставить("ЗаданиеВыполнено", Истина);

	Иначе
		НаименованиеЗадания = НСтр("ru = 'Заполнение начальных остатков для перехода на УСН'");
		РезультатВыполнения = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"Обработки.ЗаполнениеНачальныхОстатковУСН.ЗаполнитьНачальныеОстаткиУСН",
			ПараметрыДляОстатков,
			НаименованиеЗадания);

		РезультатВыполнения.Вставить("РеквизитыЗаполненыКорректно", Истина);	
			
		АдресХранилища       = РезультатВыполнения.АдресХранилища;
		ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
	КонецЕсли;
	
	Если РезультатВыполнения.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанныеНаСервере();
	КонецЕсли;
	
	Возврат РезультатВыполнения;
	
КонецФункции // КомандаВыполнитьНаСервере()

&НаСервере
Процедура ЗагрузитьПодготовленныеДанныеНаСервере()

	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
    ПоказатьСообщенияПользователю();
	
	ИдентификаторЗадания = Неопределено;

КонецПроцедуры // ЗагрузитьПодготовленныеДанныеНаСервере()

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции


&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()

	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда			
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
				ЗагрузитьПодготовленныеДанныеНаСервере();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания",
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
			КонецЕсли;
		Иначе
			// Задание отменено
			ИдентификаторЗадания = Неопределено;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры 

&НаСервере
Процедура ПоказатьСообщенияПользователю()
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Возврат;
	КонецЕсли;
	
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если ФоновоеЗадание <> Неопределено Тогда
		МассивСообщений = ФоновоеЗадание.ПолучитьСообщенияПользователю(Истина);
		Если МассивСообщений <> Неопределено Тогда
			Для Каждого Сообщение Из МассивСообщений Цикл
				Сообщение.ИдентификаторНазначения = УникальныйИдентификатор;
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

