
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы обработки.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мРабочаяДата = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату();
	
	Отчет.ДатаНачала     = НачалоМесяца(ДобавитьМесяц(мРабочаяДата, -3));
	Отчет.ДатаОкончания  = КонецМесяца(мРабочаяДата);
	
	Отчет.Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ЗаполнитьСписокВыбораВидПериода(Перечисления.ДоступныеПериодыОтчета.Месяц,
																Элементы.ВидПериода.СписокВыбора, ВидПериода);
	
	УправлениеФормой(ЭтаФорма);
	
	ДокументРезультат.ФиксацияСверху = 1;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля "ОбъектОтчета".
//
Процедура ОбъектОтчетаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Отчет.ОбъектОтчета) Тогда
		СписокДоступныхВидовГрафика = Новый СписокЗначений;
		Если ТипЗнч(Отчет.ОбъектОтчета) = Тип("СправочникСсылка.КВП_ЛицевыеСчета") Тогда
			
			СписокДоступныхВидовГрафика.Добавить("СтрКарточкаРасчетов", "Взаиморасчеты");
			СписокДоступныхВидовГрафика.Добавить("Счетчики",            "Расход по приборам учета");
			СписокДоступныхВидовГрафика.Добавить("стрЛьготники",        "Начисления по льготам");
			
		ИначеЕсли ТипЗнч(Отчет.ОбъектОтчета) = Тип("СправочникСсылка.КВП_Здания") Тогда
			
			СписокДоступныхВидовГрафика.Добавить("СтраницаВзаиморасчеты", "Взаиморасчеты");
			СписокДоступныхВидовГрафика.Добавить("СтраницаСчетчики",      "Расход по приборам учета");
			
		ИначеЕсли ТипЗнч(Отчет.ОбъектОтчета) = Тип("СправочникСсылка.КВП_Счетчики") Тогда
			
			СписокДоступныхВидовГрафика.Добавить("Счетчики", "Расход по приборам учета");
			
		КонецЕсли;
		
		Элементы.ВидГрафика.СписокВыбора.Очистить();
		Для Каждого Элемент Из СписокДоступныхВидовГрафика Цикл
			ЗаполнитьЗначенияСвойств(Элементы.ВидГрафика.СписокВыбора.Добавить(), Элемент);
		КонецЦикла;
		Отчет.ВидГрафика = Элементы.ВидГрафика.СписокВыбора[0].Значение;
		
		//ПолучитьНастройкиГрафиковНаСервере(Отчет.ОбъектОтчета);
		
	Иначе
		Отчет.ВидГрафика = Неопределено;
	КонецЕсли;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля "ВидГрафика".
//
Процедура ВидГрафикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Отчет.ОбъектОтчета) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбран объект отчета.");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля "ВидГрафика".
//
Процедура ВидГрафикаПриИзменении(Элемент)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля "ОбъектОтчета".
//
Процедура ОбъектОтчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Отчет.ОбъектОтчета) Тогда
		Элементы.ОбъектОтчета.ВыбиратьТип = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "Очистка" поля "ОбъектОтчета".
//
Процедура ОбъектОтчетаОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.ОбъектОтчета.ВыбиратьТип = Истина;
	
КонецПроцедуры

#Область РаботаСПериодомОтчета

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля "ВидПериода".
Процедура ВидПериодаПриИзменении(Элемент)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВидПериодаПриИзменении(Элемент, ВидПериода, Отчет.ДатаНачала, Отчет.ДатаОкончания, Период);
	
	ПараметрыСтраниц = Новый Структура;
	ПараметрыСтраниц.Вставить("ПроизвольныйПериод", "ГруппаПроизвольныйПериод");
	ПараметрыСтраниц.Вставить("ПериодПоВидам"     , "ГруппаПериодПоВидам");
	ПараметрыСтраниц.Вставить("День"              , "ГруппаДень");
	УПЖКХ_ТиповыеМетодыКлиентСервер.ПереключитьТекущуюСтраницуВыбораПериода(ВидПериода, Элементы.ГруппаПоляВводаПериода,
																			ПараметрыСтраниц);
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля "Период".
Процедура ПериодПриИзменении(Элемент)
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодПриИзменении(Элемент, Период, Отчет.ДатаНачала, Отчет.ДатаОкончания);
	ДокументРезультат = Новый ТабличныйДокумент;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля "Период".
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодНачалоВыбораЗавершение", ЭтотОбъект);
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодНачалоВыбора(ЭтаФорма, Элемент, СтандартнаяОбработка, 
		ВидПериода, Отчет.ДатаНачала, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
// Процедура окончания асинхроного выбора периода.
Процедура ПериодНачалоВыбораЗавершение(СтруктураПериода, ДополнительныеПараметры) Экспорт
	
	// Установим полученный период
	Если СтруктураПериода <> Неопределено Тогда
		ВидПериода    = СтруктураПериода.ВидПериода;
		Период        = СтруктураПериода.Период;
		Отчет.ДатаНачала    = СтруктураПериода.НачалоПериода;
		Отчет.ДатаОкончания = СтруктураПериода.КонецПериода;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ОбработкаВыбора" поля "Период".
Процедура ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодОбработкаВыбора(
		Элемент, ВыбранноеЗначение, СтандартнаяОбработка,
		ВидПериода, Период, Отчет.ДатаНачала, Отчет.ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "АвтоПодбор" поля "Период".
Процедура ПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодАвтоПодбор(
		Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка,
		ВидПериода, Период, Отчет.ДатаНачала, Отчет.ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ОкончаниеВводаТекста" поля "Период".
Процедура ПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодОкончаниеВводаТекста(
		Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка,
		ВидПериода, Период, Отчет.ДатаНачала, Отчет.ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля "НачалоПериодаДень".
Процедура НачалоПериодаДеньПриИзменении(Элемент)
	
	Отчет.ДатаОкончания = КонецДня(Отчет.ДатаНачала);
	ДокументРезультат = Новый ТабличныйДокумент;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" полей "ДатаНачала" и "ДатаОкончания".
//
Процедура ПериодГрафикаПриИзменении(Элемент)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
КонецПроцедуры

#КонецОбласти // РаботаСПериодомОтчета

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик команды "СформироватьОтчет".
//
Процедура СформироватьОтчет(Команда)
	
	Если Не ЗначениеЗаполнено(Отчет.ОбъектОтчета) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбран объект отчета!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Отчет.ВидГрафика) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбран вид графика!");
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Отчет.ОбъектОтчета) = Тип("СправочникСсылка.КВП_ЛицевыеСчета")
		И Не Отчет.ВидГрафика = "Счетчики" И Отчет.Организация.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбрана организация!");
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетНаСервере();
	
	Попытка
		
		ДокументРезультат.ФиксацияСверху = 1;
		
	Исключение
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик команды "ОткрытьНастройкиГрафиков".
//
Процедура ОткрытьНастройкиГрафиков(Команда)
	
	Если Не ЗначениеЗаполнено(Отчет.ОбъектОтчета) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Настройки графиков будут доступны после выбора объекта отчета");
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИмяОбъекта", ПолучитьИмяОбъектаНаСервере(Отчет.ОбъектОтчета));
	Если Отчет.ВидГрафика = "СтраницаВзаиморасчеты" или Отчет.ВидГрафика = "СтрКарточкаРасчетов" Тогда
		ВидГрафика= "Взаиморасчеты";
	ИначеЕсли Отчет.ВидГрафика = "Счетчики" ИЛИ Отчет.ВидГрафика = "СтраницаСчетчики" Тогда
		ВидГрафика= "Счетчики";
	ИначеЕсли Отчет.ВидГрафика = "стрЛьготники" Тогда
		ВидГрафика= "Льготники";
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("ВидГрафика", ВидГрафика);
	
	ОткрытьФорму("Обработка.УПЖКХ_ФормированиеАналитическихГрафиковПоДаннымУчета.Форма.ФормаНастройкиГрафиков", ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
// Процедура управления видимостью элементов формы.
//
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.Организация.Видимость = Не(ТипЗнч(Форма.Отчет.ОбъектОтчета) = Тип("СправочникСсылка.КВП_Счетчики")
											ИЛИ ПустаяСтрока(Форма.Отчет.ВидГрафика)
											ИЛИ Форма.Отчет.ВидГрафика = "Счетчики" ИЛИ Форма.Отчет.ВидГрафика = "СтраницаСчетчики");
	
КонецПроцедуры // УправлениеФормой()

&НаСервере
// Процедура формирования графика на сервере.
//
Процедура СформироватьОтчетНаСервере()
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ФормируетсяСПомощьюОбработки", Истина);
	ПараметрыОтчета.Вставить("ОбъектОтчета",                 Отчет.ОбъектОтчета);
	ПараметрыОтчета.Вставить("ИмяОбластиВыводаГрафика",      Отчет.ВидГрафика);
	ПараметрыОтчета.Вставить("ИмяОбъекта",                   Отчет.ОбъектОтчета.Метаданные().Имя);
	ПараметрыОтчета.Вставить("ДатаНачала",                   Отчет.ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаОкончания",                Отчет.ДатаОкончания);
	Если Не ТипЗнч(Отчет.ОбъектОтчета) = Тип("СправочникСсылка.КВП_Счетчики") 
		И Не (Отчет.ВидГрафика = "Счетчики" ИЛИ Отчет.ВидГрафика = "СтраницаСчетчики") Тогда
		ПараметрыОтчета.Вставить("Организация", Отчет.Организация);
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Обработки.УПЖКХ_ФормированиеАналитическихГрафиковПоДаннымУчета.Графики_ОбновитьГрафикиНаСервере(ТабличныйДокумент, ПараметрыОтчета);
	
	ДокументРезультат.АвтоМасштаб         = Истина;
	ДокументРезультат.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ДокументРезультат.ИмяПараметровПечати = ПараметрыОтчета.ИмяОбъекта + "_Графики";
	
	ДокументРезультат.Вывести(ТабличныйДокумент);
	
КонецПроцедуры // СформироватьОтчетНаСервере()

&НаСервереБезКонтекста
// Возвращает имя объекта в метаданных.
//
Функция ПолучитьИмяОбъектаНаСервере(Объект)
	
	Возврат Объект.Метаданные().Имя;
	
КонецФункции // ПолучитьИмяОбъектаНаСервере()

#КонецОбласти // СлужебныеПроцедурыИФункции
