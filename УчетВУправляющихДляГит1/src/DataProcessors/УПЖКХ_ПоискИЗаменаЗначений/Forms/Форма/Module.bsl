
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервереФормы".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СообщенияОбОшибках = Новый Структура;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "НайтиСсылки".
//
Процедура НайтиСсылки(Команда)
	
	ЗаменяемыеЗначенияНайтиСсылкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "ЗаменитьСсылки".
//
Процедура ЗаменитьСсылки(Команда)
	
	СоответствиеЗаменяемыхЗначений = Новый Соответствие;
	Для Каждого ТекСтрока Из ЗаменяемыеЗначения Цикл
		Если ТекСтрока.Пометка Тогда
			СоответствиеЗаменяемыхЗначений.Вставить(ТекСтрока.ЧтоЗаменять, ТекСтрока.НаЧтоЗаменять);
		КонецЕсли;
	КонецЦикла;
	
	ЗаменитьСсылкиНаСервере(СоответствиеЗаменяемыхЗначений, СообщенияОбОшибках);
	
	Если СообщенияОбОшибках.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Обработка завершена!");
	Иначе
		Для Каждого ТекСообщение Из СообщенияОбОшибках Цикл
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(ТекСообщение.Значение);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ЧтоЗаменять".
//
Процедура ЗаменяемыеЗначенияЧтоЗаменятьПриИзменении(Элемент)
	
	ТекДанные = Элементы.ЗаменяемыеЗначения.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.ЧтоЗаменять) Тогда
		ТекДанные.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
// Выполняет поиск ссылок и заполняет таблицу формы "НайденныеСсылки".
//
Процедура ЗаменяемыеЗначенияНайтиСсылкиНаСервере()
	
	НайденныеСсылки.Очистить();
	
	ТаблицаНайденных = НайденныеСсылки.Выгрузить();
	Результат = Обработки.УПЖКХ_ПоискИЗаменаЗначений.ЗаменяемыеЗначенияНайтиСсылки(ЗаменяемыеЗначения.Выгрузить(), ТаблицаНайденных);
	Если Результат Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Поиск ссылок выполнен успешно.");
		НайденныеСсылки.Загрузить(ТаблицаНайденных);
	Иначе
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбрано ни одного значения для поиска!");
	КонецЕсли;
	
КонецПроцедуры // ЗаменяемыеЗначенияНайтиСсылкиНаСервере()

&НаСервере
// Выполняет замену ссылок на сервере.
//
Процедура ЗаменитьСсылкиНаСервере(СоответствиеЗаменяемыхЗначений, СообщенияОбОшибках)
	
	МассивЗаменяемых = Новый Массив;
	Для Каждого ТекСтрока Из ЗаменяемыеЗначения Цикл
		Если ТекСтрока.Пометка Тогда
			МассивЗаменяемых.Добавить(ТекСтрока.ЧтоЗаменять);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивЗаменяемых.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбрано ни одного значения для поиска!");
		Возврат;
	КонецЕсли;
	ТаблицаСсылок = НайтиПоСсылкам(МассивЗаменяемых);
	ТаблицаСсылок.Колонки[0].Имя = "Ссылка";
	ТаблицаСсылок.Колонки[1].Имя = "Данные";
	ТаблицаСсылок.Колонки[2].Имя = "Метаданные";
	ТаблицаСсылок.Колонки.Добавить("Включено", ПреобразоватьВОписаниеТипа("Булево"));
	Если ТаблицаСсылок.Количество() <> НайденныеСсылки.Количество() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Изменилось количество ссылок на объекты. Перезаполните таблицу ссылок.");
		Возврат;
	КонецЕсли;
	Для Итр = 0 по ТаблицаСсылок.Количество()-1 Цикл
		ТаблицаСсылок[Итр].Включено = НайденныеСсылки[Итр].Включено;
	КонецЦикла;
	
	Обработки.УПЖКХ_ПоискИЗаменаЗначений.ВыполнитьЗаменуЭлементов(СоответствиеЗаменяемыхЗначений, ТаблицаСсылок, СообщенияОбОшибках,,, Истина);
	
КонецПроцедуры // ЗаменитьСсылкиНаСервере()

&НаСервере
// Функция возвращает описание типов по значению.
//
Функция ПреобразоватьВОписаниеТипа(ЗначениеТипа)
	
	МассивТипов = Новый Массив;
	Если ТипЗнч(ЗначениеТипа) = Тип("Строка") Тогда
		МассивТипов.Добавить(Тип(ЗначениеТипа));
	Иначе
		МассивТипов.Добавить(ЗначениеТипа);
	КонецЕсли;
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТипов;
	
КонецФункции // ПреобразоватьВОписаниеТипа()

#КонецОбласти