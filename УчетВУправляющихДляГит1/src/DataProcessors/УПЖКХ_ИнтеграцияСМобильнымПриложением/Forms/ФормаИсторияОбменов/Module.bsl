
////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ЭЛЕМЕНТАМИ ФОРМЫ

#Область УправлениеЭлементамиФормы

&НаКлиенте
// Обновляет журнал обмена.
//
Процедура КомандаОбновитьЖурналОбмена(Команда)
	
	Элементы.ТаблицаЖурналаОбмена.Обновить();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ЭЛЕМЕНТАМИ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура - обработчик события "ПриАктивизацииСтроки" журнала обмена.
//
Процедура ТаблицаЖурналаОбменаПриАктивизацииСтроки(Элемент)
	
	// Обработчик используется только в режиме отладки.
	
	ИспользуетсяРежимОтладки = УПЖКХ_ВебИнтеграцияВзаимодействиеСБазойДанных.ИспользуетсяРежимОтладки();
	
	Если ИспользуетсяРежимОтладки Тогда
		
		ТекущийВидОбмена = Элемент.ТекущиеДанные.ВидОбмена;
		
		Если ВидОбменаЯвляетсяВыгрузкойНаСервис(ТекущийВидОбмена) Тогда
			
			Элементы.КнопкаОтладкаОтправитьФайлПовторно.Видимость = Истина;
			Элементы.КнопкаОтладкаЗагрузитьФайлПовторно.Видимость = Ложь;
			
		Иначе
			
			Элементы.КнопкаОтладкаОтправитьФайлПовторно.Видимость = Ложь;
			Элементы.КнопкаОтладкаЗагрузитьФайлПовторно.Видимость = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИОНАЛ ОТЛАДКИ

#Область КомандыОтладки

&НаКлиенте
// Процедура - обработчик команды "КомандаОтладкаОтправитьФайлПовторно".
//
Процедура КомандаОтладкаОтправитьФайлПовторно(Команда)
	
	ВыполнитьПовторнуюОтправкуФайлаНаСервис();
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик команды "КомандаОтладкаЗагрузитьФайлПовторно".
//
Процедура КомандаОтладкаЗагрузитьФайлПовторно(Команда)
	
	ВыполнитьПовторнуюЗагрузкуФайлаВБазу();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииИспользуемыеПриОтладке

&НаКлиенте
// Формирует структуру отбора записи из журнала обмена.
//
Функция ПолучитьСтруктуруОтбораТекущейЗаписиЖурналаОбмена()
	
	СтруктураОтбора = Новый Структура("ДатаОбмена, ВидОбмена");
	
	ТекущаяСтрокаЖурнала = Элементы.ТаблицаЖурналаОбмена.ТекущиеДанные;
	
	ЗаполнитьЗначенияСвойств(СтруктураОтбора, ТекущаяСтрокаЖурнала);
	
	Возврат СтруктураОтбора;
	
КонецФункции

&НаСервере
// Определяет, является ли указанный вид обмена данными с сайтом выгрузкой данных на сайт.
//
Функция ВидОбменаЯвляетсяВыгрузкойНаСервис(ТекущийВидОбмена)
	
	Возврат ТекущийВидОбмена = Перечисления.УПЖКХ_ВидыОбменаСМобильнымПриложением.ВыгрузкаДанныхПоЛС
		ИЛИ ТекущийВидОбмена = Перечисления.УПЖКХ_ВидыОбменаСМобильнымПриложением.ПовторнаяВыгрузкаДанныхПоЛС;
	
КонецФункции

&НаКлиенте
// Выполняет повторную отправку файла на сайт.
//
Процедура ВыполнитьПовторнуюОтправкуФайлаНаСервис()
	
	СтруктураОтбора = ПолучитьСтруктуруОтбораТекущейЗаписиЖурналаОбмена();
	
	УПЖКХ_ИнтеграцияСМобильнымПриложениемВзаимодействиеССервером.ВыполнитьПовторнуюВыгрузкуФайла(СтруктураОтбора);
	
КонецПроцедуры

&НаКлиенте
// Выполняет повторную загрузку сохраненного файла в базу.
//
Процедура ВыполнитьПовторнуюЗагрузкуФайлаВБазу()
	
	СтруктураОтбора = ПолучитьСтруктуруОтбораТекущейЗаписиЖурналаОбмена();
	
	УПЖКХ_ИнтеграцияСМобильнымПриложениемВзаимодействиеССервером.ВыполнитьПовторнуюЗагрузкуФайла(СтруктураОтбора);
	
КонецПроцедуры

#КонецОбласти