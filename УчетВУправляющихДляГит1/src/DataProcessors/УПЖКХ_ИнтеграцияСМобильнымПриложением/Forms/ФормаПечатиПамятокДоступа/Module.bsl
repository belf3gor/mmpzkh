
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВывестиМакетСИнформациейПредназначеннойДляВыводаПриОткрытии();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
// Обработчик "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ЭтаФорма.Активизировать();
	
	// Заполнение ТЧ.
	Если ИмяСобытия = "ПередачаТЗ" Тогда
		
		АдресВХранилище = Параметр;
		МассивЛС        = ПолучитьИзВременногоХранилища(АдресВХранилище);
		
		Для каждого ТекСтрока из МассивЛС Цикл
			
			НоваяСтрока = ТаблицаЛС.Добавить();
			НоваяСтрока.ЛицевойСчет = ТекСтрока;
			
		КонецЦикла;
		
	ИначеЕсли ИмяСобытия = "Запись_ТабличныйДокумент" 
		И Параметр.ИмяОбъектаМетаданныхМакета = "Справочник.КВП_ЛицевыеСчета.ПФ_MXL_ПамяткаДляДоступаВЛичныйКабинетВМобильномПриложенииЖКХ"
		И Источник.ВладелецФормы = ЭтотОбъект Тогда
		Макет = Параметр.ТабличныйДокумент;
		АдресМакетаВоВременномХранилище = ПоместитьВоВременноеХранилище(Макет);
		ЗаписатьМакет(Параметр.ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище);
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.РезультатПечати, "НеАктуальность");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
// Выводит в табличный документ информацию при открытии формы.
//
Процедура ВывестиМакетСИнформациейПредназначеннойДляВыводаПриОткрытии()
	
	МакетДляВыводаПриОткрытии = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Обработка.УПЖКХ_ИнтеграцияСМобильнымПриложением.ИнформацииОПамяткахДоступаДляВыводаПриОткрытииФормыПечатиПамяток");
	РезультатПечати.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_ЛицевыеСчета_ПамяткаДляДоступаВЛичныйКабинетНаСайтеЖКХ";
	
	РезультатПечати.Вывести(МакетДляВыводаПриОткрытии);
	
КонецПроцедуры

&НаСервере
// Устанавливает видимость элементов формы.
//
Процедура УстановитьВидимость()
	
	Элементы.ТаблицаЛС.Видимость = НастройкаПечати = 1;
	
	УправлениеВидимостьюКнопкиПодбораЛС();
	
КонецПроцедуры

&НаСервере
// Анализирует наличие формы подбора объектов в составе конфигурации.
// Если ее нет, не выводить соответствующую кнопку в командной панели таблицы.
//
Процедура УправлениеВидимостьюКнопкиПодбораЛС()
	
	Если НЕ Метаданные.ОбщиеФормы.Найти("УПЖКХ_ПодборОбъектов") = Неопределено Тогда
		ПутьКФормеПодбора = "ОбщаяФорма.УПЖКХ_ПодборОбъектов";
	ИначеЕсли НЕ Метаданные.Обработки.УПЖКХ_ИнтеграцияСМобильнымПриложением.Формы.Найти("ПодборОбъектов") = Неопределено Тогда
		ПутьКФормеПодбора = "Обработка.УПЖКХ_ИнтеграцияСМобильнымПриложением.Форма.ПодборОбъектов";
	Иначе
		ПутьКФормеПодбора = "";
	КонецЕсли;
	
	Если ПустаяСтрока(ПутьКФормеПодбора) Тогда
		Элементы.ТаблицаЛСКнопкаЗаполнитьСОтбором.Видимость = Ложь;
	Иначе
		Элементы.ТаблицаЛСКнопкаЗаполнитьСОтбором.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеВидимостьюКнопкиПодбораЛС()

&НаСервере
// Проверяет готовность к формированию памяток.
//
Функция ПроверитьГотовностьКФормированию(СведенияОбОшибке)
	
	Готовность = Истина;
	
	Если НастройкаПечати = 1 И ТаблицаЛС.Количество() = 0 Тогда
		Готовность = Ложь;
		СведенияОбОшибке = "Памятки не будут сформированы: не выбрано ни одного лицевого счета.";
	КонецЕсли;
	
	Если Готовность Тогда
		Элементы.КнопкаПечать.Доступность = Истина;
	КонецЕсли;
	
	Возврат Готовность;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" настроек печати.
//
Процедура НастройкаПечатиПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.РезультатПечати, "НеАктуальность");
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОбработкаВыбора" колонки "ЛицевойСчет" таблицы "ТаблицаЛС".
//
Процедура ТаблицаЛСЛицевойСчетОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокиДубликаты = ТаблицаЛС.НайтиСтроки(Новый Структура("ЛицевойСчет", ВыбранноеЗначение));
	
	Если НЕ СтрокиДубликаты.Количество() = 0 Тогда
		СтандартнаяОбработка = Ложь;
		ОбработатьСообщенияОбОшибках("Лицевой счет """ + Строка(ВыбранноеЗначение) + """ уже выбран.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "При изменении" таблицы л/с.
//
Процедура ТаблицаЛСПриИзменении(Элемент)
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.РезультатПечати, "НеАктуальность");
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик нажатия кнопки "ЗаполнитьСОтбором".
//
Процедура КомандаЗаполнитьСОтбором(Команда)
	
	Если ПустаяСтрока(ПутьКФормеПодбора) Тогда
		ОбработатьСообщенияОбОшибках("Форма подбора не найдена.");
		
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЛС.Количество() = 0 Тогда
		ОткрытьФорму(ПутьКФормеПодбора);
	Иначе
		ЗадатьВопросЕслиВТаблицеЛСЕстьДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик нажатия кнопки "СформироватьПамятки".
//
Процедура КомандаСформироватьПамятки(Команда)
	
	СведенияОбОшибке = "";
	
	Если ПроверитьГотовностьКФормированию(СведенияОбОшибке) Тогда
		СформироватьПамяткиНаСервере();
	КонецЕсли;
	
	ОбработатьСообщенияОбОшибках(СведенияОбОшибке);
	
КонецПроцедуры

&НаКлиенте
// Обработчик нажатия кнопки "Редактировать макет".
//
Процедура КомандаРедактироватьМакет(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИмяОбъектаМетаданныхМакета", "Справочник.КВП_ЛицевыеСчета.ПФ_MXL_ПамяткаДляДоступаВЛичныйКабинетВМобильномПриложенииЖКХ");
	ПараметрыОткрытия.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыОткрытия.Вставить("ИмяДокумента",  "Памятка для доступа в личный кабинет в мобильном приложении (ЖКХ)");
	ПараметрыОткрытия.Вставить("ТипМакета", "MXL");
	ПараметрыОткрытия.Вставить("Редактирование", Истина);
	
	ОткрытьФорму("ОбщаяФорма.РедактированиеТабличногоДокумента", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ДИАЛОГАМИ

#Область РаботаСДиалогами

&НаКлиенте
// Функция проверяет, переданы ли параметры на сайт.
//
// Возвращаемое значение:
//  Булево.
//
Процедура ЗадатьВопросЕслиВТаблицеЛСЕстьДанные()
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьВопросОбОчисткеТаблицыЛС", ЭтаФорма);
	
	ПоказатьВопрос(Оповещение, "Перед заполнением табличная часть будет очищена." + Символы.ПС
				 + "Продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры // ЗадатьВопросЕслиНеВсеДанныеПереданы()

&НаКлиенте
// Обрабатывает ответ на вопрос об очистке таблицы л/с.
//
Процедура ОбработатьВопросОбОчисткеТаблицыЛС(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ТаблицаЛС.Очистить();
	Иначе
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(ПутьКФормеПодбора);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ПАМЯТОК

#Область ПроцедурыИФункцииФормированияПамяток

&НаСервере
// Формирует памятки.
//
Процедура СформироватьПамяткиНаСервере()
	
	РезультатПечати.Очистить();
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.РезультатПечати, "ФормированиеОтчета");
	
	МассивЛС = ПолучитьМассивЛС();
	
	РезультатПечати.ПолеСнизу   = 0;
	РезультатПечати.ПолеСверху  = 0;
	РезультатПечати.ПолеСлева   = 0;
	РезультатПечати.ПолеСправа  = 0;
	
	РезультатПечати.РазмерСтраницы = "A4";
	РезультатПечати.АвтоМасштаб    = Истина;
	
	РезультатПечати.Вывести(Справочники.КВП_ЛицевыеСчета.ПечатьПамяткиДоступаМобильноеПриложение(МассивЛС, Неопределено));
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.РезультатПечати, "НЕИСПОЛЬЗОВАТЬ");
	
КонецПроцедуры

&НаСервере
// Получает массив л/с, по которому требуется сформировать памятки.
//
Функция ПолучитьМассивЛС()
	
	Если НастройкаПечати = 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УПЖКХ_ИдентификаторыЛицевыхСчетовВМобильномПриложении.ЛицевойСчет
		|ИЗ
		|	РегистрСведений.УПЖКХ_ИдентификаторыЛицевыхСчетовВМобильномПриложении КАК УПЖКХ_ИдентификаторыЛицевыхСчетовВМобильномПриложении
		|ГДЕ
		|	НЕ УПЖКХ_ИдентификаторыЛицевыхСчетовВМобильномПриложении.ЛицевойСчет = ЗНАЧЕНИЕ(Справочник.КВП_ЛицевыеСчета.ПустаяСсылка)";
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		Возврат РезультатЗапроса.ВыгрузитьКолонку("ЛицевойСчет");
		
	Иначе
		
		ВыбранныеЛицевыеСчета = ТаблицаЛС.Выгрузить(, "ЛицевойСчет");
		
		Возврат ВыбранныеЛицевыеСчета.ВыгрузитьКолонку("ЛицевойСчет");
		
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РЕДАКТИРОВАНИЯ ПАМЯТОК

&НаСервереБезКонтекста
// Записывает измененный макет.
//
Процедура ЗаписатьМакет(ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище)
	
	УправлениеПечатью.ЗаписатьМакет(ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ОШИБОК

#Область ПроцедурыОбработкиОшибок

&НаКлиенте
// Обрабатывает сообщения об ошибках.
//
Процедура ОбработатьСообщенияОбОшибках(ОписаниеОшибок)
	
	Если ТипЗнч(ОписаниеОшибок) = Тип("Строка") Тогда
		
		Если НЕ ОписаниеОшибок = "" Тогда
			ВывестиСообщениеОбОшибке(ОписаниеОшибок);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ОписаниеОшибок) = Тип("Массив") Тогда
		
		Для каждого ТекСтрока из ОписаниеОшибок Цикл
			
			Если ТипЗнч(ТекСтрока) = Тип("Строка") Тогда
				
				ВывестиСообщениеОбОшибке(ТекСтрока);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Выводит диалоговое окно предупреждения с описанием ошибки.
//
Процедура ВывестиСообщениеОбОшибке(ТекстСообщения)
	
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти
