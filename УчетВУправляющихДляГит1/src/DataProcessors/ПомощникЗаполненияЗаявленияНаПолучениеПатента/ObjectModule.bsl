#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если СтавкаНалога = УчетПСНКлиентСервер.НалоговаяСтавкаПоУмолчанию() Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НормаЗакона");
	КонецЕсли;
	
	ИспользуетсяСервисРегистрации = Обработки.РегистрацияОрганизации.ИспользуетсяСервисРегистрации()
		И Константы.НачалоРаботы.Получить();
		
	Если Не ИспользуетсяСервисРегистрации И Лев(КодНалоговогоОргана, 2) <> КодРегиона Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Код инспекции не принадлежит региону регистрации!'"),, "КодНалоговогоОргана", "Объект", Отказ);
	КонецЕсли;
	
	КодыВидовДеятельностиОбъекты = Справочники.КлассификаторВидовПредпринимательскойДеятельностиПСН.КодыВидовДеятельностиОбъекты();
	КодыВидовДеятельностиТС = Справочники.КлассификаторВидовПредпринимательскойДеятельностиПСН.КодыВидовДеятельностиТранспортныеСредства();
	
	Если КодыВидовДеятельностиОбъекты.Найти(КодВидаДеятельности) <> Неопределено Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства");
		ПроверитьКорректностьВводаАдресов("Объекты", НСтр("ru = 'Сведения об объектах'"), Отказ);
	
	ИначеЕсли КодыВидовДеятельностиТС.Найти(КодВидаДеятельности) <> Неопределено Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Объекты");
		КодыПеревозкаГрузов = Справочники.КлассификаторВидовПредпринимательскойДеятельностиПСН.КодыВидовДеятельностиПеревозкаГрузов();
		Если КодыПеревозкаГрузов.Найти(КодВидаДеятельности) = Неопределено Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства.Грузоподъемность");
		Иначе
			МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства.Количество");
		КонецЕсли;
		
	Иначе
		
		МассивНепроверяемыхРеквизитов.Добавить("Объекты");
		МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства");
		ПроверитьКорректностьВводаАдресов("Адреса", НСтр("ru = 'Адреса места осуществления деятельности'"), Отказ);
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьКорректностьВводаАдресов(ИмяТабличнойЧасти, ИмяРазделаФормы, Отказ)
	
	Если ЭтотОбъект[ИмяТабличнойЧасти].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоОбъекты = ИмяТабличнойЧасти = "Объекты";
	Если ЭтоОбъекты Тогда
		ОбъектыБезАдреса  = Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента.ВидыОбъектовБезАдреса();
		ОбъектыБезПлощади = Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента.ВидыОбъектовБезПлощади();
	КонецЕсли;
	
	КодНО = "";
	
	ШаблонПоляОшибки = "%1[%2].%3";
	ШаблонАдресНекорректный  = НСтр("ru = 'Указанный адрес не принадлежит региону регистрации %1: строка №%2 списка ""%3""'");
	ШаблонНеЗаполненАдрес    = НСтр("ru = 'Не заполнена колонка ""Адрес"" в строке №%1 списка ""%2""'");
	ШаблонНеЗаполненаПлощадь = НСтр("ru = 'Не заполнена колонка ""Площадь"" в строке №%1 списка ""%2""'");
	
	Для Каждого ТекСтрока Из ЭтотОбъект[ИмяТабличнойЧасти] Цикл
		
		ПустойАдрес = ПустаяСтрока(ТекСтрока.Адрес);
		
		Если Не ПустойАдрес Тогда
			
			НаименованиеРегиона = УправлениеКонтактнойИнформацией.РегионАдресаКонтактнойИнформации(ТекСтрока.Адрес);
			ТекСтрокаКодРегиона = АдресныйКлассификатор.КодРегионаПоНаименованию(НаименованиеРегиона);
			Если Число(КодРегиона) <> ТекСтрокаКодРегиона Тогда
				НаименованиеРегионРегистрации = АдресныйКлассификатор.НаименованиеРегионаПоКоду(КодРегиона);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ШаблонАдресНекорректный, НаименованиеРегионРегистрации, ТекСтрока.НомерСтроки, ИмяРазделаФормы),,
					СтрШаблон(ШаблонПоляОшибки, ИмяТабличнойЧасти, ТекСтрока.НомерСтроки - 1, "АдресСтрокой"),
					"Объект",
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоОбъекты И ПустойАдрес И ОбъектыБезАдреса.НайтиПоЗначению(ТекСтрока.ВидОбъекта) = Неопределено Тогда 
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ШаблонНеЗаполненАдрес, ТекСтрока.НомерСтроки, ИмяРазделаФормы),,
				СтрШаблон(ШаблонПоляОшибки, ИмяТабличнойЧасти, ТекСтрока.НомерСтроки - 1, "АдресСтрокой"),
				"Объект",
				Отказ);
			
		КонецЕсли;
		
		Если ЭтоОбъекты И ТекСтрока.Площадь = 0
			И ОбъектыБезПлощади.НайтиПоЗначению(ТекСтрока.ВидОбъекта) = Неопределено Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ШаблонНеЗаполненаПлощадь, ТекСтрока.НомерСтроки, ИмяРазделаФормы),,
				СтрШаблон(ШаблонПоляОшибки, ИмяТабличнойЧасти, ТекСтрока.НомерСтроки - 1, "Площадь"),
				"Объект",
				Отказ);
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли