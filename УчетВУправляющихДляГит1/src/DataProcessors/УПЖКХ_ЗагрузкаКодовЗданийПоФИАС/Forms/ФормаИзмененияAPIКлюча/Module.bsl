
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмеющийсяAPIКлюч = Обработки.УПЖКХ_ЗагрузкаКодовЗданийПоФИАС.ПолучитьAPIКлючДляСервисаDadata();
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик команды "Сохранить API-ключ".
//
Процедура КомандаСохранитьAPIКлюч(Команда)
	
	Если ПустаяСтрока(НовыйAPIКлюч) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Новый API-ключ не заполнен.");
	ИначеЕсли НовыйAPIКлюч = ИмеющийсяAPIКлюч Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Новый API-ключ идентичен имеющемуся.");
	Иначе
		
		Если ПроверитьФорматAPIКлюч() Тогда
			// Сохранение токена и закрытие формы.
			СохранитьAPIКлючНаСервере();
			Закрыть();
		Иначе
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Неверный формат API-ключа.");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "Отмена".
//
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// РАБОТА С API-КЛЮЧА

#Область РаботаСAPIКлючом

&НаСервере
// Выполняет проверку правильности формата API-ключа.
//
Функция ПроверитьФорматAPIКлюч()
	
	Возврат Обработки.УПЖКХ_ЗагрузкаКодовЗданийПоФИАС.ПроверитьФорматAPIКлюча(НовыйAPIКлюч);
	
КонецФункции

&НаСервере
// Выполняет сохранение API-ключа.
//
Процедура СохранитьAPIКлючНаСервере()
	
	Обработки.УПЖКХ_ЗагрузкаКодовЗданийПоФИАС.СохранитьAPIКлюч(НовыйAPIКлюч);
	
КонецПроцедуры

#КонецОбласти
