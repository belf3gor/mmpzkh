#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСобытия = Параметры.ДанныеСобытия;
	
	Если ТипЗнч(ДанныеСобытия) <> Тип("Структура") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Заголовок = ДанныеСобытия.Событие;
	ЗаполнитьОписаниеСсылок(ДанныеСобытия);
	ПодготовитьТекст(ДанныеСобытия);
	
	Если Параметры.ЭтоОповещение Тогда
		ЗапомнитьПоказСобытия(ДанныеСобытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущийЭлемент = Элементы.ДокументРезультат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументРезультатПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПерейтиПоСсылке(ДанныеСобытия.Href);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьТекст(ДанныеСобытия)
	
	Макет = Обработки.ИнформацияНадежностьБанков.ПолучитьМакет("Макет");
	ДокументHTML = Макет.ПолучитьДокументHTML();
	
	Если ДанныеСобытия.Критичное Тогда
		
		ЕстьОстатки = ДанныеСобытия.ДополнительнаяИнформация.ЕстьОстатки;
		ЕстьСчетаЮридическихЛиц = ДанныеСобытия.ДополнительнаяИнформация.ЕстьСчетаЮридическихЛиц;
		ЕстьСчетаФизическихЛиц = ДанныеСобытия.ДополнительнаяИнформация.ЕстьСчетаФизическихЛиц;
	
		Если ЕстьСчетаЮридическихЛиц И ЕстьСчетаФизическихЛиц Тогда
			УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ЗаголовокДокументы");
		Иначе
			УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ЗаголовокДокументыЮЛ");
			УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ЗаголовокДокументыФЛ");
			Если НЕ ЕстьСчетаЮридическихЛиц Тогда
				УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ДокументыЮЛ");
			КонецЕсли;
			Если НЕ ЕстьСчетаФизическихЛиц Тогда
				УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ДокументыФЛ");
			КонецЕсли;
		КонецЕсли;
		Если ЕстьОстатки Тогда
			Если НЕ ЕстьСчетаФизическихЛиц Тогда
				УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "СтраховоеВозмещениеФЛ");
				УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ВключениеВРеестрФЛ");
			КонецЕсли;
		Иначе
			УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ВозвратСредств");
		КонецЕсли;
		НомерПоследнегоШага = ?(ЕстьСчетаФизическихЛиц, "5", "4");
		
	Иначе
		УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ЧтоДелать");
		НомерПоследнегоШага = "5";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДанныеСобытия.ТекстПояснения) Тогда
		УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ТекстПояснения");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСобытия.ИсточникИнформации) Тогда
		УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ТекстСобытияБезСсылки");
	Иначе
		УдалитьБлокHTMLПоИдентификатору(ДокументHTML, "ТекстСобытия");
	КонецЕсли;
	
	ТекстДокумента = ПолучитьТекстДокументаHTML(ДокументHTML);
	ТекстДокумента = СтрЗаменить(ТекстДокумента, "%Событие%", ДанныеСобытия.Событие);
	ТекстДокумента = СтрЗаменить(ТекстДокумента, "%ТекстСобытия%", ДанныеСобытия.ТекстСобытия);
	ТекстДокумента = СтрЗаменить(ТекстДокумента, "%ТекстПояснения%", ДанныеСобытия.ТекстПояснения);
	ТекстДокумента = СтрЗаменить(ТекстДокумента, "%НомерПоследнегоШага%", НомерПоследнегоШага);
	ТекстПодробнее = ?(ДанныеСобытия.Событие = Перечисления.СобытияНадежностьБанков.Информация,
		НСтр("ru='Подробнее'"),
		СтрЗаменить(НСтр("ru='информация ЦБ РФ'"), " ", Символы.НПП));
	ТекстДокумента = СтрЗаменить(ТекстДокумента, "%Подробнее%", ТекстПодробнее);
	
	ДокументРезультат = ТекстДокумента;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписаниеСсылок(ДанныеСобытия)

	ВсеСсылки = Новый Соответствие;
	ВсеСсылки.Вставить("ИсточникИнформации", ДанныеСобытия.ИсточникИнформации);
	ВсеСсылки.Вставить("ПроверкаУчастияВСтраховании", "https://www.asv.org.ru/insurance/banks_list/");
	ВсеСсылки.Вставить("НачалоСтраховыхВыплат", "https://www.asv.org.ru/");
	ВсеСсылки.Вставить("ВключениеВРеестрКредиторов", "https://www.asv.org.ru/insurance/insurance_cases/1069/302872/");
	
	ОписаниеСсылок = Новый ФиксированноеСоответствие(ВсеСсылки);
	
КонецПроцедуры

&НаСервере
Процедура ЗапомнитьПоказСобытия(ДанныеСобытия)

	ПоказанныеСобытия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НадежностьБанков",
		"ПоказанныеСобытия");
	Если ТипЗнч(ПоказанныеСобытия) <> Тип("Массив") Тогда
		ПоказанныеСобытия = Новый Массив;
	КонецЕсли;
	Если ПоказанныеСобытия.Найти(ДанныеСобытия.Идентификатор) = Неопределено Тогда
		ПоказанныеСобытия.Добавить(ДанныеСобытия.Идентификатор);
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"НадежностьБанков",
			"ПоказанныеСобытия",
			ПоказанныеСобытия);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УдалитьБлокHTMLПоИдентификатору(ДокументHTML, ИдентификаторБлока)

	УдаляемыйБлок = ДокументHTML.ПолучитьЭлементПоИдентификатору(ИдентификаторБлока);
	Если УдаляемыйБлок <> Неопределено Тогда
		УдаляемыйБлок.РодительскийУзел.УдалитьДочерний(УдаляемыйБлок);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстДокументаHTML(ДокументHTML)
	
	ЗаписьHTML = Новый ЗаписьHTML;
	ЗаписьHTML.УстановитьСтроку();
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьDOM.Записать(ДокументHTML, ЗаписьHTML);
	Возврат ЗаписьHTML.Закрыть();
	
КонецФункции

&НаКлиенте
Процедура ПерейтиПоСсылке(ПолнаяСсылкаHTML)
	
	Если НЕ ЗначениеЗаполнено(ПолнаяСсылкаHTML) Тогда
		Возврат;
	КонецЕсли;
	
	ЧастиСсылкиHTML = СтрРазделить(ПолнаяСсылкаHTML, "/", Ложь);
	СсылкаHTML = ЧастиСсылкиHTML.Получить(ЧастиСсылкиHTML.Количество() - 1);
	СсылкаДляПерехода = ОписаниеСсылок.Получить(СсылкаHTML);
	Если СсылкаДляПерехода <> Неопределено Тогда
		ПерейтиПоНавигационнойСсылке(СсылкаДляПерехода);
	Иначе
		ПерейтиПоНавигационнойСсылке(ПолнаяСсылкаHTML);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

