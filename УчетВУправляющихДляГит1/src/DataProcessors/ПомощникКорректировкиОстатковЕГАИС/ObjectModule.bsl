#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Создает новый документ ОстаткиЕГАИС.
//
Процедура СоздатьПодготовитьКПередачеДокументЗапросаОстатков(ВидДокумента) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗапросОстатков = Документы.ОстаткиЕГАИС.СоздатьДокумент();
	ЗапросОстатков.Дата = ТекущаяДатаСеанса();
	ЗапросОстатков.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	ЗапросОстатков.Заполнить(ОрганизацияЕГАИС);
	
	ЗапросОстатков.ВидДокумента = ВидДокумента;
	
	ЗапросОстатков.Записать(РежимЗаписиДокумента.Проведение);
	ИнтеграцияЕГАИСВызовСервера.ПодготовитьКПередаче(
		ЗапросОстатков.Ссылка, Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ЗапроситеОстатки);
	
	Если ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1 Тогда
		ОстаткиВРегистре1 = ЗапросОстатков.Ссылка;
	ИначеЕсли ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре2 Тогда
		ОстаткиВРегистре2 = ЗапросОстатков.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет сводную таблицу по данным учетных остатков и остатков ЕГАИС.
//
Процедура ЗаполнитьТаблицуОстатков() Экспорт
	
	ИндексАкцизныеМарки = АкцизныеМарки.Выгрузить();
	ИндексАкцизныеМарки.Колонки.Добавить("Вывели", Новый ОписаниеТипов("Булево"));
	ИндексАкцизныеМарки.Индексы.Добавить("АлкогольнаяПродукция, Справка2");
	
	Запрос = Новый Запрос;
	Обработки.ПомощникКорректировкиОстатковЕГАИС.УстановитьЗапросУчетныхОстатков(Запрос, ОрганизацияЕГАИС, Ложь);
	
	Запрос.УстановитьПараметр("Марки", ИндексАкцизныеМарки);
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Марки.Номенклатура         КАК Номенклатура,
	|	Марки.Характеристика       КАК Характеристика,
	|	Марки.Серия                КАК Серия,
	|	Марки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Марки.Справка2             КАК Справка2,
	|	Марки.Факт                 КАК Факт,
	|	Марки.Статус               КАК Статус
	|ПОМЕСТИТЬ Марки
	|ИЗ &Марки КАК Марки;
	|////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Марки.Номенклатура   КАК Номенклатура,
	|	Марки.Характеристика КАК Характеристика,
	|	Марки.Серия          КАК Серия,
	|	КОЛИЧЕСТВО(1)        КАК Отработано
	|ПОМЕСТИТЬ ОтработаноМарки
	|ИЗ Марки КАК Марки
	|ГДЕ Марки.Факт
	|СГРУППИРОВАТЬ ПО
	|	Марки.Номенклатура,
	|	Марки.Характеристика,
	|	Марки.Серия
	|;
	|////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Номенклатура                            КАК Номенклатура,
	|	Остатки.Характеристика                          КАК Характеристика,
	|	Остатки.Серия                                   КАК Серия,
	|	Остатки.Остаток - ЕСТЬNULL(Марки.Отработано, 0) КАК Остаток,
	|	Остатки.ОбъемДАЛ                                КАК ОбъемДАЛ
	|ИЗ Остатки КАК Остатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОтработаноМарки КАК Марки
	|		ПО Марки.Номенклатура   = Остатки.Номенклатура
	|		И  Марки.Характеристика = Остатки.Характеристика
	|		И  Марки.Серия          = Остатки.Серия
	|ГДЕ
	|	Остатки.Остаток - ЕСТЬNULL(Марки.Отработано, 0) > 0";
	
	УчетныеПартионныеОстатки = Запрос.Выполнить().Выгрузить();
	ИнтеграцияЕГАИС.ЗаполнитьСопоставленнуюПродукцию(УчетныеПартионныеОстатки);
	УчетныеПартионныеОстатки.Индексы.Добавить("Номенклатура, Характеристика, Серия");
	ОстаткиЕГАИС = ПолучитьОстаткиЕГАИС();
	
	Остатки.Очистить();

	//Все что числится в ЕГАИС
	Для Каждого СтрокаОстаткиЕГАИС Из ОстаткиЕГАИС Цикл
		
		Если СтрокаОстаткиЕГАИС.Поштучная Тогда //Остатки ЕГАИС. Поштучные марки.
			
			Поиск = Новый Структура("АлкогольнаяПродукция, Справка2");
			ЗаполнитьЗначенияСвойств(Поиск, СтрокаОстаткиЕГАИС);
			МаркиПоСправке = ИндексАкцизныеМарки.НайтиСтроки(Поиск);
			
			БезРасхождений = 0;
			Излишки        = 0;
			Недостачи      = 0;
			
			Для Каждого Марка Из МаркиПоСправке Цикл
				Марка.Вывели = Истина;
				Если Марка.Факт И (Марка.УТМ ИЛИ Марка.Статус <> Перечисления.СтатусыАкцизныхМарок.КОприходованию) Тогда
					БезРасхождений = БезРасхождений + 1;
				ИначеЕсли Марка.Факт Тогда
					Излишки = Излишки + 1;
				Иначе
					Недостачи = Недостачи + 1;
				КонецЕсли;
			КонецЦикла;
			
			Если БезРасхождений > 0 Тогда
				
				НоваяСтрока = Остатки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Марка);
				НоваяСтрока.ЕГАИС       = БезРасхождений;
				НоваяСтрока.Остаток     = БезРасхождений;
				НоваяСтрока.Маркируемый = Истина;
				НоваяСтрока.ОбъемДАЛ    = 1;
				НоваяСтрока.Поштучная   = Истина;
				НоваяСтрока.Проверена   = Истина;
				НоваяСтрока.Расхождения = 0;
				НоваяСтрока.Сопоставлено= Истина;
				
			КонецЕсли;
			
			Если Излишки > 0 Тогда
				
				НоваяСтрока = Остатки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Марка);
				НоваяСтрока.ЕГАИС       = 0;
				НоваяСтрока.Остаток     = Излишки;
				НоваяСтрока.Маркируемый = Истина;
				НоваяСтрока.ОбъемДАЛ    = 1;
				НоваяСтрока.Поштучная   = Истина;
				НоваяСтрока.Проверена   = Истина;
				НоваяСтрока.Расхождения = 1;
				НоваяСтрока.Сопоставлено= Истина;
				НоваяСтрока.Излишки     = Истина;
				
			КонецЕсли;
			
			Если Недостачи > 0 Тогда
				
				НоваяСтрока = Остатки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Марка);
				НоваяСтрока.ЕГАИС       = Недостачи;
				НоваяСтрока.Остаток     = 0;
				НоваяСтрока.Маркируемый = Истина;
				НоваяСтрока.ОбъемДАЛ    = 1;
				НоваяСтрока.Поштучная   = Истина;
				НоваяСтрока.Проверена   = Истина;
				НоваяСтрока.Расхождения = 1;
				НоваяСтрока.Сопоставлено= Истина;
				НоваяСтрока.Недостача   = Истина;
				
			КонецЕсли;
			
			Если БезРасхождений + Недостачи < СтрокаОстаткиЕГАИС.ЕГАИС Тогда
				
				НоваяСтрока = Остатки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстаткиЕГАИС);
				НоваяСтрока.ЕГАИС       = СтрокаОстаткиЕГАИС.ЕГАИС - БезРасхождений - Недостачи;
				НоваяСтрока.Остаток     = 0;
				НоваяСтрока.Маркируемый = Истина;
				НоваяСтрока.ОбъемДАЛ    = 1;
				НоваяСтрока.Поштучная   = Истина;
				НоваяСтрока.Проверена   = Ложь;
				НоваяСтрока.Расхождения = 2;
				НоваяСтрока.Сопоставлено= Истина;
				
			КонецЕсли;
			
		Иначе //Остатки ЕГАИС. Прочие (партионные и немаркируемые).
			
			ПартионныхЕдиниц = СтрокаОстаткиЕГАИС.ЕГАИС;
			
			//Остатки ЕГАИС. Партионные марки.
			Если ЗначениеЗаполнено(СтрокаОстаткиЕГАИС.Справка2) Тогда
				
				Поиск = Новый Структура("АлкогольнаяПродукция, Справка2");
				ЗаполнитьЗначенияСвойств(Поиск, СтрокаОстаткиЕГАИС);
				МаркиПоСправке = ИндексАкцизныеМарки.НайтиСтроки(Поиск);
				
				БезРасхождений = 0;
				Излишки        = 0;
				Недостачи      = 0;
				
				Для Каждого Марка Из МаркиПоСправке Цикл
					Марка.Вывели = Истина;
					Если Марка.Факт И (Марка.УТМ ИЛИ Марка.Статус <> Перечисления.СтатусыАкцизныхМарок.КОприходованию) Тогда
						БезРасхождений = БезРасхождений + 1;
					ИначеЕсли Марка.Факт Тогда
						Излишки = Излишки + 1;
					Иначе
						Недостачи = Недостачи + 1;
					КонецЕсли;
				КонецЦикла;
				
				ПартионныхЕдиниц = ПартионныхЕдиниц - БезРасхождений - Излишки + Недостачи;
				
				Если БезРасхождений > 0 Тогда
				
					НоваяСтрока = Остатки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Марка);
					НоваяСтрока.ЕГАИС       = БезРасхождений;
					НоваяСтрока.Остаток     = БезРасхождений;
					НоваяСтрока.Маркируемый = Истина;
					НоваяСтрока.ОбъемДАЛ    = 1;
					НоваяСтрока.Поштучная   = Истина;
					НоваяСтрока.Проверена   = Истина;
					НоваяСтрока.Расхождения = 0;
					НоваяСтрока.Сопоставлено= Истина;
					
				КонецЕсли;
				
				Если Излишки > 0 Тогда
					
					НоваяСтрока = Остатки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Марка);
					НоваяСтрока.ЕГАИС       = 0;
					НоваяСтрока.Остаток     = Излишки;
					НоваяСтрока.Маркируемый = Истина;
					НоваяСтрока.ОбъемДАЛ    = 1;
					НоваяСтрока.Поштучная   = Истина;
					НоваяСтрока.Проверена   = Истина;
					НоваяСтрока.Расхождения = 1;
					НоваяСтрока.Сопоставлено= Истина;
					НоваяСтрока.Излишки     = Истина;
					
				КонецЕсли;
				
				Если Недостачи > 0 Тогда
					
					НоваяСтрока = Остатки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Марка);
					НоваяСтрока.ЕГАИС       = Недостачи;
					НоваяСтрока.Остаток     = 0;
					НоваяСтрока.Маркируемый = Истина;
					НоваяСтрока.ОбъемДАЛ    = 1;
					НоваяСтрока.Поштучная   = Истина;
					НоваяСтрока.Проверена   = Истина;
					НоваяСтрока.Расхождения = 1;
					НоваяСтрока.Сопоставлено= Истина;
					НоваяСтрока.Недостача   = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПартионныхЕдиниц > 0 Тогда
				
				НоваяСтрока = Остатки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстаткиЕГАИС);
				НоваяСтрока.ЕГАИС = ПартионныхЕдиниц;
				НоваяСтрока.Расхождения = 1;
				
				//Проверим партионную продукцию по остатку
				Поиск = Новый Структура("АлкогольнаяПродукция, Справка2");
				ЗаполнитьЗначенияСвойств(Поиск, СтрокаОстаткиЕГАИС);
				СтрокиПартионныеОстатки = УчетныеПартионныеОстатки.НайтиСтроки(Поиск);
				Если СтрокиПартионныеОстатки.Количество() <> 1 Тогда
					Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура) Тогда
						Поиск = Новый Структура("Номенклатура, Характеристика, Серия");
						ЗаполнитьЗначенияСвойств(Поиск, СтрокаОстаткиЕГАИС);
						СтрокиПартионныеОстатки = УчетныеПартионныеОстатки.НайтиСтроки(Поиск);
					КонецЕсли;
				КонецЕсли;
				
				Если СтрокиПартионныеОстатки.Количество() = 1 Тогда
					СтрокаОстаток = СтрокиПартионныеОстатки[0];
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстаток,,"АлкогольнаяПродукция, Справка2");
					Если НоваяСтрока.ЕГАИС = СтрокаОстаток.Остаток * ?(НоваяСтрока.ПродаетсяВРозлив, СтрокаОстаток.ОбъемДАЛ, 1) Тогда
						НоваяСтрока.Расхождения = 0;
						НоваяСтрока.Проверена   = Истина;
						НоваяСтрока.Остаток     = НоваяСтрока.ЕГАИС;
						УчетныеПартионныеОстатки.Удалить(СтрокаОстаток);
					Иначе
						НоваяСтрока.Расхождения = 1;
						НоваяСтрока.Остаток = 0;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//Все что числится на складе и нет в ЕГАИС. Партии.
	Для Каждого Остаток Из УчетныеПартионныеОстатки Цикл
		НоваяСтрока = Остатки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Остаток);
		Если НоваяСтрока.ОбъемДАЛ <> 0 И НоваяСтрока.ПродаетсяВРозлив Тогда
			НоваяСтрока.Остаток = НоваяСтрока.Остаток * НоваяСтрока.ОбъемДАЛ;
		КонецЕсли;
		НоваяСтрока.Расхождения = 1;
	КонецЦикла;
	
	//Все что числится на складе и нет в ЕГАИС. Марки.
	КлючиМарок = ИндексАкцизныеМарки.Скопировать(Новый Структура("Вывели", Ложь),"АлкогольнаяПродукция, Справка2");
	КлючиМарок.Свернуть("АлкогольнаяПродукция, Справка2");
	
	УдалитьОтсутствующиеМарки = Новый Массив;
	
	Для Каждого Остаток Из КлючиМарок Цикл
		НоваяСтрока = Остатки.Добавить();
		
		Поиск = Новый Структура("АлкогольнаяПродукция, Справка2");
		ЗаполнитьЗначенияСвойств(Поиск, Остаток);
		СтрокиМарок = ИндексАкцизныеМарки.НайтиСтроки(Поиск);
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиМарок[0]);
		НоваяСтрока.Расхождения  = 1;
		НоваяСтрока.Сопоставлено = Истина;
		НоваяСтрока.Поштучная    = Истина;
		НоваяСтрока.Проверена    = Истина;
		НоваяСтрока.Излишки      = Истина;
		Для Каждого Марка Из СтрокиМарок Цикл
			Если Марка.Факт Тогда
				НоваяСтрока.Остаток = НоваяСтрока.Остаток + 1;
			Иначе
				УдалитьОтсутствующиеМарки.Добавить(Марка.АкцизнаяМарка);
			КонецЕсли;
		КонецЦикла;
		
		Если НоваяСтрока.Остаток = 0 Тогда
			Остатки.Удалить(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	Запрос.УстановитьПараметр("АкцизнаяМарка", УдалитьОтсутствующиеМарки);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	АкцизныеМаркиЕГАИС.АкцизнаяМарка КАК АкцизнаяМарка,
	|	ВЫБОР
	|		КОГДА АкцизныеМаркиЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КСписанию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.Отсутствует)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ВНаличии) КОНЕЦ
	|	КАК Статус,
	|	АкцизныеМаркиЕГАИС.Справка2 КАК Справка2,
	|	АкцизныеМаркиЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	АкцизныеМаркиЕГАИС.Основание КАК Основание
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|ГДЕ
	|	АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС = &ОрганизацияЕГАИС
	|	И АкцизныеМаркиЕГАИС.АкцизнаяМарка В(&АкцизнаяМарка)
	|	И (АкцизныеМаркиЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КСписанию)
	|	ИЛИ АкцизныеМаркиЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КОприходованию))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АкцизныеМаркиЕГАИС.ВыполнитьЗаписьВРегистр(Выборка);
	КонецЦикла;
	
	Остатки.Сортировать("Номенклатура,Характеристика,Серия,АлкогольнаяПродукция,Справка2");
	
КонецПроцедуры

// Создает документы корректировки остатков на основании расчетной таблицы.
//
Функция СоздатьДокументыКорректировкиОстатков() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Корректировки", Корректировки.Выгрузить());
	Запрос.УстановитьПараметр("ЭтоТорговыйЗал", ЭтоТорговыйЗал);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Корректировки.Номенклатура               КАК Номенклатура,
	|	Корректировки.Характеристика             КАК Характеристика,
	|	Корректировки.Серия                      КАК Серия,
	|	Корректировки.АлкогольнаяПродукция       КАК АлкогольнаяПродукция,
	|	Корректировки.Справка2                   КАК Справка2,
	|	Корректировки.ПередатьВРегистр2          КАК ПередатьВРегистр2,
	|	Корректировки.Приходовать                КАК Приходовать,
	|	Корректировки.Поштучная                  КАК Поштучная,
	|	Корректировки.ВнешнийПересорт            КАК ВнешнийПересорт,
	|	Корректировки.ВнутреннийПересорт         КАК ВнутреннийПересорт,
	|	Корректировки.ПродаетсяВРозлив           КАК ПродаетсяВРозлив,
	|	Корректировки.ОбъемДАЛ                   КАК ОбъемДАЛ,
	|	Корректировки.ПриходоватьРегистр3        КАК ПриходоватьРегистр3
	|ПОМЕСТИТЬ Корректировки
	|ИЗ
	|	&Корректировки КАК Корректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Корректировки.Номенклатура КАК Номенклатура,
	|	Корректировки.Характеристика,
	|	Корректировки.АлкогольнаяПродукция,
	|	Корректировки.Серия,
	|	Корректировки.Справка2,
	|	ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА Корректировки.ПередатьВРегистр2 / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ПередатьВРегистр2
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА Корректировки.ПередатьВРегистр2 / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ПередатьВРегистр2
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	Корректировки.ПродаетсяВРозлив КАК ПродаетсяВРозлив,
	|	Корректировки.ОбъемДАЛ КАК ОбъемДАЛ
	|ИЗ
	|	Корректировки КАК Корректировки
	|ГДЕ
	|	Корректировки.ПередатьВРегистр2 > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Корректировки.Номенклатура КАК Номенклатура,
	|	Корректировки.Характеристика,
	|	Корректировки.АлкогольнаяПродукция,
	|	Корректировки.Серия,
	|	Корректировки.Справка2,
	|	-ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА Корректировки.ПередатьВРегистр2 / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ПередатьВРегистр2
	|	КОНЕЦ КАК Количество,
	|	-ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА Корректировки.ПередатьВРегистр2 / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ПередатьВРегистр2
	|	КОНЕЦ КАК КоличествоУпаковок
	|ИЗ
	|	Корректировки КАК Корректировки
	|ГДЕ
	|	Корректировки.ПередатьВРегистр2 < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Корректировки.Номенклатура КАК Номенклатура,
	|	Корректировки.Характеристика,
	|	Корректировки.АлкогольнаяПродукция,
	|	Корректировки.Серия,
	|	Корректировки.Справка2,
	|	ВЫБОР
	|		КОГДА &ЭтоТорговыйЗал
	|			И Корректировки.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|			И НЕ Корректировки.Поштучная
	|			ТОГДА 2
	|		ИНАЧЕ 1 КОНЕЦ КАК НомерРегистраЕГАИС,
	|	ВЫБОР
	|		КОГДА Корректировки.Приходовать < 0 
	|			ТОГДА 0
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.Приходовать - Корректировки.ВнешнийПересорт) / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.Приходовать - Корректировки.ВнешнийПересорт
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА Корректировки.Приходовать < 0 
	|			ТОГДА 0
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.Приходовать - Корректировки.ВнешнийПересорт) / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.Приходовать - Корректировки.ВнешнийПересорт
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.ВнешнийПересорт + Корректировки.ВнутреннийПересорт)/ Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ВнешнийПересорт + Корректировки.ВнутреннийПересорт
	|	КОНЕЦ КАК КоличествоПересорт,
	|	ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.ВнешнийПересорт + Корректировки.ВнутреннийПересорт) / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ВнешнийПересорт + Корректировки.ВнутреннийПересорт
	|	КОНЕЦ КАК КоличествоУпаковокПересорт
	|
	|ИЗ
	|	Корректировки КАК Корректировки
	|ГДЕ Корректировки.Приходовать > 0
	|	ИЛИ Корректировки.ВнутреннийПересорт > 0
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Корректировки.Номенклатура         КАК Номенклатура,
	|	Корректировки.Характеристика       КАК Характеристика,
	|	Корректировки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Корректировки.Серия                КАК Серия,
	|	Корректировки.Справка2             КАК Справка2,
	|	ВЫБОР
	|		КОГДА Корректировки.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|			ТОГДА 2
	|		ИНАЧЕ 1 КОНЕЦ КАК НомерРегистраЕГАИС,
	|	-ВЫБОР
	|		КОГДА Корректировки.Приходовать > 0
	|			ТОГДА 0
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.Приходовать - Корректировки.ВнешнийПересорт) / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.Приходовать - Корректировки.ВнешнийПересорт
	|	КОНЕЦ КАК Количество,
	|	-ВЫБОР
	|		КОГДА Корректировки.Приходовать > 0
	|			ТОГДА 0
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.Приходовать - Корректировки.ВнешнийПересорт) / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.Приходовать - Корректировки.ВнешнийПересорт
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	-ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.ВнешнийПересорт - Корректировки.ВнутреннийПересорт) / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ВнешнийПересорт - Корректировки.ВнутреннийПересорт
	|	КОНЕЦ КАК КоличествоПересорт,
	|	-ВЫБОР
	|		КОГДА Корректировки.ПродаетсяВРозлив
	|				И Корректировки.ОбъемДАЛ <> 0
	|			ТОГДА (Корректировки.ВнешнийПересорт - Корректировки.ВнутреннийПересорт) / Корректировки.ОбъемДАЛ
	|		ИНАЧЕ Корректировки.ВнешнийПересорт - Корректировки.ВнутреннийПересорт
	|	КОНЕЦ КАК КоличествоУпаковокПересорт
	|ИЗ
	|	Корректировки КАК Корректировки
	|ГДЕ Корректировки.Приходовать < 0
	|	ИЛИ Корректировки.ВнутреннийПересорт > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|ВЫБРАТЬ
	|	Корректировки.Номенклатура         КАК Номенклатура,
	|	Корректировки.Характеристика       КАК Характеристика,
	|	Корректировки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Корректировки.Серия                КАК Серия,
	|	Корректировки.Справка2             КАК Справка2,
	|	Корректировки.ПриходоватьРегистр3  КАК Количество,
	|	Корректировки.ПриходоватьРегистр3  КАК КоличествоУпаковок
	|ИЗ
	|	Корректировки КАК Корректировки
	|ГДЕ Корректировки.ПриходоватьРегистр3 > 0
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|ВЫБРАТЬ
	|	Корректировки.Номенклатура         КАК Номенклатура,
	|	Корректировки.Характеристика       КАК Характеристика,
	|	Корректировки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Корректировки.Серия                КАК Серия,
	|	Корректировки.Справка2             КАК Справка2,
	|	-Корректировки.ПриходоватьРегистр3 КАК Количество,
	|	-Корректировки.ПриходоватьРегистр3 КАК КоличествоУпаковок
	|ИЗ
	|	Корректировки КАК Корректировки
	|ГДЕ Корректировки.ПриходоватьРегистр3 < 0
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Если НЕ МассивРезультатов[1].Пустой() Тогда
		СоздатьПередачуВРегистр2(МассивРезультатов[1]);
	КонецЕсли;
	
	Если НЕ МассивРезультатов[2].Пустой() Тогда
		СоздатьВозвратИзРегистра2(МассивРезультатов[2]);
	КонецЕсли;
	
	Если НЕ МассивРезультатов[4].Пустой() Тогда
		АктыСписания = СоздатьАктыСписания(МассивРезультатов[4]);
	Иначе
		АктыСписания = Новый Структура("Марки, ИзРегистра1, ИзРегистра2", Новый Массив);
	КонецЕсли;
	
	Если НЕ МассивРезультатов[3].Пустой() Тогда
		СоздатьАктыПостановкиНаБаланс(МассивРезультатов[3], АктыСписания);
	КонецЕсли;
	
	ИспользованныеМарки = АктыСписания.Марки;
	
	Если НЕ МассивРезультатов[5].Пустой() Тогда
		СоздатьАктПостановкиНаБалансВРегистр3(МассивРезультатов[5], ИспользованныеМарки);
	КонецЕсли;
	
	Если НЕ МассивРезультатов[6].Пустой() Тогда
		СоздатьАктСписанияИзРегистра3(МассивРезультатов[6], ИспользованныеМарки);
	КонецЕсли;
	
	Возврат СозданныеДокументы.Выгрузить().ВыгрузитьКолонку("ДокументСсылка");
	
КонецФункции

// Создает документ передачи в регистр №2 ЕГАИС.
//
Процедура СоздатьПередачуВРегистр2(РезультатЗапроса)
	
	Док = Документы.ПередачаВРегистр2ЕГАИС.СоздатьДокумент();
	Док.Дата = ТекущаяДатаСеанса();
	Док.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Док.Заполнить(ОрганизацияЕГАИС);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = Док.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
		СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.Количество;
		
	КонецЦикла;
	
	ЗаписатьДокументКорректировкиОстатков(Док);
	
КонецПроцедуры

// Создает документ возврата из регистра №2 ЕГАИС.
//
Процедура СоздатьВозвратИзРегистра2(РезультатЗапроса)
	
	Док = Документы.ВозвратИзРегистра2ЕГАИС.СоздатьДокумент();
	Док.Дата = ТекущаяДатаСеанса();
	Док.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Док.Заполнить(ОрганизацияЕГАИС);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = Док.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
	КонецЦикла;
	
	ЗаписатьДокументКорректировкиОстатков(Док);
	
КонецПроцедуры

Процедура СоздатьАктыПостановкиНаБаланс(РезультатЗапроса, АктыСписания)
	
	ТаблицаРасхождений = РезультатЗапроса.Выгрузить();
	
	СоздатьАктыПостановкиНаБалансВРегистр1(
		ТаблицаРасхождений.Скопировать(Новый Структура("НомерРегистраЕГАИС", 1)),
		АктыСписания.ИзРегистра1, АктыСписания.Марки);
	
	СоздатьАктыПостановкиНаБалансВРегистр2(
		ТаблицаРасхождений.Скопировать(Новый Структура("НомерРегистраЕГАИС", 2)),
		АктыСписания.ИзРегистра2);
	
КонецПроцедуры

Функция СоздатьАктыСписания(РезультатЗапроса)
	
	АктыСписания = Новый Структура("ИзРегистра1, ИзРегистра2, Марки", Неопределено, Неопределено, Новый Массив);
	
	ТаблицаРасхождений = РезультатЗапроса.Выгрузить();
	
	ЗаполнитьЗначенияСвойств(АктыСписания, СоздатьАктыСписанияИзРегистра1(
		ТаблицаРасхождений.Скопировать(Новый Структура("НомерРегистраЕГАИС", 1))));
	
	АктыСписания.ИзРегистра2 = СоздатьАктыСписанияИзРегистра2(
		ТаблицаРасхождений.Скопировать(Новый Структура("НомерРегистраЕГАИС", 2)));
		
	Возврат АктыСписания;
	
КонецФункции

// Создает акт постановки на баланс в регистр №2 ЕГАИС.
//
Процедура СоздатьАктыПостановкиНаБалансВРегистр2(Излишки, АктСписания)
	
	Акт = Документы.АктПостановкиНаБалансЕГАИС.СоздатьДокумент();
	Акт.Дата = ТекущаяДатаСеанса();
	Акт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Акт.Заполнить(ОрганизацияЕГАИС);
	
	Акт.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
	Акт.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
	
	АктПересорт = Документы.АктПостановкиНаБалансЕГАИС.СоздатьДокумент();
	АктПересорт.Дата = ТекущаяДатаСеанса();
	АктПересорт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	АктПересорт.Заполнить(ОрганизацияЕГАИС);
	
	АктПересорт.ВидДокумента              = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
	АктПересорт.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
	АктПересорт.АктСписанияЕГАИС          = АктСписания;
	
	Для Каждого Выборка Из Излишки Цикл
		
		Если Выборка.Количество Тогда
			СтрокаТовар = Акт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
		КонецЕсли;
		
		Если Выборка.КоличествоПересорт Тогда
			СтрокаТовар = АктПересорт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
			СтрокаТовар.Количество = Выборка.КоличествоПересорт;
			СтрокаТовар.КоличествоУпаковок = Выборка.КоличествоУпаковокПересорт;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Акт.Товары.Количество() Тогда
		ЗаписатьДокументКорректировкиОстатков(Акт);
	КонецЕсли;
	
	Если АктПересорт.Товары.Количество() Тогда
		ЗаписатьДокументКорректировкиОстатков(АктПересорт);
	КонецЕсли;
	
КонецПроцедуры

// Создает акт списания из регистра №2 ЕГАИС.
//
Функция СоздатьАктыСписанияИзРегистра2(Недостачи)
	
	Акт = Документы.АктСписанияЕГАИС.СоздатьДокумент();
	Акт.Дата = ТекущаяДатаСеанса();
	Акт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Акт.Заполнить(ОрганизацияЕГАИС);
	
	Акт.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
	Акт.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Реализация;
	
	АктПересорт = Документы.АктСписанияЕГАИС.СоздатьДокумент();
	АктПересорт.Дата = ТекущаяДатаСеанса();
	АктПересорт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	АктПересорт.Заполнить(ОрганизацияЕГАИС);
	
	АктПересорт.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
	АктПересорт.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Пересортица;
	
	Для Каждого Выборка Из Недостачи Цикл
		
		Если Выборка.Количество Тогда
			СтрокаТовар = Акт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
		КонецЕсли;
		
		Если Выборка.КоличествоПересорт Тогда
			СтрокаТовар = Акт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
			СтрокаТовар.Количество = Выборка.КоличествоПересорт;
			СтрокаТовар.КоличествоУпаковок = СтрокаТовар.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Акт.Товары.Количество() Тогда
		ЗаписатьДокументКорректировкиОстатков(Акт);
	КонецЕсли;
	
	Если АктПересорт.Товары.Количество() Тогда
		ЗаписатьДокументКорректировкиОстатков(АктПересорт);
		Возврат АктПересорт.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Создает акт постановки на баланс в регистр №1 ЕГАИС.
//
Процедура СоздатьАктыПостановкиНаБалансВРегистр1(Излишки, АктСписания, ИспользованныеМарки)
	
	Акт = Документы.АктПостановкиНаБалансЕГАИС.СоздатьДокумент();
	Акт.Дата = ТекущаяДатаСеанса();
	Акт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Акт.Заполнить(ОрганизацияЕГАИС);
	
	Акт.ВидДокумента              = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
	Акт.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
	
	АктПересорт = Документы.АктПостановкиНаБалансЕГАИС.СоздатьДокумент();
	АктПересорт.Дата = ТекущаяДатаСеанса();
	АктПересорт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	АктПересорт.Заполнить(ОрганизацияЕГАИС);
	
	АктПересорт.ВидДокумента              = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
	АктПересорт.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
	АктПересорт.АктСписанияЕГАИС          = АктСписания;
	
	Для Каждого Выборка Из Излишки Цикл
		
		Если Выборка.Количество Тогда
			СтрокаТовар = Акт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
			СтрокаТовар.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		Если Выборка.КоличествоПересорт Тогда
			СтрокаТовар = АктПересорт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
			СтрокаТовар.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			СтрокаТовар.Количество = Выборка.КоличествоПересорт;
			СтрокаТовар.КоличествоУпаковок = Выборка.КоличествоУпаковокПересорт;
		КонецЕсли;
		
	КонецЦикла;
	
	ТоварыАкта = Акт.Товары.Выгрузить();
	ТоварыАкта.Колонки.Добавить("ДобавленоМарок", Новый ОписаниеТипов("Число"));
	ТоварыАкта.Индексы.Добавить("АлкогольнаяПродукция,Справка2");
	ТоварыАктаПересорта = АктПересорт.Товары.Выгрузить();
	ТоварыАктаПересорта.Колонки.Добавить("ДобавленоМарок", Новый ОписаниеТипов("Число"));
	ТоварыАктаПересорта.Индексы.Добавить("АлкогольнаяПродукция,Справка2");
	
	Если МаксимумМарокКПроверкеВУТМ Тогда
		ОбнаруженныеАкцизныеМарки = АкцизныеМарки.Выгрузить(Новый Структура("УТМ,Факт",Ложь, Истина));
	Иначе
		ОбнаруженныеАкцизныеМарки = АкцизныеМарки.Выгрузить(Новый Структура("Регистр3,Факт",Ложь, Истина));
	КонецЕсли;
	ОбнаруженныеАкцизныеМарки.Сортировать("УТМ Убыв");
	
	Для Каждого НоваяМарка Из ОбнаруженныеАкцизныеМарки Цикл
		
		СтрокиАкта          = ТоварыАкта.НайтиСтроки(Новый Структура("АлкогольнаяПродукция, Справка2", НоваяМарка.АлкогольнаяПродукция, НоваяМарка.Справка2));
		СтрокиАктаПересорта = ТоварыАктаПересорта.НайтиСтроки(Новый Структура("АлкогольнаяПродукция, Справка2", НоваяМарка.АлкогольнаяПродукция, НоваяМарка.Справка2));
		ДобавитьВАкт = Ложь;
		Если СтрокиАкта.Количество() Тогда
			ДобавитьВАкт = СтрокиАкта[0].Количество > СтрокиАкта[0].ДобавленоМарок;
		КонецЕсли;
		ДобавитьВАктПересорта = (НЕ ДобавитьВАкт) И СтрокиАктаПересорта.Количество()
			И (СтрокиАктаПересорта[0].Количество > СтрокиАктаПересорта[0].ДобавленоМарок);
		
		Если ДобавитьВАкт Тогда
			СтрокаМарка = Акт.АкцизныеМарки.Добавить();
			СтрокаТовар = СтрокиАкта[0];
		ИначеЕсли ДобавитьВАктПересорта Тогда
			СтрокаМарка = АктПересорт.АкцизныеМарки.Добавить();
			СтрокаТовар = СтрокиАктаПересорта[0];
		Иначе
			СтрокаТовар = Неопределено;
		КонецЕсли;
		
		Если СтрокаТовар<> Неопределено Тогда
			Если ЗначениеЗаполнено(НоваяМарка.Справка2) Тогда
				ОтменитьПривязкуМаркиКСправке2(НоваяМарка);
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтрокаМарка, НоваяМарка,,"Справка2");
			СтрокаМарка.Количество = 1;
			СтрокаМарка.ИдентификаторСтроки = СтрокаТовар.ИдентификаторСтроки;
			СтрокаТовар.ДобавленоМарок = СтрокаТовар.ДобавленоМарок + 1;
			ИспользованныеМарки.Добавить(НоваяМарка.АкцизнаяМарка);
		КонецЕсли;
	КонецЦикла;
	
	ТоварыАкта.Колонки.Удалить("Справка2");
	ТоварыАктаПересорта.Колонки.Удалить("Справка2");
	
	Если Акт.Товары.Количество() Тогда
		Акт.Товары.Загрузить(ТоварыАкта);
		ЗаписатьДокументКорректировкиОстатков(Акт);
	КонецЕсли;
	
	Если АктПересорт.Товары.Количество() Тогда
		АктПересорт.Товары.Загрузить(ТоварыАктаПересорта);
		ЗаписатьДокументКорректировкиОстатков(АктПересорт);
	КонецЕсли;
	
КонецПроцедуры

// Отвязывает акцизную марку от справки №2 для повторной постановки на баланс в регистр №1 ЕГАИС
//
Процедура ОтменитьПривязкуМаркиКСправке2(ДанныеМарки)
	
	НаборЗаписей = РегистрыСведений.АкцизныеМаркиЕГАИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОрганизацияЕГАИС.Установить(ОрганизацияЕГАИС);
	НаборЗаписей.Отбор.АкцизнаяМарка.Установить(ДанныеМарки.АкцизнаяМарка);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() Тогда
		НаборЗаписей[0].Справка2  = Справочники.Справки2ЕГАИС.ПустаяСсылка();
		НаборЗаписей[0].Основание = ОстаткиВРегистре1;
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Создает акт списания из регистра №1 ЕГАИС.
//
Функция СоздатьАктыСписанияИзРегистра1(Недостачи)
	
	ИспользованныеМарки = Новый Массив;
	
	Акт = Документы.АктСписанияЕГАИС.СоздатьДокумент();
	Акт.Дата = ТекущаяДатаСеанса();
	Акт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Акт.Заполнить(ОрганизацияЕГАИС);
	
	Акт.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
	Акт.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Недостача;
	
	АктПересорт = Документы.АктСписанияЕГАИС.СоздатьДокумент();
	АктПересорт.Дата = ТекущаяДатаСеанса();
	АктПересорт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	АктПересорт.Заполнить(ОрганизацияЕГАИС);
	
	АктПересорт.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
	АктПересорт.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Пересортица;
	
	ОбнаруженныеАкцизныеМарки = АкцизныеМарки.Выгрузить(Новый Структура("Регистр3,Факт",Истина, Ложь));
	ОбнаруженныеАкцизныеМарки.Сортировать("УТМ Возр");
	ОбнаруженныеАкцизныеМарки.Индексы.Добавить("АлкогольнаяПродукция, Справка2");
	ПоискМарок = Новый Структура("АлкогольнаяПродукция,Справка2");
	
	Для Каждого Выборка Из Недостачи Цикл
		
		ЗаполнитьЗначенияСвойств(ПоискМарок, Выборка);
		
		Если Выборка.Количество Тогда
			СтрокаТовар = Акт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
			СтрокаТовар.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			СтрокаТовар.КоличествоУпаковок  = СтрокаТовар.Количество;
			
			МаркиСтроки = ОбнаруженныеАкцизныеМарки.НайтиСтроки(ПоискМарок);
			Спишем = Мин(МаркиСтроки.Количество(), СтрокаТовар.Количество);
			Для Каждого ДанныеМарки Из МаркиСтроки Цикл
			
				Если Спишем <= 0 Тогда
					Прервать;
				КонецЕсли;
				Спишем = Спишем - 1;
				
				СтрокаМарка = Акт.АкцизныеМарки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаМарка, СтрокаТовар);
				СтрокаМарка.АкцизнаяМарка = ДанныеМарки.АкцизнаяМарка;
				СтрокаМарка.Количество = 1;
				
				ИспользованныеМарки.Добавить(ДанныеМарки.АкцизнаяМарка);
				ОбнаруженныеАкцизныеМарки.Удалить(ДанныеМарки);
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Выборка.КоличествоПересорт Тогда
			СтрокаПересорт = АктПересорт.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПересорт, Выборка);
			СтрокаПересорт.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			СтрокаПересорт.Количество = Выборка.КоличествоПересорт;
			СтрокаПересорт.КоличествоУпаковок = СтрокаПересорт.Количество;
			
			МаркиСтроки = ОбнаруженныеАкцизныеМарки.НайтиСтроки(ПоискМарок);
			Спишем = Мин(МаркиСтроки.Количество(), СтрокаПересорт.Количество);
			Для Каждого ДанныеМарки Из МаркиСтроки Цикл
				
				Если Спишем <= 0 Тогда
					Прервать;
				КонецЕсли;
				Спишем = Спишем - 1;
				
				СтрокаМарка = АктПересорт.АкцизныеМарки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаМарка, СтрокаПересорт);
				СтрокаМарка.АкцизнаяМарка = ДанныеМарки.АкцизнаяМарка;
				СтрокаМарка.Количество = 1;
				
				ИспользованныеМарки.Добавить(ДанныеМарки.АкцизнаяМарка);
				ОбнаруженныеАкцизныеМарки.Удалить(ДанныеМарки);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = Новый Структура("Марки, ИзРегистра1", ИспользованныеМарки);
	
	Если Акт.Товары.Количество() Тогда
		ЗаписатьДокументКорректировкиОстатков(Акт);
	КонецЕсли;
	
	Если АктПересорт.Товары.Количество() Тогда
		ЗаписатьДокументКорректировкиОстатков(АктПересорт);
		Результат.ИзРегистра1 = АктПересорт.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Создает акт постановки на баланс в регистр №3 ЕГАИС.
//
Процедура СоздатьАктПостановкиНаБалансВРегистр3(Излишки, ИспользованныеМарки)
	
	Акт = Документы.АктПостановкиНаБалансЕГАИС.СоздатьДокумент();
	Акт.Дата = ТекущаяДатаСеанса();
	Акт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Акт.Заполнить(ОрганизацияЕГАИС);
	
	Акт.ВидДокумента              = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3;
	Акт.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
	
	Выборка = Излишки.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТовар = Акт.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
		СтрокаТовар.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		
	КонецЦикла;
	
	ТоварыАкта = Акт.Товары.Выгрузить();
	ТоварыАкта.Колонки.Добавить("ДобавленоМарок", Новый ОписаниеТипов("Число"));
	ТоварыАкта.Индексы.Добавить("АлкогольнаяПродукция,Справка2");
	ОбнаруженныеАкцизныеМарки = АкцизныеМарки.Выгрузить(Новый Структура("Факт, УТМ", Истина, Ложь));
	
	Для Каждого НоваяМарка Из ОбнаруженныеАкцизныеМарки Цикл
		
		Если ИспользованныеМарки.Найти(НоваяМарка.АкцизнаяМарка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиАкта = ТоварыАкта.НайтиСтроки(Новый Структура("АлкогольнаяПродукция, Справка2", НоваяМарка.АлкогольнаяПродукция, НоваяМарка.Справка2));
		
		Если СтрокиАкта.Количество() И СтрокиАкта[0].Количество > СтрокиАкта[0].ДобавленоМарок Тогда
			СтрокаМарка = Акт.АкцизныеМарки.Добавить();
			СтрокаТовар = СтрокиАкта[0];
			ЗаполнитьЗначенияСвойств(СтрокаМарка, НоваяМарка);
			СтрокаМарка.Количество = 1;
			СтрокаМарка.ИдентификаторСтроки = СтрокаТовар.ИдентификаторСтроки;
			СтрокаТовар.ДобавленоМарок = СтрокаТовар.ДобавленоМарок + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписатьДокументКорректировкиОстатков(Акт);
	
КонецПроцедуры

// Создает акт списания из регистра №3 ЕГАИС.
//
Процедура СоздатьАктСписанияИзРегистра3(Недостачи, ИспользованныеМарки)
	
	Акт = Документы.АктСписанияЕГАИС.СоздатьДокумент();
	Акт.Дата = ТекущаяДатаСеанса();
	Акт.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	Акт.Заполнить(ОрганизацияЕГАИС);
	
	Акт.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра3;
	Акт.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Недостача;
	
	ОбнаруженныеАкцизныеМарки = АкцизныеМарки.Выгрузить(Новый Структура("Факт, УТМ",Ложь, Истина));
	ОбнаруженныеАкцизныеМарки.Индексы.Добавить("АлкогольнаяПродукция, Справка2");
	ПоискМарок = Новый Структура("АлкогольнаяПродукция,Справка2");
	
	Выборка = Недостачи.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ПоискМарок, Выборка);
		
		СтрокаТовар = Акт.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
		СтрокаТовар.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		
		МаркиСтроки = ОбнаруженныеАкцизныеМарки.НайтиСтроки(ПоискМарок);
		Спишем = СтрокаТовар.Количество;
		Для Каждого ДанныеМарки Из МаркиСтроки Цикл
			
			Если ИспользованныеМарки.Найти(ДанныеМарки.АкцизнаяМарка) <> Неопределено Тогда
				Продолжить
			ИначеЕсли Спишем <= 0 Тогда
				Прервать;
			КонецЕсли;
			Спишем = Спишем - 1;
			
			СтрокаМарка = Акт.АкцизныеМарки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаМарка, СтрокаТовар);
			СтрокаМарка.АкцизнаяМарка = ДанныеМарки.АкцизнаяМарка;
			СтрокаМарка.Количество = 1;
			
			ИспользованныеМарки.Добавить(ДанныеМарки.АкцизнаяМарка);
			ОбнаруженныеАкцизныеМарки.Удалить(ДанныеМарки);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗаписатьДокументКорректировкиОстатков(Акт);
	
КонецПроцедуры

// Записывает документ корректировки остатков.
//
Процедура ЗаписатьДокументКорректировкиОстатков(Док)
	
	Если НЕ Док.ПроверитьЗаполнение() Тогда
		Док.Записать();
	Иначе
		Док.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
	СтрокаТЧ = СозданныеДокументы.Добавить();
	СтрокаТЧ.ДокументСсылка = Док.Ссылка;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет таблицу остатков по данным ЕГАИС.
//
Функция ПолучитьОстаткиЕГАИС()
	
	ДокументыЕГАИС = Новый Массив;
	ДокументыЕГАИС.Добавить(ОстаткиВРегистре1);
	ДокументыЕГАИС.Добавить(ОстаткиВРегистре2);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументыЕГАИС", ДокументыЕГАИС);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Остатки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Остатки.Справка2 КАК Справка2,
	|	СУММА(Остатки.Количество) КАК ЕГАИС,
	|	МАКСИМУМ(ЕСТЬNULL(Справки2.Поштучная, ЛОЖЬ)) КАК Поштучная,
	|	МАКСИМУМ(ЕСТЬNULL(Продукция.ВидПродукции.Маркируемый, ЛОЖЬ)) КАК Маркируемый,
	|	МАКСИМУМ(Продукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)) КАК ПродаетсяВРозлив
	|ИЗ
	|	Документ.ОстаткиЕГАИС.ОстаткиПоДаннымЕГАИС КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК Продукция
	|		ПО (Продукция.Ссылка = Остатки.АлкогольнаяПродукция)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2
	|		ПО (Справки2.Ссылка = Остатки.Справка2)
	|ГДЕ
	|	Остатки.Ссылка В (&ДокументыЕГАИС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.АлкогольнаяПродукция,
	|	Остатки.Справка2";
	
	ОстаткиЕГАИС = Запрос.Выполнить().Выгрузить();
	ИнтеграцияЕГАИС.ЗаполнитьСопоставленнуюПродукцию(ОстаткиЕГАИС);
	
	Возврат ОстаткиЕГАИС;
	
КонецФункции

#КонецОбласти

#КонецЕсли