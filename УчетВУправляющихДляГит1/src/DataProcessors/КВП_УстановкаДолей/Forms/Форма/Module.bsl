
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ВспомогательныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
// Процедура управляет элементами формы.
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ДолиЗдание.Видимость = Объект.Здание.Пустая();
	
	ПомещениеЗаполнено = Не Объект.Помещение.Пустая();
	Элементы.ДолиПомещение.Видимость       = Не ПомещениеЗаполнено;
	Элементы.ДолиРассчитатьДоли.Видимость  = ПомещениеЗаполнено;
	Элементы.ДолиДоляЗнаменатель.Видимость = Не ПомещениеЗаполнено;
	
	ЛицевойСчетЗаполнен = Не Объект.ЛицевойСчет.Пустая();
	Элементы.Здание.ТолькоПросмотр    = ЛицевойСчетЗаполнен;
	Элементы.Помещение.ТолькоПросмотр = ЛицевойСчетЗаполнен;
	
КонецПроцедуры

&НаСервере
// Устанавливает знаменатель долей л/с.
Процедура УстановитьЗнаменатель(Помещение)
	
	Если Объект.Дата = Дата(1,1,1) Тогда
		Объект.Дата = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату();
	КонецЕсли;
	
	Объект.ДоляЗнаменатель = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьПлощадьКвартиры(Помещение,
																					Справочники.УПЖКХ_ВидыПлощадей.ОбщаяПлощадь, , Объект.Дата, Ложь);
	Объект.ДоляЗнаменатель = ?(Объект.ДоляЗнаменатель = 0, 1, Объект.ДоляЗнаменатель);
	
КонецПроцедуры

&НаКлиенте
// Заполняет знаменатель долей л/с в ТЧ "Доли".
Процедура ИзменитьЗнаменатель()
	
	Если НЕ Элементы.Доли.ТекущиеДанные = Неопределено Тогда
		ПараметрыОтбора = Новый Структура("Помещение", Элементы.Доли.ТекущиеДанные.Помещение);
		НайденныеСтроки = Объект.Доли.НайтиСтроки(ПараметрыОтбора); 
		Для Каждого ТекСтрока Из НайденныеСтроки Цикл
			ТекСтрока.ДоляЗнаменатель = Объект.ДоляЗнаменатель;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ИзменитьЗнаменатель()

&НаСервере
// Заполняет ТЧ лицевыми счетами и долей собственности по л/с на дату
//
Процедура ОбновитьДоли()
	
	ТекстОтбора = "";
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(Объект.Помещение) Тогда
		Запрос.УстановитьПараметр("Помещение", Объект.Помещение);
		ТекстОтбора = "Объект = &Помещение";
	ИначеЕсли ЗначениеЗаполнено(Объект.Здание) Тогда
		Запрос.УстановитьПараметр("Здание", Объект.Здание);
		ТекстОтбора = "Объект.Владелец = &Здание";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата", КонецДня(Объект.Дата));
	Запрос.Текст = Обработки.КВП_УстановкаДолей.ПолучитьТекстЗапроса(ТекстОтбора);
	Результат = Запрос.Выполнить().Выгрузить();
	
	// Заполняем таблицу Долей
	Объект.Доли.Загрузить(Результат);
	Если ЗначениеЗаполнено(Объект.Помещение) Тогда
		Если Результат.Количество() > 0 Тогда
			ДоляЗнаменатель = Результат[0].ДоляЗнаменатель;
		Иначе
			УстановитьЗнаменатель(Объект.Помещение);
		КонецЕсли;
	КонецЕсли;
	
	// Заполняем таблицу Лицевых счетов
	Объект.ЛицевыеСчета.Загрузить(Объект.Доли.Выгрузить(,"ЛицевойСчет"));
	ТаблицаКомнат = ПолучитьСписокПривязанныхКомнат(КонецДня(Объект.Дата), Объект.Доли.Выгрузить(,"ЛицевойСчет"));
	
	// Заполняем таблицу Комнат
	Объект.Комнаты.Загрузить(ТаблицаКомнат);
	
КонецПроцедуры // ОбновитьДоли()

&НаСервере
// Процедура рассчитывает доли на сервере.
Процедура РассчитатьДолиНаСервере()
	
	Если Объект.Комнаты.Количество() > 0 Тогда
		// Если задана привязка комнат, расчет производится по формуле: 
		// Доля л/с = Общая площадь помещения * Сумма жилой площади комнат, привязанных к л/с : Жилая площадь помещения.
		
		ОбщаяПлощадьПомещения = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьПлощадьКвартиры(Объект.Помещение,
																						Справочники.УПЖКХ_ВидыПлощадей.ОбщаяПлощадь, , Объект.Дата, Ложь);
		ЖилаяПлощадьПомещения = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьПлощадьКвартиры(Объект.Помещение,
																						Справочники.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь, , Объект.Дата, Ложь);
		СписокКомнат = Объект.Комнаты.Выгрузить();
		ТаблицаПлощадейКомнат = Обработки.КВП_УстановкаДолей.ПолучитьПлощадьКомнатЛС(СписокКомнат);
		
		Для каждого ТекЛС Из Объект.Доли Цикл
			
			СтуктураПоиска = Новый Структура("ЛицевойСчет", ТекЛС.ЛицевойСчет);
			ТаблицаПлощадейКомнат.Сбросить();
			
			Если ТаблицаПлощадейКомнат.НайтиСледующий(СтуктураПоиска) Тогда
				СуммаЖилойПлощадиКомнатЛС = ТаблицаПлощадейКомнат.Площадь;
			Иначе
				СуммаЖилойПлощадиКомнатЛС = 0;
			КонецЕсли; 
			
			ТекЛС.ДоляЧислитель = ?(ЖилаяПлощадьПомещения = 0, 0, 
															ОбщаяПлощадьПомещения * СуммаЖилойПлощадиКомнатЛС / ЖилаяПлощадьПомещения);
		КонецЦикла;
		
	Иначе
		// Если список комнат не задан, то расчет выполняется пропорционально количеству лицевых счетов.
		
		КоличествоЛС = Объект.Доли.Количество();
		Для каждого ТекЛС Из Объект.Доли Цикл
			ТекЛС.ДоляЧислитель = ТекЛС.ДоляЗнаменатель / КоличествоЛС;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Выполняет проверку введенных размеров долей
Функция ПроверкаДолей()
	
	ПараметрыПроверки = Новый Структура;
	
	ПараметрыПроверки.Вставить("ДоляЗнаменатель", Объект.ДоляЗнаменатель);
	ПараметрыПроверки.Вставить("Доли",            Объект.Доли.Выгрузить());
	ПараметрыПроверки.Вставить("Здание",          Объект.Здание);
	ПараметрыПроверки.Вставить("Комнаты",         Объект.Комнаты.Выгрузить());
	
	РезультатПроверки = Документы.КВП_ОткрытиеЛицевогоСчета.ПроверкаДолей(ПараметрыПроверки);
	
	Возврат РезультатПроверки;
	
КонецФункции

&НаСервере
// Процедура записывает данные о долях на сервере.
Процедура ЗаписатьДанные()
	
	// ДОЛИ
	
	Для Каждого Строка Из Объект.Доли Цикл
		
		РазмерСтавок = РегистрыСведений.КВП_РазмерыДолейЛицевыхСчетов.СоздатьНаборЗаписей();
		РазмерСтавок.Отбор.Период.Установить(Объект.Дата);
		РазмерСтавок.Отбор.Объект.Установить(Строка.ЛицевойСчет.Адрес);
		РазмерСтавок.Отбор.ЛицевойСчет.Установить(Строка.ЛицевойСчет);
		
		НовЗапись = РазмерСтавок.Добавить();
		НовЗапись.Период              = Объект.Дата;
		НовЗапись.Объект              = Строка.ЛицевойСчет.Адрес;
		НовЗапись.ЛицевойСчет         = Строка.ЛицевойСчет;
		НовЗапись.ДокументРегистратор = Объект.ДокументРегистратор;
		НовЗапись.ДоляЧислитель       = Строка.ДоляЧислитель;
		НовЗапись.ДоляЗнаменатель     = Строка.ДоляЗнаменатель;
		
		РазмерСтавок.Записать(Истина);
		
	КонецЦикла;
	
	// КОМНАТЫ
	
	// Для открытых л/с делаем проверку на изменение комнат л/с.
	ПредТаблицаКомнат = ПолучитьСписокПривязанныхКомнат(Объект.Дата, Объект.Доли.Выгрузить(,"ЛицевойСчет"));
	
	врКомнаты = Объект.Комнаты.Выгрузить();
	
	Для Каждого ТекКомн Из ПредТаблицаКомнат Цикл
		
		НайденнаяСтрока = врКомнаты.Найти(ТекКомн.Комната, "Комната");
		
		// Если удалена привязанная комната или привязана к др. л/с, то сторнируем запись.
		Если НайденнаяСтрока = Неопределено 
			ИЛИ НЕ НайденнаяСтрока = Неопределено
			И НЕ НайденнаяСтрока.ЛицевойСчет = ТекКомн.ЛицевойСчет Тогда
			
			СписокКомнат = РегистрыСведений.УПЖКХ_ПривязанныеКЛицевомуСчетуКомнаты.СоздатьНаборЗаписей();
			СписокКомнат.Отбор.Период.Установить(Объект.Дата);
			СписокКомнат.Отбор.ЛицевойСчет.Установить(ТекКомн.ЛицевойСчет);
			СписокКомнат.Отбор.Комната.Установить(ТекКомн.Комната);
			
			НовЗапись = СписокКомнат.Добавить();
			НовЗапись.Период          = Объект.Дата;
			НовЗапись.ЛицевойСчет     = ТекКомн.ЛицевойСчет;
			НовЗапись.Комната         = ТекКомн.Комната;
			НовЗапись.Привязка        = Ложь;
			
			СписокКомнат.Записать(Истина);
		КонецЕсли; 
	КонецЦикла;
	
	// Запись комнат, привязанных к л/с.
	Для Каждого Строка Из Объект.Комнаты Цикл
		
		Если НЕ ЗначениеЗаполнено(Строка.Комната) Тогда
			Продолжить;
		КонецЕсли;
		
		СписокКомнат = РегистрыСведений.УПЖКХ_ПривязанныеКЛицевомуСчетуКомнаты.СоздатьНаборЗаписей();
		СписокКомнат.Отбор.Период.Установить(Объект.Дата);
		СписокКомнат.Отбор.ЛицевойСчет.Установить(Строка.ЛицевойСчет);
		СписокКомнат.Отбор.Комната.Установить(Строка.Комната);
		
		НовЗапись = СписокКомнат.Добавить();
		НовЗапись.Период          = Объект.Дата;
		НовЗапись.ЛицевойСчет     = Строка.ЛицевойСчет;
		НовЗапись.Комната         = Строка.Комната;
		НовЗапись.Привязка        = Истина;
		
		СписокКомнат.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Дата",        Объект.Дата);
	Параметры.Свойство("Здание",      Объект.Здание);
	Параметры.Свойство("Помещение",   Объект.Помещение);
	Параметры.Свойство("ЛицевойСчет", Объект.ЛицевойСчет);
	
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		Объект.Дата = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату();
	КонецЕсли;
	
	ОбновитьДоли();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "Дата".
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьДоли();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "Здание".
Процедура ЗданиеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	ОбновитьДоли();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "Помещение".
Процедура ПомещениеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	ОбновитьДоли();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "Помещение".
Процедура ПомещениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПараметрВладелец",            Объект.Здание);
	СтруктураПараметров.Вставить("ПараметрТекущаяСтрока",       Объект.Помещение);
	СтруктураПараметров.Вставить("ОрганичениеПоУровнюИерархии", 1);
	
	ДопПараметры = Новый Структура("Элемент", Элемент);
	ОткрытьФорму("Справочник.УПЖКХ_Помещения.ФормаВыбора",
				 СтруктураПараметров,
				 ЭтаФорма,,,,
				 Новый ОписаниеОповещения("ОбработатьВыборПомещения", ЭтаФорма, ДопПараметры),
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // ПомещениеНачалоВыбора()

&НаКлиенте
// Обработка выбора помещения, вызванного в процедуре "ПомещениеНачалоВыбора()".
Процедура ОбработатьВыборПомещения(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Помещение = ВыбранноеЗначение;
	ПомещениеПриИзменении(ДополнительныеПараметры.Элемент);
	
КонецПроцедуры // ОбработатьВыборПомещения()

&НаКлиенте
// Обработчик события "ПриИзменении" поля ввода "Делитель".
Процедура ДоляЗнаменательПриИзменении(Элемент)
	
	ИзменитьЗнаменатель();
	
КонецПроцедуры

////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТЧ "ЛИЦЕВЫЕ СЧЕТА"
//

&НаКлиенте
// Процедура устанавливает отбор комнат по ЛицевомуСчету.
//
Процедура ЛицевыеСчетаПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		ЛС = Элемент.ТекущиеДанные.ЛицевойСчет;
		Элементы.Комнаты.ОтборСтрок = Новый ФиксированнаяСтруктура("ЛицевойСчет", ЛС);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередНачаломДобавления" табличной части "ЛицевыеСчета".
Процедура ЛицевыеСчетаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередУдалением" табличной части "ЛицевыеСчета".
Процедура ЛицевыеСчетаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "ЛицевыеСчетаЛицевойСчет".
Процедура ЛицевыеСчетаЛицевойСчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТЧ "КОМНАТЫ"
//

&НаКлиенте
// Обработчик события "ПриНачалеРедактирования" табличной части "Комнаты".
Процедура КомнатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Отбор     = Элемент.ОтборСтрок;
	
	Если НоваяСтрока Тогда
		Если Не ЗначениеЗаполнено(ТекДанные.ЛицевойСчет) Тогда
			ТекДанные.ЛицевойСчет = Отбор.ЛицевойСчет;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "Комната".
Процедура КомнатыКомнатаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.Комнаты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПараметрВладелец",            Объект.Здание);
	ПараметрыФормы.Вставить("ПараметрТекущаяСтрока",       Объект.Помещение);
	ПараметрыФормы.Вставить("ОрганичениеПоУровнюИерархии", 2);
	
	ДопПараметры = Новый Структура("ТекДанные", ТекДанные);
	ОткрытьФорму("Справочник.УПЖКХ_Помещения.ФормаВыбора",
				 ПараметрыФормы,
				 ЭтаФорма,,,,
				 Новый ОписаниеОповещения("ОбработатьВыборКомнаты", ЭтаФорма, ДопПараметры),
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // КомнатыКомнатаНачалоВыбора()

&НаКлиенте
// Обработчик результата выбора помещения, вызванного в процедуре "КомнатыКомнатаНачалоВыбора()".
Процедура ОбработатьВыборКомнаты(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = ДополнительныеПараметры.ТекДанные;
	
	ТекДанные.Площадь = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьПлощадьКвартиры(ВыбранноеЗначение,
																			 ПредопределенноеЗначение("Справочник.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь"),,
																			 Объект.Дата);
	ТекДанные.Комната = ВыбранноеЗначение;
	
КонецПроцедуры // ОбработатьВыборКомнаты()

////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТЧ "ДОЛИ"
//

&НаКлиенте
// Обработчик события "ПриАктивизацииСтроки" поля "Доли".
Процедура ДолиПриАктивизацииСтроки(Элемент)
	
	ТекЛицевойСчет = Неопределено;
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		Объект.ДоляЗнаменатель = Элемент.ТекущиеДанные.ДоляЗнаменатель;
		ТекЛицевойСчет = Элемент.ТекущиеДанные.ЛицевойСчет;
	КонецЕсли;
	
	ТекОтветственный = 
		УПЖКХ_ОбщегоНазначенияСервер.ПолучитьОтветственногоСобственникаЛицевогоСчета(ТекЛицевойСчет, Объект.Дата);
	Если ТекОтветственный = Неопределено Тогда
		ВладелецЛС = "<Не определен>";
	Иначе
		ВладелецЛС = ТекОтветственный;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередНачаломДобавления" поля "Доли".
Процедура ДолиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередУдалением" поля "Доли".
Процедура ДолиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "ДолиЛицевойСчет".
Процедура ДолиЛицевойСчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "Записать".
Процедура Записать(Команда)
	
	Если НЕ ПроверкаДолей() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Запись не выполнена!", Ложь);
		Возврат;
	КонецЕсли;
	
	ЗаписатьДанные();
	
	ПоказатьПредупреждение(Неопределено, "Запись долей и списка комнат произведена успешно!");
	Оповестить("ОбновитьДолюЛС", , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "ЗаполнитьЗнаменательОбщейПлощадью".
Процедура ЗаполнитьЗнаменательОбщейПлощадью(Команда)
	
	Если Объект.Помещение.Пустая() И Не Элементы.Доли.ТекущиеДанные = Неопределено Тогда
		УстановитьЗнаменатель(Элементы.Доли.ТекущиеДанные.Помещение);
	Иначе
		УстановитьЗнаменатель(Объект.Помещение);
	КонецЕсли;
	
	ИзменитьЗнаменатель();
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "РассчитатьДоли".
Процедура РассчитатьДоли(Команда)
	
	РассчитатьДолиНаСервере();
	
КонецПроцедуры

#КонецОбласти
