#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Обработчик события "ОбработкаПроверкиЗаполнения" документа.
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	//МассивНепроверяемыхРеквизитов.Добавить("ПроцентВознаграждения");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет табличную часть ДанныеОбОплатах.
Процедура ПолучитьДанныеОбОплатахЗаУслугиЖКХ() Экспорт
	// Алгоритм работы запроса:
	// 1. Получаются поставщики услуг и данные по договорам.
	// 2. Получаются настройки группировки видов услуг.
	// 3. Получаются таблицы оплат и задолженностей в разрезе л/с. Это необходимо, чтобы учетом 
	//    приоритетов отнести оплату и долг л/с к соответствующим объектам.
	//    Например, долг по л/с№1, будет относиться к подъезду №1, но не будет относится к зданию, 
	//    в котором находится этот подъезд, если на подъезд указан свой поставщик, отличный от поставщика услуги по дому.
	// 4. Выбирается общий список л/с в разрезе видов услуг и дополняется данными по зданиям, подъездам.
	// 5. Таблица л/с соединяется с таблицей поставщиков и определяется таблица поставщиков по приоритетам.
	// 6. В итоге таблица поставщиков дополняется данными о задолженности, оплатами населения.
	//    Оплаты суммируются и группируются по настройкам видов услуг.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",        НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",         КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация",          Организация);
	Запрос.УстановитьПараметр("ГруппировочныеУслуги", Настройка_ГруппировочныеУслуги);
	Запрос.УстановитьПараметр("СоответствиеУслуг",    Настройка_СоответствиеУслуг);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_ПоставщикиУслугСрезПоследних.Поставщик КАК Поставщик,
	|	УПЖКХ_ПоставщикиУслугСрезПоследних.ВидУслуги КАК ВидУслуги,
	|	УПЖКХ_ПоставщикиУслугСрезПоследних.Объект КАК Объект,
	|	УПЖКХ_ПоставщикиУслугСрезПоследних.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг
	|ПОМЕСТИТЬ врПоставщики
	|ИЗ
	|	РегистрСведений.УПЖКХ_ПоставщикиУслуг.СрезПоследних(&КонецПериода, Организация = &Организация) КАК УПЖКХ_ПоставщикиУслугСрезПоследних
	|ГДЕ
	|	УПЖКХ_ПоставщикиУслугСрезПоследних.ДоговорПоставщикаУслуг.УПЖКХ_ОплатаЧерезУК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппировочныеУслуги.Идентификатор КАК Идентификатор,
	|	ГруппировочныеУслуги.НаименованиеУслуги КАК НаименованиеУслуги,
	|	ГруппировочныеУслуги.ЯвляетсяУслугойСодержания КАК ЯвляетсяУслугойСодержания
	|ПОМЕСТИТЬ врГруппировочныеУслуги
	|ИЗ
	|	&ГруппировочныеУслуги КАК ГруппировочныеУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеУслуг.Идентификатор КАК Идентификатор,
	|	СоответствиеУслуг.ВидУслуги КАК ВидУслуги
	|ПОМЕСТИТЬ врСоответствиеУслуг
	|ИЗ
	|	&СоответствиеУслуг КАК СоответствиеУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппировочныеУслуги.НаименованиеУслуги КАК НаименованиеУслуги,
	|	ГруппировочныеУслуги.ЯвляетсяУслугойСодержания КАК ЯвляетсяУслугойСодержания,
	|	СоответствиеУслуг.ВидУслуги КАК ВидУслуги
	|ПОМЕСТИТЬ врНастройкиГруппировкиВидовУслуг
	|ИЗ
	|	врГруппировочныеУслуги КАК ГруппировочныеУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ врСоответствиеУслуг КАК СоответствиеУслуг
	|		ПО ГруппировочныеУслуги.Идентификатор = СоответствиеУслуг.Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_НачисленияОбороты.Услуга.ВидУслуги КАК ВидУслуги,
	|	УПЖКХ_НачисленияОбороты.ЛицевойСчет КАК ЛицевойСчет,
	|	-УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот КАК СуммаОплаты
	|ПОМЕСТИТЬ врОплатыЗаУслугиЖКХ
	|ИЗ
	|	РегистрНакопления.УПЖКХ_Начисления.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата)) КАК УПЖКХ_НачисленияОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.Услуга.ВидУслуги КАК ВидУслуги,
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.ЛицевойСчет КАК ЛицевойСчет,
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.СуммаНачисленияОстаток КАК СуммаДолга
	|ПОМЕСТИТЬ врЗадолженностьЗаУслугиЖКХ
	|ИЗ
	|	РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.Остатки(&КонецПериода, Организация = &Организация) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстатки
	|ГДЕ
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.СуммаНачисленияОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОплатыЗаУслугиЖКХ.ВидУслуги КАК ВидУслуги,
	|	ОплатыЗаУслугиЖКХ.ЛицевойСчет КАК ЛицевойСчет
	|ПОМЕСТИТЬ врТаблицаЛицевыхСчетов
	|ИЗ
	|	врОплатыЗаУслугиЖКХ КАК ОплатыЗаУслугиЖКХ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗадолженностьЗаУслугиЖКХ.ВидУслуги,
	|	ЗадолженностьЗаУслугиЖКХ.ЛицевойСчет
	|ИЗ
	|	врЗадолженностьЗаУслугиЖКХ КАК ЗадолженностьЗаУслугиЖКХ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЛицевыхСчетов.ВидУслуги КАК ВидУслуги,
	|	ТаблицаЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
	|	ТаблицаЛицевыхСчетов.ЛицевойСчет.Адрес.Подъезд КАК Подъезд,
	|	ТаблицаЛицевыхСчетов.ЛицевойСчет.Адрес.Владелец КАК Здание
	|ПОМЕСТИТЬ врИтоговаяТаблицаЛицевыхСчетов
	|ИЗ
	|	врТаблицаЛицевыхСчетов КАК ТаблицаЛицевыхСчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИтоговаяТаблицаЛицевыхСчетов.ВидУслуги КАК ВидУслуги,
	|	ИтоговаяТаблицаЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
	|	ВЫБОР
	|		КОГДА Поставщики.Объект ССЫЛКА Справочник.КВП_Подъезды
	|			ТОГДА 10
	|		ИНАЧЕ 20
	|	КОНЕЦ КАК Приоритет,
	|	Поставщики.Объект КАК Объект,
	|	Поставщики.Поставщик КАК Поставщик,
	|	Поставщики.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг
	|ПОМЕСТИТЬ врТаблицаПоставщиковПоЛицевымСчетам
	|ИЗ
	|	врИтоговаяТаблицаЛицевыхСчетов КАК ИтоговаяТаблицаЛицевыхСчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ врПоставщики КАК Поставщики
	|		ПО ИтоговаяТаблицаЛицевыхСчетов.ВидУслуги = Поставщики.ВидУслуги
	|			И (ИтоговаяТаблицаЛицевыхСчетов.Подъезд = Поставщики.Объект
	|				ИЛИ ИтоговаяТаблицаЛицевыхСчетов.Здание = Поставщики.Объект)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоставщиковПоЛицевымСчетам.ВидУслуги КАК ВидУслуги,
	|	ТаблицаПоставщиковПоЛицевымСчетам.ЛицевойСчет КАК ЛицевойСчет,
	|	МИНИМУМ(ТаблицаПоставщиковПоЛицевымСчетам.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ врМинимальныеПриоритеты
	|ИЗ
	|	врТаблицаПоставщиковПоЛицевымСчетам КАК ТаблицаПоставщиковПоЛицевымСчетам
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПоставщиковПоЛицевымСчетам.ЛицевойСчет,
	|	ТаблицаПоставщиковПоЛицевымСчетам.ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоставщиковПоЛицевымСчетам.ВидУслуги КАК ВидУслуги,
	|	ТаблицаПоставщиковПоЛицевымСчетам.ЛицевойСчет КАК ЛицевойСчет,
	|	ТаблицаПоставщиковПоЛицевымСчетам.Поставщик КАК Поставщик,
	|	ТаблицаПоставщиковПоЛицевымСчетам.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг
	|ПОМЕСТИТЬ врИтоговаяТаблицаПоставщиков
	|ИЗ
	|	врТаблицаПоставщиковПоЛицевымСчетам КАК ТаблицаПоставщиковПоЛицевымСчетам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ врМинимальныеПриоритеты КАК МинимальныеПриоритеты
	|		ПО ТаблицаПоставщиковПоЛицевымСчетам.ВидУслуги = МинимальныеПриоритеты.ВидУслуги
	|			И ТаблицаПоставщиковПоЛицевымСчетам.ЛицевойСчет = МинимальныеПриоритеты.ЛицевойСчет
	|			И ТаблицаПоставщиковПоЛицевымСчетам.Приоритет = МинимальныеПриоритеты.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблицаПоставщиков.ВидУслуги КАК ВидУслуги,
	|	ИтоговаяТаблицаПоставщиков.Поставщик КАК Поставщик,
	|	ИтоговаяТаблицаПоставщиков.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
	|	СУММА(ЗадолженностьЗаУслугиЖКХ.СуммаДолга) КАК СуммаДолга
	|ПОМЕСТИТЬ врЗадолженностьПоПоставщикам
	|ИЗ
	|	врИтоговаяТаблицаПоставщиков КАК ИтоговаяТаблицаПоставщиков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ врЗадолженностьЗаУслугиЖКХ КАК ЗадолженностьЗаУслугиЖКХ
	|		ПО ИтоговаяТаблицаПоставщиков.ВидУслуги = ЗадолженностьЗаУслугиЖКХ.ВидУслуги
	|			И ИтоговаяТаблицаПоставщиков.ЛицевойСчет = ЗадолженностьЗаУслугиЖКХ.ЛицевойСчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ИтоговаяТаблицаПоставщиков.ВидУслуги,
	|	ИтоговаяТаблицаПоставщиков.Поставщик,
	|	ИтоговаяТаблицаПоставщиков.ДоговорПоставщикаУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблицаПоставщиков.Поставщик КАК Поставщик,
	|	ИтоговаяТаблицаПоставщиков.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
	|	ЕСТЬNULL(НастройкиГруппировкиВидовУслуг.НаименованиеУслуги, ИтоговаяТаблицаПоставщиков.ВидУслуги.Наименование) КАК ВидУслуги,
	|	НастройкиГруппировкиВидовУслуг.ЯвляетсяУслугойСодержания КАК ЯвляетсяУслугойСодержания,
	|	СУММА(ОплатыЗаУслугиЖКХ.СуммаОплаты) КАК Сумма,
	|	МАКСИМУМ(ЕСТЬNULL(ЗадолженностьПоПоставщикам.СуммаДолга, 0)) КАК СуммаДолга
	|ПОМЕСТИТЬ врИтоговаяТаблица
	|ИЗ
	|	врИтоговаяТаблицаПоставщиков КАК ИтоговаяТаблицаПоставщиков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ врОплатыЗаУслугиЖКХ КАК ОплатыЗаУслугиЖКХ
	|		ПО ИтоговаяТаблицаПоставщиков.ВидУслуги = ОплатыЗаУслугиЖКХ.ВидУслуги
	|			И ИтоговаяТаблицаПоставщиков.ЛицевойСчет = ОплатыЗаУслугиЖКХ.ЛицевойСчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ врЗадолженностьПоПоставщикам КАК ЗадолженностьПоПоставщикам
	|		ПО ИтоговаяТаблицаПоставщиков.ВидУслуги = ЗадолженностьПоПоставщикам.ВидУслуги
	|			И ИтоговаяТаблицаПоставщиков.Поставщик = ЗадолженностьПоПоставщикам.Поставщик
	|			И ИтоговаяТаблицаПоставщиков.ДоговорПоставщикаУслуг = ЗадолженностьПоПоставщикам.ДоговорПоставщикаУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ врНастройкиГруппировкиВидовУслуг КАК НастройкиГруппировкиВидовУслуг
	|		ПО ИтоговаяТаблицаПоставщиков.ВидУслуги = НастройкиГруппировкиВидовУслуг.ВидУслуги
	|
	|СГРУППИРОВАТЬ ПО
	|	ИтоговаяТаблицаПоставщиков.Поставщик,
	|	ИтоговаяТаблицаПоставщиков.ДоговорПоставщикаУслуг,
	|	НастройкиГруппировкиВидовУслуг.ЯвляетсяУслугойСодержания,
	|	ЕСТЬNULL(НастройкиГруппировкиВидовУслуг.НаименованиеУслуги, ИтоговаяТаблицаПоставщиков.ВидУслуги.Наименование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблица.Поставщик КАК Поставщик,
	|	ИтоговаяТаблица.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
	|	ИтоговаяТаблица.ВидУслуги КАК ВидУслуги,
	|	ИтоговаяТаблица.ЯвляетсяУслугойСодержания КАК ЯвляетсяУслугойСодержания,
	|	ИтоговаяТаблица.Сумма КАК Сумма,
	|	ИтоговаяТаблица.СуммаДолга КАК СуммаДолга
	|ИЗ
	|	врИтоговаяТаблица КАК ИтоговаяТаблица
	|ГДЕ
	|	ИтоговаяТаблица.Сумма > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИтоговаяТаблица.Поставщик,
	|	ИтоговаяТаблица.ДоговорПоставщикаУслуг,
	|	ИтоговаяТаблица.ВидУслуги";
	ДанныеОбОплатах.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ПолучитьДанныеОбОплатахЗаУслугиЖКХ()

// Формирует документы "Платежное поручение".
Функция СоздатьПлатежныеДокументы(Параметры) Экспорт
	
	// Для информации:
	// По каждому договору с РСО и виду услуг за период по организации формируется один документ «Платежное поручение».
	
	СозданныеДокументы = Новый Массив;
	
	ТаблицаПлатежей = ПолучитьИзВременногоХранилища(Параметры.ДанныеОбОплатах);
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	ВидПлатежногоДокумента = "ПлатежноеПоручение";
	
	СтавкаНДС         = УчетДенежныхСредствБП.ПолучитьСтавкуНДСПоДоговору(Дата, Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	ЗначениеСтавкиНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);
	
	Для каждого Платеж Из ТаблицаПлатежей Цикл
		
		СуммаПлатежа = Платеж.Сумма;
		
		Если Платеж.ЯвляетсяУслугойСодержания Тогда
			
			// ОСОБЕННОСТЬ:
			// Для РСО, осуществляющей поставку Услуги содержания, заполняем сумму за минусом Суммы вознаграждения. 
			// Сумму платежа уменьшаем на Сумму вознаграждения пропорционально собранным средствам за содержание.
			
			СуммаПлатежа = СуммаПлатежа - Параметры.СуммаВознаграждения * (СуммаПлатежа / Параметры.СуммаЗаСодержание);
			
		КонецЕсли;
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("Дата",              Дата);
		ДанныеЗаполнения.Вставить("Организация",       Организация);
		ДанныеЗаполнения.Вставить("СчетОрганизации",   СчетОрганизации);
		ДанныеЗаполнения.Вставить("ВалютаДокумента",   СчетОрганизации.ВалютаДенежныхСредств);
		ДанныеЗаполнения.Вставить("ВидОперации",       Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику);
		ДанныеЗаполнения.Вставить("Контрагент",        Платеж.Поставщик);
		ДанныеЗаполнения.Вставить("ДоговорКонтрагента",Платеж.ДоговорПоставщикаУслуг);
		
		// В назначении платежа дополнительно указывается за какой вид услуги произведена оплата и за какой период.
		// Информация о сумме платежа и сумме НДС добавится автоматически.
		НазначениеПлатежа = "Оплата за """ + Платеж.ВидУслуги + """"
						  + УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода);
		
		ДанныеЗаполнения.Вставить("НазначениеПлатежа", НазначениеПлатежа);
		ДанныеЗаполнения.Вставить("СуммаДокумента",    СуммаПлатежа);
		ДанныеЗаполнения.Вставить("ВидПлатежа",        "Электронно");
		ДанныеЗаполнения.Вставить("СтавкаНДС",         СтавкаНДС);
		ДанныеЗаполнения.Вставить("СуммаНДС",          Окр(СуммаПлатежа * ЗначениеСтавкиНДС / (100 + ЗначениеСтавкиНДС), 2));
		
		НовыйДокумент = Документы[ВидПлатежногоДокумента].СоздатьДокумент();
		НовыйДокумент.Заполнить(ДанныеЗаполнения);
		
		АвтоЗначенияРеквизитов = УчетДенежныхСредствБП.СформироватьАвтоЗначенияРеквизитовПлательщикаПолучателя(
									НовыйДокумент.Организация,
									НовыйДокумент.СчетОрганизации,
									НовыйДокумент.Контрагент,
									НовыйДокумент.СчетКонтрагента);
		
		Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(НовыйДокумент, АвтоЗначенияРеквизитов, Истина);
		
		НовыйДокумент.Записать();
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Создан документ """ + НовыйДокумент.Ссылка + """");
		Если НовыйДокумент.ПроверитьЗаполнение() Тогда
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		// Иначе 
		// будет выведен список ошибок с учетом проверок самого документа.
		КонецЕсли;
		
		// Сохраним ссылку на сформированное платежное поручение.
		СозданныеДокументы.Добавить(НовыйДокумент.Ссылка);
		
	КонецЦикла;
	
	Возврат СозданныеДокументы;
	
КонецФункции // СоздатьПлатежныеДокументы()

#КонецОбласти

#КонецЕсли
