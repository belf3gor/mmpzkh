
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция формирует памятку доступа для 3-й версии обмена.
Функция ПечатьПамяткиДоступа(МассивОбъектов, ПараметрыПечати)
	
	// СБОР ИНФОРМАЦИИ.
	СтруктураПараметров = Новый Структура;
	ТабличныйДокумент   = Новый ТабличныйДокумент;
	
	ТаблицаЛС = ПолучитьИзВременногоХранилища(МассивОбъектов.Получить(1));
	
	НастройкаДоступа = МассивОбъектов.Получить(0);
	Организация      = НастройкаДоступа.Организация;
	
	СтруктураПараметров.Вставить("Организация", УПЖКХ_ПечатьКвитанцийСервер.ПолучитьНаименованиеОрганизации(Организация));
	
	ТекущаяДата = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату();
	
	СтруктураПараметров.Вставить("АдресСайта", НастройкаДоступа.АдресСайта);
	
	ТаблицаПД = ПолучитьТаблицуПараметровДоступа(ТаблицаЛС);
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Справочник.КВП_ЛицевыеСчета.ПФ_MXL_ПамяткаДляДоступаВЛичныйКабинетНаСайтеЖКХ");
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_ЛицевыеСчета_ПамяткаДляДоступаВЛичныйКабинетНаСайтеЖКХ";
	
	ПервыйЭлемент = Истина;
	
	Для Каждого СтрокаЛС Из ТаблицаПД Цикл
		Если ПервыйЭлемент Тогда
			ПервыйЭлемент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПодготовитьКПечатиСтруктуруСПараметрами(СтруктураПараметров, СтрокаЛС);
		
		Область = Макет.ПолучитьОбласть("Блок1");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок2");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок3");
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок4");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла;
	
	ТабличныйДокумент.ПолеСнизу   = 0;
	ТабличныйДокумент.ПолеСверху  = 0;
	ТабличныйДокумент.ПолеСлева   = 0;
	ТабличныйДокумент.ПолеСправа  = 0;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует памятку доступа для 4-й версии обмена при выгрузке без логинов.
Функция ПечатьПамяткиДоступаВерсия4БезЛогинов(МассивОбъектов, ПараметрыПечати)
	
	// СБОР ИНФОРМАЦИИ.
	СтруктураПараметров = Новый Структура;
	ТабличныйДокумент   = Новый ТабличныйДокумент;
	
	ТаблицаЛС = ПолучитьИзВременногоХранилища(МассивОбъектов.Получить(1));
	
	НастройкаДоступа = МассивОбъектов.Получить(0);
	Организация      = НастройкаДоступа.Организация;
	
	СтруктураПараметров.Вставить("Организация", УПЖКХ_ПечатьКвитанцийСервер.ПолучитьНаименованиеОрганизации(Организация));
	
	ТекущаяДата = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату();
	
	СтруктураПараметров.Вставить("АдресСайта", НастройкаДоступа.АдресСайта);
	
	ТаблицаПД = ПолучитьТаблицуПараметровДоступаВерсия4БезЛогинов(ТаблицаЛС);
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Справочник.КВП_ЛицевыеСчета.ПФ_MXL_ПамяткаДляДоступаВЛичныйКабинетНаСайтеЖКХВерсия4БезЛогинов");
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_ЛицевыеСчета_ПамяткаДляДоступаВЛичныйКабинетНаСайтеЖКХ";
	
	ПервыйЭлемент = Истина;
	
	Для Каждого СтрокаЛС Из ТаблицаПД Цикл
		Если ПервыйЭлемент Тогда
			ПервыйЭлемент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПодготовитьКПечатиСтруктуруСПараметрамиВерсия4(СтруктураПараметров, СтрокаЛС);
		
		Область = Макет.ПолучитьОбласть("Блок1");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок2");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок3");
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок4");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла;
	
	ТабличныйДокумент.ПолеСнизу   = 0;
	ТабличныйДокумент.ПолеСверху  = 0;
	ТабличныйДокумент.ПолеСлева   = 0;
	ТабличныйДокумент.ПолеСправа  = 0;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует памятку доступа для 4-й версии обмена при выгрузке с логинами.
Функция ПечатьПамяткиДоступаВерсия4СЛогинами(МассивОбъектов, ПараметрыПечати)
	
	// СБОР ИНФОРМАЦИИ.
	СтруктураПараметров = Новый Структура;
	ТабличныйДокумент   = Новый ТабличныйДокумент;
	
	ТаблицаЛС = ПолучитьИзВременногоХранилища(МассивОбъектов.Получить(1));
	
	НастройкаДоступа = МассивОбъектов.Получить(0);
	Организация      = НастройкаДоступа.Организация;
	
	СтруктураПараметров.Вставить("Организация", УПЖКХ_ПечатьКвитанцийСервер.ПолучитьНаименованиеОрганизации(Организация));
	
	ТекущаяДата = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату();
	
	СтруктураПараметров.Вставить("АдресСайта", НастройкаДоступа.АдресСайта);
	
	ТаблицаПД = ПолучитьТаблицуПараметровДоступаВерсия4СЛогинами(ТаблицаЛС);
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Справочник.КВП_ЛицевыеСчета.ПФ_MXL_ПамяткаДляДоступаВЛичныйКабинетНаСайтеЖКХВерсия4СЛогинами");
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_ЛицевыеСчета_ПамяткаДляДоступаВЛичныйКабинетНаСайтеЖКХ";
	
	ПервыйЭлемент = Истина;
	
	Для Каждого СтрокаЛС Из ТаблицаПД Цикл
		Если ПервыйЭлемент Тогда
			ПервыйЭлемент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПодготовитьКПечатиСтруктуруСПараметрамиВерсия4(СтруктураПараметров, СтрокаЛС);
		
		Область = Макет.ПолучитьОбласть("Блок1");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок2");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок3");
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Блок4");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла;
	
	ТабличныйДокумент.ПолеСнизу   = 0;
	ТабличныйДокумент.ПолеСверху  = 0;
	ТабличныйДокумент.ПолеСлева   = 0;
	ТабличныйДокумент.ПолеСправа  = 0;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ со сведениями об отправке параметров доступа по электронной почте.
//
// Параметры
//  МассивОбъектов  - массив с объектами печати. При этом, единственным объектом печати является таблица,
//                    содержащая сведения об отправке параметров доступа.
//
// Возвращаемое значение:
//   ТабличныйДокумент
//
Функция ПечатьСведенийОбОтправкеПараметровДоступа(МассивОбъектов)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Если МассивОбъектов.Количество() > 1 Тогда
		ТаблицаСведенийОбОтправке = ПолучитьИзВременногоХранилища(МассивОбъектов[1]);
		
		Если ТипЗнч(ТаблицаСведенийОбОтправке) = Тип("ТаблицаЗначений") И НЕ ТаблицаСведенийОбОтправке.Количество() = 0 Тогда
			Макет   = ПолучитьМакет("СведенияОбОтправкеПараметровДоступа");
			Область = Макет.ПолучитьОбласть("Шапка");
			ТабличныйДокумент.Вывести(Область);
			
			Для каждого ТекСтрока из ТаблицаСведенийОбОтправке Цикл
				Область = Макет.ПолучитьОбласть("СтрокаТаблицыСведенийОбОтправке");
				ЗаполнитьЗначенияСвойств(Область.Параметры, ТекСтрока);
				ТабличныйДокумент.Вывести(Область);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.ПолеСнизу   = 0;
	ТабличныйДокумент.ПолеСверху  = 0;
	ТабличныйДокумент.ПолеСлева   = 0;
	ТабличныйДокумент.ПолеСправа  = 0;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьСведенийОбОтправкеПараметровДоступа()

// Заполняет структуру с параметрыми данными, необходимыми для вывода.
//
// Параметры:
//  СтруктураПараметров - структура с параметрами.
//  СтрокаЛС - строка таблицы с параметрами доступа.
//
Процедура ПодготовитьКПечатиСтруктуруСПараметрами(СтруктураПараметров, СтрокаЛС)
	
	СтруктураПараметров.Вставить("ЛицевойСчет", СтрокаЛС.ЛицевойСчет);
	
	АдресДома = Справочники.КВП_Здания.ПолучитьПредставлениеЗдания(СтрокаЛС.ЛицевойСчет.Адрес.Владелец);
	Адрес     = ПолучитьАдресПомещения(АдресДома, СтрокаЛС.ЛицевойСчет.Адрес);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.УПЖКХ_АдресДоставкиСчетовИКвитанцийЛицевогоСчета);
	СтрокиАдреса = СтрокаЛС.ЛицевойСчет.КонтактнаяИнформация.НайтиСтроки(Отбор);
	Если СтрокиАдреса.Количество() > 0 Тогда
		АдресДома = СтрокиАдреса[0].Представление;
		Адрес     = Адрес + " (адрес доставки: " + АдресДома + ")";
	КонецЕсли;
	СтруктураПараметров.Вставить("Адрес", Адрес);
	
	СтруктураПараметров.Вставить("ФИО",    СтрокаЛС.Владелец);
	СтруктураПараметров.Вставить("Логин",  СтрокаЛС.Логин);
	СтруктураПараметров.Вставить("Пароль", СтрокаЛС.Пароль);
	
КонецПроцедуры // ПодготовитьКПечатиСтруктуруСПараметрами()

// Заполняет структуру с параметрыми данными, необходимыми для вывода.
//
// Параметры:
//  СтруктураПараметров - структура с параметрами.
//  СтрокаЛС - строка таблицы с параметрами доступа.
//
Процедура ПодготовитьКПечатиСтруктуруСПараметрамиВерсия4(СтруктураПараметров, СтрокаЛС)
	
	СтруктураПараметров.Вставить("ЛицевойСчет", СтрокаЛС.ЛицевойСчет);
	
	АдресДома = Справочники.КВП_Здания.ПолучитьПредставлениеЗдания(СтрокаЛС.ЛицевойСчет.Адрес.Владелец);
	Адрес     = ПолучитьАдресПомещения(АдресДома, СтрокаЛС.ЛицевойСчет.Адрес);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.УПЖКХ_АдресДоставкиСчетовИКвитанцийЛицевогоСчета);
	СтрокиАдреса = СтрокаЛС.ЛицевойСчет.КонтактнаяИнформация.НайтиСтроки(Отбор);
	Если СтрокиАдреса.Количество() > 0 Тогда
		АдресДома = СтрокиАдреса[0].Представление;
		Адрес     = Адрес + " (адрес доставки: " + АдресДома + ")";
	КонецЕсли;
	СтруктураПараметров.Вставить("Адрес", Адрес);
	
	СтруктураПараметров.Вставить("ФИО",    СтрокаЛС.Владелец);
	СтруктураПараметров.Вставить("Логин",  СтрокаЛС.Логин);
	СтруктураПараметров.Вставить("Пинкод", СтрокаЛС.Пинкод);
	
КонецПроцедуры // ПодготовитьКПечатиСтруктуруСПараметрами()

// Формирует таблицу с параметрами доступа по л/с.
//
// Параметры:
//  МассивОбъектов - массив со структурами, содержащими параметры доступа по л/с.
//
// Возвращаемое значение:
//  ТаблицаЗначений.
//
Функция ПолучитьТаблицуПараметровДоступа(ТаблицаЛС)
	
	ТаблицаПД = Новый ТаблицаЗначений;
	ТаблицаПД.Колонки.Добавить("ЛицевойСчет", Новый ОписаниеТипов("СправочникСсылка.КВП_ЛицевыеСчета"));
	ТаблицаПД.Колонки.Добавить("Логин",       Новый ОписаниеТипов("Строка"));
	ТаблицаПД.Колонки.Добавить("Пароль",      Новый ОписаниеТипов("Строка"));
	
	Для Каждого Строка ИЗ ТаблицаЛС Цикл
		Если Строка.ЛицевойСчет = ПредопределенноеЗначение("Справочник.КВП_ЛицевыеСчета.ПустаяСсылка") ИЛИ ПустаяСтрока(Строка.Логин)
		 ИЛИ ПустаяСтрока(Строка.Пароль) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаПД.Добавить();
		НоваяСтрока.ЛицевойСчет = Строка.ЛицевойСчет;
		НоваяСтрока.Логин       = Строка.Логин;
		НоваяСтрока.Пароль      = Строка.Пароль;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПД.ЛицевойСчет,
	|	ТаблицаПД.Логин,
	|	ТаблицаПД.Пароль
	|ПОМЕСТИТЬ втЛицевыеСчета
	|ИЗ
	|	&ТаблицаПД КАК ТаблицаПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет,
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец КАК Владелец
	|ПОМЕСТИТЬ втВладельцы
	|ИЗ
	|	РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(
	|			&ТекущаяДата,
	|			ЛицевойСчет В
	|				(ВЫБРАТЬ
	|					втЛицевыеСчета.ЛицевойСчет
	|				ИЗ
	|					втЛицевыеСчета КАК втЛицевыеСчета)) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЛицевыеСчета.ЛицевойСчет,
	|	втЛицевыеСчета.Логин,
	|	втЛицевыеСчета.Пароль,
	|	втВладельцы.Владелец
	|ИЗ
	|	втЛицевыеСчета КАК втЛицевыеСчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВладельцы КАК втВладельцы
	|		ПО втЛицевыеСчета.ЛицевойСчет = втВладельцы.ЛицевойСчет";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТаблицаПД",   ТаблицаПД);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьТаблицуПараметровДоступа()

// Формирует таблицу с параметрами доступа по л/с.
//
// Параметры:
//  МассивОбъектов - массив со структурами, содержащими параметры доступа по л/с.
//
// Возвращаемое значение:
//  ТаблицаЗначений.
//
Функция ПолучитьТаблицуПараметровДоступаВерсия4СЛогинами(ТаблицаЛС)
	
	ТаблицаПД = Новый ТаблицаЗначений;
	ТаблицаПД.Колонки.Добавить("ЛицевойСчет", Новый ОписаниеТипов("СправочникСсылка.КВП_ЛицевыеСчета"));
	ТаблицаПД.Колонки.Добавить("Логин",       Новый ОписаниеТипов("Строка"));
	ТаблицаПД.Колонки.Добавить("Пинкод",      Новый ОписаниеТипов("Строка"));
	
	Для Каждого Строка ИЗ ТаблицаЛС Цикл
		Если Строка.ЛицевойСчет = ПредопределенноеЗначение("Справочник.КВП_ЛицевыеСчета.ПустаяСсылка") ИЛИ ПустаяСтрока(Строка.Логин)
		 ИЛИ ПустаяСтрока(Строка.Пинкод) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаПД.Добавить();
		НоваяСтрока.ЛицевойСчет = Строка.ЛицевойСчет;
		НоваяСтрока.Логин       = Строка.Логин;
		НоваяСтрока.Пинкод      = Строка.Пинкод;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПД.ЛицевойСчет,
	|	ТаблицаПД.Логин,
	|	ТаблицаПД.Пинкод
	|ПОМЕСТИТЬ втЛицевыеСчета
	|ИЗ
	|	&ТаблицаПД КАК ТаблицаПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет,
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец КАК Владелец
	|ПОМЕСТИТЬ втВладельцы
	|ИЗ
	|	РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(
	|			&ТекущаяДата,
	|			ЛицевойСчет В
	|				(ВЫБРАТЬ
	|					втЛицевыеСчета.ЛицевойСчет
	|				ИЗ
	|					втЛицевыеСчета КАК втЛицевыеСчета)) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЛицевыеСчета.ЛицевойСчет,
	|	втЛицевыеСчета.Логин,
	|	втЛицевыеСчета.Пинкод,
	|	втВладельцы.Владелец
	|ИЗ
	|	втЛицевыеСчета КАК втЛицевыеСчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВладельцы КАК втВладельцы
	|		ПО втЛицевыеСчета.ЛицевойСчет = втВладельцы.ЛицевойСчет";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТаблицаПД",   ТаблицаПД);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьТаблицуПараметровДоступа()

// Формирует таблицу с параметрами доступа по л/с.
//
// Параметры:
//  МассивОбъектов - массив со структурами, содержащими параметры доступа по л/с.
//
// Возвращаемое значение:
//  ТаблицаЗначений.
//
Функция ПолучитьТаблицуПараметровДоступаВерсия4БезЛогинов(ТаблицаЛС)
	
	ТаблицаПД = Новый ТаблицаЗначений;
	ТаблицаПД.Колонки.Добавить("ЛицевойСчет", Новый ОписаниеТипов("СправочникСсылка.КВП_ЛицевыеСчета"));
	ТаблицаПД.Колонки.Добавить("Пинкод",      Новый ОписаниеТипов("Строка"));
	
	Для Каждого Строка ИЗ ТаблицаЛС Цикл
		Если Строка.ЛицевойСчет = ПредопределенноеЗначение("Справочник.КВП_ЛицевыеСчета.ПустаяСсылка")
		 ИЛИ ПустаяСтрока(Строка.Пинкод) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаПД.Добавить();
		НоваяСтрока.ЛицевойСчет = Строка.ЛицевойСчет;
		НоваяСтрока.Пинкод      = Строка.Пинкод;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПД.ЛицевойСчет,
	|	ТаблицаПД.Пинкод
	|ПОМЕСТИТЬ втЛицевыеСчета
	|ИЗ
	|	&ТаблицаПД КАК ТаблицаПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет,
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец КАК Владелец
	|ПОМЕСТИТЬ втВладельцы
	|ИЗ
	|	РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(
	|			&ТекущаяДата,
	|			ЛицевойСчет В
	|				(ВЫБРАТЬ
	|					втЛицевыеСчета.ЛицевойСчет
	|				ИЗ
	|					втЛицевыеСчета КАК втЛицевыеСчета)) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЛицевыеСчета.ЛицевойСчет,
	|	"""" КАК Логин,
	|	втЛицевыеСчета.Пинкод,
	|	втВладельцы.Владелец
	|ИЗ
	|	втЛицевыеСчета КАК втЛицевыеСчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВладельцы КАК втВладельцы
	|		ПО втЛицевыеСчета.ЛицевойСчет = втВладельцы.ЛицевойСчет";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТаблицаПД",   ТаблицаПД);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьТаблицуПараметровДоступа()

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, 
	КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПамяткаДоступа") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "ПамяткаДоступа",
																   "ПамяткаДоступа",
																   ПечатьПамяткиДоступа(МассивОбъектов, ПараметрыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "СведенияОбОтправкеПараметровДоступа") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "СведенияОбОтправкеПараметровДоступа",
																   "СведенияОбОтправкеПараметровДоступа",
																   ПечатьСведенийОбОтправкеПараметровДоступа(МассивОбъектов));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПамяткаДоступаВерсия4БезЛогинов") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "ПамяткаДоступаВерсия4БезЛогинов",
																   "ПамяткаДоступаВерсия4БезЛогинов",
																   ПечатьПамяткиДоступаВерсия4БезЛогинов(МассивОбъектов, ПараметрыПечати));
	
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПамяткаДоступаВерсия4СЛогинами") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "ПамяткаДоступаВерсия4СЛогинами",
																   "ПамяткаДоступаВерсия4СЛогинами",
																   ПечатьПамяткиДоступаВерсия4СЛогинами(МассивОбъектов, ПараметрыПечати));
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли