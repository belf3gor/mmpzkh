
#Область ПроцедурыИФункцииОбщегоНазначения

#Область ОбщегоНазначения

&НаСервереБезКонтекста
Функция ПеречитатьДатуНачалаУчета(Организация)
	
	Возврат Обработки.ВводНачальныхОстатков.ПеречитатьДатуНачалаУчета(Организация);
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Отказ = Ложь;
		ЗаписатьНаСервере(, Отказ);
		Если НЕ Отказ Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаписьДанных

&НаСервере
Процедура ЗаписатьНаСервере(ОбновитьОстатки = Истина, Отказ = Ложь)
	
	Отказ = НЕ ПроверитьЗаполнение();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	МенеджерОбработки.СинхронизироватьСостояниеДокументов(Объект.Зарплата, Объект.СуществующиеДокументы);
	
	СтруктураПараметровДокументов = Новый Структура("Организация, Дата, РазделУчета", 
		Объект.Организация, Объект.ДатаВводаОстатков, Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСПерсоналомПоОплатеТрудаИДепонентам);
		
	Отбор = Новый Структура("НеЗаполненныеРеквизиты, ТабличнаяЧасть", Истина, "Зарплата");
	СчетаУчетаВДокументах.ЗаполнитьТаблицу(Обработки.ВводНачальныхОстатков, СтруктураПараметровДокументов, Объект.Зарплата, Отбор);
	
	ТаблицаДанных = ПодготовитьТабличнуюЧастьКЗаписи(Объект.Зарплата, СтруктураПараметровДокументов);
	
	МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "РасчетыПоЗаработнойПлате");
	МенеджерОбработки.ОбновитьФинансовыйРезультат(СтруктураПараметровДокументов, Объект.ФинансовыйРезультат, Объект.СуществующиеДокументы);
	
	Если ОбновитьОстатки Тогда
		
		МенеджерОбработки.ОбновитьОстатки(Объект.Зарплата, "Зарплата", 
		Новый Структура("Организация,ДатаВводаОстатков",
		Объект.Организация,Объект.ДатаВводаОстатков),
		Объект.СуществующиеДокументы);
		
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧастьКЗаписи(Таблица, СтруктураПараметровДокументов);
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	ТаблицаДанных.Колонки.Добавить("Сумма");
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		
		НоваяСтрока = ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		Если СтрокаТаблицы.ЗадолженностьЗаРаботником <> 0 Тогда
			НоваяСтрока.Сумма = - СтрокаТаблицы.ЗадолженностьЗаРаботником;
		Иначе
			НоваяСтрока.Сумма = СтрокаТаблицы.ЗадолженностьЗаОрганизацией;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.ПериодРегистрации) Тогда
			НоваяСтрока.ПериодРегистрации = НачалоМесяца(СтруктураПараметровДокументов.Дата);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиЭлементовШапкиФормы

&НаКлиенте
Процедура Записать(Команда)
	
	Если Модифицированность Тогда
		НомерСтроки = 0;
		Если Элементы.Зарплата.ТекущиеДанные <> Неопределено Тогда
			НомерСтроки = Элементы.Зарплата.ТекущиеДанные.НомерСтроки;
		КонецЕсли;
		Отказ = Ложь;
		ЗаписатьНаСервере(Истина, Отказ);
		Если НЕ Отказ Тогда
			Если НомерСтроки <> 0 Тогда
				Элементы.Зарплата.ТекущаяСтрока = Объект.Зарплата[НомерСтроки-1].ПолучитьИдентификатор();
			КонецЕсли;
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Отказ = Ложь;
	Если Модифицированность Тогда
		ЗаписатьНаСервере(Ложь, Отказ);
		Если НЕ Отказ Тогда
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
	КонецЕсли;
	Если НЕ Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТабличныхЧастей

&НаСервереБезКонтекста
Функция ПолучитьФизическоеЛицо(Сотрудник)
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат Сотрудник.ФизическоеЛицо;
	Иначе
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСотрудника(Сотрудник, ФизическоеЛицо)
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Если Сотрудник.ФизическоеЛицо <> ФизическоеЛицо Тогда
			Возврат Справочники.Сотрудники.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Возврат Справочники.Сотрудники.ПустаяСсылка();
		
КонецФункции

&НаКлиенте
Процедура ЗарплатаСотрудникПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.Зарплата.ТекущиеДанные;
	СтрокаТаблицы.РаботникОрганизации = ПолучитьФизическоеЛицо(СтрокаТаблицы.Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаРаботникОрганизацииПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.Зарплата.ТекущиеДанные;
	СтрокаТаблицы.Сотрудник = ПолучитьСотрудника(СтрокаТаблицы.Сотрудник, СтрокаТаблицы.РаботникОрганизации);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаЗадолженностьЗаОрганизациейПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.Зарплата.ТекущиеДанные;
	Если СтрокаТаблицы.ЗадолженностьЗаОрганизацией <> 0 Тогда
		СтрокаТаблицы.ЗадолженностьЗаРаботником = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаЗадолженностьЗаРаботникомПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.Зарплата.ТекущиеДанные;
	Если СтрокаТаблицы.ЗадолженностьЗаРаботником <> 0 Тогда
		СтрокаТаблицы.ЗадолженностьЗаОрганизацией = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Организация                    = Параметры.Организация;
	Объект.ДатаВводаОстатков              = Параметры.ДатаВводаОстатков;
	Объект.ВалютаРегламентированногоУчета = Параметры.ВалютаРегламентированногоУчета;
	
	ТекстЗаголовок = НСтр("ru = 'Начальные остатки: Зарплата (%1)'");
	ТекстЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовок, Объект.Организация);
	ЭтаФорма.Заголовок = ТекстЗаголовок;
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	МенеджерОбработки.СобратьСтруктуруТаблиц(Объект.Зарплата, "Зарплата", СтруктураТаблиц);
	МенеджерОбработки.ОбновитьОстатки(Объект.Зарплата, "Зарплата", 
		Новый Структура("Организация,ДатаВводаОстатков",
					Объект.Организация,Объект.ДатаВводаОстатков),
		Объект.СуществующиеДокументы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененениеДатыВводаОстатков" И Источник = "ВводНачальныхОстатков" И Параметр = Объект.Организация Тогда
		Объект.ДатаВводаОстатков = ПеречитатьДатуНачалаУчета(Объект.Организация);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Оповещение = Новый ОписаниеОповещения(
		"ПередЗакрытиемЗавершение",
		ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

#КонецОбласти
