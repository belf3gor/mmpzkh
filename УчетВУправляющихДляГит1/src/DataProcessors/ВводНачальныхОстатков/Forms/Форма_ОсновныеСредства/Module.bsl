
#Область ПроцедурыИФункцииОбщегоНазначения

#Область ОбщегоНазначения

&НаСервереБезКонтекста
Функция ПеречитатьДатуНачалаУчета(Организация)
	
	Возврат Обработки.ВводНачальныхОстатков.ПеречитатьДатуНачалаУчета(Организация);
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Отказ = Ложь;
		ЗаписатьНаСервере(, Отказ);
		Если НЕ Отказ Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПоляСтрокиТабличнойЧасти(СтрокаТаблицы)
	
	КолонкиТаблицы = СтруктураТаблиц.Получить(0).Значение;
	
	ПараметрыСтроки  = Новый Структура("Организация, ДатаВводаОстатков, ВалютаРегламентированногоУчета", 
		Объект.Организация, Объект.ДатаВводаОстатков, Объект.ВалютаРегламентированногоУчета);
	
	Для Каждого Колонка ИЗ КолонкиТаблицы Цикл
		ИмяКолонки = Колонка.Значение;
		ПараметрыСтроки.Вставить(ИмяКолонки, СтрокаТаблицы[ИмяКолонки]);
	КонецЦикла;
	
	Возврат ПараметрыСтроки;
	
КонецФункции

#КонецОбласти

#Область ЗаписьДанных

&НаСервере
Процедура ЗаписатьНаСервере(ОбновитьОстатки = Истина, Отказ = Ложь)
	
	Отказ = НЕ ПроверитьЗаполнение();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	МенеджерОбработки.СинхронизироватьСостояниеДокументов(Объект.ОсновныеСредства, Объект.СуществующиеДокументы);
	
	СтруктураПараметровДокументов = Новый Структура("Организация, Дата, РазделУчета", 
		Объект.Организация, Объект.ДатаВводаОстатков, Перечисления.РазделыУчетаДляВводаОстатков.ОсновныеСредства);
	СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.ОсновныеСредства);
	
	Отбор = Новый Структура("НеЗаполненныеРеквизиты, ТабличнаяЧасть", Истина, "ОсновныеСредства");
	СчетаУчетаВДокументах.ЗаполнитьТаблицу(Обработки.ВводНачальныхОстатков, СтруктураПараметровДокументов, Объект.ОсновныеСредства, Отбор);
	
	ТаблицаДанных = ПодготовитьТабличнуюЧастьКЗаписи(Объект.ОсновныеСредства);
	
	МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "ОС");
	МенеджерОбработки.ОбновитьФинансовыйРезультат(СтруктураПараметровДокументов, Объект.ФинансовыйРезультат, Объект.СуществующиеДокументы);
	
	Если ОбновитьОстатки Тогда
		
		МенеджерОбработки.ОбновитьОстатки(Объект.ОсновныеСредства, "ОсновныеСредства", 
			Новый Структура("Организация,ДатаВводаОстатков",
				Объект.Организация,Объект.ДатаВводаОстатков),
			Объект.СуществующиеДокументы);
		
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧастьКЗаписи(Таблица);
	
	ТаблицаДанных = Таблица.Выгрузить();
	Возврат ТаблицаДанных;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиЭлементовШапкиФормы

&НаКлиенте
Процедура Записать(Команда)
	
	Если Модифицированность Тогда
		НомерСтроки = 0;
		Если Элементы.ОсновныеСредства.ТекущиеДанные <> Неопределено Тогда
			НомерСтроки = Элементы.ОсновныеСредства.ТекущиеДанные.НомерСтроки;
		КонецЕсли;
		Отказ = Ложь;
		ЗаписатьНаСервере(Истина, Отказ);
		Если НЕ Отказ Тогда
			Если НомерСтроки <> 0 Тогда
				Элементы.ОсновныеСредства.ТекущаяСтрока = Объект.ОсновныеСредства[НомерСтроки-1].ПолучитьИдентификатор();
			КонецЕсли;
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Отказ = Ложь;
	Если Модифицированность Тогда
		ЗаписатьНаСервере(Ложь, Отказ);
		Если НЕ Отказ Тогда
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
	КонецЕсли;
	Если НЕ Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТабличныхЧастей

&НаСервереБезКонтекста
Процедура ЗаполнитьСведенияОбОсновномСредстве(ПараметрыСтроки)
	
	ПараметрыСтроки.ИнвентарныйНомерРегл = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСтроки.ОсновноеСредство,"Код");
	ПараметрыСтроки.СпособПоступленияРегл = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
	ПараметрыСтроки.ПорядокПогашенияСтоимостиБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации;
	ПараметрыСтроки.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.Линейный;
	ПараметрыСтроки.ПорядокВключенияСтоимостиВСоставРасходовНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации;
	ПараметрыСтроки.НачислятьАмортизациюБУ = Истина;
	ПараметрыСтроки.НачислятьАмортизациюНУ = Истина;
	ПараметрыСтроки.НазваниеДокументаПринятияКУчетуРегл = НСтр("ru='Акт ввода в эксплуатацию'");
	
	ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию;
	ПринятиеКУчетуСВводомВЭксплуатацию = Справочники.СобытияОС.НайтиПоРеквизиту("ВидСобытияОС", ВидСобытияОС);
	Если ПринятиеКУчетуСВводомВЭксплуатацию = Справочники.СобытияОС.ПустаяСсылка() Тогда
		ПринятиеКУчетуНовыйЭлемент              = Справочники.СобытияОС.СоздатьЭлемент();
		ПринятиеКУчетуНовыйЭлемент.ВидСобытияОС = ВидСобытияОС;
		ПринятиеКУчетуНовыйЭлемент.Наименование = Строка(ВидСобытияОС);
		ПринятиеКУчетуНовыйЭлемент.Записать();
		ПринятиеКУчетуСВводомВЭксплуатацию = ПринятиеКУчетуНовыйЭлемент.Ссылка;
	КонецЕсли;
	ПараметрыСтроки.СостояниеПринятияКУчетуРегл = ПринятиеКУчетуСВводомВЭксплуатацию;
	
	Обработки.ВводНачальныхОстатков.УстановитьСпособОтраженияРасходовПоАмортизации(ПараметрыСтроки, "СпособОтраженияРасходовПоАмортизации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваОсновноеСредствоПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.ОсновныеСредства.ТекущиеДанные;
	ПараметрыСтроки = ПоляСтрокиТабличнойЧасти(СтрокаТаблицы);
	ЗаполнитьСведенияОбОсновномСредстве(ПараметрыСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПараметрыСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваТекущаяСтоимостьБУПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.ОсновныеСредства.ТекущиеДанные;
	СтрокаТаблицы.ТекущаяСтоимостьНУ        = СтрокаТаблицы.ТекущаяСтоимостьБУ;
	СтрокаТаблицы.ПервоначальнаяСтоимостьБУ = СтрокаТаблицы.ТекущаяСтоимостьБУ;
	СтрокаТаблицы.ПервоначальнаяСтоимостьНУ = СтрокаТаблицы.ТекущаяСтоимостьБУ;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваНакопленнаяАмортизацияБУПриИзменении(Элемент)
	
	СтрокаТаблицы   = Элементы.ОсновныеСредства.ТекущиеДанные;
	СтрокаТаблицы.НакопленнаяАмортизацияНУ = СтрокаТаблицы.НакопленнаяАмортизацияБУ;

КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваСрокПолезногоИспользованияБУПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.ОсновныеСредства.ТекущиеДанные;
	СтрокаТаблицы.СрокПолезногоИспользованияНУ = СтрокаТаблицы.СрокПолезногоИспользованияБУ;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Организация                    = Параметры.Организация;
	Объект.ДатаВводаОстатков              = Параметры.ДатаВводаОстатков;
	Объект.ВалютаРегламентированногоУчета = Параметры.ВалютаРегламентированногоУчета;
	
	ТекстЗаголовок = НСтр("ru = 'Начальные остатки: Основные средства (%1)'");
	ТекстЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовок, Объект.Организация);
	ЭтаФорма.Заголовок = ТекстЗаголовок;
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	МенеджерОбработки.СобратьСтруктуруТаблиц(Объект.ОсновныеСредства, "ОсновныеСредства", СтруктураТаблиц);
	МенеджерОбработки.ОбновитьОстатки(Объект.ОсновныеСредства, "ОсновныеСредства", 
		Новый Структура("Организация,ДатаВводаОстатков",
					Объект.Организация,Объект.ДатаВводаОстатков),
		Объект.СуществующиеДокументы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененениеДатыВводаОстатков" И Источник = "ВводНачальныхОстатков" И Параметр = Объект.Организация Тогда
		Объект.ДатаВводаОстатков = ПеречитатьДатуНачалаУчета(Объект.Организация);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Оповещение = Новый ОписаниеОповещения(
		"ПередЗакрытиемЗавершение",
		ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

#КонецОбласти
