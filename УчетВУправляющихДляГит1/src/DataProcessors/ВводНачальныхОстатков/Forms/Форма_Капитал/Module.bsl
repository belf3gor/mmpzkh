&НаКлиенте
Перем ТипУчредителяНовойСтроки;

#Область ПроцедурыИФункцииОбщегоНазначения

#Область ОбщегоНазначения

&НаСервереБезКонтекста
Функция ПеречитатьДатуНачалаУчета(Организация)
	
	Возврат Обработки.ВводНачальныхОстатков.ПеречитатьДатуНачалаУчета(Организация);
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Отказ = Ложь;
		ЗаписатьНаСервере(, Отказ);
		Если НЕ Отказ Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПоляСтрокиТабличнойЧасти(СтрокаТаблицы)
	
	КолонкиТаблицы = СтруктураТаблиц.Получить(0).Значение;
	
	ПараметрыСтроки  = Новый Структура("Организация, ДатаВводаОстатков, ВалютаРегламентированногоУчета", 
		Объект.Организация, Объект.ДатаВводаОстатков, Объект.ВалютаРегламентированногоУчета);
	
	Для Каждого Колонка ИЗ КолонкиТаблицы Цикл
		ИмяКолонки = Колонка.Значение;
		ПараметрыСтроки.Вставить(ИмяКолонки, СтрокаТаблицы[ИмяКолонки]);
	КонецЦикла;
	
	Возврат ПараметрыСтроки;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеСчетовУчета

&НаКлиенте
Процедура ЗаполнитьСчетаУчета(ПараметрыСтроки)
	
	Контекст = Новый Структура("Организация, Дата", Объект.Организация, Объект.ДатаВводаОстатков);
	
	Кзаполнению = Новый Соответствие;
	Кзаполнению.Вставить("Капитал.СчетУчета", "Капитал.СчетУчета");
	Кзаполнению.Вставить("Капитал.СчетУчетаУчредители", "Капитал.СчетУчетаУчредители");
	
	ЗаполнитьСчетаУчетаНаСервере(Кзаполнению, 
									Контекст,
									"Капитал",
									ПараметрыСтроки);
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСчетаУчетаНаСервере(КЗаполнению, Контекст, ИмяТабличнойЧасти, ДанныеСтроки)
	
	ЗаполненныеСчета = СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(Обработки.ВводНачальныхОстатков,
		Кзаполнению, 
		Контекст,
		ИмяТабличнойЧасти,
		ДанныеСтроки,
		Истина);
		
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ЗаполненныеСчета);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаписьДанных

&НаСервере
Процедура ЗаписатьНаСервере(ОбновитьОстатки = Истина, Отказ = Ложь)
	
	Отказ = НЕ ПроверитьЗаполнение();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	МенеджерОбработки.СинхронизироватьСостояниеДокументов(Объект.Капитал_Вспомогательная, Объект.СуществующиеДокументы);
	
	СтруктураПараметровДокументов = Новый Структура("Организация, Дата, РазделУчета", 
		Объект.Организация, Объект.ДатаВводаОстатков);

	СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.Капитал);
	ТаблицаДанных = ПодготовитьТабличнуюЧасть_Капитал(Объект.Капитал_Вспомогательная);
	МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "БухСправка");
	СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями);
	ТаблицаДанных = ПодготовитьТабличнуюЧасть_Учредители(Объект.Капитал_Вспомогательная);
	МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "БухСправка");
	
	МенеджерОбработки.ОбновитьФинансовыйРезультат(СтруктураПараметровДокументов, Объект.ФинансовыйРезультат, Объект.СуществующиеДокументы);
	
	Если ОбновитьОстатки Тогда
		
		МенеджерОбработки.ОбновитьОстатки(Объект.Капитал, "Капитал", 
			Новый Структура("Организация,ДатаВводаОстатков",
				Объект.Организация,Объект.ДатаВводаОстатков),
			Объект.СуществующиеДокументы,
			Объект.Капитал_Вспомогательная);
		
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Капитал(Таблица);
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		Если СтрокаТаблицы.СуммаКт <> 0 Тогда
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДанных.Колонки.Учредитель.Имя  = "Субконто1";
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Учредители(Таблица);
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		Если СтрокаТаблицы.Сумма <> 0 Тогда
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДанных.Колонки.Учредитель.Имя  = "Субконто1";
	
	Возврат ТаблицаДанных;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиЭлементовШапкиФормы

&НаКлиенте
Процедура Записать(Команда)
	
	Если Модифицированность Тогда
		НомерСтроки = 0;
		Если Элементы.Капитал.ТекущиеДанные <> Неопределено Тогда
			НомерСтроки = Элементы.Капитал.ТекущиеДанные.НомерСтроки;
		КонецЕсли;
		Отказ = Ложь;
		ЗаписатьНаСервере(Истина, Отказ);
		Если НЕ Отказ Тогда
			Если НомерСтроки <> 0 Тогда
				Элементы.Капитал.ТекущаяСтрока = Объект.Капитал[НомерСтроки-1].ПолучитьИдентификатор();
			КонецЕсли;
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Отказ = Ложь;
	Если Модифицированность Тогда
		ЗаписатьНаСервере(Ложь, Отказ);
		Если НЕ Отказ Тогда
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
	КонецЕсли;
	Если НЕ Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТабличныхЧастей

&НаСервере
Процедура СинхронизироватьТаблицы_Капитал()
	
	ТаблицаКапитал = Объект.Капитал.Выгрузить();
	ТаблицаКапитал.Свернуть("Учредитель, СчетУчета, СчетУчетаУчредители", "СуммаВклада, СуммаОплачено");
	ТаблицаКапитал.Колонки.Добавить("СуммаДолга");
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаКапитал Цикл
		СтрокаТаблицы.СуммаДолга      = СтрокаТаблицы.СуммаВклада - СтрокаТаблицы.СуммаОплачено;
	КонецЦикла;
	
	ТаблицаКапитал_Вспомогательная = Объект.Капитал_Вспомогательная.Выгрузить();
	ТаблицаКапитал_Вспомогательная.Свернуть("Ссылка, Учредитель, СчетУчета", "Сумма, СуммаКт");
	
	РаспределитьСуммыПоТаблице(ТаблицаКапитал, ТаблицаКапитал_Вспомогательная, "СуммаВклада", "СуммаКт");
	РаспределитьСуммыПоТаблице(ТаблицаКапитал, ТаблицаКапитал_Вспомогательная, "СуммаДолга",  "Сумма", "СчетУчетаУчредители");
	
	Объект.Капитал_Вспомогательная.Очистить();
	Для Каждого СтрокаТаблицы ИЗ ТаблицаКапитал_Вспомогательная Цикл
		Если ТаблицаКапитал.Найти(СтрокаТаблицы.Учредитель, "Учредитель") <> Неопределено Тогда
			НоваяСтрока = Объект.Капитал_Вспомогательная.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РаспределитьСуммыПоТаблице(ТаблицаИсточник, ТаблицаБаза, ИмяИсходнойКолонки, ИмяРезультирующейКолонки, ИмяКолонкиСчет = "СчетУчета")
	
	Отбор = Новый Структура("Учредитель, СчетУчета");
	Для Каждого СтрокаТаблицы ИЗ ТаблицаИсточник Цикл
		Отбор.Вставить("Учредитель", СтрокаТаблицы.Учредитель);
		Отбор.Вставить("СчетУчета",  СтрокаТаблицы[ИмяКолонкиСчет]);
		МассивСтрок = ТаблицаБаза.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрока = ТаблицаБаза.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока[ИмяРезультирующейКолонки] = СтрокаТаблицы[ИмяИсходнойКолонки];
			НоваяСтрока.СчетУчета = СтрокаТаблицы[ИмяКолонкиСчет];
		Иначе
			МассивСтарыхСумм = Новый Массив;
			Для Каждого СтрокаМассива ИЗ МассивСтрок Цикл
				МассивСтарыхСумм.Добавить(СтрокаМассива[ИмяРезультирующейКолонки]);
			КонецЦикла;
			МассивНовыхСумм = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы[ИмяИсходнойКолонки], МассивСтарыхСумм);
			Если МассивНовыхСумм <> Неопределено Тогда
				Для Индекс = 0 По МассивНовыхСумм.Количество()-1 Цикл
					МассивСтрок.Получить(Индекс)[ИмяРезультирующейКолонки] = МассивНовыхСумм.Получить(Индекс);
				КонецЦикла;
			Иначе
				Для Каждого СтрокаМассива ИЗ МассивСтрок Цикл
					ТаблицаБаза.Удалить(СтрокаМассива);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КапиталПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СтрокаТаблицы  = Элементы.Капитал.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаТаблицы.СуммаВклада < СтрокаТаблицы.СуммаОплачено Тогда
		ТекстСообщения = НСтр("ru='Сумма вклада в уставный капитал не может быть меньше фактически оплаченной части'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		СтрокаТаблицы.СуммаОплачено = СтрокаТаблицы.СуммаВклада;
	КонецЕсли;
	
	Если НЕ ОтменаРедактирования Тогда
		ПараметрыСтроки = ПоляСтрокиТабличнойЧасти(СтрокаТаблицы);
		ЗаполнитьСчетаУчета(ПараметрыСтроки);
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПараметрыСтроки);
		СинхронизироватьТаблицы_Капитал();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КапиталПослеУдаления(Элемент)
	
	СтрокаТаблицы   = Элементы.Капитал.ТекущиеДанные;
	СинхронизироватьТаблицы_Капитал();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчредители

&НаКлиенте
Процедура КапиталПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование
		ИЛИ ТипУчредителяНовойСтроки <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Оповещение = Новый ОписаниеОповещения("ДобавитьУчредителяЗавершение", ЭтотОбъект);
	Элементы.Капитал.ТекущийЭлемент = Элементы.КапиталУчредитель;
	ПоказатьВыборИзМеню(Оповещение, СписокВыбора, Элементы.Капитал);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьУчредителяФизическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	ТекущийЭлемент = Элементы.Капитал;
	Элементы.Капитал.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Капитал.ТекущиеДанные;
	УстановитьОграничениеТипаУчредителя(ТекущиеДанные, ТипУчредителяНовойСтроки);
	ТипУчредителяНовойСтроки = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЮридическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	ТекущийЭлемент = Элементы.Капитал;
	Элементы.Капитал.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Капитал.ТекущиеДанные;
	УстановитьОграничениеТипаУчредителя(ТекущиеДанные, ТипУчредителяНовойСтроки);
	ТипУчредителяНовойСтроки = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Организация                    = Параметры.Организация;
	Объект.ДатаВводаОстатков              = Параметры.ДатаВводаОстатков;
	Объект.ВалютаРегламентированногоУчета = Параметры.ВалютаРегламентированногоУчета;
	
	ТекстЗаголовок = НСтр("ru = 'Начальные остатки: Уставный капитал (%1)'");
	ТекстЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовок, Объект.Организация);
	ЭтаФорма.Заголовок = ТекстЗаголовок;
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	МенеджерОбработки.СобратьСтруктуруТаблиц(Объект.Капитал, "Капитал", СтруктураТаблиц);
	МенеджерОбработки.ОбновитьОстатки(Объект.Капитал, "Капитал", 
		Новый Структура("Организация,ДатаВводаОстатков",
					Объект.Организация,Объект.ДатаВводаОстатков),
		Объект.СуществующиеДокументы,
		Объект.Капитал_Вспомогательная);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененениеДатыВводаОстатков" И Источник = "ВводНачальныхОстатков" И Параметр = Объект.Организация Тогда
		Объект.ДатаВводаОстатков = ПеречитатьДатуНачалаУчета(Объект.Организация);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Оповещение = Новый ОписаниеОповещения(
		"ПередЗакрытиемЗавершение",
		ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОграничениеТипаУчредителя(ТекущиеДанные, ТипУчредителя)
	
	МассивПараметрыВыбора = Новый Массив;
	Если ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Элементы.КапиталУчредитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ЮридическоеФизическоеЛицо", 
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		МассивПараметрыВыбора.Добавить(НовыйПараметр);
	Иначе
		Элементы.КапиталУчредитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	КонецЕсли;
	Элементы.КапиталУчредитель.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЗавершение(ВыбранныйЭлемент, ДопПараметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТипУчредителяНовойСтроки = ВыбранныйЭлемент.Значение;
	Элементы.Капитал.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Капитал.ТекущиеДанные;
	УстановитьОграничениеТипаУчредителя(ТекущиеДанные, ТипУчредителяНовойСтроки);
	ТипУчредителяНовойСтроки = Неопределено;
	
КонецПроцедуры

#КонецОбласти