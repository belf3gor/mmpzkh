#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбслуживаниеУпрощенногоИтерфейса

Функция РазрешенныеСчета(Раздел = Неопределено) Экспорт

МассивСчетов = Новый Массив;

Если Раздел = "Касса"  ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);                       // 50.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);                    // 50.02
КонецЕсли;

Если Раздел = "Банк" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);                         // 51
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);                          // 52
КонецЕсли;

Если Раздел = "Запасы" ИЛИ Раздел = Неопределено Тогда

	//Капвложения
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеКомпонентовОсновныхСредств);  // 08.04.1
	
	//Материалы
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.СырьеИМатериалы);                         // 10.01
	
	//Товары
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);                         // 41.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя);                 // 41.03
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеИзделия);                         // 41.04
	
	//Продукция
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);                        // 43
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);                           // 21
	
КонецЕсли;

Если Раздел = "ОсновныеСредства" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации);                         // 01.01
КонецЕсли;

Если Раздел = "НематериальныеАктивы" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации);        // 04.01
КонецЕсли;

Если Раздел = "Поставщики" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);                   // 60.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);               // 60.02
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиВал);                // 60.21
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал);            // 60.22
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУЕ);                 // 60.31
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымУЕ);             // 60.32
КонецЕсли;

Если Раздел = "Покупатели" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);                   // 62.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);             // 62.02
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал);                // 62.21
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал);          // 62.22
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ);                 // 62.31
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);           // 62.32
КонецЕсли;

Если Раздел = "Комиссионеры" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные);              // 45.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная);            // 45.02
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеТоварыОтгруженные);                // 45.03
КонецЕсли;

Если Раздел = "Зарплата" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);         // 70
КонецЕсли;

Если Раздел = "Подотчет" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);             // 71.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал);          // 71.21
КонецЕсли;

Если Раздел = "НалогиИВзносы" ИЛИ Раздел = Неопределено Тогда
	// Определяется справочником "Налоги и взносы" (ВидыНалоговИПлатежейВБюджет)
	МассивЗапрещенныхСчетов = Новый Массив;
	МассивЗапрещенныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСпоЭкспортуКВозмещению);    // 68.22
	МассивЗапрещенныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента);         // 68.32
	МассивЗапрещенныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСТаможенныйСоюзКУплате);    // 68.42
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗапрещенныхСчетов", МассивЗапрещенныхСчетов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНалоговИПлатежейВБюджет.СчетУчета
	|ИЗ
	|	Справочник.ВидыНалоговИПлатежейВБюджет КАК ВидыНалоговИПлатежейВБюджет
	|ГДЕ
	|	ВидыНалоговИПлатежейВБюджет.СчетУчета <> ЗНАЧЕНИЕ(Плансчетов.Хозрасчетный.ПустаяСсылка)
	|	И НЕ ВидыНалоговИПлатежейВБюджет.СчетУчета В (&МассивЗапрещенныхСчетов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетов.Добавить(Выборка.СчетУчета);
	КонецЦикла;
	
КонецЕсли;

Если Раздел = "КредитыТело" ИЛИ Раздел = "КредитыИЗаймыТело" ИЛИ Раздел = Неопределено Тогда
	
	// Тело кредита
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КраткосрочныеКредиты);                   // 66.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты);                    // 67.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КраткосрочныеКредитыВал);                // 66.21
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредитыВал);                 // 67.21
	

КонецЕсли;

Если Раздел = "ЗаймыТело" ИЛИ Раздел = "КредитыИЗаймыТело" ИЛИ Раздел = Неопределено Тогда
	
	// Тело займа
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймы);                     // 66.03
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймы);                      // 67.03
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймыВал);                  // 66.23
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймыВал);                   // 67.23
	
КонецЕсли;

Если Раздел = "КредитыПроценты" ИЛИ Раздел = "КредитыИЗаймыПроценты" ИЛИ Раздел = Неопределено Тогда
	
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам);        // 66.02
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам);         // 67.02
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал);     // 66.22
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал);      // 67.22
	
КонецЕсли;

Если Раздел = "ЗаймыПроценты" ИЛИ Раздел = "КредитыИЗаймыПроценты" ИЛИ Раздел = Неопределено Тогда
	
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам);          // 66.04
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам);           // 67.04
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал);       // 66.24
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал);        // 67.24
	
КонецЕсли;

Если Раздел = "Капитал" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапитал_ПрочийКапитал);          // 80.09
КонецЕсли;

Если Раздел = "Учредители" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоВкладамВУставныйКапитал);       // 75.01
КонецЕсли;

Если Раздел = "ФинансовыйРезультат" ИЛИ Раздел = Неопределено Тогда
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению);         // 84.01
КонецЕсли;

Возврат МассивСчетов;

КонецФункции

Функция ЕстьДокументыСЗапрещеннымиСчетами(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РазрешенныеСчета", РазрешенныеСчета());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.ОС КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчетаБУ В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.НМА КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчетаБУ В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.РасчетыСКонтрагентами КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.РасчетыПоНалогамИСборам КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.РасчетыПоЗаработнойПлате КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.РасчетыСПодотчетнымиЛицами КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.МПЗОтгруженные КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.РасходыБудущихПериодов КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.НоменклатураНаСкладе КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.СпецодеждаИСпецоснасткаВЭксплуатации КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.МатериалыПереданныеВПереработку КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.ТоварыВРозничнойТорговлеАТТ КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.ТоварыВРозничнойТорговлеНТТ КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатков.Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.ДанныеПоНДС КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Ссылка.Проведен
	|	И ВводНачальныхОстатков.Ссылка.Организация = &Организация
	|	И НЕ ВводНачальныхОстатков.СчетУчета В (&РазрешенныеСчета)";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция МожноИспользоватьПростуюФормуПомощника(Организация) Экспорт
	
	МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
	МенеджерЗаписиРегистра.Организация = Организация;
	МенеджерЗаписиРегистра.Прочитать();
	Если МенеджерЗаписиРегистра.Выбран() Тогда
		ДатаПроверки = МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков;
	Иначе
		ДатаПроверки = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;
	ДатаПроверки = ДатаПроверки + 86400;
	
	Результат = Истина;
	
	// Простая форма доступна в случае если отключена видимость счетов
	Если СчетаУчетаВДокументахВызовСервераПовтИсп.ПользовательУправляетСчетамиУчета() Тогда
		Результат = Ложь;
	КонецЕсли;
	
	// Простая форма доступна в случае если нет документов с необслуживаемыми по умолчанию счетами
	Если ЕстьДокументыСЗапрещеннымиСчетами(Организация) Тогда
		Результат = Ложь;
	КонецЕсли;
	
	// Простая форма доступна только для определенных настроек учетной политики организации
	//      не должно применяться УСН доходы-расходы
	//      организация не должна быть плательщиком НДС, кроме случаев освобождения от уплаты НДС
	//      организация не должна быть ИП на общем режиме налогообложения
	//      организация не должна применять партионный учет по ФИФО
	//      организация не должна применять ПБУ 18
	Если УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, ДатаПроверки)
		ИЛИ (УчетнаяПолитика.ПлательщикНДС(Организация, ДатаПроверки) И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Организация, ДатаПроверки))
		ИЛИ УчетнаяПолитика.ПлательщикНДФЛ(Организация, ДатаПроверки) 
		ИЛИ УчетнаяПолитика.ПоддержкаПБУ18(Организация, ДатаПроверки) Тогда
		Результат = Ложь;
	КонецЕсли;
	
	БУ = ПланыСчетов.Хозрасчетный.Товары.ПолучитьОбъект();
	ВедетсяПартионныйУчет = БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии, "ВидСубконто") <> Неопределено;
	Если ВедетсяПартионныйУчет
		И УчетнаяПолитика.СпособОценкиМПЗ(Организация, ДатаПроверки) <> Перечисления.СпособыОценки.ПоСредней Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Денежные средства
	// Табличная часть Деньги
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Деньги", "СчетУчета",                    "НаличныеДеньги");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "БанковскийСчет",     "БанковскийСчет");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ЗаполненБанковскийСчет");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Деньги", "СчетУчета",                    "БезналичныеДеньги");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "БанковскийСчет",     "БанковскийСчет");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ЗаполненБанковскийСчет");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Капитальные вложения;
	//         - Материалы;
	//         - Товары;
	//         - Готовая продукция
	// Табличная часть Запасы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Запасы", "СчетУчета",                    "Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура",       "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Склад",              "Склад");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Основные средства
	// Табличная часть ОсновныеСредства
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОсновныеСредства", "СчетУчетаБУ",       "ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетАмортизацииБУ",          "ОсновныеСредстваАмортизация");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство",  "ОсновноеСредство");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Нематериальные активы
	// Табличная часть НематериальныеАктивы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "НематериальныеАктивы", "СчетУчетаБУ",    "НематериальныеАктивы");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетНачисленияАмортизацииБУ", "НематериальныеАктивыАмортизация");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "НематериальныйАктив","НематериальныйАктив");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Поставщики
	// Табличная часть Поставщики
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Поставщики", "СчетУчета",                "РасчетыСПоставщиком");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "Аванс");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ЗаполненаСумма");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Поставщики", "СчетУчета",                "АвансыПоставщику");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "Аванс");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ЗаполненаСумма");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Покупатели
	// Табличная часть Покупатели
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Покупатели", "СчетУчета",                "РасчетыСПокупателем");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "Аванс");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ЗаполненаСумма");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Покупатели", "СчетУчета",                "АвансыПокупателя");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "Аванс");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ЗаполненаСумма");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Комиссионеры
	// Табличная часть Комиссионеры
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Комиссионеры", "СчетУчета",              "ЗапасыОтгруженные");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура",       "Номенклатура");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Зарплата
	// Табличная часть Зарплата
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Зарплата", "СчетУчета",                  "Зарплата");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Подотчет
	// Табличная часть Подотчет
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Подотчет", "СчетУчета",                  "Подотчет");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Налоги
	// Табличная часть НалогиИВзносы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "НалогиИВзносы", "СчетУчета",             "Налоги");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Налог",              "ВидНалога");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Кредиты и займы
	// Табличная часть КредитыИЗаймы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "КредитыИЗаймы", "СчетУчета",             "ПолученныеКредиты");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "Сумма");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ЗаполненаСумма");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ВидОбязательства", "ВидОбязательства");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВидОбязательства_Кредит");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "КредитыИЗаймы", "СчетУчетаПроценты",     "ПолученныеКредиты");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ВидПлатежаПоКредитамЗаймам", "ВидПлатежаПоКредитамЗаймамПроценты");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "СуммаПроценты");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ЗаполненаСумма");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ВидОбязательства", "ВидОбязательства");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВидОбязательства_Кредит");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "КредитыИЗаймы", "СчетУчета",             "ПолученныеЗаймы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "Сумма");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ЗаполненаСумма");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ВидОбязательства", "ВидОбязательства");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВидОбязательства_Займ");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "КредитыИЗаймы", "СчетУчетаПроценты",     "ПолученныеЗаймы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ВидПлатежаПоКредитамЗаймам", "ВидПлатежаПоКредитамЗаймамПроценты");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Валюта",             "Валюта");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Сумма",              "СуммаПроценты");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ЗаполненаСумма");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ВидОбязательства", "ВидОбязательства");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВидОбязательства_Займ");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Разделы:
	//         - Уставный капитал
	// Табличная часть Капитал
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Капитал", "СчетУчета",                   "УставныйКапитал");
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Капитал", "СчетУчетаУчредители",         "Учредители");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Шапка
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанных

Функция ЕстьОстаткиРаздела(ИмяРаздела, ПараметрыПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",                                ПараметрыПроверки.Организация);
	Запрос.УстановитьПараметр("ДатаВводаОстатков",                          ПараметрыПроверки.ДатаВводаОстатков);
	
	Если ИмяРаздела = "Деньги" Тогда
		
		Запрос.УстановитьПараметр("СчетаКасса", РазрешенныеСчета("Касса"));
		Запрос.УстановитьПараметр("СчетаБанк",  РазрешенныеСчета("Банк"));
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ДенежныеСредства)
		|	И (ВводНачальныхОстатков.СчетУчета В (&СчетаКасса)
		|			ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаБанк))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "Запасы" Тогда
		
		Запрос.УстановитьПараметр("СчетаЗапасы", РазрешенныеСчета("Запасы"));
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.НоменклатураНаСкладе КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И (ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.КапитальныеВложения)
		|			ИЛИ ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Материалы)
		|			ИЛИ ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Товары)
		|			ИЛИ ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ГотоваяПродукцияИПолуфабрикаты))
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаЗапасы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "ОсновныеСредства" Тогда
		
		Запрос.УстановитьПараметр("СчетаОсновныеСредства", РазрешенныеСчета("ОсновныеСредства"));
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.ОС КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ОсновныеСредства)
		|	И ВводНачальныхОстатков.СчетУчетаБУ В(&СчетаОсновныеСредства)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "НематериальныеАктивы" Тогда
		
		Запрос.УстановитьПараметр("СчетаНематериальныеАктивы", РазрешенныеСчета("НематериальныеАктивы"));
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.НМА КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.НематериальныеАктивыИНИОКР)
		|	И ВводНачальныхОстатков.СчетУчетаБУ В(&СчетаНематериальныеАктивы)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "Поставщики" Тогда
		
		Запрос.УстановитьПараметр("СчетаПоставщики", РазрешенныеСчета("Поставщики"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыСКонтрагентами КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПоставщикамиИПодрядчиками)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаПоставщики)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "Покупатели" Тогда
		
		Запрос.УстановитьПараметр("СчетаПокупатели", РазрешенныеСчета("Покупатели"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыСКонтрагентами КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПокупателямиИЗаказчиками)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаПокупатели)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "Комиссионеры" Тогда
		
		Запрос.УстановитьПараметр("СчетаКомиссионеры", РазрешенныеСчета("Комиссионеры"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.МПЗОтгруженные КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаКомиссионеры)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;

	Если ИмяРаздела = "Зарплата" Тогда
		
		Запрос.УстановитьПараметр("СчетаЗарплата", РазрешенныеСчета("Зарплата"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыПоЗаработнойПлате КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПерсоналомПоОплатеТрудаИДепонентам)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаЗарплата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
	
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "Подотчет" Тогда
		
		Запрос.УстановитьПараметр("СчетаПодотчет", РазрешенныеСчета("Подотчет"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыСПодотчетнымиЛицами КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПодотчетнымиЛицами)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаПодотчет)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "НалогиИВзносы" Тогда
		
		Запрос.УстановитьПараметр("СчетаНалогиИВзносы",          РазрешенныеСчета("НалогиИВзносы"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыПоНалогамИСборам КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыПоНалогамИСборам)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаНалогиИВзносы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка";
	
		Возврат НЕ Запрос.Выполнить().Пустой();

	КонецЕсли;
	
	Если ИмяРаздела = "КредитыИЗаймы" Тогда
		
		Запрос.УстановитьПараметр("СчетаКредитыТело",               РазрешенныеСчета("КредитыТело"));
		Запрос.УстановитьПараметр("СчетаКредитыПроценты",           РазрешенныеСчета("КредитыПроценты"));
		Запрос.УстановитьПараметр("СчетаЗаймыТело",                 РазрешенныеСчета("ЗаймыТело"));
		Запрос.УстановитьПараметр("СчетаЗаймыПроценты",             РазрешенныеСчета("ЗаймыПроценты"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета)
		|	И (ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыТело)
		|			ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаЗаймыТело))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета)
		|	И (ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыПроценты)
		|			ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаЗаймыПроценты))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если ИмяРаздела = "Капитал" Тогда
		
		Запрос.УстановитьПараметр("СчетаКапитал",                        РазрешенныеСчета("Капитал"));
		Запрос.УстановитьПараметр("СчетаУчредители",                     РазрешенныеСчета("Учредители"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Капитал)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаКапитал)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВводНачальныхОстатков.Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаУчредители)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка";
		
		Возврат НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция СоответствиеСвязанныхСчетов(ОсновныеСчета, СчетаСоответствия)
	
	ТаблицаСчетов = Новый ТаблицаЗначений;
	ТаблицаСчетов.Колонки.Добавить("ОсновнойСчет",     Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСчетов.Колонки.Добавить("СчетСоответствие", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	Для ИндексЗаписи = 0 По ОсновныеСчета.Количество()-1 Цикл
		НоваяСтрока = ТаблицаСчетов.Добавить();
		НоваяСтрока.ОсновнойСчет     = ОсновныеСчета[ИндексЗаписи];
		НоваяСтрока.СчетСоответствие = СчетаСоответствия[ИндексЗаписи];
	КонецЦикла;
	
	Возврат ТаблицаСчетов;
	
КонецФункции

Процедура ОбновитьОстатки(ТаблицаРаздела, ИмяРаздела, ПараметрыОстатков, СуществующиеДокументы = Неопределено, ВспомогательнаяТаблицаРаздела = Неопределено ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Организация",                                ПараметрыОстатков.Организация);
	Запрос.УстановитьПараметр("ДатаВводаОстатков",                          ПараметрыОстатков.ДатаВводаОстатков);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",             ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчетаНаименование", ВалютаРегламентированногоУчета.Наименование);
	
	Если ИмяРаздела = "Деньги" Тогда
		
		Запрос.УстановитьПараметр("СчетаКасса",               РазрешенныеСчета("Касса"));
		Запрос.УстановитьПараметр("СчетаБанк",                РазрешенныеСчета("Банк"));
		Запрос.УстановитьПараметр("ИспользоватьВалютныйУчет", Константы.ИспользоватьВалютныйУчет.Получить());
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ КАК Валюта
		|ПОМЕСТИТЬ ВТ_ИспользуемыеВалюты
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ДенежныеСредства)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаКасса)
		|	И ВводНачальныхОстатков.Валюта <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Субконто1 КАК БанковскийСчет
		|ПОМЕСТИТЬ ВТ_ИспользуемыеБанковскиеСчета
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ДенежныеСредства)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаБанк)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВводНачальныхОстатков.Субконто1
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчет,
		|	СУММА(ВводНачальныхОстатков.Сумма) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ КАК Валюта,
		|	СУММА(ВводНачальныхОстатков.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВЫБОР
		|					КОГДА ВводНачальныхОстатков.Субконто1 <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|						ТОГДА ВЫРАЗИТЬ(ВводНачальныхОстатков.Субконто1 КАК Справочник.БанковскиеСчета).Представление
		|					ИНАЧЕ ""Счет в банке""
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|						ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|					ТОГДА ""Наличные, "" + ПОДСТРОКА(&ВалютаРегламентированногоУчетаНаименование, 1, 3)
		|				ИНАЧЕ ""Наличные, "" + ПОДСТРОКА(ВводНачальныхОстатков.Валюта.Наименование, 1, 3)
		|			КОНЕЦ
		|	КОНЕЦ КАК НаименованиеПоказателя,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.Сумма
		|			ИНАЧЕ ВводНачальныхОстатков.ВалютнаяСумма
		|		КОНЕЦ) КАК СуммаОстаток,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВЫРАЗИТЬ(ВводНачальныхОстатков.Субконто1 КАК Справочник.БанковскиеСчета).Код
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|						ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|					ТОГДА 1
		|				ИНАЧЕ 2
		|			КОНЕЦ
		|	КОНЕЦ КАК Приоритет,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВЫРАЗИТЬ(ВводНачальныхОстатков.Субконто1 КАК Справочник.БанковскиеСчета).Код
		|		ИНАЧЕ ""999999999""
		|	КОНЕЦ КАК Код
		|ПОМЕСТИТЬ ВТ_Деньги
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ДенежныеСредства)
		|	И (ВводНачальныхОстатков.СчетУчета В (&СчетаКасса)
		|			ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаБанк))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВводНачальныхОстатков.Субконто1
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВЫРАЗИТЬ(ВводНачальныхОстатков.Субконто1 КАК Справочник.БанковскиеСчета).Код
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|						ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|					ТОГДА 1
		|				ИНАЧЕ 2
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВЫРАЗИТЬ(ВводНачальныхОстатков.Субконто1 КАК Справочник.БанковскиеСчета).Код
		|		ИНАЧЕ ""999999999""
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаБанк)
		|			ТОГДА ВЫБОР
		|					КОГДА ВводНачальныхОстатков.Субконто1 <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|						ТОГДА ВЫРАЗИТЬ(ВводНачальныхОстатков.Субконто1 КАК Справочник.БанковскиеСчета).Представление
		|					ИНАЧЕ ""Счет в банке""
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|						ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|					ТОГДА ""Наличные, "" + ПОДСТРОКА(&ВалютаРегламентированногоУчетаНаименование, 1, 3)
		|				ИНАЧЕ ""Наличные, "" + ПОДСТРОКА(ВводНачальныхОстатков.Валюта.Наименование, 1, 3)
		|			КОНЕЦ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	СУММА(0),
		|	Валюты.Ссылка,
		|	СУММА(0),
		|	""Наличные, "" + ПОДСТРОКА(Валюты.Наименование, 1, 3),
		|	СУММА(0),
		|	ВЫБОР
		|		КОГДА Валюты.Ссылка = &ВалютаРегламентированногоУчета
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ,
		|	Валюты.Код
		|ИЗ
		|	Справочник.Валюты КАК Валюты
		|ГДЕ
		|	(Валюты.Ссылка = &ВалютаРегламентированногоУчета
		|			ИЛИ &ИспользоватьВалютныйУчет)
		|	И НЕ Валюты.Ссылка В
		|				(ВЫБРАТЬ
		|					ВТ_ИспользуемыеВалюты.Валюта КАК Валюта
		|				ИЗ
		|					ВТ_ИспользуемыеВалюты КАК ВТ_ИспользуемыеВалюты)
		|
		|СГРУППИРОВАТЬ ПО
		|	Валюты.Ссылка,
		|	""Наличные, "" + ПОДСТРОКА(Валюты.Наименование, 1, 3),
		|	ВЫБОР
		|		КОГДА Валюты.Ссылка = &ВалютаРегламентированногоУчета
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ,
		|	Валюты.Код
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	БанковскиеСчета.Ссылка,
		|	СУММА(0),
		|	БанковскиеСчета.ВалютаДенежныхСредств,
		|	СУММА(0),
		|	БанковскиеСчета.Представление,
		|	СУММА(0),
		|	БанковскиеСчета.Код,
		|	БанковскиеСчета.Код
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Организация
		|	И НЕ БанковскиеСчета.Ссылка В
		|				(ВЫБРАТЬ
		|					ВТ_ИспользуемыеБанковскиеСчета.БанковскийСчет КАК БанковскийСчет
		|				ИЗ
		|					ВТ_ИспользуемыеБанковскиеСчета КАК ВТ_ИспользуемыеБанковскиеСчета)
		|
		|СГРУППИРОВАТЬ ПО
		|	БанковскиеСчета.Ссылка,
		|	БанковскиеСчета.ВалютаДенежныхСредств,
		|	БанковскиеСчета.Представление,
		|	БанковскиеСчета.Код,
		|	БанковскиеСчета.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Деньги.Ссылка,
		|	ВТ_Деньги.СчетУчета КАК СчетУчета,
		|	ВТ_Деньги.БанковскийСчет КАК БанковскийСчет,
		|	ВТ_Деньги.Сумма,
		|	ВТ_Деньги.Валюта КАК Валюта,
		|	ВТ_Деньги.ВалютнаяСумма,
		|	ВТ_Деньги.НаименованиеПоказателя,
		|	ВТ_Деньги.СуммаОстаток,
		|	ВТ_Деньги.Приоритет КАК Приоритет
		|ИЗ
		|	ВТ_Деньги КАК ВТ_Деньги
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет,
		|	ВТ_Деньги.Код";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "Запасы" Тогда
		
		Запрос.УстановитьПараметр("СчетаЗапасы", РазрешенныеСчета("Запасы"));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Номенклатура КАК Номенклатура,
		|	ВводНачальныхОстатков.Склад КАК Склад,
		|	СУММА(ВводНачальныхОстатков.Количество) КАК Количество,
		|	СУММА(ВводНачальныхОстатков.Сумма) КАК Сумма,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки,
		|	ВводНачальныхОстатков.Партия
		|ИЗ
		|	Документ.ВводНачальныхОстатков.НоменклатураНаСкладе КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И (ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.КапитальныеВложения)
		|			ИЛИ ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Материалы)
		|			ИЛИ ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Товары)
		|			ИЛИ ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ГотоваяПродукцияИПолуфабрикаты))
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаЗапасы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Номенклатура,
		|	ВводНачальныхОстатков.Склад,
		|	ВводНачальныхОстатков.НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер,
		|	ВводНачальныхОстатков.Партия
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВводНачальныхОстатков.Номенклатура.Код";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "ОсновныеСредства" Тогда
		
		Запрос.УстановитьПараметр("СчетаОсновныеСредства", РазрешенныеСчета("ОсновныеСредства"));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ВводНачальныхОстатков.АмортизацияДо2002НУ) КАК АмортизацияДо2002НУ,
		|	СУММА(ВводНачальныхОстатков.АмортизацияДо2009) КАК АмортизацияДо2009,
		|	ВводНачальныхОстатков.ВыработкаКоличествоБУ,
		|	ВводНачальныхОстатков.ГрафикАмортизацииБУ,
		|	ВводНачальныхОстатков.ДатаПоследнейМодернизацииРегл,
		|	ВводНачальныхОстатков.ДатаПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.ДатаПриобретенияУСН,
		|	ВводНачальныхОстатков.ИнвентарныйНомерРегл,
		|	ВводНачальныхОстатков.КоэффициентАмортизацииБУ,
		|	ВводНачальныхОстатков.КоэффициентАмортизацииНУ,
		|	ВводНачальныхОстатков.КоэффициентУскоренияБУ,
		|	ВводНачальныхОстатков.МетодНачисленияАмортизацииНУ,
		|	ВводНачальныхОстатков.МОЛРегл,
		|	ВводНачальныхОстатков.НазваниеДокументаМодернизацииРегл,
		|	ВводНачальныхОстатков.НазваниеДокументаПринятияКУчетуРегл,
		|	СУММА(ВводНачальныхОстатков.НакопленнаяАмортизацияБУ) КАК НакопленнаяАмортизацияБУ,
		|	СУММА(ВводНачальныхОстатков.НакопленнаяАмортизацияНУ) КАК НакопленнаяАмортизацияНУ,
		|	СУММА(ВводНачальныхОстатков.НакопленнаяАмортизацияПР) КАК НакопленнаяАмортизацияПР,
		|	ВводНачальныхОстатков.НачислятьАмортизациюБУ,
		|	ВводНачальныхОстатков.НачислятьАмортизациюНУ,
		|	ВводНачальныхОстатков.НомерДокументаМодернизацииРегл,
		|	ВводНачальныхОстатков.НомерДокументаПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.ОбъемПродукцииРаботБУ,
		|	ВводНачальныхОстатков.ОбъемПродукцииРаботДляВычисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.ПараметрВыработкиБУ,
		|	СУММА(ВводНачальныхОстатков.ПервоначальнаяСтоимостьБУ) КАК ПервоначальнаяСтоимостьБУ,
		|	СУММА(ВводНачальныхОстатков.ПервоначальнаяСтоимостьНУ) КАК ПервоначальнаяСтоимостьНУ,
		|	СУММА(ВводНачальныхОстатков.ПервоначальнаяСтоимостьУСН) КАК ПервоначальнаяСтоимостьУСН,
		|	ВводНачальныхОстатков.ПорядокВключенияСтоимостиВСоставРасходовНУ,
		|	ВводНачальныхОстатков.ПорядокВключенияСтоимостиВСоставРасходовУСН,
		|	ВводНачальныхОстатков.ПорядокПогашенияСтоимостиБУ,
		|	ВводНачальныхОстатков.РеквизитыДокументаОплаты,
		|	ВводНачальныхОстатков.СостояниеМодернизацииРегл,
		|	ВводНачальныхОстатков.СостояниеПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.СпециальныйКоэффициентНУ,
		|	ВводНачальныхОстатков.СпособНачисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.СпособОтраженияРасходовПоАмортизации,
		|	ВводНачальныхОстатков.СпособПоступленияРегл,
		|	ВводНачальныхОстатков.СрокИспользованияДляВычисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияБУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияНУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияУСН,
		|	СУММА(ВводНачальныхОстатков.СтоимостьДляВычисленияАмортизацииБУ) КАК СтоимостьДляВычисленияАмортизацииБУ,
		|	СУММА(ВводНачальныхОстатков.СтоимостьДляВычисленияАмортизацииПР) КАК СтоимостьДляВычисленияАмортизацииПР,
		|	СУММА(ВводНачальныхОстатков.СтоимостьДо2002НУ) КАК СтоимостьДо2002НУ,
		|	СУММА(ВводНачальныхОстатков.СуммаНачисленнойАмортизацииУСН) КАК СуммаНачисленнойАмортизацииУСН,
		|	СУММА(ВводНачальныхОстатков.СуммаПоследнейМодернизацииБУ) КАК СуммаПоследнейМодернизацииБУ,
		|	СУММА(ВводНачальныхОстатков.СуммаПоследнейМодернизацииНУ) КАК СуммаПоследнейМодернизацииНУ,
		|	ВводНачальныхОстатков.СчетАмортизацииБУ,
		|	ВводНачальныхОстатков.СчетУчетаБУ,
		|	СУММА(ВводНачальныхОстатков.ТекущаяСтоимостьБУ) КАК ТекущаяСтоимостьБУ,
		|	СУММА(ВводНачальныхОстатков.ТекущаяСтоимостьНУ) КАК ТекущаяСтоимостьНУ,
		|	СУММА(ВводНачальныхОстатков.ТекущаяСтоимостьПР) КАК ТекущаяСтоимостьПР,
		|	ВводНачальныхОстатков.ФактическийСрокИспользованияДо2009,
		|	ВводНачальныхОстатков.Контрагент,
		|	ВводНачальныхОстатков.ДоговорКонтрагента,
		|	ВводНачальныхОстатков.СпособОтраженияРасходовПоАренднымПлатежам,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.ВводНачальныхОстатков.ОС КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ОсновныеСредства)
		|	И ВводНачальныхОстатков.СчетУчетаБУ В(&СчетаОсновныеСредства)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.ОсновноеСредство,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчетаБУ,
		|	ВводНачальныхОстатков.ГрафикАмортизацииБУ,
		|	ВводНачальныхОстатков.ДатаПоследнейМодернизацииРегл,
		|	ВводНачальныхОстатков.ДатаПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.ДатаПриобретенияУСН,
		|	ВводНачальныхОстатков.ИнвентарныйНомерРегл,
		|	ВводНачальныхОстатков.МетодНачисленияАмортизацииНУ,
		|	ВводНачальныхОстатков.МОЛРегл,
		|	ВводНачальныхОстатков.НазваниеДокументаМодернизацииРегл,
		|	ВводНачальныхОстатков.НазваниеДокументаПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.НачислятьАмортизациюБУ,
		|	ВводНачальныхОстатков.НачислятьАмортизациюНУ,
		|	ВводНачальныхОстатков.НомерДокументаМодернизацииРегл,
		|	ВводНачальныхОстатков.НомерДокументаПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.ПараметрВыработкиБУ,
		|	ВводНачальныхОстатков.ПорядокВключенияСтоимостиВСоставРасходовНУ,
		|	ВводНачальныхОстатков.ПорядокВключенияСтоимостиВСоставРасходовУСН,
		|	ВводНачальныхОстатков.ПорядокПогашенияСтоимостиБУ,
		|	ВводНачальныхОстатков.РеквизитыДокументаОплаты,
		|	ВводНачальныхОстатков.СостояниеМодернизацииРегл,
		|	ВводНачальныхОстатков.СостояниеПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.СпособНачисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.СпособОтраженияРасходовПоАмортизации,
		|	ВводНачальныхОстатков.СпособПоступленияРегл,
		|	ВводНачальныхОстатков.СчетАмортизацииБУ,
		|	ВводНачальныхОстатков.Контрагент,
		|	ВводНачальныхОстатков.ДоговорКонтрагента,
		|	ВводНачальныхОстатков.СпособОтраженияРасходовПоАренднымПлатежам,
		|	ВводНачальныхОстатков.ВыработкаКоличествоБУ,
		|	ВводНачальныхОстатков.КоэффициентАмортизацииБУ,
		|	ВводНачальныхОстатков.КоэффициентАмортизацииНУ,
		|	ВводНачальныхОстатков.КоэффициентУскоренияБУ,
		|	ВводНачальныхОстатков.ОбъемПродукцииРаботБУ,
		|	ВводНачальныхОстатков.ОбъемПродукцииРаботДляВычисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.СпециальныйКоэффициентНУ,
		|	ВводНачальныхОстатков.СрокИспользованияДляВычисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияБУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияНУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияУСН,
		|	ВводНачальныхОстатков.ФактическийСрокИспользованияДо2009,
		|	ВводНачальныхОстатков.НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "НематериальныеАктивы" Тогда
		
		Запрос.УстановитьПараметр("СчетаНематериальныеАктивы", РазрешенныеСчета("НематериальныеАктивы"));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки,
		|	ВводНачальныхОстатков.НематериальныйАктив КАК НематериальныйАктив,
		|	ВводНачальныхОстатков.СчетУчетаБУ,
		|	ВводНачальныхОстатков.СчетНачисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.ПервоначальнаяСтоимостьБУ,
		|	ВводНачальныхОстатков.ПервоначальнаяСтоимостьНУ,
		|	ВводНачальныхОстатков.ПервоначальнаяСтоимостьУСН,
		|	ВводНачальныхОстатков.НакопленнаяАмортизацияБУ,
		|	ВводНачальныхОстатков.НакопленнаяАмортизацияНУ,
		|	ВводНачальныхОстатков.НакопленнаяАмортизацияПР,
		|	ВводНачальныхОстатков.НакопленнаяАмортизацияВР,
		|	ВводНачальныхОстатков.НакопленнаяАмортизацияУСН,
		|	ВводНачальныхОстатков.ДатаПринятияКУчетуРегл,
		|	ВводНачальныхОстатков.ДатаПриобретения,
		|	ВводНачальныхОстатков.ВидОбъектаУчета,
		|	ВводНачальныхОстатков.СпособОтраженияРасходов,
		|	ВводНачальныхОстатков.НачислятьАмортизациюБУ,
		|	ВводНачальныхОстатков.НачислятьАмортизациюНУ,
		|	ВводНачальныхОстатков.ПорядокСписанияНИОКРНаРасходыНУ,
		|	ВводНачальныхОстатков.ТекущаяСтоимостьБУ,
		|	ВводНачальныхОстатков.ТекущаяСтоимостьНУ,
		|	ВводНачальныхОстатков.ТекущаяСтоимостьПР,
		|	ВводНачальныхОстатков.ТекущаяСтоимостьВР,
		|	ВводНачальныхОстатков.КоэффициентБУ,
		|	ВводНачальныхОстатков.АмортизацияДо2009,
		|	ВводНачальныхОстатков.ФактическийСрокИспользованияДо2009,
		|	ВводНачальныхОстатков.ОбъемПродукцииРаботДляВычисленияАмортизации,
		|	ВводНачальныхОстатков.ПорядокВключенияСтоимостиВСоставРасходовУСН,
		|	ВводНачальныхОстатков.РеквизитыДокументаОплаты,
		|	ВводНачальныхОстатков.СпециальныйКоэффициентНУ,
		|	ВводНачальныхОстатков.СпособНачисленияАмортизацииБУ,
		|	ВводНачальныхОстатков.МетодНачисленияАмортизацииНУ,
		|	ВводНачальныхОстатков.СпособПоступления,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияБУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияНУ,
		|	ВводНачальныхОстатков.СрокПолезногоИспользованияУСН,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер
		|ИЗ
		|	Документ.ВводНачальныхОстатков.НМА КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.НематериальныеАктивыИНИОКР)
		|	И ВводНачальныхОстатков.СчетУчетаБУ В(&СчетаНематериальныеАктивы)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "Поставщики" Тогда
		
		Запрос.УстановитьПараметр("СчетаПоставщики", РазрешенныеСчета("Поставщики"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Контрагент КАК Контрагент,
		|	ВводНачальныхОстатков.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВводНачальныхОстатков.Документ КАК Документ,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК Задолженность,
		|	СУММА(ВводНачальныхОстатков.Сумма) КАК Аванс,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ КАК Валюта,
		|	СУММА(ВводНачальныхОстатков.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.СуммаКт
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВводНачальныхОстатков.СуммаКт <> 0
		|						ТОГДА ВводНачальныхОстатков.ВалютнаяСумма
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК ЗадолженностьОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.Сумма
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВводНачальныхОстатков.Сумма <> 0
		|						ТОГДА ВводНачальныхОстатков.ВалютнаяСумма
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК АвансОстаток,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыСКонтрагентами КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПоставщикамиИПодрядчиками)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаПоставщики)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.ДоговорКонтрагента,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.Контрагент,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Документ,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ,
		|	ВводНачальныхОстатков.НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "Покупатели" Тогда
		
		Запрос.УстановитьПараметр("СчетаПокупатели", РазрешенныеСчета("Покупатели"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Контрагент КАК Контрагент,
		|	ВводНачальныхОстатков.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВводНачальныхОстатков.Документ КАК Документ,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК Аванс,
		|	СУММА(ВводНачальныхОстатков.Сумма) КАК Задолженность,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ КАК Валюта,
		|	СУММА(ВводНачальныхОстатков.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.СуммаКт
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВводНачальныхОстатков.СуммаКт <> 0
		|						ТОГДА ВводНачальныхОстатков.ВалютнаяСумма
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК АвансОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.Сумма
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВводНачальныхОстатков.Сумма <> 0
		|						ТОГДА ВводНачальныхОстатков.ВалютнаяСумма
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК ЗадолженностьОстаток,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.ДоходЕНВД <> 0
		|			ТОГДА ""ЕНВД""
		|		КОГДА ВводНачальныхОстатков.ДоходПатент <> 0
		|			ТОГДА ""Патент""
		|		КОГДА ВводНачальныхОстатков.ДоходКомитента <> 0
		|			ТОГДА ""Комиссия""
		|		ИНАЧЕ ""УСН""
		|	КОНЕЦ КАК ВидДеятельности
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыСКонтрагентами КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПокупателямиИЗаказчиками)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаПокупатели)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.ДоговорКонтрагента,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.Контрагент,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Документ,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ,
		|	ВводНачальныхОстатков.НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.ДоходЕНВД <> 0
		|			ТОГДА ""ЕНВД""
		|		КОГДА ВводНачальныхОстатков.ДоходПатент <> 0
		|			ТОГДА ""Патент""
		|		КОГДА ВводНачальныхОстатков.ДоходКомитента <> 0
		|			ТОГДА ""Комиссия""
		|		ИНАЧЕ ""УСН""
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "Комиссионеры" Тогда
		
		Запрос.УстановитьПараметр("СчетаКомиссионеры", РазрешенныеСчета("Комиссионеры"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Покупатель КАК Контрагент,
		|	ВводНачальныхОстатков.ДоговорПокупателя КАК ДоговорКонтрагента,
		|	ВводНачальныхОстатков.ДокументОтгрузки КАК ДокументОтгрузки,
		|	СУММА(ВводНачальныхОстатков.Сумма) КАК Сумма,
		|	СУММА(ВводНачальныхОстатков.Количество) КАК Количество,
		|	ВводНачальныхОстатков.Номенклатура КАК Номенклатура,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер
		|ИЗ
		|	Документ.ВводНачальныхОстатков.МПЗОтгруженные КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаКомиссионеры)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.ДоговорПокупателя,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.Покупатель,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.ДокументОтгрузки,
		|	ВводНачальныхОстатков.Номенклатура,
		|	ВводНачальныхОстатков.НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;

	Если ИмяРаздела = "Зарплата" Тогда
		
		Запрос.УстановитьПараметр("СчетаЗарплата", РазрешенныеСчета("Зарплата"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Сотрудник КАК Сотрудник,
		|	ВводНачальныхОстатков.РаботникОрганизации КАК РаботникОрганизации,
		|	ВводНачальныхОстатков.ПериодРегистрации КАК ПериодРегистрации,
		|	ВводНачальныхОстатков.СпособВыплаты КАК СпособВыплаты,
		|	ВводНачальныхОстатков.Ведомость КАК Ведомость,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Сумма > 0
		|				ТОГДА ВводНачальныхОстатков.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗадолженностьЗаОрганизацией,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Сумма < 0
		|				ТОГДА -ВводНачальныхОстатков.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗадолженностьЗаРаботником,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыПоЗаработнойПлате КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПерсоналомПоОплатеТрудаИДепонентам)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаЗарплата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.ПериодРегистрации,
		|	ВводНачальныхОстатков.РаботникОрганизации,
		|	ВводНачальныхОстатков.Ведомость,
		|	ВводНачальныхОстатков.СпособВыплаты,
		|	ВводНачальныхОстатков.Сотрудник,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
	
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "Подотчет" Тогда
		
		Запрос.УстановитьПараметр("СчетаПодотчет", РазрешенныеСчета("Подотчет"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.РаботникОрганизации КАК РаботникОрганизации,
		|	СУММА(ВводНачальныхОстатков.Сумма) КАК Задолженность,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК Перерасход,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ КАК Валюта,
		|	СУММА(ВводНачальныхОстатков.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.Сумма
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВводНачальныхОстатков.Сумма <> 0
		|						ТОГДА ВводНачальныхОстатков.ВалютнаяСумма
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК ЗадолженностьОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.СуммаКт
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВводНачальныхОстатков.СуммаКт <> 0
		|						ТОГДА ВводНачальныхОстатков.ВалютнаяСумма
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК ПерерасходОстаток,
		|	ВводНачальныхОстатков.Ссылка.Номер КАК Номер,
		|	ВводНачальныхОстатков.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыСПодотчетнымиЛицами КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПодотчетнымиЛицами)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаПодотчет)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|			ТОГДА &ВалютаРегламентированногоУчета
		|		ИНАЧЕ ВводНачальныхОстатков.Валюта
		|	КОНЕЦ,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.РаботникОрганизации,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.НомерСтроки,
		|	ВводНачальныхОстатков.Ссылка.Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "НалогиИВзносы" Тогда
		
		Запрос.УстановитьПараметр("СчетаНалогиИВзносы",          РазрешенныеСчета("НалогиИВзносы"));
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ВТ_РегистрацияВНалоговомОргане
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаВводаОстатков, ) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
		|ГДЕ
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыНалоговИПлатежейВБюджет.СчетУчета КАК СчетУчета,
		|	ВидыНалоговИПлатежейВБюджет.Ссылка КАК ВидНалога,
		|	ВидыНалоговИПлатежейВБюджет.Код,
		|	ВЫБОР
		|		КОГДА ВидыНалоговИПлатежейВБюджет.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.НалогНаПрибыль_РегиональныйБюджет)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.РегиональныйБюджет)
		|		КОГДА ВидыНалоговИПлатежейВБюджет.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.НалогНаПрибыль_ФедеральныйБюджет)
		|				ИЛИ ВидыНалоговИПлатежейВБюджет.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.ЕСХН)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ПустаяСсылка)
		|	КОНЕЦ КАК УровеньБюджета
		|ПОМЕСТИТЬ ВТ_ВидыНалогов
		|ИЗ
		|	Справочник.ВидыНалоговИПлатежейВБюджет КАК ВидыНалоговИПлатежейВБюджет
		|ГДЕ
		|	ВидыНалоговИПлатежейВБюджет.СчетУчета В(&СчетаНалогиИВзносы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВидыНалогов.ВидНалога КАК ВидНалога,
		|	ВТ_ВидыНалогов.УровеньБюджета
		|ПОМЕСТИТЬ ВТ_ИспользуемыеВидыНалогов
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыПоНалогамИСборам КАК ВводНачальныхОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыНалогов КАК ВТ_ВидыНалогов
		|		ПО ВводНачальныхОстатков.СчетУчета = ВТ_ВидыНалогов.СчетУчета
		|			И ВводНачальныхОстатков.УровеньБюджета = ВТ_ВидыНалогов.УровеньБюджета
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыПоНалогамИСборам)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаНалогиИВзносы)
		|	И ВводНачальныхОстатков.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалоговИПлатежейВБюджет.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВидыНалогов.ВидНалога,
		|	ВТ_ВидыНалогов.УровеньБюджета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.ВидНалога,
		|	ВводНачальныхОстатков.УровеньБюджета
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыПоНалогамИСборам КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыПоНалогамИСборам)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаНалогиИВзносы)
		|	И ВводНачальныхОстатков.ВидНалога <> ЗНАЧЕНИЕ(Справочник.ВидыНалоговИПлатежейВБюджет.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.ВидНалога,
		|	ВводНачальныхОстатков.УровеньБюджета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	СУММА(ВводНачальныхОстатков.Сумма) КАК Переплата,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК Задолженность,
		|	ВТ_ВидыНалогов.ВидНалога КАК ВидНалога,
		|	ВводНачальныхОстатков.ВидПлатежаВБюджет КАК ВидПлатежаВБюджет,
		|	ВводНачальныхОстатков.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	ВТ_ВидыНалогов.Код КАК Код,
		|	ВводНачальныхОстатков.УровеньБюджета КАК УровеньБюджета
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыПоНалогамИСборам КАК ВводНачальныхОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыНалогов КАК ВТ_ВидыНалогов
		|		ПО ВводНачальныхОстатков.СчетУчета = ВТ_ВидыНалогов.СчетУчета
		|			И ВводНачальныхОстатков.УровеньБюджета = ВТ_ВидыНалогов.УровеньБюджета
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыПоНалогамИСборам)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаНалогиИВзносы)
		|	И ВводНачальныхОстатков.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалоговИПлатежейВБюджет.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВТ_ВидыНалогов.ВидНалога,
		|	ВводНачальныхОстатков.ВидПлатежаВБюджет,
		|	ВводНачальныхОстатков.РегистрацияВНалоговомОргане,
		|	ВТ_ВидыНалогов.Код,
		|	ВводНачальныхОстатков.УровеньБюджета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО,
		|	ВТ_ВидыНалогов.СчетУчета,
		|	СУММА(0),
		|	СУММА(0),
		|	ВТ_ВидыНалогов.ВидНалога,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог),
		|	ЕСТЬNULL(ВТ_РегистрацияВНалоговомОргане.РегистрацияВНалоговомОргане, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)),
		|	ВТ_ВидыНалогов.Код,
		|	ВЫБОР
		|		КОГДА ВТ_ВидыНалогов.ВидНалога.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.НалогНаПрибыль_РегиональныйБюджет)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.РегиональныйБюджет)
		|		КОГДА ВТ_ВидыНалогов.ВидНалога.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.НалогНаПрибыль_ФедеральныйБюджет)
		|				ИЛИ ВТ_ВидыНалогов.ВидНалога.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.ЕСХН)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ПустаяСсылка)
		|	КОНЕЦ
		|ИЗ
		|	ВТ_ВидыНалогов КАК ВТ_ВидыНалогов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИспользуемыеВидыНалогов КАК ВТ_ИспользуемыеВидыНалогов
		|		ПО ВТ_ВидыНалогов.ВидНалога = ВТ_ИспользуемыеВидыНалогов.ВидНалога
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацияВНалоговомОргане КАК ВТ_РегистрацияВНалоговомОргане
		|		ПО (НЕ ВТ_РегистрацияВНалоговомОргане.РегистрацияВНалоговомОргане ЕСТЬ NULL )
		|ГДЕ
		|	ВТ_ВидыНалогов.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|	И НЕ ВТ_ВидыНалогов.ВидНалога В
		|				(ВЫБРАТЬ
		|					ВТ_ИспользуемыеВидыНалогов.ВидНалога КАК ВидНалога
		|				ИЗ
		|					ВТ_ИспользуемыеВидыНалогов КАК ВТ_ИспользуемыеВидыНалогов)
		|	И ВТ_ВидыНалогов.СчетУчета В(&СчетаНалогиИВзносы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВидыНалогов.СчетУчета,
		|	ВТ_ВидыНалогов.ВидНалога,
		|	ВТ_ВидыНалогов.Код,
		|	ЕСТЬNULL(ВТ_РегистрацияВНалоговомОргане.РегистрацияВНалоговомОргане, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)),
		|	ВЫБОР
		|		КОГДА ВТ_ВидыНалогов.ВидНалога.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.НалогНаПрибыль_РегиональныйБюджет)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.РегиональныйБюджет)
		|		КОГДА ВТ_ВидыНалогов.ВидНалога.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.НалогНаПрибыль_ФедеральныйБюджет)
		|				ИЛИ ВТ_ВидыНалогов.ВидНалога.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыНалогов.ЕСХН)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ПустаяСсылка)
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	СУММА(ВводНачальныхОстатков.Сумма),
		|	СУММА(ВводНачальныхОстатков.СуммаКт),
		|	ВводНачальныхОстатков.ВидНалога,
		|	ВводНачальныхОстатков.ВидПлатежаВБюджет,
		|	ВводНачальныхОстатков.РегистрацияВНалоговомОргане,
		|	ВводНачальныхОстатков.ВидНалога.Код,
		|	ВводНачальныхОстатков.УровеньБюджета
		|ИЗ
		|	Документ.ВводНачальныхОстатков.РасчетыПоНалогамИСборам КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыПоНалогамИСборам)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаНалогиИВзносы)
		|	И ВводНачальныхОстатков.ВидНалога <> ЗНАЧЕНИЕ(Справочник.ВидыНалоговИПлатежейВБюджет.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.ВидПлатежаВБюджет,
		|	ВводНачальныхОстатков.РегистрацияВНалоговомОргане,
		|	ВводНачальныхОстатков.УровеньБюджета,
		|	ВводНачальныхОстатков.ВидНалога,
		|	ВводНачальныхОстатков.ВидНалога.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код";
	
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "КредитыИЗаймы" Тогда
		
		Запрос.УстановитьПараметр("СчетаКредитыТело",               РазрешенныеСчета("КредитыТело"));
		Запрос.УстановитьПараметр("СчетаКредитыПроценты",           РазрешенныеСчета("КредитыПроценты"));
		Запрос.УстановитьПараметр("СчетаЗаймыТело",                 РазрешенныеСчета("ЗаймыТело"));
		Запрос.УстановитьПараметр("СчетаЗаймыПроценты",             РазрешенныеСчета("ЗаймыПроценты"));
		Запрос.УстановитьПараметр("СчетаКредитыИЗаймыСоответствие", СоответствиеСвязанныхСчетов(РазрешенныеСчета("КредитыИЗаймыТело"), РазрешенныеСчета("КредитыИЗаймыПроценты")));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетаКредитыИЗаймыСоответствие.ОсновнойСчет КАК СчетТело,
		|	СчетаКредитыИЗаймыСоответствие.СчетСоответствие КАК СчетПроценты
		|ПОМЕСТИТЬ ВТ_СчетаКредитыИЗаймыСоответствие
		|ИЗ
		|	&СчетаКредитыИЗаймыСоответствие КАК СчетаКредитыИЗаймыСоответствие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Субконто1 КАК Контрагент,
		|	ВводНачальныхОстатков.Субконто2 КАК ДоговорКонтрагента,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК Сумма,
		|	ВводНачальныхОстатков.Валюта КАК Валюта,
		|	СУММА(ВводНачальныхОстатков.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	СУММА(0) КАК СуммаПроценты,
		|	ВТ_СчетаКредитыИЗаймыСоответствие.СчетПроценты КАК СчетУчетаПроценты,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыТело)
		|				ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыПроценты)
		|			ТОГДА ""Кредит""
		|		ИНАЧЕ ""Займ""
		|	КОНЕЦ КАК ВидОбязательства,
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.СуммаКт
		|			ИНАЧЕ ВводНачальныхОстатков.ВалютнаяСумма
		|		КОНЕЦ) КАК СуммаОстаток,
		|	СУММА(0) КАК СуммаПроцентыОстаток,
		|	ВводНачальныхОстатков.Ссылка.Номер,
		|	СУММА(ВводНачальныхОстатков.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_КредитыИЗаймы
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаКредитыИЗаймыСоответствие КАК ВТ_СчетаКредитыИЗаймыСоответствие
		|		ПО ВводНачальныхОстатков.СчетУчета = ВТ_СчетаКредитыИЗаймыСоответствие.СчетТело
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета)
		|	И (ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыТело)
		|			ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаЗаймыТело))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Субконто1,
		|	ВводНачальныхОстатков.Субконто2,
		|	ВводНачальныхОстатков.Валюта,
		|	ВТ_СчетаКредитыИЗаймыСоответствие.СчетПроценты,
		|	ВводНачальныхОстатков.Ссылка.Номер,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыТело)
		|				ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыПроценты)
		|			ТОГДА ""Кредит""
		|		ИНАЧЕ ""Займ""
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка,
		|	ВТ_СчетаКредитыИЗаймыСоответствие.СчетТело,
		|	ВводНачальныхОстатков.Субконто1,
		|	ВводНачальныхОстатков.Субконто2,
		|	СУММА(0),
		|	ВводНачальныхОстатков.Валюта,
		|	СУММА(ВводНачальныхОстатков.ВалютнаяСумма),
		|	СУММА(ВводНачальныхОстатков.СуммаКт),
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыТело)
		|				ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыПроценты)
		|			ТОГДА ""Кредит""
		|		ИНАЧЕ ""Займ""
		|	КОНЕЦ,
		|	СУММА(0),
		|	СУММА(ВЫБОР
		|			КОГДА ВводНачальныхОстатков.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ИЛИ ВводНачальныхОстатков.Валюта = &ВалютаРегламентированногоУчета
		|				ТОГДА ВводНачальныхОстатков.СуммаКт
		|			ИНАЧЕ ВводНачальныхОстатков.ВалютнаяСумма
		|		КОНЕЦ),
		|	ВводНачальныхОстатков.Ссылка.Номер,
		|	СУММА(0)
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаКредитыИЗаймыСоответствие КАК ВТ_СчетаКредитыИЗаймыСоответствие
		|		ПО ВводНачальныхОстатков.СчетУчета = ВТ_СчетаКредитыИЗаймыСоответствие.СчетПроценты
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета)
		|	И (ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыПроценты)
		|			ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаЗаймыПроценты))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Субконто1,
		|	ВводНачальныхОстатков.Субконто2,
		|	ВводНачальныхОстатков.Валюта,
		|	ВТ_СчетаКредитыИЗаймыСоответствие.СчетТело,
		|	ВводНачальныхОстатков.Ссылка.Номер,
		|	ВЫБОР
		|		КОГДА ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыТело)
		|				ИЛИ ВводНачальныхОстатков.СчетУчета В (&СчетаКредитыПроценты)
		|			ТОГДА ""Кредит""
		|		ИНАЧЕ ""Займ""
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_КредитыИЗаймы.Ссылка КАК Ссылка,
		|	ВТ_КредитыИЗаймы.СчетУчета КАК СчетУчета,
		|	ВТ_КредитыИЗаймы.Контрагент КАК Контрагент,
		|	ВТ_КредитыИЗаймы.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	СУММА(ВТ_КредитыИЗаймы.Сумма) КАК Сумма,
		|	ВТ_КредитыИЗаймы.Валюта КАК Валюта,
		|	СУММА(ВТ_КредитыИЗаймы.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	СУММА(ВТ_КредитыИЗаймы.СуммаПроценты) КАК СуммаПроценты,
		|	ВТ_КредитыИЗаймы.СчетУчетаПроценты КАК СчетУчетаПроценты,
		|	ВТ_КредитыИЗаймы.ВидОбязательства КАК ВидОбязательства,
		|	СУММА(ВТ_КредитыИЗаймы.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(ВТ_КредитыИЗаймы.СуммаПроцентыОстаток) КАК СуммаПроцентыОстаток,
		|	""Проценты"" КАК ПодсказкаПроценты,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейПоКредитамЗаймам.УплатаПроцентов) КАК ВидПлатежаПоКредитамЗаймамПроценты,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейПоКредитамЗаймам.ПогашениеДолга) КАК ВидПлатежаПоКредитамЗаймамТело,
		|	ВТ_КредитыИЗаймы.Номер КАК Номер,
		|	ВТ_КредитыИЗаймы.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_Сводная
		|ИЗ
		|	ВТ_КредитыИЗаймы КАК ВТ_КредитыИЗаймы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_КредитыИЗаймы.Ссылка,
		|	ВТ_КредитыИЗаймы.СчетУчета,
		|	ВТ_КредитыИЗаймы.Контрагент,
		|	ВТ_КредитыИЗаймы.ДоговорКонтрагента,
		|	ВТ_КредитыИЗаймы.Валюта,
		|	ВТ_КредитыИЗаймы.СчетУчетаПроценты,
		|	ВТ_КредитыИЗаймы.ВидОбязательства,
		|	ВТ_КредитыИЗаймы.Номер,
		|	ВТ_КредитыИЗаймы.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сводная.Ссылка,
		|	ВТ_Сводная.СчетУчета,
		|	ВТ_Сводная.Контрагент,
		|	ВТ_Сводная.ДоговорКонтрагента,
		|	СУММА(ВТ_Сводная.Сумма) КАК Сумма,
		|	ВТ_Сводная.Валюта,
		|	СУММА(ВТ_Сводная.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	СУММА(ВТ_Сводная.СуммаПроценты) КАК СуммаПроценты,
		|	ВТ_Сводная.СчетУчетаПроценты,
		|	ВТ_Сводная.ВидОбязательства,
		|	СУММА(ВТ_Сводная.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(ВТ_Сводная.СуммаПроцентыОстаток) КАК СуммаПроцентыОстаток,
		|	ВТ_Сводная.ПодсказкаПроценты,
		|	ВТ_Сводная.ВидПлатежаПоКредитамЗаймамПроценты,
		|	ВТ_Сводная.ВидПлатежаПоКредитамЗаймамТело,
		|	ВТ_Сводная.Номер КАК Номер,
		|	СУММА(ВТ_Сводная.НомерСтроки) КАК НомерСтроки
		|ИЗ
		|	ВТ_Сводная КАК ВТ_Сводная
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Сводная.Контрагент,
		|	ВТ_Сводная.Номер,
		|	ВТ_Сводная.ДоговорКонтрагента,
		|	ВТ_Сводная.СчетУчетаПроценты,
		|	ВТ_Сводная.ПодсказкаПроценты,
		|	ВТ_Сводная.ВидПлатежаПоКредитамЗаймамТело,
		|	ВТ_Сводная.СчетУчета,
		|	ВТ_Сводная.Валюта,
		|	ВТ_Сводная.ВидПлатежаПоКредитамЗаймамПроценты,
		|	ВТ_Сводная.Ссылка,
		|	ВТ_Сводная.ВидОбязательства
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "Капитал" Тогда
		
		Запрос.УстановитьПараметр("СчетаКапитал",                        РазрешенныеСчета("Капитал"));
		Запрос.УстановитьПараметр("СчетаУчредители",                     РазрешенныеСчета("Учредители"));
		Запрос.УстановитьПараметр("СчетаКапиталИУчредителиСоответствие", СоответствиеСвязанныхСчетов(РазрешенныеСчета("Капитал"), РазрешенныеСчета("Учредители")));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетаКапиталИУчредителиСоответствие.ОсновнойСчет КАК СчетКапитал,
		|	СчетаКапиталИУчредителиСоответствие.СчетСоответствие КАК СчетУчредители
		|ПОМЕСТИТЬ ВТ_СчетаКапиталИУчредителиСоответствие
		|ИЗ
		|	&СчетаКапиталИУчредителиСоответствие КАК СчетаКапиталИУчредителиСоответствие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Субконто1 КАК Учредитель,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК СуммаВклада,
		|	СУММА(0) КАК СуммаНеОплачено,
		|	ВТ_СчетаКапиталИУчредителиСоответствие.СчетУчредители КАК СчетУчетаУчредители,
		|	ЗНАЧЕНИЕ(Документ.ВводНачальныхОстатков.ПустаяСсылка) КАК СсылкаДляГруппировки
		|ПОМЕСТИТЬ ВТ_УставныйКапитал
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаКапиталИУчредителиСоответствие КАК ВТ_СчетаКапиталИУчредителиСоответствие
		|		ПО ВводНачальныхОстатков.СчетУчета = ВТ_СчетаКапиталИУчредителиСоответствие.СчетКапитал
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Капитал)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаКапитал)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Субконто1,
		|	ВТ_СчетаКапиталИУчредителиСоответствие.СчетУчредители
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка,
		|	ВТ_СчетаКапиталИУчредителиСоответствие.СчетКапитал,
		|	ВводНачальныхОстатков.Субконто1,
		|	СУММА(0),
		|	СУММА(ВводНачальныхОстатков.Сумма),
		|	ВводНачальныхОстатков.СчетУчета,
		|	ЗНАЧЕНИЕ(Документ.ВводНачальныхОстатков.ПустаяСсылка)
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаКапиталИУчредителиСоответствие КАК ВТ_СчетаКапиталИУчредителиСоответствие
		|		ПО ВводНачальныхОстатков.СчетУчета = ВТ_СчетаКапиталИУчредителиСоответствие.СчетУчредители
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаУчредители)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Субконто1,
		|	ВТ_СчетаКапиталИУчредителиСоответствие.СчетКапитал
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_УставныйКапитал.СчетУчета КАК СчетУчета,
		|	ВТ_УставныйКапитал.Учредитель КАК Учредитель,
		|	СУММА(ВТ_УставныйКапитал.СуммаВклада) КАК СуммаВклада,
		|	ВТ_УставныйКапитал.СчетУчетаУчредители КАК СчетУчетаУчредители,
		|	СУММА(ВТ_УставныйКапитал.СуммаВклада - ВТ_УставныйКапитал.СуммаНеОплачено) КАК СуммаОплачено,
		|	ВТ_УставныйКапитал.СсылкаДляГруппировки КАК Ссылка
		|ИЗ
		|	ВТ_УставныйКапитал КАК ВТ_УставныйКапитал
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_УставныйКапитал.Учредитель,
		|	ВТ_УставныйКапитал.СчетУчета,
		|	ВТ_УставныйКапитал.СчетУчетаУчредители,
		|	ВТ_УставныйКапитал.СсылкаДляГруппировки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Учредитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка,
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	ВводНачальныхОстатков.Субконто1 КАК Учредитель,
		|	СУММА(0) КАК Сумма,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК СуммаКт
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Капитал)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаКапитал)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Субконто1,
		|	СУММА(ВводНачальныхОстатков.Сумма),
		|	СУММА(0)
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаУчредители)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.Ссылка,
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Субконто1";
		
		Результаты = Запрос.ВыполнитьПакет();
		ЗаполнитьТаблицу(ТаблицаРаздела, Результаты[2].Выбрать());
		ЗаполнитьТаблицу(ВспомогательнаяТаблицаРаздела, Результаты[3].Выбрать(), СуществующиеДокументы);
		
	КонецЕсли;
	
	Если ИмяРаздела = "ФинансовыйРезультат" Тогда
		
		Запрос.УстановитьПараметр("СчетаФинансовыйРезультат", РазрешенныеСчета("ФинансовыйРезультат"));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводНачальныхОстатков.СчетУчета КАК СчетУчета,
		|	СУММА(ВводНачальныхОстатков.СуммаКт) КАК СуммаКт,
		|	ВводНачальныхОстатков.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВводНачальныхОстатков.БухСправка КАК ВводНачальныхОстатков
		|ГДЕ
		|	ВводНачальныхОстатков.Ссылка.Организация = &Организация
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВБухгалтерскомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьВНалоговомУчете
		|	И ВводНачальныхОстатков.Ссылка.ОтражатьПоСпециальнымРегистрам
		|	И ВводНачальныхОстатков.Ссылка.Проведен
		|	И ВводНачальныхОстатков.Ссылка.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаДляВводаОстатков.Капитал)
		|	И ВводНачальныхОстатков.СчетУчета В(&СчетаФинансовыйРезультат)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводНачальныхОстатков.СчетУчета,
		|	ВводНачальныхОстатков.Ссылка";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ЗаполнитьТаблицу(ТаблицаРаздела, Выборка, СуществующиеДокументы);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицу(ТекущаяТаблица, ВыборкаДанных, СуществующиеДокументы = Неопределено)
	
	ТекущаяТаблица.Очистить();
	Пока ВыборкаДанных.Следующий() Цикл
		НоваяСтрока = ТекущаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДанных);
		
		Если СуществующиеДокументы <> Неопределено Тогда
			Если ЗначениеЗаполнено(ВыборкаДанных.Ссылка) Тогда
				НовыйДокумент = СуществующиеДокументы.Добавить();
				НовыйДокумент.Ссылка = ВыборкаДанных.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаписьДанных

Процедура СинхронизироватьСостояниеДокументов(ТаблицаДанных, СуществующиеДокументы) Экспорт
	
	ТаблицаСсылок = Новый ТаблицаЗначений;
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаДанных Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) Тогда
			НоваяСтрока = ТаблицаСсылок.Добавить();
			НоваяСтрока.Ссылка = СтрокаТаблицы.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаСсылок.Свернуть("Ссылка");
	
	Для Каждого СтрокаТаблицы ИЗ СуществующиеДокументы Цикл
		СуществующийДокумент = СтрокаТаблицы.Ссылка;
		Если ТаблицаСсылок.Найти(СуществующийДокумент, "Ссылка") = Неопределено Тогда
			ДокументОбъект = СуществующийДокумент.ПолучитьОбъект();
			ДокументОбъект.УстановитьПометкуУдаления(Истина);
			ДокументОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, ИмяТаблицыДокумента) Экспорт
	
	СписокДокументов = ТаблицаДанных.Скопировать();
	СписокДокументов.Свернуть("Ссылка");
	СписокДокументов.Сортировать("Ссылка");
	
	Для Каждого ДокументОстатков ИЗ СписокДокументов Цикл
		
		МассивСтрок = ТаблицаДанных.НайтиСтроки(Новый Структура("Ссылка", ДокументОстатков.Ссылка));
		Если ЗначениеЗаполнено(ДокументОстатков.Ссылка) Тогда
			ДокументОбъект = ДокументОстатков.Ссылка.ПолучитьОбъект();
		Иначе
			ДокументОбъект = Документы.ВводНачальныхОстатков.СоздатьДокумент();
			ДокументОбъект.Организация                    = СтруктураПараметровДокументов.Организация;
			ДокументОбъект.Дата                           = СтруктураПараметровДокументов.Дата;
			ДокументОбъект.РазделУчета                    = СтруктураПараметровДокументов.РазделУчета;
			ДокументОбъект.ОтражатьВБухгалтерскомУчете    = Истина;
			ДокументОбъект.ОтражатьВНалоговомУчете        = Истина;
			ДокументОбъект.ОтражатьПоСпециальнымРегистрам = Истина;
		КонецЕсли;
		
		ДокументОбъект[ИмяТаблицыДокумента].Очистить();
		Для Каждого СтрокаМассива ИЗ МассивСтрок Цикл
			НоваяСтрока = ДокументОбъект[ИмяТаблицыДокумента].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМассива);
		КонецЦикла;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьНаСервереДокументы(ТаблицаДанных)
	
	МассивДокументов = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаДанных, "Ссылка", Истина);
	
	Для Каждого ДокументСсылка ИЗ МассивДокументов Цикл
		
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьФинансовыйРезультат(СтруктураПараметровДокументов, ФинансовыйРезультат, СуществующиеДокументы) Экспорт
	
	ОбновитьОстатки(ФинансовыйРезультат, "ФинансовыйРезультат", 
			Новый Структура("Организация,ДатаВводаОстатков",
				СтруктураПараметровДокументов.Организация,СтруктураПараметровДокументов.Дата));
	
	СчетаФинансовыйРезультат = РазрешенныеСчета("ФинансовыйРезультат");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",              СтруктураПараметровДокументов.Организация);
	Запрос.УстановитьПараметр("ДатаВводаОстатков",        КонецДня(СтруктураПараметровДокументов.Дата));
	Запрос.УстановитьПараметр("СчетаФинансовыйРезультат", СчетаФинансовыйРезультат);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаВводаОстатков,
	|			Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный)
	|				И НЕ Счет В (&СчетаФинансовыйРезультат),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 0 Тогда
		ФинансовыйРезультат.Очистить();
	Иначе 
		Если ФинансовыйРезультат.Количество() = 0 Тогда
			СтрокаФинансовыйРезультат = ФинансовыйРезультат.Добавить();
		Иначе
			СтрокаФинансовыйРезультат = ФинансовыйРезультат[0];
		КонецЕсли;
		СтрокаФинансовыйРезультат.СуммаКт   = Результат.Итог("СуммаКт");
		СтрокаФинансовыйРезультат.СчетУчета = СчетаФинансовыйРезультат[0];
	КонецЕсли;
	
	СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.Капитал);
	ТаблицаДанных = ПодготовитьТабличнуюЧасть_ФинансовыйРезультат(ФинансовыйРезультат);
	Если ТаблицаДанных.Количество() <> 0 Тогда
		ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "БухСправка");
	Иначе
		УдалитьНаСервереДокументы(ФинансовыйРезультат);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТабличнуюЧасть_ФинансовыйРезультат(Таблица);
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		Если СтрокаТаблицы.СуммаКт <> 0 Тогда
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции


#КонецОбласти

#Область УстановкаДатыВводаОстатков

Функция ПолучитьДатуНачалаУчета(Организация) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат ДатаНачалаУчетаПоУмолчанию();
	КонецЕсли;
	
	МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
	МенеджерЗаписиРегистра.Организация = Организация;
	МенеджерЗаписиРегистра.Прочитать();
	Если МенеджерЗаписиРегистра.Выбран() Тогда
		Возврат МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков;
	Иначе
		ДатаНачалаУчета = ОпределитьДатуНачалаУчета(Организация);
		УстановитьДатуНачалаУчета(Организация, ДатаНачалаУчета);
		Возврат ПолучитьДатуНачалаУчета(Организация);
	КонецЕсли;
	
КонецФункции

Функция УстановитьДатуНачалаУчета(Организация, ДатаНачалаУчета) Экспорт
	
	МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
	МенеджерЗаписиРегистра.Организация = Организация;
	МенеджерЗаписиРегистра.Прочитать();
	Если НЕ МенеджерЗаписиРегистра.Выбран() Тогда
		МенеджерЗаписиРегистра.Организация = Организация;
	КонецЕсли;
	МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков = ДатаНачалаУчета;
	
	Если ПолучитьКоличествоДокументовВводаОстатков(Организация) > 0 Тогда
		Если Не УчетнаяПолитика.Существует(Организация, ДатаНачалаУчета) Тогда
			СоздатьЗаписьУчетнойПолитики(Организация, ДатаНачалаУчета);
		КонецЕсли;
		
		Если Не ПерезаписатьДокументыНаНовуюДату(Организация, ДатаНачалаУчета) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	МенеджерЗаписиРегистра.Записать();
	
	Возврат Истина;
	
КонецФункции

Функция ОпределитьДатуНачалаУчета(Организация)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаРегистратора
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|ГДЕ
	|	ДанныеПервичныхДокументов.Организация = &Организация
	|	И ДанныеПервичныхДокументов.ДатаРегистратора < &ТекущаяДата
	|	И НЕ ДанныеПервичныхДокументов.Документ ССЫЛКА Документ.ВводНачальныхОстатков
	|			И НЕ ДанныеПервичныхДокументов.Документ ССЫЛКА Документ.ДокументРасчетовСКонтрагентом
	|			И НЕ ДанныеПервичныхДокументов.Документ ССЫЛКА Документ.Партия
	|			И НЕ ДанныеПервичныхДокументов.Документ ССЫЛКА Документ.ПартияМатериаловВЭксплуатации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРегистратора";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДатаПервогоРегистратора    = Выборка.ДатаРегистратора;
		ДатаВводаНачальныхОстатков = КонецМесяца(ДобавитьМесяц(ДатаПервогоРегистратора,-1));
	Иначе
		ДатаВводаНачальныхОстатков = ДатаНачалаУчетаПоУмолчанию();
	КонецЕсли;
	
	Возврат ДатаВводаНачальныхОстатков;
	
КонецФункции

Функция ДатаНачалаУчетаПоУмолчанию()
	
	Возврат КонецМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(),-1));
	
КонецФункции

Процедура СоздатьЗаписьУчетнойПолитики(Организация, ДатаНачалаУчета)
	
	ДатаНовойУчетнойПолитики = ПолучитьДатуУчетнойПолитики(ДатаНачалаУчета);
	
	ДатаДействующейУчетнойПолитики = ПолучитьДатуУчетнойПолитики(ПолучитьДатуНачалаУчета(Организация));
	ДействующаяУчетнаяПолитика = ПолучитьКлючЗаписиУчетнойПолитики(Организация, ДатаДействующейУчетнойПолитики);
	
	Если ДействующаяУчетнаяПолитика.Период <= ДатаНовойУчетнойПолитики Тогда
		Возврат;
	Иначе
		НастройкиУчета.СоздатьЗаписьУчетнойПолитикиНаНовуюДату(
			Организация, ДействующаяУчетнаяПолитика.Период, ДатаНовойУчетнойПолитики);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДатуУчетнойПолитики(ДатаВводаОстатков)
	
	Возврат ДатаВводаОстатков + 86400;
	
КонецФункции

Функция ПолучитьКлючЗаписиУчетнойПолитики(Организация, ДатаНачалаУчета)
	
	Возврат НастройкиУчета.КлючЗаписиДействующейУчетнойПолитики("УчетнаяПолитика", Организация, ДатаНачалаУчета);
	
КонецФункции

Функция ПолучитьКоличествоДокументовВводаОстатков(Организация) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат 0;
	КонецЕсли;
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("Организация", Организация);
	ЗапросПоДокументам.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(ВводНачальныхОстатков.Ссылка) КАК Документов
	|ИЗ
	|	Документ.ВводНачальныхОстатков КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Организация = &Организация
	|	И ВводНачальныхОстатков.ОтражатьВБухгалтерскомУчете
	|	И ВводНачальныхОстатков.ОтражатьВНалоговомУчете
	|	И ВводНачальныхОстатков.ОтражатьПоСпециальнымРегистрам
	|	И ВводНачальныхОстатков.Проведен";

	РезультатЗапроса = ЗапросПоДокументам.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Документов;
	КонецЕсли;

КонецФункции

Функция ПерезаписатьДокументыНаНовуюДату(Организация, ДатаНачалаУчета)
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("Организация", Организация);
	ЗапросПоДокументам.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВводНачальныхОстатков.Ссылка,
	|	ВводНачальныхОстатков.Организация
	|ИЗ
	|	Документ.ВводНачальныхОстатков КАК ВводНачальныхОстатков
	|ГДЕ
	|	ВводНачальныхОстатков.Организация = &Организация
	|	И ВводНачальныхОстатков.ОтражатьВБухгалтерскомУчете = ИСТИНА
	|	И ВводНачальныхОстатков.ОтражатьВНалоговомУчете = ИСТИНА
	|	И ВводНачальныхОстатков.ОтражатьПоСпециальнымРегистрам = ИСТИНА";
	
	РезультатЗапроса = ЗапросПоДокументам.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Попытка
		
		НачатьТранзакцию();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Дата = ДатаНачалаУчета;
			Если ДокументОбъект.Проведен Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Иначе
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись, РежимПроведенияДокумента.Неоперативный);
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru='Не удалось изменить дату ввода остатков по причине: '");
		ТекстСообщения = ТекстСообщения + Символы.ПС + ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеОбработчики

Процедура СобратьСтруктуруТаблиц(Таблица, ИмяТаблицы, СтруктураТаблиц) Экспорт
	
	СтруктураТаблиц.Добавить(ОписаниеТаблицы(Таблица.Выгрузить()), ИмяТаблицы);
	
КонецПроцедуры

Функция ОписаниеТаблицы(Таблица)
	
	СтруктураКолонок = Новый Структура;
	Для Каждого КолонкаТаблицы ИЗ Таблица.Колонки Цикл
		СтруктураКолонок.Вставить(КолонкаТаблицы.Имя, КолонкаТаблицы.Имя);
	КонецЦикла;
	
	Возврат СтруктураКолонок;
	
КонецФункции

Процедура УстановитьСпособОтраженияРасходовПоАмортизации(ПараметрыСтроки, ИмяРеквизита) Экспорт
	
	ОсновнойСчетУчетаЗатрат = УчетнаяПолитика.ОсновнойСчетУчетаЗатрат(ПараметрыСтроки.Организация, ПараметрыСтроки.ДатаВводаОстатков + 86400);
	Если НЕ ЗначениеЗаполнено(ОсновнойСчетУчетаЗатрат) Тогда
		ОсновнойСчетУчетаЗатрат = ПланыСчетов.Хозрасчетный.ОсновнойСчет("Затраты");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетЗатрат", ОсновнойСчетУчетаЗатрат);
	Запрос.УстановитьПараметр("Организация", ПараметрыСтроки.Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка.Организация = &Организация
	|			ТОГДА 0
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 1
	|	КОНЕЦ КАК Приоритет,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка.Код КАК Код,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
	|ГДЕ
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат = &СчетЗатрат
	|	И (СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка.Организация = &Организация
	|			ИЛИ СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	Код,
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СпособОтраженияРасходовПоАмортизации = Выборка.Ссылка;
	Иначе
		СпособНачисленияАмортизации = Справочники.СпособыОтраженияРасходовПоАмортизации.СоздатьЭлемент();
		СпособНачисленияАмортизации.Наименование         = "Амортизация (счет " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнойСчетУчетаЗатрат, "Код")+ ")";
		ОтражениеНачисленияАмортизацииВУчете             = СпособНачисленияАмортизации.Способы.Добавить();
		ОтражениеНачисленияАмортизацииВУчете.СчетЗатрат  = ОсновнойСчетУчетаЗатрат;
		ОтражениеНачисленияАмортизацииВУчете.Коэффициент = 1;
		СпособНачисленияАмортизации.Записать();
		СпособОтраженияРасходовПоАмортизации = СпособНачисленияАмортизации.Ссылка;
	КонецЕсли;
	
	ПараметрыСтроки[ИмяРеквизита] = СпособОтраженияРасходовПоАмортизации;
	
КонецПроцедуры

Функция ПолучитьДокумент(Контрагент ,ДоговорКонтрагента, СтруктураПараметровДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",        СтруктураПараметровДокументов.Организация);
	Запрос.УстановитьПараметр("Дата",               КонецДня(СтруктураПараметровДокументов.Дата));
	Запрос.УстановитьПараметр("Контрагент",         Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДокументРасчетовСКонтрагентом.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом
	|ГДЕ
	|	ДокументРасчетовСКонтрагентом.Организация = &Организация
	|	И ДокументРасчетовСКонтрагентом.Контрагент = &Контрагент
	|	И ДокументРасчетовСКонтрагентом.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ДокументРасчетовСКонтрагентом.Дата < &Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		НовыйДокумент = Документы.ДокументРасчетовСКонтрагентом.СоздатьДокумент();
		НовыйДокумент.Организация        = СтруктураПараметровДокументов.Организация;
		НовыйДокумент.Дата               = НачалоДня(СтруктураПараметровДокументов.Дата);
		НовыйДокумент.Контрагент         = Контрагент;
		НовыйДокумент.ДоговорКонтрагента = ДоговорКонтрагента;
		НовыйДокумент.ВалютаДокумента    = ДоговорКонтрагента.ВалютаВзаиморасчетов;
		НовыйДокумент.Записать();
		Возврат НовыйДокумент.Ссылка;
	КонецЕсли;
	
КонецФункции

Процедура ПересчитатьСуммуСервер(ПараметрыСтроки, ИмяРеквизита, ИмяРеквизитаВал) Экспорт
	
	ИмяРасчетногоРеквизита = ИмяРеквизита + "Остаток";
	
	Если ПараметрыСтроки.Валюта = ПараметрыСтроки.ВалютаРегламентированногоУчета Тогда
		ПараметрыСтроки.ВалютнаяСумма = 0;
		ПараметрыСтроки[ИмяРеквизита] = ПараметрыСтроки[ИмяРасчетногоРеквизита];
	Иначе
		ПараметрыСтроки[ИмяРеквизитаВал] = ПараметрыСтроки[ИмяРасчетногоРеквизита];
		ПараметрыСтроки[ИмяРеквизита] = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(
								ПараметрыСтроки[ИмяРасчетногоРеквизита],
								РаботаСКурсамиВалют.ПолучитьКурсВалюты(ПараметрыСтроки.Валюта, ПараметрыСтроки.ДатаВводаОстатков),
								РаботаСКурсамиВалют.ПолучитьКурсВалюты(ПараметрыСтроки.ВалютаРегламентированногоУчета, ПараметрыСтроки.ДатаВводаОстатков));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	Организация = Справочники.Организации.ПустаяСсылка();
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	Иначе
		Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
			Организация = Параметры.Ключ.Организация;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) И Обработки.ВводНачальныхОстатков.МожноИспользоватьПростуюФормуПомощника(Организация) Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаПростая";
	Иначе
		ВыбраннаяФорма = "Форма";
	КонецЕсли;

КонецПроцедуры

Функция ПеречитатьДатуНачалаУчета(Организация) Экспорт
	
	МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
	МенеджерЗаписиРегистра.Организация = Организация;
	МенеджерЗаписиРегистра.Прочитать();
	Возврат МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков;
	
КонецФункции

Процедура ОтключитьПодсказкуВводНачальныхОстатков() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Константы.ПоказыватьПомощникВНОВОтчетах.Установить(Ложь);
	
КонецПроцедуры

Функция НоваяТаблицаВводаОстатков(ИмяТаблицы) Экспорт
	
	ОбъектМетаданных = Метаданные.Обработки.ВводНачальныхОстатков;
	
	Результат = Новый ТаблицаЗначений;
	Для Каждого Реквизит Из ОбъектМетаданных.ТабличныеЧасти[ИмяТаблицы].Реквизиты Цикл
		Результат.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли