
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Организация, НачалоПериода, КонецПериода, Заголовок");
	
	Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоВиду(Перечисления.ВидыНалогов.УСН_Доходы);
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(
			СчетОрганизации, Организация,
			ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(), Истина);
	
	СписаниеСРасчетногоСчетаПредставление = НСтр("ru = 'Списание с расчетного счета'");
	РасходныйКассовыйОрдерПредставление   = НСтр("ru = 'Оплата наличными'");
	
	Список.Параметры.УстановитьЗначениеПараметра("Организация",                           Организация);
	Список.Параметры.УстановитьЗначениеПараметра("НачалоПериода",                         НачалоПериода);
	Список.Параметры.УстановитьЗначениеПараметра("КонецПериода",                          КонецПериода);
	Список.Параметры.УстановитьЗначениеПараметра("Налог",                                 Налог);
	Список.Параметры.УстановитьЗначениеПараметра("СчетОрганизации",                       СчетОрганизации);
	Список.Параметры.УстановитьЗначениеПараметра("СписаниеСРасчетногоСчетаПредставление", СписаниеСРасчетногоСчетаПредставление);
	Список.Параметры.УстановитьЗначениеПараметра("РасходныйКассовыйОрдерПредставление",   РасходныйКассовыйОрдерПредставление);
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьПоказателиРасчетаУСН" И Источник <> ЭтотОбъект
	    И Не ЗначениеЗаполнено(Параметр) Тогда
		
		Элементы.Список.Обновить();
		ОбновитьИтоги();
		СписокПриАктивизацииСтроки(Элементы.Список);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьОперацию(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДоступностьКомандыУдалить = (ДанныеСтроки.СтатусДокумента = 1);
	Элементы.УдалитьОперацию.Доступность = ДоступностьКомандыУдалить;
	Элементы.СписокКонтекстноеМенюУдалитьОперацию.Доступность = ДоступностьКомандыУдалить;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого СтрокаСписка Из Строки Цикл
		
		НалоговыйПериод = СтрокаСписка.Значение.Данные.НалоговыйПериод;
		СтрокаСписка.Значение.Данные["НалоговыйПериодПредставление"]
			= УчетУСНКлиентСервер.ПредставлениеПериодаУплатыНалога(НалоговыйПериод);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьОплатуЧерезБанк(Команда)
	
	ПомощникиПоУплатеНалоговИВзносовКлиент.СоздатьОплатуЧерезБанк(
		Организация,
		КонецПериода,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПредопределенноеЗначение("Перечисление.ВидыНалогов.УСН_Доходы")),
		ПредопределенноеЗначение("Перечисление.ВидыПлатежейВГосБюджет.Налог"),
		ПредопределенноеЗначение("Справочник.БанковскиеСчета.ПустаяСсылка"));
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОплатуНаличными(Команда)
	
	ПомощникиПоУплатеНалоговИВзносовКлиент.СоздатьОплатуНаличными(
		Организация,
		КонецПериода,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПредопределенноеЗначение("Перечисление.ВидыНалогов.УСН_Доходы")),
		ПредопределенноеЗначение("Перечисление.ВидыПлатежейВГосБюджет.Налог"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОперацию(Команда)
	
	ДанныеСтроки = ОбщегоНазначенияБПКлиент.ТекущиеДанныеДинамическогоСписка(Элементы.Список);
	
	Если ДанныеСтроки <> Неопределено Тогда
		ОткрытьОперацию(ДанныеСтроки.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОперацию(Команда)
	
	ДанныеСтроки = Элементы.Список.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = СтрШаблон(НСтр("ru = 'Удалить %1 №%2 от %3?'"),
		ДанныеСтроки.Тип,
		ДанныеСтроки.Номер,
		Формат(ДанныеСтроки.Дата, "ДЛФ=D"));
	
	ДополнительныеПараметры = Новый Структура("Ссылка", ДанныеСтроки.Ссылка);
	Оповещение = Новый ОписаниеОповещения("УдалитьОперациюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОперациюЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УдалитьДокумент(ДополнительныеПараметры.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УдалитьДокумент(Ссылка)
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	ДокументОбъект.УстановитьПометкуУдаления(Истина);
	
	Элементы.Список.Обновить();
	ОбновитьИтоги();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИтоги()
	
	ИтогиДинамическогоСписка = ОбщегоНазначенияБП.ИтогиДинамическогоСписка(Список, "Сумма");
	ИтогиСумма = ИтогиДинамическогоСписка.Сумма;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОперацию(Операция)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Операция);
	ПараметрыФормы.Вставить("НалоговыйПериод", КонецПериода);
	
	ОткрытьФорму(ИмяФормыДокумента(Операция), ПараметрыФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяФормыДокумента(Ссылка)
	
	Возврат СтрШаблон("Документ.%1.ФормаОбъекта", Ссылка.Метаданные().Имя);
	
КонецФункции

#КонецОбласти