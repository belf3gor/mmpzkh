&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимСопоставленияПоНакладной = Параметры.РежимСопоставленияПоНакладной;
	Если Параметры.ТоварноТранспортныеНакладные <> Неопределено Тогда
		ТоварноТранспортныеНакладные.ЗагрузитьЗначения(Параметры.ТоварноТранспортныеНакладные);
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТолькоНеСопоставленнаяНоменклатура = Истина;
	ТолькоНеСопоставленныеОрганизации  = Истина;
	
	УстановитьОтборТовары();
	УстановитьОтборОрганизации();
	
	СобытияФормЕГАИСПереопределяемый.УстановитьПараметрыВыбораНоменклатуры(ЭтотОбъект);
	
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект, "ТоварыХарактеристика");
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект, "ТоварыСерия");
	
	Если ЭтоАдресВременногоХранилища(Параметры.Товары)
		Или ЭтоАдресВременногоХранилища(Параметры.ОрганизацииЕГАИС) Тогда
		
		Если ЭтоАдресВременногоХранилища(Параметры.Товары) Тогда
			Товары = ПолучитьИзВременногоХранилища(Параметры.Товары);
		Иначе
			Товары = Неопределено;
		КонецЕсли;
		
		Если ЭтоАдресВременногоХранилища(Параметры.ОрганизацииЕГАИС) Тогда
			ОрганизацииЕГАИС = ПолучитьИзВременногоХранилища(Параметры.ОрганизацииЕГАИС);
		Иначе
			ОрганизацииЕГАИС = Неопределено;
		КонецЕсли;
		
		Если ОрганизацииЕГАИС = Неопределено И Товары = Неопределено Тогда
			ВызватьИсключение НСтр("ru='Не переданы входящие параметры.'");
		КонецЕсли;
		
		ЗаполнитьТаблицыДляСопоставленияПоВходящимДанным(
			Товары,
			ОрганизацииЕГАИС);
		
	ИначеЕсли ТоварноТранспортныеНакладные.Количество() > 0 Тогда
		
		ЗаполнитьТаблицыДляСопоставленияПоТТН();
		
	Иначе
		
		ВызватьИсключение НСтр("ru='Обработка предназначена только для контекстного открытия из форм конфигурации.'");
		
	КонецЕсли;
	
	ДанныеДляСопоставления = ЕстьДанныеДляСопоставления();
	
	Если ДанныеДляСопоставления.ЕстьНесопоставленныеОрганизации
		И Не ДанныеДляСопоставления.ЕстьНесопоставленныеТовары Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКлассификаторОрганизацийЕГАИС;
	ИначеЕсли Не ДанныеДляСопоставления.ЕстьНесопоставленныеОрганизации
		И ДанныеДляСопоставления.ЕстьНесопоставленныеТовары Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКлассификаторАлкогольнойПродукцииЕГАИС;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКлассификаторОрганизацийЕГАИС;
	КонецЕсли;
	Если Объект.Организации.Количество() = 0
		И Объект.Товары.Количество() > 0 Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.Страницы.ТекущаяСтраница    = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКлассификаторАлкогольнойПродукцииЕГАИС;
	ИначеЕсли Объект.Организации.Количество() > 0
		И Объект.Товары.Количество() = 0 Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.Страницы.ТекущаяСтраница    = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКлассификаторОрганизацийЕГАИС;
	ИначеЕсли Объект.Организации.Количество() = 0
		И Объект.Товары.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru='Нет данных для сопоставления.'");
	КонецЕсли;
	
	ОбновитьЗаголовкиСтраниц();
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС) Тогда
		ТолькоПросмотр = Истина;
		Элементы.Продолжить.Доступность                                        = Ложь;
		Элементы.ДекорацияНедостаточноПравНаИзменениеКлассификаторов.Видимость = Истина;
	КонецЕсли;
	
	ИспользоватьТорговыеОбъектыКонтрагентов = ИнтеграцияЕГАИС.ИспользоватьТорговыеОбъектыКонтрагентов();
	ИнтеграцияЕГАИСПереопределяемый.ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(
		Неопределено,
		Неопределено,
		СторонняяОрганизацияЗначениеПоУмолчанию,
		СтороннийТорговыйОбъектЗначениеПоУмолчанию);
	
	МассивТиповСторонняяОрганизация = Новый Массив;
	МассивТиповСторонняяОрганизация.Добавить(ТипЗнч(СторонняяОрганизацияЗначениеПоУмолчанию));
	Элементы.ОрганизацииКонтрагент.ОграничениеТипа = Новый ОписаниеТипов(МассивТиповСторонняяОрганизация);
	
	МассивТиповСтороннийТорговыйОбъект = Новый Массив;
	МассивТиповСтороннийТорговыйОбъект.Добавить(ТипЗнч(СтороннийТорговыйОбъектЗначениеПоУмолчанию));
	Элементы.ОрганизацииТорговыйОбъект.ОграничениеТипа = Новый ОписаниеТипов(МассивТиповСтороннийТорговыйОбъект);
	
	Если СтороннийТорговыйОбъектЗначениеПоУмолчанию = Неопределено Тогда
		Элементы.ОрганизацииТорговыйОбъект.Видимость = Ложь;
	Иначе
		Элементы.ОрганизацииТорговыйОбъект.Видимость = ИнтеграцияЕГАИС.ИспользоватьТорговыеОбъектыКонтрагентов();
	КонецЕсли;
	
	ПараметрыУказанияСерий = ИнтеграцияИС.ПараметрыУказанияСерийФормыОбъекта(Объект, Обработки.СопоставлениеКлассификаторовЕГАИС);
	ИнтеграцияИСПереопределяемый.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	
	СобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка) 
	
	Если НЕ ПринудительноЗакрытьФорму И Модифицированность Тогда
		
		Отказ = Истина;
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Сохранить'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Не сохранять'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru = 'Введенные данные не сохранены, сохранить?'"),
			СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), ВыбранноеЗначение, ИсточникВыбора);
	
	СобытияФормИСКлиентПереопределяемый.ОбработкаВыбораКонтрагента(
		Новый ОписаниеОповещения("ПриВыбореКонтрагента", ЭтотОбъект), ВыбранноеЗначение, ИсточникВыбора);
		
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораТорговогоОбъекта(
		Новый ОписаниеОповещения("ПриВыбореТорговогоОбъекта", ЭтотОбъект), ВыбранноеЗначение, ИсточникВыбора);
		
		
	Если Элементы.Товары.ТекущиеДанные <> Неопределено Тогда
		ТекущаяСерия = Элементы.Товары.ТекущиеДанные.Серия;
	КонецЕсли;
		
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораСерии(
		ЭтаФорма, ПараметрыУказанияСерий, ВыбранноеЗначение, ИсточникВыбора);
		
	Если Элементы.Товары.ТекущиеДанные <> Неопределено И
		Элементы.Товары.ТекущиеДанные.Серия <> ТекущаяСерия Тогда
		Элементы.Товары.ТекущиеДанные.ЕстьИзменения = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), НовыйОбъект, Источник);
	
	СобытияФормИСКлиентПереопределяемый.ОбработкаВыбораКонтрагента(
		Новый ОписаниеОповещения("ПриВыбореКонтрагента", ЭтотОбъект), НовыйОбъект, Источник);
		
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораТорговогоОбъекта(
		Новый ОписаниеОповещения("ПриВыбореТорговогоОбъекта", ЭтотОбъект), НовыйОбъект, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_КлассификаторОрганизацийЕГАИС" Тогда
		Если ЗначениеЗаполнено(Параметр)
			И ТипЗнч(Параметр) = Тип("СправочникСсылка.КлассификаторОрганизацийЕГАИС") Тогда
			
			ОбновитьДанныеОрганизации(Параметр);
			
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменениеСопоставленияАлкогольнойПродукцииЕГАИС" Тогда
		
		Если Параметр.Ссылка <> Неопределено Тогда
			ОбновитьДанныеПродукции(Параметр.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ШаблонСообщения = НСтр("ru='Не заполнено поле ""Характеристика"" в строке %1 списка ""Товары"".'");
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) И СтрокаТЧ.ХарактеристикиИспользуются И Не ЗначениеЗаполнено(СтрокаТЧ.Характеристика) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаТЧ.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.Товары", СтрокаТЧ.НомерСтроки, "Характеристика"),
				,
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТолькоНеСопоставленныеОрганизацииПриИзменении(Элемент)
	
	УстановитьОтборОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоНеСопоставленныеТоварыПриИзменении(Элемент)
	
	УстановитьОтборТовары();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиОрганизации

&НаКлиенте
Процедура ОрганизацииПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент = Элементы.ОрганизацииТорговыйОбъект
		Или Элемент.ТекущийЭлемент = Элементы.ОрганизацииКонтрагент Тогда
		
		ЗаполнитьСпискиВыбораОрганизации(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ОрганизацииОрганизацияЕГАИС Тогда
		
		ПараметрыФормы = Новый Структура(
			"Ключ",
			Элементы.Организации.ТекущиеДанные.ОрганизацияЕГАИС);
		
		ОткрытьФорму("Справочник.КлассификаторОрганизацийЕГАИС.ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииКонтрагентПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриВыбореКонтрагента(ТекущиеДанные.Контрагент, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииТорговыйОбъектПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриВыбореТорговогоОбъекта(ТекущиеДанные.ТорговыйОбъект, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииТорговыйОбъектОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриВыбореТорговогоОбъекта(ТекущиеДанные.ТорговыйОбъект, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииКонтрагентОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриВыбореКонтрагента(ТекущиеДанные.Контрагент, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииКонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("ИНН",                     ТекущиеДанные.ИНН);
	Реквизиты.Вставить("КПП",                     ТекущиеДанные.КПП);
	Реквизиты.Вставить("Наименование",            ТекущиеДанные.НаименованиеПолное);
	Реквизиты.Вставить("СокращенноеНаименование", ТекущиеДанные.Наименование);
	Реквизиты.Вставить("ТорговыйОбъект",          ТекущиеДанные.ТорговыйОбъект);
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораКонтрагента(
		ЭтотОбъект,
		Реквизиты,
		Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииКонтрагентСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	ПараметрыСозданияКонтрагента = ИнтеграцияЕГАИСКлиент.ПараметрыСозданияКонтрагента();
	ДанныеКонтрагента = ИнтеграцияЕГАИСКлиент.ПараметрыСозданияКонтрагента();
	Для Каждого КлючИЗначение Из ПараметрыСозданияКонтрагента Цикл
		ДанныеКонтрагента[КлючИЗначение.Ключ] = ТекущиеДанные[КлючИЗначение.Значение];
	КонецЦикла;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияКонтрагента(
		ЭтотОбъект,
		ДанныеКонтрагента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииТорговыйОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("ИНН",                     ТекущиеДанные.ИНН);
	Реквизиты.Вставить("КПП",                     ТекущиеДанные.КПП);
	Реквизиты.Вставить("Наименование",            ТекущиеДанные.НаименованиеПолное);
	Реквизиты.Вставить("СокращенноеНаименование", ТекущиеДанные.Наименование);
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораТорговогоОбъекта(
		ЭтотОбъект,
		Реквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииТорговыйОбъектСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("ИНН",                     ТекущиеДанные.ИНН);
	Реквизиты.Вставить("КПП",                     ТекущиеДанные.КПП);
	Реквизиты.Вставить("Наименование",            ТекущиеДанные.НаименованиеПолное);
	Реквизиты.Вставить("СокращенноеНаименование", ТекущиеДанные.Наименование);
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияТорговогоОбъекта(
		ЭтотОбъект,
		Реквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиТовары

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент = Элементы.ТоварыНоменклатура Тогда
		
		ЗаполнитьСпискиВыбораНоменклатуры(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если Поле = Элементы.ТоварыАлкогольнаяПродукция Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.АлкогольнаяПродукция);
		ОткрытьФорму("Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли ТоварноТранспортныеНакладные.Количество() = 0
		И Поле = Элементы.ТоварыНоменклатура Тогда
		
		СписокВыбораНоменклатура = Новый Массив;
		НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(Новый Структура("АлкогольнаяПродукция", ТекущиеДанные.АлкогольнаяПродукция));
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			СписокВыбораНоменклатура.Добавить(СтрокаТЧ.Номенклатура);
		КонецЦикла;
		
		СтандартнаяОбработка = Ложь;
		ИнтеграцияЕГАИСКлиент.ОткрытьФормуСопоставленияАлкогольнойПродукции(
			ТекущиеДанные.АлкогольнаяПродукция,
			ЭтотОбъект,
			СписокВыбораНоменклатура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ПриИзмененииНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(
		ЭтотОбъект,
		ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияНоменклатуры(
		ЭтотОбъект,
		ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
	ТекущиеДанные.ЕстьИзменения = Истина;
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаСоздание(Элемент, СтандартнаяОбработка)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ХарактеристикаСоздание(ЭтотОбъект, Элементы.Товары.ТекущаяСтрока, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСерияПриИзменении(Элемент)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ПриИзмененииСерии(ЭтаФорма, 
		ПараметрыУказанияСерий, 
		Элементы.Товары.ТекущиеДанные,
		КэшированныеЗначения);
	
	Элементы.Товары.ТекущиеДанные.ЕстьИзменения = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьПодборСерий(Элемент.ТекстРедактирования, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Отмена(Команда)
	
	ПринудительноЗакрытьФорму = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПродолжить(Команда)
	
	КомандаЗаписатьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСопоставленияНоменклатуры(Команда)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбораНоменклатура = Новый Массив;
	НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(Новый Структура("АлкогольнаяПродукция", ТекущиеДанные.АлкогольнаяПродукция));
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		СписокВыбораНоменклатура.Добавить(СтрокаТЧ.Номенклатура);
	КонецЦикла;
	
	ИнтеграцияЕГАИСКлиент.ОткрытьФормуСопоставленияАлкогольнойПродукции(
		ТекущиеДанные.АлкогольнаяПродукция,
		ЭтотОбъект,
		СписокВыбораНоменклатура);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ГрупповоеСопоставлениеНоменклатуры(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьНесопоставленные_Завершение", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.СопоставлениеДанныхЕГАИС.Форма.СопоставлениеНоменклатуры", Новый Структура("ТаблицаТовары", Объект.Товары),ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область Серии

&НаКлиенте
Процедура ОткрытьПодборСерий(Текст = "", СтандартнаяОбработка)
	
	ИнтеграцияИСКлиент.ОткрытьПодборСерий(
		ЭтаФорма, ПараметрыУказанияСерий,Текст, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормыУказанияСерий = ДополнительныеПараметры.ПараметрыФормыУказанияСерий;
	ЗначениеВозврата = Результат;
	
	Если ЗначениеВозврата <> Неопределено Тогда
		ОбработатьУказаниеСерийНаСервере(ПараметрыФормыУказанияСерий, КэшированныеЗначения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьУказаниеСерийНаСервере(ПараметрыФормыУказанияСерий, КэшированныеЗначения)
	
	ИнтеграцияИСПереопределяемый.ОбработатьУказаниеСерий(Объект,ПараметрыУказанияСерий,ПараметрыФормыУказанияСерий,КэшированныеЗначения);
	ИнтеграцияИСПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, Объект.Товары);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЕстьДанныеДляСопоставления()
	
	ПараметрыОтбора = Новый Структура("Сопоставлено", Ложь);
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьНесопоставленныеОрганизации", Объект.Организации.НайтиСтроки(ПараметрыОтбора).Количество() > 0);
	Результат.Вставить("ЕстьНесопоставленныеТовары",      Объект.Товары.НайтиСтроки(ПараметрыОтбора).Количество() > 0);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект);
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеСерийНоменклатуры(ЭтотОбъект);
	
	// Контрагент
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОрганизацииКонтрагент.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Организации.Контрагент");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаГосИС);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Не сопоставлено>'"));
	
	// ТорговыйОбъект
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОрганизацииТорговыйОбъект.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Организации.ТорговыйОбъект");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаГосИС);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Не сопоставлено>'"));
	
	// Номенклатура
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставлениеНоменклатура"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыХарактеристика.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Характеристика");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ХарактеристикиИспользуются");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставлениеХарактеристика"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставленоКоличество");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Если ТоварноТранспортныеНакладные.Количество() = 0 Тогда
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветГиперссылкиГосИС);
	Иначе
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаГосИС);
	КонецЕсли;
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставленоКоличество");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаГосИС);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыХарактеристика.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Характеристика");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ХарактеристикиИспользуются");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СопоставленоКоличество");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Если ТоварноТранспортныеНакладные.Количество() = 0 Тогда
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаГосИС);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыДляСопоставленияПоТТН()
	
	#Область Организации
	
	ТекстЗапроса = "";
	ИнтеграцияЕГАИСПереопределяемый.ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоТТН(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокТТН", ТоварноТранспортныеНакладные);
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	КоличествоЗапросов = Результат.ВГраница();
	
	ТаблицаНеНайденных = Результат[КоличествоЗапросов - 0].Выгрузить();
	ТаблицаНайденных   = Результат[КоличествоЗапросов - 1].Выгрузить();
	ТаблицаОрганизаций = Результат[КоличествоЗапросов - 2].Выгрузить();
	
	Объект.Организации.Загрузить(ТаблицаОрганизаций);
	
	Для Каждого СтрокаТЧ Из ТаблицаНеНайденных Цикл
		
		НайденныйКонтрагент = ИнтеграцияЕГАИС.ЗначениеОпределяемогоТипаПоНаименованию("КонтрагентГосИС", СтрокаТЧ.НаименованиеЕГАИС, Ложь);
		
		Если Не НайденныйКонтрагент.Пустая() Тогда
			
			НоваяСтрока = ТаблицаНайденных.Добавить();
			НоваяСтрока.ОрганизацияЕГАИС = СтрокаТЧ.ОрганизацияЕГАИС;
			НоваяСтрока.Контрагент       = НайденныйКонтрагент;
			НоваяСтрока.ТорговыйОбъект   = ИнтеграцияЕГАИСВызовСервера.ТорговыйОбъектКонтрагента(НайденныйКонтрагент);
			
		Иначе
			
			УпрощенноеНаименование = СтрЗаменить(СтрокаТЧ.НаименованиеЕГАИС,"""","");
			
			Если Лев(УпрощенноеНаименование, 2) = "АО" Или Лев(УпрощенноеНаименование, 2) = "СП" Или Лев(УпрощенноеНаименование, 2) = "НП" Тогда
				УпрощенноеНаименование = Прав(УпрощенноеНаименование, СтрДлина(УпрощенноеНаименование) - 3);
			ИначеЕсли Лев(УпрощенноеНаименование, 3) = "ОАО" Или Лев(УпрощенноеНаименование,3) = "ЗАО" Или Лев(УпрощенноеНаименование, 3) = "ООО" Тогда
				УпрощенноеНаименование = Прав(УпрощенноеНаименование, СтрДлина(УпрощенноеНаименование) - 4);
			КонецЕсли;
			
			НайденныйКонтрагент = ИнтеграцияЕГАИС.ЗначениеОпределяемогоТипаПоНаименованию("КонтрагентГосИС", УпрощенноеНаименование, Ложь);
			
			Если НЕ НайденныйКонтрагент.Пустая() Тогда
				НоваяСтрока = ТаблицаНайденных.Добавить();
				НоваяСтрока.ОрганизацияЕГАИС = СтрокаТЧ.ОрганизацияЕГАИС;
				НоваяСтрока.Контрагент       = НайденныйКонтрагент;
				НоваяСтрока.ТорговыйОбъект   = ИнтеграцияЕГАИСВызовСервера.ТорговыйОбъектКонтрагента(НайденныйКонтрагент);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОрганизацииДляВыбора.Загрузить(ТаблицаНайденных);
	
	#КонецОбласти
	
	#Область Номенклатура
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "";
	ИнтеграцияЕГАИСПереопределяемый.ПриЗаполненииТекстаЗапросаСопоставленияНоменклатурыПоТТН(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("СписокТТН", ТоварноТранспортныеНакладные);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ОбработатьРезультатЗапросаПоТоварам(Результат, МенеджерВременныхТаблиц);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыДляСопоставленияПоВходящимДанным(Товары = Неопределено, ОрганизацииЕГАИС = Неопределено)
	
	Если ОрганизацииЕГАИС <> Неопределено Тогда
		#Область Организации
		
		ТекстЗапроса = "";
		ИнтеграцияЕГАИСПереопределяемый.ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоВходящимДанным(ТекстЗапроса);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Товары",           Товары);
		Запрос.УстановитьПараметр("ОрганизацииЕГАИС", ОрганизацииЕГАИС);
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.ВыполнитьПакет();
		
		КоличествоЗапросов = Результат.ВГраница();
		
		ТаблицаНеНайденных = Результат[КоличествоЗапросов - 0].Выгрузить();
		ТаблицаНайденных   = Результат[КоличествоЗапросов - 1].Выгрузить();
		ТаблицаОрганизаций = Результат[КоличествоЗапросов - 2].Выгрузить();
		
		Объект.Организации.Загрузить(ТаблицаОрганизаций);
		
		Для Каждого СтрокаТЧ Из ТаблицаНеНайденных Цикл
			
			НайденныйКонтрагент = ИнтеграцияЕГАИС.ЗначениеОпределяемогоТипаПоНаименованию("КонтрагентГосИС", СтрокаТЧ.НаименованиеЕГАИС, Ложь);
			
			Если Не НайденныйКонтрагент.Пустая() Тогда
				
				НоваяСтрока = ТаблицаНайденных.Добавить();
				НоваяСтрока.ОрганизацияЕГАИС = СтрокаТЧ.ОрганизацияЕГАИС;
				НоваяСтрока.Контрагент       = НайденныйКонтрагент;
				НоваяСтрока.ТорговыйОбъект   = ИнтеграцияЕГАИСВызовСервера.ТорговыйОбъектКонтрагента(НайденныйКонтрагент);
				
			Иначе
				
				УпрощенноеНаименование = СтрЗаменить(СтрокаТЧ.НаименованиеЕГАИС,"""","");
				
				Если Лев(УпрощенноеНаименование, 2) = "АО" Или Лев(УпрощенноеНаименование, 2) = "СП" Или Лев(УпрощенноеНаименование, 2) = "НП" Тогда
					УпрощенноеНаименование = Прав(УпрощенноеНаименование, СтрДлина(УпрощенноеНаименование) - 3);
				ИначеЕсли Лев(УпрощенноеНаименование, 3) = "ОАО" Или Лев(УпрощенноеНаименование,3) = "ЗАО" Или Лев(УпрощенноеНаименование, 3) = "ООО" Тогда
					УпрощенноеНаименование = Прав(УпрощенноеНаименование, СтрДлина(УпрощенноеНаименование) - 4);
				КонецЕсли;
				
				НайденныйКонтрагент = ИнтеграцияЕГАИС.ЗначениеОпределяемогоТипаПоНаименованию("КонтрагентГосИС", УпрощенноеНаименование, Ложь);
				
				Если НЕ НайденныйКонтрагент.Пустая() Тогда
					НоваяСтрока = ТаблицаНайденных.Добавить();
					НоваяСтрока.ОрганизацияЕГАИС = СтрокаТЧ.ОрганизацияЕГАИС;
					НоваяСтрока.Контрагент       = НайденныйКонтрагент;
					НоваяСтрока.ТорговыйОбъект   = ИнтеграцияЕГАИСВызовСервера.ТорговыйОбъектКонтрагента(НайденныйКонтрагент);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОрганизацииДляВыбора.Загрузить(ТаблицаНайденных);
		
		#КонецОбласти
	КонецЕсли;
	
	Если Товары <> Неопределено Тогда
		#Область Номенклатура
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ТекстЗапроса = "";
		ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным(ТекстЗапроса);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("Товары", Товары);
		
		Результат = Запрос.ВыполнитьПакет();
		
		ОбработатьРезультатЗапросаПоТоварам(Результат, МенеджерВременныхТаблиц);
		
		#КонецОбласти
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатЗапросаПоТоварам(Результат, МенеджерВременныхТаблиц)
	
	КоличествоЗапросов = Результат.ВГраница();
	
	// Обработка наименований ТТН
	ТаблицаТоваровТТН = Результат[КоличествоЗапросов - 1].Выгрузить();
	МассивНаименованийТТН = ТаблицаТоваровТТН.ВыгрузитьКолонку("Наименование");
	
	СтрокаНаименований = ЗначениеВСтрокуВнутр(МассивНаименованийТТН);
	СтрокаНаименований = СтрЗаменить(СтрокаНаименований, " ", "");
	СтрокаНаименований = ВРег(СтрокаНаименований);
	
	МассивПреобразованныхНаименованийТТН = ЗначениеИзСтрокиВнутр(СтрокаНаименований);
	
	ТаблицаТоваровТТН.ЗагрузитьКолонку(МассивПреобразованныхНаименованийТТН, "Наименование");
	
	// Обработка наименований номенклатуры
	ТаблицаНоменклатуры = Результат[КоличествоЗапросов].Выгрузить();
	
	МассивНаименований = ТаблицаНоменклатуры.ВыгрузитьКолонку("Наименование");
	
	СтрокаНаименований = ЗначениеВСтрокуВнутр(МассивНаименований);
	СтрокаНаименований = СтрЗаменить(СтрокаНаименований, " ", "");
	СтрокаНаименований = ВРег(СтрокаНаименований);
	
	МассивПреобразованныхНаименованийТТН = ЗначениеИзСтрокиВнутр(СтрокаНаименований);
	
	ТаблицаНоменклатуры.ЗагрузитьКолонку(МассивПреобразованныхНаименованийТТН, "Наименование");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТОбработанныеТоварыТТН
	|ИЗ
	|	&ТоварыТТН КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТОбработаннаяНоменклатура
	|ИЗ
	|	&Номенклатура КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбработанныеТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВТОбработаннаяНоменклатура.Номенклатура      КАК Номенклатура
	|ПОМЕСТИТЬ ВТСоответствияПоНаименованию
	|ИЗ
	|	ВТОбработанныеТоварыТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбработаннаяНоменклатура КАК ВТОбработаннаяНоменклатура
	|		ПО ВТОбработанныеТоварыТТН.Наименование = ВТОбработаннаяНоменклатура.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоответствияПоНаименованию.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	втНоменклатура.Номенклатура                       КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.ВидПродукции = ЗНАЧЕНИЕ(Справочник.ВидыАлкогольнойПродукции.ПустаяСсылка)
	|				И втДанныеТТН.ВидПродукции = втНоменклатура.ВидАлкогольнойПродукции
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.ПроизводительИБ = &ПустойКонтрагент
	|				И втДанныеТТН.ПроизводительИБ = втНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.ИмпортерИБ = &ПустойКонтрагент
	|				И втДанныеТТН.ИмпортерИБ = втНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.Объем = 0 И (втДанныеТТН.Объем * 10) = втНоменклатура.ОбъемДАЛ
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.Крепость = 0 И втДанныеТТН.Крепость = втНоменклатура.Крепость
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВтКоэффициентыСоответствия
	|ИЗ
	|	ВТСоответствияПоНаименованию КАК ВТСоответствияПоНаименованию
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеТТН КАК втДанныеТТН
	|		ПО втДанныеТТН.АлкогольнаяПродукция = ВТСоответствияПоНаименованию.АлкогольнаяПродукция
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНоменклатура КАК втНоменклатура
	|		ПО ИСТИНА
	|ГДЕ
	|	ВТСоответствияПоНаименованию.Номенклатура ЕСТЬ NULL
	|	И ВЫБОР
	|		КОГДА НЕ втДанныеТТН.ВидПродукции = ЗНАЧЕНИЕ(Справочник.ВидыАлкогольнойПродукции.ПустаяСсылка) 
	|				И втДанныеТТН.ВидПродукции = втНоменклатура.ВидАлкогольнойПродукции
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.ПроизводительИБ = &ПустойКонтрагент
	|				И втДанныеТТН.ПроизводительИБ = втНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.ИмпортерИБ = &ПустойКонтрагент
	|				И втДанныеТТН.ИмпортерИБ = втНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.Объем = 0 И (втДанныеТТН.Объем * 10) = втНоменклатура.ОбъемДАЛ
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ втДанныеТТН.Крепость = 0 И втДанныеТТН.Крепость = втНоменклатура.Крепость
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДанныеТТН.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ВТДанныеТТН.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВТДанныеТТН.Количество            КАК Количество,
	|	ВТДанныеТТН.Номенклатура          КАК Номенклатура,
	|	ВТДанныеТТН.Характеристика        КАК Характеристика,
	|	ВТДанныеТТН.Серия                 КАК Серия,
	|	втДанныеТТН.Наименование          КАК Наименование,
	|	втДанныеТТН.НаименованиеПолное    КАК ПолноеНаименование,
	|	втДанныеТТН.Объем                 КАК Объем,
	|	втДанныеТТН.Крепость              КАК Крепость,
	|	втДанныеТТН.Производитель         КАК Производитель,
	|	втДанныеТТН.Импортер              КАК Импортер,
	|	втДанныеТТН.ПроизводительИБ       КАК ПроизводительИБ,
	|	втДанныеТТН.ИмпортерИБ            КАК ИмпортерИБ,
	|	втДанныеТТН.ВидПродукции          КАК ВидАлкогольнойПродукции
	|ИЗ
	|	ВТДанныеТТН КАК ВТДанныеТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПоКоэффициентам.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	НоменклатураПоКоэффициентам.Номенклатура          КАК Номенклатура,
	|	МАКСИМУМ(НоменклатураПоКоэффициентам.Коэффициент) КАК Коэффициент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТДанныеТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|		СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|		МАКСИМУМ(0)                                КАК Коэффициент
	|	ИЗ
	|		ВТДанныеТТН КАК ВТДанныеТТН
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|			ПО ВТДанныеТТН.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|	СГРУППИРОВАТЬ ПО
	|		ВТДанныеТТН.АлкогольнаяПродукция,
	|		СоответствиеНоменклатурыЕГАИС.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТСоответствияПоНаименованию.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|		ВТСоответствияПоНаименованию.Номенклатура         КАК Номенклатура,
	|		1                                                 КАК Коэффициент
	|	ИЗ
	|		ВТСоответствияПоНаименованию КАК ВТСоответствияПоНаименованию
	|	ГДЕ
	|		ВТСоответствияПоНаименованию.Номенклатура ЕСТЬ НЕ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтКоэффициентыСоответствия.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|		ВтКоэффициентыСоответствия.Номенклатура         КАК Номенклатура,
	|		ВтКоэффициентыСоответствия.Коэффициент          КАК Коэффициент
	|	ИЗ
	|		ВтКоэффициентыСоответствия КАК ВтКоэффициентыСоответствия) КАК НоменклатураПоКоэффициентам
	|	
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураПоКоэффициентам.АлкогольнаяПродукция,
	|	НоменклатураПоКоэффициентам.Номенклатура
	|	
	|УПОРЯДОЧИТЬ ПО
	|	МАКСИМУМ(НоменклатураПоКоэффициентам.Коэффициент) УБЫВ
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПустойКонтрагент = Неопределено;
	ИнтеграцияЕГАИСПереопределяемый.ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(,, ПустойКонтрагент);
	
	Запрос.УстановитьПараметр("ТоварыТТН"       , ТаблицаТоваровТТН);
	Запрос.УстановитьПараметр("Номенклатура"    , ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("ПустойКонтрагент", ПустойКонтрагент);
	
	Результат = Запрос.ВыполнитьПакет();
	
	КоличествоЗапросов = Результат.ВГраница();
	
	ТаблицаТоваров = Результат[КоличествоЗапросов - 1].Выгрузить();
	
	ТаблицаТоваров.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(15, 0));
	
	КоличествоСтрок = ТаблицаТоваров.Количество();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		ТаблицаТоваров[НомерСтроки - 1].НомерСтроки = НомерСтроки;
	КонецЦикла;
	
	Для Каждого Выборка Из ТаблицаТоваров Цикл
		
		СтрокаТЧ = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
		
		СтрокаТЧ.СопоставленоКоличество = Выборка.Количество;
		
		Если Выборка.Количество > 0 Тогда
			СтрокаТЧ.Сопоставлено = ЗначениеЗаполнено(СтрокаТЧ.Номенклатура);
			СтрокаТЧ.СопоставлениеНоменклатура   = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), Выборка.Количество);
			СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
		Иначе
			СтрокаТЧ.Сопоставлено                = Ложь;
			СтрокаТЧ.СопоставлениеНоменклатура   = НСтр("ru = '<Не сопоставлено>'");
			СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
		
	КонецЦикла;
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, Объект.Товары);
	
	ТаблицаНайденных = Результат[КоличествоЗапросов].Выгрузить();
	
	НоменклатураДляВыбора.Загрузить(ТаблицаНайденных);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбораОрганизации(ТекущаяСтрока)
	
	СписокВыбораКонтрагент = Элементы.ОрганизацииКонтрагент.СписокВыбора;
	СписокВыбораКонтрагент.Очистить();
	
	СписокВыбораТорговыйОбъект = Элементы.ОрганизацииТорговыйОбъект.СписокВыбора;
	СписокВыбораТорговыйОбъект.Очистить();
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ОрганизацияЕГАИС", ТекущаяСтрока.ОрганизацияЕГАИС);
	Если ЗначениеЗаполнено(ТекущаяСтрока.ТорговыйОбъект) Тогда
		ПараметрыОтбора.Вставить("ТорговыйОбъект", ТекущаяСтрока.ТорговыйОбъект);
	КонецЕсли;
	
	НайденныеСтроки = ОрганизацииДляВыбора.НайтиСтроки(ПараметрыОтбора);
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		
		Если СписокВыбораКонтрагент.НайтиПоЗначению(СтрокаТЧ.Контрагент) = Неопределено Тогда
			СписокВыбораКонтрагент.Добавить(СтрокаТЧ.Контрагент);
		КонецЕсли;
		
		Если СписокВыбораТорговыйОбъект.НайтиПоЗначению(СтрокаТЧ.ТорговыйОбъект) = Неопределено Тогда
			СписокВыбораТорговыйОбъект.Добавить(СтрокаТЧ.ТорговыйОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбораНоменклатуры(ТекущаяСтрока)
	
	СписокВыбораНоменклатура = Элементы.ТоварыНоменклатура.СписокВыбора;
	СписокВыбораНоменклатура.Очистить();
	
	НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(Новый Структура("АлкогольнаяПродукция", ТекущаяСтрока.АлкогольнаяПродукция));
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		СписокВыбораНоменклатура.Добавить(СтрокаТЧ.Номенклатура);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовкиСтраниц()
	
	СтруктураПоиска     = Новый Структура("Контрагент", Неопределено);
	СтрокБезКонтрагента = Объект.Организации.НайтиСтроки(СтруктураПоиска).Количество();
	ВсегоСтрок          = Объект.Организации.Количество();
	Заполнено           = ВсегоСтрок - СтрокБезКонтрагента;
	
	Элементы.СтраницаКлассификаторОрганизацийЕГАИС.Заголовок = СтрШаблон(НСтр("ru = 'Организации (%1 из %2)'"), Заполнено, ВсегоСтрок);
	
	СтруктураПоиска     = Новый Структура("Номенклатура", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Номенклатура"));
	СтрокБезКонтрагента = Объект.Товары.НайтиСтроки(СтруктураПоиска).Количество();
	ВсегоСтрок          = Объект.Товары.Количество();
	Заполнено           = ВсегоСтрок - СтрокБезКонтрагента;
	
	Элементы.СтраницаКлассификаторАлкогольнойПродукцииЕГАИС.Заголовок = СтрШаблон(НСтр("ru = 'Алкогольная продукция (%1 из %2)'"), Заполнено, ВсегоСтрок);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаписатьДанные(УникальныйИдентификатор)
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ИзмененияЗаписаны", Ложь);
	ВозвращаемоеЗначение.Вставить("АдресВоВременномХранилище");
	
	НачатьТранзакцию();
	Попытка
		
		ПараметрыОтбора = Новый Структура("ЕстьИзменения", Истина);
		
		НеСопоставленныеСтроки = Объект.Организации.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТЧ Из НеСопоставленныеСтроки Цикл
			
			Если ЗначениеЗаполнено(СтрокаТЧ.Контрагент)
				И (ЗначениеЗаполнено(СтрокаТЧ.ТорговыйОбъект) ИЛИ НЕ ИнтеграцияЕГАИС.ИспользоватьТорговыеОбъектыКонтрагентов()) Тогда
				
				ОрганизацияЕГАИС = СтрокаТЧ.ОрганизацияЕГАИС.ПолучитьОбъект();
				ОрганизацияЕГАИС.Контрагент = СтрокаТЧ.Контрагент;
				ОрганизацияЕГАИС.ТорговыйОбъект = СтрокаТЧ.ТорговыйОбъект;
				
				ОрганизацияЕГАИС.Записать();
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не РежимСопоставленияПоНакладной Тогда
			
			НеСопоставленныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТЧ Из НеСопоставленныеСтроки Цикл
				
				Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура)Тогда
					
					НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Номенклатура.Установить(СтрокаТЧ.Номенклатура, Истина);
					НаборЗаписей.Отбор.Характеристика.Установить(СтрокаТЧ.Характеристика, Истина);
					НаборЗаписей.Отбор.Серия.Установить(СтрокаТЧ.Серия, Истина);
					
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.Номенклатура         = СтрокаТЧ.Номенклатура;
					НоваяЗапись.Характеристика       = СтрокаТЧ.Характеристика;
					НоваяЗапись.Серия                = СтрокаТЧ.Серия;
					НоваяЗапись.АлкогольнаяПродукция = СтрокаТЧ.АлкогольнаяПродукция;
					НоваяЗапись.Порядок              = 1;
					
					НаборЗаписей.Записать();
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого ДокументПоступления Из ТоварноТранспортныеНакладные Цикл
				
				ДокументЗаблокирован = Ложь;
				ДокументОбъект = Неопределено;
				
				Для Каждого СтрокаТЧ Из НеСопоставленныеСтроки Цикл
					
					Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура)Тогда
						
						Если Не ДокументЗаблокирован Тогда
							// Если выполнить блокировку объекта не удалось, то будет выдано исключение.
							ДокументОбъект = ДокументПоступления.Значение.ПолучитьОбъект();
							ДокументОбъект.Заблокировать();
							ДокументЗаблокирован = Истина;
						КонецЕсли;
						
						ПараметрыОтбораСтрокНакладной = Новый Структура;
						ПараметрыОтбораСтрокНакладной.Вставить("АлкогольнаяПродукция",  СтрокаТЧ.АлкогольнаяПродукция);
						ПараметрыОтбораСтрокНакладной.Вставить("ИдентификаторУпаковки", СтрокаТЧ.ИдентификаторУпаковки);
						Для Каждого СтрокаДокумента Из ДокументОбъект.Товары.НайтиСтроки(ПараметрыОтбораСтрокНакладной) Цикл
							СтрокаДокумента.Номенклатура  = СтрокаТЧ.Номенклатура;
							СтрокаДокумента.Характеристика = СтрокаТЧ.Характеристика;
							СтрокаДокумента.Серия = СтрокаТЧ.Серия;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если ДокументЗаблокирован И ДокументОбъект <> Неопределено Тогда
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ВозвращаемоеЗначение.ИзмененияЗаписаны = Истина;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Если РежимСопоставленияПоНакладной Тогда
		ВозвращаемоеЗначение.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(
			Объект.Товары.Выгрузить(),
			УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаСервере
Процедура УстановитьОтборТовары()
	
	Если ТолькоНеСопоставленнаяНоменклатура Тогда
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("Сопоставлено", Ложь);
	Иначе
		Элементы.Товары.ОтборСтрок = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборОрганизации()
	
	Если ТолькоНеСопоставленныеОрганизации Тогда
		Элементы.Организации.ОтборСтрок = Новый ФиксированнаяСтруктура("Сопоставлено", Ложь);
	Иначе
		Элементы.Организации.ОтборСтрок = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеОрганизации(ОрганизацияЕГАИС)
	
	РеквизитыОрганизацииЕГАИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОрганизацияЕГАИС, "ТорговыйОбъект, Контрагент");
	
	ПараметрыОтбора = Новый Структура("ОрганизацияЕГАИС",ОрганизацияЕГАИС);
	
	НайденныеСтроки = Объект.Организации.НайтиСтроки(ПараметрыОтбора);
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		
		СтрокаТЧ.ТорговыйОбъект = РеквизитыОрганизацииЕГАИС.ТорговыйОбъект;
		СтрокаТЧ.Контрагент     = РеквизитыОрганизацииЕГАИС.Контрагент;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.ТорговыйОбъект)
			И ЗначениеЗаполнено(СтрокаТЧ.Контрагент) Тогда
			
			СтрокаТЧ.Сопоставлено = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеПродукции(АлкогольнаяПродукция)
	
	Запрос = Новый Запрос();
	Запрос.Текст = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ТекстЗапросаИнформацияОСопоставлении();
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ПараметрыОтбора = Новый Структура("АлкогольнаяПродукция", АлкогольнаяПродукция);
		НайденныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
		
		ЕстьНакладные = (ТоварноТранспортныеНакладные.Количество() > 0);
		
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			
			СтрокаТЧ.СопоставленоКоличество = Выборка.Количество;
			
			Если Выборка.Количество = 1 Тогда
				СтрокаТЧ.Сопоставлено  = Истина;
				СтрокаТЧ.СопоставлениеНоменклатура   = Строка(Выборка.Номенклатура);
				СтрокаТЧ.СопоставлениеХарактеристика = Строка(Выборка.Характеристика);
			ИначеЕсли Выборка.Количество > 1 Тогда
				СтрокаТЧ.Сопоставлено = (Не ЕстьНакладные) Или (ЕстьНакладные И ЗначениеЗаполнено(СтрокаТЧ.Номенклатура));;
				Если ТоварноТранспортныеНакладные.Количество() > 0 Тогда
					СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
				КонецЕсли;
				Если СтрДлина(Выборка.НоменклатураНаименование) > 45 Тогда 
					СтрокаКоличество = СтрШаблон(НСтр("ru = '( + еще %1)'"), Выборка.Количество - 1);
					ДлинаНаименования = 45 - СтрДлина(СтрокаКоличество);
					СтрокаТЧ.СопоставлениеНоменклатура = Лев(Выборка.НоменклатураНаименование, ДлинаНаименования) + "... " + СтрокаКоличество;
				Иначе
					СтрокаТЧ.СопоставлениеНоменклатура = СтрШаблон(НСтр("ru = '%1 ( + еще %2...)'"), Выборка.НоменклатураНаименование, Выборка.Количество - 1);
				КонецЕсли;
			Иначе
				СтрокаТЧ.Сопоставлено                = Ложь;
				СтрокаТЧ.СопоставлениеНоменклатура   = НСтр("ru = '<Не сопоставлено>'");
				СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		
		КомандаЗаписатьИЗакрыть();
		
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореНоменклатуры(Номенклатура, ДополнительныеПараметры) Экспорт
	
	Если Номенклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Номенклатура = Номенклатура;
	
	ПриИзмененииНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНоменклатуры()
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ПараметрыЗаполнения = ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти();
	ПараметрыЗаполнения.МаркируемаяПродукцияВТЧ        = Истина;
	ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус = Истина;
	ПараметрыЗаполнения.ОбработатьУпаковки             = Ложь;
	ПараметрыЗаполнения.ЗаполнитьЕдиницуИзмерения      = Ложь;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ПриИзмененииНоменклатуры(
		ЭтотОбъект, ТекущиеДанные, КэшированныеЗначения,
		ПараметрыЗаполнения, ПараметрыУказанияСерий);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
	ТекущиеДанные.ЕстьИзменения = Истина;
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореКонтрагента(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Контрагент = ВыбранноеЗначение;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ТекущиеДанные.ТорговыйОбъект = ИнтеграцияЕГАИСВызовСервера.ТорговыйОбъектКонтрагента(ВыбранноеЗначение);
	КонецЕсли;
	
	ТекущиеДанные.Сопоставлено = ЗначениеЗаполнено(ТекущиеДанные.Контрагент)
	                             И (ЗначениеЗаполнено(ТекущиеДанные.ТорговыйОбъект) ИЛИ Не ИспользоватьТорговыеОбъектыКонтрагентов);
	ТекущиеДанные.ЕстьИзменения = Истина;
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореТорговогоОбъекта(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ТорговыйОбъект = ВыбранноеЗначение;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ТекущиеДанные.Контрагент = ИнтеграцияЕГАИСВызовСервера.КонтрагентТорговогоОбъекта(ВыбранноеЗначение);
	Иначе
		ТекущиеДанные.Контрагент = СторонняяОрганизацияЗначениеПоУмолчанию;
	КонецЕсли;
	
	ТекущиеДанные.Сопоставлено = ЗначениеЗаполнено(ТекущиеДанные.Контрагент)
	                             И (ЗначениеЗаполнено(ТекущиеДанные.ТорговыйОбъект) ИЛИ Не ИспользоватьТорговыеОбъектыКонтрагентов);
	ТекущиеДанные.ЕстьИзменения = Истина;
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть()
	
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда
		
		Результат = ПроверитьЗаписатьДанные(ВладелецФормы.УникальныйИдентификатор);
		
		Если Результат.ИзмененияЗаписаны Тогда
			
			ПараметрыОповещения = Новый Структура;
			ПараметрыОповещения.Вставить("Ссылка", Неопределено);
			Оповестить("ИзменениеСопоставленияАлкогольнойПродукцииЕГАИС", ПараметрыОповещения, ЭтотОбъект);
			
			ПринудительноЗакрытьФорму = Истина;
			Закрыть(Результат.АдресВоВременномХранилище);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНесопоставленные_Завершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено 
		ИЛИ НЕ ЭтоАдресВременногоХранилища(Результат) Тогда
		
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти();
	ПараметрыЗаполнения.МаркируемаяПродукцияВТЧ        = Истина;
	ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус = Истина;
	ПараметрыЗаполнения.ОбработатьУпаковки             = Ложь;
	ПараметрыЗаполнения.ЗаполнитьЕдиницуИзмерения      = Ложь;
	
	ТаблицаРезультата = ПолучитьИзВременногоХранилища(Результат);
	
	Для каждого СтрокаТаблицыТоваров Из ТаблицаРезультата.ТаблицаСопоставленияНоменклатуры Цикл
		ТекущиеДанные = Объект.Товары[СтрокаТаблицыТоваров.НомерСтроки-1];
		ТекущиеДанные.Номенклатура = СтрокаТаблицыТоваров.Номенклатура;
		
		СобытияФормЕГАИСКлиентПереопределяемый.ПриИзмененииНоменклатуры(
			ЭтотОбъект, ТекущиеДанные, КэшированныеЗначения,
			ПараметрыЗаполнения, ПараметрыУказанияСерий);
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
			И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
				ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
			ТекущиеДанные.Сопоставлено = Истина;
		Иначе
			ТекущиеДанные.Сопоставлено = Ложь;
		КонецЕсли;
		
		ТекущиеДанные.ЕстьИзменения = Истина;
	КонецЦикла;
	
	Для каждого СтрокаКонтрагенты Из Объект.Организации Цикл
		Если СтрокаКонтрагенты.Сопоставлено 
			ИЛИ ТаблицаРезультата.ТаблицаСопоставленияКонтрагентов[СтрокаКонтрагенты.ОрганизацияЕГАИС] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбранноеЗначение = ТаблицаРезультата.ТаблицаСопоставленияКонтрагентов[СтрокаКонтрагенты.ОрганизацияЕГАИС];
		
		СтрокаКонтрагенты.Контрагент = ВыбранноеЗначение;
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			ТекущиеДанные.ТорговыйОбъект = ИнтеграцияЕГАИСВызовСервера.ТорговыйОбъектКонтрагента(ВыбранноеЗначение);
		КонецЕсли;
		
		ТекущиеДанные.Сопоставлено = ЗначениеЗаполнено(ТекущиеДанные.Контрагент)
		                             И (ЗначениеЗаполнено(ТекущиеДанные.ТорговыйОбъект) ИЛИ Не ИспользоватьТорговыеОбъектыКонтрагентов);
		ТекущиеДанные.ЕстьИзменения = Истина;
		
	КонецЦикла; 
	
	ОбновитьЗаголовкиСтраниц();
КонецПроцедуры 


#КонецОбласти
