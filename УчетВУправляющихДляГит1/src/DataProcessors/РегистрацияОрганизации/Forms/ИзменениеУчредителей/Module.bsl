&НаКлиенте
Перем ТипУчредителяНовойСтроки;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	УставныйКапитал = Параметры.УставныйКапитал;
	УставныйКапиталДоИзменения = Параметры.УставныйКапиталДоИзменения;
	
	АдресХранилища = Параметры.АдресХранилища;
	Если ПустаяСтрока(АдресХранилища) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТаблицаУчредителей = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(ТаблицаУчредителей) = Тип("ТаблицаЗначений") Тогда
		
		НужноЗаписатьУчредителей = Ложь;
		Для Каждого Учредитель Из ТаблицаУчредителей Цикл
			Если Не ЗначениеЗаполнено(Учредитель.Ссылка) Тогда
				НужноЗаписатьУчредителей = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НужноЗаписатьУчредителей Тогда
			// Запуск фонового задания
			// Результат выполнения - таблица значений, содержащая ссылки на объекты ИБ
			ДлительнаяОперация = НачатьЗаписьУчредителей(ТаблицаУчредителей);
			Если ДлительнаяОперация.Статус = "Выполнено" Тогда
				ОбработатьЗаписьУчредителей(ДлительнаяОперация.АдресРезультата);
			КонецЕсли;
		Иначе
			// Можно использовать таблицу как есть
			Учредители.Загрузить(ТаблицаУчредителей);
			
		КонецЕсли;
		
	КонецЕсли;
	
	АдресХранилищаДоИзменения = Параметры.АдресХранилищаДоИзменения;
	Если НЕ ПустаяСтрока(АдресХранилищаДоИзменения) Тогда
		ТаблицаУчредителейДоИзменения = ПолучитьИзВременногоХранилища(АдресХранилищаДоИзменения);
		Если ТипЗнч(ТаблицаУчредителейДоИзменения) = Тип("ТаблицаЗначений") Тогда
			УчредителиДоИзменения.Загрузить(ТаблицаУчредителейДоИзменения);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДобавленныеКолонкиТаблицыУчредители();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДлительнаяОперация <> Неопределено Тогда
		
		Если ДлительнаяОперация.Статус = "Выполняется" Тогда
			// Ждем пока все учредители будут записаны в ИБ
			НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
			ДлительныеОперацииКлиент.ОжидатьЗавершение(
				ДлительнаяОперация,
				Новый ОписаниеОповещения("Подключаемый_ПослеЗаписиУчредителей", ЭтотОбъект),
				НастройкиОжидания);
		ИначеЕсли ДлительнаяОперация.Статус = "Выполнено" Тогда
			// При создании формы могли быть записаны новые элементы справочников Контрагенты и ФизическиеЛица
			ОповеститьОбИзменении(Тип("СправочникСсылка.Контрагенты"));
			ОповеститьОбИзменении(Тип("СправочникСсылка.ФизическиеЛица"));
		ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
			ПоказатьОшибкуЗаписиУчредителей(ДлительнаяОперация);
			Отказ = Истина;
		КонецЕсли;
		
		УправлениеФормой(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
			Возврат;
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ИмяСписка = НСтр("ru = 'Учредители'");
	
	УставныйКапиталНеУменьшился = Учредители.Итог("СуммаВзноса") >= УчредителиДоИзменения.Итог("СуммаВзноса");
	
	Если Учредители.Количество() = 0 Тогда
		
		// Заполнение списка учредителей
		ТекстСообщения = НСтр("ru = 'В действующем обществе должен быть хотя бы один участник'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Учредители", , Отказ);
		
	Иначе
		
		Для Индекс = 0 По Учредители.Количество() - 1 Цикл
			
			Учредитель = Учредители[Индекс];
			НомерСтроки = Формат(Индекс + 1, "ЧГ=");
			ПутьКСтроке = "Учредители[" + Формат(Индекс, "ЧГ=") + "].";
			
			// Учредитель
			Если ЗначениеЗаполнено(Учредитель.Ссылка) Тогда
				Если Не Обработки.РегистрацияОрганизации.РеквизитыУчредителяЗаполнены(Учредитель.Ссылка) Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнены обязательные данные учредителя %1'"), Учредитель.Наименование);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
						, ПутьКСтроке + "Ссылка", , Отказ);
				КонецЕсли;
			Иначе
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка", , НСтр("ru = 'Учредитель'"), НомерСтроки, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
					, ПутьКСтроке + "Ссылка", , Отказ);
			КонецЕсли;
			
			// Сумма взноса
			Если Не ЗначениеЗаполнено(Учредитель.СуммаВзноса) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка", , НСтр("ru = 'Сумма взноса'"), НомерСтроки, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКСтроке + "СуммаВзноса", , Отказ);
			ИначеЕсли УставныйКапиталНеУменьшился Тогда
				
				СтруктураПоиска = Неопределено;
				Если ЗначениеЗаполнено(Учредитель.ИНН) Тогда
					СтруктураПоиска = Новый Структура("ИНН",          Учредитель.ИНН);
				Иначе
					СтруктураПоиска = Новый Структура("Наименование", Учредитель.Наименование);
				КонецЕсли;
				
				Если СтруктураПоиска <> Неопределено Тогда
					СтрокиУчредителяДоИзменения = УчредителиДоИзменения.НайтиСтроки(СтруктураПоиска);
					Если СтрокиУчредителяДоИзменения.Количество() > 0 Тогда
						ВзносУчредителяДоИзменения = СтрокиУчредителяДоИзменения[0].СуммаВзноса;
						Если ВзносУчредителяДоИзменения > Учредитель.СуммаВзноса Тогда
							ТекстСообщения = НСтр("ru = 'Уменьшение взноса учредителя при изменении уставного капитала пока не поддерживается'");
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКСтроке + "СуммаВзноса", , Отказ);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Уставный капитал
		УставныйКапитал = Учредители.Итог("СуммаВзноса");
		Если УставныйКапитал < УставныйКапиталДоИзменения Тогда
			ТекстСообщения = НСтр("ru = 'Уменьшение уставного капитала пока не поддерживается'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Учредители", , Отказ);
		Иначе
			МинимальныйУставныйКапитал = РегистрацияОрганизацииКлиентСервер.МинимальныйУставныйКапитал();
			Если УставныйКапитал < МинимальныйУставныйКапитал Тогда
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Уставный капитал не может быть меньше %1 руб.'"),
					Формат(МинимальныйУставныйКапитал, "ЧДЦ="));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Учредители", , Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчредители

&НаКлиенте
Процедура УчредителиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Или ТипУчредителяНовойСтроки <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Оповещение = Новый ОписаниеОповещения("ДобавитьУчредителяЗавершение", ЭтотОбъект);
	Элементы.Учредители.ТекущийЭлемент = Элементы.УчредителиСсылка;
	ПоказатьВыборИзМеню(Оповещение, СписокВыбора, Элементы.Учредители);
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	Если НоваяСтрока И Не Копирование Тогда
		ТекущиеДанные.ТипУчредителя = ТипУчредителяНовойСтроки;
		ТипУчредителяНовойСтроки    = Неопределено;
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ТипУчредителя) Тогда
			ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
		КонецЕсли;
	КонецЕсли;
	
	МассивПараметрыВыбора = Новый Массив;
	Если ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Элементы.УчредителиСсылка.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ЮридическоеФизическоеЛицо", 
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		МассивПараметрыВыбора.Добавить(НовыйПараметр);
	Иначе
		Элементы.УчредителиСсылка.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	КонецЕсли;
	Элементы.УчредителиСсылка.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		УставныйКапитал = Учредители.Итог("СуммаВзноса");
		ПересчитатьДолиУчастия();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиПослеУдаления(Элемент)
	
	РаспределитьУставныйКапитал();
	ПересчитатьДолиУчастия();
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиСсылкаПриИзменении(Элемент)
	
	Учредитель = Учредители.НайтиПоИдентификатору(Элементы.Учредители.ТекущиеДанные.ПолучитьИдентификатор());
	Если Учредитель <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Учредитель, СведенияОбУчредителе(Учредитель.Ссылка));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные  = Элементы.Учредители.ТекущиеДанные;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
		ОткрытьФорму("Обработка.РегистрацияОрганизации.Форма.ФормаВыбораФизическогоЛица", ПараметрыФормы, Элемент);
	ИначеЕсли ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("ЮридическоеФизическоеЛицо", 
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		ПараметрыФормы.Вставить("Отбор", Отбор);
		ОткрытьФорму("Обработка.РегистрацияОрганизации.Форма.ФормаВыбораЮридическогоЛица", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиСсылкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные  = Элементы.Учредители.ТекущиеДанные;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Ссылка);
	Иначе
		ПараметрыФормы.Вставить("ТекстЗаполнения", Элемент.ТекстРедактирования);
	КонецЕсли;
	Если ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", 
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ОткрытьФорму("Обработка.РегистрацияОрганизации.Форма.ФормаЮридическогоЛица", ПараметрыФормы, Элемент);
	Иначе
		ОткрытьФорму("Обработка.РегистрацияОрганизации.Форма.ФормаФизическогоЛица", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиСсылкаСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные  = Элементы.Учредители.ТекущиеДанные;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекстЗаполнения", Элемент.ТекстРедактирования);
	Если ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", 
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ОткрытьФорму("Обработка.РегистрацияОрганизации.Форма.ФормаЮридическогоЛица", ПараметрыФормы, Элемент);
	Иначе
		ОткрытьФорму("Обработка.РегистрацияОрганизации.Форма.ФормаФизическогоЛица", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиСуммаВзносаПриИзменении(Элемент)
	
	ПересчитатьДолиУчастия();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьУчредителяФизическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	ТекущийЭлемент = Элементы.Учредители;
	Элементы.Учредители.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЮридическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	ТекущийЭлемент = Элементы.Учредители;
	Элементы.Учредители.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ОповеститьОВыбореИЗакрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	ВыполняетсяДлительнаяОперация = (Форма.ДлительнаяОперация <> Неопределено
		И Форма.ДлительнаяОперация.Статус = "Выполняется");
	
	Элементы.Учредители.Видимость = Не ВыполняетсяДлительнаяОперация;
	Элементы.Ожидание.Видимость   = ВыполняетсяДлительнаяОперация;
	
	Элементы.ДекорацияНеобходимостьИзменений.Видимость = Не ВыполняетсяДлительнаяОперация;
	
	Элементы.ФормаОК.Видимость = Не ВыполняетсяДлительнаяОперация;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Заполненность учредителя
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиСсылка");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Учредители.ОтметкаНезаполненного",
		ВидСравненияКомпоновкиДанных.Равно,
		Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненныйРеквизит);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблицыУчредители()
	
	Для каждого Учредитель Из Учредители Цикл
		Учредитель.ОтметкаНезаполненного = Не Обработки.РегистрацияОрганизации.РеквизитыУчредителяЗаполнены(Учредитель.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЗавершение(ВыбранныйЭлемент, ДопПараметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТипУчредителяНовойСтроки = ВыбранныйЭлемент.Значение;
	Элементы.Учредители.ДобавитьСтроку();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДолиУчастия()
	
	МассивКоэффициентов = Новый Массив;
	Для каждого Учредитель Из Учредители Цикл
		МассивКоэффициентов.Добавить(Учредитель.СуммаВзноса);
	КонецЦикла;
	
	МассивДолей = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(100, МассивКоэффициентов, 2);
	Если МассивДолей <> Неопределено Тогда
		Для Индекс = 0 По МассивДолей.ВГраница() Цикл
			Учредители[Индекс].ДоляУчастия = МассивДолей[Индекс];
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьУставныйКапитал()
	
	МассивКоэффициентов = Новый Массив;
	Для каждого Учредитель Из Учредители Цикл
		МассивКоэффициентов.Добавить(Учредитель.ДоляУчастия);
	КонецЦикла;
	
	МассивСумм = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(УставныйКапитал, МассивКоэффициентов, 2);
	Если МассивСумм <> Неопределено Тогда
		Для Индекс = 0 По МассивСумм.ВГраница() Цикл
			Учредители[Индекс].СуммаВзноса = МассивСумм[Индекс];
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СведенияОбУчредителе(Учредитель)
	
	Результат = Новый Структура("Наименование, ИНН, ТипУчредителя, ОтметкаНезаполненного");
	
	Если ЗначениеЗаполнено(Учредитель) Тогда
		ЗаполнитьЗначенияСвойств(Результат, ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Учредитель, "Наименование, ИНН"));
		Результат.ТипУчредителя = ?(ТипЗнч(Учредитель) = Тип("СправочникСсылка.ФизическиеЛица"),
			Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо,
			Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
		Результат.ОтметкаНезаполненного = Не Обработки.РегистрацияОрганизации.РеквизитыУчредителяЗаполнены(Учредитель);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОповеститьОВыбореИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОВыбореИЗакрыть()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	УставныйКапитал = Учредители.Итог("СуммаВзноса");
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("УставныйКапитал", УставныйКапитал);
	РезультатВыбора.Вставить("АдресХранилища", СохранитьУчредителейВоВременноеХранилище());
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

&НаСервере
Функция СохранитьУчредителейВоВременноеХранилище()
	
	ТаблицаУчредителей = Учредители.Выгрузить();
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаУчредителей, АдресХранилища);
	
КонецФункции

#Область ЗаписьУчредителейВФоне

&НаСервере
Функция НачатьЗаписьУчредителей(ТаблицаУредителей)
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Запись учредителей'");
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.РегистрацияОрганизации.ЗаписатьУчредителейВФоне",
		ТаблицаУредителей,
		НастройкиЗапуска);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПослеЗаписиУчредителей(ДлительнаяОперация, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат; // Отменено
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ОбработатьЗаписьУчредителей(ДлительнаяОперация.АдресРезультата);
		ОповеститьОбИзменении(Тип("СправочникСсылка.Контрагенты"));
		ОповеститьОбИзменении(Тип("СправочникСсылка.ФизическиеЛица"));
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьОшибкуЗаписиУчредителей(ДлительнаяОперация);
	КонецЕсли;
	
	ЭтотОбъект.ДлительнаяОперация = ДлительнаяОперация;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЗаписьУчредителей(АдресРезультата)
	
	ТаблицаУчредителей = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(ТаблицаУчредителей) = Тип("ТаблицаЗначений") Тогда
		Учредители.Загрузить(ТаблицаУчредителей);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибкуЗаписиУчредителей(ДлительнаяОперация)
	
	Текст = НСтр("ru = 'Ошибка при записи учредителей:'");
	Текст = Текст + Символы.ПС + ДлительнаяОперация.КраткоеПредставлениеОшибки;
	ВызватьИсключение Текст;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
