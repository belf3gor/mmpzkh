#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресХранилища = Параметры.АдресХранилища;
	Если ПустаяСтрока(АдресХранилища) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ТаблицаВидовДеятельности = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(ТаблицаВидовДеятельности) = Тип("ТаблицаЗначений") Тогда
		ВидыДеятельности.Загрузить(ТаблицаВидовДеятельности);
	КонецЕсли;
	
	ОсновнойКод    = Параметры.ОсновнойКод;
	ОсновнойКодЕГР = Параметры.ОсновнойКодЕГР;
	
	ЗаполнитьДобавленныеКолонкиТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
			Возврат;
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидыДеятельности.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрано ни одного вида деятельности'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВидыДеятельности", , Отказ);
	КонецЕсли;
	
	Если ПустаяСтрока(ОсновнойКод)  Тогда
		ТекстСообщения = НСтр("ru = 'Основной вид деятельности не выбран'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВидыДеятельности", , Отказ);
	ИначеЕсли ОсновнойКод <> ОсновнойКодЕГР Тогда
		
		СообщениеОбОшибке = "";
		Если Не ОрганизацииФормыКлиентСервер.ОКВЭДСоответствуетТребованиям(СообщениеОбОшибке, ОсновнойКод) Тогда
			ТекстСообщения = НСтр("ru = 'Код основного вида деятельности не соответствует требованиям.")
				+ " " + СообщениеОбОшибке;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВидыДеятельности", , Отказ);
		КонецЕсли;
		
		КоличествоЦифрВОсновномКоде = СтрДлина(СтрЗаменить(ОсновнойКод, ".", ""));
		Если КоличествоЦифрВОсновномКоде < 4 Тогда
			ТекстСообщения = НСтр("ru = 'Код основного вида деятельности не соответствует требованиям."
				+ " " + "Замените на код, состоящий из не менее 4-х цифровых знаков.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВидыДеятельности", , Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыВидыДеятельности

&НаКлиенте
Процедура ВидыДеятельностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВидыДеятельностиОсновной" Тогда
		СтандартнаяОбработка = Ложь;
		УстановитьКодОсновным(ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДеятельностиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ДобавитьВидДеятельности();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДеятельностиПослеУдаления(Элемент)
	
	Если ВидыДеятельности.НайтиСтроки(Новый Структура("Код", ОсновнойКод)).Количество() = 0 Тогда
		ОсновнойКод = "";
		ОсновнойКодНаименование = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьОсновным(Команда)
	
	ДанныеСтроки = Элементы.ВидыДеятельности.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		УстановитьКодОсновным(ДанныеСтроки.ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ОповеститьОВыбореИЗакрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьВидДеятельности()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборВидаДеятельностиОКВЭД2Завершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборВидаДеятельности", ПараметрыФормы, , , , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВидаДеятельностиОКВЭД2Завершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавленнаяСтрока = Неопределено;
	
	Для Каждого ВидДеятельности Из РезультатВыбора Цикл
		
		ПараметрыОтбора = Новый Структура("Код", ВидДеятельности.Код);
		НайденныеСтроки = ВидыДеятельности.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			ДобавленнаяСтрока = ВидыДеятельности.Добавить();
			ДобавленнаяСтрока.Код = ВидДеятельности.Код;
			ДобавленнаяСтрока.Наименование = ВидДеятельности.Наименование;
			ДобавленнаяСтрока.ЭтоОКВЭД2 = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДобавленнаяСтрока <> Неопределено Тогда
		Элементы.ВидыДеятельности.ТекущаяСтрока = ДобавленнаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКодОсновным(ИдентификаторСтроки);
	
	ТекущаяСтрокаТаблицы = ВидыДеятельности.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если ТекущаяСтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ОсновнойКод = ТекущаяСтрокаТаблицы.Код;
	ОсновнойКодНаименование = ТекущаяСтрокаТаблицы.Наименование;
	
	НайденныеСтроки = ВидыДеятельности.НайтиСтроки(Новый Структура("Основной", Истина));
	Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		СтрокаТаблицы.Основной = Ложь;
	КонецЦикла;
	
	ТекущаяСтрокаТаблицы.Основной = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблицы()
	
	Для Каждого ВидДеятельности Из ВидыДеятельности Цикл
		ВидДеятельности.Основной = (ВидДеятельности.Код = ОсновнойКод);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОповеститьОВыбореИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОВыбореИЗакрыть()
	
	Если ПустаяСтрока(ОсновнойКод) И ВидыДеятельности.Количество() = 1 Тогда
		// Если остался единственный код, сделаем его основным.
		ОсновнойКод = ВидыДеятельности[0].Код;
		ОсновнойКодНаименование = ВидыДеятельности[0].Наименование;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ОсновнойКод", ОсновнойКод);
	РезультатВыбора.Вставить("ОсновнойКодНаименование", ОсновнойКодНаименование);
	РезультатВыбора.Вставить("АдресХранилища", ПоместитьВидыДеятельностиВоВременноеХранилище());
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьВидыДеятельностиВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(ВидыДеятельности.Выгрузить(), АдресХранилища);
	
КонецФункции

#КонецОбласти