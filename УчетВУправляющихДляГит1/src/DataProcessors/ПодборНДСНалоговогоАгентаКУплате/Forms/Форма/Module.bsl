#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Организация) Тогда
		ВызватьИсключение НСтр("ru='Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры,
		"ДатаДокумента,Организация,АдресТаблицыНалоговыйАгентНДСВХранилище,СуммаПоПлатежномуПоручению,ДокументСсылка");
	ЗаполнитьЗадолженностьНаСервере();
	УстановитьТекстПодсказки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Объект.ПодобраннаяКУплатеЗадолженность.Количество() > 0 Тогда
		Отказ = Истина;
	ИначеЕсли НЕ ПеренестиВДокумент И Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Подобранные к уплате суммы налога не перенесены в документ.
			|
			|Перенести?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПеренестиВДокументЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	СтруктураВозврата = ПриЗакрытииНаСервере();
	
	Если ПеренестиВДокумент Тогда
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗадолженностьНалоговыйАгентНДС

&НаКлиенте
Процедура ЗадолженностьНалоговыйАгентНДСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаПодбора = Элемент.ТекущиеДанные;
	
	Если СтрокаПодбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СуммаПодобрано = Объект.ПодобраннаяКУплатеЗадолженность.Итог("Сумма");
	СуммаПоПлатежномуПоручению = ЭтотОбъект.СуммаПоПлатежномуПоручению;
	
	Если СтрокаПодбора.Сумма + СуммаПодобрано > СуммаПоПлатежномуПоручению Тогда
		
		СуммаСкорректированная = СуммаПоПлатежномуПоручению - СуммаПодобрано;
		
		Если СуммаСкорректированная = 0 Тогда
			ТекстСообщения = НСтр("ru='Вся сумма платежа уже подобрана.'");
			ПоказатьПредупреждение(, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ПараметрыЗавершения = Новый Структура("СуммаСкорректированная,СтрокаПодбора",
			СуммаСкорректированная, СтрокаПодбора);
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВопросУменьшитьСуммуДляПодбораЗавершение", ЭтотОбъект, ПараметрыЗавершения);
		ПоказатьВопрос(ОписаниеОповещения, "Подобранная к уплате сумма налога будет скорректирована т.к. превышает сумму платежа.", 
			РежимДиалогаВопрос.ОКОтмена, 60);
	Иначе
		НоваяСтрока = Объект.ПодобраннаяКУплатеЗадолженность.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодбора);
		СтрокаПодбора.СтрокаПодобрана = Истина;
		УстановитьТекстПодсказки(ЭтотОбъект);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадолженностьНалоговыйАгентНДСВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ЗадолженностьНалоговыйАгентНДСВыбор(Элемент, Значение, , СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодобраннаяКУплатеЗадолженность

&НаКлиенте
Процедура ПодобраннаяКУплатеЗадолженностьПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("Контрагент,Договор,ДокументРасчетов,СрокУплаты");
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Элемент.ТекущиеДанные);
	МассивСтрок = Объект.ЗадолженностьНалоговыйАгентНДС.НайтиСтроки(ПараметрыОтбора);
	Если МассивСтрок.Количество() > 0 Тогда
		МассивСтрок[0].СтрокаПодобрана = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобраннаяКУплатеЗадолженностьПослеУдаления(Элемент)
	
	УстановитьТекстПодсказки(ЭтотОбъект);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобраннаяКУплатеЗадолженностьПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УстановитьТекстПодсказки(ЭтотОбъект);
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросУменьшитьСуммуДляПодбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		НоваяСтрока = Объект.ПодобраннаяКУплатеЗадолженность.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДополнительныеПараметры.СтрокаПодбора);
		НоваяСтрока.Сумма = ДополнительныеПараметры.СуммаСкорректированная;
		ДополнительныеПараметры.СтрокаПодбора.СтрокаПодобрана = Истина;
		УстановитьТекстПодсказки(ЭтотОбъект);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстПодсказки(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ТекстСообщенияПодобраноВерно = НСтр("ru='Всего подобрано к уплате [Подобрано] руб.
		|Это соответствует сумме платежа.'");
	ТекстСообщенияОсталосьПодобрать = НСтр("ru='Всего подобрано к уплате [Подобрано] руб.
		|Осталось подобрать на сумму [Осталось] руб.'");
	
	СуммаПодобрано = Объект.ПодобраннаяКУплатеЗадолженность.Итог("Сумма");
	
	Если Форма.СуммаПоПлатежномуПоручению = СуммаПодобрано Тогда
		НадписьПодобраноНаСумму = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(
			ТекстСообщенияПодобраноВерно, 
			Новый Структура("Подобрано", СуммаПодобрано));
	Иначе
		НадписьПодобраноНаСумму = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(
			ТекстСообщенияОсталосьПодобрать, 
			Новый Структура("Подобрано,Осталось", 
				СуммаПодобрано, 
				Форма.СуммаПоПлатежномуПоручению - СуммаПодобрано));
	КонецЕсли;
			
	Форма.НадписьПодобраноНаСумму = НадписьПодобраноНаСумму;
	
КонецПроцедуры

&НаСервере
Функция ПриЗакрытииНаСервере()
	
	СтруктураВозврата = Новый Структура();
	
	Если ПеренестиВДокумент Тогда
		АдресТаблицыНалоговыйАгентНДСВХранилище = ПоместитьПодобраннуюЗадолженностьВХранилище();
		СтруктураВозврата.Вставить("АдресТаблицыНалоговыйАгентНДСВХранилище", АдресТаблицыНалоговыйАгентНДСВХранилище);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Функция ПоместитьПодобраннуюЗадолженностьВХранилище()
	
	ТаблицаЗадолженности = Объект.ПодобраннаяКУплатеЗадолженность.Выгрузить();
	АдресТаблицыНалоговыйАгентНДСВХранилище = ПоместитьВоВременноеХранилище(ТаблицаЗадолженности, УникальныйИдентификатор);
	
	Возврат АдресТаблицыНалоговыйАгентНДСВХранилище;
	
КонецФункции

&НаКлиенте
Процедура ВопросПеренестиВДокументЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		ПеренестиВДокумент = Истина;
		Объект.ПодобраннаяКУплатеЗадолженность.Очистить();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗадолженностьНаСервере()
	
	РеквизитыДокумента = Новый Структура(
		"Организация,ДатаДокумента,ТекущийДокумент", 
		ЭтотОбъект.Организация, ЭтотОбъект.ДатаДокумента, ЭтотОбъект.ДокументСсылка);
		
	ЗадолженностьПоСрокам = УчетНДСБП.ЗадолженностьНалоговогоАгентаПоНДС(РеквизитыДокумента);
		
	Объект.ЗадолженностьНалоговыйАгентНДС.Очистить();
	Объект.ЗадолженностьНалоговыйАгентНДС.Загрузить(ЗадолженностьПоСрокам);
	
	ТаблицаНалоговыйАгентНДС = ПолучитьИзВременногоХранилища(ЭтотОбъект.АдресТаблицыНалоговыйАгентНДСВХранилище);
	
	Объект.ПодобраннаяКУплатеЗадолженность.Очистить();
	Объект.ПодобраннаяКУплатеЗадолженность.Загрузить(ТаблицаНалоговыйАгентНДС);
	
КонецПроцедуры

#КонецОбласти
