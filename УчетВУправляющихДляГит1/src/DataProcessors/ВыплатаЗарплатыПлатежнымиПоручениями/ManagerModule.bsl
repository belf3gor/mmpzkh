#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура Автозаполнение(ПараметрыЗаполнения, АдресХранилища) Экспорт
	
	Объект = ПараметрыЗаполнения.Объект;
	ПлатежнаяВедомость = Объект.ПлатежнаяВедомость;
	
	УчетЗарплатыИКадровСредствамиБухгалтерии = ПолучитьФункциональнуюОпцию("УчетЗарплатыИКадровСредствамиБухгалтерии");
	
	Если УчетЗарплатыИКадровСредствамиБухгалтерии И НЕ ПлатежнаяВедомость.Проведен Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ %1 не проведен!'"), ПлатежнаяВедомость);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ПлатежнаяВедомость);
		Объект.ПлатежныеПоручения.Очистить();
		РезультатВыполнения = Новый Структура("Объект", Объект);
		ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
		Возврат;
	КонецЕсли;
	
	Если УчетЗарплатыИКадровСредствамиБухгалтерии Тогда
		Ведомости = Новый Массив;
		Ведомости.Добавить(ПлатежнаяВедомость);
		ТаблицаВыплатыЗарплаты = УчетЗарплаты.ПолучитьДанныеВедомостейДляОплатыТаблично(,Ведомости,,Ложь);
		ТаблицаВыплатыЗарплаты.Колонки.Добавить("БанковскийСчет", Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета"));
	Иначе
		ТаблицаВыплатыЗарплаты = Документы.ВедомостьНаВыплатуЗарплаты.ДанныеВедомостей(ПлатежнаяВедомость, Перечисления.ФормыОплаты.Безналичная);
	КонецЕсли;
	
	Если ТаблицаВыплатыЗарплаты.Количество() = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По документу %1 нет сумм к выплате!'"), ПлатежнаяВедомость);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ПлатежнаяВедомость);
		Объект.ПлатежныеПоручения.Очистить();
		РезультатВыполнения = Новый Структура("Объект", Объект);
		ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
		Возврат;
	КонецЕсли;
	
	ФизическиеЛица = УчетЗарплаты.ДанныеФизическихЛиц(Объект.Организация, ТаблицаВыплатыЗарплаты.ВыгрузитьКолонку("ФизическоеЛицо"), Объект.ДатаПлатежныхПоручений, Ложь, Истина);
		
	ТекстЗапрос = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ФизическиеЛица.Представление КАК СТРОКА(300)) КАК ФизическоеЛицоПредставление,
	|	ФизическиеЛица.ФизическоеЛицо
	|ПОМЕСТИТЬ ФизическиеЛица
	|ИЗ
	|	&ФизическиеЛица КАК ФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплаты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьНаВыплатуЗарплаты.Ведомость КАК Ведомость,
	|	ВедомостьНаВыплатуЗарплаты.КомпенсацияЗаЗадержкуЗарплаты + ВедомостьНаВыплатуЗарплаты.СуммаКВыплате КАК ИтогоКВыплате,
	|	ВедомостьНаВыплатуЗарплаты.БанковскийСчет КАК БанковскийСчет
	|ПОМЕСТИТЬ ЗарплатаКВыплатеОрганизаций
	|ИЗ
	|	&ВедомостьНаВыплатуЗарплаты КАК ВедомостьНаВыплатуЗарплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизаций.ФизическоеЛицо,
	|	ЕСТЬNULL(ПлатежноеПоручение.Ссылка, &ПустоеПлатежноеПоручение) КАК ПлатежноеПоручение,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПлатежноеПоручение.Проведен, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Отметка,
	|	ЗарплатаКВыплатеОрганизаций.ИтогоКВыплате КАК Сумма,
	|	ЕСТЬNULL(ПлатежноеПоручение.Ссылка.СчетКонтрагента, ЕСТЬNULL(ЗарплатаКВыплатеОрганизаций.БанковскийСчет, &ПустойБанковскийСчет)) КАК ЛичныйСчетРаботника
	|ПОМЕСТИТЬ ВТ_РасходныеДокументы
	|ИЗ
	|	ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|		ПО ЗарплатаКВыплатеОрганизаций.ФизическоеЛицо = ПлатежноеПоручение.Контрагент
	|			И ЗарплатаКВыплатеОрганизаций.Ведомость = ПлатежноеПоручение.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасходныеДокументы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТ_РасходныеДокументы.ПлатежноеПоручение КАК ПлатежноеПоручение,
	|	ВЫБОР
	|		КОГДА ВТ_РасходныеДокументы.ЛичныйСчетРаботника = &ПустойБанковскийСчет
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВТ_РасходныеДокументы.Отметка
	|	КОНЕЦ КАК Отметка,
	|	ВТ_РасходныеДокументы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВТ_РасходныеДокументы.ПлатежноеПоручение = &ПустоеПлатежноеПоручение
	|			ТОГДА 3
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_РасходныеДокументы.ПлатежноеПоручение.Проведен
	|					ТОГДА 1
	|				КОГДА ВТ_РасходныеДокументы.ПлатежноеПоручение.ПометкаУдаления
	|					ТОГДА 2
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СостояниеДокумета,
	|	ВТ_РасходныеДокументы.ЛичныйСчетРаботника КАК ЛичныйСчетРаботника,
	|	ФизическиеЛица.ФизическоеЛицоПредставление КАК ФизическоеЛицоПредставление
	|ИЗ
	|	ВТ_РасходныеДокументы КАК ВТ_РасходныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФизическиеЛица КАК ФизическиеЛица
	|		ПО ВТ_РасходныеДокументы.ФизическоеЛицо = ФизическиеЛица.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицоПредставление";
	
	Запрос = Новый Запрос(ТекстЗапрос);
	Запрос.УстановитьПараметр("ВедомостьНаВыплатуЗарплаты", ТаблицаВыплатыЗарплаты);
	Запрос.УстановитьПараметр("ПустоеПлатежноеПоручение",   Документы.ПлатежноеПоручение.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойБанковскийСчет",       Справочники.БанковскиеСчета.ПустаяСсылка());
	Запрос.УстановитьПараметр("Валюта",                     Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Организация",                Объект.Организация);
	Запрос.УстановитьПараметр("ФизическиеЛица",             ФизическиеЛица);
	
	Объект.ПлатежныеПоручения = Запрос.Выполнить().Выгрузить();
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	СтруктураРеквизитов = Новый Структура("Организация, ФизическоеЛицо, ВидОперации, БанковскийСчет",
		Объект.Организация, "", Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗаработнойПлатыРаботнику, Неопределено);
		
	Для Каждого СтрокаТаблицы Из Объект.ПлатежныеПоручения Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ЛичныйСчетРаботника) Тогда
			
			СтруктураРеквизитов.ФизическоеЛицо = СтрокаТаблицы.ФизическоеЛицо;
			ОсновнойВариантПеречисления = РегистрыСведений.ОсновныеВариантыПеречисленияСотруднику.ПолучитьОсновнойВариантПеречисления(СтруктураРеквизитов);
			
			Если ЗначениеЗаполнено(ОсновнойВариантПеречисления.БанковскийСчет) Тогда
				СтрокаТаблицы.ЛичныйСчетРаботника = ОсновнойВариантПеречисления.БанковскийСчет;
			Иначе
				УчетДенежныхСредствБП.УстановитьБанковскийСчет(
					СтрокаТаблицы.ЛичныйСчетРаботника,
					СтрокаТаблицы.ФизическоеЛицо,
					ВалютаРегламентированногоУчета);
			КонецЕсли;
				
			Если ЗначениеЗаполнено(СтрокаТаблицы.ЛичныйСчетРаботника) Тогда 
				СтрокаТаблицы.Отметка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	РезультатВыполнения = Новый Структура("Объект", Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура СоздатьПлатежныеПоручения(ПараметрыСоздания, АдресХранилища) Экспорт
	
	Объект                         = ПараметрыСоздания.Объект;
	Организация                    = Объект.Организация;
	СчетОрганизации                = Объект.СчетОрганизации;
	ПлатежнаяВедомость             = Объект.ПлатежнаяВедомость;
	СтатьяДвиженияДенежныхСредств  = Объект.СтатьяДвиженияДенежныхСредств;
	ДатаПлатежныхПоручений         = Объект.ДатаПлатежныхПоручений;
	ВидОперации                    = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗаработнойПлатыРаботнику;
	ПлатежныеПоручения             = Объект.ПлатежныеПоручения;
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	МесяцУплаты                    = Формат(Объект.ПлатежнаяВедомость.ПериодРегистрации, "ДФ=ММММ");
	ГодУплаты                      = Формат(Объект.ПлатежнаяВедомость.ПериодРегистрации, "ДФ=гггг");
	НазначениеПлатежа              = НСтр("ru = 'Заработная плата за %1 %2 г., работник: %3 '");
	Ответственный                  = Пользователи.ТекущийПользователь();
	СчетПоГосконтракту             = ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СчетОрганизации, "ГосударственныйКонтракт"));
	ИдентификаторПлатежа           = ИдентификаторГосконтактаПоСчету(Объект.СчетОрганизации);
	
	Для Каждого СтрокаТаблицы Из ПлатежныеПоручения Цикл
		
		Если СтрокаТаблицы.Отметка И НЕ ЗначениеЗаполнено(СтрокаТаблицы.ПлатежноеПоручение) Тогда
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ЛичныйСчетРаботника) Тогда
				СтрокаТаблицы.Отметка = Ложь;
				Продолжить;
			КонецЕсли;
			
			ПлатежноеПоручение                               = Документы.ПлатежноеПоручение.СоздатьДокумент();
			ПлатежноеПоручение.ВидОперации                   = ВидОперации;
			ПлатежноеПоручение.ВидПлатежа                    = ВидПлатежаПоУмолчанию();
			ПлатежноеПоручение.Дата                          = ДатаПлатежныхПоручений;
			ПлатежноеПоручение.Организация                   = Организация;
			Если ТипЗнч(ПлатежнаяВедомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплаты") Тогда
				ПлатежноеПоручение.ПодразделениеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлатежнаяВедомость, "ПодразделениеОрганизации");
			Иначе
				ПлатежноеПоручение.ПодразделениеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлатежнаяВедомость, "Подразделение");
			КонецЕсли;
			ПлатежноеПоручение.СчетОрганизации               = СчетОрганизации;
			ПлатежноеПоручение.ДокументОснование             = ПлатежнаяВедомость;
			ПлатежноеПоручение.ПлатежнаяВедомость            = ПлатежнаяВедомость;
			ПлатежноеПоручение.ВалютаДокумента               = ВалютаРегламентированногоУчета;
			ПлатежноеПоручение.ОчередностьПлатежа            = 3;
			ПлатежноеПоручение.СуммаДокумента                = СтрокаТаблицы.Сумма;
			ПлатежноеПоручение.СтавкаНДС                     = Перечисления.СтавкиНДС.БезНДС;
			ПлатежноеПоручение.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
			ПлатежноеПоручение.Контрагент                    = СтрокаТаблицы.ФизическоеЛицо;
			ПлатежноеПоручение.СчетКонтрагента               = СтрокаТаблицы.ЛичныйСчетРаботника;
			Если СтрокаТаблицы.ЛичныйСчетРаботника.Владелец <> СтрокаТаблицы.ФизическоеЛицо Тогда
				ПлатежноеПоручение.Банк                          = СтрокаТаблицы.ЛичныйСчетРаботника.Владелец ;
			КонецЕсли;
			Если СчетПоГосконтракту Тогда
				ПлатежноеПоручение.ИдентификаторПлатежа = ИдентификаторПлатежа;
			КонецЕсли;
			ПлатежноеПоручение.Ответственный                 = Ответственный;
			
			РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(
				ПлатежноеПоручение.ДоговорКонтрагента, 
				ПлатежноеПоручение.Контрагент, 
				ПлатежноеПоручение.Организация);
			
			ДанныеФизЛица = УчетЗарплаты.ДанныеФизическихЛиц(ПлатежноеПоручение.Организация, 
				СтрокаТаблицы.ФизическоеЛицо, 
				ПлатежноеПоручение.Дата, Истина);
			
			АвтоЗначенияРеквизитов = УчетДенежныхСредствБП.СформироватьАвтоЗначенияРеквизитовПлательщикаПолучателя(
				ПлатежноеПоручение.Организация,
				ПлатежноеПоручение.СчетОрганизации,
				?(ЗначениеЗаполнено(ПлатежноеПоручение.Банк), ПлатежноеПоручение.Банк, ПлатежноеПоручение.Контрагент),
				ПлатежноеПоручение.СчетКонтрагента,
				Ложь,
				ПлатежноеПоручение.Дата);
				
			ЗаполнитьЗначенияСвойств(ПлатежноеПоручение, АвтоЗначенияРеквизитов);
			
			ПараметрыНазначенияПлатежа = Документы.ПлатежноеПоручение.НовыеПараметрыНазначенияПлатежа();
			ПараметрыНазначенияПлатежа.Организация         = Организация;
			ПараметрыНазначенияПлатежа.Дата                = ДатаПлатежныхПоручений;
			ПараметрыНазначенияПлатежа.ВидОперации         = ВидОперации;
			ПараметрыНазначенияПлатежа.Контрагент          = СтрокаТаблицы.ФизическоеЛицо;
			ПараметрыНазначенияПлатежа.ПеречислениеВБюджет = Ложь;
			ПараметрыНазначенияПлатежа.ПлатежнаяВедомость  = ПлатежнаяВедомость;
			ПараметрыНазначенияПлатежа.СчетКонтрагента     = СтрокаТаблицы.ЛичныйСчетРаботника;
			ПараметрыНазначенияПлатежа.ДоговорКонтрагента  = ПлатежноеПоручение.ДоговорКонтрагента;
			
			ПлатежноеПоручение.НазначениеПлатежа = Документы.ПлатежноеПоручение.ТекстНазначенияПлатежа(ПараметрыНазначенияПлатежа);
			
			Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(ПлатежноеПоручение, Ложь, Истина, Истина);
			
			ПлатежноеПоручение.Записать();
			
			РегистрыСведений.ОсновныеВариантыПеречисленияСотруднику.УстановитьОсновнойВариантПеречисления(ПлатежноеПоручение.Организация,
				ПлатежноеПоручение.Контрагент, ПлатежноеПоручение.ВидОперации, ПлатежноеПоручение.СчетКонтрагента, ПлатежноеПоручение.НазначениеПлатежа);
			
			СтрокаТаблицы.ПлатежноеПоручение	= ПлатежноеПоручение.Ссылка;
			СтрокаТаблицы.СостояниеДокумета	= 0;
						
		КонецЕсли;
		
	КонецЦикла;
	
	РегистрыСведений.ДокументыИнтеграцииСБанком.ОтправитьОповещениеОбИзмененииПоДокументамВФоне(
		ПлатежныеПоручения.ВыгрузитьКолонку("ПлатежноеПоручение"));
	
	РезультатВыполнения = Новый Структура("Объект", Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура ПровестиПлатежныеПоручения(ПараметрыПроведения, АдресХранилища) Экспорт

	Объект             = ПараметрыПроведения.Объект;
	ПлатежныеПоручения = Объект.ПлатежныеПоручения;
	
	Отказ = Ложь;

	Для Каждого СтрокаТаблицы Из ПлатежныеПоручения Цикл
		Если СтрокаТаблицы.Отметка и ЗначениеЗаполнено(СтрокаТаблицы.ПлатежноеПоручение) Тогда
			ДокументПлатежноеПоручение = СтрокаТаблицы.ПлатежноеПоручение.ПолучитьОбъект();
			Если ДокументПлатежноеПоручение.ПометкаУдаления Тогда
				ДокументПлатежноеПоручение.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
			Попытка
				ДокументПлатежноеПоручение.Записать(РежимЗаписиДокумента.Проведение);
				СтрокаТаблицы.СостояниеДокумета	= 1;
			Исключение
				ТекстСообщения = НСтр("ru = 'Не удалось провести документ: %1'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(ДокументПлатежноеПоручение));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецПопытки;
			СтрокаТаблицы.Отметка = Не СтрокаТаблицы.Отметка;
		КонецЕсли;
	КонецЦикла;
	
	РезультатВыполнения = Новый Структура("Отказ, Объект", Отказ, Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Функция ИдентификаторГосконтактаПоСчету(ОтдельныйСчет)
	
	Идентификатор = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ОтдельныйСчет);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БанковскиеСчета.ГосударственныйКонтракт.Код КАК Идентификатор
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Идентификатор = Выборка.Идентификатор;
	КонецЕсли;
	
	Возврат Идентификатор;
	
КонецФункции

Функция ВидПлатежаПоУмолчанию()
	
	СохраненныйВид = ХранилищеОбщихНастроек.Загрузить("ПлатежноеПоручение_ВидПлатежа");
	Если СохраненныйВид <> "" Тогда
		Возврат СохраненныйВид;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецЕсли