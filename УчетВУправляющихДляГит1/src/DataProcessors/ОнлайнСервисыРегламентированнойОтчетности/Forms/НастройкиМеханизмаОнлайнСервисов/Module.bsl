#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьНастройки();
	
	ИзменениеОбщихНастроекРазрешено = Пользователи.ЭтоПолноправныйПользователь() и НЕ ОбщегоНазначения.РазделениеВключено();
	
	УправлениеЭУ(Ложь);
	
	УправлениеЭУВРежимеСервиса();
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УправлениеЭУВРежимеСервиса()
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда 
		Элементы.ГруппаИндивидуальныхНастроек.Видимость = Ложь;
		Элементы.ФлажокАвтоподключениеРОВключено.Видимость = Ложь;
		Элементы.ГруппаПоясненияКФлажкуАвтоподключениеРОВключено.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭУ(СохранитьНастройки = Истина)
	
	Элементы.ФлажокМеханизмВключен.Доступность					= ИзменениеОбщихНастроекРазрешено;
	Элементы.ФлажокУведомлятьОбОшибках.Доступность				= ИзменениеОбщихНастроекРазрешено И МеханизмВключен;
	Элементы.ФлажокАвтоподключениеРОВключено.Доступность		= ИзменениеОбщихНастроекРазрешено И МеханизмВключен;
	
	Элементы.НастроитьПараметрыПроксиСервера.Доступность		= ИзменениеОбщихНастроекРазрешено И МеханизмВключен;
	Элементы.КнопкаПроверитьИнтернет.Доступность				= ИзменениеОбщихНастроекРазрешено И МеханизмВключен;
	
	Если СохранитьНастройки Тогда
		СохранитьНастройкиСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	
	НастройкиМеханизма = ОнлайнСервисыРегламентированнойОтчетностиВызовСервера.ПолучитьНастройкиМеханизмаОнлайнСервисовРО();
	
	МеханизмВключен = НастройкиМеханизма.Использовать;
	УведомлятьОбОшибках = НастройкиМеханизма.УведомлятьОбОшибках;
	АвтоподключениеРОВключено = НастройкиМеханизма.АвтоматическиПодключатьФормыРО;
		
КонецПроцедуры

&НаКлиенте
Процедура ФлажокМеханизмВключенПриИзменении(Элемент)
	
	Если МеханизмВключен <> Неопределено Тогда
		Если НЕ МеханизмВключен Тогда
			ВопросОНеобходимостиВключенияПроверки();
		Иначе
			АвтоподключениеРОВключено = МеханизмВключен;	
			УправлениеЭУ();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОНеобходимостиВключенияПроверки()
 
    Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",
      ЭтотОбъект);	
	  
	ТекстВопроса = нСтр("ru= 'Отключение проверки актуальности может привести к проблемам при отправке отчетности и обмене другими
							 |документами с контролирующими органами.
							 |
							 |Программа перестанет своевременно получать сведения о выходе новых форм и форматов регламентированных 							 
							 |отчетов и других документов, а также об ошибках в 1С-Отчетности и способах их обхода. Также программа 							 
							 |перестанет автоматически переключаться на использование актуальных протоколов и форматов документооборота, 
							 |оперативно учитывать прочие изменения на стороне контролирующих органов при обмене с ними.							 
							 |
							 |Во избежание проблем со сдачей отчетности и с использованием 1С-Отчетности в целом настоятельно 
							 |не рекомендуется отключать данную возможность.
							 |
							 |Внимание!							 
							 |Данная настройка задается для всех пользователей информационной базы!
							 |
							 |Продолжить?'", "ru"); 
	
    ПоказатьВопрос(Оповещение,
        ТекстВопроса,
        РежимДиалогаВопрос.ДаНет,
        0, 
        КодВозвратаДиалога.Нет, 
        нСтр("ru='Подтверждение отключения автоматической проверки актуальности данных'", "ru") 
    );      
 
КонецПроцедуры
 
&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Нет Тогда
		МеханизмВключен = Истина;
	КонецЕсли;		
	
	АвтоподключениеРОВключено = МеханизмВключен;
	УправлениеЭУ();
 
КонецПроцедуры

&НаКлиенте
Процедура ФлажокАвтоподключениеРОВключеноПриИзменении(Элемент)
	
	УправлениеЭУ();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиСервер()
	
	// сохраняем общие настройки
	Если ИзменениеОбщихНастроекРазрешено Тогда
		ОнлайнСервисыРегламентированнойОтчетностиВызовСервера.СохранитьОбщиеНастройкиМеханизмаОнлайнСервисовРО(МеханизмВключен, УведомлятьОбОшибках, АвтоподключениеРОВключено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИнтернет(Команда)
	
	ТекстПредупреждения = РезультатПроверкиПараметровДоступа();
	ПоказатьПредупреждение(, ТекстПредупреждения);
	
КонецПроцедуры

&НаСервере
Функция РезультатПроверкиПараметровДоступа()
	
	СообщениеОбОшибке = Неопределено;
	
	Соединение = ОнлайнСервисыРегламентированнойОтчетностиВызовСервера.УстановитьСоединениеССерверомМеханизмаОнлайнСервисовРО(СообщениеОбОшибке);
	Если Соединение = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Проверка параметров доступа в Интернет прошла неудачно:
						|
						|'") + Строка(СообщениеОбОшибке);
		Возврат ТекстПредупреждения;
	КонецЕсли;
	
	РезультатПолученияФайла = ОнлайнСервисыРегламентированнойОтчетностиВызовСервера.ПолучитьРесурсССервера(Соединение, "infomap.dat", СообщениеОбОшибке);
	Если РезультатПолученияФайла = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Проверка параметров доступа в Интернет прошла неудачно:
						|
						|'") + Строка(СообщениеОбОшибке);
		Возврат ТекстПредупреждения;
	КонецЕсли;
	
	ТекстПредупреждения = НСтр("ru = 'Проверка параметров доступа в Интернет успешно пройдена.'");
	Возврат ТекстПредупреждения;
	
КонецФункции

&НаКлиенте
Процедура НастроитьПараметрыПроксиСервера(Команда)
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ЗапроситьПараметрыПрокси();
	
КонецПроцедуры