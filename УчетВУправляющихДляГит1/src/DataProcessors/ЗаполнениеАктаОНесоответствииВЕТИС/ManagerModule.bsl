#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОНесоответствииВЕТИС") Тогда
		СтруктураТипов = ИнтеграцияИС.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктОНесоответствииВЕТИС",
			НСтр("ru='Акт о несоответствии ВетИС'"),
			СформироватьПечатнуюФормуАктаОНесоответствии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

#КонецОбласти

#Область АктОНесоответствии

Функция СформироватьПечатнуюФормуАктаОНесоответствии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АКТОНЕСООТВЕТСТВИИВЕТИС";
	
	НомерТипаДокумента = 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыАктаОНесоответствии(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументАктОНесоответствииВЕТИС(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументАктОНесоответствииВЕТИС(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	//Данные для печати - структура - результат пакетного запроса и таблицы с номерами
	ДанныеПечати = ДанныеДляПечати.РезультатЗапроса[ДанныеДляПечати.Шапка].Выбрать();
	ВариантРасхождений = Неопределено;
	ДанныеДляПечати.Свойство("ВариантРасхождений",ВариантРасхождений);
	
	ПервыйДокумент = Истина;
	
	Товары   = ДанныеДляПечати.РезультатЗапроса[ДанныеДляПечати.Товары].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ДанныеДляПечати.Свойство("Упаковки") Тогда
		Упаковки = ДанныеДляПечати.РезультатЗапроса[ДанныеДляПечати.Упаковки].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;
	Если ДанныеДляПечати.Свойство("Партии") Тогда
		Партии   = ДанныеДляПечати.РезультатЗапроса[ДанныеДляПечати.Партии].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;
	Если ДанныеДляПечати.Свойство("Маршрут") Тогда
		Маршрут  = ДанныеДляПечати.РезультатЗапроса[ДанныеДляПечати.Маршрут].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;
	Если ДанныеДляПечати.Свойство("Производители") Тогда
		Производители  = ДанныеДляПечати.РезультатЗапроса[ДанныеДляПечати.Производители].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = Новый ТабличныйДокумент;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Товары.Сбросить();
		Товары.НайтиСледующий(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		
		Если ДанныеДляПечати.Свойство("Маршрут") Тогда
			Маршрут.Сбросить();
			Маршрут.НайтиСледующий(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		Иначе
			Маршрут = Неопределено;
		КонецЕсли;
		
		Если ДанныеДляПечати.Свойство("Упаковки") Тогда
			Упаковки.Сбросить();
			Упаковки.НайтиСледующий(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		Иначе
			Упаковки = Неопределено;
		КонецЕсли;
		
		Если ДанныеДляПечати.Свойство("Партии") Тогда
			Партии.Сбросить();
			Партии.НайтиСледующий(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		Иначе
			Партии = Неопределено;
		КонецЕсли;
		
		Если ДанныеДляПечати.Свойство("Производители") Тогда
			Производители.Сбросить();
			Производители.НайтиСледующий(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		Иначе
			Производители = Неопределено;
		КонецЕсли;
		
		ДанныеТабличныхЧастей = Новый Структура;
		ДанныеТабличныхЧастей.Вставить("Товары",        Товары);
		ДанныеТабличныхЧастей.Вставить("Маршрут",       Маршрут);
		ДанныеТабличныхЧастей.Вставить("Упаковки",      Упаковки);
		ДанныеТабличныхЧастей.Вставить("Партии",        Партии);
		ДанныеТабличныхЧастей.Вставить("Производители", Производители);
		
		ЗаполнитьРеквизитыАктаОНесоответствииВЕТИС(ДанныеПечати, ДанныеТабличныхЧастей, Макет, ТабличныйДокумент, ПараметрыПечати, ВариантРасхождений);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыАктаОНесоответствииВЕТИС(Шапка, ДанныеТабличныхЧастей, Макет, ТабличныйДокумент, ПараметрыПечати, ВариантРасхождений)
	
	Если ПараметрыПечати.Свойство("ИмяМакета")Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы(ПараметрыПечати.ИмяМакета);
	Иначе 
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ЗаполнениеАктаОНесоответствииВЕТИС.ПФ_MXL_АктОНесоответствии");
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ТолькоТаблицыРасхождений")Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ОбластьМакета.Параметры.ДатаАктаНесоответствия = Формат(ОбластьМакета.Параметры.ДатаАктаНесоответствия,"ДЛФ=D");
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Если НЕ(ДанныеТабличныхЧастей.Товары.Ссылка = null)Тогда
		ЗаполнитьТаблицуРасхожденийАктаОНесоответствииВЕТИС(ДанныеТабличныхЧастей, Макет, ТабличныйДокумент, ВариантРасхождений, Шапка);
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ТолькоТаблицыРасхождений")Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуРасхожденийАктаОНесоответствииВЕТИС(ДанныеТабличныхЧастей, Макет, ТабличныйДокумент, ВариантРасхождений, Шапка)
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьРасхождение = Макет.ПолучитьОбласть("Строка");
	
	Товары = ДанныеТабличныхЧастей.Товары.Выбрать();
	
	МаршрутСтроки = Неопределено;
	Если ДанныеТабличныхЧастей.Маршрут <> Неопределено
		И ДанныеТабличныхЧастей.Маршрут.БезПеревозки <> Истина Тогда
		МаршрутСтроки = ДанныеТабличныхЧастей.Маршрут.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;
	
	Если НЕ(ДанныеТабличныхЧастей.Упаковки = Неопределено)Тогда 
		УпаковкиСтроки = ДанныеТабличныхЧастей.Упаковки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе 
		УпаковкиСтроки = Новый Структура("Ссылка",null);
	КонецЕсли;
	
	Если НЕ(ДанныеТабличныхЧастей.Партии = Неопределено)Тогда 
		ПартииСтроки = ДанныеТабличныхЧастей.Партии.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе 
		ПартииСтроки = Новый Структура("Ссылка",null);
	КонецЕсли;
	
	Если НЕ(ДанныеТабличныхЧастей.Производители = Неопределено)Тогда 
		ПроизводителиСтроки = ДанныеТабличныхЧастей.Производители.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе 
		ПроизводителиСтроки = Новый Структура("Ссылка",null);
	КонецЕсли;
	
	ВременныйТабличныйДокумент = Новый ТабличныйДокумент;
	
	Пока Товары.Следующий() Цикл
		
		ВременныйТабличныйДокумент.Очистить();
		ОбластьШапка.Параметры.Заполнить(Товары);
		
		Если НЕ(ПроизводителиСтроки.Ссылка = null) Тогда
			ПроизводителиСтроки.Сбросить();
			ЕстьПроизводителиСтроки = ПроизводителиСтроки.НайтиСледующий(Новый Структура("ИдентификаторСтроки",Товары.ИдентификаторСтроки));
			ОписаниеПроизводителей = Новый Массив;
			ДанныеПроизводителя = ПроизводителиСтроки.Выбрать();
			Пока ДанныеПроизводителя.Следующий() Цикл
				Если НЕ ДанныеПроизводителя.Факт Тогда
					ОписаниеПроизводителей.Добавить(ДанныеПроизводителя.ПроизводительПредставление);
				КонецЕсли;
			КонецЦикла;
			СтруктураПроизводитель = Новый Структура("Производитель",СтрСоединить(ОписаниеПроизводителей, ","));
			ОбластьШапка.Параметры.Заполнить(СтруктураПроизводитель);;
		Иначе
			ЕстьПроизводителиСтроки = Ложь;
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОбластьШапка.Параметры,"ИсточникТовара") Тогда
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Товары,"НомерТТНПлан") Тогда
				ОбластьШапка.Параметры.ИсточникТовара = СтрШаблон(
					НСтр("ru = 'По сопроводительным документам %1 от %2 доставлен товар'"),
					Товары.НомерТТНПлан,
					Формат(Товары.ДатаТТНПлан,"ДЛФ=D"));
			Иначе
				ОбластьШапка.Параметры.ИсточникТовара = НСтр("ru = 'При инвентаризации товара'");
			КонецЕсли;
		КонецЕсли;
		
		ВременныйТабличныйДокумент.Вывести(ОбластьШапка);
		ВысотаШапки = ВременныйТабличныйДокумент.ВысотаТаблицы;
		
		Если НЕ(МаршрутСтроки = Неопределено)Тогда
			МаршрутСтроки.Сбросить();
			МаршрутСтроки.НайтиСледующий(Новый Структура("ИдентификаторСтроки",Товары.ИдентификаторСтроки));
		КонецЕсли;
		
		Если НЕ(УпаковкиСтроки.Ссылка = null) Тогда
			УпаковкиСтроки.Сбросить();
			ЕстьУпаковкиСтроки = УпаковкиСтроки.НайтиСледующий(Новый Структура("ИдентификаторСтроки",Товары.ИдентификаторСтроки));
		Иначе
			ЕстьУпаковкиСтроки = Ложь;
		КонецЕсли;
		
		Если НЕ(ПартииСтроки.Ссылка = null) Тогда
			ПартииСтроки.Сбросить();
			ЕстьПартииСтроки = ПартииСтроки.НайтиСледующий(Новый Структура("ИдентификаторСтроки",Товары.ИдентификаторСтроки));
		Иначе
			ЕстьПартииСтроки = Ложь;
		КонецЕсли;
		
		ПроверитьВывестиРасхождения(Товары,НесоответствияШапки(ВариантРасхождений),ОбластьРасхождение,ВременныйТабличныйДокумент);
		
		Если НЕ(МаршрутСтроки = Неопределено)Тогда
			ПроверитьВывестиРасхождения(МаршрутСтроки,НесоответствияМаршрута(ВариантРасхождений),ОбластьРасхождение,ВременныйТабличныйДокумент);
		КонецЕсли;
		
		Если ЕстьУпаковкиСтроки Тогда
			ПроверитьВывестиРасхожденияТЧ("Упаковки",НесоответствияУпаковки(ВариантРасхождений),УпаковкиСтроки,ОбластьРасхождение,ВременныйТабличныйДокумент);
		КонецЕсли;
		Если ЕстьПартииСтроки Тогда
			ПроверитьВывестиРасхожденияТЧ("Партии",НесоответствияПартии(ВариантРасхождений),ПартииСтроки,ОбластьРасхождение,ВременныйТабличныйДокумент);
		КонецЕсли;
		Если ЕстьПроизводителиСтроки Тогда 
			ПроверитьВывестиРасхожденияТЧ("Производители",НесоответствияПроизводителя(ВариантРасхождений),ПроизводителиСтроки,ОбластьРасхождение,ВременныйТабличныйДокумент);
		КонецЕсли;
		
		Если ВременныйТабличныйДокумент.ВысотаТаблицы > ВысотаШапки Тогда
			ОбластьВывод = ВременныйТабличныйДокумент.ПолучитьОбласть(1,,ВременныйТабличныйДокумент.ВысотаТаблицы);
			Если ТабличныйДокумент.ПроверитьВывод(ОбластьВывод) = Ложь Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьВывод);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПроверитьВывестиРасхождения(Выборка,Расхождения,ОбластьРасхождение,ТабличныйДокумент)
	
	Для Каждого Поля Из Расхождения Цикл
		Если Поля.Значение.Свойство("Специальный") Тогда
			Если Поля.Ключ = "Количество" Тогда
				ПредставлениеКоличествоПлан = "" + Выборка.КоличествоПлан + " " + Выборка.ЕдиницаИзмеренияПланПредставление;
				ПредставлениеКоличествоФакт = "" + Выборка.КоличествоФакт + " " + Выборка.ЕдиницаИзмеренияФактПредставление;
				Если Поля.Значение.Свойство("ОтРасхождения") Тогда 
					Знак = 1;
				Иначе
					Знак = -1;
				КонецЕсли;
				
				Если Выборка.ЕдиницаИзмеренияПлан = Выборка.ЕдиницаИзмеренияФакт Тогда
					ПредставлениеРасхождения = "" + (Выборка.КоличествоФакт + Знак * Выборка.КоличествоПлан) + " " + Выборка.ЕдиницаИзмеренияФактПредставление;
					Если Знак = -1 И Выборка.КоличествоФакт <> Выборка.КоличествоПлан Тогда 
						ВывестиСтрокуРасхождения(НСтр("ru='Количество'"),ПредставлениеКоличествоПлан,ПредставлениеКоличествоФакт,ПредставлениеРасхождения,ОбластьРасхождение,ТабличныйДокумент);
					ИначеЕсли Знак = 1 И Выборка.КоличествоФакт <> 0 Тогда 
						ВывестиСтрокуРасхождения(НСтр("ru='Количество'"),ПредставлениеКоличествоПлан,ПредставлениеРасхождения,ПредставлениеКоличествоФакт,ОбластьРасхождение,ТабличныйДокумент);
					КонецЕсли;
				Иначе 
					Массив = Новый Массив;
					Массив.Добавить(Выборка.ЕдиницаИзмеренияФакт);
					Массив.Добавить(Выборка.ЕдиницаИзмеренияПлан);
					Базовые = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Массив,"БазоваяЕдиницаИзмерения,Коэффициент");
					Если НЕ ЗначениеЗаполнено(Выборка.ЕдиницаИзмеренияПлан)Тогда
						ПредставлениеРасхождения = ПредставлениеКоличествоФакт;
					ИначеЕсли Базовые[Выборка.ЕдиницаИзмеренияПлан].БазоваяЕдиницаИзмерения = Выборка.ЕдиницаИзмеренияФакт Тогда
						ПредставлениеРасхождения = "" + (Выборка.КоличествоФакт + Знак * Выборка.КоличествоПлан*Базовые[Выборка.ЕдиницаИзмеренияПлан].Коэффициент) + " " + Выборка.ЕдиницаИзмеренияФактПредставление;
					ИначеЕсли Базовые[Выборка.ЕдиницаИзмеренияФакт].БазоваяЕдиницаИзмерения = Выборка.ЕдиницаИзмеренияПлан Тогда
						ПредставлениеРасхождения = "" + (Выборка.КоличествоФакт*Базовые[Выборка.ЕдиницаИзмеренияФакт].Коэффициент + Знак * Выборка.КоличествоПлан) + " " + Выборка.ЕдиницаИзмеренияПланПредставление;
					ИначеЕсли Базовые[Выборка.ЕдиницаИзмеренияФакт].БазоваяЕдиницаИзмерения = Базовые[Выборка.ЕдиницаИзмеренияПлан].БазоваяЕдиницаИзмерения
						И Базовые[Выборка.ЕдиницаИзмеренияФакт].БазоваяЕдиницаИзмерения <> Справочники.ЕдиницыИзмеренияВЕТИС.ПустаяСсылка()
						И Базовые[Выборка.ЕдиницаИзмеренияФакт].Коэффициент <> 0 Тогда
						ПредставлениеРасхождения = "" + (Выборка.КоличествоФакт
						 + Знак * Выборка.КоличествоПлан
						 	* Базовые[Выборка.ЕдиницаИзмеренияПлан].Коэффициент
							/ Базовые[Выборка.ЕдиницаИзмеренияФакт].Коэффициент) + " " + Выборка.ЕдиницаИзмеренияФактПредставление;
					Иначе 
						ПредставлениеРасхождения = НСтр("ru='Не сравнимо'");
					КонецЕсли;
					ВывестиСтрокуРасхождения(
						НСтр("ru='Количество'"),
						ПредставлениеКоличествоПлан,
						?(Знак = 1,ПредставлениеРасхождения,ПредставлениеКоличествоФакт),
						?(Знак = 1,ПредставлениеКоличествоФакт,ПредставлениеРасхождения),
						ОбластьРасхождение,
						ТабличныйДокумент);
				КонецЕсли;
			ИначеЕсли Поля.Ключ = "ТТН" Тогда
				ПредставлениеТТНПлан  = ПредставлениеТТН(Выборка,"План");
				ПредставлениеТТНФакт = ПредставлениеТТН(Выборка,"Факт");
				Если ПредставлениеТТНПлан <> ПредставлениеТТНФакт Тогда
					ВывестиСтрокуРасхождения("ТТН",ПредставлениеТТНПлан,ПредставлениеТТНФакт,Ложь,ОбластьРасхождение,ТабличныйДокумент);
				КонецЕсли;
			Иначе //периоды
				ПредставлениеПериодаПлан = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПериодаВЕТИС(
					Выборка[Поля.Ключ + "ТочностьЗаполненияПлан"],
					Выборка[Поля.Ключ + "НачалоПериодаПлан"],
					Выборка[Поля.Ключ + "КонецПериодаПлан"],
					Выборка[Поля.Ключ + "СтрокаПлан"]);
				ПредставлениеПериодаФакт = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПериодаВЕТИС(
					Выборка[Поля.Ключ + "ТочностьЗаполненияФакт"],
					Выборка[Поля.Ключ + "НачалоПериодаФакт"],
					Выборка[Поля.Ключ + "КонецПериодаФакт"],
					Выборка[Поля.Ключ + "СтрокаФакт"]);
				Если ПредставлениеПериодаПлан<>ПредставлениеПериодаФакт Тогда
					ВывестиСтрокуРасхождения(Поля.Значение.Описание,ПредставлениеПериодаПлан,ПредставлениеПериодаФакт,Ложь,ОбластьРасхождение,ТабличныйДокумент);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если Выборка[Поля.Ключ + "План"] <> Выборка[Поля.Ключ + "Факт"] Тогда
				ИмяПоля = ?(Поля.Значение.Свойство("Описание"),Поля.Значение.Описание,Поля.Ключ);
				Числовой = Поля.Значение.Свойство("Числовой");
				Постфикс = ?(Поля.Значение.Свойство("Представление"),"Представление","");
				ВывестиСтрокуРасхождения(ИмяПоля,Выборка[Поля.Ключ+"План"+Постфикс],Выборка[Поля.Ключ+"Факт"+Постфикс],Числовой,ОбластьРасхождение,ТабличныйДокумент);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиСтрокуРасхождения(Поле,План,Факт,Разница,ОбластьРасхождение,ТабличныйДокумент)
	
	ОбластьРасхождение.Параметры.Поле = Поле;
	ОбластьРасхождение.Параметры.План = План;
	ОбластьРасхождение.Параметры.Факт = Факт;
	Если Разница = Ложь Тогда
		ОбластьРасхождение.Параметры.Разница = "";
	ИначеЕсли Разница = Истина Тогда 
		ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
		ОбластьРасхождение.Параметры.Разница = ОписаниеТиповЧисло.ПривестиЗначение(Факт)-ОписаниеТиповЧисло.ПривестиЗначение(План);
	Иначе 
		ОбластьРасхождение.Параметры.Разница = Разница;
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьРасхождение);
	
КонецПроцедуры

Функция ПредставлениеТТН(Выборка,Постфикс)
	
	Если ЗначениеЗаполнено(Выборка["СерияТТН"+Постфикс])
		ИЛИ ЗначениеЗаполнено(Выборка["НомерТТН"+Постфикс])
		ИЛИ ЗначениеЗаполнено(Выборка["ДатаТТН"+Постфикс])Тогда 
		Возврат СтрШаблон(НСтр("ru = 'Серия %1 номер %2 от %3'")
			,Выборка["СерияТТН"+Постфикс]
			,Выборка["НомерТТН"+Постфикс]
			,Формат(Выборка["ДатаТТН"+Постфикс],"ДЛФ=D"));
	Иначе 
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция НесоответствияШапки(ВариантРасхождений)
	Результат = Новый Структура;
	Результат.Вставить("Количество",Новый Структура("Числовой,Специальный"));
	Результат.Вставить("Продукция", Новый Структура("Представление"));
	Если ВариантРасхождений <> "ДляИнвентаризации" Тогда 
	Иначе 
		Результат.Количество.Вставить("ОтРасхождения");
		Результат.Вставить("СкоропортящаясяПродукция",Новый Структура("Описание",НСтр("ru='Скоропортящаяся продукция'")));
		Результат.Вставить("НизкокачественнаяПродукция",Новый Структура("Описание",НСтр("ru='Низкокачественная продукция'")));
		Результат.Вставить("ДатаПроизводства",Новый Структура("Описание,Специальный",НСтр("ru='Дата производства'")));
		Результат.Вставить("СтранаПроизводства", Новый Структура("Описание,Представление",НСтр("ru='Страна производства'")));
	КонецЕсли;
	Результат.Вставить("СрокГодности",Новый Структура("Описание,Специальный",НСтр("ru='Срок годности'")));
	Возврат Результат;
КонецФункции

Функция НесоответствияМаршрута(ВариантРасхождений)
	Результат = Новый Структура;
	Результат.Вставить("НомерТранспортногоСредства",Новый Структура("Описание",НСтр("ru='Номер транспортного средства'")));
	Результат.Вставить("НомерАвтомобильногоПрицепа",Новый Структура("Описание",НСтр("ru='Номер автомобильного прицепа'")));
	Результат.Вставить("НомерАвтомобильногоКонтейнера",Новый Структура("Описание",НСтр("ru='Номер автомобильного контейнера'")));
	Результат.Вставить("ТипТранспорта",Новый Структура("Описание",НСтр("ru='Тип транспорта'")));
	Результат.Вставить("ТипТТН",Новый Структура("Описание",НСтр("ru='Тип ТТН'")));
	Результат.Вставить("ТТН",Новый Структура("Специальный"));
	Возврат Результат;
КонецФункции

Функция НесоответствияУпаковки(ВариантРасхождений)
	Результат = Новый Структура;
	Результат.Вставить("УровеньУпаковки",Новый Структура("Описание,Представление,",""));
	Результат.Вставить("УпаковкаВЕТИС",Новый Структура("Описание,Представление",""));
	Результат.Вставить("КоличествоУпаковокВЕТИС",Новый Структура("Описание,Числовой",""));
	Возврат Результат;
КонецФункции

Функция НесоответствияПартии(ВариантРасхождений)
	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторПартии",Новый Структура("Описание",""));
	Возврат Результат;
КонецФункции

Функция НесоответствияПроизводителя(ВариантРасхождений)
	Результат = Новый Структура;
	Если ВариантРасхождений = "ДляИнвентаризации" Тогда
		Результат.Вставить("Производитель",Новый Структура("Описание,Представление",""));
	КонецЕсли;
	Возврат Результат;
КонецФункции

Процедура ПроверитьВывестиРасхожденияТЧ(ЗаголовокПоля, ПараметрыРасхождений, ВыборкаТЧ, ОбластьРасхождение, ТабличныйДокумент)
	
	Выборка = ВыборкаТЧ.Выбрать();
	ХешПлан = "";
	ХешФакт = "";
	ПредставлениеПлан = "";
	ПредставлениеФакт = "";
	ЗначениеПлан = 0;
	ЗначениеФакт = 0;
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	
	Пока Выборка.Следующий() Цикл
		СтрокаХеш = "";
		СтрокаПредставление = "";
		ЧисловоеЗначение = 0;
		Для Каждого Поля Из ПараметрыРасхождений Цикл
			СтрокаХеш = СтрокаХеш + XMLСтрока(Выборка[Поля.Ключ]);
			
			ДанныеПоля = Поля.Значение.Описание;
			Если Поля.Значение.Свойство("Представление")Тогда
				ЗначениеПоля = Выборка[Поля.Ключ + "Представление"];
			Иначе 
				ЗначениеПоля = Выборка[Поля.Ключ];
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЗначениеПоля)Тогда 
				СтрокаПредставление = СтрокаПредставление + ", " + ДанныеПоля + ЗначениеПоля;
			КонецЕсли;
			
			Если Поля.Значение.Свойство("Числовой")Тогда
				ЧисловоеЗначение = ОписаниеТиповЧисло.ПривестиЗначение(ЗначениеПоля);
			КонецЕсли;
			
		КонецЦикла;
		
		Если Выборка.Факт Тогда
			Если ЗначениеЗаполнено(СтрокаПредставление)Тогда
				ПредставлениеФакт = ?(ПредставлениеФакт = "", "", ПредставлениеФакт + Символы.ПС) + Сред(СтрокаПредставление,3);
			КонецЕсли;
			ХешФакт = ХешФакт + СтрокаХеш;
			ЗначениеФакт = ЗначениеФакт + ЧисловоеЗначение;
		Иначе 
			Если ЗначениеЗаполнено(СтрокаПредставление)Тогда
				ПредставлениеПлан = ?(ПредставлениеПлан = "", "", ПредставлениеПлан + Символы.ПС) + Сред(СтрокаПредставление,3);
			КонецЕсли;
			ХешПлан = ХешПлан + СтрокаХеш;
			ЗначениеПлан = ЗначениеПлан + ЧисловоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	Если ХешПлан <> ХешФакт Тогда 
		ВывестиСтрокуРасхождения(ЗаголовокПоля, ПредставлениеПлан, ПредставлениеФакт, ЗначениеФакт - ЗначениеПлан, ОбластьРасхождение, ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли