#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция РазложитьМассивПоТипамОбъектов(МассивОбъектов)
	СтруктураТипов = Новый Структура;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если ТипЗнч(Объект) 	= Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Если НЕ СтруктураТипов.Свойство("РеализацияТоваровУслуг") Тогда
				МассивРеализаций 	= Новый Массив;
				СтруктураТипов.Вставить("РеализацияТоваровУслуг", МассивРеализаций);
			КонецЕсли;
			СтруктураТипов.РеализацияТоваровУслуг.Добавить(Объект);
		ИначеЕсли ТипЗнч(Объект) 	= Тип("ДокументСсылка.ПередачаТоваров") Тогда
			Если НЕ СтруктураТипов.Свойство("ПередачаТоваров") Тогда
				МассивПеремещений 	= Новый Массив;
				СтруктураТипов.Вставить("ПередачаТоваров", МассивПеремещений);
			КонецЕсли;
			СтруктураТипов.ПередачаТоваров.Добавить(Объект);
		КонецЕсли;
		
	КонецЦикла;
	Возврат СтруктураТипов;
КонецФункции


// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ПЕЧАТНЫХ ФОРМ

// Интерфейс для запуска логики обработки
//
// Параметры
// МассивОбъектов - Массив - массив ссылок на объекты печати
// КоллекцияПечатныхФорм - ТаблицаЗначений - таблица содержащая информацию по печатным формам
// ОбъектыПечати - СписокЗначений - ссылки на объекты печати
// ПараметрыВывода - Структура - дополнительные параметры вывода (печать покомплектно и др.)
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТранспортнаяНакладная") Тогда
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТранспортнаяНакладная", "Транспортная накладная",
			СформироватьПечатнуюФормуТранспортнойНакладной(МассивОбъектов, ОбъектыПечати, ИмяМакета),,ИмяМакета);
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуТранспортнойНакладной(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТРАНСПОРТНАЯ_НАКЛАДНАЯ";
	
	НомерТипаДокумента = 0;
	СтруктураТипов = РазложитьМассивПоТипамОбъектов(МассивОбъектов);
	ПервыйДокумент = Истина;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		ДанныеДляПечати = Документы[СтруктураОбъектов.Ключ].ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументТН(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ИмяМакета, ПервыйДокумент);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументТН(ТабличныйДокумент, ТаблицаДанныхДляПечати, ОбъектыПечати, ИмяМакета, ПервыйДокумент)
	
	КоличествоТН = 0;
	КоличествоТН1208 = 0;
	КоличествоТН1529 = 0;
	
	Для Каждого ДанныеПечати Из ТаблицаДанныхДляПечати Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВариантПечатиНакладной = ?(ДанныеПечати.Дата < '20120313', "ТранспортнаяНакладная", "ТранспортнаяНакладная1208");
		
		Если ВариантПечатиНакладной = "ТранспортнаяНакладная" Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТранспортнойНакладной.ПФ_MXL_ТранспортнаяНакладная");
			КоличествоТН = КоличествоТН + 1;
		ИначеЕсли ДанныеПечати.Дата < '20171222' Тогда 
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТранспортнойНакладной.ПФ_MXL_ТранспортнаяНакладная1208");
			КоличествоТН1208 = КоличествоТН1208 + 1;
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТранспортнойНакладной.ПФ_MXL_ТранспортнаяНакладная1529");
			КоличествоТН1529 = КоличествоТН1529 + 1;
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ГоризонтальнаяЛицеваяСторона");
		ОбластьМакетаОборотная = Макет.ПолучитьОбласть("ГоризонтальнаяОборотнаяСторона");
		
		ПараметрыМакета = Новый Структура;
		
		СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправителе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
		СведенияОПеревозчике      = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Перевозчик,       ДанныеПечати.Дата);
		
		ПредставлениеГрузоотправителя = "";
		Грузоотправитель              = "";
		
		Если СведенияОГрузополучателе.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ПараметрыМакета.Вставить("Пункт2_1", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"));
		Иначе
			ПараметрыМакета.Вставить("Пункт2_2", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе, 
			"ПолноеНаименование,ФактическийАдрес,Телефоны"));
		КонецЕсли;
		
		Если СведенияОГрузоотправителе.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ПредставлениеГрузоотправителя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправителе, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");
			ПараметрыМакета.Вставить("Пункт1_1", ПредставлениеГрузоотправителя);
			Грузоотправитель = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование");
		Иначе
			ПредставлениеГрузоотправителя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправителе, 
			"ПолноеНаименование,ФактическийАдрес,Телефоны");
			ПараметрыМакета.Вставить("Пункт1_2", ПредставлениеГрузоотправителя);
			Грузоотправитель = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование");
		КонецЕсли;
		
		ПараметрыМакета.Вставить("Пункт0_2", Формат(ДанныеПечати.Дата, "ДЛФ=D"));
		
		ПараметрыМакета.Вставить("Пункт3_1", ДанныеПечати.КраткоеНаименованиеГруза);
		
		ПараметрыМакета.Вставить("Пункт4_1", ДанныеПечати.СопроводительныеДокументы);
		
		ПараметрыМакета.Вставить("Пункт6_1", СведенияОГрузоотправителе.ФактическийАдрес);
		
		Если ВариантПечатиНакладной = "ТранспортнаяНакладная1208" Тогда
			
			Если ЗначениеЗаполнено(ДанныеПечати.ОтпускПроизвел) Тогда 
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ДанныеПечати.Организация, ДанныеПечати.ОтпускПроизвел, ДанныеПечати.Дата);
				ПараметрыМакета.Вставить("Пункт6_6", СокрЛП(СтрШаблон(НСтр("ru = '%1 %2 %3 %4'"), ДанныеФизЛица.Должность, ДанныеФизЛица.Фамилия, ДанныеФизЛица.Имя, ДанныеФизЛица.Отчество)));
			КонецЕсли;
			
			ПараметрыМакета.Вставить("Пункт6_7", ДанныеПечати.Водитель);
			ПараметрыМакета.Вставить("Пункт7_7", ДанныеПечати.Водитель);
			ПараметрыМакета.Вставить("Пункт9_1", Формат(ДанныеПечати.Дата, "ДЛФ=D"));
		КонецЕсли;
		
		ПараметрыМакета.Вставить("Пункт7_1", ДанныеПечати.АдресДоставки);
		
		ОбластьМакета.Параметры.Заполнить(ПараметрыМакета);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПараметрыМакетаОборотная = Новый Структура;
		
		Если СведенияОПеревозчике.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ПредставлениеПеревозчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПеревозчике, 
										"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");
			ПараметрыМакетаОборотная.Вставить("Пункт10_1", ПредставлениеПеревозчика);
			Перевозчик = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПеревозчике, "ПолноеНаименование");
		Иначе
			ПредставлениеПеревозчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПеревозчике, 
										"ПолноеНаименование,ФактическийАдрес,Телефоны");
			ПараметрыМакетаОборотная.Вставить("Пункт10_2", ПредставлениеПеревозчика);
			Перевозчик = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПеревозчике, "ПолноеНаименование");
		КонецЕсли;
		
		Если ВариантПечатиНакладной = "ТранспортнаяНакладная" Тогда
			ПараметрыМакетаОборотная.Вставить("Пункт10_4", ДанныеПечати.Водитель);
		ИначеЕсли ВариантПечатиНакладной = "ТранспортнаяНакладная1208" Тогда
			ПараметрыМакетаОборотная.Вставить("Пункт10_3", ДанныеПечати.Водитель);
		КонецЕсли;
		
		ПараметрыМакетаОборотная.Вставить("Пункт11_1", ДанныеПечати.МаркаАвтомобиля);
		ПараметрыМакетаОборотная.Вставить("Пункт11_2", ДанныеПечати.РегистрационныйЗнакАвтомобиля);
		
		ПараметрыМакетаОборотная.Вставить("Пункт16_1", Грузоотправитель);
		ПараметрыМакетаОборотная.Вставить("Пункт16_2", Перевозчик);
		
		Если ВариантПечатиНакладной = "ТранспортнаяНакладная1208" Тогда
			ПараметрыМакетаОборотная.Вставить("Пункт16_11", Формат(ДанныеПечати.Дата, "ДЛФ=D"));
			ПараметрыМакетаОборотная.Вставить("Пункт16_21", Формат(ДанныеПечати.Дата, "ДЛФ=D"));
		КонецЕсли;
		
		ОбластьМакетаОборотная.Параметры.Заполнить(ПараметрыМакетаОборотная);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаОборотная);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
	КонецЦикла;
	
	Если КоличествоТН = 0 И КоличествоТН1208 = 0 Тогда
		ИмяМакета = "Обработка.ПечатьТранспортнойНакладной.ПФ_MXL_ТранспортнаяНакладная1529";
	ИначеЕсли КоличествоТН = 0 И КоличествоТН1529 = 0 Тогда
		ИмяМакета = "Обработка.ПечатьТранспортнойНакладной.ПФ_MXL_ТранспортнаяНакладная1208";
	ИначеЕсли КоличествоТН1208 = 0 И КоличествоТН1529 = 0 Тогда
		ИмяМакета = "Обработка.ПечатьТранспортнойНакладной.ПФ_MXL_ТранспортнаяНакладная";
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли