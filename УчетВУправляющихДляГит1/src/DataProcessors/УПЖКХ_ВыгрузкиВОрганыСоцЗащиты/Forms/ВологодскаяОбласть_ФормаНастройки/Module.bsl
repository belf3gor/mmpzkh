
//////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ПрочиеПроцедурыИФункции

&НаСервере
// Заполняет ТЧ "Коды организаций" на сервере.
//
Процедура ЗаполнитьКодыОрганизацийНаСервере()
	
	Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления";
	
	СписокОрганизаций = Запрос.Выполнить().Выгрузить();
	
	Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций.Загрузить(СписокОрганизаций);
	
КонецПроцедуры

&НаСервере
// Заполняет ТЧ "Коды льготных категорий" на сервере.
//
Процедура ЗаполнитьКодыЛьготныхКатегорийНаСервере()
	
	Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_ЛьготныеКатегории.Ссылка КАК ЛьготнаяКатегория
	|ИЗ
	|	Справочник.КВП_ЛьготныеКатегории КАК КВП_ЛьготныеКатегории
	|ГДЕ
	|	НЕ КВП_ЛьготныеКатегории.ПометкаУдаления";
	
	СписокЛК = Запрос.Выполнить().Выгрузить();
	
	Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий.Загрузить(СписокЛК);
	
КонецПроцедуры

&НаСервере
// Заполняет ТЧ "Виды собственности" на сервере.
//
Процедура ЗаполнитьВидыСобственностиНаСервере()
	
	Объект.ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности.Очистить();
	
	Для Каждого Перечисление Из Перечисления.УПЖКХ_ВидыСобственности Цикл
		Объект.ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности.Добавить().ВидСобственности = Перечисление;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Заполняет ТЧ "Услуги" на сервере.
//
Процедура ЗаполнитьУслугиНаСервере()
	
	Объект.ВологодскаяОбласть_ТаблицаНастройкиУслуг.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_Услуги.Ссылка КАК Услуга
	|ИЗ
	|	Справочник.КВП_Услуги КАК КВП_Услуги
	|ГДЕ
	|	НЕ КВП_Услуги.ЭтоГруппа
	|	И НЕ КВП_Услуги.ПометкаУдаления";
	
	СписокУслуг = Запрос.Выполнить().Выгрузить();
	
	Объект.ВологодскаяОбласть_ТаблицаНастройкиУслуг.Загрузить(СписокУслуг);
	
КонецПроцедуры

&НаСервере
// Заполняет ТЧ "Формы управления МКД" на сервере.
//
Процедура ЗаполнитьЗданияНаСервере()
	
	Объект.ВологодскаяОбласть_ФормыУправленияМКД.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_Здания.Ссылка КАК Здание
	|ИЗ
	|	Справочник.КВП_Здания КАК КВП_Здания
	|ГДЕ
	|	НЕ КВП_Здания.ПометкаУдаления";
	
	СписокЗданий = Запрос.Выполнить().Выгрузить();
	
	Объект.ВологодскаяОбласть_ФормыУправленияМКД.Загрузить(СписокЗданий);
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////////////////////////////////////////
// РАБОТА С ВРЕМЕННЫМ ХРАНИЛИЩЕМ

#Область РаботаСВременнымХранилищем

&НаСервере
// Помещает настройки во временное хранилище.
Функция ПоместитьНастройкиВХранилище()
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций",       Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций.Выгрузить());
	СтруктураНастроек.Вставить("ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности",     Объект.ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности.Выгрузить());
	СтруктураНастроек.Вставить("ВологодскаяОбласть_ТаблицаНастройкиУслуг",                  Объект.ВологодскаяОбласть_ТаблицаНастройкиУслуг.Выгрузить());
	СтруктураНастроек.Вставить("ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий", Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий.Выгрузить());
	СтруктураНастроек.Вставить("ВологодскаяОбласть_ФормыУправленияМКД",                     Объект.ВологодскаяОбласть_ФормыУправленияМКД.Выгрузить());
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураНастроек, Новый УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получаем настройки из хранилища.
	Если Параметры.Свойство("АдресНастроекВХранилище") И Не Параметры.АдресНастроекВХранилище = Неопределено Тогда
		
		СтруктураНастроек = ПолучитьИзВременногоХранилища(Параметры.АдресНастроекВХранилище);
		
		Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
			
			Если СтруктураНастроек.Свойство("ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций") Тогда
				Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций.Загрузить(СтруктураНастроек.ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций);
			КонецЕсли;
			
			Если СтруктураНастроек.Свойство("ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности") Тогда
				Объект.ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности.Загрузить(СтруктураНастроек.ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности);
			КонецЕсли;
			
			Если СтруктураНастроек.Свойство("ВологодскаяОбласть_ТаблицаНастройкиУслуг") Тогда
				Объект.ВологодскаяОбласть_ТаблицаНастройкиУслуг.Загрузить(СтруктураНастроек.ВологодскаяОбласть_ТаблицаНастройкиУслуг);
			КонецЕсли;
			
			Если СтруктураНастроек.Свойство("ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий") Тогда
				Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий.Загрузить(СтруктураНастроек.ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий);
			КонецЕсли;
			
			Если СтруктураНастроек.Свойство("ВологодскаяОбласть_ФормыУправленияМКД") Тогда
				Объект.ВологодскаяОбласть_ФормыУправленияМКД.Загрузить(СтруктураНастроек.ВологодскаяОбласть_ФормыУправленияМКД);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "КомандаСохранить".
Процедура КомандаСохранить(Команда)
	
	Закрыть(ПоместитьНастройкиВХранилище());
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьУслуги".
Процедура КомандаЗаполнитьУслуги(Команда)
	
	Если НЕ Объект.ВологодскаяОбласть_ТаблицаНастройкиУслуг.Количество() = 0 Тогда
		ПоказатьВопрос(	Новый ОписаниеОповещения("КомандаЗаполнитьУслугиЗавершение", ЭтотОбъект),
						"Перед заполением табличная часть будет очищена. Заполнить?",
						РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьУслугиПродолжение();
	
КонецПроцедуры // КомандаЗаполнитьУслуги()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьУслуги()".
Процедура КомандаЗаполнитьУслугиЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КомандаЗаполнитьУслугиПродолжение();
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьУслугиЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьУслуги()".
Процедура КомандаЗаполнитьУслугиПродолжение()
	
	ЗаполнитьУслугиНаСервере();
	
КонецПроцедуры // КомандаЗаполнитьУслугиПродолжение()

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьВидыСобственности".
Процедура КомандаЗаполнитьВидыСобственности(Команда)
	
	Если НЕ Объект.ВологодскаяОбласть_ТаблицаНастройкиВидовСобственности.Количество() = 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("КомандаЗаполнитьВидыСобственностиЗавершение", ЭтотОбъект),
					   "Перед заполением табличная часть будет очищена. Заполнить?",
					   РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьВидыСобственностиПродожение();
	
КонецПроцедуры // КомандаЗаполнитьВидыСобственности()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьВидыСобственности()".
Процедура КомандаЗаполнитьВидыСобственностиЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КомандаЗаполнитьВидыСобственностиПродожение();
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьВидыСобственностиЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьВидыСобственности()".
Процедура КомандаЗаполнитьВидыСобственностиПродожение()
	
	ЗаполнитьВидыСобственностиНаСервере();

КонецПроцедуры // КомандаЗаполнитьВидыСобственностиПродожение()

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьКодыОрганизаций".
Процедура КомандаЗаполнитьКодыОрганизаций(Команда)
	
	Если НЕ Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовОрганизаций.Количество() = 0 Тогда
		ПоказатьВопрос(	Новый ОписаниеОповещения("КомандаЗаполнитьКодыОрганизацийЗавершение", ЭтотОбъект),
						"Перед заполением табличная часть будет очищена. Заполнить?",
						РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьКодыОрганизацийПродолжение();
	
КонецПроцедуры // КомандаЗаполнитьКодыОрганизаций()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьКодыОрганизаций()".
Процедура КомандаЗаполнитьКодыОрганизацийЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КомандаЗаполнитьКодыОрганизацийПродолжение();
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьКодыОрганизацийЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьКодыОрганизаций()".
Процедура КомандаЗаполнитьКодыОрганизацийПродолжение()
	
	ЗаполнитьКодыОрганизацийНаСервере();
	
КонецПроцедуры // КомандаЗаполнитьКодыОрганизацийПродолжение()

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьКодыЛьготныхКатегорий".
Процедура КомандаЗаполнитьКодыЛьготныхКатегорий(Команда)
	
	Если НЕ Объект.ВологодскаяОбласть_ТаблицаНастройкиКодовЛьготныхКатегорий.Количество() = 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("КомандаЗаполнитьКодыЛьготныхКатегорийЗавершение", ЭтотОбъект),
						"Перед заполением табличная часть будет очищена. Заполнить?",
						РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьКодыЛьготныхКатегорийПродолжение();
	
КонецПроцедуры // КомандаЗаполнитьКодыЛьготныхКатегорий()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьКодыЛьготныхКатегорий()".
Процедура КомандаЗаполнитьКодыЛьготныхКатегорийЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КомандаЗаполнитьКодыЛьготныхКатегорийПродолжение();
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьКодыЛьготныхКатегорийЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьКодыЛьготныхКатегорий()".
Процедура КомандаЗаполнитьКодыЛьготныхКатегорийПродолжение()
	
	ЗаполнитьКодыЛьготныхКатегорийНаСервере();
	
КонецПроцедуры // КомандаЗаполнитьКодыЛьготныхКатегорийПродолжение()

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьЗдания".
Процедура КомандаЗаполнитьЗдания(Команда)
	
	Если НЕ Объект.ВологодскаяОбласть_ФормыУправленияМКД.Количество() = 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("КомандаЗаполнитьЗданияЗавершение", ЭтотОбъект),
						"Перед заполением табличная часть будет очищена. Заполнить?",
						РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьЗданияПродолжение();
	
КонецПроцедуры

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьЗдания()".
Процедура КомандаЗаполнитьЗданияЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КомандаЗаполнитьЗданияПродолжение();
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьЗданияЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьЗдания()".
Процедура КомандаЗаполнитьЗданияПродолжение()
	
	ЗаполнитьЗданияНаСервере();
	
КонецПроцедуры // КомандаЗаполнитьЗданияПродолжение()

#КонецОбласти
