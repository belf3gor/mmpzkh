
//////////////////////////////////////////////////////////////////////////
// РАБОТА С ВРЕМЕННЫМ ХРАНИЛИЩЕМ

#Область РаботаСВременнымХранилищем

&НаСервере
// Помещает настройки во временное хранилище.
//
Функция ПоместитьНастройкиВХранилище()
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("КировскаяОбласть_ТаблицаКодовУслуг",             Объект.КировскаяОбласть_ТаблицаКодовУслуг.Выгрузить());
	СтруктураНастроек.Вставить("КировскаяОбласть_СоответствиеЛьготныхКатегорий", Объект.КировскаяОбласть_СоответствиеЛьготныхКатегорий.Выгрузить());
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураНастроек, Новый УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получаем настройки из хранилища.
	Если Параметры.Свойство("АдресНастроекВХранилище") И Не Параметры.АдресНастроекВХранилище = Неопределено Тогда
		
		СтруктураНастроек = ПолучитьИзВременногоХранилища(Параметры.АдресНастроекВХранилище);
		
		Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
			
			Если СтруктураНастроек.Свойство("КировскаяОбласть_ТаблицаКодовУслуг") Тогда
				Объект.КировскаяОбласть_ТаблицаКодовУслуг.Загрузить(СтруктураНастроек.КировскаяОбласть_ТаблицаКодовУслуг);
			КонецЕсли;
			
			Если СтруктураНастроек.Свойство("КировскаяОбласть_СоответствиеЛьготныхКатегорий") Тогда
				Объект.КировскаяОбласть_СоответствиеЛьготныхКатегорий.Загрузить(СтруктураНастроек.КировскаяОбласть_СоответствиеЛьготныхКатегорий);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "КомандаСохранить".
//
Процедура КомандаСохранить(Команда)
	
	Закрыть(ПоместитьНастройкиВХранилище());
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПередНачаломДобавления" табличного поля "КировскаяОбласть_СоответствиеЛьготныхКатегорий".
//
Процедура КировскаяОбласть_СоответствиеЛьготныхКатегорийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПередУдалением" табличного поля "КировскаяОбласть_СоответствиеЛьготныхКатегорий".
//
Процедура КировскаяОбласть_СоответствиеЛьготныхКатегорийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПередНачаломДобавления" табличного поля "КировскаяОбласть_ТаблицаКодовУслуг".
//
Процедура КировскаяОбласть_ТаблицаКодовУслугПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПередУдалением" табличного поля "КировскаяОбласть_ТаблицаКодовУслуг".
//
Процедура КировскаяОбласть_ТаблицаКодовУслугПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти
