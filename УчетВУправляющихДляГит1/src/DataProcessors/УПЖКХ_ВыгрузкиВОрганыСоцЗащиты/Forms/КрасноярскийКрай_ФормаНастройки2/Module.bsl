
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получаем настройки из хранилища.
	Если Параметры.Свойство("АдресНастроекВХранилище") И Не Параметры.АдресНастроекВХранилище = Неопределено Тогда
		
		СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.АдресНастроекВХранилище);
		
		Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
			
			Если СтруктураПараметров.Свойство("КрасноярскийКрай_ТаблицаУслуг") Тогда
				Объект.КрасноярскийКрай_ТаблицаУслуг.Загрузить(СтруктураПараметров.КрасноярскийКрай_ТаблицаУслуг);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("КрасноярскийКрай_УслугиЭлектроэнергии") Тогда
				Объект.КрасноярскийКрай_УслугиЭлектроэнергии.Загрузить(СтруктураПараметров.КрасноярскийКрай_УслугиЭлектроэнергии);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("КрасноярскийКрай_ТипыУлиц") Тогда
				Объект.КрасноярскийКрай_ТипыУлиц.Загрузить(СтруктураПараметров.КрасноярскийКрай_ТипыУлиц);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("КрасноярскийКрай_УдостоверенияЛичности") Тогда
				Объект.КрасноярскийКрай_УдостоверенияЛичности.Загрузить(СтруктураПараметров.КрасноярскийКрай_УдостоверенияЛичности);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство("КатегорияЖильцов") Тогда
				Объект.КатегорияЖильцов = СтруктураПараметров.КатегорияЖильцов;
			КонецЕсли;
			
			врВыводЛицевыхСчетов = Неопределено;
			Если СтруктураПараметров.Свойство("ВыводЛицевыхСчетов", врВыводЛицевыхСчетов) Тогда
				Объект.ВыводЛицевыхСчетов = врВыводЛицевыхСчетов;
			Иначе
				// По умолчанию.
				Объект.ВыводЛицевыхСчетов = "ЦифрыНаименования";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////
// Команда "Инструкция"

&НаКлиенте
// Обработчик команды "КомандаСправочнаяИнформация".
//
Процедура КомандаСправочнаяИнформация(Команда)
	
	ОткрытьСправкуФормы();
	
КонецПроцедуры // КомандаСправочнаяИнформация()

////////////////////////////////////////
// Команда "Сохранить и закрыть"

&НаКлиенте
// Обработчик команды "КомандаСохранить".
//
Процедура КомандаСохранить(Команда)
	
	АдресНастроекВХранилище = ПоместитьНастройкиВХранилище();
	Закрыть(АдресНастроекВХранилище);
	
КонецПроцедуры // КомандаСохранить()

&НаСервере
// Помещает таблицу услуг во временное хранилище.
//
// Возвращаемое значение:
//  Строка - адрес настроек во временном хранилище.
//
Функция ПоместитьНастройкиВХранилище()
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("КрасноярскийКрай_ТаблицаУслуг",          Объект.КрасноярскийКрай_ТаблицаУслуг.Выгрузить());
	СтруктураПараметров.Вставить("КрасноярскийКрай_УслугиЭлектроэнергии",  Объект.КрасноярскийКрай_УслугиЭлектроэнергии.Выгрузить());
	СтруктураПараметров.Вставить("КрасноярскийКрай_ТипыУлиц",              Объект.КрасноярскийКрай_ТипыУлиц.Выгрузить());
	СтруктураПараметров.Вставить("КрасноярскийКрай_УдостоверенияЛичности", Объект.КрасноярскийКрай_УдостоверенияЛичности.Выгрузить());
	СтруктураПараметров.Вставить("КатегорияЖильцов",                       Объект.КатегорияЖильцов);
	СтруктураПараметров.Вставить("ВыводЛицевыхСчетов",                     Объект.ВыводЛицевыхСчетов);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураПараметров, Новый УникальныйИдентификатор);
	
КонецФункции // ПоместитьНастройкиВХранилище()

////////////////////////////////////////
// Команда "Заполнить соответствия услуг"

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьСоответствияУслуг".
Процедура КомандаЗаполнитьСоответствияУслуг(Команда)
	
	Если Объект.КрасноярскийКрай_ТаблицаУслуг.Количество() > 0 Тогда
		ПоказатьВопрос(	Новый ОписаниеОповещения("КомандаЗаполнитьСоответствияУслугЗавершение", ЭтотОбъект),
						"Перед заполнением таблица соответствия услуг будет очищена. Заполнить?",
						РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьСоответствияУслугПродолжение();
	
КонецПроцедуры // КомандаЗаполнитьСоответствияУслуг()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьСоответствияУслуг()".
Процедура КомандаЗаполнитьСоответствияУслугЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КомандаЗаполнитьСоответствияУслугПродолжение();
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьСоответствияУслугЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьСоответствияУслуг()".
Процедура КомандаЗаполнитьСоответствияУслугПродолжение()
	
	КомандаЗаполнитьСоответствияУслугНаСервере();
	
КонецПроцедуры // КомандаЗаполнитьСоответствияУслугПродолжение()

////////////////////////////////////////
// Команда "Заполнить типы улиц"

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьТипыУлиц".
Процедура КомандаЗаполнитьТипыУлиц(Команда)
	
	Если Объект.КрасноярскийКрай_ТипыУлиц.Количество() > 0 Тогда
		ПоказатьВопрос(	Новый ОписаниеОповещения("КомандаЗаполнитьТипыУлицЗавершение", ЭтотОбъект),
						"Перед заполнением таблица типов улиц будет очищена. Заполнить?",
						РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьТипыУлицПродолжение();
	
КонецПроцедуры // КомандаЗаполнитьТипыУлиц()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьТипыУлиц()".
Процедура КомандаЗаполнитьТипыУлицЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КрасноярскийКрай_ТипыУлиц.Очистить();
	
	КомандаЗаполнитьТипыУлицПродолжение();
	
КонецПроцедуры // КомандаЗаполнитьТипыУлицЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьТипыУлиц()".
Процедура КомандаЗаполнитьТипыУлицПродолжение()
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "ул";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "улица";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "пр-кт";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "проспект";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "пр-зд";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "проезд";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "пер";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "переулок";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "пл";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "площадь";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "б-р";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "бульвар";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "наб";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "набережная";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "ш";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "шоссе";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "туп";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "тупик";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "тракт";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "тракт";
	
	НовыйТУ                                  = Объект.КрасноярскийКрай_ТипыУлиц.Добавить();
	НовыйТУ.НаименованиеКраткоеИзБазы        = "ал";
	НовыйТУ.НаименованиеДляВыводаВФайлОтвета = "аллея";
	
	Объект.КрасноярскийКрай_ТипыУлиц.Сортировать("НаименованиеКраткоеИзБазы Возр");
	
КонецПроцедуры // КомандаЗаполнитьТипыУлицПродолжение()

////////////////////////////////////////
// Команда "Заполнить виды документов"

&НаКлиенте
// Обработчик команды "КомандаЗаполнитьВидыДокументов".
Процедура КомандаЗаполнитьВидыДокументов(Команда)
	
	Если Объект.КрасноярскийКрай_УдостоверенияЛичности.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("КомандаЗаполнитьВидыДокументовЗавершение", ЭтотОбъект),
						"Перед заполнением таблица видов документов удостоверяющих личность будет очищена. Заполнить?",
						РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьВидыДокументовПродолжение();
	
КонецПроцедуры // КомандаЗаполнитьВидыДокументов()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "КомандаЗаполнитьВидыДокументов()".
Процедура КомандаЗаполнитьВидыДокументовЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КомандаЗаполнитьВидыДокументовПродолжение();
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьВидыДокументовЗавершение()

&НаКлиенте
// Продолжение процедуры "КомандаЗаполнитьВидыДокументов()".
Процедура КомандаЗаполнитьВидыДокументовПродолжение()
	
	КомандаЗаполнитьВидыДокументовНаСервере();
	
КонецПроцедуры // КомандаЗаполнитьВидыДокументовПродолжение()

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

&НаСервере
// Заполнение соответствия услуг.
Процедура КомандаЗаполнитьСоответствияУслугНаСервере()
	
	Объект.КрасноярскийКрай_ТаблицаУслуг.Загрузить(Обработки.УПЖКХ_ВыгрузкиВОрганыСоцЗащиты.ПолучитьВсеНепомеченныеУслуги());
	
КонецПроцедуры

&НаСервере
// Процедура заполнения видов документов.
Процедура КомандаЗаполнитьВидыДокументовНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыДокументовФизическихЛиц.Ссылка КАК ВидДокументаУдостоверяющегоЛичность
	|ИЗ
	|	Справочник.ВидыДокументовФизическихЛиц КАК ВидыДокументовФизическихЛиц";
	
	Объект.КрасноярскийКрай_УдостоверенияЛичности.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

