
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	
	ВосстановитьНастройкиНаСервере();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПериод();
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
// Обработчик события "ПередЗакрытием" формы.
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиНаСервере();
	
КонецПроцедуры // ПриЗакрытии()

////////////////////////
// Сохраняемые настройки

&НаСервере
// Процедура восстановления настроек.
//
Процедура ВосстановитьНастройкиНаСервере()
	
	СтруктураПараметров = УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекЗагрузить("ПараметрыВыгрузки_РеспубликаБурятия", "ПараметрыВыгрузки");
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		
		// Код организации.
		врКодОрганизации = Неопределено;
		Если СтруктураПараметров.Свойство("КодОрганизации", врКодОрганизации) Тогда
			Объект.КодОрганизации = врКодОрганизации;
		КонецЕсли;
		
		// Каталог выгрузки.
		врИмяКаталогаВыгрузки = Неопределено;
		Если СтруктураПараметров.Свойство("ИмяКаталогаВыгрузки", врИмяКаталогаВыгрузки) Тогда
			Объект.ИмяКаталогаВыгрузки = врИмяКаталогаВыгрузки;
		КонецЕсли;
		
		
		// Вывод лицевых счетов.
		врВыводЛицевыхСчетов = Неопределено;
		Если СтруктураПараметров.Свойство("ВыводЛицевыхСчетов", врВыводЛицевыхСчетов) Тогда
			Объект.ВыводЛицевыхСчетов = врВыводЛицевыхСчетов;
		КонецЕсли;
		
		// Таблица настроек.
		врТаблицаНастроек = Неопределено;
		Если СтруктураПараметров.Свойство("РеспубликаБурятия_ТаблицаНастроек", врТаблицаНастроек) Тогда
			Если ТипЗнч(врТаблицаНастроек) = Тип("ТаблицаЗначений") Тогда
				Объект.РеспубликаБурятия_ТаблицаНастроек.Загрузить(врТаблицаНастроек);
			КонецЕсли;
		КонецЕсли;
		
		// Таблица услуг в базе.
		врТаблицаУслугиВБазе = Неопределено;
		Если СтруктураПараметров.Свойство("РеспубликаБурятия_УслугиВБазе", врТаблицаУслугиВБазе) Тогда
			Если ТипЗнч(врТаблицаУслугиВБазе) = Тип("ТаблицаЗначений") Тогда
				Объект.РеспубликаБурятия_УслугиВБазе.Загрузить(врТаблицаУслугиВБазе);
			КонецЕсли;
		КонецЕсли;
		
		// Признак использования фиксированного тарифа.
		врИспользоватьФиксированныйТариф = Неопределено;
		Если СтруктураПараметров.Свойство("ИспользоватьФиксированныйТариф", врИспользоватьФиксированныйТариф) Тогда
			Объект.ИспользоватьФиксированныйТариф = врИспользоватьФиксированныйТариф;
		КонецЕсли;
		
	КонецЕсли;
	
	// Настройки по умолчанию.
	Если Объект.ВыводЛицевыхСчетов = Неопределено Или ПустаяСтрока(Объект.ВыводЛицевыхСчетов) Тогда
		
		Объект.ВыводЛицевыхСчетов = "Идентификатор";
		
	КонецЕсли;
	
	Если Объект.РеспубликаБурятия_ТаблицаНастроек.Количество() = 0 Тогда
		
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.РеспубликаБурятия_ОбновитьСписокУслугНаСервере();
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
		
	КонецЕсли;
	
КонецПроцедуры // ВосстановитьНастройкиНаСервере()

&НаСервере
// Процедура сохранения настроек.
//
Процедура СохранитьНастройкиНаСервере()
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("КодОрганизации",                    Объект.КодОрганизации);
	СтруктураПараметров.Вставить("ВыводЛицевыхСчетов",                Объект.ВыводЛицевыхСчетов);
	СтруктураПараметров.Вставить("ИмяКаталогаВыгрузки",               Объект.ИмяКаталогаВыгрузки);
	
	СтруктураПараметров.Вставить("РеспубликаБурятия_ТаблицаНастроек", Объект.РеспубликаБурятия_ТаблицаНастроек.Выгрузить());
	СтруктураПараметров.Вставить("РеспубликаБурятия_УслугиВБазе",     Объект.РеспубликаБурятия_УслугиВБазе.Выгрузить());
	СтруктураПараметров.Вставить("ИспользоватьФиксированныйТариф",    Объект.ИспользоватьФиксированныйТариф);
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить("ПараметрыВыгрузки_РеспубликаБурятия", "ПараметрыВыгрузки", СтруктураПараметров);
	
КонецПроцедуры // СохранитьНастройкиНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ПериодСтрокой

&НаКлиенте
// Изменяет период на форме выгрузки.
//
// Параметры:
//  Период - Дата - устанавливаемый период.
//
Процедура ОбновитьПериод(Период = Неопределено)
	
	Объект.Период = ?(Период = Неопределено, УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьЗначениеПоУмолчанию("РабочаяДата"), КонецМесяца(Период));
	
	Если Объект.Период = '00010101' Тогда
		Объект.Период = ТекущаяДата();
	КонецЕсли;
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Период", "ПериодСтрокой");
	
КонецПроцедуры // ОбновитьПериод()

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойПриИзменении(Элемент)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Период", "ПериодСтрокой", Модифицированность);
	
КонецПроцедуры // ПериодСтрокойПриИзменении()

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Период", "ПериодСтрокой");
	
КонецПроцедуры // ПериодСтрокойНачалоВыбора()

&НаКлиенте
// Обработчик события "Регулирование" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Период", "ПериодСтрокой", Направление, Модифицированность);
	
КонецПроцедуры // ПериодСтрокойРегулирование()

&НаКлиенте
// Обработчик события "АвтоПодбор" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры // ПериодСтрокойАвтоПодбор()

&НаКлиенте
// Обработчик события "ОкончаниеВводаТекста" поля "ПериодСтрокой".
//
Процедура ПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры // ПериодСтрокойОкончаниеВводаТекста()

#КонецОбласти

#Область КаталогВыгрузки

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "ИмяФайлаЗагрузки".
//
Процедура ИмяКаталогаВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла                             = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок                   = "Выбор каталога выгрузки";
	ДиалогВыбораФайла.Каталог                     = Объект.ИмяКаталогаВыгрузки;
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.ИмяКаталогаВыгрузки = ВыбранныеФайлы[0];
	КонецЕсли;

КонецПроцедуры // ИмяФайлаВыгрузкиНачалоВыбора()

&НаКлиенте
// Обработчик события "Открытие" поля "ИмяФайлаЗагрузки".
//
Процедура ИмяКаталогаВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Файл = Новый Файл(Объект.ИмяКаталогаВыгрузки);
	
	ДополнительныеПараметры = Новый Структура("Файл", Файл);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаСуществованияКаталогаВыгрузкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСуществованияКаталогаВыгрузкиЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	Файл = ДополнительныеПараметры.Файл;
	
	Если Существует Тогда
		Файл.НачатьПроверкуЭтоКаталог(Новый ОписаниеОповещения("ПроверкаНаКаталогВыгрузкиЗавершение", ЭтотОбъект));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаНаКаталогВыгрузкиЗавершение(ЭтоКаталог, ДополнительныеПараметры) Экспорт
	
	Если ЭтоКаталог Тогда
		ЗапуститьПриложение(Объект.ИмяКаталогаВыгрузки);
	КонецЕсли;

КонецПроцедуры // ИмяФайлаВыгрузкиОткрытие()

#КонецОбласти

&НаКлиенте
// Обработчик события "Очистка" поля "ВыводЛицевыхСчетов".
//
Процедура ВыводЛицевыхСчетовОчистка(Элемент, СтандартнаяОбработка)
	
	// Отмена очистки по Shift+F4
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ВыводЛицевыхСчетовОчистка()

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////
// Команда Инструкция

&НаКлиенте
// Обработчик команды "КомандаСправочнаяИнформация".
//
Процедура КомандаСправочнаяИнформация(Команда)
	
	ОткрытьСправкуФормы();
	
КонецПроцедуры // КомандаСправочнаяИнформация()

#Область КомандаНастройка

////////////////////////
// Команда Настройка

&НаКлиенте
// Обработчик команды "КомандаНастройка".
//
Процедура КомандаНастройка(Команда)
	
	АдресНастроекВХранилище = ПоместитьНастройкиВХранилище();
	
	// Передаем заполняемые настройки в параметры открытия формы настроек.
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("АдресНастроекВХранилище", АдресНастроекВХранилище);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаНастройкаЗавершение", ЭтаФорма);
	ОткрытьФорму("Обработка.УПЖКХ_ВыгрузкиВОрганыСоцЗащиты.Форма.РеспубликаБурятия_ФормаНастройки", ПараметрыОткрытияФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры // КомандаНастройка()

&НаКлиенте
// Обработчик результата опроса команды "КомандаНастройка".
//
Процедура КомандаНастройкаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПолучитьНастройкиИзХранилища(Результат);
	КонецЕсли;
	
КонецПроцедуры // КомандаНастройкаЗавершение()

////////////////////////
// Работа с временным хранилищем

&НаСервере
// Помещает данные во временное хранилище для передачи их в форму настройки.
//
// Возвращаемое значение:
//  Строка - адрес настроек в хранилище.
//
Функция ПоместитьНастройкиВХранилище()
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("РеспубликаБурятия_ТаблицаНастроек", Объект.РеспубликаБурятия_ТаблицаНастроек.Выгрузить());
	СтруктураПараметров.Вставить("РеспубликаБурятия_УслугиВБазе",     Объект.РеспубликаБурятия_УслугиВБазе.Выгрузить());
	СтруктураПараметров.Вставить("ИспользоватьФиксированныйТариф",    Объект.ИспользоватьФиксированныйТариф);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураПараметров, Новый УникальныйИдентификатор);
	
КонецФункции // ПоместитьДанныеВХранилище()

&НаСервере
// Помещает таблицу услуг во временное хранилище.
Функция ПолучитьНастройкиИзХранилища(АдресУслугВХранилище)
	
	СтруктураПараметров = ПолучитьИзВременногоХранилища(АдресУслугВХранилище);
	
	// Таблица настроек.
	врТаблицаНастроек = Неопределено;
	Если СтруктураПараметров.Свойство("РеспубликаБурятия_ТаблицаНастроек", врТаблицаНастроек) Тогда
		Если ТипЗнч(врТаблицаНастроек) = Тип("ТаблицаЗначений") Тогда
			Объект.РеспубликаБурятия_ТаблицаНастроек.Загрузить(врТаблицаНастроек);
		КонецЕсли;
	КонецЕсли;
	
	// Таблица услуг в базе.
	врТаблицаУслугиВБазе = Неопределено;
	Если СтруктураПараметров.Свойство("РеспубликаБурятия_УслугиВБазе", врТаблицаУслугиВБазе) Тогда
		Если ТипЗнч(врТаблицаУслугиВБазе) = Тип("ТаблицаЗначений") Тогда
			Объект.РеспубликаБурятия_УслугиВБазе.Загрузить(врТаблицаУслугиВБазе);
		КонецЕсли;
	КонецЕсли;
	
	// Признак использования фиксированного тарифа.
	врИспользоватьФиксированныйТариф = Неопределено;
	Если СтруктураПараметров.Свойство("ИспользоватьФиксированныйТариф", врИспользоватьФиксированныйТариф) Тогда
		Объект.ИспользоватьФиксированныйТариф = врИспользоватьФиксированныйТариф;
	КонецЕсли;
	
КонецФункции // ПолучитьНастройкиИзХранилища()

#КонецОбласти

#Область КомандаЗаполнить

&НаКлиенте
// Обработчик команды "КомандаЗаполнить".
//
Процедура КомандаЗаполнить(Команда)
	
	ПроверитьЗаполнениеРеквизитовФормы(Новый ОписаниеОповещения("КомандаЗаполнитьЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		
		Если Объект.РеспубликаБурятия_ТаблицаВыгрузки.Количество() > 0 Тогда
			
			Оповещение = Новый ОписаниеОповещения("КомандаЗагрузитьВопрос", ЭтотОбъект);
			
			ТекстВопроса = "Перед загрузкой табличная часть будет очищена. Загрузить?";
			
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			КомандаЗагрузитьПродолжение();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // КомандаЗаполнить()

&НаКлиенте
// Проверка заполнения реквизитов формы, необходимых для текущего процесса.
//
// Возвращаемое значение:
//  Булево - Ложь, если проверка закончилась неудачей.
//
Процедура ПроверитьЗаполнениеРеквизитовФормы(Знач Оповещение, ЭтоВыгрузка = Ложь)
	
	Если ЭтоВыгрузка Тогда
		
		// Проверяем наличие данных для выгрузки (таблица выгрузки заполнена).
		Если Объект.РеспубликаБурятия_ТаблицаВыгрузки.Количество() = 0 Тогда
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Нет данных для выгрузки.");
			ВыполнитьОбработкуОповещения(Оповещение, Ложь);
			Возврат;
		КонецЕсли;
		
		// Проверяем каталог на существование.
		Каталог = Новый Файл(Объект.ИмяКаталогаВыгрузки);
		
		ДополнительныеПараметры = Новый Структура("Каталог, Оповещение", Каталог, Оповещение);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаСуществованияКаталогаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Каталог.НачатьПроверкуСуществования(ОписаниеОповещения);
		Возврат;
		
	Иначе
		
		// Период выгрузки.
		Если Объект.Период = '00010101' Тогда
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не указан период выгрузки.");
			ВыполнитьОбработкуОповещения(Оповещение, Ложь);
			Возврат;
		КонецЕсли;
		
		// Организация.
		Если Объект.Организация.Пустая() Тогда
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбрана организация.");
			ВыполнитьОбработкуОповещения(Оповещение, Ложь);
			Возврат;
		КонецЕсли;
		
		// Проверяем наличие установленных соответствий услугам ОСЗН.
		Если Объект.РеспубликаБурятия_УслугиВБазе.Количество() = 0 Тогда
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Нет установлено ни одно соответствие услугам в ОСЗН.");
			ВыполнитьОбработкуОповещения(Оповещение, Ложь);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПроверитьЗаполнениеРеквизитовФормыФрагмент(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСуществованияКаталогаЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	Каталог = ДополнительныеПараметры.Каталог;
	Оповещение = ДополнительныеПараметры.Оповещение;
	
	Если Не Существует Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Каталог не существует.");
		ВыполнитьОбработкуОповещения(Оповещение, Ложь);
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("Оповещение", Оповещение);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаНаКаталогЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	Каталог.НачатьПроверкуСуществования(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаНаКаталогЗавершение(ЭтоКаталог, ДополнительныеПараметры) Экспорт
	
	Оповещение = ДополнительныеПараметры.Оповещение;
	
	Если Не ЭтоКаталог Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Каталог не существует.");
		ВыполнитьОбработкуОповещения(Оповещение, Ложь);
		Возврат;
	КонецЕсли;
	
	
	ПроверитьЗаполнениеРеквизитовФормыФрагмент(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеРеквизитовФормыФрагмент(Знач Оповещение)
	
	Если Объект.КодОрганизации = 0 Тогда
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не указан код организации.");
		ВыполнитьОбработкуОповещения(Оповещение, Ложь);
		Возврат;
		
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Оповещение, Истина);

КонецПроцедуры // ПроверитьЗаполнениеРеквизитовФормы()

&НаКлиенте
// Обработчик результата опроса команды "КомандаЗагрузить".
//
Процедура КомандаЗагрузитьВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Объект.РеспубликаБурятия_ТаблицаВыгрузки.Очистить();
		
		КомандаЗагрузитьПродолжение();
		
	КонецЕсли;
	
КонецПроцедуры // КомандаЗагрузитьВопрос()

&НаСервере
// Заполнение таблицы выгрузки данными о начислениях.
//
Процедура КомандаЗагрузитьПродолжение()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.РеспубликаБурятия_ЗаполнитьТаблицуВыгрузки();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры // КомандаЗагрузитьНаСервере()

#КонецОбласти

////////////////////////
// Команда "Выгрузить"

&НаКлиенте
// Обработчик команды "КомандаВыгрузить".
//
Процедура КомандаВыгрузить(Команда)
	
	ПроверитьЗаполнениеРеквизитовФормы(Новый ОписаниеОповещения("КомандаВыгрузитьЗавершение", ЭтотОбъект), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	#Если Не ВебКлиент Тогда
	
	Если Результат Тогда
		
		Каталог = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Объект.ИмяКаталогаВыгрузки);
		ИмяФайлаВыгрузки = Каталог + "NJ_" + Формат(Объект.КодОрганизации, "ЧГ=0") + ".dbf";
		
		ФайлВыгрузки = Новый XBase;
		ФайлВыгрузки.Кодировка = КодировкаXBase.OEM;
		
		ФайлВыгрузки.Поля.Добавить("NJ",       "S", 10);
		ФайлВыгрузки.Поля.Добавить("LS",       "S", 10);
		ФайлВыгрузки.Поля.Добавить("FAM",      "S", 15);
		ФайлВыгрузки.Поля.Добавить("IMIA",     "S", 15);
		ФайлВыгрузки.Поля.Добавить("OTCH",     "S", 15);
		ФайлВыгрузки.Поля.Добавить("DATNACH",  "S", 6);
		ФайлВыгрузки.Поля.Добавить("SOSTSEM",  "N", 10, 0);
		ФайлВыгрузки.Поля.Добавить("ZHILPLOS", "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("TAR4",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("POTR4",    "N", 10, 5);
		ФайлВыгрузки.Поля.Добавить("SUM4",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("OPL4",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("TAR5",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("POTR5",    "N", 10, 5);
		ФайлВыгрузки.Поля.Добавить("SUM5",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("OPL5",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("TAR6",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("POTR6",    "N", 10, 5);
		ФайлВыгрузки.Поля.Добавить("SUM6",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("OPL6",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("TAR9",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("POTR9",    "N", 10, 5);
		ФайлВыгрузки.Поля.Добавить("SUM9",     "N", 10, 2);
		ФайлВыгрузки.Поля.Добавить("OPL9",     "N", 10, 2);
		
		ФайлВыгрузки.СоздатьФайл(ИмяФайлаВыгрузки);
		ФайлВыгрузки.АвтоСохранение = Истина;
		
		Для Каждого Строка Из Объект.РеспубликаБурятия_ТаблицаВыгрузки Цикл
			
			ФайлВыгрузки.Добавить();
			ЗаполнитьЗначенияСвойств(ФайлВыгрузки, Строка);
			
		КонецЦикла;
		
		ФайлВыгрузки.ЗакрытьФайл();
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Загрузка в файл завершена:" + Символы.ПС + "Путь: " + ИмяФайлаВыгрузки);
		
	КонецЕсли;
	
	#КонецЕсли

КонецПроцедуры // КомандаВыгрузить()

#КонецОбласти
