
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуРегионов();
	
	СоздатьЭлементыНаФорме();
	
КонецПроцедуры

#КонецОбласти


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "НажатиеПоСсылке" элемента формы.
Процедура НажатиеПоСсылке(Элемент)
	
	НайденныеСтроки = ТаблицаРегионов.НайтиСтроки(Новый Структура("НаименованиеДляГиперссылки", Элемент.Имя));
	
	Если НайденныеСтроки.Количество() = 1 Тогда
		СписокФорм = НайденныеСтроки[0].СписокВариантовВыгрузок;
		Если СписокФорм.Количество() = 1 Тогда
			ОткрытьФормуВыгрузки(СписокФорм[0].Значение);
		ИначеЕсли СписокФорм.Количество() > 1 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборВариантаВыгрузки", ЭтаФорма);
			ПоказатьВыборИзМеню(ОписаниеОповещения, СписокФорм, Элемент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ВспомогательныеПроцедурыИФункции

&НаКлиенте
// Обработчик результата выбора из меню.
Процедура ОбработатьВыборВариантаВыгрузки(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ОткрытьФормуВыгрузки(ВыбранныйЭлемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Открывает форму варианта выгрузки по наименованию.
Процедура ОткрытьФормуВыгрузки(ИмяФормы)
	
	ПолучитьФорму("Обработка.УПЖКХ_ВыгрузкиВОрганыСоцЗащиты.Форма." + ИмяФормы).Открыть();
	
КонецПроцедуры

&НаСервере
// Заполняет таблицу с регионами по наименованиям основных форм вариантов выгрузок.
Процедура ЗаполнитьТаблицуРегионов()
	
	ТаблицаФорм = Новый ТаблицаЗначений;
	ТаблицаФорм.Колонки.Добавить("ИмяФормы",                   УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьОписаниеТиповСтроки(150));
	ТаблицаФорм.Колонки.Добавить("Синоним",                    УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьОписаниеТиповСтроки(150));
	ТаблицаФорм.Колонки.Добавить("Регион",                     УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьОписаниеТиповСтроки(150));
	ТаблицаФорм.Колонки.Добавить("НаименованиеДляГиперссылки", УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьОписаниеТиповСтроки(150));
	
	Для Каждого Форма Из Метаданные.Обработки.УПЖКХ_ВыгрузкиВОрганыСоцЗащиты.Формы Цикл
		Если Лев(Форма.Имя, 5) = "Форма" Тогда
			НоваяСтрока = ТаблицаФорм.Добавить();
			НоваяСтрока.ИмяФормы = Форма.Имя;
			НоваяСтрока.Синоним  = Форма.Синоним;
			
			// Получим наименование обрасти по правилу: наименование области берем из синонима формы до первого символа "(".
			ПозицияПервойСкобки = Найти(НоваяСтрока.Синоним, "(");
			Если ПозицияПервойСкобки = 0 Тогда
				НоваяСтрока.Регион = НоваяСтрока.Синоним;
			Иначе
				НоваяСтрока.Регион = СокрЛП(Лев(НоваяСтрока.Синоним, ПозицияПервойСкобки - 1));
			КонецЕсли;
			
			НоваяСтрока.НаименованиеДляГиперссылки = СтрЗаменить(НоваяСтрока.Регион, " ", "_");
		КонецЕсли;
	КонецЦикла;
	
	врТаблицаРегионов = ТаблицаФорм.Скопировать(, "Регион");
	врТаблицаРегионов.Свернуть("Регион");
	
	врТаблицаРегионов.Колонки.Добавить("СписокВариантовВыгрузок",    Новый ОписаниеТипов("СписокЗначений"));
	врТаблицаРегионов.Колонки.Добавить("НаименованиеДляГиперссылки", УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьОписаниеТиповСтроки(150));
	
	Отбор = Новый Структура("Регион");
	Для Каждого ТекущаяСтрокаРегиона Из врТаблицаРегионов Цикл
		Отбор.Регион = ТекущаяСтрокаРегиона.Регион;
		НайденныеСтрокиВариантов = ТаблицаФорм.НайтиСтроки(Отбор);
		Если НайденныеСтрокиВариантов.Количество() > 0 Тогда
			ТекущаяСтрокаРегиона.НаименованиеДляГиперссылки = НайденныеСтрокиВариантов[0].НаименованиеДляГиперссылки;
			Для Каждого ТекущаяСтрока Из НайденныеСтрокиВариантов Цикл
				ТекущаяСтрокаРегиона.СписокВариантовВыгрузок.Добавить(ТекущаяСтрока.ИмяФормы, ТекущаяСтрока.Синоним);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	врТаблицаРегионов.Сортировать("Регион");
	ТаблицаРегионов.Загрузить(врТаблицаРегионов);
	
КонецПроцедуры

&НаСервере
// Создает элементы формы.
Процедура СоздатьЭлементыНаФорме()
	
	КоличествоСтрокВКолонке = 7;
	МаксИнднексРегионов     = ТаблицаРегионов.Количество() - 1;
	
	МакетГербы   = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ГербыРегионов");
	НомерКолонки = 1;
	
	Для Индекс = 0 По МаксИнднексРегионов Цикл
		
		ДанныеПоРегиону = ТаблицаРегионов[Индекс];
		
		Если Индекс % КоличествоСтрокВКолонке = 0 Тогда
			ГруппаКолонка                          = Элементы.Добавить("Колонка" + НомерКолонки, Тип("ГруппаФормы"), Элементы["ГруппаГиперссылки"]);
			ГруппаКолонка.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаКолонка.Отображение              = ОтображениеОбычнойГруппы.Нет;
			ГруппаКолонка.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ГруппаКолонка.ОтображатьЗаголовок      = Ложь;
			ГруппаКолонка.РастягиватьПоГоризонтали = Истина;
			ГруппаКолонка.Ширина                   = 30;
			
			НомерКолонки = НомерКолонки + 1;
		КонецЕсли;
		
		ГруппаГиперссылка                          = Элементы.Добавить("ГруппаРегион" + ДанныеПоРегиону.НаименованиеДляГиперссылки, Тип("ГруппаФормы"), ГруппаКолонка);
		ГруппаГиперссылка.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаГиперссылка.Отображение              = ОтображениеОбычнойГруппы.Нет;
		ГруппаГиперссылка.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаГиперссылка.ОтображатьЗаголовок      = Ложь;
		ГруппаГиперссылка.РастягиватьПоГоризонтали = Истина;
		
		ИмяРеквизитаКартинки = "Картинка_" + ДанныеПоРегиону.НаименованиеДляГиперссылки;
		
		ДобавляемыеРеквизиты = Новый Массив;
		Реквизит             = Новый РеквизитФормы(ИмяРеквизитаКартинки, Новый ОписаниеТипов("Строка"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		ЭлементКартинка                          = Элементы.Добавить(ИмяРеквизитаКартинки, Тип("ПолеФормы"), ГруппаГиперссылка);
		ЭлементКартинка.Вид                      = ВидПоляФормы.ПолеКартинки;
		ЭлементКартинка.РазмерКартинки           = РазмерКартинки.Пропорционально;
		ЭлементКартинка.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементКартинка.Ширина                   = 5;
		ЭлементКартинка.Высота                   = 2;
		ЭлементКартинка.Рамка                    = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
		ЭлементКартинка.РастягиватьПоГоризонтали = Ложь;
		ЭлементКартинка.РастягиватьПоВертикали   = Ложь;
		
		Попытка
			РисунокТабличногоДокумента = МакетГербы.Рисунки[ДанныеПоРегиону.НаименованиеДляГиперссылки];
		Исключение
			РисунокТабличногоДокумента = Неопределено;
		КонецПопытки;
		
		Если РисунокТабличногоДокумента <> Неопределено Тогда
			ХранилищеКартинки = Новый ХранилищеЗначения(РисунокТабличногоДокумента.Картинка);
		Иначе
			ХранилищеКартинки = Новый ХранилищеЗначения(Новый Картинка);
		КонецЕсли;
		ЭтаФорма[ИмяРеквизитаКартинки] = ПоместитьВоВременноеХранилище(ХранилищеКартинки.Получить(), УникальныйИдентификатор);
		ЭлементКартинка.ПутьКДанным    = ИмяРеквизитаКартинки;
		
		Гиперссылка                       = Элементы.Добавить(ДанныеПоРегиону.НаименованиеДляГиперссылки, Тип("ДекорацияФормы"), ГруппаГиперссылка);
		Гиперссылка.Вид                   = ВидДекорацииФормы.Надпись;
		Гиперссылка.Заголовок             = ДанныеПоРегиону.Регион;
		Гиперссылка.Гиперссылка           = Истина;
		Гиперссылка.Высота                = 2;
		Гиперссылка.Подсказка             = "Нажмите для открытия/выбора выгрузки.";
		Гиперссылка.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
		Гиперссылка.УстановитьДействие("Нажатие", "НажатиеПоСсылке");
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
