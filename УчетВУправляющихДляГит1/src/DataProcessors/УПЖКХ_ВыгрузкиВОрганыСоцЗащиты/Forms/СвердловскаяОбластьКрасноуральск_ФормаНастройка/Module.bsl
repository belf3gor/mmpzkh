
//////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получаем настройки из хранилища.
	Если Параметры.Свойство("АдресНастроекВХранилище") И Не Параметры.АдресНастроекВХранилище = Неопределено Тогда
		
		врУслугиВБазе = ПолучитьИзВременногоХранилища(Параметры.АдресНастроекВХранилище);
		
		Если ТипЗнч(врУслугиВБазе) = Тип("ТаблицаЗначений") Тогда
			Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Загрузить(врУслугиВБазе);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ТАБЛИЧНОГО ПОЛЯ "УСЛУГА В БАЗЕ"

#Область ОбработчикиСобытийКоманднойПанели

&НаКлиенте
// Процедура обработки события нажатия на кнопку "Заполнить"
//
Процедура КомандаЗаполнитьНажание(Команда)
	
	Если Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("КомандаЗаполнитьНажаниеЗавершение", ЭтотОбъект);
		
		ТекстВопроса = "Перед повторным заполнением таблица соответствия услуг будет очищена. Продолжить?";
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		КомандаЗаполнитьНажаниеНаСервере();
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьНажание()

&НаКлиенте
// Обработчик результата опроса команды "КомандаЗаполнить".
Процедура КомандаЗаполнитьНажаниеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Очистить();
		
		КомандаЗаполнитьНажаниеНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры // КомандаЗаполнитьНажаниеЗавершение()

&НаСервере
// Процедура обработки события нажатия на кнопку "Заполнить" НаСервере.
// Выгружается список всех услуг из Справочника "КВП_Услуги". 
//
Процедура КомандаЗаполнитьНажаниеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_Услуги.Код КАК КодУслуги,
	|	КВП_Услуги.Ссылка КАК Услуга
	|ИЗ
	|	Справочник.КВП_Услуги КАК КВП_Услуги
	|ГДЕ
	|	НЕ КВП_Услуги.ЭтоГруппа
	|	И НЕ КВП_Услуги.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Услуга";
	
	Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьНажаниеНаСервере()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "УСЛУГА В БАЗЕ"

#Область ОбработчикиСобытийТаблицыУслуг

&НаКлиенте
// Процедура - обработчик события "ПередНачаломДобавления" таблицы "ТП_Услуга_ВБазе".
//
Процедура ТП_Услуга_ВБазеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	// Запрещаем любое копирование строк (в т.ч. и по F9).
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры // ТП_Услуга_ВБазеПередНачаломДобавления

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля "Услуга" таблицы "ТП_Услуга_ВБазе".
//
Процедура ТП_Услуга_ВБазеУслугаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = ПолучитьФорму("Справочник.КВП_Услуги.ФормаВыбора", , Элемент);
	
	Если Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Количество() > 1 Тогда
		
		СписокУслуг = Новый СписокЗначений;
		ЗаполнитьСписокУслугНаСервере(СписокУслуг);
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьЭлементОтбора(Форма.Список.Отбор,
																"Код",
																СписокУслуг, 
																ВидСравненияКомпоновкиДанных.НеВСписке);
	КонецЕсли;
	
	Форма.Открыть();
	
КонецПроцедуры // ТП_Услуга_ВБазеУслугаНачалоВыбора()

&НаСервере
// Заполнение списка отбора СписокУслуг
//
Процедура ЗаполнитьСписокУслугНаСервере(СписокУслуг)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УслугиВБазе.Услуга
	|ПОМЕСТИТЬ втУслугиВБазе
	|ИЗ
	|	&УслугиВБазе КАК УслугиВБазе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втУслугиВБазе.Услуга.Код КАК Код
	|ИЗ
	|	втУслугиВБазе КАК втУслугиВБазе";
	
	Запрос.УстановитьПараметр("УслугиВБазе", Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		СписокУслуг.Добавить(РезультатЗапроса.Код);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокУслугНаСервере()

&НаКлиенте
// Процедура - обработчик события "ПередОкончаниемРедактирования" таблицы "ТП_Услуга_ВБазе".
//
Процедура ТП_Услуга_ВБазеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные.Услуга.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Добавление незаполненных полей недопустимо!");
		Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Удалить(Элемент.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры // ТП_Услуга_ВБазеПередОкончаниемРедактирования()

#КонецОбласти

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "КомандаСохранить".
//
Процедура КомандаСохранить(Команда)
	
	Закрыть(ПоместитьУслугиВХранилище());
	
КонецПроцедуры // КомандаСохранить()

&НаСервере
// Помещает таблицу услуг во временное хранилище.
//
Функция ПоместитьУслугиВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.СвердловскаяОбластьКрасноуральск_УслугиВБазе.Выгрузить(), Новый УникальныйИдентификатор);
	
КонецФункции // ПоместитьУслугиВХранилище()

#КонецОбласти
