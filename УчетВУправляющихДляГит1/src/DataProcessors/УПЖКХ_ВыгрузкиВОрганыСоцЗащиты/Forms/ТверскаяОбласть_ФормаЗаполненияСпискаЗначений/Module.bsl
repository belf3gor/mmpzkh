
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКИ СОБЫТИЙ ФОРМЫ

#Область СобытияФормы

// Обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = "Выбор услуг в базе для """ + Параметры.УслугаВОСЗН + """.";
	
	Для Каждого ТекущийЭлементСписка Из Параметры.СписокУслуг Цикл
		Услуга = ТекущийЭлементСписка.Значение;
		Если Услуга <> Справочники.КВП_Услуги.ПустаяСсылка() Тогда
			ТаблицаУслуг.Добавить().Услуга = Услуга;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекУслуга Из Параметры.СписокВсехВыбранныхУслуг Цикл
		
		Для Каждого УслугаИзСписка Из ТекУслуга.УслугиВБазеСписок Цикл
			
			НоваяЗапись = ТверскаяОбласть_УслугиСписком.Добавить();
			НоваяЗапись.Услуга = УслугаИзСписка.Значение;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти // СобытияФормы

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

// Обработчик нажатия кнопки "КомандаОК".
//
&НаКлиенте
Процедура КомандаОК(Команда)
	
	СписокУслуг = Новый СписокЗначений;
	Для Каждого ТекЭлементСписка Из ТаблицаУслуг Цикл
		ТекУслуга = ТекЭлементСписка.Услуга;
		Если НЕ ТекУслуга.Пустая() Тогда
			СписокУслуг.Добавить(ТекУслуга);
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(Новый Структура("СписокУслуг", СписокУслуг));
	
КонецПроцедуры // КомандаОК()

// Обработчик события "ПередОкончаниемРедактирования" поля " ТаблицаУслуг".
//
&НаКлиенте
Процедура ТаблицаУслугПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		
		// Проверка колонки "Услуга" на наличие пустых полей и дубликатов услуг.
		Если Элемент.ТекущиеДанные.Услуга = ПредопределенноеЗначение("Справочник.КВП_Услуги.ПустаяСсылка") Тогда
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Услуга должна быть заполнена!";
			СообщениеПользователю.Сообщить();
			
			Отказ = Истина;
			
		Иначе
			
			// Проверка наличия дубликатов услуг среди всех услуг.
			ОтборСтрок = Новый Структура("Услуга");
			ОтборСтрок.Услуга = Элемент.ТекущиеДанные.Услуга;
			
			НайденныеСтроки = ТверскаяОбласть_УслугиСписком.НайтиСтроки(ОтборСтрок);
			
			Для Каждого ТекСтрока Из НайденныеСтроки Цикл
				
				УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Услуга в Базе""" + ОтборСтрок.Услуга + 
				""" уже установлена в соответствие для услуги в ОСЗН! Выберите другую услугу.");
				Элемент.ТекущиеДанные.Услуга = ПредопределенноеЗначение("Справочник.КВП_Услуги.ПустаяСсылка");
				Отказ = Истина;
				Прервать;
				
			КонецЦикла;
			
			// Проверка наличия дубликатов услуг среди выбранных услуг.
			НайденныеСтроки = ТаблицаУслуг.НайтиСтроки(ОтборСтрок);
			
			ПерваяИтерация = Истина;
			Для Каждого ТекСтрока Из НайденныеСтроки Цикл
				
				Если Не ПерваяИтерация Тогда
					
					УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Услуга в Базе""" + ОтборСтрок.Услуга + 
					""" уже установлена в соответствие для услуги в ОСЗН! Выберите другую услугу.");
					Элемент.ТекущиеДанные.Услуга = ПредопределенноеЗначение("Справочник.КВП_Услуги.ПустаяСсылка");
					Отказ = Истина;
					Прервать;
					
				КонецЕсли;
				
				ПерваяИтерация = Ложь;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ТаблицаУслугПередОкончаниемРедактирования()

// Обработчик события "ПередУдалением" поля " ТаблицаУслуг".
//
&НаКлиенте
Процедура ТаблицаУслугПередУдалением(Элемент, Отказ)
	
	// Удаление строки из ТЗ "ТверскаяОбласть_УслугиСписком".
	// Нужно для того чтобы корректно срабатывал механизм проверки наличия дубликатов услуг среди всех услуг.
	Если Не Элемент.ТекущиеДанные.Услуга = ПредопределенноеЗначение("Справочник.КВП_Услуги.ПустаяСсылка") Тогда
		
		ОтборСтрок = Новый Структура("Услуга");
		ОтборСтрок.Услуга = Элемент.ТекущиеДанные.Услуга;
		
		НайденныеСтроки = ТверскаяОбласть_УслугиСписком.НайтиСтроки(ОтборСтрок);
		
		Для Каждого ТекСтрока Из НайденныеСтроки Цикл
			ТверскаяОбласть_УслугиСписком.Удалить(ТекСтрока);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
