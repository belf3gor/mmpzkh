#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Smartway. Получение данных партнера с сервиса ИТС.
Функция ДанныеSmartway() Экспорт
	
	ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Получение данных Smartway с ИТС'",
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Ответ = ЗапросДанныхСИТС(ТелоЗапросаДанныхSmartwayJSON(), ИмяСобытияЖурналаРегистрации);
	Если Ответ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Неопределено;
	Попытка
		Если Ответ.error = Неопределено Тогда
			Результат = Новый Структура("КодПартнера, ГородПартнера");
			Результат.КодПартнера   = Ответ.result.form.partner.partnerCode;
			Результат.ГородПартнера = Ответ.result.form.city;
		Иначе
			ТекстОшибкиЖурналаРегистрации = 
				НСтр("ru = 'Обращение к сервису ИТС завершилось ошибкой.
					|Сервер вернул состояние %1
					|Текст ответа:
					|%2'");
			
			ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
				УровеньЖурналаРегистрации.Ошибка,,,
				СтрШаблон(ТекстОшибкиЖурналаРегистрации,
					Ответ.error.code,
					Ответ.error.message));
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат Результат;

КонецФункции

Процедура ОтправкаЗаявкиВSmartwayВФоне(Параметры, АдресХранилища) Экспорт

	Результат = Новый Структура("ЗаявкаОтправлена", Ложь);
	
	ИдентификаторЗаявки = ЗаявкаВSmartway(Параметры);
	Если ИдентификаторЗаявки <> Неопределено Тогда
		Результат.ЗаявкаОтправлена = Истина;
		СохранитьИдентификаторЗаявки(Параметры.Организация, ИдентификаторЗаявки);
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);

КонецПроцедуры

Функция ЗаявкаВSmartwayОтправлена(Организация) Экспорт

	Возврат ОбщегоНазначенияБП.ПрочитатьДанныеИзХранилища(Организация,
		КлючСохраненнойНастройкиИдентификаторЗаявкиSmartway()) <> Неопределено;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗапросДанныхСИТС(ТелоЗапроса, ИмяСобытияЖурналаРегистрации)
	
	URLСервиса = "https://its.1c.ru/partner/orderapi.json";
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(URLСервиса);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	
	ИнтернетПрокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси(URLСервиса);
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост,,,, ИнтернетПрокси, 20, Новый ЗащищенноеСоединениеOpenSSL);
	
	ЗапросHTTP = Новый HTTPЗапрос;
	ЗапросHTTP.АдресРесурса = СтруктураURI.ПутьНаСервере;
	ЗапросHTTP.Заголовки    = Заголовки;
	ЗапросHTTP.УстановитьТелоИзСтроки(ТелоЗапроса, КодировкаТекста.UTF8);
	
	Попытка
		ОтветHTTP = HTTPСоединение.ОтправитьДляОбработки(ЗапросHTTP);
	Исключение
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Возврат Неопределено;
	КонецПопытки;
	
	Результат = Неопределено;
	Если ОтветHTTP.КодСостояния = 200 Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Результат = ПрочитатьJSON(ЧтениеJSON);
	Иначе
		ТекстОшибкиЖурналаРегистрации = 
			НСтр("ru = 'Обращение к сервису ИТС завершилось ошибкой.
				|Сервер вернул состояние %1
				|Текст ответа:
				|%2'");
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Ошибка,,,
			СтрШаблон(ТекстОшибкиЖурналаРегистрации,
				ОтветHTTP.КодСостояния,
				ОтветHTTP.ПолучитьТелоКакСтроку()));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТелоЗапросаДанныхSmartwayJSON()

	//{
	//	"method": "getForm",
	//	"params": {
	//		"apiKey": "Ключ к API сервиса",
	//		"service": "service24",
	//		"locationHint": {
	//			"country": "ru",
	//			"ip": "127.0.0.1"
	//		},
	//		"login": "Логин ИПП",
	//		"getRegions": false,
	//		"getCities": false,
	//		"getPartners": false
	//	},
	//	"id": 1
	//}
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеАутентификации = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	УстановитьПривилегированныйРежим(Ложь);
	ЛогинИПП = ?(ДанныеАутентификации = Неопределено, "", ДанныеАутентификации.Логин);
	
	ЗаписьСообщения = Новый ЗаписьJSON;
	ЗаписьСообщения.УстановитьСтроку();
	
	Запрос = Новый Структура;
	Запрос.Вставить("method", "getForm");
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("apiKey",  apiKey());
	ПараметрыЗапроса.Вставить("service", "service24");
	
	Локация = Новый Структура;
	Локация.Вставить("country", "ru");
	Локация.Вставить("ip", "127.0.0.1");
	
	ПараметрыЗапроса.Вставить("locationHint", Локация);
	ПараметрыЗапроса.Вставить("login",        ЛогинИПП);
	ПараметрыЗапроса.Вставить("getRegions",   Ложь);
	ПараметрыЗапроса.Вставить("getCities",    Ложь);
	ПараметрыЗапроса.Вставить("getPartners",  Ложь);
	
	Запрос.Вставить("params", ПараметрыЗапроса);
	Запрос.Вставить("id",     1);
	
	ЗаписатьJSON(ЗаписьСообщения, Запрос);
	
	Возврат ЗаписьСообщения.Закрыть();

КонецФункции

Функция ТелоЗапросаОтправкаЗаявкиВSmartwayJSON(ПараметрыЗаявки)

	//{
	//	"method": "order",
	//	"params": {
	//		"apiKey": "Ключ к API сервиса",
	//		"service": "service24",
	//		"partnerCode": "Код партнера",
	//		"fio": "ФИО заявителя",
	//		"email": "Email заявителя",
	//		"phone": "Телефон заявителя",
	//		"city": "Город",
	//		"inn": "ИНН организации",
	//		"comment": "Наименование организации: ООО \"Моя организация\"",
	//		"login": "Логин ИПП"
	//	},
	//	"id": 1
	//}
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеАутентификации = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	УстановитьПривилегированныйРежим(Ложь);
	ЛогинИПП = ?(ДанныеАутентификации = Неопределено, "", ДанныеАутентификации.Логин);
	
	ЗаписьСообщения = Новый ЗаписьJSON;
	ЗаписьСообщения.УстановитьСтроку();
	
	Запрос = Новый Структура;
	Запрос.Вставить("method", "order");
	
	НаименованиеОрганизации = НСтр("ru = 'Наименование организации:'") + " " + ПараметрыЗаявки.НаименованиеОрганизации;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("apiKey",      apiKey());
	ПараметрыЗапроса.Вставить("service",     "service24");
	ПараметрыЗапроса.Вставить("partnerCode", ПараметрыЗаявки.КодПартнера);
	ПараметрыЗапроса.Вставить("fio",         ПараметрыЗаявки.ИмяПользователя);
	ПараметрыЗапроса.Вставить("email",       ПараметрыЗаявки.ЭлектроннаяПочта);
	ПараметрыЗапроса.Вставить("phone",       ПараметрыЗаявки.Телефон);
	ПараметрыЗапроса.Вставить("city",        ПараметрыЗаявки.ГородПартнера);
	ПараметрыЗапроса.Вставить("inn",         ПараметрыЗаявки.ИННОрганизации);
	ПараметрыЗапроса.Вставить("comment",     НаименованиеОрганизации);
	ПараметрыЗапроса.Вставить("login",       ЛогинИПП);
	
	Запрос.Вставить("params", ПараметрыЗапроса);
	Запрос.Вставить("id",     1);
	
	ЗаписатьJSON(ЗаписьСообщения, Запрос);
	
	Возврат ЗаписьСообщения.Закрыть();

КонецФункции

Функция apiKey()

	Возврат "684C84EB-5830-4826-9131-CE080E843778";

КонецФункции

Функция ЗаявкаВSmartway(ПараметрыЗаявки)
	
	ДанныеПартнера = ОбщегоНазначенияБПВызовСервераПовтИсп.ДанныеSmartway();
	Если ДанныеПартнера = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыЗаявки.Вставить("КодПартнера",   ДанныеПартнера.КодПартнера);
	ПараметрыЗаявки.Вставить("ГородПартнера", ДанныеПартнера.ГородПартнера);
	
	ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Отправка заявки в Smartway'",
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Ответ = ЗапросДанныхСИТС(ТелоЗапросаОтправкаЗаявкиВSmartwayJSON(ПараметрыЗаявки), ИмяСобытияЖурналаРегистрации);
	Если Ответ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Неопределено;
	Попытка
		Если Ответ.error = Неопределено Тогда
			Результат = Ответ.result.orderId; // возвращаем идентификатор заявки
		Иначе
			ТекстОшибкиЖурналаРегистрации = 
				НСтр("ru = 'Обращение к сервису ИТС завершилось ошибкой.
					|Сервер вернул состояние %1
					|Текст ответа:
					|%2'");
			
			ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
				УровеньЖурналаРегистрации.Ошибка,,,
				СтрШаблон(ТекстОшибкиЖурналаРегистрации,
					Ответ.error.code,
					Ответ.error.message));
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат Результат;

КонецФункции

Процедура СохранитьИдентификаторЗаявки(Организация, ИдентификаторЗаявки)

	ОбщегоНазначенияБП.ЗаписатьДанныеВХранилище(Организация, ИдентификаторЗаявки,
		КлючСохраненнойНастройкиИдентификаторЗаявкиSmartway()); 

КонецПроцедуры

Функция КлючСохраненнойНастройкиИдентификаторЗаявкиSmartway()

	Возврат ВРег("ИдентификаторЗаявкиSmartway");

КонецФункции

#КонецОбласти

#КонецЕсли
