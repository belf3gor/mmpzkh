
/////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура формирования оповещений.
Процедура СформироватьОповещения(Отказ = Ложь)
	
	Для Каждого ТекКоманда Из Команды Цикл
		Команды.Удалить(ТекКоманда);
	КонецЦикла;
	
	Если Не Элементы.Найти("ГруппаОповещения") = Неопределено Тогда
		Элементы.Удалить(Элементы.ГруппаОповещения);
	КонецЕсли;
	
	врТаблицаОповещений = Константы.УПЖКХ_СведенияОВажныхОповещениях.Получить().Получить();
	
	Если врТаблицаОповещений = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ТолькоНеВыполненные Тогда
		НайденныеСтроки = врТаблицаОповещений.НайтиСтроки(Новый Структура("Выполнено", Ложь));
		врТаблицаОповещений = врТаблицаОповещений.Скопировать(НайденныеСтроки);
	КонецЕсли;
	
	Если врТаблицаОповещений.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ГруппаФормы = Элементы.Добавить("ГруппаОповещения", Тип("ГруппаФормы"));
	ГруппаФормы.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаФормы.Отображение         = ОтображениеОбычнойГруппы.Нет;
	ГруппаФормы.ОтображатьЗаголовок = Ложь;
	
	Для Каждого ТекСтрока Из врТаблицаОповещений Цикл
		
		Попытка
			
			НадписьФормы = Элементы.Добавить("Надпись_" + ТекСтрока.Обработчик, Тип("ДекорацияФормы"), Элементы.ГруппаОповещения);
			НадписьФормы.Заголовок  = ТекСтрока.Версия + ". " + ТекСтрока.Описание;
			Если ТекСтрока.Выполнено Тогда
				НадписьФормы.ЦветТекста = Новый Цвет(128,128,128);
			Иначе
				НадписьФормы.ЦветТекста = Новый Цвет(25,85,174);
			КонецЕсли;
			
			КомандаФормы = Команды.Добавить(ТекСтрока.Обработчик);
			КомандаФормы.Действие  = "ОбработатьКомандуОповещения";
			КомандаФормы.Заголовок = "Подробнее";
			
			КнопкаФормы = Элементы.Добавить(ТекСтрока.Обработчик, Тип("КнопкаФормы"), Элементы.ГруппаОповещения);
			КнопкаФормы.Вид        = ВидКнопкиФормы.ОбычнаяКнопка;
			КнопкаФормы.ИмяКоманды = ТекСтрока.Обработчик;
			Если ТекСтрока.Выполнено Тогда
				КнопкаФормы.ЦветТекста = Новый Цвет(128,128,128);
			КонецЕсли;
			
		Исключение
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(ОписаниеОшибки());
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Возникла ошибка при подготовке важных оповещений.");
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Функция выполняет обработчик команды.
Функция ВыполнитьОбработчикКоманды(Обработчик)
	
	Возврат Обработки.Удалить_КВП_ОбновлениеИнформационнойБазы.ВыполнитьОбработкуВажногоОповещения(Обработчик);
	
КонецФункции

&НаСервере
// Процедура помечает оповещение как выполненное.
Процедура ПометитьВажноеОповещениеКакВыполненное(Обработчик)
	
	ТаблицаОповещений = Константы.УПЖКХ_СведенияОВажныхОповещениях.Получить().Получить();
	
	НайденныеСтроки = ТаблицаОповещений.НайтиСтроки(Новый Структура("Обработчик", Обработчик));
	Если Не НайденныеСтроки.Количество() = 0 Тогда
		НайденныеСтроки[0].Выполнено = Истина;
	КонецЕсли;
	
	Константы.УПЖКХ_СведенияОВажныхОповещениях.Установить(Новый ХранилищеЗначения(ТаблицаОповещений));
	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" Формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТолькоНеВыполненные") Тогда
		ТолькоНеВыполненные = Параметры.ТолькоНеВыполненные;
	КонецЕсли;
	
	СформироватьОповещения(Отказ);
	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды.
Процедура ОбработатьКомандуОповещения(Команда)
	
	Обработчик = Команда.Имя;
	
	РезультатВыполнения = ВыполнитьОбработчикКоманды(Обработчик);
	
	// Обработка результата.
	Если РезультатВыполнения.ОбработчикВыполнен Тогда
		
		Если ТипЗнч(РезультатВыполнения.Результат) = Тип("Строка") Тогда
			ДанныеХранилища = ПолучитьИзВременногоХранилища(РезультатВыполнения.Результат);
			Если ТипЗнч(ДанныеХранилища) = Тип("ТабличныйДокумент") Тогда
				ДанныеХранилища.Показать("Важное оповещение");
			КонецЕсли;
		КонецЕсли;
		
		ПометитьВажноеОповещениеКакВыполненное(Обработчик);
		
		Отказ = Ложь;
		СформироватьОповещения(Отказ);
		Если Отказ Тогда
			Закрыть();
		КонецЕсли;
		
	Иначе
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Произошла ошибка при выполнении обработчика важного оповещения.")
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти