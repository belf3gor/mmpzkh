#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция РазложитьМассивПоТипамОбъектов(МассивОбъектов)
	СтруктураТипов 	= Новый Структура;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(Объект));
		Если МетаданныеДокумента <> Неопределено Тогда
	
			ИмяДокумента = МетаданныеДокумента.Имя;
			Если НЕ СтруктураТипов.Свойство(ИмяДокумента) Тогда
				МассивДокументов 	= Новый Массив;
				СтруктураТипов.Вставить(ИмяДокумента, МассивДокументов);
			КонецЕсли;
			СтруктураТипов[ИмяДокумента].Добавить(Объект);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураТипов;
	
КонецФункции

// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ПЕЧАТНЫХ ФОРМ

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РублевыеСуммыДокументаВВалюте") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"РублевыеСуммыДокументаВВалюте",
			НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'"),
			СформироватьПечатнуюФормуСправкиРублевыеСуммыДокументаВВалюте(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
	КонецЕсли;
	
КонецПроцедуры

// Функция осуществляет печать справки - расчета.
//
Функция СформироватьПечатнуюФормуСправкиРублевыеСуммыДокументаВВалюте(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСверху = 0;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСнизу = 0;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РублевыеСуммыДокументаВВалюте";
	
	СисИнфо = Новый СистемнаяИнформация;
	Если ПустаяСтрока(СисИнфо.ИнформацияПрограммыПросмотра) Тогда 
		ТабличныйДокумент.ПолеСлева          = 5;
		ТабличныйДокумент.ПолеСправа         = 5;
	Иначе
		ТабличныйДокумент.ПолеСлева          = 10;
		ТабличныйДокумент.ПолеСправа         = 10;
	КонецЕсли;
	
	КоличествоДокументов = 0;
	НомераТаблиц = Новый Структура;
	ВалютаРегламентированногоУчета 	= ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьРублевыхСуммДокументовВВалюте.ПФ_MXL_РублевыеСуммыДокументаВВалюте");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);

	СтруктураТипов = РазложитьМассивПоТипамОбъектов(МассивОбъектов);

	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомераТаблиц.Очистить();
		
		ИмяДокумента = СтруктураОбъектов.Ключ;
		
		Запрос.Текст = Документы[ИмяДокумента].ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц);
		
		Запрос.УстановитьПараметр("МассивОбъектов", СтруктураОбъектов.Значение);
		
		Если ИмяДокумента = "ОтчетКомиссионераОПродажах" Тогда
			Запрос.УстановитьПараметр("КомиссионноеВознаграждение", НСтр("ru = ""Комиссионное вознаграждение"""));
		КонецЕсли;
		
		РезультатЗапроса        = Запрос.ВыполнитьПакет();
		
		//Необходимо разделить выборку данных запроса на полученные по документу ОтчетКомиссионераОПродажах и остальные.
		//Т.к. в документе ОтчетКомиссионераОпродажах используется дополнительная группировка ВидОперацииДляОтчета, с тем, чтобы
		//в отчет вывести данные и по комиссионному вознаграждению, и по реализованным комиссонером товарам и услугам. Поэтому во всех
		//итоговых выборках результата запроса, возвращаемых из докумнта ОтчетКомиссионераОПродажах, используется дополнительное 
		//измерение (поле по которому считаются итоги) - "ВидОперацииДляОтчета", которое может принимать одно из двух значений:
		//"Продажа" - для реализованных комиссионером товаров и услуг; "ОтчетПоВознаграждению" - для непосредственно комиссионного вознаграждения,
		//причитающегося комиссионеру.
		Если ИмяДокумента = "ОтчетКомиссионераОПродажах" Тогда
			ВыборкаДокументов       = РезультатЗапроса[НомераТаблиц.ТаблицаРеквизитов].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Иначе
			ВыборкаДокументов       = РезультатЗапроса[НомераТаблиц.ТаблицаРеквизитов].Выбрать();
		КонецЕсли;
		
		ВыборкаСуммПоДокументам = РезультатЗапроса[НомераТаблиц.ТаблицаСумм].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ЕстьПредоплаты = НомераТаблиц.Свойство("ТаблицаПредоплат");
		
		Если ЕстьПредоплаты Тогда
			ВыборкаПредоплат = РезультатЗапроса[НомераТаблиц.ТаблицаПредоплат].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КонецЕсли;
		
		Пока ВыборкаДокументов.Следующий() Цикл
			
			СсылкаНаВыводимыйДокумент = ВыборкаДокументов.Ссылка;
		
			ТекстСообщения = "";
			Если НЕ ВыборкаДокументов.Проведен Тогда
				ТекстСообщения = НСтр("ru = '%1: справка-расчет формируется только по проведенным документам.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(СсылкаНаВыводимыйДокумент));
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ТекстСообщения) Тогда
				Если ВыборкаДокументов.ВалютаДокумента = ВалютаРегламентированногоУчета Тогда
					ТекстСообщения = НСтр("ru = '%1: справка-расчет формируется только по документам в иностранной валюте или условных единицах.'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(СсылкаНаВыводимыйДокумент));
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ВыборкаСуммПоДокументам.НайтиСледующий(СсылкаНаВыводимыйДокумент, "Ссылка") Тогда
				ТекстСообщения = НСтр("ru = '%1: нет ни одной заполненной табличной части, по которой происходит печать справки-расчета.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(СсылкаНаВыводимыйДокумент));
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекстСообщения) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СсылкаНаВыводимыйДокумент);
				Продолжить;
			КонецЕсли;
			
			//Необходимо разделить обработку данных запроса на полученные по документу ОтчетКомиссионераОПродажах и остальные.
			//Т.к. в документе ОтчетКомиссионераОпродажах используется дополнительная группировка ВидОперацииДляОтчета, с тем, чтобы
			//в отчет вывести данные и по комиссионному вознаграждению, и по реализованным комиссонером товарам и услугам. Поэтому во всех
			//итоговых выборках результата запроса, возвращаемых из докумнта ОтчетКомиссионераОПродажах, используется дополнительное 
			//измерение (поле по которому считаются итоги) - "ВидОперацииДляОтчета", которое может принимать одно из двух значений:
			//"Продажа" - для реализованных комиссионером товаров и услуг; "ОтчетПоВознаграждению" - для непосредственно комиссионного вознаграждения,
			//причитающегося комиссионеру.
			Если ИмяДокумента = "ОтчетКомиссионераОПродажах" Тогда
				
				Если ЕстьПредоплаты Тогда
					
					ЕстьПредоплаты = ВыборкаПредоплат.НайтиСледующий(СсылкаНаВыводимыйДокумент, "Ссылка");
					
					Если ЕстьПредоплаты Тогда
						ВыборкаПредоплатПоВидОперацииДляОтчета = ВыборкаПредоплат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					КонецЕсли;
					
				КонецЕсли;	
			
				ВыборкаПоДокументамПоВидОперацииДляОтчета = ВыборкаДокументов.Выбрать();
				
				ВыборкаСуммПоДокументамВидОперацииДляОтчета = ВыборкаСуммПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПоДокументамПоВидОперацииДляОтчета.Следующий() Цикл
					
					ТекущийВидОперацииДляОтчета = ВыборкаПоДокументамПоВидОперацииДляОтчета.ВидОперацииДляОтчета;
					
					КоличествоДокументов = КоличествоДокументов + 1;
					Если КоличествоДокументов > 1 Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					Если ВыборкаСуммПоДокументамВидОперацииДляОтчета.НайтиСледующий(ТекущийВидОперацииДляОтчета, "ВидОперацииДляОтчета") Тогда
						
						Если ЕстьПредоплаты Тогда
							ЕстьПредоплаты = ВыборкаПредоплатПоВидОперацииДляОтчета.НайтиСледующий(ТекущийВидОперацииДляОтчета, "ВидОперацииДляОтчета");
						КонецЕсли;	
						
						ЗаполнитьТабличныйДокументСправки(ТабличныйДокумент, ВыборкаПоДокументамПоВидОперацииДляОтчета, ВыборкаСуммПоДокументамВидОперацииДляОтчета, ЕстьПредоплаты, ВыборкаПредоплатПоВидОперацииДляОтчета, ВалютаРегламентированногоУчета, Макет);						
						
					КонецЕсли;	
							
				КонецЦикла;
				
			Иначе
				
				КоличествоДокументов = КоличествоДокументов + 1;
				Если КоличествоДокументов > 1 Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				Если ЕстьПредоплаты Тогда
					ЕстьПредоплаты = ВыборкаПредоплат.НайтиСледующий(СсылкаНаВыводимыйДокумент, "Ссылка");
				КонецЕсли;	
				
				ЗаполнитьТабличныйДокументСправки(ТабличныйДокумент, ВыборкаДокументов, ВыборкаСуммПоДокументам, ЕстьПредоплаты, ВыборкаПредоплат, ВалютаРегламентированногоУчета, Макет);
				
			КонецЕсли;	
					
		КонецЦикла;
		
	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ЗАПОЛНЕНИЯ ТАБЛИЧНОГО ДОКУМЕНТОВ ПЕЧАТНОЙ ФОРМЫ

Процедура ЗаполнитьТабличныйДокументСправки(ТабличныйДокумент, ВыборкаДокументов, ВыборкаСуммПоДокументам, ЕстьПредоплаты, ВыборкаПредоплат, ВалютаРегламентированногоУчета, Макет)
	
	СуммаВключаетНДС = ВыборкаДокументов.СуммаВключаетНДС;
	
	УчетАгентскогоНДС = ВыборкаДокументов.УчетАгентскогоНДС;
	
	СуммаУвеличенияВсегоНаДанныеИзШапкиВал    = ВыборкаДокументов.ВсегоВал + ?(СуммаВключаетНДС, ?(УчетАгентскогоНДС, ВыборкаДокументов.НДСВал * (-1), 0), ?(УчетАгентскогоНДС, 0, ВыборкаДокументов.НДСВал));
	СуммаУвеличенияВсегоНДСНаДанныеИзШапкиВал = ВыборкаДокументов.НДСВал;
	
	СуммаДокументаВал = ВыборкаСуммПоДокументам.ВсегоВал + СуммаУвеличенияВсегоНаДанныеИзШапкиВал + ?(СуммаВключаетНДС, ?(УчетАгентскогоНДС, ВыборкаСуммПоДокументам.НДСВал * (-1), 0), ?(УчетАгентскогоНДС, 0, ВыборкаСуммПоДокументам.НДСВал));
	НДСВал            = ВыборкаСуммПоДокументам.НДСВал   + ВыборкаДокументов.НДСВал;
	
	СуммаДокументаРуб	= ВыборкаСуммПоДокументам.ВсегоРуб;
	
	СуммаПредоплатыВал = ?(ЕстьПредоплаты, ВыборкаПредоплат.СуммаПредоплатыВал, 0);
	СуммаПредоплатыРуб = ?(ЕстьПредоплаты, ВыборкаПредоплат.СуммаПредоплатыРуб, 0);
	
	СуммаДокументаВалДляРасчета = СуммаДокументаВал;
	СуммаДокументаРубДляРасчета = СуммаДокументаРуб;
	
	ТипСсылки = ТипЗнч(ВыборкаДокументов.Ссылка);
	
	Если НЕ ТипСсылки = Тип("ДокументСсылка.ОтражениеНДСКВычету") 
		И НЕ ТипСсылки = Тип("ДокументСсылка.ОтражениеНачисленияНДС") Тогда
	
		Если УчетАгентскогоНДС Тогда
			СуммаДокументаРубДляРасчета = СуммаДокументаРуб - ВыборкаСуммПоДокументам.НДСРуб;
		КонецЕсли;
		
	КонецЕсли;
	
	КурсПредоплаты = ?(СуммаПредоплатыВал <> 0, Окр(СуммаПредоплатыРуб / СуммаПредоплатыВал, 4), 0);
	
	СуммаНеоплаченоВал = СуммаДокументаВалДляРасчета - СуммаПредоплатыВал;
	
	Если ЗначениеЗаполнено(ВыборкаДокументов.КурсВзаиморасчетов) И ЗначениеЗаполнено(ВыборкаДокументов.КратностьВзаиморасчетов) Тогда
		КурсДокумента = ВыборкаДокументов.КурсВзаиморасчетов
			/ ?(ВыборкаДокументов.КратностьВзаиморасчетов <> 0, ВыборкаДокументов.КратностьВзаиморасчетов, 1);
		КурсВзаиморасчетов      = ВыборкаДокументов.КурсВзаиморасчетов;
		КратностьВзаиморасчетов = ВыборкаДокументов.КратностьВзаиморасчетов;
	Иначе
		// Для документа "Реализация отгруженных товаров" курс и кратность необходимо получить из регистра на дату документа
		СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
			ВыборкаДокументов.ВалютаДокумента, ВыборкаДокументов.Дата);
		КурсДокумента           = СтруктураКурсаВзаиморасчетов.Курс 
			/ ?(СтруктураКурсаВзаиморасчетов.Кратность <> 0, СтруктураКурсаВзаиморасчетов.Кратность, 1);
		КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
		КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
	КонецЕсли;
	
	// Определим рублевый эквивалент неоплаченной суммы
	
	Если СуммаНеоплаченоВал <> 0 Тогда
		// Документ выписан в валюте, рублевый остаток определяем по курсу расчетов
		СуммаНеоплаченоРуб = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(СуммаНеоплаченоВал,
			ВыборкаДокументов.ВалютаДокумента, ВалютаРегламентированногоУчета,
			КурсВзаиморасчетов, 1,
			КратностьВзаиморасчетов, 1);
	Иначе
		СуммаНеоплаченоРуб = 0;
	КонецЕсли;
	
	ПогрешностьОкругленияСвязаннаяСРасчетомПоРазнымКурсам = 1;
	
	Если СуммаДокументаРубДляРасчета - (СуммаПредоплатыРуб + СуммаНеоплаченоРуб) > ПогрешностьОкругленияСвязаннаяСРасчетомПоРазнымКурсам 
		ИЛИ СуммаДокументаРубДляРасчета - (СуммаПредоплатыРуб + СуммаНеоплаченоРуб) < ПогрешностьОкругленияСвязаннаяСРасчетомПоРазнымКурсам *(-1) Тогда
		ТекстСообщения = НСтр("ru = '%1: обнаружено расхождение сведений о рублевой сумме документа по проводкам (%2) и по данным регистра ""Рублевые суммы документов в валюте"" (%3).'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ВыборкаДокументов.Ссылка, 
			СуммаПредоплатыРуб + СуммаНеоплаченоРуб, СуммаДокументаРубДляРасчета);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ВыборкаДокументов.Ссылка);
	Иначе
		СуммаНеоплаченоРуб = СуммаДокументаРубДляРасчета - СуммаПредоплатыРуб;
	КонецЕсли;
	
	СуммаДокументаРубДляРасчета = СуммаПредоплатыРуб + СуммаНеоплаченоРуб;

	СуммаДокументаВал 	= СуммаДокументаВалДляРасчета;
	
	СуммаДокументаРуб   = СуммаДокументаРубДляРасчета;
	
	РасчетныйКурсВал  = ?(СуммаДокументаВал <> 0, Окр(СуммаДокументаРуб / СуммаДокументаВал, 4), 0);
	
    // Вывод данных в табличный документ

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОрганизацияПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументов.Организация, ВыборкаДокументов.Дата), 
		"НаименованиеДляПечатныхФорм,");
	ОбластьШапка.Параметры.ОрганизацияПредставление = ОрганизацияПредставление;
	
	КонтрагентПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументов.Контрагент, ВыборкаДокументов.Дата), 
		"НаименованиеДляПечатныхФорм,");
	ОбластьШапка.Параметры.КонтрагентПредставление	= КонтрагентПредставление;
	ОбластьШапка.Параметры.Контрагент				= ВыборкаДокументов.Контрагент;
	
	ДокументПредставление 		= "";
	Если ЗначениеЗаполнено(ВыборкаДокументов.НомерВходящегоДокумента) Тогда
		ДокументПредставление   = "вх. № " + СокрЛП(ВыборкаДокументов.НомерВходящегоДокумента)
			+ ?(ЗначениеЗаполнено(ВыборкаДокументов.ДатаВходящегоДокумента), " от " + Формат(ВыборкаДокументов.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy"), "");
	КонецЕсли;
	
	ОбластьШапка.Параметры.Документ					= ВыборкаДокументов.Ссылка;
	ОбластьШапка.Параметры.ДокументПредставление	= Строка(ВыборкаДокументов.Ссылка) 
		+ ?(ЗначениеЗаполнено(ДокументПредставление), Символы.ПС + ДокументПредставление, "");

	ОбластьШапка.Параметры.ВалютаПредставление		= Строка(ВыборкаДокументов.ВалютаДокумента)
		+ ?(ВыборкаДокументов.РасчетыВУсловныхЕдиницах, " (у.е.)", "");
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	// Раздел "Показатели"
	
	ОбластьПоказатели = Макет.ПолучитьОбласть("Показатели");
	
	Если ТипСсылки = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_1 = НСтр("ru = 'Сумма документа в валюте'");
		ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_2 = НСтр("ru = 'Зачтено задолженности по документу отгрузки в валюте'");
		ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_3 = НСтр("ru = 'Зачтено задолженности по документу отгрузки, руб.'");
		ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_4 = НСтр("ru = 'Средний курс валюты по зачтенной задолженности - справочно  (1.3) / (1.2)'");
		ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_5 = НСтр("ru = 'Ранее оплачено по документу отгрузки в валюте  (1.1) - (1.2)'");
		ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_7 = НСтр("ru = 'Ранее оплачено по документу отгрузки, руб. (1.5) * (1.6)'");
		ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_8 = НСтр("ru = 'Сумма документа, руб. (1.3) + (1.7)'");
		
	Иначе
		
		Если УчетАгентскогоНДС Тогда
			
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_1 = НСтр("ru = 'Сумма документа в валюте (без НДС)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_2 = НСтр("ru = 'Зачтено предоплаты в валюте (без НДС)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_3 = НСтр("ru = 'Зачтено предоплаты, руб. (без НДС)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_4 = НСтр("ru = 'Средний курс валюты по зачтенной предоплате - справочно  (1.3) / (1.2)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_5 = НСтр("ru = 'Не оплачено по документу в валюте (без НДС) (1.1) - (1.2)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_7 = НСтр("ru = 'Не оплачено по документу, руб. (без НДС) (1.5) * (1.6)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_8 = НСтр("ru = 'Сумма документа, руб. (без НДС) (1.3) + (1.7)'");
			
		Иначе
			
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_1 = НСтр("ru = 'Сумма документа в валюте'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_2 = НСтр("ru = 'Зачтено предоплаты в валюте'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_3 = НСтр("ru = 'Зачтено предоплаты, руб.'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_4 = НСтр("ru = 'Средний курс валюты по зачтенной предоплате - справочно  (1.3) / (1.2)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_5 = НСтр("ru = 'Не оплачено по документу в валюте  (1.1) - (1.2)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_7 = НСтр("ru = 'Не оплачено по документу, руб. (1.5) * (1.6)'");
			ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_8 = НСтр("ru = 'Сумма документа, руб. (1.3) + (1.7)'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_6 = НСтр("ru = 'Курс валюты на дату документа'");
	ОбластьПоказатели.Параметры.ЗаголовокДляСтроки1_9 = НСтр("ru = 'Расчетный курс валюты - справочно (1.8) / (1.1)'");
	
	ОбластьПоказатели.Параметры.СуммаДокументаВал		= СуммаДокументаВал;
	ОбластьПоказатели.Параметры.СуммаПредоплатыВал		= СуммаПредоплатыВал;
	ОбластьПоказатели.Параметры.СуммаПредоплатыРуб		= СуммаПредоплатыРуб;
	ОбластьПоказатели.Параметры.КурсПредоплаты			= КурсПредоплаты;
	ОбластьПоказатели.Параметры.СуммаНеоплаченоВал		= СуммаНеоплаченоВал;
	ОбластьПоказатели.Параметры.КурсДокумента			= КурсДокумента;
	ОбластьПоказатели.Параметры.СуммаНеоплаченоРуб		= СуммаНеоплаченоРуб;
	ОбластьПоказатели.Параметры.СуммаДокументаРуб		= СуммаДокументаРуб;
	ОбластьПоказатели.Параметры.РасчетныйКурсВал		= РасчетныйКурсВал;
	
	ТабличныйДокумент.Вывести(ОбластьПоказатели);
	
	// Раздел "Расшифровка предоплаты"
	
	ОбластьШапкаПредоплата = Макет.ПолучитьОбласть("ШапкаПредоплата");
	
	Если ТипСсылки = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ОбластьШапкаПредоплата.Параметры.ЗаголовокТаблицыЗачтеннойПредоплатыЗадолженности = НСтр("ru = '2. Расшифровка зачтенной задолженности'");
	Иначе
		ОбластьШапкаПредоплата.Параметры.ЗаголовокТаблицыЗачтеннойПредоплатыЗадолженности = НСтр("ru = '2. Расшифровка зачтенной предоплаты'");
	КонецЕсли;	
	
	ТабличныйДокумент.Вывести(ОбластьШапкаПредоплата);
	
	Если ЕстьПредоплаты Тогда
	
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПредоплата");
		
		ВыборкаПредоплатПоДокументамАвансов = ВыборкаПредоплат.Выбрать();
		
		Пока ВыборкаПредоплатПоДокументамАвансов.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ВыборкаПредоплатПоДокументамАвансов);
			
			Если ЗначениеЗаполнено(ВыборкаПредоплатПоДокументамАвансов.НомерВходящегоДокумента) Тогда
				
				ДокументПредоплатыПредставление = ВыборкаПредоплатПоДокументамАвансов.ДокументПредоплатыПредставление + " (вх. № " + ВыборкаПредоплатПоДокументамАвансов.НомерВходящегоДокумента 
				+ ?(ЗначениеЗаполнено(ВыборкаПредоплатПоДокументамАвансов.ДатаВходящегоДокумента), " от " + Формат(ВыборкаПредоплатПоДокументамАвансов.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy"), "") + ")";
				
				ОбластьСтрока.Параметры.ДокументПредоплатыПредставление = ДокументПредоплатыПредставление;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
	КонецЕсли;	
	
   	ОбластьПодвалПредоплата = Макет.ПолучитьОбласть("ПодвалПредоплата");
	ОбластьПодвалПредоплата.Параметры.СуммаПредоплатыВал = СуммаПредоплатыВал;
	ОбластьПодвалПредоплата.Параметры.СуммаПредоплатыРуб = СуммаПредоплатыРуб;
	ТабличныйДокумент.Вывести(ОбластьПодвалПредоплата);
	
	// Раздел "Расшифровка по строкам документа"
	ОбластьШапкаРаздел3 = Макет.ПолучитьОбласть("ШапкаРаздел3");
	ТабличныйДокумент.Вывести(ОбластьШапкаРаздел3);

	ОбластьШапкаСтрокиДокумента = Макет.ПолучитьОбласть("ШапкаСтрокиДокумента");
	
	НачислятьНДСПоОтгрузке = УчетнаяПолитика.НачислятьНДСПоОтгрузке(ВыборкаДокументов.Организация, ВыборкаДокументов.Дата);
	ЭтоРеализацияОтгруженныхТоваров = (ТипСсылки = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров"));
	Если ЭтоРеализацияОтгруженныхТоваров И ВыборкаДокументов.РасчетыВУсловныхЕдиницах И НачислятьНДСПоОтгрузке Тогда
		ОбластьШапкаСтрокиДокумента.Параметры.ФормулаБазаНДС = "на дату отгрузки";
	ИначеЕсли ВыборкаДокументов.РасчетыВУсловныхЕдиницах или ВыборкаДокументов.УчетАгентскогоНДС Тогда
		ОбластьШапкаСтрокиДокумента.Параметры.ФормулаБазаНДС 	= "(3.7) * 100 / (100 + (3.3))";
	Иначе
		ОбластьШапкаСтрокиДокумента.Параметры.ФормулаБазаНДС 	= "(3.4) * (1.6)";
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьШапкаСтрокиДокумента);
	
	ВыборкаСумм = ВыборкаСуммПоДокументам.Выбрать();

	НомерПП 	= 0;
	ВсегоВал 	= 0;
	НДСВал 		= 0;
	ВсегоРуб	= 0;
	НалоговаяБазаНДСРуб = 0;
	НДСРуб		= 0;
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаДокумента");
	
	Пока ВыборкаСумм.Следующий() Цикл
		
		НомерПП 	= НомерПП + 1;
		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаСумм);
		ОбластьСтрока.Параметры.НомерПП = НомерПП;
		ОбластьСтрока.Параметры.ВсегоВал       = ВыборкаСумм.ВсегоВал + СуммаУвеличенияВсегоНаДанныеИзШапкиВал + ?(СуммаВключаетНДС, 0, ВыборкаСумм.НДСВал + СуммаУвеличенияВсегоНДСНаДанныеИзШапкиВал);
		ОбластьСтрока.Параметры.НДСВал         = ВыборкаСумм.НДСВал + СуммаУвеличенияВсегоНДСНаДанныеИзШапкиВал;
		ОбластьСтрока.Параметры.СуммаБезНДСВал = (ВыборкаСумм.ВсегоВал + СуммаУвеличенияВсегоНаДанныеИзШапкиВал) - ?(СуммаВключаетНДС, (ВыборкаСумм.НДСВал + СуммаУвеличенияВсегоНДСНаДанныеИзШапкиВал), 0);
		ОбластьСтрока.Параметры.СуммаБезНДСРуб = ВыборкаСумм.ВсегоРуб - ВыборкаСумм.НДСРуб;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ОбластьСтрока) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьШапкаСтрокиДокумента);
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
		ВсегоВал 	= ВсегоВал 	+ ВыборкаСумм.ВсегоВал + СуммаУвеличенияВсегоНаДанныеИзШапкиВал + ?(СуммаВключаетНДС, 0, ВыборкаСумм.НДСВал + СуммаУвеличенияВсегоНДСНаДанныеИзШапкиВал);
		НДСВал		= НДСВал	+ ВыборкаСумм.НДСВал + СуммаУвеличенияВсегоНДСНаДанныеИзШапкиВал;
		ВсегоРуб	= ВсегоРуб	+ ВыборкаСумм.ВсегоРуб;
		НДСРуб		= НДСРуб	+ ВыборкаСумм.НДСРуб;
		НалоговаяБазаНДСРуб	= НалоговаяБазаНДСРуб + ВыборкаСумм.НалоговаяБазаНДСРуб;
		
	КонецЦикла;
	
	ОбластьПодвалСтрокиДокумента = Макет.ПолучитьОбласть("ПодвалСтрокиДокумента");
	ОбластьПодвалСтрокиДокумента.Параметры.СуммаБезНДСВал 	= ВсегоВал - НДСВал;
	ОбластьПодвалСтрокиДокумента.Параметры.НДСВал			= НДСВал;
	ОбластьПодвалСтрокиДокумента.Параметры.ВсегоВал			= ВсегоВал;
	ОбластьПодвалСтрокиДокумента.Параметры.ВсегоРуб			= ВсегоРуб;
	ОбластьПодвалСтрокиДокумента.Параметры.НалоговаяБазаНДСРуб = НалоговаяБазаНДСРуб;
	ОбластьПодвалСтрокиДокумента.Параметры.НДСРуб 			= НДСРуб;
	ОбластьПодвалСтрокиДокумента.Параметры.СуммаБезНДСРуб	= ВсегоРуб - НДСРуб;
	
	ТабличныйДокумент.Вывести(ОбластьПодвалСтрокиДокумента);
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаДокументов.Организация, ВыборкаДокументов.Дата);
	
	ОбластьПодвал.Параметры.ДолжностьОтветственногоЗаРегистрыБухУчета          = Руководители.ОтветственныйЗаБухгалтерскиеРегистрыДолжностьПредставление;
	ОбластьПодвал.Параметры.РасшифровкаПодписиОтветственногоЗаРегистрыБухУчета = Руководители.ОтветственныйЗаБухгалтерскиеРегистрыПредставление;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

#КонецЕсли