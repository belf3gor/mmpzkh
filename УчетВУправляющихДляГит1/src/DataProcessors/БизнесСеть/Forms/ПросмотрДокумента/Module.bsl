
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.СтруктураЭД) <> Тип("Структура") 
		ИЛИ Не Параметры.СтруктураЭД.Свойство("НаправлениеЭД") Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Ошибка открытия электронного документа'"),,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Настройки = ХранилищеСистемныхНастроек.Загрузить("Обработка.БизнесСеть.Форма.ПросмотрДокумента/ТекущиеДанные");
	Если ТипЗнч(Настройки) = Тип("Соответствие") Тогда
		ОтключитьВыводДопДанных = Настройки.Получить("ОтключитьВыводДопДанных");
		ОтключитьВыводКопияВерна = Настройки.Получить("ОтключитьВыводКопияВерна");
	КонецЕсли;
	Элементы.КомандаОтображатьДополнительнуюИнформацию.Пометка = Не ОтключитьВыводДопДанных;
	Элементы.КомандаОтображатьОбластьКопияВерна.Пометка        = Не ОтключитьВыводКопияВерна;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураЭД);
	АдресСтруктурыЭД    = ПоместитьВоВременноеХранилище(Параметры.СтруктураЭД, УникальныйИдентификатор);
	ЗагрузкаЭД          = Параметры.СтруктураЭД.НаправлениеЭД = Перечисления.НаправленияЭД.Входящий;
	ЭтоВходящийДокумент = Параметры.СтруктураЭД.НаправлениеЭД = Перечисления.НаправленияЭД.Входящий;
	ДокументИБ          = Параметры.СтруктураЭД.ВладелецЭД;
	ЭтоНовыйДокумент    = Не ЭтоВходящийДокумент И Не ЗначениеЗаполнено(Статус);
	Если ЭтоВходящийДокумент Тогда
		Параметры.СтруктураЭД.Свойство("КонтрагентНаименование", КонтрагентНаименование);
	КонецЕсли;
	
	ПоказатьПредставлениеФайлаЭлектронногоДокумента(Параметры.СтруктураЭД, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Инициализация режима, состояния.
	Если ЭтоВходящийДокумент Тогда
		Шаблон = НСтр("ru = '%1 (электронный документ)'");
		Заголовок = СтрШаблон(Шаблон, Источник.documentTitle);
		РежимЗаполненияДокумента = ЗначениеЗаполнено(ДокументИБ);
		СпособЗагрузкиДокумента = ?(РежимЗаполненияДокумента, 1, 0);
	Иначе
		Если Источник = Неопределено Тогда
			Заголовок = ДокументИБ;
		Иначе
			Шаблон = НСтр("ru = '%1 (электронный документ)'");
			Заголовок = СтрШаблон(Шаблон, Источник.documentTitle);
		КонецЕсли;
		Если ВРЕГ(Статус) = "ОТПРАВЛЕН" Тогда
			Шаблон = НСтр("ru = 'отправлен %1'");
			Состояние = СтрШаблон(Шаблон, 
				БизнесСетьКлиентСервер.ДатаИзUnixTime(Источник.sentDate));
		ИначеЕсли ВРЕГ(Статус) = "ДОСТАВЛЕН" Тогда
			Шаблон = НСтр("ru = 'отправлен %1, доставлен %2'");
			Состояние = СтрШаблон(Шаблон, 
				БизнесСетьКлиентСервер.ДатаИзUnixTime(Источник.sentDate),
				БизнесСетьКлиентСервер.ДатаИзUnixTime(Источник.receivedDate));
		ИначеЕсли ВРЕГ(Статус) = "ОТКЛОНЕН" Тогда
			Шаблон = НСтр("ru = 'отправлен %1, отклонен %2'");
			Состояние = СтрШаблон(Шаблон, 
				БизнесСетьКлиентСервер.ДатаИзUnixTime(Источник.sentDate),
				БизнесСетьКлиентСервер.ДатаИзUnixTime(Источник.receivedDate));
		КонецЕсли;
	КонецЕсли;
	
	Если Статус = "Отклонен" Тогда
		Элементы.ФормаОтклонитьДокумент.Доступность = Ложь;
		Заголовок = Заголовок + " (" + НСтр("ru = 'отклонен'") + ")";
	КонецЕсли;
	
	Элементы.ВходящийДокумент.Видимость     = ЭтоВходящийДокумент;
	Элементы.НовыйДокумент.Видимость        = ЭтоНовыйДокумент;
	Элементы.ОтправленныйДокумент.Видимость = НЕ ЭтоВходящийДокумент И НЕ ЭтоНовыйДокумент;
	
	Если ЭтоНовыйДокумент ИЛИ ПустаяСтрока(Информация) Тогда
		Элементы.Информация.Видимость          = Ложь;
		Элементы.ИнформацияИсходящий.Видимость = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(КонтактноеЛицо) И ПустаяСтрока(ЭлектроннаяПочта) И ПустаяСтрока(Телефон) Тогда
		Элементы.КонтактныеДанные.Видимость          = Ложь;
		Элементы.ГруппаКонтактныеДанныеИсх.Видимость = Ложь;
	КонецЕсли; 

	Если Не ЭтоВходящийДокумент Тогда
		Элементы.КомандаЗагрузить.Видимость = Ложь;
		Элементы.СсылкаИсходящий.Видимость = ЗначениеЗаполнено(ДокументИБ);
		Элементы.ИнформацияИсходящий.Видимость = ЗначениеЗаполнено(Информация);
		Элементы.ФормаОтклонитьДокумент.Видимость = Ложь;
		Элементы.КонтрагентНаименование.Видимость = Ложь;
	КонецЕсли;

	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтправительНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = БизнесСетьКлиентСервер.ОписаниеИдентификацииОрганизацииКонтрагентов();
	ПараметрыОткрытия.ИНН = КонтрагентИНН;
	ПараметрыОткрытия.КПП = КонтрагентКПП;
	БизнесСетьСлужебныйКлиент.ОткрытьПрофильУчастника(ПараметрыОткрытия);

КонецПроцедуры

&НаКлиенте
Процедура РежимЗагрузкиПриИзменении(Элемент)
	
	РежимЗаполненияДокумента = СпособЗагрузкиДокумента = 1;
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗагрузить(Команда)
	
	ОчиститьСообщения();
	ЗагрузитьДокументЭДО();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьДополнительнуюИнформацию(Команда)
	
	ОтключитьВыводДопДанных = Не ОтключитьВыводДопДанных;
	ПерезаполнитьТабличныйДокумент();
	ОбновитьОтображениеДанных();
	Элементы.КомандаОтображатьДополнительнуюИнформацию.Пометка = Не ОтключитьВыводДопДанных;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьОбластьКопияВерна(Команда)
	
	ОтключитьВыводКопияВерна = Не ОтключитьВыводКопияВерна;
	ПерезаполнитьТабличныйДокумент();
	ОбновитьОтображениеДанных();
	Элементы.КомандаОтображатьОбластьКопияВерна.Пометка = Не ОтключитьВыводКопияВерна;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПерезаполнитьТабличныйДокумент()

	Если ЗначениеЗаполнено(АдресСтруктурыЭД) Тогда
		СтруктураЭД = ПолучитьИзВременногоХранилища(АдресСтруктурыЭД);
		ПоказатьПредставлениеФайлаЭлектронногоДокумента(СтруктураЭД, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументЭДО()
	
	Отказ = Ложь;
	Если СпособЗагрузкиДокумента = 0 Тогда
		Если Не ЗначениеЗаполнено(ТипОбъекта) Тогда
			Если Элементы.ТипОбъекта.СписокВыбора.Количество() Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Поле ""Тип"" не заполнено'"),, "ТипОбъекта",, Отказ);
				Возврат;
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Загрузка данного документа не поддерживается'"),,,, Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СпособЗагрузкиДокумента = 1 Тогда
		Если Не ЗначениеЗаполнено(ДокументИБ) Тогда
			ТекстОшибки = НСтр("ru = 'Поле ""Документ"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки,, "ДокументИБ",, Отказ);
			Возврат;
		Иначе
			Если ДокументПроведен(ДокументИБ) Тогда
				Шаблон = НСтр("ru = 'Обработка документа %1.
							|Операция возможна только для непроведенных документов.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ДокументИБ);
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		ОбновитьИнформациюОКонтрагенте(Контрагент, КонтрагентИНН, КонтрагентКПП);
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			СоздатьКонтрагента(Отказ);
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СоздатьОбъектыИБ(АдресСтруктурыРазбораЭД, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидЭД <> Неопределено И ЗагрузкаЭД Тогда
		ПрочитатьНоменклатуруКонтрагентаИзФайла(ДанныеФайлаРазбора, Контрагент, ПрикладнойВидЭД,
			СписокНоменклатурыКонтрагентов, СписокНеСопоставленнойНоменклатуры);
	КонецЕсли;
	
	ОбработчикОповещенияПередЗаполнением = Новый ОписаниеОповещения(
		"СопоставитьПередЗаполнениемОповещение", ЭтотОбъект);
	СопоставитьНоменклатуру(ОбработчикОповещенияПередЗаполнением);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДокументПроведен(ДокументИБ)
	
	Проведен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументИБ, "Проведен");
	Возврат Проведен;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьОбъектыИБ(АдресВременногоХранилища, Отказ)
	
	Перем ДеревоРазбора;
	
	СтруктураРазбора = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Если СтруктураРазбора <> Неопределено И СтруктураРазбора.Свойство("ДеревоРазбора", ДеревоРазбора) Тогда
		// Заполним ссылки на объекты из дерева соответствий, если ссылок нет, тогда будем создавать объекты.
		ОбменСКонтрагентамиВнутренний.ЗаполнитьСсылкиНаОбъектыВДереве(ДеревоРазбора, Отказ);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СопоставитьПередЗаполнениемОповещение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если ТипЗнч(Результат) = Тип("Массив") Тогда
			СохранитьСоответствиеНоменклатурыКонтрагента(Результат);
		КонецЕсли;
		ЗагрузитьДокументВИБ();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьСоответствиеНоменклатурыКонтрагента(Знач СоответствиеНоменклатуры)
	
	Для Каждого ЭлементКоллекции Из СоответствиеНоменклатуры Цикл 
		Если ЗначениеЗаполнено(ЭлементКоллекции.НоменклатураИБ) Тогда 
			ОбменСКонтрагентами.УстановитьСоответствиеНоменклатуры(
				ЭлементКоллекции.НоменклатураКонтрагента,
				ЭлементКоллекции.НоменклатураИБ);
		КонецЕсли;	
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура СоздатьКонтрагента(Отказ)
	
	РеквизитыКонтрагента = Новый Структура;
	РеквизитыКонтрагента.Вставить("ИНН", КонтрагентИНН);
	РеквизитыКонтрагента.Вставить("КПП", КонтрагентКПП);
	РеквизитыКонтрагента.Вставить("Наименование", КонтрагентНаименование);
	
	БизнесСетьПереопределяемый.СоздатьКонтрагентаПоРеквизитам(РеквизитыКонтрагента, Контрагент, Отказ);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьИнформациюОКонтрагенте(Контрагент, УчастникИНН, УчастникКПП)
	
	ОбменСКонтрагентамиПереопределяемый.СсылкаНаОбъектПоИННКПП("Контрагенты", УчастникИНН, УчастникКПП, Контрагент)
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ТипОбъекта.Видимость = Не РежимЗаполненияДокумента;
	Элементы.ДокументУчета.Видимость = РежимЗаполненияДокумента;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Элементы.КонтрагентНаименование.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	Иначе
		Элементы.КонтрагентНаименование.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьДокумент(Команда)
	
	Отказ = Истина;
	Оповещение = Новый ОписаниеОповещения("ОтклонитьДокументПродолжение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Документ будет отклонен для загрузки.
							  |Продолжить выполнение операции?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьДокументПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ПараметрыВызова = Новый Структура;
	ПараметрыВызова.Вставить("Ссылка",        ДокументИБ);
	ПараметрыВызова.Вставить("Идентификатор", Идентификатор);
	Результат = БизнесСетьВызовСервера.ОтклонитьДокументы(ПараметрыВызова, Отказ);
	
	Оповестить("ОбновитьСписокВходящихДокументов1СБизнесСеть");
	
	Закрыть();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПрочитатьНоменклатуруКонтрагентаИзФайла(ДанныеФайлаРазбора, Контрагент, ПрикладнойВидЭД,
	СписокНоменклатурыКонтрагентов, СписокНеСопоставленнойНоменклатуры)
	
	СвойстваЭлектронногоДокумента = Новый Структура("ВидЭД, ПрикладнойВидЭД", ПрикладнойВидЭД, ПрикладнойВидЭД);
	Если НЕ ОбменСКонтрагентамиСлужебный.ИспользоватьСопоставлениеНоменклатуры(СвойстваЭлектронногоДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаЭлектронногоДокумента = ПолучитьИмяВременногоФайла("xml");
	ДанныеФайла = ПолучитьИзВременногоХранилища(ДанныеФайлаРазбора);
	ДанныеФайла.Записать(ИмяФайлаЭлектронногоДокумента);
	НаборНоменклатурыКонтрагентов = ОбменСКонтрагентамиСлужебный.НоменклатураКонтрагентаВФайле(ИмяФайлаЭлектронногоДокумента, Контрагент);
	УдалитьФайлы(ИмяФайлаЭлектронногоДокумента);
	
	СписокНоменклатурыКонтрагентов.ЗагрузитьЗначения(НаборНоменклатурыКонтрагентов);
	
	ВыполнитьКонтрольСопоставленияНоменклатуры(СписокНоменклатурыКонтрагентов, СписокНеСопоставленнойНоменклатуры);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьКонтрольСопоставленияНоменклатуры(СписокНоменклатурыКонтрагентов, СписокНеСопоставленнойНоменклатуры)
	
	НеСопоставлено = ОбменСКонтрагентамиСлужебный.ВыполнитьКонтрольСопоставленияНоменклатуры(
		Неопределено, СписокНоменклатурыКонтрагентов.ВыгрузитьЗначения(), Ложь);
	
	СписокНеСопоставленнойНоменклатуры.ЗагрузитьЗначения(НеСопоставлено);
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьНоменклатуру(ОбработчикОповещения)
	
	Если ЗначениеЗаполнено(СписокНеСопоставленнойНоменклатуры) Тогда
		Настройки = Новый Структура("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ОбменСКонтрагентамиСлужебныйКлиент.ОткрытьСопоставлениеНоменклатуры(
			СписокНеСопоставленнойНоменклатуры.ВыгрузитьЗначения(), Настройки, ОбработчикОповещения);
	Иначе
		ЗагрузитьДокументВИБ();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументИБ(ДокументСсылка, ТекстСообщения, Записывать = Ложь,
	ОбновитьСтруктуруРазбора = Ложь, Отказ = Ложь)
	
	ПараметрыФормирования = Новый Структура;
	ПараметрыФормирования.Вставить("АдресСтруктурыРазбораЭД",  АдресСтруктурыРазбораЭД);
	ПараметрыФормирования.Вставить("ВидЭД",                    ВидЭД);
	ПараметрыФормирования.Вставить("ДанныеФайлаРазбора",       ДанныеФайлаРазбора);
	ПараметрыФормирования.Вставить("ДанныеФайлаДопДанных",     ДанныеФайлаДопДанных);
	ПараметрыФормирования.Вставить("ДокументИБ",               ДокументИБ);
	ПараметрыФормирования.Вставить("ИмяОбъектаМетаданных",     ИмяОбъектаМетаданных);
	ПараметрыФормирования.Вставить("Контрагент",               Контрагент);
	ПараметрыФормирования.Вставить("ТипОбъекта",               ТипОбъекта);
	ПараметрыФормирования.Вставить("СпособЗагрузкиДокумента",  СпособЗагрузкиДокумента);
	
	ОбменСКонтрагентамиВнутренний.СформироватьДокументИБ(ПараметрыФормирования, ДокументСсылка, ТекстСообщения, Записывать,
		ОбновитьСтруктуруРазбора, Отказ);
		
	Если Не Отказ Тогда
		БизнесСеть.УстановитьСтатусЗагружен(Идентификатор, ДокументСсылка, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументВИБ(ОбновитьСтруктуруРазбора = Ложь)
	
	ТекстСообщения = "";
	ДокументСсылка = Неопределено;
	
	Отказ = Ложь;
	СформироватьДокументИБ(ДокументСсылка, ТекстСообщения, Истина, ОбновитьСтруктуруРазбора, Отказ);
	
	Если Отказ ИЛИ Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
		
	ТекстОповещения	= НСтр("ru = 'Загрузка выполнена.'");
	ТекстПояснения	= НСтр("ru = 'Загружен документ через сервис 1С:Бизнес-сеть.'");
	ПоказатьОповещениеПользователя(ТекстОповещения, ПолучитьНавигационнуюСсылку(ДокументСсылка), ТекстПояснения, БиблиотекаКартинок.БизнесСеть);
	
	МассивОповещения = Новый Массив;
	МассивОповещения.Добавить(ДокументСсылка);
	Оповестить("ОбновитьДокументИБПослеЗаполнения", МассивОповещения);
	
	// Открыть форму документ из формы просмотра, если он новый.
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		ПоказатьЗначение(Неопределено, ДокументСсылка);
	КонецЕсли;
	
	ОповеститьОбИзменении(ДокументСсылка);
	Оповестить("ОбновитьСписокВходящихДокументов1СБизнесСеть");
	
	Если Не Отказ И Окно <> Неопределено Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПредставлениеФайлаЭлектронногоДокумента(СтруктураЭД, Отказ)
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("ОтключитьВыводДопДанных",  ОтключитьВыводДопДанных);
	ПараметрыОбъекта.Вставить("ОтключитьВыводКопияВерна", ОтключитьВыводКопияВерна);
	ПараметрыОбъекта.Вставить("ЗагрузкаЭД",               ЗагрузкаЭД);
	ПараметрыОбъекта.Вставить("ДокументИБ",               ДокументИБ);
	ПараметрыОбъекта.Вставить("СпособЗагрузкиДокумента",  СпособЗагрузкиДокумента);
	ПараметрыОбъекта.Вставить("ТипОбъекта",               ТипОбъекта);
	ПараметрыОбъекта.Вставить("СписокТипов",              Новый СписокЗначений);
	ПараметрыОбъекта.Вставить("ИмяОбъектаМетаданных",     ИмяОбъектаМетаданных);
	ПараметрыОбъекта.Вставить("ДанныеФайлаРазбора",       ДанныеФайлаРазбора);
	ПараметрыОбъекта.Вставить("ДанныеФайлаДопДанных",     ДанныеФайлаДопДанных);
	ПараметрыОбъекта.Вставить("ВидЭД",                    ВидЭД);
	ПараметрыОбъекта.Вставить("АдресСтруктурыРазбораЭД",  АдресСтруктурыРазбораЭД);
	ПараметрыОбъекта.Вставить("Контрагент",               Контрагент);
	ПараметрыОбъекта.Вставить("СкрыватьИнформациюОПодписиДопДанных", Истина);
	
	Контрагент = Неопределено;
	ОбменСКонтрагентамиВнутренний.ВыполнитьПросмотрЭДСервер(СтруктураЭД, ПараметрыОбъекта,
		УникальныйИдентификатор, ТабличныйДокументФормы, Отказ);
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Ссылка = СтруктураЭД.ВладелецЭД;
	КонецЕсли;
	
	Для каждого ЭлементКоллекции Из ПараметрыОбъекта.СписокТипов Цикл
		НоваяСтрокаВыбора = Элементы.ТипОбъекта.СписокВыбора.Добавить();
		НоваяСтрокаВыбора.Значение = ЭлементКоллекции.Представление;
	КонецЦикла;
	
	ВидЭД              = ПараметрыОбъекта.ВидЭД;
	ТипОбъекта         = ПараметрыОбъекта.ТипОбъекта;
	ДанныеФайлаРазбора = ПараметрыОбъекта.ДанныеФайлаРазбора;
	
	Если Не ЗначениеЗаполнено(ДокументИБ) Тогда
		ДокументИБ = ПараметрыОбъекта.ДокументИБ;
	КонецЕсли;
	
	АдресСтруктурыРазбораЭД = ПараметрыОбъекта.АдресСтруктурыРазбораЭД;
	
КонецПроцедуры

#КонецОбласти
