
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АдресФайла = Параметры.АдресФайла;
	РасширениеФайла = Параметры.РасширениеФайла;
	
	Если Не ЗначениеЗаполнено(АдресФайла) Или Не ЭтоАдресВременногоХранилища(АдресФайла) Тогда
		ТекстИсключения = НСтр("ru = 'Не выбран файл для загрузки.
			|Откройте обработку из формы списка контрагентов с помощью команды ""Загрузить"".'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ОписаниеКолонок.Загрузить(Обработки.ЗагрузкаКонтрагентовИзФайла.ОписаниеЗагружаемыхКолонок());
	
	ИзменитьШаг("Шаг1");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("Подключаемый_ПодготовитьТабличныйДокумент", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборТаблицыПриИзменении(Элемент)
	
	Если ОтборТаблицы = 0 Тогда
		
		ЗначениеОтбора = Неопределено; // показываем все
		
	ИначеЕсли ОтборТаблицы = 1 Тогда
		
		ЗначениеОтбора = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусНайденный();
		
	ИначеЕсли ОтборТаблицы = 2 Тогда
		
		ЗначениеОтбора = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусНовый();
		
	Иначе
		
		ЗначениеОтбора = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусДубль();
		
	КонецЕсли;
	
	Элементы.ЗагружаемыеДанные.ОтборСтрок = Новый ФиксированнаяСтруктура("Статус", ЗначениеОтбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличногоДокумента

&НаКлиенте
Процедура ДанныеФайлаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Область.Верх = 1 И Область.Лево <= ДанныеФайла.ШиринаТаблицы Тогда
		
		ДопПараметрОповещения = Новый Структура("ТекущаяОбласть", Область);
		ОписаниеОповещения = Новый ОписаниеОповещения("ДанныеФайлаВыборЗавершение", ЭтотОбъект, ДопПараметрОповещения);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОписаниеКолонок", ОписаниеКолонокВоВременномХранилище());
		ОткрытьФорму("ОбщаяФорма.ВыборКолонокПриЗагрузкеИзФайла", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеФайлаВыборЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Или РезультатЗакрытия = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ТекстНезаполненногоЗаголовка = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.ТекстЗаголовкаНесопоставленнойКолонки();
	ШиринаТаблицы = ДанныеФайла.ШиринаТаблицы;
	Для НомерКолонки = 1 по ШиринаТаблицы Цикл
		
		Область = ДанныеФайла.Область(1, НомерКолонки);
		Если Область.ПараметрРасшифровки = РезультатЗакрытия.Идентификатор Тогда
			Область.Текст = ТекстНезаполненногоЗаголовка;
			Область.ПараметрРасшифровки = "";
			Область.ЦветТекста = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("НезаполненныйРеквизит");
		КонецЕсли;
		
	КонецЦикла;
	
	ДополнительныеПараметры.ТекущаяОбласть.Текст      = РезультатЗакрытия.Представление;
	ДополнительныеПараметры.ТекущаяОбласть.ЦветТекста = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ЦветГиперссылки");
	ДополнительныеПараметры.ТекущаяОбласть.ПараметрРасшифровки = РезультатЗакрытия.Идентификатор;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧасти

&НаКлиенте
Процедура ЗагружаемыеДанныеПослеУдаления(Элемент)
	ТабличнаяЧастьИзменена = Истина;
	ИзменитьТекстПереключателяОтбора();
КонецПроцедуры

&НаКлиенте
Процедура ЗагружаемыеДанныеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагружаемыеДанныеКонтрагентПриИзменении(Элемент)
	
	ТабличнаяЧастьИзменена = Истина;
	ТекущиеДанные = Элементы.ЗагружаемыеДанные.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПолучитьДанныеКонтрагента(ТекущиеДанные.Контрагент));
		ТекущиеДанные.Статус = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусНайденный();
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.Наименование) Тогда
		ТекущиеДанные.Статус = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусНовый();
	КонецЕсли;
	
	ИзменитьТекстПереключателяОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	Верх = ДанныеФайла.ТекущаяОбласть.Верх;
	Низ  = ДанныеФайла.ТекущаяОбласть.Низ;
	Лево = ДанныеФайла.ТекущаяОбласть.Лево;
	
	Если Верх = 1 И Низ = 1 Тогда
		Возврат; // выделена первая строка (строка заголовка)
	КонецЕсли;
	
	УдалитьСтрокиНаСервере(Верх, Низ);
	Элементы.ДанныеФайла.ТекущаяОбласть = ДанныеФайла.Область(Верх, Лево);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКолонку(Команда)
	
	Лево  = ДанныеФайла.ТекущаяОбласть.Лево;
	Право = ДанныеФайла.ТекущаяОбласть.Право;
	Верх  = ДанныеФайла.ТекущаяОбласть.Верх;
	
	УдалитьКолонкиНаСервере(Лево, Право);
	Элементы.ДанныеФайла.ТекущаяОбласть = ДанныеФайла.Область(Верх, Лево);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишнее(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьЛишнееПослеЗакрытияВопроса", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Найти и удалить строки и колонки, не содержащие информацию для загрузки?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	ОчиститьСообщения();
	
	ЗаголовкиЗаполнены = ЗагрузкаДанныхИзВнешнихФайловКлиент.ЗаполненыВсеЗаголовкиКолонок(
		ДанныеФайла, "ДанныеФайла", ОписаниеКолонок);
	
	Если Не ЗаголовкиЗаполнены Тогда
		Возврат;
	КонецЕсли;
	
	ОтборТаблицы = 0;
	Элементы.ЗагружаемыеДанные.ОтборСтрок = Неопределено;
	
	ДлительнаяОперация = ПодготовитьТаблицуДанныхДляЗагрузкиНаСервере();
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		Обработчик = Новый ОписаниеОповещения("ПодготовитьТаблицуДанныхДляЗагрузкиЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если ТабличнаяЧастьИзменена Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОПереходеНаПервыйШаг", ЭтотОбъект);
		ТекстВопроса = НСтр(
			"ru = 'Все изменения, произведенные вами в таблице, будут потеряны.
				  |
				  |Вернуться на предыдущий шаг?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ИзменитьШаг("Шаг1");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ДлительнаяОперация = ЗагрузитьДанныеИзФайлаНаСервере();
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат; // найдены незаполненные обязательные реквизиты
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		Обработчик = Новый ОписаниеОповещения("ЗагрузкаДанныхИзФайлаЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УправлениеФормой

&НаСервере
Процедура ИзменитьШаг(ТекущийШаг)
	
	Элементы.ГруппаШаг1.Видимость = (ТекущийШаг = "Шаг1");
	Элементы.ГруппаШаг2.Видимость = (ТекущийШаг = "Шаг2");
	Элементы.Далее.КнопкаПоУмолчанию = (ТекущийШаг = "Шаг1");
	Элементы.Загрузить.КнопкаПоУмолчанию = (ТекущийШаг = "Шаг2");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Серый текст для новых элементов
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ЗагружаемыеДанныеКонтрагент");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ЗагружаемыеДанные.Контрагент", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ЗагружаемыеДанные.Статус", ВидСравненияКомпоновкиДанных.Равно,
		ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусНовый());
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСерый);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЗагружаемыеДанные.Представление"));
	
	// Красный текст для дублей
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ЗагружаемыеДанныеКонтрагент");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ЗагружаемыеДанные.Контрагент", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ЗагружаемыеДанные.Статус", ВидСравненияКомпоновкиДанных.Равно,
		ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусДубль());
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Кирпичный);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЗагружаемыеДанные.Представление"));
	
	// Устанавливаем отметку незаполненного, если не заполнены ссылка и наименование
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ЗагружаемыеДанныеКонтрагент");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ЗагружаемыеДанные.Контрагент", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ЗагружаемыеДанные.Статус", ВидСравненияКомпоновкиДанных.Равно,
		ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатусНайденный());
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекстПереключателяОтбора()
	
	Статистика = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.СтатистикаСтатусовСтрокТаблицы(Объект.ЗагружаемыеДанные);
	
	СписокВыбора = Элементы.ОтборТаблицы.СписокВыбора;
	СписокВыбора[0].Представление = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.ТекстСКоличеством(НСтр("ru = 'Все'"), Статистика.Всего);
	СписокВыбора[1].Представление = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.ТекстСКоличеством(НСтр("ru = 'Найденные'"), Статистика.Найденные);
	СписокВыбора[2].Представление = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.ТекстСКоличеством(НСтр("ru = 'Новые'"), Статистика.Новые);
	
КонецПроцедуры

#КонецОбласти

#Область ПодготовкаТабличногоДокумента

&НаКлиенте
Процедура Подключаемый_ПодготовитьТабличныйДокумент()
	
	ДлительнаяОперация = ПодготовитьТабличныйДокументСервер(АдресФайла, РасширениеФайла, УникальныйИдентификатор, ОписаниеКолонок);
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		Обработчик = Новый ОписаниеОповещения("ПодготовитьТабличныйДокументЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьТабличныйДокументСервер(Знач АдресФайла, Знач РасширениеФайла, Знач ИдентификаторФормы, Знач ОписаниеКолонок)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ХранилищеДанных = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
	УдалитьИзВременногоХранилища(АдресФайла);
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("РасширениеФайла", РасширениеФайла);
	ПараметрыЗадания.Вставить("ХранилищеДанныхФайла", ХранилищеДанных);
	ПараметрыЗадания.Вставить("ОписаниеКолонок", ОписаниеКолонок.Выгрузить());
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Подготовка табличного документа к загрузке контрагентов.'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗагрузкаКонтрагентовИзФайла.ОбработатьДанныеИзФайла",
		ПараметрыЗадания, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПодготовитьТабличныйДокументЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ЗаполнитьТабличныйДокументСервер(ДлительнаяОперация.АдресРезультата);
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныйДокументСервер(АдресРезультата)
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресРезультата);
	ДанныеФайла = ЗагруженныеДанные.ДанныеФайла.Получить();
	УдалитьИзВременногоХранилища(АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область УдалениеЛишнихДанных

&НаСервере
Процедура УдалитьСтрокиНаСервере(Верх, Низ)
	
	Если Верх = 1 Тогда
		Верх = 2; // чтобы не удалить заголовки колонок
	КонецЕсли;
	
	Область = ДанныеФайла.Область(Верх,, Низ);
	ДанныеФайла.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоВертикали);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьКолонкиНаСервере(Лево, Право)
	
	Область = ДанныеФайла.Область(, Лево,, Право);
	ДанныеФайла.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишнееПослеЗакрытияВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ДанныеФайла, "Ожидание");
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = УдалитьЛишнееСервер();
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		Обработчик = Новый ОписаниеОповещения("УдалитьЛишнееЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УдалитьЛишнееСервер()
	
	ПараметрыЗадания = Новый Структура;
	ХранилищеДанных = Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных(9));
	ПараметрыЗадания.Вставить("ХранилищеДанных", ХранилищеДанных);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Удаление незначимых строк табличного документа.'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗагрузкаКонтрагентовИзФайла.УдалитьВсеНенужныеСтрокиТаблицы",
		ПараметрыЗадания, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура УдалитьЛишнееЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		НайденыНенужныеСтроки = Ложь;
		ОбработатьРезультатУдаленияЛишнихСтрок(ДлительнаяОперация.АдресРезультата, НайденыНенужныеСтроки);
		Если НЕ НайденыНенужныеСтроки Тогда
			
			ТекстСообщения = НСтр("ru = 'Строк и колонок, не содержащих информацию для загрузки, не обнаружено.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Удаление завершено.'");
			ТекстПояснения = НСтр("ru = 'Удаление незначимых данных завершено.'");
			ПоказатьОповещениеПользователя(ТекстСообщения,, ТекстПояснения);
			
		КонецЕсли;
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатУдаленияЛишнихСтрок(АдресРезультата, НайденыНенужныеСтроки)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	НайденыНенужныеСтроки = Результат.НайденыНенужныеСтроки;
	Если НайденыНенужныеСтроки Тогда
		ДанныеФайла = Результат.ХранилищеДанных.Получить();
	КонецЕсли;
	
	ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ДанныеФайла, "НеИспользовать");
	
КонецПроцедуры

#КонецОбласти

#Область ПодготовкаТаблицыДанныхДляЗагрузки

&НаСервере
Функция ПодготовитьТаблицуДанныхДляЗагрузкиНаСервере()
	
	ПараметрыЗадания = Новый Структура;
	ХранилищеДанных = Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных(9));
	ПараметрыЗадания.Вставить("ХранилищеДанных", ХранилищеДанных);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Подготовка таблицы данных при загрузке контрагентов.'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗагрузкаКонтрагентовИзФайла.ПолучитьТаблицуДанныхДляЗагрузки",
		ПараметрыЗадания, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПодготовитьТаблицуДанныхДляЗагрузкиЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ЗаполнитьТаблицуЗагружаемыхДанных(ДлительнаяОперация.АдресРезультата);
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЗагружаемыхДанных(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Объект.ЗагружаемыеДанные.Загрузить(Результат);
	
	ИзменитьШаг("Шаг2");
	ИзменитьТекстПереключателяОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаДанныхИзФайла

&НаСервере
Функция ЗагрузитьДанныеИзФайлаНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ЗагружаемыеДанные", Объект.ЗагружаемыеДанные.Выгрузить());
	ПараметрыЗадания.Вставить("ГруппаДляНовыхКонтрагентов", ГруппаДляНовыхКонтрагентов);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка данных файла.'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗагрузкаКонтрагентовИзФайла.ЗагрузитьДанныеИзФайла",
		ПараметрыЗадания, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ЗагрузкаДанныхИзФайлаЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ОповеститьОбИзменении(Тип("СправочникСсылка.Контрагенты"));
		Результат = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		Если Результат.Ошибки <> Неопределено
			И Результат.Ошибки.СписокОшибок.Количество() > 0 Тогда
			ПоказатьОповещениеПользователя(НСтр("ru = 'При загрузке данных произошли ошибки.'"));
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Результат.Ошибки)
		Иначе
			ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка контрагентов произведена.'"));
			Закрыть();
		КонецЕсли;
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеСлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВопросаОПереходеНаПервыйШаг(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ТабличнаяЧастьИзменена = Ложь;
		ИзменитьШаг("Шаг1");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеКонтрагента(Контрагент)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ИНН, КПП");
	
КонецФункции

&НаСервере
Функция ОписаниеКолонокВоВременномХранилище()
	Возврат ПоместитьВоВременноеХранилище(ОписаниеКолонок.Выгрузить());
КонецФункции

#КонецОбласти

#КонецОбласти
