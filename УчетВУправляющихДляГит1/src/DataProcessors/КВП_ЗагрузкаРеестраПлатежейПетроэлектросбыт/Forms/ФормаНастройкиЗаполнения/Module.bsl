
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьДанные();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "ОК" формы.
Процедура ОК(Команда)
	Если Настр_КорректировкаДолга И (НЕ ЗначениеЗаполнено(Настр_Контрагент)) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбрана обслуживающая организация.";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	СоздатьНаборЗаписей();
	
	Закрыть(Истина);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ПрочиеПроцедурыИФункции

&НаСервере
// Заполняет настройки загрузки файла.
//
Процедура ПолучитьДанные()
	
	ЗначенияРеквизитов =
		УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекЗагрузить("КВП_ЗагрузкаРеестраПлатежейПетроэлектросбыт"
																	  + "_Реквизиты", , , ,УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());
	
	Если НЕ ЗначенияРеквизитов = Неопределено
	   И ТипЗнч(ЗначенияРеквизитов) = Тип("Структура") Тогда
		
		Объект.Организация = ЗначенияРеквизитов.Организация;
		Объект.ФорматФайлаЗагрузки = ЗначенияРеквизитов.ФорматФайлаЗагрузки;
		Объект.ИмяФайлаЗагрузки = ЗначенияРеквизитов.ИмяФайлаЗагрузки;	
		Объект.Контрагент = ЗначенияРеквизитов.Контрагент;
		Объект.КорректировкаДолга = ЗначенияРеквизитов.КорректировкаДолга;
		
		Объект.НастройкаЗаполнения.Загрузить(ЗначенияРеквизитов.НастройкаЗаполнения);
		
	КонецЕсли;
	
	Настр_ФорматФайлаЗагрузки = Объект.ФорматФайлаЗагрузки;
	Настр_ИмяФайлаЗагрузки    = Объект.ИмяФайлаЗагрузки;
	Настр_Контрагент          = Объект.Контрагент;
	Настр_КорректировкаДолга  = Объект.КорректировкаДолга;
	
	ТЗ = ДанныеФормыВЗначение(Настр_ТаблицаНастроекПриЗагрузке, Тип("ТаблицаЗначений"));
	
	ТЗ = Объект.НастройкаЗаполнения.Выгрузить();
	ЗначениеВДанныеФормы(ТЗ, Настр_ТаблицаНастроекПриЗагрузке); 

КонецПроцедуры  //ПролучитьДанные()

&НаСервере
// Создает набор записей в регистре сведений КВП_НастройкиЗагрузкиИзАС.
//
Процедура СоздатьНаборЗаписей()
	ЗагрузкаИзАС = Перечисления.КВП_ВидыНастроекЗагрузкиИзАС.ЗагрузкаИзСистемПриемаПлатежей;

	НаборЗаписей = РегистрыСведений.КВП_НастройкиЗагрузкиИзАС.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
	НаборЗаписей.Отбор.ВидОперации.Установить(ЗагрузкаИзАС);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Организация         = Объект.Организация;
	НоваяЗапись.ВидОперации         = ЗагрузкаИзАС;
	//НоваяЗапись.ФорматФайлаЗагрузки = Настр_ФорматФайлаЗагрузки;
	НоваяЗапись.ИмяФайлаЗагрузки    = Настр_ИмяФайлаЗагрузки;
	НоваяЗапись.Контрагент          = Настр_Контрагент;
	НоваяЗапись.КорректировкаДолга  = Настр_КорректировкаДолга;
	
	НаборЗаписей.Записать();
	
	//ФорматФайлаЗагрузки = Настр_ФорматФайлаЗагрузки;
	Объект.ИмяФайлаЗагрузки    = Настр_ИмяФайлаЗагрузки;
	Объект.Контрагент          = Настр_Контрагент;
	Объект.КорректировкаДолга  = Настр_КорректировкаДолга;
	
	Объект.НастройкаЗаполнения.Загрузить(ДанныеФормыВЗначение(Настр_ТаблицаНастроекПриЗагрузке, Тип("ТаблицаЗначений")));
	
	ЗаполнитьДанныеВХранилище();
	
КонецПроцедуры  //СоздатьНаборЗаписей()

&НаСервере
// Сохраняет настройки загрузки реестра платежей.
//
Процедура ЗаполнитьДанныеВХранилище()

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Организация", Объект.Организация);
	СтруктураРеквизитов.Вставить("ФорматФайлаЗагрузки", Объект.ФорматФайлаЗагрузки);
	СтруктураРеквизитов.Вставить("ИмяФайлаЗагрузки", Объект.ИмяФайлаЗагрузки);
	СтруктураРеквизитов.Вставить("Контрагент", Объект.Контрагент);
	СтруктураРеквизитов.Вставить("КорректировкаДолга", Объект.КорректировкаДолга);
	СтруктураРеквизитов.Вставить("НастройкаЗаполнения", Объект.НастройкаЗаполнения.Выгрузить());
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить("КВП_ЗагрузкаРеестраПлатежейПетроэлектросбыт"
																  + "_Реквизиты", ,СтруктураРеквизитов , , УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());

КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля ввода "ИмяФайлаЗагрузки".
Процедура Настр_ИмяФайлаЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ФорматФайлаЗагрузки = "XLS";
	ВыборФайла(ФорматФайлаЗагрузки);
	
КонецПроцедуры

&НаКлиенте
// Открывает диалог выбора файла.
//
// Параметры:
//  Элемент - Элемент управления, для которого выбираем файл.
// 
Процедура ВыборФайла(ФорматФайлаЗагрузки)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр		=	"Файл данных (*.xls)|*.xls";
	ДиалогВыбораФайла.Расширение	=	"xls";
	//КонецЕсли;
		
	ДиалогВыбораФайла.Заголовок						=	"Выберите файл";
	ДиалогВыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогВыбораФайла.ИндексФильтра					=	0;
	ДиалогВыбораФайла.ПолноеИмяФайла				=	Настр_ИмяФайлаЗагрузки;
	
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Настр_ИмяФайлаЗагрузки = ВыбранныеФайлы[0];
	КонецЕсли;

КонецПроцедуры  //ВыборФайла()

#КонецОбласти
