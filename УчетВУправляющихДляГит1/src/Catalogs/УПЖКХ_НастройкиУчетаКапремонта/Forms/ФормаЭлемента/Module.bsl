////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Владелец")
		И НЕ Параметры.Владелец.Пустая() Тогда
		Объект.Владелец = Параметры.Владелец;
	КонецЕсли;
	
	// Данная проверка сработает только в том случае,
	// если программно открыть форму элемента справочника.
	// Если же элемент создается программно без открытия формы элемента,
	// то проверка корректности добавляемого элемента будет выполнена 
	// в процедуре модуля объекта "Перед записью".
	Если Объект.Ссылка.Пустая() Тогда
		Если Объект.Владелец.Пустая() Тогда
			ТекстОшибки = "Создание элемента с незаполненной организацией запрещено!";
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(ТекстОшибки, Отказ);
		Иначе
			Объект.Наименование = Справочники.УПЖКХ_НастройкиУчетаКапремонта.СформироватьНаименованиеЭлемента(Объект.Владелец);
		КонецЕсли;
	КонецЕсли;
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗаписью" формы.
//
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверитьПередЗаписью(Отказ, ПараметрыЗаписи);
	
КонецПроцедуры // ПередЗаписью()

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ТекстВопроса = "";
	
	Если НЕ Объект.ВестиРаздельныйУчетПоУслугамКапремонта
	 И Объект.Услуги.Количество() > 0 Тогда
		ТекстВопроса = "Перед записью элемента таблица услуг капитального ремонта будет очищена";
		Если Объект.ЗапретитьВзаимозачетАвансовИДолговМеждуУслугамиКРиОсновнымиУслугами Тогда
			ТекстВопроса = ТекстВопроса + " и флажок ""Запретить взаимозачет авансов и долгов"" будет снят";
		КонецЕсли;
		
	ИначеЕсли Объект.ВестиРаздельныйУчетПоУслугамКапремонта
			И Объект.Услуги.Количество() = 0 Тогда
			
		ТекстВопроса = "При установленном флажке ""Вести раздельный учет по услугам капремонта"" таблица услуг должна быть заполнена!" + Символы.ПС;
		Если Объект.ЗапретитьВзаимозачетАвансовИДолговМеждуУслугамиКРиОсновнымиУслугами Тогда
			ТекстВопроса = ТекстВопроса + "При продолжении записи элемента данный флажок и флажок ""Запретить взаимозачет авансов и долгов"" будут сняты";
		Иначе
			ТекстВопроса = ТекстВопроса + "При продолжении записи элемента данный флажок будет снят";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстВопроса) Тогда
		ПараметрыЗаписи.Вставить("ВыполненоОповещение", Ложь);
		Возврат;
	Иначе
		ТекстВопроса = ТекстВопроса + ". Продолжить запись?";
		
		ПараметрыЗаписи.Вставить("ВыполненоОповещение", Истина);
		
		Отказ = Истина;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ВопросЗаписатьСПредупреждениемЗавершение", ЭтотОбъект, ПараметрыЗаписи),
					   ТекстВопроса,
					   РежимДиалогаВопрос.ДаНет,
					   ,
					   КодВозвратаДиалога.Нет);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьПередЗаписью()

&НаКлиенте
Процедура ВопросЗаписатьСПредупреждениемЗавершение(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьОбъектНаСервере();
		
		Если ПараметрыЗаписи.Свойство("Закрыть")
			И ПараметрыЗаписи.Закрыть Тогда
			Закрыть();
		КонецЕсли;
		
		Оповестить("ЗаписаныНастройкиУчетаКапремонта", Объект.Владелец);
		
	КонецЕсли;
	
КонецПроцедуры // ВопросЗаписатьСПредупреждениемЗавершение()

&НаСервере
Процедура ЗаписатьОбъектНаСервере()
	
	КВП_ЗаписатьОбъект(ЭтотОбъект);
	
КонецПроцедуры // ЗаписатьОбъектНаСервере()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("ВыполненоОповещение")
		И НЕ ПараметрыЗаписи.ВыполненоОповещение Тогда
		Оповестить("ЗаписаныНастройкиУчетаКапремонта", Объект.Владелец);
	КонецЕсли;
	
КонецПроцедуры // ПослеЗаписи()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

// Процедура - обработчик события "ПриИзменении" флажка "ВестиРаздельныйУчетПоУслугамКапремонта".
//
&НаКлиенте
Процедура ВестиРаздельныйУчетПоУслугамКапремонтаПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры // ВестиРаздельныйУчетПоУслугамКапремонтаПриИзменении()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

// СхемыУчета
&НаКлиенте
// Подключаемый обработчик команды перехода к схеме учета.
Процедура Подключаемый_ОткрытьСхемуУчета(Команда)
	
	ОТР_СхемыУчетаКлиент.Подключаемый_ОткрытьСхемуУчета(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры
// Конец СхемыУчета

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ПрочиеПроцедурыИФункции

// Процедура предназначена для установления доступности элементов формы.
//
&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.Услуги.Доступность                                                              = Объект.ВестиРаздельныйУчетПоУслугамКапремонта;
	Элементы.ЗапретитьВзаимозачетАвансовИДолговМеждуУслугамиКРиОсновнымиУслугами.Доступность = Объект.ВестиРаздельныйУчетПоУслугамКапремонта;
	Элементы.НастройкаРасчетаПени.Доступность                                                = Объект.ВестиРаздельныйУчетПоУслугамКапремонта;
	
КонецПроцедуры // УстановитьДоступность()

#КонецОбласти