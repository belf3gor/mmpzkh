#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЕстьУведомление = ЗначениеЗаполнено(ТекущийОбъект.Уведомление) И
		ЗначениеЗаполнено(ТекущийОбъект.Уведомление.Получить());
		
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		//Создается новый объект
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Справочник не предназначен для ручного заполнения!'"));
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;

	Элементы.НадписьПомеченНаУдаление.Видимость = Объект.ПометкаУдаления;
	
	ОтчетСсылка = Объект.ОтчетСсылка;
	ТипЗнчСсылкаНаОтчет = ТипЗнч(ОтчетСсылка);

	Если ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		ОтчетПредставление = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(ОтчетСсылка);
	ИначеЕсли ТипЗнчСсылкаНаОтчет = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
		// электронное представление
		ОтчетПредставление = ОтчетСсылка.Наименование;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДатаОтправки = Объект.ДатаОтправки;
	ДатаЗакрытия = НСтр("ru = '<не завершена>'");
	ДатаОбновления = НСтр("ru = '<не определено>'");
	ОбновитьФорму();
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СкрытьЭлементыФормыПриИспользованииОднойОрганизации(ЭтаФорма, "НадписьОрганизация");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтчетПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.ОтчетСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСтатусОтправкиНажатие(Элемент)
	
	ДокументооборотСМинобороныКлиент.ПоказатьПротокол(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПервичноеСообщениеНажатие(Элемент)
	
	ПолучитьФайл(ПолучитьАдресФайлаПакета(Объект.Ссылка, ЭтотОбъект.УникальныйИдентификатор), Объект.ИмяФайлаПакета);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьУведомление(Команда)
	
	ПолучитьФайл(ПолучитьАдресФайлаУведомления(Объект.Ссылка), Объект.ИмяФайлаУведомления);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПакет(Команда)
	
	ПолучитьФайл(ПолучитьАдресФайлаПакета(Объект.Ссылка, ЭтотОбъект.УникальныйИдентификатор), Объект.ИмяФайлаПакета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеФормыНаСервере()
	
	Прочитать();
	ОбновитьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФорму()
		
	ЦветСерый = Новый Цвет(128, 128, 128);
	ЦветСиний = Новый Цвет(0, 0, 255);
	
	ПустаяДата = Дата(1,1,1);
	
	ДатаОбновления = ?(Объект.ДатаПолученияРезультата = ПустаяДата, НСтр("ru = '<не определено>'"), Объект.ДатаПолученияРезультата);
	
	Элементы.НадписьЗагрузитьПовторно.Видимость = Ложь;
	Элементы.НадписьЗагрузитьПовторно.Заголовок = "Загрузить повторно";
	Элементы.НадписьЗагрузитьПовторно.Гиперссылка = Истина;
	Элементы.НадписьЗагрузитьПовторно.ЦветТекста = ЦветСерый;
	
	Если Объект.СтатусОтправки = Перечисления.СтатусыОтправки.Отправлен Тогда
		Элементы.НадписьСтатусОтправки.Заголовок = НСтр("ru = 'Протокол сдачи отчета отсутствует'");
		Элементы.НадписьСтатусОтправки.ЦветТекста = ЦветСерый;
		Элементы.НадписьСтатусОтправки.ГиперСсылка = Ложь;
	Иначе
		Элементы.КартинкаПодтверждениеОтправки.Картинка = БиблиотекаКартинок.ЗеленыйШар;
		ДатаЗакрытия =  Объект.ДатаЗакрытия;
		
		Если Объект.СтатусОтправки = Перечисления.СтатусыОтправки.НеПринят Тогда
			Элементы.КартинкаСтатусОтправки.Картинка = БиблиотекаКартинок.РегламентированныйОтчетНеПринят;
			Элементы.НадписьСтатусОтправки.Заголовок = НСтр("ru = 'Протокол ошибок получен'");
			Элементы.НадписьСтатусОтправки.ЦветТекста = ЦветСиний;
			Элементы.НадписьСтатусОтправки.ГиперСсылка = Истина;
			// загрузить повторно
			Элементы.НадписьЗагрузитьПовторно.Видимость = Истина;
		ИначеЕсли Объект.СтатусОтправки = Перечисления.СтатусыОтправки.Сдан Тогда
			Элементы.КартинкаСтатусОтправки.Картинка = БиблиотекаКартинок.ПисьмоПодтверждениеПолучено;
			Элементы.НадписьСтатусОтправки.Заголовок = НСтр("ru = 'Протокол сдачи отчета получен'");
			Элементы.НадписьСтатусОтправки.ЦветТекста = ЦветСиний;
			Элементы.НадписьСтатусОтправки.ГиперСсылка = Истина;
			// загрузить повторно
			Элементы.НадписьЗагрузитьПовторно.Видимость = Истина;
		ИначеЕсли Объект.СтатусОтправки = Перечисления.СтатусыОтправки.ПринятЕстьОшибки Тогда
			Элементы.КартинкаСтатусОтправки.Картинка = БиблиотекаКартинок.ПисьмоПодтверждениеПолучено;
			Элементы.НадписьСтатусОтправки.Заголовок = НСтр("ru = 'Протокол сдачи отчета получен, есть замечания'");
			Элементы.НадписьСтатусОтправки.ЦветТекста = ЦветСиний;
			Элементы.НадписьСтатусОтправки.ГиперСсылка = Истина;
			// загрузить повторно
			Элементы.НадписьЗагрузитьПовторно.Видимость = Истина;
		ИначеЕсли Объект.СтатусОтправки = Перечисления.СтатусыОтправки.Отправлен Тогда
			Элементы.НадписьЗагрузитьПовторно.Заголовок = "Загрузить протокол";
			Элементы.НадписьЗагрузитьПовторно.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьМеню();
КонецПроцедуры

&НаСервере
Процедура ОбновитьМеню()
	
	КнопкаВыгрузитьКвитанцию = Элементы.Найти("ФормаВыгрузитьКвитанцию");
	КнопкаВыгрузитьУведомление = Элементы.Найти("ФормаВыгрузитьУведомление");
		
	КнопкаВыгрузитьУведомление.Видимость = ЕстьУведомление;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьДанныеФормыНаСервере();
	
	ПараметрыОповещения = Новый Структура; 
	ПараметрыОповещения.Вставить("Ссылка", Объект.ОтчетСсылка);
	ПараметрыОповещения.Вставить("Организация", Объект.Организация);
	Оповестить("Актуализация состояния отправки", ПараметрыОповещения, Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАдресФайлаПакета(ОтправкаСсылка, Знач ИдентификаторФормы)
	
	Возврат ПоместитьВоВременноеХранилище(ОтправкаСсылка.Пакет.Получить(), ИдентификаторФормы);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьАдресФайлаУведомления(ОтправкаСсылка)
	
	Возврат ПоместитьВоВременноеХранилище(ОтправкаСсылка.Уведомление.Получить());
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура НадписьЗагрузитьПовторноНажатие(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьПовторноПослеПолученияКонтекста", ЭтотОбъект);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПовторноПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗагрузитьПовторноПослеЗагрузки",
		ЭтотОбъект);
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	КонтекстЭДОКлиент.ЗагрузитьОтветыИзМинобороны(
		Объект.Организация,
		ОписаниеОповещения,
		Объект.ОтчетСсылка,
		Неопределено,
		Объект.Ссылка);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПовторноПослеЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьДанныеФормыНаСервере();
	Если Результат.Выполнено Тогда
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Ссылка", Объект.ОтчетСсылка);
		ПараметрыОповещения.Вставить("Организация", Объект.Организация);
		
		Оповестить("Обновлено состояние отчета", ПараметрыОповещения, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры





















