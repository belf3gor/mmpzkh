
#Область ОбработчикиСобытий
// Обработчик события "ОбработкаПроверкиЗаполнения" элемента идентификатор.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ИндентификаторУникален() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(НСтр("ru='В базе данных уже содержится вид площади с идентификатором ""%Идентификатор%"". Идентификатор должен быть уникальным'"), "%Идентификатор%", ИдентификаторДляФормул), 
			ЭтотОбъект, "Идентификатор",, Отказ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Осуществляет поиск идентификатора, совпадающего с заполненным в объекте
//
// Возвращаемое значение:
//	Булево
//	Истина, если идентификатор не найден, Ложь в противном случае.
//
Функция ИндентификаторУникален() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	1 КАК Поле1
	               |ИЗ
	               |	Справочник.УПЖКХ_ВидыПлощадей КАК ВидыПлощадей
	               |ГДЕ
	               |	ВидыПлощадей.ИдентификаторДляФормул = &ИдентификаторДляФормул
	               |	И ВидыПлощадей.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",                 Ссылка);
	Запрос.УстановитьПараметр("ИдентификаторДляФормул", ИдентификаторДляФормул);
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти
