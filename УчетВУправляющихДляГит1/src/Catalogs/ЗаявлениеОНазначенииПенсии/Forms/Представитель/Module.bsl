#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьПараметры(Параметры);
	ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Телефоны
	Элемент = Элементы.ПредставительТелефон;
	Элемент.ОбновитьТекстРедактирования();
	ПриИзмененииТекстаРедактированияТелефона(Элемент.ТекстРедактирования, Элемент, Ложь);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТелефонПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ПриИзмененииТекстаРедактированияТелефона(Элемент.ТекстРедактирования, Элемент, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Модифицированность = Истина;
	ПриИзмененииТекстаРедактированияТелефона(Текст, Элемент, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПредставителяПриИзменении(Элемент)
	
	ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительАдресМестаЖительстваНажатие(Элемент)
	
	ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица");
	РедактироватьАдрес(Элемент, ВидАдреса);

КонецПроцедуры

&НаКлиенте
Процедура ПредставительАдресМестаПребыванияНажатие(Элемент)
	
	ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица");
	РедактироватьАдрес(Элемент, ВидАдреса);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительАдресФактическийНажатие(Элемент)
	
	ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица");
	РедактироватьАдрес(Элемент, ВидАдреса);

КонецПроцедуры

&НаКлиенте
Процедура ПредставительАдресОрганизацииНажатие(Элемент)
	
	ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресОрганизации");
	РедактироватьАдрес(Элемент, ВидАдреса);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда = Неопределено)
	
	ДанныеКорректны = Истина;
	
	ПредставительУказанКорректно(ЭтотОбъект, ДанныеКорректны);
	
	Если ДанныеКорректны Тогда

		ДополнительныеПараметры = Новый Структура(ПараметрыФормы);
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, ЭтотОбъект, ПараметрыФормы); 
		ДополнительныеПараметры.Вставить("ПараметрыФормы",     ПараметрыФормы);
		ДополнительныеПараметры.Вставить("Модифицированность", Модифицированность);
		
		Модифицированность = Ложь;
		
		Закрыть(ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииТекстаРедактированияТелефона(Текст, Элемент, ИзмененоВручную = Ложь)
	
	Если ИзмененоВручную Тогда
		Пауза = 1.5;
	Иначе
		Пауза = 0.1;
	КонецЕсли;
	
	Представление = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьПредставлениеТелефона(Текст);
	
	// Обновляем фактичекое значение
	Если ЗначениеЗаполнено(Представление) Тогда
		// Устанавливаем телефон в виде +7 ХХХ ХХХ-ХХ-ХХ
		ПредставительТелефон = Представление;
	Иначе
		// В противном случае, устанавливаем то, что ввел пользователь
		ПредставительТелефон = Текст;
	КонецЕсли;
	
	ОтключитьОбработчикОжидания("Подключаемый_ОбновитьТелефон");
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьТелефон", Пауза, Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьТелефон()
	
	Представление = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьПредставлениеТелефона(ПредставительТелефон);
	
	// Меняем отображение на форме
	Если ЗначениеЗаполнено(Представление) Тогда
		Элементы.ПредставительТелефон.ОбновитьТекстРедактирования();
	КонецЕсли;
	Элементы.ПредставительТелефон.ОтметкаНезаполненного = НЕ ЗначениеЗаполнено(Представление);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставительУказанКорректно(Форма, МастерДалее = Истина)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ПредставительУказанКорректно(Форма, МастерДалее, Истина);
	
КонецФункции

&НаСервере
Процедура ОбработатьПараметры(Параметры)
	
	ПараметрыФормы = Параметры.ПараметрыФормы;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, ПараметрыФормы);
	ЗапретитьИзменение = Параметры.ЗапретитьИзменение;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.ЗапретитьИзменение Тогда
		Элементы.ГруппаВидПредставителя.ТолькоПросмотр = Истина;
		Элементы.ГруппаДокументУдостоверящийЛичность.ТолькоПросмотр = Истина;
		Элементы.ГруппаДокументПодтверждающийПолномочия.ТолькоПросмотр = Истина;
		// Обход ошибки платформы 10196698 Элемент длиннее на пол кнопки
		Элементы.ВидПредставителя.Ширина = 40;
		Элементы.ПредставительВидДокумента.Ширина = 39;
	КонецЕсли;
	
	ЭтоДоверенноеЛицо = Форма.ВидПредставителя = ПредопределенноеЗначение("Перечисление.ВидПредставителяПолучателяПенсии.ДоверенноеЛицо");
	ЭтоОрганизация    = Форма.ВидПредставителя = ПредопределенноеЗначение("Перечисление.ВидПредставителяПолучателяПенсии.Организация");
	
	Элементы.ПредставительНаименованиеОрганизации.Видимость = НЕ ЭтоДоверенноеЛицо;
	Элементы.ПредставительНаименованиеОрганизации.АвтоОтметкаНезаполненного = ЭтоОрганизация;
	
	ИзменитьОформлениеАдресов(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьАдрес(Элемент, ВидАдреса)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"АдресМестаЖительстваНажатие_Завершение", 
		ЭтотОбъект, 
		Элемент);
		
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ВидАдреса, ЭтотОбъект[Элемент.Имя]);
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", ЗапретитьИзменение);
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресМестаЖительстваНажатие_Завершение(Результат, Элемент) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Адрес         = Результат.КонтактнаяИнформация;
	Представление = Результат.Представление;
	
	Если Представление <> Элемент.Заголовок Тогда
		Модифицированность      = Истина;
		Элемент.Заголовок       = Представление;
		ЭтотОбъект[Элемент.Имя] = Результат.КонтактнаяИнформация;
		ИзменитьОформлениеАдресов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеАдреса(Форма, Имя, Видимость = Истина)

	Элементы = Форма.Элементы;
	
	Элементы[Имя].Видимость               = Видимость;
	Элементы[Имя + "Заголовок"].Видимость = Видимость;
	
	Если ЗначениеЗаполнено(Форма[Имя]) Тогда
		Элементы[Имя].Заголовок = ПредставлениеКонтактнойИнформации(Форма[Имя]);
	ИначеЕсли Форма.ЗапретитьИзменение Тогда
		Элементы[Имя].Гиперссылка = Ложь;
		Элементы[Имя].Заголовок = НСтр("ru = 'Не указано'");
	Иначе
		Элементы[Имя].Заголовок = НСтр("ru = 'Заполнить'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВыделитьКрасным(УсловиеОшибки, Элемент)
	
	Если УсловиеОшибки Тогда
		Элемент.ЦветТекста = Новый Цвет(178, 34, 34);
	Иначе
		Элемент.ЦветТекста = Новый Цвет();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеАдресов(Форма)
	
	Элементы = Форма.Элементы;
	
	ДоставлятьПредставителю = Форма.КомуДоставлятьПенсию = ПредопределенноеЗначение("Перечисление.ВидыПолучателейПенсии.Представитель");
	ДоставлятьПредставителюДоЗаключенияДоговора = Форма.КомуДоставлятьПенсиюДоЗаключенияДоговора = ПредопределенноеЗначение("Перечисление.ВидыПолучателейПенсии.Представитель");

	ЭтоДоверенноеЛицо = Форма.ВидПредставителя = ПредопределенноеЗначение("Перечисление.ВидПредставителяПолучателяПенсии.ДоверенноеЛицо");
	
	// Текст гиперссылки
	ИзменитьОформлениеАдреса(Форма, "ПредставительАдресМестаЖительства");
	ИзменитьОформлениеАдреса(Форма, "ПредставительАдресМестаПребывания");
	ИзменитьОформлениеАдреса(Форма, "ПредставительАдресФактический");
	ИзменитьОформлениеАдреса(Форма, "ПредставительАдресОрганизации", НЕ ЭтоДоверенноеЛицо);
	
	// Цвет гиперссылки
	
	// Место жительства
	ЕстьОшибка = Форма.ЭтоЗаявлениеОДоставкеПенсии И НЕ ЗначениеЗаполнено(Форма.ПредставительАдресМестаЖительства)
		И (Форма.СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуЖительства") 
		И ДоставлятьПредставителю
		ИЛИ Форма.СпособПолученияПенсииДоЗаключенияДоговора = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуЖительства")
		И ДоставлятьПредставителюДоЗаключенияДоговора); 
		
	ВыделитьКрасным(ЕстьОшибка, Элементы.ПредставительАдресМестаЖительства);
	
	// Место пребывания
	ЕстьОшибка = Форма.ЭтоЗаявлениеОДоставкеПенсии И НЕ ЗначениеЗаполнено(Форма.ПредставительАдресМестаПребывания)
		И (Форма.СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуПребывания") 
		И ДоставлятьПредставителю
		ИЛИ Форма.СпособПолученияПенсииДоЗаключенияДоговора = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуПребывания")
		И ДоставлятьПредставителюДоЗаключенияДоговора); 
		
	ВыделитьКрасным(ЕстьОшибка, Элементы.ПредставительАдресМестаПребывания);
	
	// Место факт. проживания
	ЕстьОшибка = Форма.ЭтоЗаявлениеОДоставкеПенсии И НЕ ЗначениеЗаполнено(Форма.ПредставительАдресФактический)
		И (Форма.СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуФактическому") 
		И ДоставлятьПредставителю
		ИЛИ Форма.СпособПолученияПенсииДоЗаключенияДоговора = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуФактическому")
		И ДоставлятьПредставителюДоЗаключенияДоговора); 
		
	ВыделитьКрасным(ЕстьОшибка, Элементы.ПредставительАдресФактический);
	
	// Место нахождения орг-ции
	ЕстьОшибка = Форма.ЭтоЗаявлениеОДоставкеПенсии И НЕ ЗначениеЗаполнено(Форма.ПредставительАдресОрганизации)
		И (Форма.СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестонахождениюОрганизации") 
		И ДоставлятьПредставителю
		ИЛИ Форма.СпособПолученияПенсииДоЗаключенияДоговора = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестонахождениюОрганизации")
		И ДоставлятьПредставителюДоЗаключенияДоговора); 
		
	ВыделитьКрасным(ЕстьОшибка, Элементы.ПредставительАдресОрганизации);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредставлениеКонтактнойИнформации(ЗначениеАдреса)
	
	Возврат УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(ЗначениеАдреса);
	
КонецФункции

#КонецОбласти