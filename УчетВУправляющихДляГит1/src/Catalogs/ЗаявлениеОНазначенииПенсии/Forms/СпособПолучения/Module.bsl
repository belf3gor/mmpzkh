

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьПараметры(Параметры);
	ИнициализироватьДанные();
	ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособПолученияПенсииПриИзменении(Элемент)
	ИзменитьОформлениеФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СпособПолученияПенсииДоЗаключенияДоговораПриИзменении(Элемент)
	ИзменитьОформлениеФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомуДоставлятьПенсиюПриИзменении(Элемент)
	
	ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОрганизацийДоставкиПенсииПриИзменении(Элемент)
	
	ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОрганизацийДоставкиПенсииДоЗаключенияДоговораПриИзменении(Элемент)
	
	ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда = Неопределено)
	
	ДанныеКорректны = Истина;
	
	СпособПолученияУказанКорректно(ЭтотОбъект, ДанныеКорректны);
	
	Если ДанныеКорректны Тогда

		ДополнительныеПараметры = Новый Структура(ПараметрыФормыБезАдреса);
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, ЭтотОбъект, ПараметрыФормыБезАдреса); 
		ДополнительныеПараметры.Вставить("ПараметрыФормыБезАдреса", ПараметрыФормыБезАдреса);
		ДополнительныеПараметры.Вставить("Модифицированность",      Модифицированность);
		
		Модифицированность = Ложь;
		
		Закрыть(ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПредставлениеКонтактнойИнформации(ЗначениеАдреса)
	
	Если ЗначениеЗаполнено(ЗначениеАдреса) Тогда
		Возврат УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(ЗначениеАдреса);
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьДанные()
	
	Если Не ЗначениеЗаполнено(КомуДоставлятьПенсию) Тогда
		КомуДоставлятьПенсию = Перечисления.ВидыПолучателейПенсии.Пенсионер;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КомуДоставлятьПенсиюДоЗаключенияДоговора) Тогда
		КомуДоставлятьПенсиюДоЗаключенияДоговора = Перечисления.ВидыПолучателейПенсии.Пенсионер;
	КонецЕсли;

	Если НЕ ЕстьПредставитель Тогда
		Элементы.КогоУведомлятьПочта.СписокВыбора.Удалить(1);
		Элементы.КогоИнформироватьПочта.СписокВыбора.Удалить(1);
		Элементы.КогоИнформироватьТелефон.СписокВыбора.Удалить(1);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПараметры(Параметры)
	
	ПараметрыФормыБезАдреса = Параметры.ПараметрыФормыБезАдреса;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, ПараметрыФормыБезАдреса);
	ЗапретитьИзменение = Параметры.ЗапретитьИзменение;
	
	МассивПараметрыАдреса = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Параметры.ПараметрыАдреса, ",",,Истина);
	Для Каждого ПараметрАдреса Из МассивПараметрыАдреса Цикл
		ЭтотОбъект["Представление" + ПараметрАдреса] = ПредставлениеКонтактнойИнформации(Параметры[ПараметрАдреса]);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеФормы(Форма)
	
	Форма.ТолькоПросмотр = Форма.ЗапретитьИзменение;
	
	Элементы = Форма.Элементы;
	
	Если Форма.ЭтоЗаявлениеОДоставкеПенсии Тогда
		ИзменитьОформлениеПоловины(Форма);
		ИзменитьОформлениеПоловины(Форма, НСтр("ru = 'ДоЗаключенияДоговора'"));
	КонецЕсли;
	
	Элементы.ГруппаДоставкаПенсии.Видимость 					= Форма.ЭтоЗаявлениеОДоставкеПенсии;
	Элементы.ГруппаДоставкаПенсииДоЗаключенияДоговора.Видимость = Форма.ЭтоЗаявлениеОДоставкеПенсии;
	Элементы.ГруппаИнформированияИУведомления.Видимость         = Форма.ЭтоЗаявлениеОНазначенииПенсии;
	Элементы.ГруппаСекретныйВопрос.Видимость                    = Форма.ЭтоЗаявлениеОНазначенииПенсии;
	
	Если Форма.ЭтоЗаявлениеОДоставкеПенсии И Форма.ЭтоЗаявлениеОНазначенииПенсии Тогда
		Форма.Заголовок = НСтр("ru = 'Получение и информирование'");
	ИначеЕсли Форма.ЭтоЗаявлениеОДоставкеПенсии Тогда
		Форма.Заголовок = НСтр("ru = 'Получение пенсии'");
	ИначеЕсли Форма.ЭтоЗаявлениеОНазначенииПенсии Тогда
		Форма.Заголовок = НСтр("ru = 'Информирование'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеПоловины(Форма, Постфикс = "")
	
	Элементы = Форма.Элементы;
	
	Элементы["КомуДоставлятьПенсию" + Постфикс].Видимость = Форма.ЕстьПредставитель;
	
	СпособПолученияПенсии   = Форма["СпособПолученияПенсии" + Постфикс];
	ЭтоКредитнаяОрганизация = Форма["ВидОрганизацийДоставкиПенсии" + Постфикс] = ПредопределенноеЗначение("Перечисление.ВидыОрганизацийДоставкиПенсии.КредитнаяОрганизация");
	ДоставлятьПредставителю = Форма["КомуДоставлятьПенсию" + Постфикс] = ПредопределенноеЗначение("Перечисление.ВидыПолучателейПенсии.Представитель");
	
	Элементы["Счет" + Постфикс].Видимость = ЭтоКредитнаяОрганизация;
	Элементы["СпособПолученияПенсии" + Постфикс].Видимость = НЕ ЭтоКредитнаяОрганизация;
	
	ИзменитьОформлениеАдреса(Форма, Постфикс);
	
	ПредставительЭтоОрганизация = ДоставлятьПредставителю
		И Форма.ВидПредставителя <> ПредопределенноеЗначение("Перечисление.ВидПредставителяПолучателяПенсии.ДоверенноеЛицо");
		
	СписокВыбора = Элементы["СпособПолученияПенсии" + Постфикс].СписокВыбора;
	СписокВыбора.Очистить();
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ВКассе"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуЖительства"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуПребывания"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуФактическому"));
	Если ПредставительЭтоОрганизация Тогда
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестонахождениюОрганизации"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеАдреса(Форма, Постфикс = "")

	Элементы              = Форма.Элементы;
	ЭлементАдрес          = Элементы["Адрес" + Постфикс];
	КтоДоставляет         = Форма["ВидОрганизацийДоставкиПенсии" + Постфикс];
	СпособПолученияПенсии = Форма["СпособПолученияПенсии" + Постфикс];
	
	ПоказыватьАдрес = СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуЖительства")
		ИЛИ СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуПребывания")
		ИЛИ СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуФактическому")
		ИЛИ СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестонахождениюОрганизации");
		
	Если ПоказыватьАдрес Тогда
		
		КрасныйЦвет = Новый Цвет(178, 34, 34);
		СерыйЦвет   = Новый Цвет(139, 139, 139);
		Адрес       = АдресДоставки(Форма, Постфикс);
		
		ПроживаетЗаПределамиРФ  = Форма.МестоПроживания = ПредопределенноеЗначение("Перечисление.МестоПроживанияПолучателяПенсии.ПроживаетЗаПределамиРФ");
		ДоставлятьПредставителю = Форма["КомуДоставлятьПенсию" + Постфикс] = ПредопределенноеЗначение("Перечисление.ВидыПолучателейПенсии.Представитель");
		
		Если ПроживаетЗаПределамиРФ Тогда
			// Ошибка красным
			ЭлементАдрес.Заголовок  = НСтр("ru = 'Выберите ""Проживает в РФ"" или ""Проживал в РФ"" в реквизите 
                                           |""Где проживает"" в разделе ""Паспорт, контакты"" в форме заявления'");
			ЭлементАдрес.ЦветТекста = КрасныйЦвет;
		ИначеЕсли ЗначениеЗаполнено(Адрес) Тогда
			// Адрес серым
			ЭлементАдрес.Заголовок  = Адрес;
			ЭлементАдрес.ЦветТекста = СерыйЦвет;
		ИначеЕсли ДоставлятьПредставителю Тогда 
			ЭлементАдрес.Заголовок  = НСтр("ru = 'Укажите адрес в разделе ""Представитель"" в форме заявления'");
			ЭлементАдрес.ЦветТекста = КрасныйЦвет;
		Иначе
			ЭлементАдрес.Заголовок  = НСтр("ru = 'Укажите адрес в разделе ""Паспорт, контакты"" в форме заявления'");
			ЭлементАдрес.ЦветТекста = КрасныйЦвет;
		КонецЕсли;
		
	Иначе
		// Не меняем видимость, чтобы элементы не поехали вверх 
		ЭлементАдрес.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция АдресДоставки(Форма, Постфикс = "") Экспорт
	
	СпособПолученияПенсии   = Форма["СпособПолученияПенсии" + Постфикс];
	ДоставлятьПредставителю = Форма["КомуДоставлятьПенсию" + Постфикс] = ПредопределенноеЗначение("Перечисление.ВидыПолучателейПенсии.Представитель");
		
	Адрес = "";
	Если ДоставлятьПредставителю Тогда
		Если СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуЖительства") Тогда
			Адрес = Форма.ПредставлениеПредставительАдресМестаЖительства;
		ИначеЕсли СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуПребывания") Тогда
			Адрес = Форма.ПредставлениеПредставительАдресМестаПребывания;
		ИначеЕсли СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуФактическому") Тогда
			Адрес = Форма.ПредставлениеПредставительАдресФактический;
		ИначеЕсли СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестонахождениюОрганизации") Тогда
			Адрес = Форма.ПредставлениеПредставительАдресОрганизации;
		КонецЕсли;
		
	Иначе
		Если СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуЖительства") Тогда
			Адрес = Форма.ПредставлениеАдресМестаЖительства;
		ИначеЕсли СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуПребывания") Тогда
			Адрес = Форма.ПредставлениеАдресМестаПребывания;
		ИначеЕсли СпособПолученияПенсии = ПредопределенноеЗначение("Перечисление.СпособыПолученияПенсии.ПоМестуФактическому") Тогда
			Адрес = Форма.ПредставлениеАдресФактический;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Адрес;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СпособПолученияУказанКорректно(Форма, МастерДалее = Истина)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СпособПолученияУказанКорректно(Форма, МастерДалее, Истина);
	
КонецФункции

#КонецОбласти