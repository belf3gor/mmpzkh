
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьПараметры(Параметры);
	ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПередЗакрытием_Завершение", 
		ЭтотОбъект);
	
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(
		ОписаниеОповещения, 
		Отказ, 
		ЗавершениеРаботы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидПенсииОсновнойПриИзменении(Элемент)
	ИзменитьОформлениеУчестьДопСтраховыеВзносыВСоставеНакопительной(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВидПенсииВторойПриИзменении(Элемент)
	ИзменитьОформлениеФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДействияПриИзменении(Элемент)
	
	Если Действие = ПредопределенноеЗначение("Перечисление.ДействиеВЗаявленииОНазначенииПенсии.ВыбратьВидПенсии") Тогда
		ВидПенсииОсновной = Неопределено;
		УточнениеПоВидуПенсии = Неопределено;
		УчестьДопСтраховыеВзносыВСоставеНакопительной = Ложь;
		УстановитьСоцДоплату = Ложь;
	Иначе
		ПредыдущийВидПенсии = Неопределено;
		ЗаконодательныйАкт = Неопределено;
		НовыйВидПенсии = Неопределено;
	КонецЕсли;
	
	ПриИзмененииВидаДействия(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда = Неопределено)
	
	ДанныеКорректны = Истина;
	СведенияВидаПенсииУказаныКорректно(ЭтотОбъект, ДанныеКорректны);
	
	Если ДанныеКорректны Тогда
		ДополнительныеПараметры = Новый Структура(ПараметрыФормы);
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, ЭтотОбъект, ПараметрыФормы); 
		ДополнительныеПараметры.Вставить("ПараметрыФормы",     ПараметрыФормы);
		ДополнительныеПараметры.Вставить("Модифицированность", Модифицированность);
		
		Модифицированность = Ложь;
		
		Закрыть(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииВидаДействия(Форма)
	
	Элементы = Форма.Элементы;
	
	ВыбратьВидПенсии = Форма.Действие = ПредопределенноеЗначение("Перечисление.ДействиеВЗаявленииОНазначенииПенсии.ВыбратьВидПенсии");
	
	Элементы.Группа1.Видимость = ВыбратьВидПенсии;
	Элементы.Группа2.Видимость = НЕ ВыбратьВидПенсии;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием_Завершение(Результат, ВходящийКонтекст) Экспорт
	
	Сохранить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СведенияВидаПенсииУказаныКорректно(Форма, МастерДалее = Истина)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СведенияВидаПенсииУказаныКорректно(Форма, МастерДалее, Истина);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеФормы(Форма)
	
	Форма.ТолькоПросмотр = Форма.ЗапретитьИзменение;
		
	ИзменитьОформлениеУчестьДопСтраховыеВзносыВСоставеНакопительной(Форма);
	ПриИзмененииВидаДействия(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПараметры(Параметры)
	
	ПараметрыФормы = Параметры.ПараметрыФормы;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, ПараметрыФормы);
	
	ЗапретитьИзменение = Параметры.ЗапретитьИзменение;
	
	Если Действие = Перечисления.ДействиеВЗаявленииОНазначенииПенсии.ПустаяСсылка() Тогда
		Действие = Перечисления.ДействиеВЗаявленииОНазначенииПенсии.ВыбратьВидПенсии;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеУчестьДопСтраховыеВзносыВСоставеНакопительной(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.УчестьДопСтраховыеВзносыВСоставеНакопительной.Видимость = 
		Форма.ВидПенсииОсновной = ПредопределенноеЗначение("Перечисление.ВидПенсии.НакопительнаяПенсия")
		ИЛИ Форма.ВидПенсииВторой = ПредопределенноеЗначение("Перечисление.ВидПенсии.НакопительнаяПенсия");
	
КонецПроцедуры

#КонецОбласти