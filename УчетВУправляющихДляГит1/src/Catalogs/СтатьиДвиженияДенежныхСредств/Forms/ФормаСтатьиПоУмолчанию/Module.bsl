#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеСтатьиДДСПоУмолчанию" Тогда
		ПрочитатьДанныеФормы();
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокСтатьяДДСПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.СтатьяДДС) Тогда
		Отказ = Ложь;
		ОбработатьИмяПредопределенныхДанных(Элементы.Список.ТекущаяСтрока, "Изменение", Отказ);
		Если Отказ Тогда
			ТекущаяСтрока.СтатьяДДС =Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокСтатьяДДСОчистка(Элемент, СтандартнаяОбработка)
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ОбработатьИмяПредопределенныхДанных(ТекущаяСтрока, "Очистка", Отказ);
	Если Отказ Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработатьИмяПредопределенныхДанных(ИндексСтроки, Событие, Отказ)
	
	ТекущиеДанные = Список.НайтиПоИдентификатору(ИндексСтроки);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Событие = "Очистка" И ЗначениеЗаполнено(ТекущиеДанные.СтатьяДДС) Тогда
		ИзменяемыйОбъект = ТекущиеДанные.СтатьяДДС.ПолучитьОбъект();
		Попытка
			ИзменяемыйОбъект.Заблокировать();
		Исключение
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось заблокировать объект %1!'"), ИзменяемыйОбъект) +"
			|"+ ОписаниеОшибки();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ИзменяемыйОбъект, , , Отказ);
			Возврат;
		КонецПопытки;
		
		ИзменяемыйОбъект.ИмяПредопределенныхДанных = "";
		ИзменяемыйОбъект.Записать();
		ИзменяемыйОбъект.Разблокировать();
		
		ОбновитьПовторноИспользуемыеЗначения();
	ИначеЕсли Событие = "Изменение" Тогда
		// Проверим, что выбранная статья не является предопределенной и не помечена на удаление
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущиеДанные.СтатьяДДС, "ИмяПредопределенныхДанных, ПометкаУдаления");
		Если РеквизитыОбъекта.ПометкаУдаления Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Статья %1 помечена на удаление и не может быть назначена основной!'"), ТекущиеДанные.СтатьяДДС) + "
			|"+ ОписаниеОшибки();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ТекущиеДанные.СтатьяДДС, , , Отказ);
			Возврат;
		ИначеЕсли РеквизитыОбъекта.ИмяПредопределенныхДанных <> "" Тогда
			ТаблицаПредопределенных = Справочники.СтатьиДвиженияДенежныхСредств.ТаблицаПредопределенныхЗначений();
			ОписаниеПредопределенного = ТаблицаПредопределенных.Найти(РеквизитыОбъекта.ИмяПредопределенныхДанных, "ИмяПредопределенныхДанных");
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Статья %1 уже назначена операции %2!'"), ТекущиеДанные.СтатьяДДС,
				ОписаниеПредопределенного.ПредставлениеОперации) + "
			|"+ ОписаниеОшибки();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ТекущиеДанные.СтатьяДДС, , , Отказ);
			Возврат;
		КонецЕсли;
		
		НовыйОбъект = ТекущиеДанные.СтатьяДДС.ПолучитьОбъект();
		Попытка
			НовыйОбъект.Заблокировать();
		Исключение
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось заблокировать объект %1!'"), НовыйОбъект) + "
			|"+ ОписаниеОшибки();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, НовыйОбъект, , , Отказ);
			Возврат;
		КонецПопытки;
		
		СтарыйПредопределенный = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(
			"Справочник.СтатьиДвиженияДенежныхСредств." + ТекущиеДанные.ИмяПредопределенныхДанных);
		Если ЗначениеЗаполнено(СтарыйПредопределенный) Тогда
			СтарыйОбъект = СтарыйПредопределенный.ПолучитьОбъект();
			Попытка
				СтарыйОбъект.Заблокировать();
			Исключение
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось заблокировать объект %1!'"), СтарыйПредопределенный) + "
				|"+ ОписаниеОшибки();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СтарыйПредопределенный, , , Отказ);
				Возврат;
			КонецПопытки;
			СтарыйОбъект.ИмяПредопределенныхДанных = "";
			СтарыйОбъект.Записать();	
			СтарыйОбъект.Разблокировать();
		КонецЕсли;
		
			НовыйОбъект.ИмяПредопределенныхДанных = ТекущиеДанные.ИмяПредопределенныхДанных;
			НовыйОбъект.Записать();
			ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеФормы()
	ТаблицаПредопределенных = Справочники.СтатьиДвиженияДенежныхСредств.ТаблицаПредопределенныхЗначений();
	
	ДоступныеПредопределенные = ТаблицаПредопределенных.Скопировать(
		Новый Структура("Доступность", Истина),
		"ИмяПредопределенныхДанных, ПредставлениеОперации");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиДвиженияДенежныхСредств.Ссылка КАК Ссылка,
	|	СтатьиДвиженияДенежныхСредств.ИмяПредопределенныхДанных
	|ИЗ
	|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
	|ГДЕ
	|	СтатьиДвиженияДенежныхСредств.Предопределенный";
	ПредопределенныеЭлементы = Запрос.Выполнить().Выгрузить();
	
	Список.Очистить();
	Для Каждого ОписаниеПредопределенного из ДоступныеПредопределенные Цикл
		НоваяСтрока = Список.Добавить();
		Элемент = ПредопределенныеЭлементы.Найти(ОписаниеПредопределенного.ИмяПредопределенныхДанных, "ИмяПредопределенныхДанных");
		Если Элемент <> Неопределено Тогда
			НоваяСтрока.СтатьяДДС = Элемент.Ссылка;
		КонецЕсли;
		НоваяСтрока.ИмяПредопределенныхДанных = ОписаниеПредопределенного.ИмяПредопределенныхДанных;
		НоваяСтрока.ВидОперации = ОписаниеПредопределенного.ПредставлениеОперации;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

