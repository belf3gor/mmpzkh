
#Область СлужебныеПроцедурыИФункции

// Функция формирует список параметров для текст заголовка в текстовом файле-выгрузки.
//
Функция ПолучитьСписокПараметровДляЗаголовкаВТекстовомФайле() Экспорт
	
	СписокПараметров = Новый СписокЗначений;
	СписокПараметров.Добавить("КоличествоЗаписей",    "[КоличествоЗаписей] - параметр будет заменен на количество записей с данными по лицевым счетам.");
	СписокПараметров.Добавить("ОбщаяСуммаДолга",      "[ОбщаяСуммаДолга] - параметр будет заменен на общую сумму долга по лицевым счетам.");
	СписокПараметров.Добавить("ОбщаяСуммаНачислений", "[ОбщаяСуммаНачислений] - параметр будет заменен на общую сумму начислений по лицевым счетам.");
	СписокПараметров.Добавить("ПериодВыгрузки",       "[ПериодВыгрузки] - параметр будет заменен на период выгрузки в формате ""01.01.2017"".");
	
	Возврат СписокПараметров;
	
КонецФункции

// Формирует структуру списков значений для заполнения списков выбора полей формы.
// ВАЖНО: при изменении порядка элементов в списках значений необходимо проверить логику использования
// значений полей на форме справочника.
Функция ПодговитьСтруктуруЗначенийПолей() Экспорт
	
	СтруктураЗначенийПолей = Новый Структура;
	
	СпФорматовФайла = Новый СписокЗначений;
	СпФорматовФайла.Добавить("TXT", "TXT");
	СпФорматовФайла.Добавить("XLS", "XLS или XLSX");
	СпФорматовФайла.Добавить("CSV", "CSV");
	СпФорматовФайла.Добавить("XML", "XML");
	СпФорматовФайла.Добавить("DBF", "DBF");
	СтруктураЗначенийПолей.Вставить("СпФорматовФайла", СпФорматовФайла);
	
	СпРазделителейКолонок = Новый СписокЗначений;
	СпРазделителейКолонок.Добавить(";",      ";   (точка с запятой)");
	СпРазделителейКолонок.Добавить(".",      ".   (точка)");
	СпРазделителейКолонок.Добавить(",",      ",   (запятая)");
	СпРазделителейКолонок.Добавить(":",      ":   (двоеточие)");
	СпРазделителейКолонок.Добавить("-",      "-   (тире)");
	СпРазделителейКолонок.Добавить("|",      "|   (слэш вертикальный)");
	СпРазделителейКолонок.Добавить("Таб",    "Таб (табуляция)");
	СтруктураЗначенийПолей.Вставить("СпРазделителейКолонок", СпРазделителейКолонок);
	
	СпРазделителейДробнойЧасти = Новый СписокЗначений;
	СпРазделителейДробнойЧасти.Добавить(",",               ", (запятая)");
	СпРазделителейДробнойЧасти.Добавить(".",               ". (точка)");
	СпРазделителейДробнойЧасти.Добавить("-",               "- (тире)");
	СпРазделителейДробнойЧасти.Добавить("Без разделителя", "Без разделителя");
	СтруктураЗначенийПолей.Вставить("СпРазделителейДробнойЧасти", СпРазделителейДробнойЧасти);
	
	СпРазделителиПериода = Новый СписокЗначений;
	СпРазделителиПериода.Добавить(".",               ". (точка)");
	СпРазделителиПериода.Добавить(",",               ", (запятая)");
	СпРазделителиПериода.Добавить(";",               "; (точка с запятой)");
	СпРазделителиПериода.Добавить("-",               "- (тире)");
	СпРазделителиПериода.Добавить("/",               "/ (слэш)");
	СпРазделителиПериода.Добавить("Без разделителя", "Без разделителя");
	СтруктураЗначенийПолей.Вставить("СпРазделителиПериода", СпРазделителиПериода);
	
	СпСпособыОпределенияПУ = Новый СписокЗначений;
	СпСпособыОпределенияПУ.Добавить("по значению поля реестра", "по значению поля реестра");
	СпСпособыОпределенияПУ.Добавить("по услуге",                "по услуге");
	СтруктураЗначенийПолей.Вставить("СпСпособыОпределенияПУ", СпСпособыОпределенияПУ);
	
	СпИдентификацияПУ = Новый СписокЗначений;
	СпИдентификацияПУ.Добавить("код",             "код");
	СпИдентификацияПУ.Добавить("наименование",    "наименование");
	СпИдентификацияПУ.Добавить("идентификатор",   "идентификатор");
	СпИдентификацияПУ.Добавить("заводской номер", "заводской номер");
	СпИдентификацияПУ.Добавить("номер в ГИС ЖКХ", "номер в ГИС ЖКХ");
	СтруктураЗначенийПолей.Вставить("СпИдентификацияПУ", СпИдентификацияПУ);
	
	СпРазделителейПослеЗначения = Новый СписокЗначений;
	СпРазделителейПослеЗначения.Добавить(":", ": (двоеточие)");
	СпРазделителейПослеЗначения.Добавить(";", "; (точка с запятой)");
	СпРазделителейПослеЗначения.Добавить("-", "- (тире)");
	СпРазделителейПослеЗначения.Добавить("/", "/ (слэш)");
	СпРазделителейПослеЗначения.Добавить("|", "|   (слэш вертикальный)");
	СтруктураЗначенийПолей.Вставить("СпРазделителейПослеЗначения", СпРазделителейПослеЗначения);
	
	СпТипыАтрибута = Новый СписокЗначений;
	СпТипыАтрибута.Добавить(Истина, "Вложенный узел");
	СпТипыАтрибута.Добавить(Ложь,   "Атрибут узла");
	СтруктураЗначенийПолей.Вставить("СпТипыАтрибута", СпТипыАтрибута);
	
	СпСпособыОпределенияУслуги = Новый СписокЗначений;
	СпСпособыОпределенияУслуги.Добавить("по значению поля реестра", "по значению поля реестра");
	СпСпособыОпределенияУслуги.Добавить("по ссылке на услугу",      "по ссылке на услугу");
	СтруктураЗначенийПолей.Вставить("СпСпособыОпределенияУслуги", СпСпособыОпределенияУслуги);
	
	СпИдентификацияУслуги = Новый СписокЗначений;
	СпИдентификацияУслуги.Добавить("по наименованию", "по наименованию");
	СпИдентификацияУслуги.Добавить("по коду",         "по коду");
	СпИдентификацияУслуги.Добавить("по виду услуги",  "по виду услуги");
	СтруктураЗначенийПолей.Вставить("СпИдентификацияУслуги", СпИдентификацияУслуги);
	
	СпИдентификацияУслугиОплаты = Новый СписокЗначений;
	СпИдентификацияУслугиОплаты.Добавить("по наименованию", "по наименованию");
	СпИдентификацияУслугиОплаты.Добавить("по коду",         "по коду");
	СпИдентификацияУслугиОплаты.Добавить("по виду услуги",  "по виду услуги");
	СпИдентификацияУслугиОплаты.Добавить("по номенклатуре", "по номенклатуре");
	СтруктураЗначенийПолей.Вставить("СпИдентификацияУслугиОплаты", СпИдентификацияУслугиОплаты);
	
	СпВариантЗагрузкиНулевыхПоказаний = Новый СписокЗначений;
	СпВариантЗагрузкиНулевыхПоказаний.Добавить("Загружать нулевые как 0",              "Загружать нулевые как 0");
	СпВариантЗагрузкиНулевыхПоказаний.Добавить("Загружать нулевые как ""Не введено""", "Загружать нулевые как ""Не введено""");
	СтруктураЗначенийПолей.Вставить("СпВариантЗагрузкиНулевыхПоказаний", СпВариантЗагрузкиНулевыхПоказаний);
	
	СпТипПериодаДолга = Новый СписокЗначений;
	СпТипПериодаДолга.Добавить(0, "На начало периода");
	СпТипПериодаДолга.Добавить(1, "На конец периода");
	СтруктураЗначенийПолей.Вставить("СпТипПериодаДолга", СпТипПериодаДолга);
	
	СпКодировки = Новый СписокЗначений;
	СпКодировки.Добавить("DOS",     "DOS");
	СпКодировки.Добавить("Windows", "Windows");
	СтруктураЗначенийПолей.Вставить("СпКодировки", СпКодировки);
	
	СпИдентификацияЛС = Новый СписокЗначений;
	СпИдентификацияЛС.Добавить("наименование",  "наименование");
	СпИдентификацияЛС.Добавить("код",           "код");
	СпИдентификацияЛС.Добавить("идентификатор", "идентификатор");
	СпИдентификацияЛС.Добавить("штрихкод",      "штрихкод");
	СтруктураЗначенийПолей.Вставить("СпИдентификацияЛС", СпИдентификацияЛС);
	
	СпИдентификацияВидаИНоменклатурыУслуги = Новый СписокЗначений;
	СпИдентификацияВидаИНоменклатурыУслуги.Добавить("наименование",  "наименование");
	СпИдентификацияВидаИНоменклатурыУслуги.Добавить("код",           "код");
	СтруктураЗначенийПолей.Вставить("СпИдентификацияВидаИНоменклатурыУслуги", СпИдентификацияВидаИНоменклатурыУслуги);
	
	Возврат Новый ФиксированнаяСтруктура(СтруктураЗначенийПолей);
	
КонецФункции

#КонецОбласти