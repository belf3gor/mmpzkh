#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОБНОВЛЕНИЯ

Процедура ПерезаполнитьКонстантуИспользоватьНесколькоСкладов() Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Константы.ИспользоватьНесколькоСкладов.Установить(КоличествоСкладов() > 1);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПолучитьСкладПоУмолчанию(Пользователь = Неопределено) Экспорт
	
	ЗначениеПоУмолчанию = Справочники.Склады.ПустаяСсылка();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладовБухгалтерскийУчет") Тогда
		// В информационной базе ведется учет по нескольким складам.
		// По умолчанию берем основной склад пользователя.
		ОсновнойСклад = ХранилищеОбщихНастроек.Загрузить("ОсновнойСклад",,, Пользователь);
		
		Если ТипЗнч(ОсновнойСклад) = ТипЗнч(ЗначениеПоУмолчанию) Тогда
			Если ОбщегоНазначения.СсылкаСуществует(ОсновнойСклад) Тогда
				ЗначениеПоУмолчанию = ОсновнойСклад;
			КонецЕсли;
		КонецЕсли;
	
	Иначе
		// Ведется учет по единственному складу
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	Склады.Ссылка КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	НЕ Склады.ЭтоГруппа";
		
		Результат = Запрос.Выполнить();
		
		ИсправитьЗначениеФункциональнойОпции = Ложь;
		
		Если НЕ Результат.Пустой() Тогда
			
			Выборка = Результат.Выбрать();
			Если Выборка.Количество() = 1 Тогда
				Если Выборка.Следующий() Тогда
					ЗначениеПоУмолчанию = Выборка.Склад;
				КонецЕсли;
			Иначе
				ИсправитьЗначениеФункциональнойОпции = Истина;
				// Значение функциональной опции не соответствует состоянию ИБ
			КонецЕсли;
		Иначе
			ИсправитьЗначениеФункциональнойОпции = Истина;
		КонецЕсли;
		
		Если ИсправитьЗначениеФункциональнойОпции Тогда 
			// Значение функциональной опции не соответствует состоянию ИБ
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение склада по умолчанию'"), УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Константы.ИспользоватьНесколькоСкладов,,
				НСтр("ru = 'Исправлено некорректное значение константы ""Использовать несколько складов""'"));
			
			УстановитьПривилегированныйРежим(Истина);
			Константы.ИспользоватьНесколькоСкладов.Установить(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЗначениеПоУмолчанию;

КонецФункции

Функция КоличествоСкладов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	НЕ Склады.ЭтоГруппа";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	Иначе
		Количество = 0;
	КонецЕсли;
	
	Возврат Количество;
	
КонецФункции

Функция ЭтоСкладРозничнойТорговли(ТипСклада) Экспорт
	
	Возврат ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин
		Или ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПроверитьЗначениеОпцииИспользоватьНесколькоСкладов() Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладовБухгалтерскийУчет") И КоличествоСкладов() > 1 Тогда
	
		УстановитьПривилегированныйРежим(Истина);
		Константы.ИспользоватьНесколькоСкладов.Установить(Истина);
		УстановитьПривилегированныйРежим(Ложь);
	
	КонецЕсли;
	
КонецПроцедуры

Функция ИспользуетсяНесколькоСкладов() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладовБухгалтерскийУчет");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецЕсли