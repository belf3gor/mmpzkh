#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если Ссылка.Пустая() Тогда
		ПриСоздании(ДанныеЗаполнения)
	КонецЕсли	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ПриСоздании(ОбъектКопирования)
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ОсновнойНомерДержателяКарты()) Тогда 
		ОшибкиНомера = БанковскиеКартыСлужебныйКлиентСервер.ОшибкиОсновногоНомераДержателяКарты(
			ОсновнойНомерДержателяКарты(), 
			ЭтоНациональныйПлатежныйИнструмент);
		Если ОшибкиНомера.Количество() > 0 Тогда
			ПереченьОшибок = СтрСоединить(ОшибкиНомера, Символы.ПС);
			Если ОшибкиНомера.Количество() > 1 Тогда
				ПереченьОшибок = Символы.ПС + ПереченьОшибок
			КонецЕсли;	
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Неверно указан номер карты: %1'"), ПереченьОшибок),
				ЭтотОбъект, 
				"Код",,
				Отказ);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда 
	     Возврат; 
	 КонецЕсли;	
	 
	Код = БанковскиеКартыСлужебныйКлиентСервер.МаскированныйНомер(ОсновнойНомерДержателяКарты());
	
	Если ЗначениеЗаполнено(ДатаИстеченияСрокаДействияКарты) Тогда
		ДатаИстеченияСрокаДействияКарты = КонецМесяца(ДатаИстеченияСрокаДействияКарты);
	КонецЕсли;
	
	ПроверитьУникальностьОсновногоНомераДержателяКарты(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриСоздании(ДанныеЗаполнения = Неопределено)
	
	УстановитьОсновнойНомерДержателяКарты("");
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеЗаполнения, "ОсновнойНомерДержателяКарты") Тогда
			Если ТипЗнч(ДанныеЗаполнения.ОсновнойНомерДержателяКарты) = Тип("Строка") Тогда
				УстановитьОсновнойНомерДержателяКарты(ДанныеЗаполнения.ОсновнойНомерДержателяКарты);
				ЭтоНациональныйПлатежныйИнструмент = БанковскиеКартыСлужебныйКлиентСервер.ЭтоНомерНациональногоПлатежногоИнструмента(ДанныеЗаполнения.ОсновнойНомерДержателяКарты);
			КонецЕсли	
		КонецЕсли;	
	КонецЕсли	
	
КонецПроцедуры

Процедура УстановитьОсновнойНомерДержателяКарты(ОсновнойНомер) Экспорт
	ОсновнойНомерДержателяКарты = Новый ХранилищеЗначения(ОсновнойНомер, Новый СжатиеДанных(6));
	Код = БанковскиеКартыСлужебныйКлиентСервер.МаскированныйНомер(ОсновнойНомерДержателяКарты());
КонецПроцедуры
	
Функция ОсновнойНомерДержателяКарты(ТолькоРазрешенные = Ложь) Экспорт
	
	Если Справочники.БанковскиеКартыКонтрагентов.РазрешенПросмотрОсновногоНомераДержателяКарты() Тогда
		Если ЗначениеЗаполнено(ОсновнойНомерДержателяКарты) Тогда
			Возврат ОсновнойНомерДержателяКарты.Получить();
		Иначе
			Возврат ""
		КонецЕсли;	
	Иначе
		Если ТолькоРазрешенные Тогда
			Возврат Неопределено
		Иначе
			ВызватьИсключение НСтр("ru = 'Недостаточно прав для просмотра полного номера банковской карты.'")
		КонецЕсли;	
	КонецЕсли;	
	
КонецФункции

Процедура ПроверитьУникальностьОсновногоНомераДержателяКарты(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Код",    Код);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БанковскиеКартыКонтрагентов.Владелец КАК Владелец,
	|	БанковскиеКартыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БанковскиеКартыКонтрагентов КАК БанковскиеКартыКонтрагентов
	|ГДЕ
	|	БанковскиеКартыКонтрагентов.Ссылка <> &Ссылка
	|	И БанковскиеКартыКонтрагентов.Код = &Код
	|	И БанковскиеКартыКонтрагентов.ПометкаУдаления = ЛОЖЬ
	|	И БанковскиеКартыКонтрагентов.ВАрхиве = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;	
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.БанковскиеКартыКонтрагентов");
	ЭлементБлокировки.УстановитьЗначение("Код", Код);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	КартыСТакимЖеКодом = РезультатЗапроса.Выгрузить();
	ОсновныеНомераДержателейКарт = 
		Справочники.БанковскиеКартыКонтрагентов.ОсновныеНомераДержателейКарт(
			КартыСТакимЖеКодом.ВыгрузитьКолонку("Ссылка"));
			
	Для Каждого Карта Из КартыСТакимЖеКодом Цикл
		Если ОсновныеНомераДержателейКарт[Карта.Ссылка] = ОсновнойНомерДержателяКарты.Получить() Тогда
			
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'Номер карты %1 не уникален - карта с таким номером уже есть у %2'"),
				Код,
				Карта.Владелец);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, "Код",, Отказ);

			Прервать;
		КонецЕсли;	
	КонецЦикла
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли