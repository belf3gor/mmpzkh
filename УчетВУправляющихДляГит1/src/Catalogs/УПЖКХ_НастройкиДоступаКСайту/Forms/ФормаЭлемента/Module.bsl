
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПередОткрытием" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		УПЖКХ_ЗаполнениеДокументовСервер.ЗаполнитьШапкуДокумента(Объект,
																	УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
	ЗаполнитьТекстГиперссылкиНастроекПриемаПоказаний();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	УправлениеФормой();
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
// Обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроекУчетнойПолитики" Тогда
		ЗаполнитьТекстГиперссылкиНастроекПриемаПоказаний();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовУправления

&НаКлиенте
// Обработчик события "ПриИзменении" флага "ХранитьПароль".
//
Процедура ХранитьПарольПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры // ХранитьПарольПриИзменении()

&НаКлиенте
// Обработчик события "ПриИзменении" поля ввода "АдресСайта".
//
Процедура АдресСайтаПриИзменении(Элемент)
	
	ОбработатьВведенныйАдресСайта();
	
	УстановитьВидимостьНадписиСтатусаПодключения();
	
КонецПроцедуры // АдресСайтаПриИзменении()

&НаКлиенте
// Обработчик события "ПриИзменении" поля ввода "Логин".
//
Процедура ЛогинПриИзменении(Элемент)
	
	УстановитьВидимостьНадписиСтатусаПодключения();
	
КонецПроцедуры // ЛогинПриИзменении()

&НаКлиенте
// Обработчик события "ПриИзменении" поля ввода "Организация".
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьВидимостьНадписиСтатусаПодключения();
	ЗаполнитьТекстГиперссылкиНастроекПриемаПоказаний();
	
КонецПроцедуры // ОрганизацияПриИзменении()

&НаКлиенте
// Обработчик события "ПриИзменении" поля ввода "Пароль".
//
Процедура ПарольПриИзменении(Элемент)
	
	УстановитьВидимостьНадписиСтатусаПодключения();
	
КонецПроцедуры // ПарольПриИзменении()

&НаКлиенте
// Обработчик события "Нажатие" гиперссылки "ГиперссылкаНаНастройкиПриемаПоказаний".
//
Процедура ГиперссылкаНаНастройкиПриемаПоказанийНажатие(Элемент)
	
	КлючЗаписи = УПЖКХ_ПараметрыУчетаСервер.ПолучитьКлючЗаписиУчетнойПолитикиЖКХПоОрганизацииНаДату(ТекущаяДата(), Объект.Организация);
	
	Если Не КлючЗаписи = Неопределено Тогда
		СтруктураОткрытия = Новый Структура("Ключ", КлючЗаписи);
		ОткрытьФорму("РегистрСведений.КВП_УчетнаяПолитикаТСЖ.ФормаЗаписи", СтруктураОткрытия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработка команды "ПроверитьПодключение".
//
Процедура ПроверитьПодключение(Команда)
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Необходимо записать элемент.");
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.ХранитьПароль Тогда
		ОткрытьФорму("ОбщаяФорма.УПЖКХ_ВебИнтеграцияВводПароля",,,,,,
					 Новый ОписаниеОповещения("ОбработчикЗакрытияФормыВводаПароля", ЭтотОбъект),
					 РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		Возврат;
	Иначе
		Пароль = Объект.Пароль;
	КонецЕсли;
	
	ПроверитьПодключениеПродолжение(Пароль);
	
КонецПроцедуры // ПроверитьПодключение()

&НаКлиенте
// Процедура-обработчик данных, полученных после закрытия формы ввода пароля.
Процедура ОбработчикЗакрытияФормыВводаПароля(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = "" Тогда
		ПроверитьПодключениеПродолжение(Результат);
	КонецЕсли;
	
КонецПроцедуры // ОбработчикЗакрытияФормыВводаПароля()

&НаКлиенте
// Процедура устанавливает заголовок и цвет текста в поле "Статус подключения".
Процедура ПроверитьПодключениеПродолжение(Пароль)
	
	УстановитьВидимостьНадписиСтатусаПодключения(Истина);
	
	Если УдалосьУстановитьСоединениеССайтом(Объект.Ссылка, Объект.АдресСайта, Объект.Логин, Пароль) Тогда
		Элементы.ДекорацияСтатусПодключения.Заголовок  = "(Подключение выполнено успешно)";
		Элементы.ДекорацияСтатусПодключения.ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("УПЖКХ_ТекстСообщенияИнформации");
	Иначе
		Элементы.ДекорацияСтатусПодключения.Заголовок  = "(Подключение не выполнено)";
		Элементы.ДекорацияСтатусПодключения.ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("УПЖКХ_ТекстСообщенияОПроблемах");
	КонецЕсли;

КонецПроцедуры // ПроверитьПодключениеПродолжение()

&НаКлиенте
// Обработчик команды "ВыполнитьРазовуюВыгрузкуДанных".
Процедура КомандаВыполнитьРазовуюВыгрузкуДанных(Команда)
	
	// Проверка сохранения настроек.
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Необходимо записать элемент.");
		Возврат;
	КонецЕсли;
	
	ФормаРазовойВыгрузки = ПолучитьФорму("Обработка.УПЖКХ_ИнтеграцияССайтом.Форма.РазоваяВыгрузка");
	ФормаРазовойВыгрузки.Объект.НастройкаДоступа = Объект.Ссылка;
	
	Если Не ФормаРазовойВыгрузки.Открыта() Тогда
		ФормаРазовойВыгрузки.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработка команды "ОткрытьФормуНастроек".
Процедура ОткрытьФормуНастроек(Команда)
	
	СтруктураНастроек = Новый Структура("Объект", Объект);
	ФормаНастроек = ПолучитьФорму("Справочник.УПЖКХ_НастройкиДоступаКСайту.Форма.ФормаНастроек", СтруктураНастроек, ЭтаФорма);
	ФормаНастроек.Открыть();
	
КонецПроцедуры

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти

#Область ОбщиеПроцедурыИФункции

&НаСервереБезКонтекста
// Определяет: удается ли установить соединение с сайтом.
Функция УдалосьУстановитьСоединениеССайтом(НастройкаДоступа, АдресСайта, Логин, Пароль)
	
	СтруктураИнформацииОСайте = УПЖКХ_ВебИнтеграцияВзаимодействиеССайтом.ПолучитьИнформациюОСайте(НастройкаДоступа);
	
	Если Не СтруктураИнформацииОСайте.ВерсияФорматаОбмена = 0 Тогда
		Возврат УПЖКХ_ВебИнтеграцияВзаимодействиеССайтом.ПроверитьПодключениеКСайту(АдресСайта,
																					Логин,
																					Пароль,,
																					СтруктураИнформацииОСайте);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции // УдалосьУстановитьСоединениеССайтом()

&НаСервере
// Приводит адрес сайта к пригодному виду: удаляет пробелы, http/https.
//
Процедура ОбработатьВведенныйАдресСайта()
	
	тмАдресСайта = Объект.АдресСайта;
	
	// Удаляем пробелы.
	тмАдресСайта = СокрЛП(тмАдресСайта);
	
	// Приводим название к нижнему регистру.
	тмАдресСайта = НРег(тмАдресСайта);
	
	// Проверяем, нет ли в адресе http/https.
	Если Лев(тмАдресСайта, 8) = "https://" Тогда
		
		// Если сайт с https, то сразу устанавливаем использование SSL.
		Объект.ИспользоватьSSL = Истина;
		
		// Удаляем префикс.
		тмАдресСайта = Сред(тмАдресСайта, 9);
		
	ИначеЕсли Лев(тмАдресСайта, 7) = "http://" Тогда
		
		// Если сайт с http, то сразу устанавливаем, что SSL не используется.
		Объект.ИспользоватьSSL = Ложь;
		
		// Удаляем префикс.
		тмАдресСайта = Сред(тмАдресСайта, 8);
		
	КонецЕсли;
	
	Объект.АдресСайта = тмАдресСайта;
	
КонецПроцедуры

&НаКлиенте
// Управляет видимостью надписи "Статус подключения".
//
// Параметры:
//  Видимость - Булево - видимость надписи.
//
Процедура УстановитьВидимостьНадписиСтатусаПодключения(Видимость = Ложь)
	
	Элементы.ДекорацияСтатусПодключения.Видимость = Видимость;
	
КонецПроцедуры // УстановитьВидимостьНадписиСтатусаПодключения()

&НаКлиенте
// Управление видимостью элементов формы.
//
Процедура УправлениеФормой()
	
	Элементы.НадписьХранитьПарольПояснение.Видимость = (НЕ Объект.ХранитьПароль);
	
КонецПроцедуры // УправлениеФормой()

&НаСервере
// Управление видимостью и текстом гиперссылки на открытие настроек ограничения ввода показаний.
//
Процедура ЗаполнитьТекстГиперссылкиНастроекПриемаПоказаний()
	
	УПЖКХ_ПодключаемыеЭлементыФормСервер.ДобавитьГиперссылкуНаФормуЗаписиУчетнойПолитики(ЭтаФорма, Элементы.ГруппаГиперссылкаНаНастройкиПриемаПоказаний, Объект.Организация, "ГиперссылкаНаНастройкиУчетнойПолитики", Ложь);
	
КонецПроцедуры

#КонецОбласти

