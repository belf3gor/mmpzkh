
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		НоваяГруппа = Истина;
	КонецЕсли;
	
	ПрочитатьСписокУслугГруппы(ЭтаФорма, Объект.Ссылка);
	УстановитьВидимостьИДоступностьРеквизитовФормы();
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередЗаписью" формы.
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Родитель) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен вид групп услуг!'"), ,"Родитель", "Объект", Отказ);
	КонецЕсли;
	
	ПроверитьПринадлежностьУслугОднойГруппе(СписокУслуг, Объект.Родитель, Объект.Ссылка, Отказ);
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПриЗаписиНаСервере" формы.
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Производим запись состава услуг, если записывается существующая группа.
	Если Не НоваяГруппа Тогда
		ЗаписатьГруппировкиУслуг(ТекущийОбъект, СписокУслуг, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПослеЗаписиНаСервере" формы.
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Производим запись состава услуг, если записывается новая группа.
	// Выполняем уже после записи на сервере, т.к. на момент записи в регистр
	// группировок услуг сама создаваемая группа должна быть записана.
	Если НоваяГруппа Тогда
		ЗаписатьГруппировкиУслуг(ТекущийОбъект, СписокУслуг);
	КонецЕсли;
	
	УстановитьВидимостьИДоступностьРеквизитовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьИнформациюОбИспользованииГруппУслугДляОтраженияНачислений");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ОбработкаВыбора" списка значений "СписокУслуг".
Процедура СписокУслугОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для Каждого ТекВыбранноеЗначение Из ВыбранноеЗначение Цикл
		Если ЗначениеЗаполнено(ТекВыбранноеЗначение)
		   И СписокУслуг.НайтиПоЗначению(ТекВыбранноеЗначение) = Неопределено Тогда
			СписокУслуг.Добавить(ТекВыбранноеЗначение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОбработкаВыбора" поля "Значение" списка значений "СписокУслуг".
Процедура СписокУслугЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение)
	   И НЕ СписокУслуг.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Услуга уже добавлена в список! Выберите другую услугу.");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

&НаСервереБезКонтекста
// Проверяет не указаны ли услуги в других группах услуг текущего вида.
Процедура ПроверитьПринадлежностьУслугОднойГруппе(СписокУслуг, ВидГруппУслуг, ГруппаУслуг, Отказ)
	
	СписокГрупп = УПЖКХ_РаботаСГруппировкамиУслугСервер.ПолучитьСписокГруппУслугВКоторыеУжеВключеныУслугиИзСписка(СписокУслуг, ВидГруппУслуг, ГруппаУслуг);
	
	Для Каждого ТекущаяГруппа Из СписокГрупп Цикл
		ТекстОшибки = НСтр("ru='Услуга " + ТекущаяГруппа.Услуга + " уже состоит в группе " + ТекущаяГруппа.ГруппаУслуг+"!'");
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю(ТекстОшибки, , , , Отказ);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Обновляет список услуг текущей группы.
Процедура ПрочитатьСписокУслугГруппы(Форма, ГруппаУслуг)
	
	МассивУслуг = УПЖКХ_РаботаСГруппировкамиУслугСервер.ПолучитьСписокУслугГруппы(ГруппаУслуг);
	Форма.СписокУслуг.ЗагрузитьЗначения(МассивУслуг);
	
КонецПроцедуры

&НаСервереБезКонтекста
// Записывает информацию о группировках в регистр сведений.
Процедура ЗаписатьГруппировкиУслуг(Объект, СписокУслуг, Отказ = Ложь)
	
	ГруппировкаУслугНаборЗаписей = РегистрыСведений.УПЖКХ_ГруппировкиУслуг.СоздатьНаборЗаписей();
	ГруппировкаУслугНаборЗаписей.Отбор.ВидГруппУслуг.Установить(Объект.Родитель);
	ГруппировкаУслугНаборЗаписей.Отбор.ГруппаУслуг.Установить(Объект.Ссылка);
	
	Для Каждого ТекущаяУслуга Из СписокУслуг Цикл
		
		НоваяЗапись = ГруппировкаУслугНаборЗаписей.Добавить();
		НоваяЗапись.ВидГруппУслуг = Объект.Родитель;
		НоваяЗапись.ГруппаУслуг   = Объект.Ссылка;
		НоваяЗапись.Услуга        = ТекущаяУслуга.Значение;
		
	КонецЦикла;
	
	Если НЕ КВП_ЗаписатьОбъект(ГруппировкаУслугНаборЗаписей) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Управляет видимостью и доступностью элементов формы.
//
Процедура УстановитьВидимостьИДоступностьРеквизитовФормы()
	
	// Если группа уже записана, то запрещаем менять родителя (вид группы).
	Элементы.Родитель.ТолькоПросмотр = НЕ НоваяГруппа;
	
КонецПроцедуры

#КонецОбласти