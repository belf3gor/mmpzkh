////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураЗначенийПолей = Справочники.УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ПодговитьСтруктуруЗначенийПолей();
	
	ЗаполнитьСпискиВыбораПолейФормы();
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
Процедура ПриОткрытии(Отказ)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ВспомогательныеПроцедурыИФункции

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

&НаСервере
Процедура ЗаполнитьСпискиВыбораПолейФормы()
	
	Для Каждого ТекЭлемент Из СтруктураЗначенийПолей.СпТипОтбораПоСуммеДолга Цикл
		Элементы.УстановитьОтборПоСуммеДолга.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из СтруктураЗначенийПолей.спОтборПоОтветственномуСобственнику Цикл
		Элементы.ОтборПоОтветственномуСобственнику.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из СтруктураЗначенийПолей.спВыгружатьТолькоСНомерамиТелефонов Цикл
		Элементы.ВыгружатьДанныеТолькоСНомерамиТелефонов.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из СтруктураЗначенийПолей.спТипВыгрузкиДанныхПоПоказаниямСчетчиков Цикл
		Элементы.ТипВыгрузкиДанныхПоПоказаниямСчетчиков.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из СтруктураЗначенийПолей.спВыборЛицевыхСчетов Цикл
		Элементы.ВыборЛицевыхСчетов.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из СтруктураЗначенийПолей.спВыборУслуг Цикл
		Элементы.ВыборУслуг.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Загружает лицевые счета из списка значений в табличную часть "ВыбранныеЛицевыеСчета".
//
// Параметры:
// СписокЛС - СписокЗначений - список лицевых счетов.
//
Процедура ЗагрузитьЛицевыеСчетаВТабличнуюЧасть(СписокЛС) Экспорт
	
	Объект.ВыбранныеЛицевыеСчета.Очистить();
	
	Для Каждого Элемент Из СписокЛС Цикл
		НоваяСтрока = Объект.ВыбранныеЛицевыеСчета.Добавить();
		НоваяСтрока.ЛицевойСчет = Элемент.Значение;
	КонецЦикла;
	
КонецПроцедуры // ЗагрузитьЛицевыеСчетаВТабличнуюЧасть()

&НаКлиенте
// Процедура настраивает видимость элементов.
Процедура УправлениеФормой()
	
	УстановитьВидимостьНастройкиМинимальнаяСуммаДолга();
	
	УстановитьВидимостьСпискаВыбранныхУслуг();
	
	УстановитьВидимостьСпискаВыбранныхЛицевыхСчетов();
	
КонецПроцедуры

&НаКлиенте
// Процедура настраивает видимость настройки "Минимальная сумма долга на конец периода".
Процедура УстановитьВидимостьНастройкиМинимальнаяСуммаДолга()
	
	Элементы.МинимальнаяСуммаДолга.Видимость = (Объект.ТипОтбораПоСуммеДолга = СтруктураЗначенийПолей.СпТипОтбораПоСуммеДолга[1].Значение); // "Указать мин. сумму задолженности"
	
КонецПроцедуры

&НаКлиенте
// Процедура настраивает видимость списка услуг.
Процедура УстановитьВидимостьСпискаВыбранныхУслуг()
	
	Элементы.ВыбранныеУслуги.Видимость = (НЕ Объект.ВыборУслуг = СтруктураЗначенийПолей.спВыборУслуг[0].Значение); // "Всем услугам"
	
КонецПроцедуры

&НаКлиенте
// Процедура настраивает видимость списка лицевых счетов.
Процедура УстановитьВидимостьСпискаВыбранныхЛицевыхСчетов()
	
	Элементы.ВыбранныеЛицевыеСчета.Видимость = (НЕ Объект.ВыборЛицевыхСчетов = СтруктураЗначенийПолей.спВыборЛицевыхСчетов[0].Значение); // "Всем лицевым счетам"
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "УстановитьОтборПоСуммеДолга".
Процедура УстановитьОтборПоСуммеДолгаПриИзменении(Элемент)
	
	УстановитьВидимостьНастройкиМинимальнаяСуммаДолга();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ВыборУслуг".
Процедура ВыборУслугПриИзменении(Элемент)
	
	УстановитьВидимостьСпискаВыбранныхУслуг();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ВыборЛицевыхСчетов".
Процедура ВыборЛицевыхСчетовПриИзменении(Элемент)
	
	УстановитьВидимостьСпискаВыбранныхЛицевыхСчетов();
	
КонецПроцедуры

&НаКлиенте
// Организует подбор ЛС и заполняет ТЧ формы "ВыбранныеЛицевыеСчета".
//
Процедура ПодборОбъектов(Команда)
	
	ОткрытьФорму("ОбщаяФорма.УПЖКХ_ПодборОбъектов", , ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПередачаТЗ" Тогда
		
		АдресВХранилище = Параметр;
		МассивЛС        = ПолучитьИзВременногоХранилища(АдресВХранилище);
		
		СписокЛС = Новый СписокЗначений;
		СписокЛС.ЗагрузитьЗначения(МассивЛС);
		
		ЗагрузитьЛицевыеСчетаВТабличнуюЧасть(СписокЛС);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


