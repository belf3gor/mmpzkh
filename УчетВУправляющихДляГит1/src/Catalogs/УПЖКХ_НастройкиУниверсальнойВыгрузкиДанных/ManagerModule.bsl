#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру настроек универсальной выгрузки данных, а также периодические настройки организации,
// по которой выгружаются данные.
//
Функция ПолучитьНастройки(ТекущаяНастройка, Организация, Период) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ЗаполнитьОбщиеНастройки(СтруктураНастроек, Организация, Период);
	
	ЗаполнитьТекущиеНастрокиПоСсылке(СтруктураНастроек, ТекущаяНастройка);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Формирует структуру списков значений для заполнения списков выбора полей формы.
// ВАЖНО: при изменении порядка элементов в списках значений необходимо проверить логику использования и проверок
// значений полей в форме справочника и в обработках, в которых используются данные справочника.
//
Функция ПодговитьСтруктуруЗначенийПолей() Экспорт
	
	СтруктураСписковЗначений = Новый Структура;
	
	СпТипОтбораПоСуммеДолга = Новый СписокЗначений;
	СпТипОтбораПоСуммеДолга.Добавить(0, "Все лицевые счета");
	СпТипОтбораПоСуммеДолга.Добавить(1, "Указать мин. сумму задолженности");
	СпТипОтбораПоСуммеДолга.Добавить(2, "С долгами");
	СпТипОтбораПоСуммеДолга.Добавить(3, "С переплатами");
	СтруктураСписковЗначений.Вставить("СпТипОтбораПоСуммеДолга", СпТипОтбораПоСуммеДолга);
	
	спОтборПоОтветственномуСобственнику = Новый СписокЗначений;
	спОтборПоОтветственномуСобственнику.Добавить(0, "Все лицевые счета");
	спОтборПоОтветственномуСобственнику.Добавить(1, "Только физ.лица");
	спОтборПоОтветственномуСобственнику.Добавить(2, "Только юр.лица");
	СтруктураСписковЗначений.Вставить("спОтборПоОтветственномуСобственнику", спОтборПоОтветственномуСобственнику);
	
	спВыгружатьТолькоСНомерамиТелефонов = Новый СписокЗначений;
	спВыгружатьТолькоСНомерамиТелефонов.Добавить(0, "Все лицевые счета");
	спВыгружатьТолькоСНомерамиТелефонов.Добавить(1, "Только с номерами телефонов");
	СтруктураСписковЗначений.Вставить("спВыгружатьТолькоСНомерамиТелефонов", спВыгружатьТолькоСНомерамиТелефонов);
	
	спВыборЛицевыхСчетов = Новый СписокЗначений;
	спВыборЛицевыхСчетов.Добавить(0, "Всем лицевым счетам");
	спВыборЛицевыхСчетов.Добавить(1, "Выбранным лицевым счетам");
	спВыборЛицевыхСчетов.Добавить(2, "Всем лицевым счетам, кроме выбранных");
	СтруктураСписковЗначений.Вставить("спВыборЛицевыхСчетов", спВыборЛицевыхСчетов);
	
	спВыборУслуг = Новый СписокЗначений;
	спВыборУслуг.Добавить(0, "Всем услугам");
	спВыборУслуг.Добавить(1, "Выбранным услугам");
	спВыборУслуг.Добавить(2, "Всем услугам, кроме выбранных");
	СтруктураСписковЗначений.Вставить("спВыборУслуг", спВыборУслуг);
	
	спТипВыгрузкиДанныхПоПоказаниямСчетчиков = Новый СписокЗначений;
	спТипВыгрузкиДанныхПоПоказаниямСчетчиков.Добавить(0, "Только по счетчикам с показаниями");
	спТипВыгрузкиДанныхПоПоказаниямСчетчиков.Добавить(1, "По всем счетчикам");
	СтруктураСписковЗначений.Вставить("спТипВыгрузкиДанныхПоПоказаниямСчетчиков", спТипВыгрузкиДанныхПоПоказаниямСчетчиков);
	
	Возврат СтруктураСписковЗначений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура дополняет настройки выгрузки сведениями по организации в указанный период.
//
// Параметры:
//  СтруктураНастроек	 - Структура	 - настройки выгрузки.
//  Организация			 - Ссылка	 - организация, по которой выгружаются данные.
//  Период				 - Дата	 - период выгрузки.
//
Процедура ЗаполнитьОбщиеНастройки(СтруктураНастроек, Организация, Период)
	
	СтруктураНастроек.Вставить("Организация", Организация);
	СтруктураНастроек.Вставить("Период",      Период);
	
	СведенияОбОрганизации = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьСведенияОбОрганизации(Организация, Период, "ИННЮЛ, БанкСчетНомер");
	
	СтруктураНастроек.Вставить("ИНН",                      СведенияОбОрганизации.ИННЮЛ);
	СтруктураНастроек.Вставить("РасчетныйСчетОрганизации", СведенияОбОрганизации.БанкСчетНомер);
	
КонецПроцедуры

// Процедура дополняет настройки выгрузки настройками выгрузи по их ссылке.
//
// Параметры:
//  СтруктураНастроек	 - Структура	 - настройки выгрузки.
//  ТекущаяНастройка	 - Ссылка	 - настройки универсальной выгрузки данных.
//
Процедура ЗаполнитьТекущиеНастрокиПоСсылке(СтруктураНастроек, ТекущаяНастройка)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекущаяНастройка", ТекущаяНастройка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.Ссылка КАК НастройкиВыгрузки,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.Код КАК Код,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.Наименование КАК Наименование,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ВыборЛицевыхСчетов КАК ВыборЛицевыхСчетов,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ВыборУслуг КАК ВыборУслуг,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ВыгружатьТолькоСНомерамиТелефонов КАК ВыгружатьТолькоСНомерамиТелефонов,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.МинимальнаяСуммаДолга КАК МинимальнаяСуммаДолга,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ОтборПоОтветственномуСобственнику КАК ОтборПоОтветственномуСобственнику,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ТипВыгрузкиДанныхПоПоказаниямСчетчиков КАК ТипВыгрузкиДанныхПоПоказаниямСчетчиков,
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ТипОтбораПоСуммеДолга КАК ТипОтбораПоСуммеДолга
	|ИЗ
	|	Справочник.УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных КАК УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных
	|ГДЕ
	|	НЕ УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ПометкаУдаления
	|	И УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.Ссылка = &ТекущаяНастройка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеЛицевыеСчета.ЛицевойСчет КАК ЛицевойСчет
	|ИЗ
	|	Справочник.УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ВыбранныеЛицевыеСчета КАК УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеЛицевыеСчета
	|ГДЕ
	|	НЕ УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеЛицевыеСчета.Ссылка.ПометкаУдаления
	|	И УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеЛицевыеСчета.Ссылка = &ТекущаяНастройка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеУслуги.Услуга КАК Услуга
	|ИЗ
	|	Справочник.УПЖКХ_НастройкиУниверсальнойВыгрузкиДанных.ВыбранныеУслуги КАК УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеУслуги
	|ГДЕ
	|	НЕ УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеУслуги.Ссылка.ПометкаУдаления
	|	И УПЖКХ_НастройкиУниверсальнойВыгрузкиДанныхВыбранныеУслуги.Ссылка = &ТекущаяНастройка";
	
	МассивРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	ВыборкаРеквизитов = МассивРезультатов[0].Выбрать();
	
	Если ВыборкаРеквизитов.Следующий() Тогда
		
		СтруктураНастроек.Вставить("НастройкиВыгрузки",                      ВыборкаРеквизитов["НастройкиВыгрузки"]);
		СтруктураНастроек.Вставить("Код",                                    ВыборкаРеквизитов["Код"]);
		СтруктураНастроек.Вставить("Наименование",                           ВыборкаРеквизитов["Наименование"]);
		СтруктураНастроек.Вставить("ВыборЛицевыхСчетов",                     ВыборкаРеквизитов["ВыборЛицевыхСчетов"]);
		СтруктураНастроек.Вставить("ВыборУслуг",                             ВыборкаРеквизитов["ВыборУслуг"]);
		СтруктураНастроек.Вставить("ВыгружатьТолькоСНомерамиТелефонов",      ВыборкаРеквизитов["ВыгружатьТолькоСНомерамиТелефонов"]);
		СтруктураНастроек.Вставить("МинимальнаяСуммаДолга",                  ВыборкаРеквизитов["МинимальнаяСуммаДолга"]);
		СтруктураНастроек.Вставить("ОтборПоОтветственномуСобственнику",      ВыборкаРеквизитов["ОтборПоОтветственномуСобственнику"]);
		СтруктураНастроек.Вставить("ТипВыгрузкиДанныхПоПоказаниямСчетчиков", ВыборкаРеквизитов["ТипВыгрузкиДанныхПоПоказаниямСчетчиков"]);
		СтруктураНастроек.Вставить("ТипОтбораПоСуммеДолга",                  ВыборкаРеквизитов["ТипОтбораПоСуммеДолга"]);
		
	КонецЕсли;
	
	ВыборкаЛицевыеСчета   = МассивРезультатов[1].Выбрать();
	ВыбранныеЛицевыеСчета = Новый СписокЗначений;
	Пока ВыборкаЛицевыеСчета.Следующий() Цикл
		ВыбранныеЛицевыеСчета.Добавить(ВыборкаЛицевыеСчета["ЛицевойСчет"]);
	КонецЦикла;
	СтруктураНастроек.Вставить("ВыбранныеЛицевыеСчета", ВыбранныеЛицевыеСчета);
	
	ВыборкаУслуги   = МассивРезультатов[2].Выбрать();
	ВыбранныеУслуги = Новый СписокЗначений;
	Пока ВыборкаУслуги.Следующий() Цикл
		ВыбранныеУслуги.Добавить(ВыборкаУслуги["Услуга"]);
	КонецЦикла;
	СтруктураНастроек.Вставить("ВыбранныеУслуги", ВыбранныеУслуги);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
