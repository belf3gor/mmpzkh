#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список патентов, полученных данной организацией.
//
// Параметры:
//  Организация    - СправочникСсылка.Организации - Организация, патенты которой требуется получить.
//  ПериодДействия - Дата, Неопределено - если указан, будут отобраны только действующие в указанную дату патенты.
//
// Возвращаемое значение:
//   Массив   - список патентов организации.
//
Функция ПатентыОрганизации(Организация, ПериодДействия = Неопределено) Экспорт
	
	Патенты = Новый Массив;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Патенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|ГДЕ
	|	Патенты.Владелец = &Организация
	|	И НЕ Патенты.ПометкаУдаления
	|	И &УсловиеПериодДействия";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если ЗначениеЗаполнено(ПериодДействия) Тогда
		Запрос.УстановитьПараметр("Период", ПериодДействия);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПериодДействия",
			"Патенты.ДатаНачала <= КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
			|	И Патенты.ДатаОкончания >= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПериодДействия", "ИСТИНА");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Патенты = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	
	Возврат Патенты;
	
КонецФункции

// Возвращает признак доступности пользователю более одного патента на указанную дату.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация, количество патентов у которой необходимо проверить.
//  Дата - Дата - Дата, на которую необходимо проверить количество патентов.
//
// Возвращаемое значение:
//  Булево - Признак доступности текущему пользователю нескольких патентов.
//
Функция ИспользуетсяНесколькоПатентов(Организация, Дата) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Патенты.Ссылка) КАК КоличествоПатентов
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаНачала <= КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
	|	И Патенты.ДатаОкончания >= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	И Патенты.Владелец = &Организация
	|	И НЕ Патенты.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоПатентов > 1;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОтключитьНедоступныеКомандыФормы(Оплатить, ЗаявлениеУтратаПраваНаПатент, ЗаявлениеПрекращениеДеятельности, ЗаявлениеНаПатент = Неопределено) Экспорт
	
	Если Не ПравоДоступа("Использование", Метаданные.Обработки.ПомощникОплатыПатента) Тогда
		Оплатить.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.УведомлениеОСпецрежимахНалогообложения) Тогда
		ЗаявлениеУтратаПраваНаПатент.Видимость = Ложь;
		ЗаявлениеПрекращениеДеятельности.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗаявлениеНаПатент <> Неопределено
		И Не (ПравоДоступа("Изменение", Метаданные.Документы.УведомлениеОСпецрежимахНалогообложения)
		И ПравоДоступа("Использование", Метаданные.Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента)) Тогда
		ЗаявлениеНаПатент.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПараметрыФормыВыбораДляКода(НазваниеМакета, ТекущийПериод) Экспорт
	
	КодыЛьгот = Новый ТаблицаЗначений;
	
	КодыЛьгот.Колонки.Добавить("Код");
	КодыЛьгот.Колонки.Добавить("Наименование");
	КодыЛьгот.Колонки.Добавить("КодЕдиницыИзмерения");
	
	Макет	= ПолучитьМакет(НазваниеМакета);
	
	НазваниеОбласти = "";
	СписокОбластей = Новый СписокЗначений;
	ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей);
	
	ТекущаяОбласть = Макет.Области.Найти("Область" + НазваниеОбласти);
	
	Если НЕ (ТекущаяОбласть = Неопределено) Тогда	
		
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			// Перебираем строки макета.
			КодПоказателя       = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название            = СокрП(Макет.Область(НомерСтр, 2).Текст);
			КодЕдиницыИзмерения = СокрП(Макет.Область(НомерСтр, 3).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				НоваяСтрока = КодыЛьгот.Добавить();
				НоваяСтрока.Код                 = КодПоказателя;
				НоваяСтрока.Наименование        = Название;
				НоваяСтрока.КодЕдиницыИзмерения = КодЕдиницыИзмерения;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("СписокКодов"           , КодыЛьгот);
	Параметры.Вставить("СписокПериодовДействия", СписокОбластей);
	Параметры.Вставить("ТекущийПериод"         , НазваниеОбласти);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец")
		И Параметры.Свойство("Период") Тогда
		
		ДоступныеПатенты = ПатентыОрганизации(Параметры.Отбор.Владелец, Параметры.Период);
		Параметры.Отбор.Вставить("Ссылка", Новый ФиксированныйМассив(ДоступныеПатенты));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей)
	
	Области = Макет.Области;
	Если Области.Количество() = 0 Тогда
		НазваниеОбласти = "";
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекОбласть Из Области Цикл
		СписокОбластей.Добавить(Прав(ТекОбласть.Имя,4));
	КонецЦикла;
	
	ТекущаяОбласть = СписокОбластей[0].Значение;
	Для Каждого ТекОбласть Из СписокОбластей Цикл
		Если Год(ТекущийПериод) < Число(ТекОбласть.Значение) Тогда
			Прервать;
		КонецЕсли;
		
		ТекущаяОбласть = ТекОбласть.Значение;
	КонецЦикла;
	
	НазваниеОбласти = ТекущаяОбласть;
	
КонецПроцедуры

#Область ОплатаПатентаИзСпискаЗадач

Функция РеквизитыНалоговогоПлатежа(Патент) Экспорт
	
	Реквизиты = НовыйРеквизитыНалоговогоПлатежа();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Патенты.КБК КАК КБК,
	|	ВЫБОР
	|		КОГДА Патенты.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|			ТОГДА Патенты.НалоговыйОрган.Код
	|		ИНАЧЕ Патенты.Владелец.РегистрацияВНалоговомОргане.Код
	|	КОНЕЦ КАК КодНалоговогоОргана,
	|	ВЫБОР
	|		КОГДА Патенты.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|			ТОГДА Патенты.КодПоОКТМО
	|		ИНАЧЕ Патенты.Владелец.РегистрацияВНалоговомОргане.КодПоОКТМО
	|	КОНЕЦ КАК ОКАТО,
	|	Патенты.НомерПатента КАК НомерПатента,
	|	Патенты.ДатаВыдачи КАК ДатаВыдачи,
	|	Патенты.ДатаНачала КАК ДатаНачала,
	|	Патенты.ДатаОкончания КАК ДатаОкончания,
	|	Патенты.Владелец КАК Организация
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|ГДЕ
	|	Патенты.Ссылка = &Патент";
	
	Запрос.УстановитьПараметр("Патент", Патент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
		
		Реквизиты.Налог     = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоКБК(Выборка.КБК);
		Реквизиты.ВидНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Налог, "ВидНалога");
		
		ШаблонОписания = ". Оплата стоимости патента N %1 от %2";
		Описание = СтрШаблон(ШаблонОписания, Выборка.НомерПатента, Формат(Выборка.ДатаНачала, "ДЛФ=D"));
		Реквизиты.Описание = Описание;
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

// Формирует список действующих правил по организации в периоде
Функция ПравилаУплатыПатентов(Организация, ТекущаяДата) Экспорт
	
	ТаблицаПравил = НовыйТаблицаПравил();
	
	ПорядокПлатежей = ПорядокПлатежей();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Патенты.Ссылка,
	|	Патенты.ДатаПервогоПлатежа,
	|	Патенты.ДатаВторогоПлатежа,
	|	Патенты.Наименование,
	|	Патенты.ДатаНачала,
	|	Патенты.ДатаОкончания
	|ПОМЕСТИТЬ Патенты
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|ГДЕ
	|	Патенты.Владелец = &Организация
	|	И НЕ Патенты.ПометкаУдаления
	|	И Патенты.СуммаПервогоПлатежа > 0
	|	И Патенты.ДатаПервогоПлатежа > Патенты.ДатаНачала
	|	И Патенты.ДатаНачала >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ГОД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Патенты.Ссылка КАК Правило,
	|	Патенты.ДатаПервогоПлатежа КАК Срок,
	|	Патенты.ДатаНачала КАК НачалоВыполнения,
	|	НАЧАЛОПЕРИОДА(Патенты.ДатаНачала, ГОД) КАК ПериодСобытия,
	|	0 КАК ПорядокПлатежа,
	|	Патенты.Наименование КАК Наименование
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаПервогоПлатежа = Патенты.ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Патенты.Ссылка,
	|	Патенты.ДатаПервогоПлатежа,
	|	Патенты.ДатаНачала,
	|	НАЧАЛОПЕРИОДА(Патенты.ДатаНачала, ГОД),
	|	1,
	|	Патенты.Наименование
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаВторогоПлатежа > Патенты.ДатаНачала
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Патенты.Ссылка,
	|	Патенты.ДатаВторогоПлатежа,
	|	Патенты.ДатаНачала,
	|	КОНЕЦПЕРИОДА(Патенты.ДатаНачала, ГОД),
	|	2,
	|	Патенты.Наименование
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаВторогоПлатежа > Патенты.ДатаНачала";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
			НоваяЗапись = ТаблицаПравил.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.Наименование = Стршаблон(НСтр("ru = 'Патент "+Выборка.Наименование
				+ ", уплата %1стоимости'"), ПорядокПлатежей[Выборка.ПорядокПлатежа]);
	КонецЦикла;
	
	Возврат ТаблицаПравил;
	
КонецФункции

Функция НовыйРеквизитыНалоговогоПлатежа()
	
	Результат = Новый Структура("КБК, Налог, ВидНалога, КодНалоговогоОргана, ОКАТО, Описание");
	
	Результат.Вставить("КБК",                 "");
	Результат.Вставить("Налог",               Справочники.ВидыНалоговИПлатежейВБюджет.ПустаяСсылка());
	Результат.Вставить("ВидНалога",           Перечисления.ВидыНалогов.ПустаяСсылка());
	Результат.Вставить("КодНалоговогоОргана", "");
	Результат.Вставить("ОКАТО",               "");
	Результат.Вставить("Описание",            "");
	
	Возврат Результат;
	
КонецФункции

Функция НовыйТаблицаПравил()
	
	ТаблицаПравил = Новый ТаблицаЗначений;
	ТаблицаПравил.Колонки.Добавить("Правило",          Новый ОписаниеТипов("СправочникСсылка.Патенты"));
	ТаблицаПравил.Колонки.Добавить("Организация",      Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПравил.Колонки.Добавить("Срок",             Новый ОписаниеТипов("Дата"));
	ТаблицаПравил.Колонки.Добавить("НачалоВыполнения", Новый ОписаниеТипов("Дата"));
	ТаблицаПравил.Колонки.Добавить("ПериодСобытия",    Новый ОписаниеТипов("Дата"));
	ТаблицаПравил.Колонки.Добавить("Наименование",     Новый ОписаниеТипов("Строка"));
	
	Возврат ТаблицаПравил;
	
КонецФункции

Функция ПорядокПлатежей()
	
	ПорядокПлатежей = Новый Массив;
	ПорядокПлатежей.Добавить("");
	ПорядокПлатежей.Добавить("1/3 ");
	ПорядокПлатежей.Добавить("2/3 ");
	
	Возврат ПорядокПлатежей;
	
КонецФункции

#КонецОбласти

#Область ОплатаПатентаИзСпискаСправочника

Функция ДанныеПатентаДляОплаты(Патент) Экспорт
	
	ОписаниеПатента = НовыйОписаниеПатента();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправочникПатенты.Ссылка КАК Патент,
	|	СправочникПатенты.Наименование КАК Наименование,
	|	СправочникПатенты.Владелец КАК Владелец,
	|	СправочникПатенты.ДатаНачала КАК ДатаНачала,
	|	СправочникПатенты.ДатаОкончания КАК ДатаОкончания,
	|	СправочникПатенты.СуммаПервогоПлатежа КАК СуммаПервогоПлатежа,
	|	СправочникПатенты.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	СправочникПатенты.СуммаВторогоПлатежа КАК СуммаВторогоПлатежа,
	|	СправочникПатенты.ДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	СправочникПатенты.СуммаПервогоПлатежа + СправочникПатенты.СуммаВторогоПлатежа КАК СуммаПлатежаПолного
	|ПОМЕСТИТЬ ДанныеПатента
	|ИЗ
	|	Справочник.Патенты КАК СправочникПатенты
	|ГДЕ
	|	СправочникПатенты.Ссылка = &Патент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПатента.Патент КАК Патент,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗадачиБухгалтера.ПериодСобытия = НАЧАЛОПЕРИОДА(ДанныеПатента.ДатаНачала, ГОД)
	|					И ЕСТЬNULL(ЗадачиБухгалтера.Статус, """") = ""Оплачено""
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПервыйПлатежВыполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗадачиБухгалтера.ПериодСобытия = НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДанныеПатента.ДатаНачала, ГОД), ДЕНЬ)
	|					И ЕСТЬNULL(ЗадачиБухгалтера.Статус, """") = ""Оплачено""
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ВторойПлатежВыполнен
	|ПОМЕСТИТЬ ТаблицаОплаты
	|ИЗ
	|	ДанныеПатента КАК ДанныеПатента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиБухгалтера КАК ЗадачиБухгалтера
	|		ПО ДанныеПатента.Владелец = ЗадачиБухгалтера.Организация
	|			И ДанныеПатента.Патент = ЗадачиБухгалтера.Правило
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПатента.Патент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПатента.Патент КАК Патент,
	|	ДанныеПатента.Владелец КАК Владелец,
	|	ДанныеПатента.Наименование КАК Наименование,
	|	ДанныеПатента.ДатаНачала КАК ДатаНачала,
	|	ДанныеПатента.ДатаОкончания КАК ДатаОкончания,
	|	ДанныеПатента.СуммаПервогоПлатежа КАК СуммаПервогоПлатежа,
	|	ДанныеПатента.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	ДанныеПатента.СуммаВторогоПлатежа КАК СуммаВторогоПлатежа,
	|	ДанныеПатента.ДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	ДанныеПатента.СуммаПлатежаПолного КАК СуммаПлатежаПолного,
	|	ЕСТЬNULL(ТаблицаОплаты.ПервыйПлатежВыполнен, ЛОЖЬ) КАК ПервыйПлатежВыполнен,
	|	ЕСТЬNULL(ТаблицаОплаты.ВторойПлатежВыполнен, ЛОЖЬ) КАК ВторойПлатежВыполнен
	|ИЗ
	|	ДанныеПатента КАК ДанныеПатента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОплаты КАК ТаблицаОплаты
	|		ПО (ТаблицаОплаты.Патент = ДанныеПатента.Патент)";
	Запрос.УстановитьПараметр("Патент", Патент);
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	
	ЗаполнитьЗначенияСвойств(ОписаниеПатента, Результат);
	
	ОписаниеПатента.НомерПлатежа = 1;
	
	Если ЗначениеЗаполнено(Результат.ДатаВторогоПлатежа) Тогда
		Если НЕ Результат.ПервыйПлатежВыполнен Тогда
			СписокПлатежей = ОписаниеПатента.СписокПлатежей;
			
			СписокПлатежей.Добавить(1, Формат(Результат.СуммаПервогоПлатежа, "ЧДЦ=0") + " руб., не позднее " + Формат(Результат.ДатаПервогоПлатежа, "ДЛФ=D"));
			СписокПлатежей.Добавить(2, Формат(Результат.СуммаВторогоПлатежа, "ЧДЦ=0") + " руб., не позднее " + Формат(Результат.ДатаВторогоПлатежа, "ДЛФ=D"));
		КонецЕсли;
		
		Если Результат.ПервыйПлатежВыполнен ИЛИ Результат.ДатаПервогоПлатежа < ТекущаяДатаСеанса() Тогда
			ОписаниеПатента.НомерПлатежа = 2;
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеПатента.ОплаченПолностью = Ложь;
	Если ЗначениеЗаполнено(Результат.ДатаВторогоПлатежа)Тогда
		Если Результат.ПервыйПлатежВыполнен И Результат.ВторойПлатежВыполнен Тогда
			ОписаниеПатента.ОплаченПолностью = Истина;
		КонецЕсли;
	ИначеЕсли Результат.ПервыйПлатежВыполнен Тогда
		ОписаниеПатента.ОплаченПолностью = Истина;
	КонецЕсли;
	
	Возврат ОписаниеПатента;
	
КонецФункции

Функция ОписаниеОплатыПатента(ДанныеПатента) Экспорт
	
	ДатаОплаты    = ?(ДанныеПатента.НомерПлатежа = 2, ДанныеПатента.ДатаВторогоПлатежа, ДанныеПатента.ДатаПервогоПлатежа);
	ПериодСобытия = ?(ДанныеПатента.НомерПлатежа = 2, КонецГода(ДанныеПатента.ДатаНачала), НачалоГода(ДанныеПатента.ДатаНачала));
	
	ПараметрыЗадачи = ВыполнениеЗадачБухгалтераКлиентСервер.НовыеПараметрыКомандЗадачи();
	
	ПараметрыЗадачи.Организация   = ДанныеПатента.Владелец;
	ПараметрыЗадачи.ПериодСобытия = ПериодСобытия;
	ПараметрыЗадачи.Правило       = ДанныеПатента.Патент;
	ПараметрыЗадачи.Срок          = ДатаОплаты;
	
	Возврат ВыполнениеЗадачБухгалтера.ОписаниеДействияПомощникОплатыПатента(ПараметрыЗадачи);
	
КонецФункции

Функция НовыйОписаниеПатента()
	
	ОписаниеПатента = Новый Структура();
	
	ОписаниеПатента.Вставить("Патент", Справочники.Патенты.ПустаяСсылка());
	ОписаниеПатента.Вставить("Владелец", Справочники.Организации.ПустаяСсылка());
	ОписаниеПатента.Вставить("Наименование", "");
	ОписаниеПатента.Вставить("ДатаНачала", '00010101');
	ОписаниеПатента.Вставить("ДатаОкончания", '00010101');
	ОписаниеПатента.Вставить("ДатаПервогоПлатежа", '00010101');
	ОписаниеПатента.Вставить("ДатаВторогоПлатежа", '00010101');
	ОписаниеПатента.Вставить("СписокПлатежей", Новый СписокЗначений);
	ОписаниеПатента.Вставить("ОплаченПолностью", Ложь);
	ОписаниеПатента.Вставить("СуммаПлатежаПолного", 0);
	ОписаниеПатента.Вставить("НомерПлатежа", 0);
	
	Возврат ОписаниеПатента;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыОбновленияИБ

// Обработчик обновления 3.0.42.37
Процедура ЗаполнитьДобавленныеРеквизиты() Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Патенты.Ссылка,
	|	Патенты.Наименование,
	|	Патенты.Наименование ПОДОБНО &ШаблонНомераПатента КАК НаименованиеСодержитНомер
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ПостановкаНаУчетВНалоговомОргане = &ПустаяПостановка";
	Запрос.УстановитьПараметр("ПустаяПостановка", Перечисления.ПостановкаНаУчетВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("ШаблонНомераПатента","%[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]%");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Патент = Выборка.Ссылка.ПолучитьОбъект();
		Патент.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации;
		
		Если Выборка.НаименованиеСодержитНомер Тогда
			НомерПатента = "";
			Наименование = Выборка.Наименование;
			МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Наименование, " ");
			
			Для каждого Подстрока из МассивПодстрок Цикл
				Подстрока = СтрЗаменить(Подстрока,"№","");
				Если СтрДлина(Подстрока) = 13 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Подстрока) Тогда
					НомерПатента = Подстрока;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Патент.НомерПатента = НомерПатента;
			
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Патент, Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
