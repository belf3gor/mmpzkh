
#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция возвращает краткое наименование помещения на сервере.
//
Функция ПолучитьКраткоеНаименованиеПомещенияНаСервере(ВыбранноеЗначение)
	
	Возврат КраткоеНаименованиеПомещения(ВыбранноеЗначение);
	
КонецФункции

&НаСервереБезКонтекста
// Функция возвращает список выбора по списку отборов.
//
Функция ПолучитьСписокВыбораТипаПомещенияНаСервере(СписокОтборов)
	
	СписокПеречисления = Новый СписокЗначений;
	
	// проверим, есть ли отбор по типу помещения.
	ЕстьОтбор = (ТипЗнч(СписокОтборов) = Тип("ОтборКомпоновкиДанных"));
	
	ЭлементОтбора = Неопределено;
	
	Если ЕстьОтбор Тогда
		Для Каждого ТекЭлемент Из СписокОтборов.Элементы Цикл
			Если ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипПомещения") Тогда
				ЭлементОтбора = ТекЭлемент;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ЭлементОтбора = Неопределено Тогда
		
		Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			СписокПеречисления.Добавить(ЭлементОтбора.ПравоеЗначение);
			
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
			СписокПеречисления.ЗагрузитьЗначения(ЭлементОтбора.ПравоеЗначение.ВыгрузитьЗначения());
			
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
			Для каждого ЗначениеПеречисления Из Перечисления.КВП_ТипыПомещений Цикл
				Если ЗначениеПеречисления <> ЭлементОтбора.ПравоеЗначение Тогда
					СписокПеречисления.Добавить(ЗначениеПеречисления);
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
			Для каждого ЗначениеПеречисления Из Перечисления.КВП_ТипыПомещений Цикл
				Если ЭлементОтбора.ПравоеЗначение.НайтиПоЗначению(ЗначениеПеречисления) = Неопределено Тогда
					СписокПеречисления.Добавить(ЗначениеПеречисления);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		
		Для Каждого ЗначениеПеречисления Из Перечисления.КВП_ТипыПомещений Цикл
			СписокПеречисления.Добавить(ЗначениеПеречисления);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокПеречисления;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
// Устанавливает заголовок группы КИ.
//
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭтоПодсобноеПомещение = Объект.ТипПомещения = ПредопределенноеЗначение("Перечисление.КВП_ТипыПомещений.ПодсобноеПомещение");
	Элементы.ОтноситсяКМОП.ТолькоПросмотр = НЕ ЭтоПодсобноеПомещение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура - обработчик события "ОбработкаВыбора" поля "ТипПомещения".
//
Процедура ТипПомещенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Объект.НаименованиеКраткое = ПолучитьКраткоеНаименованиеПомещенияНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПомещенияПриИзменении(Элемент)
	
	ЭтоМОП     = НЕ СписокТиповПомещенийОтносящихсяКМОП.НайтиПоЗначению(Объект.ТипПомещения) = Неопределено;
	ЭтоЖилФонд = НЕ СписокТиповПомещенийОтносящихсяКЖилым.НайтиПоЗначению(Объект.ТипПомещения) = Неопределено;
	
	Объект.ОтноситсяКМОП = ЭтоМОП;
	Объект.ЭтоЖилойФонд  = ЭтоЖилФонд;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура возникает при создании формы на сервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("СписокОтборов", СписокОтборов);
	
	Элементы.ТипПомещения.СписокВыбора.Очистить();
	
	СписокТипов = ПолучитьСписокВыбораТипаПомещенияНаСервере(СписокОтборов);
	Для Каждого ТекТип Из СписокТипов Цикл
		Элементы.ТипПомещения.СписокВыбора.Добавить(ТекТип.Значение, ТекТип.Представление);
	КонецЦикла;
	
	СписокТиповПомещенийОтносящихсяКЖилым = Справочники.УПЖКХ_ВидыПомещений.ПолучитьСписокТиповПомещений(Истина, Истина);
	СписокТиповПомещенийОтносящихсяКМОП   = Справочники.УПЖКХ_ВидыПомещений.ПолучитьСписокТиповПомещенийОтносящихсяКМОП();
	
	УправлениеФормой(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

// СхемыУчета
&НаКлиенте
// Подключаемый обработчик команды перехода к схеме учета.
Процедура Подключаемый_ОткрытьСхемуУчета(Команда)
	
	ОТР_СхемыУчетаКлиент.Подключаемый_ОткрытьСхемуУчета(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры
// Конец СхемыУчета

#КонецОбласти