
#Область СлужебныеПроцедурыИФункции

// Возвращает виды помещений в зависимости от переданного параметра.
//
// Параметры:
//  Жилые - Булево - Возможные значения:
//                     Истина       - если нужен список видов жилых помещений;
//                     Ложь         - если нужен список видов нежилых помещений;
//                     Неопределено - если нужен список всех доступных видов помещений.
//
// Возвращаемое значение:
//  Массив – список видов помещений.
//
Функция ПолучитьСписокВидовПомещений(Жилые = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УПЖКХ_ВидыПомещений.Ссылка КАК ВидПомещения
	|ИЗ
	|	Справочник.УПЖКХ_ВидыПомещений КАК УПЖКХ_ВидыПомещений
	|ГДЕ
	|	&УсловиеНаТипПомещения";
	
	УсловиеНаТипПомещения = "ИСТИНА";
	Если ЗначениеЗаполнено(Жилые) Тогда
		
		Если Жилые Тогда
			УсловиеНаТипПомещения = "УПЖКХ_ВидыПомещений.ЭтоЖилойФонд";
		Иначе
			УсловиеНаТипПомещения = "НЕ УПЖКХ_ВидыПомещений.ЭтоЖилойФонд";
		КонецЕсли;
		
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеНаТипПомещения", УсловиеНаТипПомещения);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидПомещения");
	
КонецФункции // ПолучитьСписокВидовПомещений()

// Возвращает типы помещений в зависимости от переданного параметра.
//
// Параметры:
//  Жилые               - Булево - Возможные значения:
//                                   Истина       - если нужен список типов жилых помещений;
//                                   Ложь         - если нужен список типов нежилых помещений;
//                                   Неопределено - если нужен список всех доступных типов помещений.
//                                 По умолчанию значение Неопределено.
//  ВключатьПодчиненные - Булево - Возможные значения:
//                                   Истина       - если нужен список типов помещений, включая типы помещений 2-го уровня (комната, кухня, санузел и пр);
//                                   Ложь         - если не нужено включать типы помещений 2-го уровня (комната, кухня, санузел и пр);
//                                 По умолчанию значение Ложь.
// Возвращаемое значение:
//  Список значений – список типов помещений.
//
Функция ПолучитьСписокТиповПомещений(Жилые = Неопределено, ВключатьПодчиненные = Ложь) Экспорт
	
	ТипыПомещений = Новый СписокЗначений;
	
	Если НЕ ЗначениеЗаполнено(Жилые) ИЛИ Жилые Тогда
		
		// типы помещений 1-го уровня
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Квартира);
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Дом);
		
		Если ВключатьПодчиненные Тогда
			// типы помещений 2-го уровня
			ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Комната);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Жилые) ИЛИ НЕ Жилые Тогда
		
		// типы помещений 1-го уровня
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.МестоОбщегоПользования);
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Офис);
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.ПодсобноеПомещение);
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Автоместо);
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Подвал);
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Чердак);
		ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Апартамент);
		
		Если ВключатьПодчиненные Тогда
			// типы помещений 2-го уровня
			ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Кабинет);
			ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Кухня);
			ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Коридор);
			ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.Санузел);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТипыПомещений;
	
КонецФункции // ПолучитьСписокТиповПомещений()

// Возвращает типы помещений, которые могут относится к МОП.
//
// Возвращаемое значение:
//  Список значений – список типов помещений.
//
Функция ПолучитьСписокТиповПомещенийОтносящихсяКМОП() Экспорт
	
	ТипыПомещений = Новый СписокЗначений;
	
	ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.МестоОбщегоПользования);
	ТипыПомещений.Добавить(Перечисления.КВП_ТипыПомещений.ПодсобноеПомещение);
	
	Возврат ТипыПомещений;
	
КонецФункции // ПолучитьСписокТиповПомещенийОтносящихсяКМОП()

// Устарела. В будущем можно удалить. Теперь тип фонда хранится в реквизите вида помещения.
// Возвращает тип фонда в зависимости от выбранного типа помещения.
//
Функция ПолучитьДанныеОТипеФондаВидаПомещения(ВыбТипПомещения) Экспорт
	
	ТипФондаПомещения = "Нежилое";
	
	СписокТиповЖилыхПомещений = ПолучитьСписокТиповПомещений(Истина);
	Если НЕ СписокТиповЖилыхПомещений.НайтиПоЗначению(ВыбТипПомещения) = Неопределено Тогда
		ТипФондаПомещения = "Жилое";
	КонецЕсли;
	
	Возврат ТипФондаПомещения;

КонецФункции // ПолучитьДанныеОТипеФондаВидаПомещения()

#КонецОбласти