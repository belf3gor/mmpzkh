#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПодготовитьФормуНаСервере(Объект);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
	
КонецПроцедуры


&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ДатаСледующегоПлатежа < ДатаДокумента Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Дата следующего платежа не может быть ранее даты подготовленного документа от %1'"),
			Формат(ДатаДокумента, "ДФ=dd.MM.yyyy"));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ДатаСледующегоПлатежа",,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Если форма была изменена уведомим об этом платежное поручение
	РежимВыбора = Модифицированность И НЕ Объект.Ссылка.Пустая();
	
	ШаблонНаименование = НСтр("ru='Каждый %1 начиная с %2'");
	
	Объект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонНаименование,
		Объект.Периодичность,
		Формат(ДатаСледующегоПлатежа, "ДФ=dd.MM.yyyy"));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Если ПроверитьЗаполнение() Тогда
		Объект.НачалоВыполнения = ДатаСледующегоПлатежа;
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере(ТекущийОбъект)

	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ДатаДокумента, ПериодСобытия");
	
	ДатаСледующегоПлатежа = ДатаСледующегоПлатежаНаСервере(ТекущийОбъект, ПериодСобытия);
	Если НЕ ЗначениеЗаполнено(Объект.НачалоВыполнения) И ДатаСледующегоПлатежа >= ДатаДокумента Тогда
		
		Объект.НачалоВыполнения = ДатаСледующегоПлатежа;
		Модифицированность      = Истина;
		
	Иначе
		ДатаСледующегоПлатежа = Макс(ДатаСледующегоПлатежа, Объект.НачалоВыполнения);
	КонецЕсли;
	
	
	Элементы.ПраваяКолонка.Доступность = Объект.Выполняется;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ДатаСледующегоПлатежаНаСервере(Объект, ПериодСобытия)
	
	Если Объект.Ссылка.Пустая() Тогда
	
		Правило = Новый Структура("НачалоВыполнения, Периодичность", Объект.НачалоВыполнения, Объект.Периодичность);

		ДатаСледующегоПериода = Макс(
			ИнтерфейсыВзаимодействияБРОКлиентСервер.ДобавитьПериод(ТекущаяДатаСеанса(), Правило.Периодичность), 
			Правило.НачалоВыполнения);

		Возврат Справочники.ПравилаРегулярныхПлатежей.ДатаПлатежаВПериоде(Правило, ДатаСледующегоПериода);
	
	Иначе
	
		Возврат Справочники.ПравилаРегулярныхПлатежей.ДатаБлижайшегоПлатежа(Объект.Ссылка, ПериодСобытия);
	
	КонецЕсли; 
	
КонецФункции

&НаКлиенте
Процедура ПовторятьПериодическиПриИзменении(Элемент)
	Элементы.ПраваяКолонка.Доступность = Объект.Выполняется;
КонецПроцедуры

#КонецОбласти 

