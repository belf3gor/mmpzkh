#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Возвращает массив видов расходов, используемых только для тех видов деятельности,
// к которым применяется основная система налогообложения
Функция ВидыРасходовТолькоОсновнаяСистемаНалогообложения() Экспорт
	
	// Это нормируемые расходы
	ВидыРасходов = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
	
	// ... и некоторые другие
	ВидыРасходов.Добавить(Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	ВидыРасходов.Добавить(Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения);
	
	Возврат Новый ФиксированныйМассив(ВидыРасходов);
	
КонецФункции

Функция ПолучитьТаблицуПредопределенныхЗначений() Экспорт
	
	ТаблицаИмен = Новый ТаблицаЗначений();
	ТаблицаИмен.Колонки.Добавить("Имя", 			Новый ОписаниеТипов("Строка"));
	ТаблицаИмен.Колонки.Добавить("Представление", 	Новый ОписаниеТипов("Строка"));
	ТаблицаИмен.Колонки.Добавить("Текст", 			Новый ОписаниеТипов("Строка"));
	ТаблицаИмен.Колонки.Добавить("Доступность", 	Новый ОписаниеТипов("Булево"));
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "ОплатаТруда";
	Строка.Представление 	= "Оплата труда";
	Строка.Текст 			= "Основное отражение начисления зарплаты";
	Строка.Доступность 		= Ложь;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "ОплатаТрудаЕНВД";
	Строка.Представление 	= "Оплата труда (ЕНВД)";
	Строка.Текст	 		= "Основное отражение начисления зарплаты по деятельности ЕНВД";
	Строка.Доступность 		= Ложь;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "СписаниеМатериалов";
	Строка.Представление 	= "Списание материалов";
	Строка.Текст	 		= "Документ «Требование-накладная»";
	Строка.Доступность 		= Истина;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "УслугиКомиссионеров";
	Строка.Представление 	= "Услуги комиссионеров";
	Строка.Текст	 		= "Документ «Отчет комиссионера»";
	Строка.Доступность 		= Истина;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "СписаниеНДСНаРасходы";
	Строка.Представление 	= "Списание НДС";
	Строка.Текст	 		= "Документ «Перемещение товаров» (списание НДС)";
	Строка.Доступность 		= Истина;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "СписаниеНДСНаРасходыЕНВД";
	Строка.Представление 	= "Списание НДС (ЕНВД)";
	Строка.Текст	 		= "Документ «Перемещение товаров» (списание НДС при применении ЕНВД)";
	Строка.Доступность 		= Истина;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "АмортизационнаяПремия";
	Строка.Представление 	= "Амортизационная премия";
	Строка.Текст	 		= "Документ «Принятие к учету ОС» (амортизационная премия)";
	Строка.Доступность 		= Истина;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "КомандировочныеРасходы";
	Строка.Представление 	= "Командировочные расходы";
	Строка.Текст	 		= "Документ «Авансовый отчет» (командировочные расходы)";
	Строка.Доступность 		= Истина;
	
	Строка 					= ТаблицаИмен.Добавить();
	Строка.Имя 				= "ПрочиеЗатраты";
	Строка.Представление 	= "Прочие затраты";
	Строка.Текст	 		= "Основная статья затрат";
	Строка.Доступность 		= Истина;
	
	Возврат ТаблицаИмен;
	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

Функция ОсновнаяСтатьяЗатрат() Экспорт
	
	Возврат ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
	
КонецФункции

Функция СтатьяЗатратПоНазначению(НазначениеСтатьиЗатрат) Экспорт
	
	Если Не ЗначениеЗаполнено(НазначениеСтатьиЗатрат) Тогда
		Возврат ОсновнаяСтатьяЗатрат();
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат." + НазначениеСтатьиЗатрат);
	КонецЕсли;
	
КонецФункции

Функция СоздатьСтатьюЗатратТорговыйСбор(НачальноеЗаполнение = Ложь) Экспорт
	
	Если НачальноеЗаполнение И ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // В подчиненных узлах РИБ не выполняется
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатьиЗатрат.Ссылка КАК СтатьяЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТорговыйСбор)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		// статья затрат не найдена, создаем новую
		НоваяСтатья = Справочники.СтатьиЗатрат.СоздатьЭлемент();
		
		НоваяСтатья.УстановитьНовыйКод();
		НоваяСтатья.Наименование = НСтр("ru='Торговый сбор'");
		НоваяСтатья.ВидДеятельностиДляНалоговогоУчетаЗатрат =
			Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
		НоваяСтатья.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ТорговыйСбор;
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НоваяСтатья, Истина);
			Возврат НоваяСтатья.Ссылка;
			
		Исключение
			ТекстСообщения = НСтр("ru = 'Процедуре Справочники.СтатьиЗатрат.СоздатьСтатьюЗатратТорговыйСбор
				| не удалось создать статью затрат для отражения расходов по торговому сбору'");
				
			Если НачальноеЗаполнение Тогда
				ИмяСобытия = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
			Иначе
				ИмяСобытия = НСтр("ru = 'Расчет торгового сбора'", ОбщегоНазначения.КодОсновногоЯзыка());
			КонецЕсли;
			
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			
		КонецПопытки;
		
	Иначе
		Возврат Справочники.СтатьиЗатрат.ПустаяСсылка();
		
	КонецЕсли;
	
КонецФункции

// Функция получения предопределнного элемента по имени
// Используется для исключения влияния повторного использования в стандартном механизме
Функция ПредопределенныйЭлемент(ИмяПредопределенногоЭлемента)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 
	                |	Ссылка 
	                |ИЗ
	                |	Справочник.СтатьиЗатрат 
	                |ГДЕ
	                |	ИмяПредопределенныхДанных = &ИмяПредопределенныхДанных";
	Запрос.УстановитьПараметр("ИмяПредопределенныхДанных", ИмяПредопределенногоЭлемента);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат Неопределено;
	
	Иначе
		
		Возврат Результат.Выгрузить()[0].Ссылка;
	
	КонецЕсли; 

КонецФункции // ПредопределенныйЭлемент()

Процедура СоздатьУстановитьПредопределенныеЭлементыУслугиКомиссионеровОбщие()

	Если ПредопределенныйЭлемент("УслугиКомиссионеров") = Неопределено Тогда
		
		ЭлементСправочника = Справочники.СтатьиЗатрат.СоздатьЭлемент();				
		ЭлементСправочника.Наименование = "Услуги комиссионеров";
		ЭлементСправочника.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
		ЭлементСправочника.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ПрочиеРасходы;
		ЭлементСправочника.ИмяПредопределенныхДанных = "УслугиКомиссионеров";
		ЭлементСправочника.Записать();
		
	КонецЕсли; 

КонецПроцедуры

Процедура СоздатьУстановитьПредопределенныеЭлементыКомиссияНаПродажу() Экспорт

	Если ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугЧерезКомиссионеров") Тогда
	
		СоздатьУстановитьПредопределенныеЭлементыУслугиКомиссионеровОбщие();
	
	КонецЕсли; 

КонецПроцедуры

Процедура СоздатьУстановитьПредопределенныеЭлементыКомиссияНаЗакупку() Экспорт

	Если ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугЧерезКомиссионеров") Тогда
	
		СоздатьУстановитьПредопределенныеЭлементыУслугиКомиссионеровОбщие();
	
	КонецЕсли; 

КонецПроцедуры

Процедура ОбработкаСправочникаДляУправленияПредопределеннымиЗначениями() Экспорт

	Если ПредопределенныйЭлемент("ОплатаТруда") = Неопределено Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтатьиЗатрат.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|ГДЕ
		|	НЕ СтатьиЗатрат.ПометкаУдаления
		|	И СтатьиЗатрат.Наименование ПОДОБНО &НаименованиеЭлемента
		|	И СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ВидДеятельностиДляНалоговогоУчетаЗатрат
		|	И СтатьиЗатрат.ВидРасходовНУ = &ВидРасходовНУ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиЗатрат.Код";
		
		Запрос.УстановитьПараметр("НаименованиеЭлемента",                   "Оплата труда");
		Запрос.УстановитьПараметр("ВидДеятельностиДляНалоговогоУчетаЗатрат", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
		Запрос.УстановитьПараметр("ВидРасходовНУ",                           Перечисления.ВидыРасходовНУ.ОплатаТруда);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ЭлементСправочника = Выборка.Ссылка.ПолучитьОбъект();
			ЭлементСправочника.ИмяПредопределенныхДанных = "ОплатаТруда";
			ЭлементСправочника.Записать();
		Иначе
			Справочник_Менеджер = Справочники.СтатьиЗатрат;
			ЭлементСправочника = Справочники.СтатьиЗатрат.СоздатьЭлемент();
			ЭлементСправочника.Наименование = "Оплата труда";
			ЭлементСправочника.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
			ЭлементСправочника.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ОплатаТруда;
			ЭлементСправочника.ИмяПредопределенныхДанных = "ОплатаТруда";
			ЭлементСправочника.Записать();
		КонецЕсли;
		
	КонецЕсли;
		
	Если ПредопределенныйЭлемент("ОплатаТрудаЕНВД") = Неопределено Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтатьиЗатрат.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|ГДЕ
		|	НЕ СтатьиЗатрат.ПометкаУдаления
		|	И СтатьиЗатрат.Наименование ПОДОБНО &НаименованиеЭлемента
		|	И СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ВидДеятельностиДляНалоговогоУчетаЗатрат
		|	И СтатьиЗатрат.ВидРасходовНУ = &ВидРасходовНУ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиЗатрат.Код";
		
		Запрос.УстановитьПараметр("НаименованиеЭлемента",                   "Оплата труда (ЕНВД)");
		Запрос.УстановитьПараметр("ВидДеятельностиДляНалоговогоУчетаЗатрат", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);
		Запрос.УстановитьПараметр("ВидРасходовНУ",                           Перечисления.ВидыРасходовНУ.ОплатаТруда);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ЭлементСправочника = Выборка.Ссылка.ПолучитьОбъект();
			ЭлементСправочника.ИмяПредопределенныхДанных = "ОплатаТрудаЕНВД";
			ЭлементСправочника.Записать();
		Иначе
			ЭлементСправочника = Справочники.СтатьиЗатрат.СоздатьЭлемент();
			ЭлементСправочника.Наименование = "Оплата труда (ЕНВД)";
			ЭлементСправочника.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения;
			ЭлементСправочника.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ОплатаТруда;
			ЭлементСправочника.ИмяПредопределенныхДанных = "ОплатаТрудаЕНВД";
			ЭлементСправочника.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПредопределенныйЭлемент("СписаниеМатериалов") = Неопределено Тогда
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ВидНУ", Перечисления.ВидыРасходовНУ.МатериальныеРасходы);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	СтатьиЗатрат.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|ГДЕ
		|	СтатьиЗатрат.ВидРасходовНУ = &ВидНУ
		|	И НЕ СтатьиЗатрат.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиЗатрат.Код";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
			СтатьяЗатрат = Выборка.Ссылка;
			ЭлементСправочника = СтатьяЗатрат.ПолучитьОбъект();
			ЭлементСправочника.ИмяПредопределенныхДанных = "СписаниеМатериалов";
			ЭлементСправочника.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПредопределенныйЭлемент("АмортизационнаяПремия") = Неопределено Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтатьиЗатрат.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|ГДЕ
		|	СтатьиЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.АмортизационнаяПремия)
		|	И НЕ СтатьиЗатрат.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиЗатрат.Код";
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ЭлементСправочника = Выборка.Ссылка.ПолучитьОбъект();
			ЭлементСправочника.ИмяПредопределенныхДанных = "АмортизационнаяПремия";
			ЭлементСправочника.Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если ПредопределенныйЭлемент("УслугиКомиссионеров") = Неопределено Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	ОтчетКомиссионераОПродажах.Дата,
		|	СтатьиЗатрат.Ссылка КАК СтатьяЗатрат
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|		ПО (ОтчетКомиссионераОПродажах.Субконто1 = СтатьиЗатрат.Ссылка
		|				ИЛИ ОтчетКомиссионераОПродажах.Субконто2 = СтатьиЗатрат.Ссылка
		|				ИЛИ ОтчетКомиссионераОПродажах.Субконто3 = СтатьиЗатрат.Ссылка)
		|ГДЕ
		|	НЕ СтатьиЗатрат.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОтчетКомиссионераОПродажах.Дата УБЫВ";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			СтатьяЗатрат = Выборка.СтатьяЗатрат;
			Если ЗначениеЗаполнено(СтатьяЗатрат) Тогда
				ЭлементСправочника = СтатьяЗатрат.ПолучитьОбъект();
				ЭлементСправочника.ИмяПредопределенныхДанных = "УслугиКомиссионеров";
				ЭлементСправочника.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьПредопределенныеЭлементыНоваяИБ() Экспорт

	Если ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ОплатаТруда") = Неопределено Тогда
		
		ЭлементСправочника = Справочники.СтатьиЗатрат.СоздатьЭлемент();				
		ЭлементСправочника.Наименование = "Оплата труда";
		ЭлементСправочника.ИмяПредопределенныхДанных = "ОплатаТруда";
		ЭлементСправочника.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
		ЭлементСправочника.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ОплатаТруда;
		ЭлементСправочника.Записать();
		
	КонецЕсли; 
	
	Если ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ОплатаТрудаЕНВД") = Неопределено Тогда
		
		ЭлементСправочника = Справочники.СтатьиЗатрат.СоздатьЭлемент();				
		ЭлементСправочника.Наименование = "Оплата труда (ЕНВД)";
		ЭлементСправочника.ИмяПредопределенныхДанных = "ОплатаТрудаЕНВД";
		ЭлементСправочника.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения;
		ЭлементСправочника.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ОплатаТруда;
		ЭлементСправочника.Записать();
		
	КонецЕсли; 

КонецПроцедуры
 
Функция ПредопределенныйЭлементПрочиеЗатраты() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭлементСправочника = Справочники.СтатьиЗатрат.СоздатьЭлемент();
	ЭлементСправочника.Наименование = "Прочие затраты";
	ЭлементСправочника.ИмяПредопределенныхДанных = "ПрочиеЗатраты";
	ЭлементСправочника.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
	ЭлементСправочника.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ПрочиеРасходы;
	ЭлементСправочника.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат ЭлементСправочника.Ссылка;
	
КонецФункции

Функция ПредопределенныйЭлементНеамортизируемоеИмущество() Экспорт
	
	СтатьяЗатрат = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(
		"Справочник.СтатьиЗатрат.НеамортизируемоеИмущество");
	
	Если СтатьяЗатрат = Неопределено Тогда
	
		УстановитьПривилегированныйРежим(Истина);
		
		ЭлементСправочника = Справочники.СтатьиЗатрат.СоздатьЭлемент();
		ЭлементСправочника.Наименование = НСтр("ru = 'Неамортизируемое имущество'");
		ЭлементСправочника.ИмяПредопределенныхДанных = "НеамортизируемоеИмущество";
		ЭлементСправочника.ВидДеятельностиДляНалоговогоУчетаЗатрат = 
			Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты;
		ЭлементСправочника.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.МатериальныеРасходы;
		ЭлементСправочника.Записать();
		
		ОбновитьПовторноИспользуемыеЗначения();
		
		СтатьяЗатрат = ЭлементСправочника.Ссылка;
		
	КонецЕсли;
	
	Возврат СтатьяЗатрат;
	
КонецФункции

#КонецЕсли
