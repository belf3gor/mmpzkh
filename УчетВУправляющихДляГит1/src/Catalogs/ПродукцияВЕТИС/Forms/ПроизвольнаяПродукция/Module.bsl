
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.Справочники.ПродукцияВЕТИС) Тогда
		ВызватьИсключение Нстр("ru='Нет прав на просмотр справочника продукции'");
	КонецЕсли;
	
	ТолькоПросмотр = НЕ ПравоДоступа("Добавление", Метаданные.Справочники.ПродукцияВЕТИС);
	
	Элементы.ОписаниеПродукции.Доступность = Не ТолькоПросмотр;
	
	ТипПродукции = Параметры.ТипПродукции;
	Продукция    = Параметры.Продукция;
	ВидПродукции = Параметры.ВидПродукции;
	
	Если Параметры.Свойство("Ключ") Тогда
		НаименованиеПродукции = Параметры.Ключ;
		ОбновитьИнформациюОСопоставлении();
	Иначе
		Элементы.Сопоставлено.Видимость = Ложь;
	КонецЕсли;
	ЦветГиперссылки = ЦветаСтиля.ЦветГиперссылкиГосИС;
	
	ЗаполнитьРеквизитыПоНаименованиюПродукции();
	
	Если Не ЗначениеЗаполнено(ФасовкаУпаковка)
		И Не ЗначениеЗаполнено(ФасовкаКоличествоУпаковок)
		И Не ЗначениеЗаполнено(ФасовкаКоличествоЕдиницВУпаковке)
		И Не ЗначениеЗаполнено(ФасовкаЕдиницаИзмерения) Тогда
		
		Элементы.ГруппаФасовка.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ФасовкаКоличествоУпаковок)
		Или ЗначениеЗаполнено(ФасовкаКоличествоЕдиницВУпаковке)
		Или ЗначениеЗаполнено(ФасовкаЕдиницаИзмерения) Тогда
		
		ПроверяемыеРеквизиты.Добавить("ФасовкаУпаковка");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ОписаниеПродукцииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	Если НавигационнаяСсылкаФорматированнойСтроки = "ИзменитьВидПродукции" Тогда
		ОткрытьФормыВыбораВидаПродукции();
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПродукция" Тогда
		ПоказатьЗначение(,Продукция);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьВидПродукции" Тогда
		ПоказатьЗначение(,ВидПродукции);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормыВыбораВидаПродукции()
	ПараметрыФормыКлассификатора = Новый Структура("ВыборВидаПродукции", Истина);
	ОткрытьФорму("Справочник.ПродукцияВЕТИС.ФормаВыбораГруппы",
		ПараметрыФормыКлассификатора,ЭтаФорма,,,,
		Новый ОписаниеОповещения("КлассификаторПродукцииПриЗавершенииВыбора",ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторПродукцииПриЗавершенииВыбора(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КлассификаторПродукцииПриЗавершенииВыбораНаСервере(Результат);
	
	ВывестиИнформациюОВидеТипеПродукции(ЭтаФорма);
	ОчиститьИнформациюОСопоставлении();
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставленоОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ Модифицированность И НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьСоответствиеНоменклатурыВЕТИС" Тогда
		
		ИнтеграцияВЕТИСКлиент.ОткрытьФормуСопоставленияПродукцииВЕТИС(
			НаименованиеПродукции,
			ЭтотОбъект);
			
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	ОчиститьИнформациюОСопоставлении();
КонецПроцедуры

&НаКлиенте
Процедура GTINПриИзменении(Элемент)
	ОчиститьИнформациюОСопоставлении();
КонецПроцедуры

&НаКлиенте
Процедура АртикулПриИзменении(Элемент)
	ОчиститьИнформациюОСопоставлении();
КонецПроцедуры

&НаКлиенте
Процедура ФасовкаУпаковкаПриИзменении(Элемент)
	
	ОчиститьИнформациюОСопоставлении();
	ФасовкаУпаковкаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ФасовкаКоличествоУпаковокПриИзменении(Элемент)
	ОчиститьИнформациюОСопоставлении();
КонецПроцедуры

&НаКлиенте
Процедура ФасовкаКоличествоЕдиницВУпаковкеПриИзменении(Элемент)
	ОчиститьИнформациюОСопоставлении();
КонецПроцедуры

&НаКлиенте
Процедура ФасовкаЕдиницаИзмеренияПриИзменении(Элемент)
	
	ОчиститьИнформациюОСопоставлении();
	
	ФасовкаЕдиницаИзмеренияПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда
		НаименованиеПродукции = НайтиСоздатьПродукциюСХешем();
		Оповестить("Запись_ПродукцияВЕТИС", НаименованиеПродукции);
		ОповеститьОВыборе(НаименованиеПродукции);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура КлассификаторПродукцииПриЗавершенииВыбораНаСервере(Результат)
	
	ТипПродукции    = Результат.ТипПродукции;
	ТипПродукцииКод = ПродукцияВЕТИСВызовСервера.ТипПродукции(ТипПродукции);
	
	ВидПродукции = Результат.ВидПродукции;
	Если ЗначениеЗаполнено(ВидПродукции) Тогда
		ВидПродукцииGUID = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидПродукции, "Идентификатор");
	КонецЕсли;
	
	Продукция = Результат.Продукция;
	Если ЗначениеЗаполнено(Продукция) Тогда
		ПродукцияGUID = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Продукция, "Идентификатор");
	КонецЕсли;
	
	ЗаполнитьСписокВыбораДоступныхЕдиницИзмерения();
	
КонецПроцедуры

&НаСервере
Процедура ФасовкаУпаковкаПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(ФасовкаЕдиницаИзмерения) Тогда
		ФасовкаУпаковкаGUID = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФасовкаУпаковка, "Идентификатор");
	Иначе
		ФасовкаУпаковкаGUID = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФасовкаЕдиницаИзмеренияПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(ФасовкаЕдиницаИзмерения) Тогда
		ФасовкаЕдиницаИзмеренияGUID = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФасовкаЕдиницаИзмерения, "Идентификатор");
	Иначе
		ФасовкаЕдиницаИзмеренияGUID = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораДоступныхЕдиницИзмерения()
	
	ДоступныеЕдиницыИзменения = Новый Массив;
	Если ЗначениеЗаполнено(ВидПродукции) Тогда
		ДоступныеЕдиницыИзменения = Новый Массив(ИнтеграцияВЕТИСПовтИсп.ДоступныеЕдиницыИзменения(ВидПродукции));
	КонецЕсли;
	
	Элементы.ФасовкаЕдиницаИзмерения.СписокВыбора.ЗагрузитьЗначения(ДоступныеЕдиницыИзменения);
	Если ДоступныеЕдиницыИзменения.Количество() = 1 Тогда
		ФасовкаЕдиницаИзмерения = ДоступныеЕдиницыИзменения[0];
		ФасовкаЕдиницаИзмеренияGUID = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФасовкаЕдиницаИзмерения, "Идентификатор");
	ИначеЕсли ДоступныеЕдиницыИзменения.Найти(ФасовкаЕдиницаИзмерения) = Неопределено Тогда
		ФасовкаЕдиницаИзмерения = Неопределено;
		ФасовкаЕдиницаИзмеренияGUID = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПоНаименованиюПродукции()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПродукцияВЕТИС.Наименование                     КАК Наименование,
	|	ПродукцияВЕТИС.ТипПродукции                     КАК ТипПродукции,
	|	ПродукцияВЕТИС.Продукция                        КАК Продукция,
	|	ПродукцияВЕТИС.Продукция.Идентификатор          КАК ПродукцияGUID,
	|	ПродукцияВЕТИС.ВидПродукции                     КАК ВидПродукции,
	|	ПродукцияВЕТИС.ВидПродукции.Идентификатор       КАК ВидПродукцииGUID,
	|	ПродукцияВЕТИС.GTIN                             КАК GTIN,
	|	ПродукцияВЕТИС.Артикул                          КАК Артикул,
	|	ПродукцияВЕТИС.ФасовкаЕдиницаИзмерения               КАК ФасовкаЕдиницаИзмерения,
	|	ПродукцияВЕТИС.ФасовкаЕдиницаИзмерения.Идентификатор КАК ФасовкаЕдиницаИзмеренияGUID,
	|	ПродукцияВЕТИС.ФасовкаКоличествоЕдиницВУпаковке      КАК ФасовкаКоличествоЕдиницВУпаковке,
	|	ПродукцияВЕТИС.ФасовкаУпаковка                       КАК ФасовкаУпаковка,
	|	ПродукцияВЕТИС.ФасовкаУпаковка.Идентификатор         КАК ФасовкаУпаковкаGUID,
	|	ПродукцияВЕТИС.ФасовкаКоличествоУпаковок             КАК ФасовкаКоличествоУпаковок
	|ИЗ
	|	Справочник.ПродукцияВЕТИС КАК ПродукцияВЕТИС
	|ГДЕ
	|	ПродукцияВЕТИС.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", НаименованиеПродукции);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ТипПродукции     = Выборка.ТипПродукции;
		ТипПродукцииКод  = ПродукцияВЕТИСВызовСервера.ТипПродукции(Выборка.ТипПродукции);
		Продукция        = Выборка.Продукция;
		ПродукцияGUID    = Выборка.ПродукцияGUID;
		ВидПродукции     = Выборка.ВидПродукции;
		ВидПродукцииGUID = Выборка.ВидПродукцииGUID;
		
		Наименование = Выборка.Наименование;
		GTIN         = Выборка.GTIN;
		Артикул      = Выборка.Артикул;
		
		ФасовкаКоличествоЕдиницВУпаковке = Выборка.ФасовкаКоличествоЕдиницВУпаковке;
		ФасовкаКоличествоУпаковок        = Выборка.ФасовкаКоличествоУпаковок;
		ФасовкаЕдиницаИзмерения          = Выборка.ФасовкаЕдиницаИзмерения;
		ФасовкаЕдиницаИзмеренияGUID      = Выборка.ФасовкаЕдиницаИзмеренияGUID;
		ФасовкаУпаковка                  = Выборка.ФасовкаУпаковка;
		ФасовкаУпаковкаGUID              = Выборка.ФасовкаУпаковкаGUID;
		
	КонецЕсли;
	
	ЗаполнитьСписокВыбораДоступныхЕдиницИзмерения();
	ВывестиИнформациюОВидеТипеПродукции(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция НайтиСоздатьПродукциюСХешем()
	
	ПродукцияСсылка = ИнтеграцияВЕТИС.НайтиСоздатьПродукциюСХешем(ДанныеПродукции(),
		ТипПродукцииКод,
		ПродукцияGUID,
		ВидПродукцииGUID,
		ФасовкаУпаковкаGUID,
		ФасовкаЕдиницаИзмеренияGUID);
	
	Возврат ПродукцияСсылка
	
КонецФункции

&НаСервере
Функция ДанныеПродукции()
	
	Данные = ИнтеграцияВЕТИСКлиентСервер.СтруктураДанныеПродукции();
	ЗаполнитьЗначенияСвойств(Данные, ЭтаФорма);
	Возврат Данные
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ВывестиИнформациюОВидеТипеПродукции(Форма)
	
	ЦветГиперссылки = Форма.ЦветГиперссылки;
	
	Если ЗначениеЗаполнено(Форма.ТипПродукции) Тогда
		ОписаниеПродукции = Новый ФорматированнаяСтрока(Строка(Форма.ТипПродукции) + " > ");
		ОписаниеПродукцииПодсказка = Строка(Форма.ТипПродукции) ;
		
		Если ЗначениеЗаполнено(Форма.Продукция) Тогда
			СтрокаПродукция = Строка(Форма.Продукция);
			ДлиннаяСтрока = СтрДлина(СтрокаПродукция)>30;
			СтрокаСсылка = Новый ФорматированнаяСтрока(
					Лев(СтрокаПродукция,30),
					Новый Шрифт(,,,,Истина),
					ЦветГиперссылки,,
					"ОткрытьПродукция");
			ОписаниеПродукции = Новый ФорматированнаяСтрока(ОписаниеПродукции, СтрокаСсылка, ?(ДлиннаяСтрока,"...",""), " > ");
			ОписаниеПродукцииПодсказка = ОписаниеПродукцииПодсказка + " > " + СтрокаПродукция;
		КонецЕсли;
		Если ЗначениеЗаполнено(Форма.ВидПродукции) Тогда
			СтрокаВидПродукции = Строка(Форма.ВидПродукции);
			ДлиннаяСтрока = СтрДлина(СтрокаВидПродукции)>30;
			СтрокаСсылка = Новый ФорматированнаяСтрока(
					Лев(СтрокаВидПродукции,30),
					Новый Шрифт(,,,,Истина),
					ЦветГиперссылки,,
					"ОткрытьВидПродукции");
			ОписаниеПродукции = Новый ФорматированнаяСтрока(ОписаниеПродукции, СтрокаСсылка, ?(ДлиннаяСтрока,"...",""), "   ");
			ОписаниеПродукцииПодсказка = ОписаниеПродукцииПодсказка + " > " + СтрокаВидПродукции;
		КонецЕсли;
		
		СтрокаСсылка = Новый ФорматированнаяСтрока(
			НСтр("ru='(изменить)'"),
			Новый Шрифт(,,,,Истина),
			ЦветГиперссылки,,
			"ИзменитьВидПродукции");
		Форма.ОписаниеПродукции = Новый ФорматированнаяСтрока(ОписаниеПродукции, СтрокаСсылка, "   ");
	Иначе
		
		Форма.ОписаниеПродукции = Новый ФорматированнаяСтрока(
			НСтр("ru='Выбрать вид продукции'"),
			Новый Шрифт(,,,,Истина),
			ЦветГиперссылки,,
			"ИзменитьВидПродукции");
		
	КонецЕсли;
	
	Форма.Элементы.ОписаниеПродукции.Подсказка = ОписаниеПродукцииПодсказка;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюОСопоставлении()
	
	Если НЕ ЗначениеЗаполнено(НаименованиеПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = Справочники.ПродукцияВЕТИС.ТекстЗапросаИнформацияОСопоставлении();
	Запрос.УстановитьПараметр("Продукция", НаименованиеПродукции);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Количество = 1 Тогда
			
			Сопоставлено = Новый ФорматированнаяСтрока(
				ИнтеграцияИС.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
				Новый Шрифт(,,,,Истина),
				ЦветаСтиля.ЦветГиперссылкиГосИС,,
				"ОткрытьСоответствиеНоменклатурыВЕТИС");
			
		ИначеЕсли Выборка.Количество > 1 Тогда
			
			Сопоставлено = Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru = '%1 ( + еще %2...)'"), Выборка.НоменклатураПредставление, Выборка.Количество - 1),
				Новый Шрифт(,,,,Истина),
				ЦветаСтиля.ЦветГиперссылкиГосИС,,
				"ОткрытьСоответствиеНоменклатурыВЕТИС");
			
		Иначе
			
			Сопоставлено = Новый ФорматированнаяСтрока(
				НСтр("ru = '<Не сопоставлено>'"),
				Новый Шрифт(,,,,Истина),
				ЦветаСтиля.СтатусОбработкиОшибкаПередачиГосИС,,
				"ОткрытьСоответствиеНоменклатурыВЕТИС");
			
		КонецЕсли;
	Иначе
		Элементы.Сопоставлено.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИнформациюОСопоставлении()
	Сопоставлено = Новый ФорматированнаяСтрока(НСтр("ru = '<Не сопоставлено>'"));
КонецПроцедуры

#КонецОбласти