#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает реквизиты справочника, которые образуют естественный ключ
//  для элементов справочника.
//
// Возвращаемое значение: Массив(Строка) - массив имен реквизитов, образующих
//  естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив();
	
	Результат.Добавить("Код");
	
	Возврат Результат;
	
КонецФункции

// Возвращает список кодов видов деятельности ПСН по водным транспортным средствам
//
// Возвращаемое значение:
//   Массив - значения с типом строка(2).
//
Функция КодыВидовДеятельностиВодныйТранспорт() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Классификатор.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК Классификатор
	|ГДЕ
	|	Классификатор.ЭтоВодныйТранспорт");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	
КонецФункции

// Возвращает список кодов видов деятельности ПСН по объектам,
// используется для заполнения Листа В в заявлении на получение патента.
//
// Возвращаемое значение:
//   Массив - значения с типом строка(2).
//
Функция КодыВидовДеятельностиОбъекты() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Классификатор.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК Классификатор
	|ГДЕ
	|	Классификатор.УказатьОбъекты");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	
КонецФункции

// Возвращает список кодов видов деятельности ПСН по транспортным средствам, предназначенным для перевозки грузов.
//
// Возвращаемое значение:
//   Массив - значения с типом строка(2).
//
Функция КодыВидовДеятельностиПеревозкаГрузов() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Классификатор.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК Классификатор
	|ГДЕ
	|	Классификатор.ЭтоПеревозкаГрузов");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	
КонецФункции

// Возвращает список кодов видов деятельности ПСН, для которых
// размер потенциально возможного к получению годового дохода установлен в зависимости:
//   - от площади объекта
//   - от количества транспортных средств
//   - от количество обособленных объектов
//
// Возвращаемое значение:
//   Массив - значения с типом строка(2).
//
Функция КодыВидовДеятельностиПрочиеПоказатели() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Классификатор.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК Классификатор
	|ГДЕ
	|	Классификатор.ДоходНеЗависитОтКоличестваСотрудников");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	
КонецФункции

// Возвращает список кодов видов деятельности ПСН по транспортным средствам,
// используется для заполнения Листа Б в заявлении на получение патента.
//
// Возвращаемое значение:
//   Массив - значения с типом строка(2).
//
Функция КодыВидовДеятельностиТранспортныеСредства() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Классификатор.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК Классификатор
	|ГДЕ
	|	Классификатор.ЭтоПеревозкаГрузов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Классификатор.Код
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК Классификатор
	|ГДЕ
	|	Классификатор.ЭтоПеревозкаПассажиров");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	
КонецФункции

// Возвращает код типа транспортного средства
//
// Параметры:
//   КодВидаДеятельности - Строка(2)
//
// Возвращаемое значение:
//   Строка(2)
//
Функция КодТипаТранспортногоСредства(КодВидаДеятельности) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КлассификаторВидовПредпринимательскойДеятельностиПСН.КодТипаТС КАК КодТипаТС
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК КлассификаторВидовПредпринимательскойДеятельностиПСН
	|ГДЕ
	|	КлассификаторВидовПредпринимательскойДеятельностиПСН.Код = &Код");
	
	Запрос.УстановитьПараметр("Код", КодВидаДеятельности);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	КодТипаТС = "";
	Если Не РезультатЗапроса.Пустой() Тогда
		Отбор = РезультатЗапроса.Выбрать();
		Отбор.Следующий();
		КодТипаТС = Отбор.КодТипаТС;
	КонецЕсли;
	
	Возврат КодТипаТС;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ДанныеВыбораПриВводеПоСтроке(Параметры.СтрокаПоиска);
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Код");
	Поля.Добавить("Наименование");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = СтрШаблон("%1 - %2", Данные.Код, Данные.Наименование);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик обновления
//
Процедура Обновить() Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // В подчиненных узлах РИБ не выполняется
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеКлассификатора.Ссылка КАК Ссылка,
	|	ДанныеКлассификатора.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК ДанныеКлассификатора");
	
	ТаблицаСправочника = Запрос.Выполнить().Выгрузить();
	ТаблицаСправочника.Индексы.Добавить("Код");
	
	Макет = Справочники.КлассификаторВидовПредпринимательскойДеятельностиПСН.ПолучитьМакет("КлассификаторВидовПредпринимательскойДеятельностиПСН");
	ТаблицаКлассификатора = ОбщегоНазначения.ЗначениеИзСтрокиXML(Макет.ПолучитьТекст());
	
	Для Каждого СтрокаКлассификатора Из ТаблицаКлассификатора Цикл
		
		НайденнаяСтрока = ТаблицаСправочника.Найти(СтрокаКлассификатора.Код, "Код");
		
		Если НайденнаяСтрока = Неопределено Тогда
			Объект = Справочники.КлассификаторВидовПредпринимательскойДеятельностиПСН.СоздатьЭлемент();
		Иначе
			Объект = НайденнаяСтрока.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Объект, СтрокаКлассификатора);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект, Истина);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеВыбораПриВводеПоСтроке(СтрокаПоиска)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	КВПДП.Ссылка КАК Ссылка,
	|	КВПДП.Представление КАК Представление
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК КВПДП
	|ГДЕ
	|	КВПДП.Код ПОДОБНО &СтрокаПоиска
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 10
	|	КВПДП.Ссылка,
	|	КВПДП.Представление
	|ИЗ
	|	Справочник.КлассификаторВидовПредпринимательскойДеятельностиПСН КАК КВПДП
	|ГДЕ
	|	КВПДП.НаименованиеПолное ПОДОБНО &СтрокаПоиска");
	
	Запрос.УстановитьПараметр("СтрокаПоиска", СтрШаблон("%%%1%%", СокрЛП(СтрокаПоиска)));
	Отбор = Запрос.Выполнить().Выбрать();
	
	СписокРезультат = Новый СписокЗначений;
	Пока Отбор.Следующий() Цикл
		Представление = ОбщегоНазначенияБП.ПодсветитьСтрокуПоиска(Отбор.Представление, СтрокаПоиска);
		СписокРезультат.Добавить(Отбор.Ссылка, Представление);
	КонецЦикла;
	
	Возврат СписокРезультат;
	
КонецФункции

#КонецОбласти

#КонецЕсли