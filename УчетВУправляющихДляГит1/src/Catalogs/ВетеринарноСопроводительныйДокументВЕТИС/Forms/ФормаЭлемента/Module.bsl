
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриСозданииЧтенииНаСервере();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Для Каждого СтрокаТЧТекущийОбъект Из ТекущийОбъект.Маршрут Цикл
		СтрокаТЧОбъект = Объект.Маршрут[ТекущийОбъект.Маршрут.Индекс(СтрокаТЧТекущийОбъект)];
		СтрокаТЧОбъект.ДанныеАдресаСтруктура = СтрокаТЧТекущийОбъект.ДанныеАдреса.Получить();
	КонецЦикла;
	
	ПриСозданииЧтенииНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Маршрут.Очистить();
	
	Для Каждого СтрокаТЧОбъект Из Объект.Маршрут Цикл
		
		СтрокаТЧТекущийОбъект = ТекущийОбъект.Маршрут.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧТекущийОбъект, СтрокаТЧОбъект);
		СтрокаТЧТекущийОбъект.ДанныеАдреса = Новый ХранилищеЗначения(СтрокаТЧОбъект.ДанныеАдресаСтруктура);
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Объект.Идентификатор) Тогда
		// Бумажный ВСД.
		Если ТекущийОбъект.ИсторияСтатусов.Количество() > 0 Тогда
			ТекущийОбъект.ИсторияСтатусов.Очистить();
		КонецЕсли;
		СтрокаТабличнойЧасти = ТекущийОбъект.ИсторияСтатусов.Добавить();
		СтрокаТабличнойЧасти.ФИО                     = ИсторияСтатусовФИО;
		СтрокаТабличнойЧасти.Должность               = ИсторияСтатусовДолжность;
		СтрокаТабличнойЧасти.НаименованиеОрганизации = ИсторияСтатусовНаименованиеОрганизации;
		СтрокаТабличнойЧасти.ДатаИзменения           = Объект.Дата;
		СтрокаТабличнойЧасти.Статус                  = Перечисления.СтатусыВетеринарныхДокументовВЕТИС.Оформлен;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого СтрокаТЧТекущийОбъект Из ТекущийОбъект.Маршрут Цикл
		СтрокаТЧОбъект = Объект.Маршрут[ТекущийОбъект.Маршрут.Индекс(СтрокаТЧТекущийОбъект)];
		СтрокаТЧОбъект.ДанныеАдресаСтруктура = СтрокаТЧТекущийОбъект.ДанныеАдреса.Получить();
	КонецЦикла;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "Статус");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ИнтеграцияВЕТИСКлиент.ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ИнтеграцияИСКлиентСервер.ИмяСобытияИзмененоСостояние(ИнтеграцияВЕТИСКлиентСервер.ИмяПодсистемы())
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		Если Параметр.Свойство("ОбъектИзменен") И Параметр.ОбъектИзменен Тогда
			
			Прочитать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = ИнтеграцияИСКлиентСервер.ИмяСобытияВыполненОбмен(ИнтеграцияВЕТИСКлиентСервер.ИмяПодсистемы())
	 И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусВЕТИСВФормахДокументов)) Тогда
		
		Прочитать();
		
	КонецЕсли;
	
	СобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Электронный Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ИсторияСтатусовФИО");
		МассивНепроверяемыхРеквизитов.Добавить("ИсторияСтатусовДолжность");
		МассивНепроверяемыхРеквизитов.Добавить("ИсторияСтатусовНаименованиеОрганизации");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПроизводстваОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВводПериода(НавигационнаяСсылкаФорматированнойСтроки);
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВводПериода(НавигационнаяСсылкаФорматированнойСтроки);
КонецПроцедуры

&НаСервере
Процедура ПродукцияПриИзмененииНаСервере()
	
	ТребуетсяТипПроисхождения = ТребуетсяУказаниеТипаПроисхождения(Объект.Продукция);
	ОчиститьТипПроисхожденияПриНеобходимости(ЭтотОбъект);
	
	СписокЕдиницИзмерения = ДоступныеЕдиницыИзменения(Объект.Продукция);
	
	Если СписокЕдиницИзмерения.Найти(Объект.ЕдиницаИзмеренияВЕТИС) = Неопределено Тогда
		Если СписокЕдиницИзмерения.Количество() Тогда
			Объект.ЕдиницаИзмеренияВЕТИС = СписокЕдиницИзмерения[0];
		Иначе
			Объект.ЕдиницаИзмеренияВЕТИС = Неопределено;
		КонецЕсли;
	КонецЕсли;

	Элементы.ЕдиницаИзмеренияВЕТИС.СписокВыбора.ЗагрузитьЗначения(СписокЕдиницИзмерения);

	ДоступныеФорматыДат = ОбновитьДоступныеФорматыДат(Объект.Продукция);
	ДатаПроизводстваДоступнаяТочностьЗаполнения.ЗагрузитьЗначения(ДоступныеФорматыДат.ДатаПроизводстваДоступнаяТочностьЗаполнения);
	СрокГодностиДоступнаяТочностьЗаполнения.ЗагрузитьЗначения(ДоступныеФорматыДат.СрокГодностиДоступнаяТочностьЗаполнения);
	
	ТекущаяТочностьДоступна =
		ДатаПроизводстваДоступнаяТочностьЗаполнения.НайтиПоЗначению(Объект.ДатаПроизводстваТочностьЗаполнения);
		
	Если ТекущаяТочностьДоступна = Неопределено Тогда
		Объект.ДатаПроизводстваСтрока             = "";
		Объект.ДатаПроизводстваТочностьЗаполнения = Неопределено;
		Объект.ДатаПроизводстваНачалоПериода      = Неопределено;
		Объект.ДатаПроизводстваКонецПериода       = Неопределено;
	КонецЕсли;

	ТекущаяТочностьДоступна =
		СрокГодностиДоступнаяТочностьЗаполнения.НайтиПоЗначению(Объект.СрокГодностиТочностьЗаполнения);
	
	Если ТекущаяТочностьДоступна = Неопределено Тогда
		Объект.СрокГодностиСтрока             = "";
		Объект.СрокГодностиТочностьЗаполнения = Неопределено;
		Объект.СрокГодностиНачалоПериода      = Неопределено;
		Объект.СрокГодностиКонецПериода       = Неопределено;
	КонецЕсли;

	Если ДатаПроизводстваДоступнаяТочностьЗаполнения.Количество() = 1
		И ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(ДатаПроизводстваДоступнаяТочностьЗаполнения[0].Значение) Тогда
		
		Объект.ДатаПроизводстваТочностьЗаполнения = ДатаПроизводстваДоступнаяТочностьЗаполнения[0].Значение;
	КонецЕсли;
	
	Если ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(Объект.ДатаПроизводстваТочностьЗаполнения) Тогда
		
		Объект.ДатаПроизводстваСтрока             = "";
		Объект.ДатаПроизводстваНачалоПериода      = Неопределено;
		Объект.ДатаПроизводстваКонецПериода       = Неопределено;
	КонецЕсли;
	
	Если СрокГодностиДоступнаяТочностьЗаполнения.Количество() = 1
		И ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(СрокГодностиДоступнаяТочностьЗаполнения[0].Значение) Тогда
		
		Объект.СрокГодностиТочностьЗаполнения = СрокГодностиДоступнаяТочностьЗаполнения[0].Значение;
	КонецЕсли;
	
	Если ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(Объект.СрокГодностиТочностьЗаполнения) Тогда
		
		Объект.СрокГодностиСтрока             = "";
		Объект.СрокГодностиНачалоПериода      = Неопределено;
		Объект.СрокГодностиКонецПериода       = Неопределено;
	КонецЕсли;
	
	Объект.СкоропортящаясяПродукция   = Ложь;
	Объект.НизкокачественнаяПродукция = Ложь;

	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "Продукция,Период,ЛабораторныеИсследования");

КонецПроцедуры // ПродукцияПриИзмененииНаСервере() 

&НаКлиенте
Процедура ПродукцияПриИзменении(Элемент)

	ПродукцияПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПродукцияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение.Пустая() Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
					"ОткрытьФормуПроизвольнаяПродукцияЗавершение", 
					ЭтотОбъект);
					
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Объект.Продукция);
		
		ОткрытьФорму("Справочник.ПродукцияВЕТИС.Форма.ПроизвольнаяПродукция",
			ПараметрыФормы,
			ЭтотОбъект,,,,
			ОписаниеОповещения);
			
		СтандартнаяОбработка = Ложь;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкоропортящаясяПродукцияПриИзменении(Элемент)
	
	Если Объект.СкоропортящаясяПродукция Тогда
		ТочностьЗаполнение = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ");
	Иначе
		ТочностьЗаполнение = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ");
	КонецЕсли;
	
	Объект.ДатаПроизводстваТочностьЗаполнения = ТочностьЗаполнение;
	Объект.СрокГодностиТочностьЗаполнения     = ТочностьЗаполнение;
	
	ДоступныеФорматы = ОбновитьДоступныеФорматыДат(Объект.Продукция);
	ДатаПроизводстваДоступнаяТочностьЗаполнения.ЗагрузитьЗначения(ДоступныеФорматы.ДатаПроизводстваДоступнаяТочностьЗаполнения);
	СрокГодностиДоступнаяТочностьЗаполнения.ЗагрузитьЗначения(ДоступныеФорматы.СрокГодностиДоступнаяТочностьЗаполнения);
	
	ЗаполнитьПредставлениеПериодовПоСтроке(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСвязанныеДокументыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = ИнтеграцияВЕТИСКлиентСервер.ПараметрыФормыРедактированияСвязанныхДокументов(ТипЗнч(Объект.Ссылка));
	ПараметрыФормы.ТаблицаСвязанныхДокументов = Объект.СвязанныеДокументы;
	ПараметрыФормы.ТолькоПросмотр = ТолькоПросмотр;
	
	ДополнительныеПараметры = Новый Структура("ИмяТЧ", "СвязанныеДокументы");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
				"ОткрытьФормуРедактированияТабличнойЧастиЗавершение",
				ЭтотОбъект,
				ДополнительныеПараметры);
				
	ОткрытьФорму(
			"ОбщаяФорма.СвязанныеДокументыВЕТИС", 
			ПараметрыФормы, 
			ЭтотОбъект,,,, 
			ОписаниеОповещения, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПроизводителиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуРедактированияТабличнойЧасти(
		НавигационнаяСсылкаФорматированнойСтроки,
		"ОбщаяФорма.ПроизводителиВЕТИС");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПроизводственныеПартииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуРедактированияТабличнойЧасти(
		"ПроизводственныеПартии",
		"ОбщаяФорма.ПроизводственныеПартииВЕТИС");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьУпаковкиШтрихкодыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	Параметрыформы.Вставить("Упаковки", Объект.УпаковкиВЕТИС);
	Параметрыформы.Вставить("ШтрихкодыУпаковок", Объект.ШтрихкодыУпаковок);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НадписьУпаковкиШтрихкодыНажатиеЗавершение",ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.УпаковкиШтрихкодыВЕТИС", 
			ПараметрыФормы, 
			ЭтотОбъект,,,, 
			ОписаниеОповещения, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьТранспортноеСредствоОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РежимРаботыФормы = Новый Структура("ВидПунктаМаршрута");
	РежимРаботыФормы.ВидПунктаМаршрута = Новый Структура("Видимость", Ложь);
	
	ПараметрыФормы = ИнтеграцияВЕТИСКлиентСервер.СтруктураДанныхПунктаМаршрута();
	Если Объект.Маршрут.Количество() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыФормы,
			Объект.Маршрут[0],
			"ТипТранспорта,НомерТранспортногоСредства,НомерАвтомобильногоПрицепа,НомерАвтомобильногоКонтейнера");
	КонецЕсли;
	ПараметрыФормы.Вставить("РежимРаботыФормы", РежимРаботыФормы);
	ПараметрыФормы.Вставить("ТолькоПросмотр"  , ТолькоПросмотр);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
				"НадписьТранспортноеСредствоОбработкаНавигационнойСсылкиЗавершение", 
				ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ПунктМаршрутаВЕТИС", ПараметрыФормы, ЭтаФорма,,,,ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПунктыМаршрутаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуРедактированияПунктовМаршрута();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьИсследованияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ВетеринарныеМероприятия" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("ВетеринарноСопроводительныйДокумент", Объект.Ссылка);
		
		ОткрытьФорму(
			"Справочник.ВетеринарноСопроводительныйДокументВЕТИС.Форма.ВетеринарныеМероприятия",
			ПараметрыОткрытияФормы,
			ЭтотОбъект);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЛабораторныеИсследования" Тогда
		
		ОткрытьФормуРедактированияТабличнойЧасти(
			НавигационнаяСсылкаФорматированнойСтроки,
			"Справочник.ВетеринарноСопроводительныйДокументВЕТИС.Форма.ЛабораторныеИсследования");
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "Иммунизация" Тогда
		
		ОткрытьФормуРедактированияТабличнойЧасти(
			НавигационнаяСсылкаФорматированнойСтроки,
			"Справочник.ВетеринарноСопроводительныйДокументВЕТИС.Форма.Иммунизация");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНахожденияЖивотныхНаТерриторииТСПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ПериодНахожденияТС");
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительХозяйствующийСубъектПриИзменении(Элемент)
	
	ПриИзмененииГрузоотправителя();
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ГрузоотправительХозяйствующийСубъект,ГрузоотправительПредприятие,Маршрут");
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительПредприятиеПриИзменении(Элемент)
	
	ПриИзмененииГрузоотправителя();
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ГрузоотправительПредприятие,Маршрут");
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательХозяйствующийСубъектПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ГрузополучательХозяйствующийСубъект,Маршрут");
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПредприятиеПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ГрузополучательПредприятие,Маршрут");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Аннулировать(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВетеринарноСопроводительныйДокумент", Объект.Ссылка);
	ПараметрыФормы.Вставить("ХозяйствующийСубъект",                Объект.ГрузоотправительХозяйствующийСубъект);
	ПараметрыФормы.Вставить("Предприятие",                         Объект.ГрузоотправительПредприятие);
	ПараметрыФормы.Вставить("Идентификатор",                       Объект.Идентификатор);
	
	ОткрытьФорму("Справочник.ВетеринарноСопроводительныйДокументВЕТИС.Форма.АннулироватьДокумент",
		ПараметрыФормы,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЧерезБраузер(Команда)
	
	Если ЗначениеЗаполнено(Объект.Идентификатор)Тогда 
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(ИнтеграцияВЕТИСКлиентСервер.ПутьКСерверуСИнформациейПоВСД()+Объект.Идентификатор);
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Идентификатор документа не заполнен!'"),,,"Объект.Идентификатор");
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗапроситьВСДПоИдентификатору(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ХозяйствующийСубъект", Объект.ГрузополучательХозяйствующийСубъект);
	ПараметрыОткрытия.Вставить("Предприятие",          Объект.ГрузополучательПредприятие);
	ПараметрыОткрытия.Вставить("Идентификатор",        Объект.Идентификатор);
	
	ОткрытьФорму(
		"Справочник.ВетеринарноСопроводительныйДокументВЕТИС.Форма.ЗапросВСД",
		ПараметрыОткрытия,
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Погасить(Команда)
	
	ОткрытьФорму("Документ.ВходящаяТранспортнаяОперацияВЕТИС.ФормаОбъекта",
		Новый Структура("Основание",Объект.Ссылка), ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВводПериода(ВидПериода)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВидПериода", ВидПериода);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбработатьВводПериодаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	Если ВидПериода = "СрокГодности" Тогда
		ИнтеграцияВЕТИСКлиент.ОткрытьФормуРедактированияСрокаГодности(ЭтотОбъект, Объект, ОбработчикОповещения, ТолькоПросмотр, СрокГодностиДоступнаяТочностьЗаполнения);
	Иначе
		ИнтеграцияВЕТИСКлиент.ОткрытьФормуРедактированияДатыПроизводства(ЭтотОбъект, Объект, ОбработчикОповещения, ТолькоПросмотр, ДатаПроизводстваДоступнаяТочностьЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВводПериодаЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "Период");
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПроизвольнаяПродукцияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Продукция = РезультатЗакрытия;
	
	ТребуетсяТипПроисхождения = ТребуетсяУказаниеТипаПроисхождения(Объект.Продукция);
	ОчиститьТипПроисхожденияПриНеобходимости(ЭтотОбъект);
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "Продукция");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьУпаковкиШтрихкодыНажатиеЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Объект.УпаковкиВЕТИС.Очистить();
	Объект.ШтрихкодыУпаковок.Очистить();
	
	Для каждого Строка Из РезультатЗакрытия.Упаковки Цикл
		ЗаполнитьЗначенияСвойств(Объект.УпаковкиВЕТИС.Добавить(), Строка);
	КонецЦикла;
	
	Для каждого Строка Из РезультатЗакрытия.ШтрихкодыУпаковок Цикл
		ЗаполнитьЗначенияСвойств(Объект.ШтрихкодыУпаковок.Добавить(), Строка);
	КонецЦикла;
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "Упаковки");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьТранспортноеСредствоОбработкаНавигационнойСсылкиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Маршрут.Количество() = 0 Тогда
		СтрокаМаршрута = Объект.Маршрут.Добавить();
	Иначе
		СтрокаМаршрута = Объект.Маршрут[0];
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаМаршрута,
		РезультатЗакрытия,
		"ТипТранспорта,НомерТранспортногоСредства,НомерАвтомобильногоПрицепа,НомерАвтомобильногоКонтейнера");
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ТранспортноеСредство");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция АдресВоВременномХранилищеТабличнойЧастиПунктыМаршрута()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Маршрут = ДокументОбъект.Маршрут.Выгрузить();
	Маршрут.Очистить();
	
	Для Каждого СтрокаТЧОбъект Из Объект.Маршрут Цикл
		
		СтрокаТЧ = Маршрут.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТЧОбъект);
		СтрокаТЧ.ДанныеАдреса = Новый ХранилищеЗначения(СтрокаТЧОбъект.ДанныеАдресаСтруктура);
		
	КонецЦикла;
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(
		Маршрут,
		УникальныйИдентификатор);
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПунктыМаршрута(АдресВоВременномХранилище)
	
	Данные = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Объект.Маршрут.Очистить();
	Для Каждого СтрокаТЧ Из Данные Цикл
		
		НоваяСтрока = Объект.Маршрут.Добавить();
		
		НоваяСтрока.Идентификатор         = СтрокаТЧ.Идентификатор;
		НоваяСтрока.Предприятие           = СтрокаТЧ.Предприятие;
		НоваяСтрока.Адрес                 = СтрокаТЧ.Адрес;
		НоваяСтрока.АдресПредставление    = СтрокаТЧ.АдресПредставление;
		НоваяСтрока.ДанныеАдресаСтруктура = СтрокаТЧ.ДанныеАдреса;
		НоваяСтрока.СПерегрузкой          = СтрокаТЧ.СПерегрузкой;
		
		НоваяСтрока.ТипТранспорта                 = СтрокаТЧ.ТипТранспорта;
		НоваяСтрока.НомерТранспортногоСредства    = СтрокаТЧ.НомерТранспортногоСредства;
		НоваяСтрока.НомерАвтомобильногоПрицепа    = СтрокаТЧ.НомерАвтомобильногоПрицепа;
		НоваяСтрока.НомерАвтомобильногоКонтейнера = СтрокаТЧ.НомерАвтомобильногоКонтейнера;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииГрузоотправителя()
	
	Если Объект.Маршрут.Количество() = 0 Тогда
		СтрокаОтправитель = Объект.Маршрут.Добавить();
		СтрокаОтправитель.ТипТранспорта = ПредопределенноеЗначение("Перечисление.ТипыТранспортаВЕТИС.Автомобиль");
	Иначе
		СтрокаОтправитель = Объект.Маршрут[0];
	КонецЕсли;
	СтрокаОтправитель.СПерегрузкой  = Истина;
	СтрокаОтправитель.Предприятие = Объект.ГрузоотправительПредприятие;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированияПунктовМаршрута()
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ТолькоПросмотр",            ТолькоПросмотр);
	ПараметрыОткрытияФормы.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилищеТабличнойЧастиПунктыМаршрута());
	ПараметрыОткрытияФормы.Вставить("БлокироватьПервуюСтроку",   Истина);
	ПараметрыОткрытияФормы.Вставить("ХозяйствующийСубъект",      Объект.ГрузоотправительХозяйствующийСубъект);
	
	ОткрытьФорму(
		"ОбщаяФорма.ПунктыМаршрутаВЕТИС",
		ПараметрыОткрытияФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбработатьРезультатРедактированияПунктовМаршрута", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатРедактированияПунктовМаршрута(АдресВоВременномХранилище, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(АдресВоВременномХранилище) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьПунктыМаршрута(АдресВоВременномХранилище);
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ТранспортноеСредство,Маршрут");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированияТабличнойЧасти(ИмяТЧ, ИмяФормы, ДополнительныеПараметрыФормы = Неопределено)
	
	ПараметрыФормы = Новый Структура(ИмяТЧ, Объект[ИмяТЧ]);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	Если ДополнительныеПараметрыФормы <> Неопределено Тогда
		Для каждого КлючИЗначение Из ДополнительныеПараметрыФормы Цикл
			ПараметрыФормы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ИмяТЧ", ИмяТЧ);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
				"ОткрытьФормуРедактированияТабличнойЧастиЗавершение",
				ЭтотОбъект,
				ДополнительныеПараметры);
	
	ОткрытьФорму(
			ИмяФормы,
			ПараметрыФормы,
			ЭтотОбъект,,,, 
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированияТабличнойЧастиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		
		ИмяТЧ = Неопределено;
		Если ДополнительныеПараметры.Свойство("ИмяТЧ", ИмяТЧ) Тогда
		
			Объект[ИмяТЧ].Очистить();
			
			Для каждого Строка Из РезультатЗакрытия Цикл
				ЗаполнитьЗначенияСвойств(Объект[ИмяТЧ].Добавить(), Строка);
			КонецЦикла;
			
			НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, ИмяТЧ);
			
			Модифицированность = Истина;
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ЗаполнитьСлужебныеРеквизиты();
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизиты()
	
	Электронный = ЗначениеЗаполнено(Объект.Идентификатор);
	
	Если Электронный Тогда
		Представление = Строка(Объект.Тип)
			+ " "
			+ НСтр("ru='электронный ВСД (%1), идентификатор:'");
			
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Представление, НРег(Объект.Статус));
	Иначе
		Представление = НСтр("ru='Бумажный ВСД, серия:'");
	КонецЕсли;
	
	Если Объект.ИсторияСтатусов.Количество() Тогда
		
		СтрокаТабличнойЧасти = Объект.ИсторияСтатусов[Объект.ИсторияСтатусов.Количество()-1];
		
		ИсторияСтатусовФИО                     = СтрокаТабличнойЧасти.ФИО;
		ИсторияСтатусовДолжность               = СтрокаТабличнойЧасти.Должность;
		ИсторияСтатусовНаименованиеОрганизации = СтрокаТабличнойЧасти.НаименованиеОрганизации;
		
	КонецЕсли;
	
	ЦветГиперссылкиОбычный     = ЦветаСтиля.ЦветГиперссылкиГосИС;
	ЦветГиперссылкиОсобыйТекст = ЦветаСтиля.ЦветОсобогоТекста;
	
	ДоступныеФорматы = ОбновитьДоступныеФорматыДат(Объект.Продукция);
	ДатаПроизводстваДоступнаяТочностьЗаполнения.ЗагрузитьЗначения(ДоступныеФорматы.ДатаПроизводстваДоступнаяТочностьЗаполнения);
	СрокГодностиДоступнаяТочностьЗаполнения.ЗагрузитьЗначения(ДоступныеФорматы.СрокГодностиДоступнаяТочностьЗаполнения);
	
	ТребуетсяТипПроисхождения = ТребуетсяУказаниеТипаПроисхождения(Объект.Продукция);
	
	ЗаполнитьПредставлениеПериодовПоСтроке(ЭтаФорма);
	
	Справочники.ПредприятияВЕТИС.ЗаполнитьНомера(Объект.Производители);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТребуетсяУказаниеТипаПроисхождения(Продукция)
	
	Возврат ПродукцияВЕТИСВызовСервера.ТребуетсяУказаниеТипаПроисхождения(Продукция);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОчиститьТипПроисхожденияПриНеобходимости(Форма)
	
	Объект = Форма.Объект;
	
	Если НЕ Форма.ТребуетсяТипПроисхождения И ЗначениеЗаполнено(Объект.ТипПроисхождения) Тогда
		Объект.ТипПроисхождения = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьДоступныеФорматыДат(Продукция)
	
	ДоступныеФорматыДат = ИнтеграцияВЕТИСВызовСервера.СпецификаПродукции(Продукция);
	Возврат Новый Структура("ДатаПроизводстваДоступнаяТочностьЗаполнения, СрокГодностиДоступнаяТочностьЗаполнения",
		ДоступныеФорматыДат.ФорматДатыВыработкиМассивом, ДоступныеФорматыДат.ФорматСрокаГодностиМассивом);
	
КонецФункции

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Если Электронный Тогда
		Элементы.ПредставлениеЭлектронный.Заголовок = Представление;
	Иначе
		Элементы.ПредставлениеБумажный.Заголовок = Представление;
	КонецЕсли;
	
	Элементы.ГруппаЭлектронныйБумажный.ТекущаяСтраница =
		?(Электронный, Элементы.СтраницаЭлектронный, Элементы.СтраницаБумажный);
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	
	Если Электронный Тогда
		ТолькоПросмотр                                                            = Не ОбщегоНазначения.РежимОтладки();
		Элементы.ИсторияСтатусовФИО.АвтоОтметкаНезаполненного                     = Ложь;
		Элементы.ИсторияСтатусовДолжность.АвтоОтметкаНезаполненного               = Ложь;
		Элементы.ИсторияСтатусовНаименованиеОрганизации.АвтоОтметкаНезаполненного = Ложь;
		Элементы.ГрузоотправительХозяйствующийСубъект.АвтоОтметкаНезаполненного   = Ложь;
		Элементы.ГрузоотправительПредприятие.АвтоОтметкаНезаполненного            = Ложь;
		Элементы.ГрузополучательХозяйствующийСубъект.АвтоОтметкаНезаполненного    = Ложь;
		Элементы.ГрузополучательПредприятие.АвтоОтметкаНезаполненного             = Ложь;
	КонецЕсли;
	
	Если Объект.Тип = Перечисления.ТипыВетеринарныхДокументовВЕТИС.Производственный Тогда
		
		Элементы.НадписьСвязанныеДокументы.Видимость = Ложь;
		Элементы.ГруппаМаршрут.Видимость = Ложь;
		Элементы.БлагополучиеМестности.Видимость = Ложь;
		Элементы.Цель.Видимость = Ложь;
		
	КонецЕсли;
	
	Если Объект.Форма = Перечисления.ФормыВетеринарныхДокументовВЕТИС.NOTE4 Тогда
		Элементы.ГруппаМаршрут.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.Продукция.СписокВыбора.Добавить(Справочники.ПродукцияВЕТИС.ПустаяСсылка(), НСтр("ru='<Произвольная>'"));
	Элементы.БлагополучиеМестности.СписокВыбора.Добавить(НСтр("ru='Местность благополучна по заразным болезням животных'"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Электронный = ЗначениеЗаполнено(Объект.Идентификатор);
	ЭтоИмпорт =  Электронный
		И ЗначениеЗаполнено(Объект.ГрузоотправительХозяйствующийСубъект)
		И Объект.ГрузоотправительХозяйствующийСубъект = Объект.ГрузополучательХозяйствующийСубъект
		И Не ЗначениеЗаполнено(Объект.ГрузоотправительПредприятие);
	
	Если СтруктураРеквизитов.Свойство("Период")
		ИЛИ Инициализация Тогда
		
		Для каждого ВидПериода Из СтрРазделить("ДатаПроизводства,СрокГодности",",") Цикл
			
			ПредставлениеПериода = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПериодаВЕТИС(
				Объект[ВидПериода+"ТочностьЗаполнения"],
				Объект[ВидПериода+"НачалоПериода"],
				Объект[ВидПериода+"КонецПериода"],
				Объект[ВидПериода+"Строка"]);
				
				Если ПустаяСтрока(ПредставлениеПериода) Тогда
					Форма["Надпись"+ВидПериода] = Новый ФорматированнаяСтрока(НСтр("ru = 'указать'"),,Форма.ЦветГиперссылкиОсобыйТекст,,ВидПериода);
				Иначе
					Форма["Надпись"+ВидПериода] = Новый ФорматированнаяСтрока(ПредставлениеПериода,,Форма.ЦветГиперссылкиОбычный,,ВидПериода);
				КонецЕсли;
				
		КонецЦикла;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ГрузоотправительХозяйствующийСубъект")
		ИЛИ СтруктураРеквизитов.Свойство("ГрузоотправительПредприятие")
		ИЛИ Инициализация Тогда
		
		ПредставленияГрузоотправителя = ИнтеграцияВЕТИСВызовСервера.ПредставленияСопоставлений(
			Объект.ГрузоотправительХозяйствующийСубъект, Объект.ГрузоотправительПредприятие, "Грузоотправитель");
			
		Форма.НадписьГрузоотправительХозяйствующийСубъект = ПредставленияГрузоотправителя.КонтрагентХозяйствующегоСубъекта.Представление;
		Форма.НадписьГрузоотправительПредприятие = ПредставленияГрузоотправителя.ТорговыйОбъект.Представление;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ГрузополучательХозяйствующийСубъект")
		ИЛИ СтруктураРеквизитов.Свойство("ГрузополучательПредприятие")
		ИЛИ Инициализация Тогда
		
		ПредставленияГрузополучателя = ИнтеграцияВЕТИСВызовСервера.ПредставленияСопоставлений(
			Объект.ГрузополучательХозяйствующийСубъект, Объект.ГрузополучательПредприятие, "Грузополучатель");
			
		Форма.НадписьГрузополучательХозяйствующийСубъект = ПредставленияГрузополучателя.КонтрагентХозяйствующегоСубъекта.Представление;
		Форма.НадписьГрузополучательПредприятие = ПредставленияГрузополучателя.ТорговыйОбъект.Представление;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("Тип")
		ИЛИ Инициализация Тогда
		
		Производственный = Объект.Тип = ПредопределенноеЗначение("Перечисление.ТипыВетеринарныхДокументовВЕТИС.Производственный");
		
		Элементы.ГруппаГрузоотправитель.ОтображатьЗаголовок = НЕ Производственный;
		Элементы.ГруппаГрузополучатель.Видимость = НЕ Производственный;
		Элементы.ГруппаТТН.Видимость = НЕ Производственный;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("Продукция")
		ИЛИ Инициализация Тогда
		
		Форма.ТипЖивыеЖивотные = ИнтеграцияВЕТИСВызовСервера.ПродукцияПринадлежитТипуЖивыеЖивотные(Объект.Продукция);
		ОтображатьСрокГодностиПоТочностиДаты = Истина;
		Если Форма.СрокГодностиДоступнаяТочностьЗаполнения.Количество() = 1 
			И ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(Форма.СрокГодностиДоступнаяТочностьЗаполнения[0].Значение) Тогда
			
			ОтображатьСрокГодностиПоТочностиДаты = Ложь;
		КонецЕсли; 
		Элементы.СрокГодности.Видимость = НЕ Форма.ТипЖивыеЖивотные И ОтображатьСрокГодностиПоТочностиДаты;
		Элементы.НадписьУпаковкиШтрихкоды.Видимость = НЕ Форма.ТипЖивыеЖивотные;
		Элементы.ДатаПроизводства.Заголовок =
			ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПоляДатаПроизводства(Форма.ТипЖивыеЖивотные);
		Элементы.ГруппаЖивотныеНаТерриторииТС.Видимость = Форма.ТипЖивыеЖивотные И ЗначениеЗаполнено(Объект.Идентификатор);
		
		Элементы.ТипПроисхождения.Видимость = Форма.ТребуетсяТипПроисхождения;
		
		Если Инициализация Тогда
			Элементы.ЕдиницаИзмеренияВЕТИС.СписокВыбора.ЗагрузитьЗначения(ДоступныеЕдиницыИзменения(Объект.Продукция));
		Иначе
			
		КонецЕсли;
	
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("СвязанныеДокументы")
		ИЛИ Инициализация Тогда
		
		Количество = Объект.СвязанныеДокументы.Количество();
		
		Форма.НадписьСвязанныеДокументы = НСтр("ru = 'Связанные документы'")
			+ ?(Количество > 0, " ("+Количество+")", "");
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("Производители")
		ИЛИ Инициализация Тогда
		
		ПредставлениеПроизводители = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
			Объект.Производители,
			ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиПроизводителей(?(Форма.Электронный, Неопределено, "")));
			
		Если ПустаяСтрока(ПредставлениеПроизводители) Тогда
			Форма.НадписьПроизводители = Новый ФорматированнаяСтрока(НСтр("ru = 'указать'"),,Форма.ЦветГиперссылкиОсобыйТекст,,"Производители");
		Иначе
			Форма.НадписьПроизводители = Новый ФорматированнаяСтрока(ПредставлениеПроизводители,,Форма.ЦветГиперссылкиОбычный,,"Производители");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ПроизводственныеПартии")
		ИЛИ Инициализация Тогда
		
		Форма.НадписьПроизводственныеПартии = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
			Объект.ПроизводственныеПартии,
			ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиПартий());
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("Упаковки")
		ИЛИ Инициализация Тогда
		
		Параметры = Новый Структура;
		Параметры.Вставить("ПараметрыДляПодстановки", "УпаковкаВЕТИС,КоличествоУпаковокВЕТИС");
		Параметры.Вставить("КоличествоВыводимых", 2);
		Параметры.Вставить("ШаблонСтроки", "%1 (%2)");
		
		Форма.НадписьУпаковкиШтрихкоды = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
			Объект.УпаковкиВЕТИС,
			ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиУпаковок(2));
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ПериодНахожденияТС")
		ИЛИ Инициализация Тогда
		
		Элементы.КоличествоПериодовНахожденияЖивотныхНаТерриторииТС.АвтоОтметкаНезаполненного = 
			Объект.ПериодНахожденияЖивотныхНаТерриторииТС = ПредопределенноеЗначение("Перечисление.ПериодыНахожденияЖивотныхНаТерриторииТСВЕТИС.ЗначениеВМесяцах");
		Элементы.КоличествоПериодовНахожденияЖивотныхНаТерриторииТС.Доступность = 
			Объект.ПериодНахожденияЖивотныхНаТерриторииТС = ПредопределенноеЗначение("Перечисление.ПериодыНахожденияЖивотныхНаТерриторииТСВЕТИС.ЗначениеВМесяцах");
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("Статус")
		Или Инициализация Тогда
		
		Элементы.Аннулировать.Видимость = Форма.Электронный
			И (Объект.Тип = ПредопределенноеЗначение("Перечисление.ТипыВетеринарныхДокументовВЕТИС.Транспортный"))
			И (Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыВетеринарныхДокументовВЕТИС.Оформлен"));
		
		Элементы.ОткрытьЧерезБраузер.Видимость = Форма.Электронный
			И (Объект.Тип = ПредопределенноеЗначение("Перечисление.ТипыВетеринарныхДокументовВЕТИС.Транспортный")
				ИЛИ Объект.Тип = ПредопределенноеЗначение("Перечисление.ТипыВетеринарныхДокументовВЕТИС.Возвратный"));
		
		Элементы.Погасить.Видимость = ЗначениеЗаполнено(Объект.Ссылка)
			И (Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыВетеринарныхДокументовВЕТИС.Оформлен"));
		
		Элементы.ЗапроситьВСДПоИдентификатору.Видимость = Форма.Электронный;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ТранспортноеСредство")
		ИЛИ Инициализация Тогда
		
		Если Объект.Маршрут.Количество() = 0 ИЛИ НЕ ЗначениеЗаполнено(Объект.Маршрут[0].ТипТранспорта) Тогда
			Цвет = Форма.ЦветГиперссылкиОсобыйТекст;
			НадписьТранспортноеСредство = НСтр("ru = 'указать'");
		Иначе
			Цвет = Форма.ЦветГиперссылкиОбычный;
			СтрокаМаршрута = Объект.Маршрут[0];
			ПредставлениеДанныхТранспортногоСредства = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеДанныхТранспортногоСредства(
				СтрокаМаршрута, Ложь);
			НадписьТранспортноеСредство = СтрШаблон(
				?(ПустаяСтрока(ПредставлениеДанныхТранспортногоСредства), "%1%2", "%1 (%2)"),
					СтрокаМаршрута.ТипТранспорта,
					ПредставлениеДанныхТранспортногоСредства);
		КонецЕсли;
		
		Форма.НадписьТранспортноеСредство = Новый ФорматированнаяСтрока(НадписьТранспортноеСредство,,Цвет,,"ТранспортноеСредство");
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("Маршрут")
		ИЛИ Инициализация Тогда
		
		Параметры = Новый Структура;
		Параметры.Вставить("ПараметрыДляПодстановки", "Предприятие,АдресПредставление");
		Параметры.Вставить("ПустоеЗначение", "");
		Параметры.Вставить("РазделительВыводимых"," - ");
		Параметры.Вставить("КоличествоВыводимых", 2);
		Параметры.Вставить("ШаблонСтроки", "%1%2");
		
		Форма.НадписьПунктыМаршрута = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
			Объект.Маршрут,
			ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиМаршрута());
			
		Если ЗначениеЗаполнено(Объект.ГрузополучательПредприятие) Тогда
			Форма.НадписьПунктыМаршрута = СтрШаблон("%1 - %2",
				Форма.НадписьПунктыМаршрута,
				Объект.ГрузополучательПредприятие);
		КонецЕсли;
			
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("Иммунизация")
		ИЛИ СтруктураРеквизитов.Свойство("ЛабораторныеИсследования")
		ИЛИ Инициализация Тогда
		
		ЭтоПроизводственныйВСД = (Объект.Тип = ПредопределенноеЗначение("Перечисление.ТипыВетеринарныхДокументовВЕТИС.Производственный"));
		
		Элементы.НадписьИсследования.Видимость = Не ЭтоПроизводственныйВСД;
		
		Если ЭтоПроизводственныйВСД Тогда
			
			Форма.НадписьИсследования = Неопределено;
			
		Иначе
			
			МассивСтрок = Новый Массив;
			
			Если Форма.Электронный Тогда
				
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru = 'Сведения о ветеринарных мероприятиях'"),,Форма.ЦветГиперссылкиОбычный,,"ВетеринарныеМероприятия"));
				
			Иначе
				
				Количество = Объект.ЛабораторныеИсследования.Количество();
				КоличествоСтрокой = ?(Количество > 0, " ("+Количество+")", "");
				
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru = 'Лабораторные исследования'")
					+ КоличествоСтрокой,,Форма.ЦветГиперссылкиОбычный,,"ЛабораторныеИсследования"));
				
				Если Форма.ТипЖивыеЖивотные Тогда
					
					Разделитель = "                             ";
					МассивСтрок.Добавить(
						Лев(Разделитель, СтрДлина(Разделитель) - СтрДлина(КоличествоСтрокой)));
					
					Количество = Объект.Иммунизация.Количество();
					
					МассивСтрок.Добавить(
						Новый ФорматированнаяСтрока(
							НСтр("ru = 'Иммунизация'")
						+ ?(Количество > 0, " ("+Количество+")", ""),,Форма.ЦветГиперссылкиОбычный,,"Иммунизация"));
					
				КонецЕсли;
				
			КонецЕсли;
			
			Форма.НадписьИсследования = Новый ФорматированнаяСтрока(МассивСтрок);
			
		КонецЕсли;
		
	КонецЕсли;
	
	КоличествоМаршрутов = Объект.Маршрут.Количество();
	Если КоличествоМаршрутов Тогда
		
		ОтборПерегонов = Новый Структура("ТипТранспорта", ПредопределенноеЗначение("Перечисление.ТипыТранспортаВЕТИС.ПерегонСкота"));
		Элементы.СпособХранения.Видимость = Не Объект.Маршрут.НайтиСтроки(ОтборПерегонов).Количество() = КоличествоМаршрутов И Не ЭтоИмпорт;
		
	Иначе
		Элементы.СпособХранения.Видимость = Истина;
	КонецЕсли;
	
	Элементы.СкоропортящаясяПродукция.ТолькоПросмотр   = Форма.ТолькоПросмотр ИЛИ Форма.ТипЖивыеЖивотные;
	Элементы.НизкокачественнаяПродукция.ТолькоПросмотр = Истина;
	
	Если Инициализация Тогда
		
		Элементы.ГрузоотправительПредприятие.Видимость = Не ЭтоИмпорт;
		Элементы.СпособХранения.Видимость              = Не ЭтоИмпорт;
		Элементы.НадписьПунктыМаршрута.Видимость       = Не ЭтоИмпорт;
		Элементы.Цель.Видимость                        = Не ЭтоИмпорт;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступныеЕдиницыИзменения(Продукция)
	
	ДоступныеЕдиницыИзменения = Новый Массив;
	
	Если ЗначениеЗаполнено(Продукция) Тогда
		ДоступныеЕдиницыИзменения = Новый Массив(ИнтеграцияВЕТИСПовтИсп.ДоступныеЕдиницыИзменения(Продукция));
	КонецЕсли;
	
	Возврат ДоступныеЕдиницыИзменения;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПредставлениеПериодовПоСтроке(Форма)
	
	Объект = Форма.Объект;
	
	Для каждого ВидПериода Из СтрРазделить("ДатаПроизводства,СрокГодности",",") Цикл
		
		ПредставлениеПериода = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПериодаВЕТИС(
			Объект[ВидПериода+"ТочностьЗаполнения"],
			Объект[ВидПериода+"НачалоПериода"],
			Объект[ВидПериода+"КонецПериода"],
			Объект[ВидПериода+"Строка"]);
			
		ТекстНезаполненного = НСтр("ru = 'указать'");
			ЦветНезаполненного = Форма.ЦветГиперссылкиОсобыйТекст;
			
		Если ПустаяСтрока(ПредставлениеПериода) Тогда
			Форма["Надпись"+ВидПериода] =
				Новый ФорматированнаяСтрока(ТекстНезаполненного,,ЦветНезаполненного,,ВидПериода);
		Иначе
			Форма["Надпись"+ВидПериода] =
				Новый ФорматированнаяСтрока(ПредставлениеПериода,,Форма.ЦветГиперссылкиОбычный,,ВидПериода);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти