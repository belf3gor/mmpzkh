#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// По штрихкоду возвращает данные выбора для поля штрихкода
// Параметры:
//   Штрихкод - Строка - часть номера КиЗ.
// Возвращаемое значение:
//  ТаблицаЗначений
//             - ШтрихКод - найденнй номер КиЗ
//             - ПредставлениеНоменклатура - ФорматированнаяСтрока.
Функция ПодобратьКИЗ_ГИСМПоШтрихкоду(Штрихкод) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрольныеЗнакиГИСМ.Владелец.Представление КАК ПредставлениеНоменклатура,
	|	КонтрольныеЗнакиГИСМ.Код КАК ШтрихКод
	|ИЗ
	|	Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|ГДЕ
	|	КонтрольныеЗнакиГИСМ.Код ПОДОБНО &Штрихкод
	|	И НЕ КонтрольныеЗнакиГИСМ.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Штрихкод", СокрЛП(Штрихкод) + "%");
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	ШрифтВыделения = Новый Шрифт(,,Истина);
	ЦветВыделения  = ЦветаСтиля.ЦветУспешногоПоиска;
	ФорматВыделяемаяСтрока = Новый ФорматированнаяСтрока(Штрихкод, ШрифтВыделения, ЦветВыделения);
	
	ТаблицаРезультата.Колонки.Добавить("Представление", Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("ФорматированнаяСтрока"))));
	
	Для каждого СтрокаРезультата Из ТаблицаРезультата Цикл
	
		ПредставлениеСтроки = Новый Массив;
		ПредставлениеСтроки.Добавить(ФорматВыделяемаяСтрока);
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(Прав(СтрокаРезультата.Штрихкод, СтрДлина(СтрокаРезультата.Штрихкод) - СтрДлина(Штрихкод))));
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(" (%1)", СтрокаРезультата.ПредставлениеНоменклатура)));
		
		СтрокаРезультата.Представление = Новый ФорматированнаяСтрока(ПредставлениеСтроки);
	
	КонецЦикла; 
	
	Возврат ТаблицаРезультата;
КонецФункции

// По номеру КиЗ возвращает ссылку на КонтрольныйЗнакГИСМ и номенклатуру-владельца КиЗа.
// Параметры:
//   НомерКиЗ - Строка - номер КиЗ.
// Возвращаемое значение:
//  Структура, Неопределено - КиЗ и его Владелец
//             - КиЗ_ГИСМ -СправочникСсылка.КонтрольныйЗнакГИСМ, содержит ссылку на соотв. КиЗ,
//             - Номенклатура -СправочникСсылка.Номенклатура, содержит ссылку на владельца Киза,
//            Если значение не определено, то имя поля берется из ключа.
Функция ДанныеКИЗ_ГИСМПоНомеру(НомерКиЗ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	КонтрольныеЗнакиГИСМ.Ссылка КАК КИЗ_ГИСМ,
	|	КонтрольныеЗнакиГИСМ.Владелец Как Владелец
	|ИЗ
	|	Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|ГДЕ
	|	КонтрольныеЗнакиГИСМ.Код = &Код";
	Запрос.УстановитьПараметр("Код", СокрЛП(НомерКиЗ));
	ДанныеКиЗ = Запрос.Выполнить().Выгрузить();
	Если ДанныеКиЗ.Количество() = 1 Тогда
		
		Возврат Новый Структура("КиЗ_ГИСМ, Владелец", ДанныеКиЗ[0].КиЗ_ГИСМ, ДанныеКиЗ[0].Владелец);
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Процедура ПроверитьЗначениеОпцииИспользоватьКонтрольныеЗнакиГИСМ() Экспорт

	Если ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойПродукцииГИСМБП")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольныеЗнакиГИСМ") И ЕстьМаркируемаяПродукцияГИСМ() Тогда
	
		УстановитьПривилегированныйРежим(Истина);
		Константы.ИспользоватьКонтрольныеЗнакиГИСМ.Установить(Истина);
		ОбновитьПовторноИспользуемыеЗначения();
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьМаркируемаяПродукцияГИСМ()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ПродукцияМаркируемаяДляГИСМ";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли
