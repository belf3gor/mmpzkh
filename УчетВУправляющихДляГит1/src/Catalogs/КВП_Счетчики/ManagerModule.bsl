
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Проверяет уникальность идентификатора счетчика.
Функция ПроверитьУникальностьИдентификатора(Идентификатор, Счетчик = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КВП_Счетчики.Ссылка
	|ИЗ
	|	Справочник.КВП_Счетчики КАК КВП_Счетчики
	|ГДЕ
	|	КВП_Счетчики.Идентификатор = &Идентификатор
	|	И &УсловиеНаСчетчик";
	
	УсловиеНаСчетчик = "ИСТИНА";
	Если Не Счетчик = Неопределено
	   И Не Счетчик = Справочники.КВП_Счетчики.ПустаяСсылка() Тогда
		УсловиеНаСчетчик = "НЕ КВП_Счетчики.Ссылка = &Счетчик";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеНаСчетчик", УсловиеНаСчетчик);
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Запрос.УстановитьПараметр("Счетчик",       Счетчик);
	
	ИдУникален = Запрос.Выполнить().Пустой();
	
	Возврат ИдУникален;
	
КонецФункции //ПроверитьУникальностьИдентификатора()

// Функция проверяет корректность показаний с тарифностью счетчика.
//
// Параметры
//  ДневноеПоказание  - число - дневное показание счетчика
//  НочноеПоказание   - число - ночное показание счетчика
//  ПиковоеПоказание  - число - пиковое показание счетчика
//  ТарифностьСчетчика  - Перечисление КВП_ТарифностьСчетчиков - тарифность счетчика.
//
// Возвращаемое значение:
//   ПоказанияКорректны   - булево - возвращает Истина, 
//                          если количество видов ненулевых показаний не превышает тарифность.
//
Функция ПроверитьКорректностьПоказаний(ДневноеПоказание, НочноеПоказание, ПиковоеПоказание, ТарифностьСчетчика) Экспорт
	
	ТарифностьЧислом = УПЖКХ_ВводПоказанийПриборовУчетаКлиентСервер.ПолучитьТарифностьЧислом(ТарифностьСчетчика);
	
	Если (ПиковоеПоказание > 0 И ТарифностьЧислом < 3)
	 ИЛИ (НочноеПоказание > 0 И ТарифностьЧислом < 2) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // ПроверитьКорректностьПоказаний()

#КонецОбласти

#КонецЕсли