#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Шаблон, "Организация");
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Шаблон, ДатаШаблона");
		
		ДатаСледующего = ДатаСледующегоПоНовомуПравилу(ДатаШаблона, Объект.Периодичность);
		
	Иначе
		
		СтруктураСледующий = Справочники.ПравилаРегулярныхСчетовПокупателям.Следующий(Объект.Ссылка);
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураСледующий);
		
	КонецЕсли;
	
	Элементы.НастройкаПовторения.Доступность = Объект.Выполняется;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.Наименование = СтрШаблон(НСтр("ru = 'Регулярный счет: Каждый %1, следующий %2'"),
		Объект.Периодичность, Формат(ДатаСледующего, "ДФ=dd.MM.yyyy"));
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.Ссылка.Пустая()
		И НЕ ТекущийОбъект.Выполняется Тогда // Объект, который не выполняется, создавать не нужно.
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Шаблон",         Шаблон);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ДатаСледующего", ДатаСледующего);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ПравилаРегулярныхСчетовПокупателям", Шаблон, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ДатаСледующего < ДатаШаблона Тогда
		
		ТекстШаблона   = НСтр("ru = 'Следующий счет не может быть ранее предыдущего от %1'");
		ТекстСообщения = СтрШаблон(ТекстШаблона, Формат(ДатаШаблона, "ДЛФ=D"));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Дата");
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПовторенияПриИзменении(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		ДатаСледующего = ДатаСледующегоПоНовомуПравилу(ДатаШаблона, Объект.Периодичность);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПовторятьПриИзменении(Элемент)
	Элементы.НастройкаПовторения.Доступность = Объект.Выполняется;
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ДатаСледующегоПоНовомуПравилу(ДатаШаблона, Периодичность)
	
	ДатаСледующего = ДатаШаблона;
	
	ТекущаяДата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	
	КоличествоПериодов = 1;
	
	Если ДатаШаблона >= ТекущаяДата Тогда
		
		ДатаСледующего = ИнтерфейсыВзаимодействияБРОКлиентСервер.ДобавитьПериод(ДатаШаблона, Периодичность, КоличествоПериодов);
		
	Иначе
		
		Пока ДатаСледующего < ТекущаяДата Цикл
			
			ДатаСледующего = ИнтерфейсыВзаимодействияБРОКлиентСервер.ДобавитьПериод(ДатаШаблона, Периодичность, КоличествоПериодов);
			
			КоличествоПериодов = КоличествоПериодов + 1;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДатаСледующего;
	
КонецФункции

#КонецОбласти



