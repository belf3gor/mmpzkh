#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура НачальноеЗаполнение() Экспорт
	
	ОбновитьЭлементСправочника("ЗП80ПД",	"Педагогическая деятельность в школах и других учреждениях для детей всех педагогических работников");
	ОбновитьЭлементСправочника("ЗП80РК",	"Педагогическая деятельность в школах и других учреждениях для детей в качестве директоров");
	ОбновитьЭлементСправочника("ЗП81ГД",	"Лечебная и иная работа по охране здоровья населения в городах");
	ОбновитьЭлементСправочника("ЗП81СМ",	"Лечебная и иная работа по охране здоровья населения в сельской местности");
	ОбновитьЭлементСправочника("ИНСПЕКТ",	"Работники, проводящие инспектирование летного состава в испытательных полетах");
	ОбновитьЭлементСправочника("ИСПКЛС1",	"Работа в качестве летчика-испытателя 1 класса");
	ОбновитьЭлементСправочника("ИТС",		"Работа в инженерно-техническом составе по обслуживанию воздушных судов");
	ОбновитьЭлементСправочника("ИТСИСП",	"Инженерно-технический состав, совершающий полеты по испытаниям");
	ОбновитьЭлементСправочника("ИТСМАВ",	"Инженерно-технический состав, совершающий полеты по испытаниям на воздушных судах маневренной авиации");
	ОбновитьЭлементСправочника("ЛЕТИСП",	"Летно-испытательный состав");
	ОбновитьЭлементСправочника("НОРМАПР",	"Парашютисты, выполнившие годовую норму прыжков с поршневых самолетов");
	ОбновитьЭлементСправочника("НОРМСП",	"Парашютисты, выполнившие годовую норму спусков (подъемов) с поршневых самолетов");
	ОбновитьЭлементСправочника("ОПЫТИСП",	"Работа в качестве летчика (пилота)-испытателя, штурмана-испытателя и парашютиста-испытателя");
	ОбновитьЭлементСправочника("РЕАКТИВН",	"Парашютисты, выполнившие годовую норму прыжков с реактивных самолетов и вертолетов");
	ОбновитьЭлементСправочника("САМОЛЕТ",	"Работа в летном составе на самолетах гражданской авиации");
	ОбновитьЭлементСправочника("СПЕЦАВ",	"Работа в летном составе на вертолетах, в авиации специального применения");
	ОбновитьЭлементСправочника("УВД",		"Работа по управлению воздушным движением");
	ОбновитьЭлементСправочника("ХИРУРГД",	"Связанная с хирургией лечебная работа в городах");
	ОбновитьЭлементСправочника("ХИРУРСМ",	"Связанная с хирургией лечебная работа в сельской местности");
	
	ОбновитьНеПредопределенныеЭлементы();
	
КонецПроцедуры

Процедура ОбновитьНеПредопределенныеЭлементы() Экспорт 
	
	ОбновитьЭлементСправочника("", "Творческая работа не менее 15 лет", "ТВОРЧ15");
	ОбновитьЭлементСправочника("", "Творческая работа не менее 20 лет", "ТВОРЧ20");
	ОбновитьЭлементСправочника("", "Творческая работа не менее 25 лет", "ТВОРЧ25");
	ОбновитьЭлементСправочника("", "Творческая работа не менее 30 лет", "ТВОРЧ30");
	ОбновитьЭлементСправочника("", "Ведущие профессии на подземных и открытых горных работах", "ЗП78ВП");
	ОбновитьЭлементСправочника("", "Подземные и открытые горные работы", "ЗП78ГР");
	ОбновитьЭлементСправочника("", "Работа спасателем в профессиональных аварийно-спасательных службах", "ЗП78СС");
	ОбновитьЭлементСправочника("", "Работа на судах флота рыбной промышленности по добыче, обработке рыбы и морепродуктов", "ЗП78ФЛ");
	
КонецПроцедуры

Процедура ОбновитьЭлементСправочника(ИмяПредопределенныхДанных, Наименование, Код = Неопределено)
	
	Если ПустаяСтрока(ИмяПредопределенныхДанных) Тогда
		
		СсылкаНаЭлемент = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.НайтиПоКоду(Код);
		Если ЗначениеЗаполнено(СсылкаНаЭлемент) Тогда
			Элемент = СсылкаНаЭлемент.ПолучитьОбъект();
		Иначе
			Элемент = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.СоздатьЭлемент();
		КонецЕсли;
		
	Иначе
	
		СсылкаПредопределенного = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ОснованияДосрочногоНазначенияПенсииДляСЗВК." + ИмяПредопределенныхДанных);
		Если ЗначениеЗаполнено(СсылкаПредопределенного) Тогда
			Элемент = СсылкаПредопределенного.ПолучитьОбъект();
		Иначе
			Элемент = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.СоздатьЭлемент();
			Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		КонецЕсли;
		
	КонецЕсли;
	
	Элемент.Код = ?(ЗначениеЗаполнено(Код), Код, ИмяПредопределенныхДанных);
	Элемент.Наименование = Наименование;
	
	Элемент.ДополнительныеСвойства.Вставить("ЗаписьОбщихДанных");
	Элемент.ОбменДанными.Загрузка = Истина;
	Элемент.Записать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли

