#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ОписаниеТипа			 = Параметры.ЗначениеКопирования.ОписаниеТипаРеквизита.Получить();
		Объект.ПорядокПараметра	 = 0;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Владелец) Тогда
		Объект.Владелец = Параметры.Владелец;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ТипПараметра) Тогда
		ОписаниеТипа = Параметры.ТипПараметра;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
	// Установим параметр выбора по владельцу
	НовыйПараметр	 = Новый ПараметрВыбора("Отбор.Владелец", Объект.Владелец);
	НовыйМассив		 = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(НовыйПараметр);
	Элементы.СвязьПоВладельцу.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОписаниеТипа = ТекущийОбъект.ОписаниеТипаРеквизита.Получить();
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ОписаниеТипаРеквизита = Новый ХранилищеЗначения(ОписаниеТипа);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Передаем в форму Типовой операции новое наименование параметра
	СтруктураПараметра = Новый Структура;
	СтруктураПараметра.Вставить("Параметр",		 Объект.Ссылка);
	СтруктураПараметра.Вставить("Наименование",	 Объект.Наименование);
	
	Оповестить("ИзмененПараметр", СтруктураПараметра);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма);
	
	Если Форма.ОписаниеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
		ПодсказкаВвода = "Контрагент (владелец договора)";
		ДоступностьСвязи = Истина;
	ИначеЕсли Форма.ОписаниеТипа.СодержитТип(Тип("СправочникСсылка.НазначенияИспользования")) Тогда
		ПодсказкаВвода = "Номенклатура (владелец назначения использования)";
		ДоступностьСвязи = Истина;
	Иначе
		ПодсказкаВвода = "";
		ДоступностьСвязи = Ложь;
	КонецЕсли;
	
	ЭлементыФормы = Форма.Элементы;
	ЭлементыФормы.СвязьПоВладельцу.Видимость                 = ДоступностьСвязи;
	ЭлементыФормы.СвязьПоВладельцу.АвтоВыборНезаполненного   = ДоступностьСвязи;
	ЭлементыФормы.СвязьПоВладельцу.АвтоОтметкаНезаполненного = ДоступностьСвязи;
	ЭлементыФормы.СвязьПоВладельцу.ПодсказкаВвода            = ПодсказкаВвода;
	Если НЕ ДоступностьСвязи И ЗначениеЗаполнено(Форма.Объект.СвязьПоВладельцу) Тогда
		Форма.Объект.СвязьПоВладельцу = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыбранноеЗначение(Результат, Параметры) Экспорт

	Если Результат <> Неопределено Тогда
		Объект.СвязьПоВладельцу = Результат;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОписаниеТипаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СвязьПоВладельцуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура("Владелец", Объект.Владелец);
	// Определим и вставим в структуру тип значения владельца
	Если ОписаниеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
		ПараметрыОтбора.Вставить("ТипПараметра", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ИначеЕсли ОписаниеТипа.СодержитТип(Тип("СправочникСсылка.НазначенияИспользования")) Тогда
		ПараметрыОтбора.Вставить("ТипПараметра", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьВыбранноеЗначение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ПараметрыТиповойОперации.ФормаВыбора", ПараметрыОтбора, Элемент, , , , ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти