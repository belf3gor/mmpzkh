#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПометкаУдаления Тогда
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоИнтеркампани
		И (СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезОператораЭДОТакском
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезСервис1СЭДО
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP) Тогда
		
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			НазваниеПоля = НСтр("ru = 'Контрагент'");
			ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", НазваниеПоля);

			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Контрагент", , Отказ);
		КонецЕсли;
		
		ПроверитьНастройкиПрямогоОбмена = Ложь;
		
		Если РасширенныйРежимНастройкиСоглашения Тогда
			
			МассивСтрокЭлектронныхДокументов = ИсходящиеДокументы.НайтиСтроки(Новый Структура("Формировать", Истина));
			Для каждого СтрокаТаблицы Из МассивСтрокЭлектронныхДокументов Цикл
				
				Префикс = "ИсходящиеДокументы[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
				
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПрофильНастроекЭДО) Тогда
					НазваниеПоля = НСтр("ru = 'Профиль настроек ЭДО'");
					НазваниеТабличнойЧасти = НСтр("ru = 'Исходящие электронные документы'");
					ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения(
						"Колонка", "ЗАПОЛНЕНИЕ", НазваниеПоля, СтрокаТаблицы.НомерСтроки, НазваниеТабличнойЧасти);
					ОбщегоНазначения.СообщитьПользователю(
						ТекстСообщения, ЭтотОбъект, Префикс + "ПрофильНастроекЭДО", , Отказ);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.ВерсияФормата)
					И СтрокаТаблицы.ИсходящийДокумент <> Перечисления.ВидыЭД.ПроизвольныйЭД Тогда
					НазваниеПоля = НСтр("ru = 'Формат электронного документа'");
					НазваниеТабличнойЧасти = НСтр("ru = 'Исходящие электронные документы'");
					ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения(
						"Колонка", "ЗАПОЛНЕНИЕ", НазваниеПоля, СтрокаТаблицы.НомерСтроки, НазваниеТабличнойЧасти);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Префикс + "ВерсияФормата", , Отказ);
				КонецЕсли;
				Если ОбменСКонтрагентамиСлужебный.ЭтоПрямойОбмен(СтрокаТаблицы.СпособОбменаЭД)
					И Не ЗначениеЗаполнено(СтрокаТаблицы.ИдентификаторКонтрагента) Тогда
					НазваниеПоля = НСтр("ru = 'Идентификатор контрагента'");
					НазваниеТабличнойЧасти = НСтр("ru = 'Исходящие электронные документы'");
					ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения(
						"Колонка", "ЗАПОЛНЕНИЕ", НазваниеПоля, СтрокаТаблицы.НомерСтроки, НазваниеТабличнойЧасти);
					ОбщегоНазначения.СообщитьПользователю(
						ТекстСообщения, ЭтотОбъект, Префикс + "ИдентификаторКонтрагента", , Отказ);
				КонецЕсли;
				
				Если СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументов");
					ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументов");
				ИначеЕсли СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("ЭлектроннаяПочтаКонтрагента");
				ИначеЕсли СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументовFTP");
					ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументовFTP");
				КонецЕсли;
			КонецЦикла;
		Иначе
			
			Если ОбменСКонтрагентамиСлужебный.ЭтоПрямойОбмен(СпособОбменаЭД)
				И Не ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
				НазваниеПоля = НСтр("ru = 'Идентификатор контрагента'");
				ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", НазваниеПоля);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ИдентификаторКонтрагента", , Отказ);
			КонецЕсли;
			
			Если СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
				ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументов");
				ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументов");
			ИначеЕсли СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
				
				ПроверяемыеРеквизиты.Добавить("ЭлектроннаяПочтаКонтрагента");
			ИначеЕсли СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
				
				ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументовFTP");
				ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументовFTP");
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЭтоИнтеркампани И СтатусСоглашения = Перечисления.СтатусыСоглашенийЭД.Действует Тогда
		ПроверяемыеРеквизиты.Очистить();
		ПроверяемыеРеквизиты.Добавить("ИсходящиеДокументы.МаршрутПодписания");
	
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			НазваниеПоля = НСтр("ru = 'Организация-отправитель'");
			ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", НазваниеПоля);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Организация", , Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
			НазваниеПоля = НСтр("ru = 'Идентификатор отправителя'");
			ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", НазваниеПоля);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ИдентификаторОрганизации", , Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
			НазваниеПоля = НСтр("ru = 'Организация-получатель'");
			ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", НазваниеПоля);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Контрагент", , Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
			НазваниеПоля = НСтр("ru = 'Идентификатор получателя'");
			ТекстСообщения = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", НазваниеПоля);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ИдентификаторКонтрагента", , Отказ);
		КонецЕсли;
	ИначеЕсли ЭтоИнтеркампани И СтатусСоглашения <> Перечисления.СтатусыСоглашенийЭД.Действует Тогда
		ПроверяемыеРеквизиты.Очистить();
	КонецЕсли;
	
	// Проверим заполненность маршрута подписания в исходящих документах
	Если РасширенныйРежимНастройкиСоглашения Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("МаршрутПодписания", Справочники.МаршрутыПодписания.ПустаяСсылка());
		Отбор.Вставить("Формировать", Истина);
		Отбор.Вставить("ИспользоватьЭП", Истина);
		СтрокиСПустымиМаршрутами = ИсходящиеДокументы.НайтиСтроки(Отбор);
		Для Каждого СтрокаОшибки Из СтрокиСПустымиМаршрутами Цикл
			ТекстОшибки = ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Колонка", "Заполнение", "МаршрутПодписания", 
				СтрокаОшибки.НомерСтроки, НСтр("ru = 'Исходящие документы'"));
				
			ИмяПоля = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"ИсходящиеДокументы[%1].ДополнительныеНастройки", СтрокаОшибки.НомерСтроки - 1);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ИмяПоля,, Отказ);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНаименование();
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не НастройкаЭДОУникальна() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ПометкаУдаления Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СоглашенияОбИспользованииЭДИсходящиеДокументы.ПрофильНастроекЭДО
		|ИЗ
		|	Справочник.УдалитьСоглашенияОбИспользованииЭД.ИсходящиеДокументы КАК СоглашенияОбИспользованииЭДИсходящиеДокументы
		|ГДЕ
		|	СоглашенияОбИспользованииЭДИсходящиеДокументы.ПрофильНастроекЭДО.ПометкаУдаления
		|	И СоглашенияОбИспользованииЭДИсходящиеДокументы.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Результат.Следующий() Тогда
			ШаблонСообщения = НСтр("ru = 'Операция отменена.
				|В текущей настройке ЭДО используется помеченный на удаление профиль настроек ЭДО:
				|%1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Результат.ПрофильНастроекЭДО);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЕстьСоглашение", Истина);
	ДополнительныеСвойства.Вставить("ЗарегистрироватьОбъект", 
		НЕ ОбменСКонтрагентамиСлужебныйВызовСервера.ЕстьДОПоДокументу(Ссылка));
	
	ПараметрыОбменаСКонтрагентами = Новый Структура;
	ПараметрыОбменаСКонтрагентами.Вставить("ИзмененыКлючевыеРеквизиты", ИзмененыКлючевыеРеквизиты());
	ПараметрыОбменаСКонтрагентами.Вставить("УчаствуетВОбмене", Истина);
	
	ДополнительныеСвойства.Вставить("ОбменСКонтрагентами", Новый ФиксированнаяСтруктура(ПараметрыОбменаСКонтрагентами));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Только для внутреннего использования
Функция НастройкаЭДОУникальна()
	
	Если ПометкаУдаления Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтатусПодключения <> Перечисления.СтатусыПриглашений.Принято Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТекущаяНастройкаУникальна = Истина;
	
	// Проверка на уникальное использование настройки по реквизитам: Организация, Контрагент, ДоговорКонтрагента.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиЭДО.Ссылка КАК Настройка,
	|	НастройкиЭДО.Контрагент КАК Контрагент,
	|	НастройкиЭДО.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НастройкиЭДО.Организация КАК Организация
	|ИЗ
	|	Справочник.УдалитьСоглашенияОбИспользованииЭД КАК НастройкиЭДО
	|ГДЕ
	|	НастройкиЭДО.Организация = &Организация
	|	И НастройкиЭДО.Контрагент = &Контрагент
	|	И НастройкиЭДО.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И НастройкиЭДО.СтатусПодключения = Значение(Перечисление.СтатусыПриглашений.Принято)
	|	И НастройкиЭДО.Ссылка <> &ТекущаяНастройка";
	Запрос.УстановитьПараметр("ТекущаяНастройка",   Ссылка);
	Запрос.УстановитьПараметр("Организация",        Организация);
	Запрос.УстановитьПараметр("Контрагент",         Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Если Не Результат.Пустой() Тогда
		ТекущаяНастройкаУникальна = Ложь;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ШаблонСообщения = НСтр("ru = 'В информационной базе уже существует настройка ЭДО со статусом подключения ""Присоединен""
										|между контрагентом %1 и организацией %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.Контрагент,
				Выборка.Организация);
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Шаблон = НСтр("ru = '%1 по договору %2'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										Шаблон, ТекстСообщения, Выборка.ДоговорКонтрагента);
			КонецЕсли;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекущаяНастройкаУникальна;
	
КонецФункции

Функция ИзмененыКлючевыеРеквизиты()
	
	Если ЭтоНовый() Тогда
		Возврат Истина;
	КонецЕсли;
	
	КлючевыеРеквизитыИзменены = Ложь;
	
	КлючевыеРеквизиты = Новый Массив;
	КлючевыеРеквизиты.Добавить("Организация");
	КлючевыеРеквизиты.Добавить("Контрагент");
	
	ЗначенияВИБ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, КлючевыеРеквизиты);
	
	Для каждого КлючЗначение Из ЗначенияВИБ Цикл
		
		Если КлючЗначение.Значение <> ЭтотОбъект[КлючЗначение.Ключ] Тогда
			
			КлючевыеРеквизитыИзменены = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КлючевыеРеквизитыИзменены;
	
КонецФункции

Процедура ЗаполнитьНаименование()
	
	Наименование = Строка(Контрагент) 
		+ ?(ЗначениеЗаполнено(ДоговорКонтрагента), ", " + Строка(ДоговорКонтрагента), "");
	
КонецПроцедуры

#КонецОбласти

#Иначе
	
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
	
#КонецЕсли