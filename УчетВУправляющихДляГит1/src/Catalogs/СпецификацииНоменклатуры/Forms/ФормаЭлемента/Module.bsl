#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	СписокСОтборомПоВладельцу = Параметры.Свойство("СписокСОтборомПоВладельцу") И Параметры.СписокСОтборомПоВладельцу;
	
	ОтображатьПродукцию = ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Или Не СписокСОтборомПоВладельцу;
	
	НастроитьЗаголовокИВидимостьЭлементовФормы(Параметры.ОткрытоИзКарточкиНоменклатуры, ОтображатьПродукцию);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// Проверка буфера обмена на наличие скопированных строк
	УстановитьДоступностьКомандыВставки(ЭтотОбъект, Не ОбщегоНазначения.ПустойБуферОбмена());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатуры.Форма.Форма" Тогда
		ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ДанныеСкопированыВБуферОбмена" Тогда
		УстановитьДоступностьКомандыВставки(ЭтотОбъект, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьПараметрЗаписиНоменклатураПредыдущийВладелец(ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьПараметрыЗаписиДляОповещения(ТекущийОбъект, ПараметрыЗаписи);	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)	
	
	Оповестить("ЗаписанаСпецификацияНоменклатуры", ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьМатериалы(Команда)
	
	ОткрытьФорму(
		"Обработка.ПодборНоменклатуры.Форма.Форма", 
		Новый Структура, 
		ЭтотОбъект,
		УникальныйИдентификатор);
		
КонецПроцедуры
	
&НаКлиенте
Процедура СкопироватьСтроки(Команда)
	
	ИмяТаблицы = ПолучитьИмяТекущейТабличнойЧасти();
	Если ПустаяСтрока(ИмяТаблицы) Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСтрок = Элементы[ИмяТаблицы].ВыделенныеСтроки.Количество();
	Если КоличествоСтрок = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СкопироватьСтрокиНаСервере(ИмяТаблицы);
	ОбработкаТабличныхЧастейКлиент.ОповеститьОКопированииСтрокВБуферОбмена(ЭтотОбъект, КоличествоСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСтроки(Команда)
	
	ИмяТаблицы = ПолучитьИмяТекущейТабличнойЧасти();	
	КоличествоСтрок = ВставитьСтрокиНаСервере(ИмяТаблицы);
	ОбработкаТабличныхЧастейКлиент.ОповеститьОВставкеСтрокИзБуфераОбмена(ЭтотОбъект, КоличествоСтрок);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
&НаСервере
Процедура ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение)
	
	ЭтоВставкаИзБуфера = ВыбранноеЗначение.Свойство("ЭтоВставкаИзБуфера");
	СписокСвойств = Неопределено;
	Если ЭтоВставкаИзБуфера Тогда
		ПодобранныеМатериалы = ВыбранноеЗначение.Данные;
		СписокСвойств = ВыбранноеЗначение.СписокСвойств;
	Иначе
		ПодобранныеМатериалы = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобраннойНоменклатурыВХранилище);
	КонецЕсли;	
	
	КоличествоДобавленныхСтрок = 0;
	
	Для Каждого СтрокаПодбора Из ПодобранныеМатериалы Цикл
		
		Если ЭтоВставкаИзБуфера 
			И БухгалтерскийУчетПереопределяемый.НоменклатураЯвляетсяУслугой(СтрокаПодбора.Номенклатура) Тогда
			
			Продолжить;
			
		КонецЕсли;	
				
		НоваяСтрока = Объект.ИсходныеКомплектующие.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодбора, СписокСвойств);
		
		КоличествоДобавленныхСтрок = КоличествоДобавленныхСтрок + 1;
		
	КонецЦикла;
	
	Если ЭтоВставкаИзБуфера Тогда
		ВыбранноеЗначение.КоличествоДобавленныхСтрок = КоличествоДобавленныхСтрок;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЗаголовокИВидимостьЭлементовФормы(ОткрытоИзКарточкиНоменклатуры, ОтображатьПродукцию)
	
	Если ОткрытоИзКарточкиНоменклатуры Тогда
		ЭтотОбъект.Заголовок = СтрШаблон(НСтр("ru = '%1 (%2)'"),НСтр("ru = 'Материалы'"), Объект.Наименование);
	Иначе
		ЭтотОбъект.Заголовок = Метаданные.Справочники.СпецификацииНоменклатуры.РасширенноеПредставлениеОбъекта;
	КонецЕсли;
	
	Элементы.Наименование.Видимость = Не ОткрытоИзКарточкиНоменклатуры;
	
	Если ОткрытоИзКарточкиНоменклатуры Или Не ОтображатьПродукцию Тогда
		
		// Продукция видна "на заднем фоне". Форма блокирующая, продукция в форме не выводится
		Элементы.Владелец.Видимость  = Ложь;
		ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
		// У блокирующих форм кнопки внизу
		Элементы.ГруппаДействияФормы.Видимость   = Истина;
		Элементы.ГруппаКоманднаяПанель.Видимость = Ложь;
		
	Иначе
		
		Элементы.Владелец.Видимость  = Истина;
		ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
		
		Элементы.ГруппаДействияФормы.Видимость   = Ложь;
		Элементы.ГруппаКоманднаяПанель.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПараметрЗаписиНоменклатураПредыдущийВладелец(СправочникОбъект, ПараметрыЗаписи)
	
	Если СправочникОбъект.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущийВладелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СправочникОбъект.Ссылка, "Владелец");
	Если ПредыдущийВладелец <> СправочникОбъект.Владелец Тогда
		
		ПараметрыЗаписи.Вставить("НоменклатураПредыдущийВладелец", ПредыдущийВладелец);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПараметрыЗаписиДляОповещения(СправочникОбъект, ПараметрыЗаписи)
	
	СпецификацияПредставление = УправлениеПроизводством.ПредставлениеОсновнойСпецификации(СправочникОбъект.Ссылка);
	
	ПараметрыЗаписи.Вставить("СпецификацияПредставление", СпецификацияПредставление);
	ПараметрыЗаписи.Вставить("ИзмененнаяСпецификация",    СправочникОбъект.Ссылка);
	ПараметрыЗаписи.Вставить("НоменклатураВладелец",      СправочникОбъект.Владелец);
	
КонецПроцедуры

#Область КопированиеВставкаСтрокЧерезБуферОбмена

&НаСервере
Процедура СкопироватьСтрокиНаСервере(ИмяТаблицы)
	
	ОбщегоНазначения.СкопироватьСтрокиВБуферОбмена(Объект[ИмяТаблицы], 
		Элементы[ИмяТаблицы].ВыделенныеСтроки, Объект.Ссылка.Метаданные().Имя);

КонецПроцедуры

&НаСервере
Функция ВставитьСтрокиНаСервере(ИмяТаблицы)
	
	ПараметрыВставки = ОбработкаТабличныхЧастей.ПолучитьПараметрыВставкиДанныхИзБуфераОбмена(Объект.Ссылка, ИмяТаблицы);
	ОпределитьСписокСвойствДляВставкиИзБуфера(ПараметрыВставки);
	ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ПараметрыВставки);
	
	Возврат ПараметрыВставки.КоличествоДобавленныхСтрок;
	
КонецФункции

&НаКлиенте
Функция ПолучитьИмяТекущейТабличнойЧасти()
			
	Возврат "ИсходныеКомплектующие";
	
КонецФункции

&НаСервере
Процедура ОпределитьСписокСвойствДляВставкиИзБуфера(ПараметрыВставки)
	
	СписокСвойств = Новый Массив;
	
	СписокСвойств.Добавить("Номенклатура");
	СписокСвойств.Добавить("Количество");
	
	ПараметрыВставки.СписокСвойств = ОбработкаТабличныхЧастей.ПолучитьСписокСвойствИмеющихсяВТаблицеДанных(
		ПараметрыВставки.Данные, СписокСвойств);
	
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКомандыВставки(Форма, Доступность)

	Доступность = Не Форма.ТолькоПросмотр И Доступность;
	Элементы = Форма.Элементы;
	Элементы.ИсходныеКомплектующиеВставитьСтроки.Доступность = Доступность;
	Элементы.ИсходныеКомплектующиеКонтекстноеМенюВставитьСтроки.Доступность = Доступность;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
