/////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	УправлениеФормой();
	ЗаполнитьТаблицуПараметров();
	ОбновитьТекстПредпросмотра();
	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СодержаниеПриИзменении(Элемент)
	
	ОбновитьТекстПредпросмотра();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля ИспользоватьАвторассылку.
//
Процедура ИспользоватьВАвторассылкеПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
// Обработка нажатия гиперссылки "НастройкиАвторассылки".
//
Процедура НастройкиАвторассылкиНажатие(Элемент)
	ОткрытьФорму("ОбщаяФорма.смсНастройкиРассылкиСМС",,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметрыШаблоновВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элементы.Содержание.ВыделенныйТекст = смсРаботаСШаблонами.ПолучитьПараметрСРазделителями(Элементы.ТаблицаПараметрыШаблонов.ТекущиеДанные.НаименованиеПараметра);
	ОбновитьТекстПредпросмотра();
	
КонецПроцедуры

&НаКлиенте
// Обработка нажатия навигационной ссылки "ДекорацияПустаяНастройкиАвторассылки"
Процедура ДекорацияПустаяНастройкиАвторассылкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.смсНастройкиРассылкиСМС");
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаДобавитьПараметр(Команда)
	
	Элементы.Содержание.ВыделенныйТекст = смсРаботаСШаблонами.ПолучитьПараметрСРазделителями(Элементы.ТаблицаПараметрыШаблонов.ТекущиеДанные.НаименованиеПараметра);
	ОбновитьТекстПредпросмотра();
	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Получает время начала и конца выполнения регламентного задания авторассылки сообщений.
//
// Возвращаемое значение:
//  СтруктураВремяВыполненияЗадания - Структура - структуры данных, содержащая информацию
//                                    о времени начала и конца выполнения регламентного задания.
//
Функция ПолучитьВремяВыполненияРегламентногоЗаданияСМСАвторассылкаСообщений()
	
	СтруктураВремяВыполненияЗадания = Новый Структура;
	
	Задание = смсОбщегоНазначенияСервер.ПолучитьРегламентноеЗаданиеСМСАвторассылкаСообщений();
	
	СтруктураВремяВыполненияЗадания.Вставить("ВремяНачала", Задание.Расписание.ВремяНачала);
	СтруктураВремяВыполненияЗадания.Вставить("ВремяКонца",  Задание.Расписание.ВремяКонца);;
	
	Возврат СтруктураВремяВыполненияЗадания;
	
КонецФункции // ПолучитьВремяВыполненияРегламентногоЗаданияСМСАвторассылкаСообщений()

&НаКлиенте
// Процедура управляет свойствами элементов формы.
//
Процедура УправлениеФормой()
	
	Элементы.ОткрытьНастройкиАвторассылки.Видимость = Объект.ИспользоватьВАвторассылке;
	
	АвторассылкаВключена = ПолучитьФункциональнуюОпциюИнтерфейса("смсИспользоватьАвторассылку");
	
	Если АвторассылкаВключена Тогда
		Если Объект.ИспользоватьВАвторассылке Тогда
			УстановитьЗаголовокГиперссылкиОткрытьНастройкиАвторассылки();
		КонецЕсли;
		Элементы.ДекорацияПустаяНастройкиАвторассылки.Высота = 1;
		Элементы.ДекорацияПустаяНастройкиАвторассылки.Заголовок = "";
	Иначе
		Элементы.ГруппаАвторассылка.РасширеннаяПодсказка.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Устанавливает заголовок гиперссылки "ОткрытьНастройкиАвторассылки".
//
Процедура УстановитьЗаголовокГиперссылкиОткрытьНастройкиАвторассылки()
	
	СтруктураВремяВыполненияЗадания = ПолучитьВремяВыполненияРегламентногоЗаданияСМСАвторассылкаСообщений();
	Элементы.ОткрытьНастройкиАвторассылки.Заголовок = "Время выполнения: с " + Формат(СтруктураВремяВыполненияЗадания.ВремяНачала, "ДФ=ЧЧ:мм")
	+ " до " + Формат(СтруктураВремяВыполненияЗадания.ВремяКонца, "ДФ=ЧЧ:мм") + " ч.";
	
КонецПроцедуры // УстановитьЗаголовокГиперссылкиОткрытьНастройкиАвторассылки()

&НаСервере
// Заполняет таблицу с параметрами.
//
Процедура ЗаполнитьТаблицуПараметров()
	
	ТаблицаПараметров = Новый ТаблицаЗначений;
	ОписаниеОшибки = "";
	
	Если смсРаботаСШаблонами.ПолучитьПараметры(ТаблицаПараметров,, ОписаниеОшибки) Тогда
	
		ЭтаФорма.ТаблицаПараметрыШаблонов.Загрузить(ТаблицаПараметров);
	
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТаблицуПараметров()

&НаКлиенте
// Обновляет текст предварительного просмотра.
//
Процедура ОбновитьТекстПредпросмотра()
	
	ТекстПредварительногоПросмотра = "";
	ОписаниеОшибки                 = "";
	
	Если смсРаботаСШаблонами.ПолучитьТекстПредварительногоПросмотра(Объект.Содержание, ТекстПредварительногоПросмотра, ОписаниеОшибки) Тогда
		ЭтаФорма.РеквизитПредварительныйПросмотр = ТекстПредварительногоПросмотра;
	Иначе
		смсОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
	КонецЕсли; 

КонецПроцедуры // ОбновитьТекстПредпросмотра()

#КонецОбласти
