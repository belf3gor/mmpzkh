#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(Объект.ИмяМакета) Тогда 
		Элементы.ВосстановитьТиповойШаблон.Видимость = Истина;
	Иначе 
		Элементы.ВосстановитьТиповойШаблон.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СсылкаНаШаблон = Объект.Ссылка;
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 
		СсылкаНаШаблон = Параметры.ЗначениеКопирования;
	КонецЕсли;
	
	ЦветФонаЗаменяемогоПараметра = ПечатьДоговоров.ЦветФонаЗаменяемогоПараметра();
	
	ТекстЗагружен = Ложь;

	Если ЗначениеЗаполнено(СсылкаНаШаблон) Тогда
		ДанныеШаблона = Справочники.ШаблоныДоговоров.ДанныеШаблонаДоговора(СсылкаНаШаблон);
		Если ЗначениеЗаполнено(ДанныеШаблона.ТекстHTML) Тогда
			ФорматированныйДокумент.УстановитьHTML(
				ДанныеШаблона.ТекстHTML, ДанныеШаблона.Вложения);
			ТекстЗагружен = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ТекстЗагружен И ЗначениеЗаполнено(Объект.ИмяМакета) Тогда
		// Загрузим из макета
		Макет = Справочники.ШаблоныДоговоров.ПолучитьМакет(Объект.ИмяМакета);
		Вложения = Новый Структура();
		ФорматированныйДокумент.УстановитьHTML(Макет.ПолучитьТекст(), Вложения);
	КонецЕсли;
	
	Если НЕ ТолькоПросмотр Тогда
		ДобавитьДополнительныеРеквизитыИДопСвойства();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекстHTML = "";
	Вложения = Новый Структура;
	ФорматированныйДокумент.ПолучитьHTML(ТекстHTML, Вложения);
	
	СтруктураФорматированногоДокумента = Справочники.ШаблоныДоговоров.ПустаяСтруктураШаблонаДоговора();
	СтруктураФорматированногоДокумента.ТекстHTML 	= ТекстHTML;
	СтруктураФорматированногоДокумента.Вложения		= Вложения;
	
	ТекущийОбъект.ШаблонХранилище = Новый ХранилищеЗначения(СтруктураФорматированногоДокумента, Новый СжатиеДанных(9));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФорматированныйДокументПриИзменении(Элемент)
	
	Модифицированность = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандныхПанелейФормы

#Область РеквизитыОрганизации

// Общие реквизиты организации

&НаКлиенте
Процедура ВставитьПолноеНаименованиеОрганизации(Команда)
	ВставитьПараметр("{ПолноеНаименованиеОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьБанковскиеРеквизитыОрганизации(Команда)
	ВставитьПараметр("{БанковскиеРеквизитыОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьИННКППОрганизации(Команда)
	ВставитьПараметр("{ИНН_КППОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОГРНОрганизации(Команда)
	ВставитьПараметр("{ОГРНОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСвидетельствоОрганизации(Команда)
	ВставитьПараметр("{СвидетельствоОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСловоИменуемоеДляОрганизации(Команда)
	ВставитьПараметр("{СловоИменуемоеДляОрганизации}");
КонецПроцедуры

// Контактная информация организации

&НаКлиенте
Процедура ВставитьЮридическийАдресОрганизации(Команда)
	ВставитьПараметр("{ЮридическийАдресОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьГородПоЮридическомуАдресуОрганизации(Команда)
	ВставитьПараметр("{ГородПоЮридическомуАдресуОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьФактическийАдресОрганизации(Команда)
	ВставитьПараметр("{ФактическийАдресОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьГородПоФактическомуАдресуОрганизации(Команда)
	ВставитьПараметр("{ГородПоФактическомуАдресуОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьПочтовыйАдресОрганизации(Команда)
	ВставитьПараметр("{ПочтовыйАдресОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьГородПоПочтовомуАдресуОрганизации(Команда)
	ВставитьПараметр("{ГородПоПочтовомуАдресуОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьТелефонОрганизации(Команда)
	ВставитьПараметр("{ТелефонОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьФаксОрганизации(Команда)
	ВставитьПараметр("{ФаксОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьАдресЭлектроннойПочтыОрганизации(Команда)
	ВставитьПараметр("{АдресЭлектроннойПочтыОрганизации}");
КонецПроцедуры

// Представитель организации

&НаКлиенте
Процедура ВставитьПредставительОрганизации(Команда)
	ВставитьПараметр("{ПредставительОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительОрганизации(Команда)
	ВставитьПараметр("{РуководительОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяОрганизации(Команда)
	ВставитьПараметр("{ДолжностьРуководителяОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОснованиеПолномочийРуководителяОрганизации(Команда)
	ВставитьПараметр("{ОснованиеПолномочийРуководителяОрганизации}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительОрганизацииРодительныйПадеж(Команда)
	ВставитьПараметр("{РуководительОрганизацииРодительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительОрганизацииДательныйПадеж(Команда)
	ВставитьПараметр("{РуководительОрганизацииДательныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительОрганизацииВинительныйПадеж(Команда)
	ВставитьПараметр("{РуководительОрганизацииВинительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительОрганизацииТворительныйПадеж(Команда)
	ВставитьПараметр("{РуководительОрганизацииТворительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительОрганизацииПредложныйПадеж(Команда)
	ВставитьПараметр("{РуководительОрганизацииПредложныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяОрганизацииРодительныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяОрганизацииРодительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяОрганизацииДательныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяОрганизацииДательныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяОрганизацииВинительныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяОрганизацииВинительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяОрганизацииТворительныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяОрганизацииТворительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяОрганизацииПредложныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяОрганизацииПредложныйПадеж}");
КонецПроцедуры

#КонецОбласти

#Область РеквизитыКонтрагента

// Общие реквизиты контрагента

&НаКлиенте
Процедура ВставитьПолноеНаименованиеКонтрагента(Команда)
	ВставитьПараметр("{ПолноеНаименованиеКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьБанковскиеРеквизитыКонтрагента(Команда)
	ВставитьПараметр("{БанковскиеРеквизитыКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьИННКППКонтрагента(Команда)
	ВставитьПараметр("{ИНН_КППКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОГРНКонтрагента(Команда)
	ВставитьПараметр("{ОГРНКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСвидетельствоКонтрагента(Команда)
	ВставитьПараметр("{СвидетельствоКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДокументУдостоверяющийЛичностьКонтрагента(Команда)
	ВставитьПараметр("{ДокументУдостоверяющийЛичностьКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСловоИменуемоеДляКонтрагента(Команда)
	ВставитьПараметр("{СловоИменуемоеДляКонтрагента}");
КонецПроцедуры

// Контактная информация контрагента

&НаКлиенте
Процедура ВставитьЮридическийАдресКонтрагента(Команда)
	ВставитьПараметр("{ЮридическийАдресКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьГородПоЮридическомуАдресуКонтрагента(Команда)
	ВставитьПараметр("{ГородПоЮридическомуАдресуКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьФактическийАдресКонтрагента(Команда)
	ВставитьПараметр("{ФактическийАдресКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьГородПоФактическомуАдресуКонтрагента(Команда)
	ВставитьПараметр("{ГородПоФактическомуАдресуКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьПочтовыйАдресКонтрагента(Команда)
	ВставитьПараметр("{ПочтовыйАдресКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьГородПоПочтовомуАдресуКонтрагента(Команда)
	ВставитьПараметр("{ГородПоПочтовомуАдресуКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьТелефонКонтрагента(Команда)
	ВставитьПараметр("{ТелефонКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьФаксКонтрагента(Команда)
	ВставитьПараметр("{ФаксКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьАдресЭлектроннойПочтыКонтрагента(Команда)
	ВставитьПараметр("{АдресЭлектроннойПочтыКонтрагента}");
КонецПроцедуры

// Представитель контрагента

&НаКлиенте
Процедура ВставитьПредставительКонтрагента(Команда)
	ВставитьПараметр("{ПредставительКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительКонтрагента(Команда)
	ВставитьПараметр("{РуководительКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяКонтрагента(Команда)
	ВставитьПараметр("{ДолжностьРуководителяКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОснованиеПолномочийРуководителяКонтрагента(Команда)
	ВставитьПараметр("{ОснованиеПолномочийРуководителяКонтрагента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительКонтрагентаРодительныйПадеж(Команда)
	ВставитьПараметр("{РуководительКонтрагентаРодительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительКонтрагентаДательныйПадеж(Команда)
	ВставитьПараметр("{РуководительКонтрагентаДательныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительКонтрагентаВинительныйПадеж(Команда)
	ВставитьПараметр("{РуководительКонтрагентаВинительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительКонтрагентаТворительныйПадеж(Команда)
	ВставитьПараметр("{РуководительКонтрагентаТворительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРуководительКонтрагентаПредложныйПадеж(Команда)
	ВставитьПараметр("{РуководительКонтрагентаПредложныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяКонтрагентаРодительныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяКонтрагентаРодительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяКонтрагентаДательныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяКонтрагентаДательныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяКонтрагентаВинительныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяКонтрагентаВинительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяКонтрагентаТворительныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяКонтрагентаТворительныйПадеж}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДолжностьРуководителяКонтрагентаПредложныйПадеж(Команда)
	ВставитьПараметр("{ДолжностьРуководителяКонтрагентаПредложныйПадеж}");
КонецПроцедуры

#КонецОбласти

#Область РеквизитыДоговора

&НаКлиенте
Процедура ВставитьДатуДоговора(Команда)
	ВставитьПараметр("{ДатаДоговора}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьНомерДоговора(Команда)
	ВставитьПараметр("{НомерДоговора}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСрокДействия(Команда)
	ВставитьПараметр("{СрокДействияДоговора}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСрокОплаты(Команда)
	ВставитьПараметр("{СрокОплатыПоДоговору}");
КонецПроцедуры

#КонецОбласти

#Область РеквизитыСчетаНаОплату

&НаКлиенте
Процедура ВставитьСуммуДокумента(Команда)
	ВставитьПараметр("{СуммаДокумента}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСуммаДокументаПрописью(Команда)
	ВставитьПараметр("{СуммаДокументаПрописью}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСуммаДокументаБезНДС(Команда)
	ВставитьПараметр("{СуммаДокументаБезНДС}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСуммаДокументаБезНДСПрописью(Команда)
	ВставитьПараметр("{СуммаДокументаБезНДСПрописью}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСуммаНДС(Команда)
	ВставитьПараметр("{СуммаНДС}");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСуммаНДСПрописью(Команда)
	ВставитьПараметр("{СуммаНДСПрописью}");
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВосстановитьТиповойШаблон(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВосстановитьТиповойШаблонЗавершение", ЭтотОбъект);

	ТекстВопроса = НСтр("ru = 'Заменить текущий шаблон договора на типовой?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьДополнительныйРеквизит(Команда)
	СтрокаИндексПараметра = СтрЗаменить(Команда.Имя, "ВставитьДополнительныйРеквизит", "");
	ИндексПараметра = ?(ПустаяСтрока(СтрокаИндексПараметра),0,Число(СтрокаИндексПараметра));
	ВставитьПараметр("{" + ЭтаФорма.ДополнительныеРеквизиты[ИндексПараметра] + "}");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВставитьПараметр(Значение)
	
	ЗакладкаНачала = Неопределено;
	ЗакладкаОкончания = Неопределено;
	Элементы.ФорматированныйДокумент.ПолучитьГраницыВыделения(ЗакладкаНачала, ЗакладкаОкончания);

	ПозицияНачала = ФорматированныйДокумент.ПолучитьПозициюПоЗакладке(ЗакладкаНачала);
	ПозицияОкончания = ФорматированныйДокумент.ПолучитьПозициюПоЗакладке(ЗакладкаОкончания);
	
	Если ЗакладкаНачала <> ЗакладкаОкончания Тогда 
		ФорматированныйДокумент.Удалить(ЗакладкаНачала, ЗакладкаОкончания);
		Элементы.ФорматированныйДокумент.УстановитьГраницыВыделения(ЗакладкаНачала, ЗакладкаНачала);
	КонецЕсли;

	// Выделяем параметр в тексте договора жирным шрифтом и желтым фоном.
	Если ФорматированныйДокумент.Элементы.Количество() = 0 Тогда
		НовыйЭлементДокумента = ФорматированныйДокумент.Добавить(Значение, Тип("ТекстФорматированногоДокумента"));
	Иначе
		НовыйЭлементДокумента = ФорматированныйДокумент.Вставить(ЗакладкаНачала, Значение, Тип("ТекстФорматированногоДокумента"));
	КонецЕсли;

	Если Не СтрНачинаетсяС(Значение, "{Слово") Тогда
		НовыйЭлементДокумента.Шрифт = Новый Шрифт(НовыйЭлементДокумента.Шрифт, , , Истина, , );
	КонецЕсли;
	НовыйЭлементДокумента.ЦветФона 	= ЦветФонаЗаменяемогоПараметра;
	
	ПозицияОкончания = ПозицияНачала + СтрДлина(Значение);
	ЗакладкаОкончания = ФорматированныйДокумент.ПолучитьЗакладкуПоПозиции(ПозицияОкончания);
	Элементы.ФорматированныйДокумент.УстановитьГраницыВыделения(ЗакладкаНачала, ЗакладкаОкончания);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьТиповойШаблонНаСервере()

	Если НЕ ЗначениеЗаполнено(Объект.ИмяМакета) Тогда
		Возврат;
	КонецЕсли;

	МакетДоговора = Справочники.ШаблоныДоговоров.ПолучитьМакет(Объект.ИмяМакета);
	ТекстHTML = МакетДоговора.ПолучитьТекст();
	Вложения = Новый Структура;
	ФорматированныйДокумент.УстановитьHTML(ТекстHTML, Вложения);
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьТиповойШаблонЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда

		ВосстановитьТиповойШаблонНаСервере();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьДополнительныеРеквизитыИДопСвойства()

	// Добавим дополнительные реквизиты и доп. свойства объектов для выбора в качестве параметров.
	
	СоответствиеДопРеквизитыГруппаЭлементов = Новый Соответствие;
	
	ВсеСвойства = Новый Массив;
	
	// Список доп. реквизитов и доп. сведений организации
	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Справочники.Организации.ПустаяСсылка(), Истина, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыОрганизация, СвойстваОбъекта);

	// Список доп. реквизитов и доп. сведений контрагента
	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Справочники.Контрагенты.ПустаяСсылка(), Истина, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыКонтрагент, СвойстваОбъекта);

	// Список доп. реквизитов и доп. сведений договора
	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Справочники.ДоговорыКонтрагентов.ПустаяСсылка(), Истина, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыДоговорКонтрагента, СвойстваОбъекта);

	// Список доп. сведений Счета на оплату
	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Документы.СчетНаОплатуПокупателю.ПустаяСсылка(), Ложь, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыСчетНаОплатуПокупателю, СвойстваОбъекта);

	// Текстовые поля по массиву ссылок
	РеквизитыСвойств = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВсеСвойства, "Заголовок, Наименование");
	
	// Вставляем в подменю каждого объекта перечень всех его доп. реквизитов и доп. свойств отдельными пунктами.
	
	НомерКоманды = 0;
	Для Каждого КлючИЗначение Из СоответствиеДопРеквизитыГруппаЭлементов Цикл 
	
		МассивСвойств = КлючИЗначение.Значение;	
	
		Для Каждого СсылкаНаСвойство Из МассивСвойств Цикл
	
			ПоляСвойства = РеквизитыСвойств[СсылкаНаСвойство];
			Если ПоляСвойства = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		
			ИмяКоманды = "ВставитьДополнительныйРеквизит" + Формат(НомерКоманды, "ЧГ=");
			НаименованиеРеквизита = ПоляСвойства.Заголовок;
			
			Команда = Команды.Добавить(ИмяКоманды);
			Команда.Заголовок = НаименованиеРеквизита;
			Команда.Действие = "ВставитьДополнительныйРеквизит";
			
			Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), КлючИЗначение.Ключ);
			Кнопка.ИмяКоманды = ИмяКоманды;
			Кнопка.Заголовок = НаименованиеРеквизита;
			
			ЭтотОбъект.ДополнительныеРеквизиты.Добавить(ПоляСвойства.Наименование);
			
			НомерКоманды = НомерКоманды + 1;
		
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
