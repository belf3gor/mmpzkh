#Область ОбработчикиСобытийФормы  

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачальноеЗначениеЗдания = Объект.Здание;
	
	ЭтоНовый           = Объект.Ссылка.Пустая();
	//УсловияНеЗаполнены = Не Объект.ДоговорЗаключенНаБезвозмезднойОснове И Не Объект.УстановленыКонкретныеСрокиОплаты И ПустаяСтрока(Объект.ИныеУсловияДоговора);
	
	// По умолчанию для новых элементов задаем установку конкретных сроков оплаты.
	Если ЭтоНовый Тогда
		Объект.УстановленыКонкретныеСрокиОплаты = Истина;
	КонецЕсли;
	
	ВидУсловийДоговора = ПолучитьВидУсловийДоговора();
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
Процедура ПриОткрытии(Отказ)
	
	УправлениеФормой();
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.Наименование = "Договор ДПОИ №" + Объект.НомерДоговора + " от " + Формат(Объект.ДатаЗаключенияДоговора, "ДФ=dd.MM.yyyy");
	
КонецПроцедуры // ПередЗаписью()

&НаСервере
// Обработчик проверки заполнения формы.
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Отказ = Ложь;
	
	Если ВидУсловийДоговора = "УстановленныСрокиОплаты" Тогда
		Если Объект.ЧислоНачалаПериодаВнесенияПлаты = 0 ИЛИ Объект.ЧислоОкончанияПериодаВнесенияПлаты = 0 Тогда
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Указан некорректный период оплаты!");
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли ВидУсловийДоговора = "ИныеУсловия" Тогда 
		Если ПустаяСтрока(Объект.ИныеУсловияДоговора) Тогда
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Не указаны иные условия оплаты для договора!");
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы 

&НаКлиенте
// Обработчик события "ПриИзменении" чисел внесения платы по договору.
//
Процедура ПериодаДействияПриИзменении(Элемент)
	
	УстановитьЧислоМесяцаНадпись(Этаформа);
	
КонецПроцедуры // ПериодаДействияПриИзменении()

&НаКлиенте
// Обработчик события "ПриИзменении" поля выбора "Здание".
Процедура ЗданиеПриИзменении(Элемент)
	
	Если Не НачальноеЗначениеЗдания = ПредопределенноеЗначение("Справочник.КВП_Здания.ПустаяСсылка") И Не Объект.Здание = НачальноеЗначениеЗдания  Тогда
		Оповещение = Новый ОписаниеОповещения("ВопросЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(Оповещение, "Очистить данные документа?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры //ЗданиеПриИзменении()

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ВидУсловийДоговора".
Процедура ВидУсловийДоговораПриИзменении(Элемент)
	
	Если ВидУсловийДоговора = "БезвозмезднаяОплата" Тогда
		
		Объект.ДоговорЗаключенНаБезвозмезднойОснове = Истина;
		Объект.УстановленыКонкретныеСрокиОплаты     = Ложь;
		
	ИначеЕсли ВидУсловийДоговора = "УстановленныСрокиОплаты" Тогда
		
		Объект.ДоговорЗаключенНаБезвозмезднойОснове = Ложь;
		Объект.УстановленыКонкретныеСрокиОплаты     = Истина;
		
	Иначе
		
		Объект.ДоговорЗаключенНаБезвозмезднойОснове = Ложь;
		Объект.УстановленыКонкретныеСрокиОплаты     = Ложь;
		
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

// СхемыУчета
&НаКлиенте
// Подключаемый обработчик команды перехода к схеме учета.
Процедура Подключаемый_ОткрытьСхемуУчета(Команда)
	
	ОТР_СхемыУчетаКлиент.Подключаемый_ОткрытьСхемуУчета(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры
// Конец СхемыУчета

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
// Процедура управления внешним видом формы.
Процедура УправлениеФормой()
	
	УстановитьЧислоМесяцаНадпись(ЭтаФорма);
	
	ЭлементыФормы = ЭтаФорма.Элементы;
	
	УстановленыКонкретныеСрокиОплаты      = Объект.УстановленыКонкретныеСрокиОплаты;
	ДоговорЗаключенНаБезвозмезднойОснове  = Объект.ДоговорЗаключенНаБезвозмезднойОснове;
	
	ЭлементыФормы.ГруппаУсловияДоговораПоОплате.Видимость = Не ДоговорЗаключенНаБезвозмезднойОснове;
	
	ЭлементыФормы.ГруппаУсловиеПоСрокамОплаты.Видимость   = УстановленыКонкретныеСрокиОплаты;
	ЭлементыФормы.ГруппаИныеУсловия.Видимость             = Не УстановленыКонкретныеСрокиОплаты;
	
	Если УстановленыКонкретныеСрокиОплаты Тогда
		ЭтаФорма.Элементы.ПлатаЗаПомещенийМКДМесяц.Заголовок = "Месячный размер платы за пользование общ. имуществом";
	КонецЕсли;
	
	Если Не(УстановленыКонкретныеСрокиОплаты Или ДоговорЗаключенНаБезвозмезднойОснове) Тогда
		ЭтаФорма.Элементы.ПлатаЗаПомещенийМКДМесяц.Заголовок = "Размер платы за пользование общ. имуществом";
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
// Устанавливает поясняющую надпись для полей ввода чисел периода внесения платы по договору.
//
Процедура УстановитьЧислоМесяцаНадпись(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ЧислоНачалаПериодаВнесенияПлаты = 31 Тогда
		Элементы.НачалоПоследнееЧислоМесяцаНадпись.Заголовок = "(последнее число месяца)";
	Иначе
		Элементы.НачалоПоследнееЧислоМесяцаНадпись.Заголовок = "";
	КонецЕсли;
	
	Если Объект.ЧислоОкончанияПериодаВнесенияПлаты = 31 Тогда
		Элементы.ОкончаниеПоследнееЧислоМесяцаНадпись.Заголовок = "(последнее число месяца)";
	Иначе
		Элементы.ОкончаниеПоследнееЧислоМесяцаНадпись.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры // УстановитьНадписьЧислоВыставленияКвитанций()

&НаКлиенте
// Процедура-обработка результата вопроса, который вызывается при изменении управляемого объекта.
//
// Параметры:
//  Ответ - КодВозвратаДиалога
//  ДополнительныеПараметры - Структура.
//
Процедура ВопросЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		НачальноеЗначениеЗдания = Объект.Здание;
		ОчиститьДанныеДокумента();
	Иначе
		Объект.Здание = НачальноеЗначениеЗдания;
	КонецЕсли;
	
КонецПроцедуры //ВопросЗавершение()

&НаКлиенте
// Очищает данные документа.
Процедура ОчиститьДанныеДокумента()
		
	Объект.МесяцНачалаПериодаВнесенияПлатыТекущий = Истина;
	Объект.ЧислоНачалаПериодаВнесенияПлаты = 1;
	
	Объект.МесяцОкончаниеПериодаВнесенияПлатыТекущий = Истина;
	Объект.ЧислоОкончанияПериодаВнесенияПлаты = 1;
	
	Объект.УправляющаяОрганизация 			= ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	Объект.ПредметДоговора 					= "";
	Объект.Арендатор 						= ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
    Объект.НаправлениеРасходованияСредств 	= "";
	Объект.Комментарий 						= "";
	Объект.ПлатаЗаПомещенияМКДМесяц         = 0;
		
КонецПроцедуры // ОчиститьДанныеДокумента()

&НаСервере
// Функция возвращает вид условий договора, исходя из значений реквизитов.
Функция ПолучитьВидУсловийДоговора()
	
	Если Объект.ДоговорЗаключенНаБезвозмезднойОснове Тогда
		Возврат "БезвозмезднаяОплата";
	ИначеЕсли Объект.УстановленыКонкретныеСрокиОплаты Тогда
		Возврат "УстановленныСрокиОплаты";
	Иначе
		Возврат "ИныеУсловия";
	КонецЕсли;
	
КонецФункции

#КонецОбласти