#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура СоздатьЭлементыСпецодежда() Экспорт 
	
	Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Спецодежда")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Спецодежда";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
						
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Спецоснастка")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Спецоснастка";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Инвентарь и хозяйственные принадлежности")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Инвентарь и хозяйственные принадлежности";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку;
		Запись.СчетУчетаЗабалансовый                = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку;
		
	КонецЕсли;
	
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);
    КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлементыВозвратнаяТара() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Возвратная тара")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Возвратная тара";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыОС() Экспорт 
	
	Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Оборудование (объекты основных средств)")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Оборудование (объекты основных средств)";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ПриобретениеКомпонентовОсновныхСредств;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСприПриобретенииОсновныхСредств;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Оборудование к установке")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Оборудование к установке";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСприПриобретенииОсновныхСредств;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
	КонецЕсли;
	
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);
    КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлементыКомиссияНаПродажу() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары на комиссии")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Товары на комиссии";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыКомиссияНаЗакупку() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары на ответственном хранении")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Товары на ответственном хранении";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыПроизводство() Экспорт 
	
	Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Полуфабрикаты")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Полуфабрикаты";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.Полуфабрикаты;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная;
		Запись.СчетУчетаЗабалансовый                = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку;
		Запись.СчетУчетаПередачиЗабалансовый        = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Продукция")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Продукция";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ГотоваяПродукция;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Продукция из материалов заказчика")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Продукция из материалов заказчика";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
		
	КонецЕсли;
	
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);
    КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлементыУслугаЕНВД() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуги ЕНВД")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Услуги ЕНВД";
		ВидНоменклатуры.Услуга = Истина;
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыМатериал() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Материалы")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Материалы";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.СырьеИМатериалы;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку;
		Запись.СчетУчетаЗабалансовый                = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Функция НайтиСоздатьЭлементыТовар() Экспорт 
	
	НаименованиеПоУмолчанию = НСтр("ru = 'Товары'");
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеПоУмолчанию, Истина)) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = НаименованиеПоУмолчанию;
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные;
		
		Набор.Записать(Ложь);
		
		Возврат ВидНоменклатуры.Ссылка;
		
	Иначе
		
		Возврат Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары");
		
	КонецЕсли; 
	
КонецФункции

Функция НайтиСоздатьЭлементыУслуга() Экспорт 
	
	НаименованиеПоУмолчанию = НСтр("ru = 'Услуги'");
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеПоУмолчанию, Истина)) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = НаименованиеПоУмолчанию;
		ВидНоменклатуры.Услуга = Истина;
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
		
		Набор.Записать(Ложь);
		
		Возврат ВидНоменклатуры.Ссылка;
		
	Иначе
		
		Возврат Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуги");
		
	КонецЕсли; 
	
КонецФункции

Функция ЭлементВидНоменклатурыПоУмолчанию(Услуга) Экспорт
	
	НеобходимоСоздатьЭлемент = Ложь;
	
	Если Услуга Тогда
		НаименованиеПоУмолчанию = НСтр("ru = 'Услуги'");
	Иначе
		НаименованиеПоУмолчанию = НСтр("ru = 'Товары'");
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 2
		|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатурыПоУмолчанию,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	ВидыНоменклатуры.Услуга = &Услуга
		|	И НЕ ВидыНоменклатуры.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		
	Запрос.УстановитьПараметр("Услуга",                          Услуга);
	Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеПоУмолчанию);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Количество() = 1 Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
			ВидНоменклатурыПоУмолчанию = Выборка.ВидНоменклатурыПоУмолчанию;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
	Иначе
		НеобходимоСоздатьЭлемент = Истина;
	КонецЕсли;
	
	// Создание элемента для обмена с заданными параметрами
	Если НеобходимоСоздатьЭлемент Тогда
		ВидНоменклатурыПоУмолчанию = ?(Услуга, НайтиСоздатьЭлементыУслуга(), НайтиСоздатьЭлементыТовар());
	КонецЕсли;
	
	Возврат ВидНоменклатурыПоУмолчанию.Ссылка;
	
КонецФункции

#КонецЕсли