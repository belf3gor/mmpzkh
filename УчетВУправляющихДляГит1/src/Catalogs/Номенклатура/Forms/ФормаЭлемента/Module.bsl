
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Форма спецификации открывается в разных режимах. Это зависит от места откуда была открыта форма спецификации:
	// - если форма была открыта из номенклатуры (по гиперссылке в карточке номенклатуры или из списка спецификаций номенклатуры),
	//   то форма откроется в режиме Блокировка владельца, чтобы было понятно, к какой продукции она относится.
	// - если форма была открыта из общего списка спецификации, то режим открытия будет Независимый. 
	//   Продукция, к которой она относится, отображается на форме.
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ФормироватьНаименованиеПолноеАвтоматически = УстановитьФлагФормироватьНаименованиеПолноеАвтоматически(Объект.НаименованиеПолное,Объект.Наименование);
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	Если Параметры.Ключ.Пустая() И ЗначениеЗаполнено(Параметры.ТекстЗаполнения) И ПустаяСтрока(Объект.НаименованиеПолное) Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая()
		И Параметры.Свойство("АлкогольнаяПродукцияЕГАИС")
		И ЗначениеЗаполнено(Параметры.АлкогольнаяПродукцияЕГАИС) Тогда
		
		Объект.Наименование       = Параметры.НаименованиеНоменклатурыЕГАИС;
		Объект.НаименованиеПолное = Параметры.ПолноеНаименованиеНоменклатурыЕГАИС;
		
		Если ЗначениеЗаполнено(Параметры.ИмпортерЕГАИС) Тогда
			ИмпортерЕГАИС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ИмпортерЕГАИС, "Контрагент");
			Если ТипЗнч(ИмпортерЕГАИС) = Тип("СправочникСсылка.Контрагенты") Тогда
				Объект.Импортер = ИмпортерЕГАИС;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.ПроизводительЕГАИС) Тогда
			ПроизводительЕГАИС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ПроизводительЕГАИС, "Контрагент");
			Если ТипЗнч(ПроизводительЕГАИС) = Тип("СправочникСсылка.Контрагенты") Тогда
				Объект.Производитель = ПроизводительЕГАИС;
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьСведенияОбАлкогольнойПродукции = Истина;
		Если ЗначениеЗаполнено(Параметры.ВидАлкогольнойПродукцииЕГАИС) Тогда
			ВидАлкогольнойПродукцииЕГАИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.ВидАлкогольнойПродукцииЕГАИС, "Код, Наименование, Маркируемый");
			КодВидаАлкогольнойПродукции = ВидАлкогольнойПродукцииЕГАИС.Код;
			НаименованиеВидаАлкогольнойПродукции = ВидАлкогольнойПродукцииЕГАИС.Наименование;
			ВидЛицензииАлкогольнойПродукции = ?(ВидАлкогольнойПродукцииЕГАИС.Маркируемый, 
				Перечисления.ВидыЛицензийНаПродажуАлкоголя.АлкогольнаяПродукция, 
				Перечисления.ВидыЛицензийНаПродажуАлкоголя.Пиво);
		КонецЕсли;
			
		КоэффПересчетаДал = Параметры.ОбъемЕГАИС;
		
	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("Услуга") Тогда
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Услуга", Параметры.ЗначенияЗаполнения.Услуга);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ВидНоменклатуры.ПараметрыВыбора = НовыеПараметры;
		
	КонецЕсли;
	
	Если Объект.Услуга Тогда
		Объект.СтатьяЗатрат = Неопределено;
		ОсновнойВидНоменклатуры = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойВидНоменклатурыУслуга");
	Иначе
		ОсновнойВидНоменклатуры = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойВидНоменклатуры");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		ВидНоменклатурыПриИзмененииНаСервере();
	КонецЕсли;
	
	Элементы.СтатьяЗатрат.Видимость = ПравоДоступа("Чтение", Метаданные.Справочники.СтатьиЗатрат);
	РаздельныйУчетНДС = УчетНДСРаздельный.ЕстьУчетнаяПолитикаСРаздельнымУчетомНДС();
	
	ЗаполнитьПолеНаименованияКода("ОКВЭД");
	ЗаполнитьПолеНаименованияКода("ОКВЭД2");
	ЗаполнитьПолеНаименованияКода("ТНВЭД");
	ЗаполнитьПолеНаименованияКода("ОКП");
	ЗаполнитьПолеНаименованияКода("ОКПД2");
	
	УправлениеФормой(ЭтаФорма);
	
	УстановитьУсловноеОформление();
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтаФорма,
		"БП.Справочник.Номенклатура",
		"ФормаЭлемента",
		НСтр("ru='Новости: Номенклатура'"),
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
	ЧтениеЦенПродаж    = ПравоДоступа("Чтение", Метаданные.Константы.НастройкаЗаполненияЦеныПродажи);
	
	Если Не ЧтениеЦенПродаж Тогда
		Элементы.ГруппаЦенаПродажи.Видимость = Ложь;
	Иначе	
		НастроитьВидимостьЭлементыУправленияЦенойПродажи();
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ВалютаЦены         = ВалютаРегламентированногоУчета;
		ВалютыЦеныБезВалют = ВалютаРегламентированногоУчета;
		
		ОтобразитьОсновнуюСпецификацию();
		
	КонецЕсли;
	
	НастройкиУчетаМСФО.НастроитьФормуОбъектаУчета(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Элементы.СтавкаНДС.РежимВыбораИзСписка = Истина;
	Элементы.СтавкаНДС.СписокВыбора.Очистить();
	ТекущаяДатаПользователя = ОбщегоНазначения.ТекущаяДатаПользователя();
	Для Каждого ЗначениеПеречисления Из Перечисления.ВидыСтавокНДС Цикл
		Элементы.СтавкаНДС.СписокВыбора.Добавить(ЗначениеПеречисления,
			Строка(Перечисления.СтавкиНДС.СтавкаНДС(ЗначениеПеречисления, ТекущаяДатаПользователя)));
	КонецЦикла;
	
	// БЭД
	ОбменСКонтрагентами.ПриСозданииФормыНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПолучитьЗначениеЦеныПродажи();
	ОтобразитьОсновнуюСпецификацию();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
			
	ЗаписатьИзменениеЦеныВРегистр(ТекущийОбъект);	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	Если Не ТекущийОбъект.ЭтоНовый() Тогда
		НаименованиеДоИзменения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Ссылка, "Наименование");
		ПараметрыЗаписи.Вставить("НаименованиеДоИзменения", НаименованиеДоИзменения);
		// Для передачи в ИсправитьНаименованиеСпецификации() - см. ПослеЗаписиНаСервере()
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтаФорма);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;

	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
	Если ИмяСобытия = "ФормаНастройкаЦеныПродажиИзменена" или ИмяСобытия = "Запись_НаборКонстант" Тогда
		
		ИзменениеНаФорме();
		
	ИначеЕсли ИмяСобытия = "НазначенаПоКнопкеОсновнаяСпецификацияВСпискеСпецификаций" Тогда
		
		// Спецификация может быть назначена основной из списка спецификаций, открытого в подчиненной форме.
		// Информация об основной спецификации хранится в справочнике Номенклатура.
		// Однако, непосредственно из списка спецификаций менять элемент номенклатуры не следует,
		// так как это может привести к выдаче пользователю непонятного ему сообщения 
		// "Данные были изменены другим пользователем".
		// Поэтому список посылает оповещение форме номенклатуры, которая записывает сама себя.
		Если Параметр.Номенклатура = Объект.Ссылка Тогда
			УстановитьОсновнуюСпецификацию(Параметр.ОсновнаяСпецификация);
			ОповеститьОбИзменении(Параметр.ОсновнаяСпецификация);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЗаписанаСпецификацияНоменклатуры" Тогда
		
		Если Параметр.Свойство("НоменклатураПредыдущийВладелец") Тогда
			
			Если Параметр.НоменклатураВладелец = Объект.Ссылка Или Параметр.НоменклатураПредыдущийВладелец  = Объект.Ссылка Тогда
				
				Если Не Модифицированность Тогда 
					Прочитать();
				Иначе
					
					// Записать изменения уже нельзя.
					// Предотвратим возможность выполнить явно бесполезные действия,
					// но оставим возможность скопировать введенные данные в буфер обмена.
					
					Если Параметр.НоменклатураПредыдущийВладелец  = Объект.Ссылка Тогда
						Объект.ОсновнаяСпецификацияНоменклатуры = Неопределено;
					Иначе
						Объект.ОсновнаяСпецификацияНоменклатуры = Параметр.ИзмененнаяСпецификация;
					КонецЕсли;
					
					ОтобразитьОсновнуюСпецификацию();
					
				КонецЕсли;
				
			КонецЕсли;
				
		ИначеЕсли Параметр.НоменклатураВладелец = Объект.Ссылка Тогда
			
			// Вызывается, в двух случаях
			// 1. редактируем новую (первую) спецификацию - и записали ее
			// 2. изменили состав спецификации
			
			Если Не ЗначениеЗаполнено(Объект.ОсновнаяСпецификацияНоменклатуры) Тогда
				// записали новую
				УстановитьОсновнуюСпецификацию(Параметр.ИзмененнаяСпецификация);
				ОповеститьОбИзменении(Параметр.ИзмененнаяСпецификация);
			ИначеЕсли Объект.ОсновнаяСпецификацияНоменклатуры = Параметр.ИзмененнаяСпецификация Тогда
				// изменили состав существующей
				ОсновнаяСпецификацияПредставление = Параметр.СпецификацияПредставление;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОсновнуюСпецификацию(ИзмененнаяСпецификация)
	
	Объект.ОсновнаяСпецификацияНоменклатуры = ИзмененнаяСпецификация;
	Записать();
	ОсновнаяСпецификацияПредставление = УправлениеПроизводством.ПредставлениеОсновнойСпецификации(ИзмененнаяСпецификация);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Оповестить("ВводНовогоЭлементаСправочникаНоменклатура", ВладелецФормы, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Выполняем вне транзакции записи, чтобы незначительная проблема
	// (невозможность уточнить наименование спецификации, которое и так еще не видно пользователю)
	// не эскалировала более серьезную (невозможность записать номенклатуру)
	Справочники.СпецификацииНоменклатуры.ИсправитьНаименованиеСпецификации(
		ТекущийОбъект.ОсновнаяСпецификацияНоменклатуры,
		ТекущийОбъект.Ссылка,
		ТекущийОбъект.Наименование,
		ПараметрыЗаписи);
		
	//Запишем сведения об алкогольной продукции
	
	Если ЗаполнитьСведенияОбАлкогольнойПродукции Тогда
		
		СведенияОбАлкогольнойПродукции = РегистрыСведений.СведенияОбАлкогольнойПродукции.СоздатьМенеджерЗаписи();
		СведенияОбАлкогольнойПродукции.Номенклатура        = ТекущийОбъект.Ссылка;
		СведенияОбАлкогольнойПродукции.ВидЛицензии         = ВидЛицензииАлкогольнойПродукции;
		СведенияОбАлкогольнойПродукции.КодВида169          = КодВидаАлкогольнойПродукции;
		СведенияОбАлкогольнойПродукции.НаименованиеВида169 = НаименованиеВидаАлкогольнойПродукции;
		СведенияОбАлкогольнойПродукции.КоэффПересчетаДал   = КоэффПересчетаДал;
		СведенияОбАлкогольнойПродукции.Записать();
	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодичностьУслугиПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если ФормироватьНаименованиеПолноеАвтоматически Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Список = Новый СписокЗначений();
	Список.Добавить(Объект.Наименование);

	// Выбор из списка и обработка выбора.
	Оповещение = Новый ОписаниеОповещения("НаименованиеПолноеНачалоВыбораЗавершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(Оповещение, Список, Элементы.НаименованиеПолное);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)
	
	ФормироватьНаименованиеПолноеАвтоматически = УстановитьФлагФормироватьНаименованиеПолноеАвтоматически(
		Элементы.НаименованиеПолное,
		Элементы.Наименование);
		
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТНВЭДКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ТНВЭД")
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКП");
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПД2КодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКПД2");
	
КонецПроцедуры

&НаКлиенте
Процедура ОКВЭДКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКВЭД");
	
КонецПроцедуры

&НаКлиенте
Процедура ОКВЭД2КодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКВЭД2");
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	Если (НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры))
		И (ЗначениеЗаполнено(Объект.Родитель)) Тогда
		
		РодительПриИзмененииНаСервере();
		УправлениеФормой(ЭтаФорма);
		
	ИначеЕсли (ЗначениеЗаполнено(Объект.ВидНоменклатуры))
		И (ЗначениеЗаполнено(Объект.Родитель)) Тогда 
		
		ВидНоменклатурыГруппы = ПолучитьВидНоменклатуры(Объект.Родитель);
		
		Если ЗначениеЗаполнено(ВидНоменклатурыГруппы) И
			Объект.ВидНоменклатуры <> ВидНоменклатурыГруппы Тогда		
		
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Для группы ""%1"" основной вид номенклатуры ""%2"".'")
				+ Символы.ПС
				+ НСтр("ru = 'Заменить текущий вид номенклатуры ""%3"" на ""%2""?'"), 
				Объект.Родитель, ВидНоменклатурыГруппы, Объект.ВидНоменклатуры);
			
			Оповещение = Новый ОписаниеОповещения("ВопросИзменитьВидНоменклатурыЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросИзменитьВидНоменклатурыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		РодительПриИзмененииНаСервере();
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидНоменклатуры(ГруппаНоменклатуры)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ГруппаНоменклатуры, "ВидНоменклатуры");
	
КонецФункции

&НаСервере
Процедура РодительПриИзмененииНаСервере()
	
	Объект.ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Родитель, "ВидНоменклатуры");
	ВидНоменклатурыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	
	Если Объект.ВидСтавкиНДС <> ПредопределенноеЗначение("Перечисление.ВидыСтавокНДС.БезНДС") Тогда
		Объект.КодРаздел7ДекларацииНДС = Неопределено;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НастройкаМСФОПриИзменении(Элемент)
	
	НастройкиУчетаМСФОКлиент.ПриИзмененииПоляФормы(ЭтотОбъект, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменениеНаФорме()
	
	ПолучитьЗначениеЦеныПродажи();
	НастроитьВидимостьЭлементыУправленияЦенойПродажи();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменениеЦеныВРегистр(ТекущийОбъект)
	
	ПравоНаИзменениеРегистраЦен = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ЦеныНоменклатурыДокументов); 	
	
	Если ПравоНаИзменениеРегистраЦен Тогда
		
		РедактироватьВКарточкеНоменклатуры = 
			(Константы.НастройкаЗаполненияЦеныПродажи.Получить() = Перечисления.НастройкаЗаполненияЦеныПродажи.Номенклатура);
		
		Если РедактироватьВКарточкеНоменклатуры и ЦенаПродажиМодифицирована Тогда
			
			МенеджерЗаписи 						= РегистрыСведений.ЦеныНоменклатурыДокументов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Номенклатура 		= ТекущийОбъект.Ссылка;
			МенеджерЗаписи.СпособЗаполненияЦены = Перечисления.СпособыЗаполненияЦен.ПоПродажнымЦенам;
			МенеджерЗаписи.Валюта				= ВалютаЦены;
			МенеджерЗаписи.Цена 				= ЦенаПродажи;
			МенеджерЗаписи.ЦенаВключаетНДС      = Истина;
			
			МенеджерЗаписи.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗначениеЦеныПродажи()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыДокументов.Цена КАК Цена,
	|	ЦеныНоменклатурыДокументов.Валюта КАК Валюта,
	|	ЦеныНоменклатурыДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЦеныНоменклатурыДокументов.Номенклатура.ВидСтавкиНДС КАК ВидСтавкиНДС
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыДокументов КАК ЦеныНоменклатурыДокументов
	|ГДЕ
	|	ЦеныНоменклатурыДокументов.Номенклатура = &Номенклатура
	|	И ЦеныНоменклатурыДокументов.СпособЗаполненияЦены = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияЦен.ПоПродажнымЦенам)";
		
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаДанных.Следующий() Тогда
		
		Если Не ВыборкаДанных.ЦенаВключаетНДС Тогда
			// В форме номенклатуры цену всегда показываем окончательную для покупателя - т.е. с НДС
			СтавкаНДС = Перечисления.СтавкиНДС.СтавкаНДС(ВыборкаДанных.ВидСтавкиНДС, ОбщегоНазначения.ТекущаяДатаПользователя());
			ЗначениеСтавкиНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС, Ложь);
			ЦенаПродажи    = ВыборкаДанных.Цена * (1 + ЗначениеСтавкиНДС / 100);
		Иначе
			ЦенаПродажи    = ВыборкаДанных.Цена;
		КонецЕсли;
		
		ВалютаЦены         = ВыборкаДанных.Валюта;
		ВалютыЦеныБезВалют = ВыборкаДанных.Валюта;
		
	Иначе 
		
		ЦенаПродажи                    = 0;
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ВалютаЦены                     = ВалютаРегламентированногоУчета;
		ВалютыЦеныБезВалют             = ВалютаРегламентированногоУчета;
		
	КонецЕсли;
	
	ЦенаПродажиМодифицирована = Ложь;	
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементыУправленияЦенойПродажи()
	
	ИзменениеЦенПродаж = ПравоДоступа("Изменение", Метаданные.Константы.НастройкаЗаполненияЦеныПродажи);
	
	Если Не ИзменениеЦенПродаж Тогда		
		ТолькоПросмотрЦеныПродажи = Истина;	
	Иначе	
		ТолькоПросмотрЦеныПродажи = Ложь;
	КонецЕсли;
		
	Элементы.ГруппаЦенаПродажи.Видимость = Истина;
	РедактироватьВКарточкеНоменклатуры = (Константы.НастройкаЗаполненияЦеныПродажи.Получить() = Перечисления.НастройкаЗаполненияЦеныПродажи.Номенклатура);
	ЕстьВалюты = ПолучитьФункциональнуюОпцию("ИспользоватьВалютныйУчет");
	
	Если Не ТолькоПросмотрЦеныПродажи Тогда
		
		Элементы.ЦенаПродажиИзНоменклатуры.	 ТолькоПросмотр  = Не РедактироватьВКарточкеНоменклатуры;	
			
		Если РедактироватьВКарточкеНоменклатуры Тогда

			Элементы.ВалютаЦеныПродажиСВалютами. Видимость   = ЕстьВалюты;
			Элементы.ВалютаЦеныПродажиБезВалют.  Видимость   = Не ЕстьВалюты;
			
		Иначе
					
			Элементы.ВалютаЦеныПродажиСВалютами. Видимость   = Ложь;
			Элементы.ВалютаЦеныПродажиБезВалют.  Видимость   = Истина;
			
		КонецЕсли;
		
	Иначе
		
		Элементы.ЦенаПродажиИзНоменклатуры.	 ТолькоПросмотр = Истина;
		Элементы.ВалютаЦеныПродажиСВалютами. Видимость      = Ложь;
		Элементы.ВалютаЦеныПродажиБезВалют.  Видимость      = Истина;
		
	КонецЕсли;
	
	
	// Установка подсказки
	
	ЭлементыСтроки = Новый Массив;
	
	Если РедактироватьВКарточкеНоменклатуры Тогда
		
		ЭлементыСтроки.Добавить(НСтр("ru = 'По умолчанию цена продажи устанавливается в карточке номенклатуры.'"));
		
	Иначе
		
		ЭлементыСтроки.Добавить(НСтр("ru = 'По умолчанию цена продажи устанавливается в документах продажи (счетах, актах, накладных).'"));
		
	КонецЕсли;
	
	ЭлементыСтроки.Добавить(Символы.ПС);
	ЭлементыСтроки.Добавить(НСтр("ru = 'Изменить настройку можно в форме - '"));
	ЭлементыСтроки.Добавить(Новый ФорматированнаяСтрока("Заполнение цен продажи",,,,"e1cib/data/Обработка.ПанельАдминистрированияБП.Форма.ФормаНастройкиЦеныПродажи"));
	                                                  
	ТекстПодсказкиДляЦеныПродажи = Новый ФорматированнаяСтрока(ЭлементыСтроки);
	
	Элементы.ВалютаЦеныПродажиСВалютами.РасширеннаяПодсказка.Заголовок = ТекстПодсказкиДляЦеныПродажи;
	Элементы.ВалютаЦеныПродажиБезВалют. РасширеннаяПодсказка.Заголовок = ТекстПодсказкиДляЦеныПродажи;
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтаФорма, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();


	// ЕдиницаИзмерения

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ЕдиницаИзмерения");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Услуга", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

// Процедура устанавливает доступность реквизитов формы.
//
&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.Импортер.Доступность                    = НЕ Объект.Услуга;
	Элементы.НомерГТД.Доступность                    = НЕ Объект.Услуга;
	Элементы.СтранаПроисхождения.Доступность         = НЕ Объект.Услуга;
	Элементы.СтатьяЗатрат.Доступность		         = НЕ Объект.Услуга;
	Элементы.ТНВЭДКод.Доступность                    = НЕ Объект.Услуга;
	Элементы.ОКПКод.Доступность                      = НЕ Объект.Услуга;
	Элементы.ОКПД2Код.Доступность                    = НЕ Объект.Услуга;
	Элементы.ПродукцияМаркируемаяДляГИСМ.Видимость   = НЕ Объект.Услуга;
	Элементы.ТабачнаяПродукция.Видимость             = НЕ Объект.Услуга;
	Элементы.КодРаздел7ДекларацииНДС.Видимость       = Форма.РаздельныйУчетНДС
		И Объект.ВидСтавкиНДС = ПредопределенноеЗначение("Перечисление.ВидыСтавокНДС.БезНДС");
	
	// В требовании-накладной допускается указывать только статьи с видом "МатериальныеРасходы"
	ПараметрыВыбораСтатьиЗатрат = Новый Массив;
	Если Не Объект.Услуга Тогда
		МатериальныеРасходы = ПредопределенноеЗначение("Перечисление.ВидыРасходовНУ.МатериальныеРасходы");
		ПараметрыВыбораСтатьиЗатрат.Добавить(Новый ПараметрВыбора("Отбор.ВидРасходовНУ", МатериальныеРасходы));
		// При изменении флага статья затрат очищается
	КонецЕсли;
	
	Элементы.ГруппаПериодичность.Видимость = Объект.Услуга;
	Если ЗначениеЗаполнено(Объект.ПериодичностьУслуги) И (ЗначениеЗаполнено(Объект.НаименованиеПолное) ИЛИ ЗначениеЗаполнено(Объект.Наименование)) Тогда
		НаименованиеНоменклатуры = ?(ПустаяСтрока(Объект.НаименованиеПолное), Объект.Наименование, Объект.НаименованиеПолное);
		ТекстПодсказки = СтрШаблон(НСтр("ru='Пример: %1'"), РаботаСНоменклатуройКлиентСервер.СодержаниеУслуги(
			НаименованиеНоменклатуры,
			Объект.ПериодичностьУслуги,
			ТекущаяДата()));
		Элементы.ПериодичностьУслуги.Подсказка = ТекстПодсказки;
		Элементы.ПериодичностьУслуги.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
	Иначе
		Элементы.ПериодичностьУслуги.Подсказка = "";
		Элементы.ПериодичностьУслуги.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли;
	
	ШаблонПодсказки = НСтр("ru='Содержание услуги в документе будет дополнено выбранной периодичностью.
		|Например, ""%1""'");
		
	ПериодичностьДляПримера = ?(ЗначениеЗаполнено(Объект.ПериодичностьУслуги),
		Объект.ПериодичностьУслуги,
		ПредопределенноеЗначение("Перечисление.Периодичность.Месяц"));
	
	Если ЗначениеЗаполнено(Объект.НаименованиеПолное) Тогда
		НаименованиеДляПримера = Объект.НаименованиеПолное;
	ИначеЕсли ЗначениеЗаполнено(Объект.Наименование) Тогда
		НаименованиеДляПримера = Объект.Наименование;
	Иначе
		НаименованиеДляПримера = НСтр("ru='Оказание услуг'");
	КонецЕсли;
	
	Элементы.ГруппаПериодичность.Подсказка = СтрШаблон(ШаблонПодсказки, РаботаСНоменклатуройКлиентСервер.СодержаниеУслуги(
		НаименованиеДляПримера,
		ПериодичностьДляПримера,
		ТекущаяДата()));
	
	Элементы.СтатьяЗатрат.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораСтатьиЗатрат);
	
КонецПроцедуры // УстановитьДоступность()

// и присваивает соответствующее значение переменной ФормироватьНаименованиеПолноеАвтоматически.
//
// Параметры:
//  Нет.
//
&НаКлиентеНаСервереБезКонтекста
Функция УстановитьФлагФормироватьНаименованиеПолноеАвтоматически(НаименованиеПолное,Наименование)
   
   Возврат (ПустаяСтрока(НаименованиеПолное) ИЛИ НаименованиеПолное = Наименование);
   
КонецФункции // УстановитьФлагФормироватьНаименованиеПолноеАвтоматически()

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.НаименованиеПолное = Результат.Значение;
		Модифицированность = Истина;
		ФормироватьНаименованиеПолноеАвтоматически = Истина;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолеНаименованияКода(ИмяКлассификатора)

	Классификатор = Объект["Код" + ИмяКлассификатора];
	ЭтаФорма[ИмяКлассификатора+"Наименование"] = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Классификатор, "Наименование");

КонецПроцедуры

&НаСервере
Процедура ОтобразитьОсновнуюСпецификацию()
	
	Если Не ЗначениеЗаполнено(Объект.ОсновнаяСпецификацияНоменклатуры) Тогда
		Элементы.ОсновнаяСпецификацияПредставление.Видимость = ПравоДоступа("Редактирование", Метаданные.Справочники.СпецификацииНоменклатуры);
		ОсновнаяСпецификацияПредставление = НСтр("ru = 'Заполнить'");
	Иначе
		ОсновнаяСпецификацияПредставление = УправлениеПроизводством.ПредставлениеОсновнойСпецификации(Объект.ОсновнаяСпецификацияНоменклатуры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ВидНоменклатурыПриИзмененииНаСервере();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ВидНоменклатурыПриИзмененииНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Объект.ВидНоменклатуры = ОсновнойВидНоменклатуры;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Объект.Услуга = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидНоменклатуры, "Услуга");
	Иначе
		Объект.Услуга = Ложь;
	КонецЕсли;
	
	Если Объект.Услуга Тогда
		Объект.СтатьяЗатрат = Неопределено;
		Объект.КодОКП = Неопределено;
		Объект.КодОКПД2 = Неопределено;
		Объект.КодТНВЭД = Неопределено;
		ОКПНаименование = "";
		ОКПД2Наименование = "";
		ТНВЭДНаименование = "";
		Объект.ПродукцияМаркируемаяДляГИСМ = Ложь;
		Объект.ТабачнаяПродукция = Ложь;
	Иначе
		Объект.ПериодичностьУслуги = Неопределено;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтаФорма,
		Команда
	);

КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяСпецификацияПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УдалосьЗаписатьОбъект = Истина;
	
	Если (Объект.Ссылка.Пустая() Или Модифицированность) Тогда
		УдалосьЗаписатьОбъект = Записать();
	КонецЕсли;
	
	Если УдалосьЗаписатьОбъект Тогда
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Владелец", Объект.Ссылка);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ",                          Объект.ОсновнаяСпецификацияНоменклатуры);
		ПараметрыФормы.Вставить("ОткрытоИзКарточкиНоменклатуры", Истина);
		ПараметрыФормы.Вставить("ЗначенияЗаполнения",            ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.СпецификацииНоменклатуры.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсказкаЦеныПродажиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "e1cib/data/Обработка.ПанельАдминистрированияБП.Форма.ФормаНастройкиЦеныПродажи" Тогда
		
		СтандартнаяОбработка = Ложь; // Форму будем открывать с параметром
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОткрытаИзКарточкиНоменклатуры", Истина);
		
		ОткрытьФорму("Обработка.ПанельАдминистрированияБП.Форма.ФормаНастройкиЦеныПродажи", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПродажиИзНоменклатурыПриИзменении(Элемент)
	ЦенаПродажиМодифицирована = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВалютаЦеныПродажиСВалютамиПриИзменении(Элемент)
	ЦенаПродажиМодифицирована = Истина;
КонецПроцедуры

#КонецОбласти