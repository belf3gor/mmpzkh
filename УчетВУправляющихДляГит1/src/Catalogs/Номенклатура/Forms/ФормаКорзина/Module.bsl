&НаКлиенте
Перем Действие; // Описание действия, выполняемого после закрытия формы.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресСпискаВХранилище = Параметры.АдресКорзиныВХранилище;
	
	Корзина = ПолучитьИзВременногоХранилища(АдресСпискаВХранилище);
	
	Если Корзина <> Неопределено Тогда
		Список.Загрузить(Корзина);
	КонецЕсли;
	
	УправлениеОтображениемСписка(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ЗавершениеРаботы Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Действие", Действие);
		СтруктураПараметров.Вставить("АдресКорзиныВХранилище", ПоместитьСписокВХранилище());
		ОповеститьОВыборе(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьСчетПокупателю(Команда)
	
	Действие = "СоздатьСчетПокупателю";
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНакладнуюРеализация(Команда)
	
	Действие = "СоздатьНакладнуюРеализация";
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАктРеализация(Команда)
	
	Действие = "СоздатьАктРеализация";
	
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьЧек(Команда)
	
	// Действие передается в форму справочника "Номенклатура" - "ФормаТовары",
	// где обрабатывается процедурой "ОбработкаЗакрытияКорзины"
	Действие = "СоздатьЧек";
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКорзину(Команда)
	
	Список.Очистить();
	
	УправлениеОтображениемСписка(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	УправлениеОтображениемСписка(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;

	УправлениеОтображениемСписка(ЭтаФорма);	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;

	УправлениеОтображениемСписка(ЭтаФорма);	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные.Количество = 0 Тогда
		ТекущиеДанные.Цена = 0;
	Иначе
		ТекущиеДанные.Цена = ТекущиеДанные.Сумма / ТекущиеДанные.Количество;
	КонецЕсли;

	УправлениеОтображениемСписка(ЭтаФорма);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПоместитьСписокВХранилище()
	
	Корзина = Список.Выгрузить();
	
	КоличествоЭлементовКоллекции = Корзина.Количество();
	
	Для ОбратныйИндекс = 1 По КоличествоЭлементовКоллекции Цикл
		
		Индекс = КоличествоЭлементовКоллекции - ОбратныйИндекс;
		
		Если Корзина[Индекс].Количество = 0 
			ИЛИ НЕ ЗначениеЗаполнено(Корзина[Индекс].Номенклатура) Тогда
			Корзина.Удалить(Индекс);
		КонецЕсли;
		
	КонецЦикла;
	
	АдресСпискаВХранилище = ПоместитьВоВременноеХранилище(Корзина, УникальныйИдентификатор);
	
	Возврат АдресСпискаВХранилище;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеОтображениемСписка(Форма);
	
	Форма.ИтогиКоличествоПозиций = 0;
	Форма.ИтогиКоличество = 0;
	Форма.ИтогиСумма = 0;
	НомерСтроки = 0;
	
	Для Каждого Строка Из Форма.Список Цикл
		
		НомерСтроки = НомерСтроки + 1;
		Строка.НомерСтроки = НомерСтроки;
		
		Форма.ИтогиКоличествоПозиций = НомерСтроки;
		Форма.ИтогиКоличество = Форма.ИтогиКоличество + Строка.Количество;
		Форма.ИтогиСумма = Форма.ИтогиСумма + Строка.Сумма;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
