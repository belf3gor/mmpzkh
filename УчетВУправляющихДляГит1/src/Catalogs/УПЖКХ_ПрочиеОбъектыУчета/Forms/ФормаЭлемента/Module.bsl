#Область ВспомогательныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция возвращает актуальное состояние оборудования.
//
Функция ПолучитьАктуальноеСостояниеОборудованияНаСервере(Оборудование)
	
	Возврат УПЖКХ_УчетОборудованияНаОбъектахУчетаСервер.ПолучитьАктуальноеСостояниеОборудования(Оборудование);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
// Процедура управления элементами формы.
//
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Если Объект.СпособУчетаОборудованияВРеглУчете = ПредопределенноеЗначение("Перечисление.УПЖКХ_СпособыУчетаОборудованияВРеглУчете.Материал") Тогда
		Элементы.Номенклатура.Видимость     = Истина;
		Элементы.ОсновноеСредство.Видимость = Ложь;
	ИначеЕсли Объект.СпособУчетаОборудованияВРеглУчете = ПредопределенноеЗначение("Перечисление.УПЖКХ_СпособыУчетаОборудованияВРеглУчете.ОсновноеСредство") Тогда
		Элементы.Номенклатура.Видимость     = Ложь;
		Элементы.ОсновноеСредство.Видимость = Истина;
	Иначе
		Элементы.Номенклатура.Видимость     = Ложь;
		Элементы.ОсновноеСредство.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.СпособУчетаОборудованияВРеглУчете.Доступность = НЕ Объект.ЭтоОбобщающееОборудование;
	
	Элементы.ГруппаСостоянияОборудования.Видимость        = Не Объект.ЭтоОбобщающееОборудование;
	Элементы.ИдентификационныйНомерОборудования.Видимость = Не Объект.ЭтоОбобщающееОборудование;
	
КонецПроцедуры

&НаКлиенте
// Процедура-обработчик вопроса о копировании доп. сведений оборудования.
//
Процедура ОбработатьРезультатВопросаОКопированииДанныхРегистров(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		// Перед копированием дополнительных сведений необходимо записать элемент.
		Если Записать() Тогда
			СкопироватьДополнительныеСведенияОборудования(Объект.Ссылка, ЗначениеКопирования);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСоСведениямиОбОборудовании

&НаКлиентеНаСервереБезКонтекста
// Процедура производит чтение состояния оборудования.
//
Процедура ПрочитатьСостояниеОборудования(Форма)
	
	ТекущееСостояниеОборудования = ПолучитьАктуальноеСостояниеОборудованияНаСервере(Форма.Объект.Ссылка);
	Если Не ТекущееСостояниеОборудования.Пустая() Тогда
		Форма.СостояниеОборудования = ТекущееСостояниеОборудования;
	Иначе
		Форма.СостояниеОборудования = "Не определено";
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Процедура копирует дополнительные сведения оборудования.
//
Процедура СкопироватьДополнительныеСведенияОборудования(ОборудованиеПриемник, ОборудованиеИсточник)
	
	///////////////////////////////////////////////////////////////////////////////////////////////////
	// Регистр сведений "Сведения о видах работ, выполняемых с оборудованием".
	
	НаборЗаписейИсточника = РегистрыСведений.УПЖКХ_СведенияОВидахРаботВыполняемыхСОборудованием.СоздатьНаборЗаписей();
	НаборЗаписейИсточника.Отбор.Оборудование.Установить(ОборудованиеИсточник);
	НаборЗаписейИсточника.Прочитать();
	
	НаборЗаписейПриемника = РегистрыСведений.УПЖКХ_СведенияОВидахРаботВыполняемыхСОборудованием.СоздатьНаборЗаписей();
	НаборЗаписейПриемника.Отбор.Оборудование.Установить(ОборудованиеПриемник);
	
	НаборЗаписейПриемника.Загрузить(НаборЗаписейИсточника.Выгрузить());
	
	Для Каждого ТекЗапись Из НаборЗаписейПриемника Цикл
		ТекЗапись.Оборудование = ОборудованиеПриемник;
	КонецЦикла;
	
	КВП_ЗаписатьОбъект(НаборЗаписейПриемника);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////
	// Регистр сведений "Сведения о материалах, используемых при проведении работ с оборудованием".
	
	НаборЗаписейИсточника = РегистрыСведений.УПЖКХ_СведенияОМатериалахИспользуемыхПриПроведенииРаботСОборудованием.СоздатьНаборЗаписей();
	НаборЗаписейИсточника.Отбор.Оборудование.Установить(ОборудованиеИсточник);
	НаборЗаписейИсточника.Прочитать();
	
	НаборЗаписейПриемника = РегистрыСведений.УПЖКХ_СведенияОМатериалахИспользуемыхПриПроведенииРаботСОборудованием.СоздатьНаборЗаписей();
	НаборЗаписейПриемника.Отбор.Оборудование.Установить(ОборудованиеПриемник);
	
	НаборЗаписейПриемника.Загрузить(НаборЗаписейИсточника.Выгрузить());
	
	Для Каждого ТекЗапись Из НаборЗаписейПриемника Цикл
		ТекЗапись.Оборудование = ОборудованиеПриемник;
	КонецЦикла;
	
	КВП_ЗаписатьОбъект(НаборЗаписейПриемника);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.СпособУчетаОборудованияВРеглУчете = Перечисления.УПЖКХ_СпособыУчетаОборудованияВРеглУчете.Материал;
	КонецЕсли;
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УПЖКХ_ТиповыеМетодыСервер.ДополнительныйРеквизитПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// Заполним реквизит формы из параметров, он нам понадобится при открытии.
	ЗначениеКопирования = Параметры.ЗначениеКопирования;
	
	ПрочитатьСостояниеОборудования(ЭтаФорма);
	
	УправлениеФормой(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПередЗаписьюНаСервере" формы.
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Свойства"
	УПЖКХ_ТиповыеМетодыСервер.ДополнительныйРеквизитПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	// Если происходит копирование, зададим вопрос о возможности копирования доп. сведений.
	Если Объект.Ссылка.Пустая() И Не ЗначениеКопирования.Пустая() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьРезультатВопросаОКопированииДанныхРегистров", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения,
					   "Скопировать сведения о выполняемых видах работ и совместимых материалах оборудования?" + Символы.ПС + "Внимание, элемент будет записан.",
					   РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСведенияОбОборудовании" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура")
		   И Параметр.Свойство("ТипСведений")
		   И Параметр.ТипСведений = "СостояниеОборудования"
		   И Источник = Объект.Ссылка Тогда
			
			ПрочитатьСостояниеОборудования(ЭтаФорма);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ЭтоОбобщающееОборудование".
Процедура ЭтоОбобщающееОборудованиеПриИзменении(Элемент)
	
	Объект.СпособУчетаОборудованияВРеглУчете = ПредопределенноеЗначение("Перечисление.УПЖКХ_СпособыУчетаОборудованияВРеглУчете.Материал");
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "СпособУчетаОборудованияВРеглУчете".
Процедура СпособУчетаОборудованияВРеглУчетеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "ИсторияСведенийОбОборудовании".
//
Процедура ИсторияСведенийОбОборудовании(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Оборудование", Объект.Ссылка));
	ОткрытьФорму("РегистрСведений.УПЖКХ_СведенияОбОборудовании.ФормаСписка", ПараметрыФормы, ЭтаФорма, Истина, ЭтаФорма.Окно);
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "Перейти_УПЖКХ_СведенияОВидахРаботВыполняемыхСОборудованием".
Процедура Перейти_УПЖКХ_СведенияОВидахРаботВыполняемыхСОборудованием(Команда)
	
	Отбор = Новый Структура("Оборудование", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.УПЖКХ_СведенияОВидахРаботВыполняемыхСОборудованием.ФормаСписка", Новый Структура("Отбор", Отбор))
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "Перейти_УПЖКХ_СведенияОМатериалахИспользуемыхПриПроведенииРаботСОборудованием".
Процедура Перейти_УПЖКХ_СведенияОМатериалахИспользуемыхПриПроведенииРаботСОборудованием(Команда)
	
	Отбор = Новый Структура("Оборудование", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.УПЖКХ_СведенияОМатериалахИспользуемыхПриПроведенииРаботСОборудованием.ФормаСписка", Новый Структура("Отбор", Отбор))
	
КонецПроцедуры

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти