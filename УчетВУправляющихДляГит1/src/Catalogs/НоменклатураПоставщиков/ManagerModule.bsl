#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Процедура для перехода на новый механизм сопоставления номенклатуры БЭД, 
// переносить данные из Справочник.Номенклатура поставщика в РегистрыСведений.НоменклатураКонтрагентовБЭД.
Процедура ПеренестиНоменклатуруПоставщиковВРегистрБЭД(Параметры) Экспорт
	
	Пока Истина Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	НоменклатураПоставщиков.Владелец КАК Владелец,
		|	МАКСИМУМ(НоменклатураПоставщиков.Номенклатура) КАК Номенклатура,
		|	МАКСИМУМ(НоменклатураПоставщиков.Артикул) КАК Артикул,
		|	НоменклатураПоставщиков.Идентификатор КАК Идентификатор,
		|	МАКСИМУМ(НоменклатураКонтрагентовБЭД.Номенклатура) КАК СопоставленнаяНоменклатура,
		|	МАКСИМУМ(НоменклатураПоставщиков.Наименование) КАК Наименование
		|ИЗ
		|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагентовБЭД КАК НоменклатураКонтрагентовБЭД
		|		ПО НоменклатураПоставщиков.Владелец = НоменклатураКонтрагентовБЭД.Владелец
		|			И НоменклатураПоставщиков.Идентификатор = НоменклатураКонтрагентовБЭД.Идентификатор
		|ГДЕ
		|	НоменклатураПоставщиков.Владелец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	И НоменклатураПоставщиков.Идентификатор <> """"
		|	И НоменклатураКонтрагентовБЭД.Номенклатура ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураПоставщиков.Идентификатор,
		|	НоменклатураПоставщиков.Владелец
		|ИТОГИ ПО
		|	Владелец";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		ВыборкаПоВладельцу = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоВладельцу.Следующий() Цикл
			Набор = РегистрыСведений.НоменклатураКонтрагентовБЭД.СоздатьНаборЗаписей();
			Набор.Отбор.Владелец.Установить(ВыборкаПоВладельцу.Владелец);
			Набор.Прочитать();
			Выборка = ВыборкаПоВладельцу.Выбрать();
			Пока Выборка.Следующий() Цикл
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
			КонецЦикла;
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
		КонецЦикла;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецЕсли