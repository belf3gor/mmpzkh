#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ПрограммныйИнтерфейс

// Функция - Получить текстовое вложение
Функция ПолучитьТекстовоеВложение(Ссылка, ИмяФайла, ВАрхиве = Ложь) Экспорт
	
	ВАрхиве = Ложь;
	
	// получаем вложение
	СтрВложения = КонтекстЭДО().ПолучитьВложения(Ссылка, ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтрВложение = СтрВложения[0];
	
	Если СтрВложение.ВАрхиве Тогда 
		ВАрхиве = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	// сохраняем вложение на диск
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	СтрВложение.Данные.Получить().Записать(ИмяВременногоФайла);
	
	// считываем при помощи ЧтениеТекста, чтобы автоматически распозналась кодировка UTF? или ANSI
	ОбъектЧтение = Новый ЧтениеТекста(ИмяВременногоФайла);
	СтрТекст = ОбъектЧтение.Прочитать();
	ОбъектЧтение.Закрыть();
	
	// удаляем временный файл
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат СтрТекст;
	
КонецФункции

// Функция - Получить вложение на сервере
Функция ПолучитьВложениеНаСервере(Ссылка, ИмяФайла, Идентификатор, ВАрхиве = Ложь) Экспорт
	
	ВАрхиве = Ложь;
	
	СтрВложения = КонтекстЭДО().ПолучитьВложения(Ссылка, ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Вложение = СтрВложения[0];
	
	Если Вложение.ВАрхиве Тогда 
		ВАрхиве = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(Вложение.Данные.Получить(), Идентификатор);

КонецФункции

// Функция - Печатная форма
Функция ПечатнаяФорма(Письмо) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем бланк отчета из макета
	Бланк = КонтекстЭДО().ПолучитьМакетОбработки("Письмо");
	ЗаполнитьОтправителяИПолучателя(Письмо, ТабДокумент, Бланк);
	ЗаполнитьЗаголовокИТекст(Письмо, ТабДокумент, Бланк);
	ЗаполнитьПодписи(Письмо, ТабДокумент, Бланк);
	ЗаполнитьПриложения(Письмо, ТабДокумент, Бланк);
	ЗаполнитьПодпись(Письмо, ТабДокумент);
	
	ТабДокумент.МасштабПечати = 100;
	Возврат ТабДокумент;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Функция КонтекстЭДО()
	
	Возврат ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	
КонецФункции

Процедура ЗаполнитьОтправителяИПолучателя(Письмо, ТабДокумент, Бланк)

	Область = Бланк.ПолучитьОбласть("Наименования");
	ЗаполнитьНаименованиеОрганизации(Письмо, Бланк, Область);
	ЗаполнитьНаименованиеИКодКонтролирующегоОргана(Письмо, Бланк, Область);
	ЗаполнитьКонтактыОрганизации(Письмо, ТабДокумент, Бланк, Область);
	
	ТабДокумент.Вывести(Область);

КонецПроцедуры

Процедура ЗаполнитьНаименованиеИКодКонтролирующегоОргана(Письмо, Бланк, ОбластьНаименований)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс 	= "Отправителя";
		Орган 		= Письмо.Отправитель;
	Иначе
		Постфикс	= "Получателя";
		Орган 		= Письмо.Получатель;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Орган) Тогда
		Возврат;
	КонецЕсли;

	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	СвойстваПереписки = КонтекстЭДОСервер.СвойстваПерепискиСКонтролирующими(Письмо);
	
	НаименованиеОргана 	= Орган.Наименование;
	Если НЕ ЗначениеЗаполнено(НаименованиеОргана) Тогда
		НаименованиеОргана = РегламентированнаяОтчетностьВызовСервера.ПредставлениеКонтролирующегоОргана(СвойстваПереписки);
	КонецЕсли;
	
	Если (ТипЗнч(Орган) = Тип("СправочникСсылка.НалоговыеОрганы")
		ИЛИ ТипЗнч(Орган) = Тип("СправочникСсылка.ОрганыПФР")
		ИЛИ ТипЗнч(Орган) = Тип("СправочникСсылка.ОрганыФСГС")) 
		И СтрНайти(НаименованиеОргана, СвойстваПереписки.КодКонтролирующегоОргана) = 0 Тогда
		НаименованиеОргана = НаименованиеОргана + ", код " + СокрЛП(СвойстваПереписки.КодКонтролирующегоОргана);
	КонецЕсли;
	
	ОбластьНаименований.Параметры["Наименование" + Постфикс] = НаименованиеОргана;
	
КонецПроцедуры

Процедура ЗаполнитьНаименованиеОрганизации(Письмо, Бланк, ОбластьНаименований)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс = "Получателя";
		Организация = Письмо.Получатель;
	Иначе
		Постфикс = "Отправителя";
		Организация = Письмо.Отправитель;
	КонецЕсли;
	
	ОбластьНаименований.Параметры["Наименование" + Постфикс] = Организация;

КонецПроцедуры

Процедура ЗаполнитьКонтактыОрганизации(Письмо, ТабДокумент, Бланк, Область)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		Постфикс = "Получателя";
		Организация = Письмо.Получатель;
	Иначе
		Постфикс = "Отправителя";
		Организация = Письмо.Отправитель;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ТребуемыеСведения = "ИННЮЛ, КППЮЛ, АдрЮР, АдрЮР_XML, АдрМЖ, АдрМЖ_XML, ТелОрганизации";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация,
		Письмо.ДатаСообщения,
		ТребуемыеСведения);
		
	// ИНН и КПП.
	Если ЗначениеЗаполнено(СведенияОбОрганизации.ИННЮЛ) Тогда
		
		НадписьИННиКПП = НСтр("ru = 'ИНН '") + СведенияОбОрганизации.ИННЮЛ;
		Если ЗначениеЗаполнено(СведенияОбОрганизации.КППЮЛ) Тогда 
			 НадписьИННиКПП = НадписьИННиКПП + НСтр("ru = ' КПП '") + СведенияОбОрганизации.КППЮЛ;
		КонецЕсли;
		
		Область.Параметры["ИННиКПП" + Постфикс] = НадписьИННиКПП;
		
	КонецЕсли;
	
	// Адрес.
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	Если ЗначениеЗаполнено(СведенияОбОрганизации.АдрЮР_XML) Тогда
		Адрес = КонтекстЭДОСервер.ПредставлениеАдресаИзДанныхОрганизации(СведенияОбОрганизации.АдрЮР_XML);
	Иначе
		Адрес = КонтекстЭДОСервер.ПредставлениеАдресаИзДанныхОрганизации(СведенияОбОрганизации.АдрМЖ_XML);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОбОрганизации.АдрЮР)
		ИЛИ ЗначениеЗаполнено(СведенияОбОрганизации.АдрЮР) Тогда
		
		Область.Параметры["Адрес" + Постфикс] = Адрес;
		
	КонецЕсли;

	// Телефон.
	Если ЗначениеЗаполнено(СведенияОбОрганизации.ТелОрганизации)
		ИЛИ ЗначениеЗаполнено(СведенияОбОрганизации.ТелОрганизации) Тогда
		
		Область.Параметры["Телефон" + Постфикс] = НСтр("ru = 'тел: '") + СведенияОбОрганизации.ТелОрганизации;
		
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьЗаголовокИТекст(Письмо, ТабДокумент, Бланк)

	ОбластьЗаголовок = Бланк.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.Заголовок = Письмо.Наименование;
	ОбластьЗаголовок.Параметры.Дата      = Письмо.ДатаСообщения;
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	Для НомерСтроки = 1 По СтрЧислоСтрок(СокрЛП(Письмо.Содержание)) Цикл
		ОбластьТекстПисьма = Бланк.ПолучитьОбласть("ТекстПисьма");
		ОбластьТекстПисьма.Параметры.ТекстПисьма = СтрПолучитьСтроку(СокрЛП(Письмо.Содержание), НомерСтроки);
		ТабДокумент.Вывести(ОбластьТекстПисьма);
	КонецЦикла;  

КонецПроцедуры

Процедура ЗаполнитьПодписи(Письмо, ТабДокумент, Бланк)
	
	Если Письмо.Статус = Перечисления.СтатусыПисем.Полученное Тогда 
		ЗаполнитьПодписиКонтролирующегоОргана(Письмо, ТабДокумент, Бланк);
	Иначе
		ЗаполнитьПодписиОрганизации(Письмо, ТабДокумент, Бланк);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПодписиКонтролирующегоОргана(Письмо, ТабДокумент, Бланк)
	
	ТипыСообщений = Новый Массив;
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);

	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	Подписи = КонтекстЭДОСервер.ПодписиПодСообщениями(Письмо, ТипыСообщений);
	
	ПодписьВыведена = Ложь;
	
	ПодписьОргана = Неопределено;
	Для каждого Подпись Из Подписи Цикл
		Если НЕ Подпись.ЭЦПЭтоПодписьАбонента Тогда
			
			Если Подпись.Данные.Получить() = Неопределено Тогда
				
				МассивФайлов = ОбщегоНазначенияЭДКО.ПрикрепленныеФайлыКОбъектуИзСправочника(
					Подпись.ТранспортноеСообщение,
					"ТранспортноеСообщениеПрисоединенныеФайлы",
					Подпись.ИмяФайла);
					
				Если МассивФайлов.Количество() > 0 Тогда
					ПодписьОргана = РаботаСФайлами.ДвоичныеДанныеФайла(МассивФайлов[0]);
				КонецЕсли;
				
			Иначе
				ПодписьОргана = Подпись.Данные.Получить();
			КонецЕсли;
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПодписьОргана <> Неопределено Тогда
		
		Попытка
			СвойстваПодписи = КриптографияЭДКОСлужебныйВызовСервера.ПолучитьСвойстваКриптосообщения(ПодписьОргана);
		Исключение
			СвойстваПодписи = Неопределено;
		КонецПопытки;
		
		Если СвойстваПодписи <> Неопределено Тогда
			
			Для каждого Подписант Из СвойстваПодписи.Подписанты Цикл
			
				Если НЕ Подписант.Сертификат.Свойство("Сертификат") Тогда
					Продолжить;
				КонецЕсли;
				
				ДвДанныеСертификат = Подписант.Сертификат.Сертификат; 
				Сертификат = Новый СертификатКриптографии(ДвДанныеСертификат);
				
				ОбластьПодписей = Бланк.ПолучитьОбласть("Подписи");
				ОбластьПодписей.Параметры.Руководитель 	= ПолучитьФИОСтрокойИзСвойствСертификата(Сертификат.Субъект);
				ОбластьПодписей.Параметры.Должность 	= ПолучитьДолжностьИзСвойствСертификата(Сертификат.Субъект);
				ТабДокумент.Вывести(ОбластьПодписей);

				ПодписьВыведена = Истина;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ПодписьВыведена Тогда
 		ОбластьПодписей = Бланк.ПолучитьОбласть("Подписи");
		ТабДокумент.Вывести(ОбластьПодписей);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДолжностьИзСвойствСертификата(СвойстваСертификата)
	
	OID       = "OID2_5_4_12";
	Должность = "";
	
	Если СвойстваСертификата.Свойство(OID) Тогда
		Должность = СвойстваСертификата[OID];
	ИначеЕсли СвойстваСертификата.Свойство("T") Тогда
		Должность = СвойстваСертификата["T"];
	КонецЕсли;
	
	Возврат Должность;
	
КонецФункции

Функция ПолучитьФИОСтрокойИзСвойствСертификата(СвойстваСертификата)
	
	Если СвойстваСертификата.Свойство("SN") И (СвойстваСертификата.Свойство("G") ИЛИ СвойстваСертификата.Свойство("GN")) Тогда
		Если СвойстваСертификата.Свойство("G") Тогда
			Возврат СтрЗаменить(СокрЛП(СвойстваСертификата["SN"]) + " " + СокрЛП(СвойстваСертификата["G"]), "_", " ");	
		Иначе
			Возврат СтрЗаменить(СокрЛП(СвойстваСертификата["SN"]) + " " + СокрЛП(СвойстваСертификата["GN"]), "_", " ");	
		КонецЕсли;
	ИначеЕсли СвойстваСертификата.Свойство("CN") Тогда
		Возврат СокрЛП(СвойстваСертификата["CN"]); 
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции 

Процедура ЗаполнитьПодписиОрганизации(Письмо, ТабДокумент, Бланк)
	
	Организация 	= Письмо.Отправитель;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ОбластьПодписей = Бланк.ПолучитьОбласть("Подписи");
	
	ТребуемыеСведения = "ФамилияРук, ИмяРук, ОтчествоРук, ДолжнРук";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация,
		Письмо.ДатаСообщения,
		ТребуемыеСведения);
		
	ФИО = Новый Структура();
	ФИО.Вставить("Фамилия", 	СведенияОбОрганизации.ФамилияРук);
	ФИО.Вставить("Имя", 		СведенияОбОрганизации.ИмяРук);
	ФИО.Вставить("Отчество", 	СведенияОбОрганизации.ОтчествоРук);
		
	Руководитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИО);
	
	ОбластьПодписей.Параметры.Должность 	= СведенияОбОрганизации.ДолжнРук;
	ОбластьПодписей.Параметры.Руководитель 	= Руководитель;
	
	ДвДанныеПодписи = Неопределено;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ПодписьРуководителя(Организация, ДвДанныеПодписи);
		
	Если ЗначениеЗаполнено(ДвДанныеПодписи) Тогда
		ОбластьПодписей.Рисунки.Роспись.Картинка = Новый Картинка(ДвДанныеПодписи);
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьПодписей);
	
КонецПроцедуры

Процедура ЗаполнитьПриложения(Письмо, ТабДокумент, Бланк)
	
	Вложения = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ПолучитьСписокВложений(Письмо);
	Если Вложения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Заголовок.
	ОбластьЗаголовкаПриложения = Бланк.ПолучитьОбласть("ЗаголовокПриложения");
	ТабДокумент.Вывести(ОбластьЗаголовкаПриложения);
	
	// Список приложений.
	ОбластьПриложений = Бланк.ПолучитьОбласть("Приложения");
	НомерПриложения = 0;
	Для каждого Вложение Из Вложения Цикл
		
		НомерПриложения = НомерПриложения + 1;
		ИмяПриложения 	= ИмяФайлаБезРасширения(Вложение.ИмяФайла);
		
		ОбластьПриложений.Параметры.Приложение = Строка(НомерПриложения) + ". " + ИмяПриложения;
		ТабДокумент.Вывести(ОбластьПриложений);
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ИмяФайлаБезРасширения(ИмяФайлаСРасширением)
	
	ДлинаИмениФайла = СтрДлина(ИмяФайлаСРасширением);
	Для Инд = 1 По ДлинаИмениФайла Цикл
		Если Сред(ИмяФайлаСРасширением, ДлинаИмениФайла - Инд + 1, 1) = "." Тогда
			Возврат Лев(ИмяФайлаСРасширением, ДлинаИмениФайла - Инд);
		КонецЕсли;
	КонецЦикла;
	Возврат ИмяФайлаСРасширением;
	
КонецФункции

Процедура ЗаполнитьПодпись(Письмо, ТабДокумент)
	
	// Типы не содержат квитанций, так как квитанции не содержат подписи под самим письмом, только под квитанцией.
	ТипыСообщений = Новый Массив;
	// ФНС
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО);

	// ПФР
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР);

	// ФСГС
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееФСГС);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееФСГС);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.РассылкаФСГС);
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонтекстЭДОСервер.ДобавитьШтампПодписиПодДокументом(
		Письмо,
		ТипыСообщений,
		ТабДокумент,
		2,
		Ложь); 

КонецПроцедуры	

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДО = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если ВидФормы = "ФормаСписка" ИЛИ ВидФормы = "ФормаВыбора" Тогда
		ВыбраннаяФорма = "ФормаСписка";
	ИначеЕсли Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ)
		И Параметры.Ключ.Статус = Перечисления.СтатусыПисем.Полученное Тогда
		ВыбраннаяФорма = "ФормаВходящееПисьмо";
	Иначе
		ВыбраннаяФорма = "ФормаИсходящееПисьмо";
	КонецЕсли;
	
	КонтекстЭДО.ОбработкаПолученияФормы("Справочник", "ПерепискаСКонтролирующимиОрганами", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

