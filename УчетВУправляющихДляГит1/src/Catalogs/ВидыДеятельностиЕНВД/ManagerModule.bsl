#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Функция ВидКонтактнойИнформацииАдреса() Экспорт
	
	ВидКонтактнойИнформацииАдреса
		= УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	ВидКонтактнойИнформацииАдреса.НастройкиПроверки.Вставить("ТолькоНациональныйАдрес", Истина);
	ВидКонтактнойИнформацииАдреса.НастройкиПроверки.Вставить("ВключатьСтрануВПредставление", Ложь);
	
	Возврат ВидКонтактнойИнформацииАдреса;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("КодВидаДеятельности");
	Поля.Добавить("Наименование");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Представление = СокрЛП(Данные.КодВидаДеятельности)
		+ ?(ЗначениеЗаполнено(Данные.КодВидаДеятельности), " ", "")
		+ СокрЛП(Данные.Наименование);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает верхнюю границу индекса автонаименований видов деятельности.
// Используется в форме справочника для генерации наименований справочника вида "Новое наименование 1"
//
// Параметры:
//  КодВидаДеятельности - СправочникСсылка.КлассификаторВидовПредпринимательскойДеятельностиЕНВД
//  ТекущийЭлемент - СправочникСсылка.ВидыДеятельностиЕНВД - ссылка на текущий элемент
//
// Возвращаемое значение:
//  Число - верхняя граница индекса
//
Функция МаксимальныйИндексВидаДеятельности(КодВидаДеятельности, Организация, ТекущийЭлемент) Экспорт
	
	Если Не ЗначениеЗаполнено(КодВидаДеятельности) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Значение автонаименование для первого элемента
	Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КодВидаДеятельности, "Наименование");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КодВидаДеятельности", КодВидаДеятельности);
	Запрос.УстановитьПараметр("ШаблонНаименования", Наименование + "%");
	Запрос.УстановитьПараметр("ТекущийЭлемент", ТекущийЭлемент);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВидыДеятельностиЕНВД.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВидыДеятельностиЕНВД КАК ВидыДеятельностиЕНВД
	|ГДЕ
	|	ВидыДеятельностиЕНВД.Владелец = &Организация
	|	И ВидыДеятельностиЕНВД.КодВидаДеятельности = &КодВидаДеятельности
	|	И ВидыДеятельностиЕНВД.Наименование ПОДОБНО &ШаблонНаименования
	|	И ВидыДеятельностиЕНВД.Ссылка <> &ТекущийЭлемент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		// Это первый элемент в справочнике или для других элементов с таким же кодом задано уникальное наименование
		Возврат Неопределено;
	КонецЕсли;
	
	ДлинаНаименования = СтрДлина(Наименование);
	
	МаксимальныйИндекс = 0;
	
	ОписаниеТипаИндекса = ОбщегоНазначения.ОписаниеТипаЧисло(10, 0);
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОкончаниеНаименования = СокрЛП(Сред(Выборка.Наименование, ДлинаНаименования + 1));
		Если ПустаяСтрока(ОкончаниеНаименования) Тогда
			Продолжить;
		КонецЕсли;
		ОкночаниеЯвляетсяИндексом = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ОкончаниеНаименования);
		Если ОкночаниеЯвляетсяИндексом Тогда
			МаксимальныйИндекс = Макс(ОписаниеТипаИндекса.ПривестиЗначение(ОкончаниеНаименования), МаксимальныйИндекс);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МаксимальныйИндекс;
	
КонецФункции

// Возвращает список выбора для полей "Налоговая инспекция"
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период - Дата - налоговый период
//
// Возвращаемое значение:
//  СписокЗначений - список для установки в качестве списка выбора поля
//
Функция СписокВыбораНалоговыхИнспекций(Организация, Период = Неопределено) Экспорт
	
	СписокВыбора = Новый СписокЗначений;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВидыДеятельностиЕНВД.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА ВидыДеятельностиЕНВД.Подразделение.ОбособленноеПодразделение ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВидыДеятельностиЕНВД.Подразделение.ОбособленноеПодразделение
	|	КОНЕЦ КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВТ_РегистрацииВКачествеПлательщикаЕНВД
	|ИЗ
	|	Справочник.ВидыДеятельностиЕНВД КАК ВидыДеятельностиЕНВД
	|ГДЕ
	|	ВидыДеятельностиЕНВД.Владелец = &Владелец
	|	И НЕ ВидыДеятельностиЕНВД.ПометкаУдаления
	|	И &УсловиеПоПериоду
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрацииВНалоговомОргане.Ссылка,
	|	РегистрацииВНалоговомОргане.Наименование КАК Наименование,
	|	РегистрацииВНалоговомОргане.КПП КАК КПП,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_РегистрацииВКачествеПлательщикаЕНВД.РегистрацияВНалоговомОргане ЕСТЬ NULL 
	|				И НЕ ВТ_РегистрацииВКачествеПлательщикаЕНВД.ОбособленноеПодразделение
	|			ТОГДА 0
	|		КОГДА НЕ ВТ_РегистрацииВКачествеПлательщикаЕНВД.РегистрацияВНалоговомОргане ЕСТЬ NULL 
	|			ТОГДА 1
	|		КОГДА РегистрацииВНалоговомОргане.КПП ПОДОБНО &ШаблонКПП
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК Порядок
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииВКачествеПлательщикаЕНВД КАК ВТ_РегистрацииВКачествеПлательщикаЕНВД
	|		ПО (ВТ_РегистрацииВКачествеПлательщикаЕНВД.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка)
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &Владелец
	|	И НЕ РегистрацииВНалоговомОргане.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Наименование,
	|	РегистрацииВНалоговомОргане.Ссылка";
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация);
	Если ЭтоЮрЛицо Тогда
		КодПричиныПостановкиНаУчет = УчетЕНВД.КодПричиныПостановкиНаУчет(Организация);
		ШаблонКПП = "____" + КодПричиныПостановкиНаУчет + "___";
	Иначе
		ШаблонКПП = "";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ШаблонКПП", ШаблонКПП);
	
	Если ЗначениеЗаполнено(Период) Тогда
		Запрос.УстановитьПараметр("НачалоКвартала", НачалоКвартала(Период));
		Запрос.УстановитьПараметр("КонецКвартала",  НачалоДня(КонецКвартала(Период)));
		Запрос.УстановитьПараметр("ПустаяДата", '00010101');
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&УсловиеПоПериоду",
			"(ВидыДеятельностиЕНВД.ДатаПрекращения > &НачалоКвартала ИЛИ ВидыДеятельностиЕНВД.ДатаПрекращения = &ПустаяДата)
			|	И (ВидыДеятельностиЕНВД.ДатаНачала <= &КонецКвартала ИЛИ ВидыДеятельностиЕНВД.ДатаНачала = &ПустаяДата)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&УсловиеПоПериоду",
			"ИСТИНА");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЭтоЮрЛицо Тогда
			Представление = СтрШаблон(НСтр("ru = '%1 – КПП %2'"), Выборка.Наименование, Выборка.КПП);
		Иначе
			Представление = Выборка.Наименование;
		КонецЕсли;
		СписокВыбора.Добавить(Выборка.Ссылка, Представление);
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

Функция ПодразделениеЗаполненоКорректно(ТекущийЭлемент, Организация, Подразделение, КодНалоговогоОргана, ТекстОшибки = "") Экспорт
	
	Если Не ЗначениеЗаполнено(Подразделение) Или Не ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ТекущийЭлемент);
	Запрос.УстановитьПараметр("Владелец", Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("КодНалоговогоОргана", КодНалоговогоОргана);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыДеятельностиЕНВД.Ссылка КАК ВидДеятельности,
	|	ВидыДеятельностиЕНВД.РегистрацияВНалоговомОргане.Наименование КАК НалоговаяИнспекция
	|ИЗ
	|	Справочник.ВидыДеятельностиЕНВД КАК ВидыДеятельностиЕНВД
	|ГДЕ
	|	НЕ ВидыДеятельностиЕНВД.ПометкаУдаления
	|	И ВидыДеятельностиЕНВД.Ссылка <> &Ссылка
	|	И ВидыДеятельностиЕНВД.Подразделение = &Подразделение
	|	И ВидыДеятельностиЕНВД.РегистрацияВНалоговомОргане.Код <> &КодНалоговогоОргана";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Подразделение ""%1"" уже зарегистрировано в %2 (%3)'"),
				Подразделение, Выборка.НалоговаяИнспекция, Выборка.ВидДеятельности);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиОбновления

Процедура ЗаполнитьКонтактнуюИнформациюЗначениямиJSON() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыДеятельностиЕНВД.Ссылка КАК Ссылка,
	|	ВидыДеятельностиЕНВД.Адрес КАК Адрес
	|ИЗ
	|	Справочник.ВидыДеятельностиЕНВД КАК ВидыДеятельностиЕНВД";
	
	ВидКонтактнойИнформацииАдреса = ВидКонтактнойИнформацииАдреса();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Адрес)
			И Не УправлениеКонтактнойИнформациейКлиентСервер.ЭтоКонтактнаяИнформацияВJSON(Выборка.Адрес) Тогда
			
			ВидДеятельностиЕНВДОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если ВидДеятельностиЕНВДОбъект <> Неопределено Тогда
				
				ВидДеятельностиЕНВДОбъект.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(
					Выборка.Адрес, ВидКонтактнойИнформацииАдреса);
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидДеятельностиЕНВДОбъект);
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли