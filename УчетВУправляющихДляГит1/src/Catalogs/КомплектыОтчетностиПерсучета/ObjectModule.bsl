#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ПредыдущееСостояниеКомплекта;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	НомерКомплекта = 0;
	
	ОписьОбъект = ОбъектКопирования.ОписьПачекСЗВ.ПолучитьОбъект().СкопироватьОписьСВходящимиДокументами();
	
	СписокПачекСЗВ.Очистить();
	
	Для Каждого ПачкаОписи Из ОписьОбъект.ПачкиДокументов Цикл
		ПачкаКомплекта = СписокПачекСЗВ.Добавить();
		ПачкаКомплекта.ПачкаДокументов = ПачкаОписи.ПачкаДокументов;
	КонецЦикла;	
	
	ОписьПачекСЗВ = ОписьОбъект.Ссылка;
	
	Если Не ОбъектКопирования.ВедомостьУплатыАДВ11.Пустая() Тогда
		АДВ11Объект = ВедомостьУплатыАДВ11.ПолучитьОбъект().Скопировать();
		АДВ11Объект.НомерПачки = 0;
		АДВ11Объект.Записать(РежимЗаписиДокумента.Запись);
		
		ВедомостьУплатыАДВ11 = АДВ11Объект.Ссылка;
	КонецЕсли;	
	
	СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияСформированы;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не СпециальныйДокумент2015года Тогда
		СпециальныйДокумент2015года = ПерсонифицированныйУчет.ПризнакСпециальногоРСВ2015Года(ОтчетныйПериод, Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	КонецЕсли;	
	
	ЗаполнитьКорректируемыеПериоды();
	
	УстановитьПризнакНаличияИсходныхПачекРаздела6();
	
	Если СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены
		И НЕ НулевойКомплект 
		И Не СодержитТолькоКорректирующиеФормы Тогда
		
		Справочники.КомплектыОтчетностиПерсучета.УстановитьСостояниеПредыдущегоПринятогоКомплекта(Организация, ОтчетныйПериод, Ссылка, КорректирующаяФормаРСВ_1);
	КонецЕсли;	
	Если ЭтоНовый() Тогда
		ПредыдущееСостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияНеСформированы;
	Иначе
		ПредыдущееСостояниеКомплекта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СостояниеКомплекта");
		
		Если ПометкаУдаления Тогда
			СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияНеБудутПередаваться;
		КонецЕсли;	
	КонецЕсли;	
	
	Если НомерКомплекта = 0 Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(КомплектыОтчетностиПерсучета.НомерКомплекта) КАК НомерКомплекта
		|ИЗ
		|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
		|ГДЕ
		|	КомплектыОтчетностиПерсучета.Организация = &Организация
		|	И КомплектыОтчетностиПерсучета.ОтчетныйПериод = &ОтчетныйПериод";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			НомерКомплекта = ?(Выборка.НомерКомплекта = Null, 0, Выборка.НомерКомплекта) + 1;
		Иначе 	
			НомерКомплекта = 1;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПериодФормирования) Тогда
		ПериодФормирования = ОтчетныйПериод;
	КонецЕсли;	
	
	Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Комплект №%1 за %2'"),
						НомерКомплекта,
						ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ОтчетныйПериод, Истина));
																				
    УстановитьПредставлениеСоставаКомплекта();
	
	Если Не Ссылка.Пустая() 
		И ПометкаУдаления <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
		
		ПриУстановкеПометкиУдаления(ПометкаУдаления);
	КонецЕсли;	
КонецПроцедуры

Процедура ЗаполнитьКорректируемыеПериоды()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.КорректируемыйПериод КАК КорректируемыйПериод
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ КАК КомплектыОтчетностиПерсучетаСписокПачекСЗВ
	|ГДЕ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И КомплектыОтчетностиПерсучетаСписокПачекСЗВ.Ссылка = &Ссылка";
	
	КорректируемыеПериодыДокументов = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		КорректируемыеПериодыДокументов.Вставить(Выборка.КорректируемыйПериод, Истина);
	КонецЦикла;
	
	Для Каждого ОписаниеКорректируемогоПериода Из КорректируемыеПериоды Цикл 
		Если КорректируемыеПериодыДокументов.Получить(ОписаниеКорректируемогоПериода.Период) = Неопределено Тогда
			КорректируемыеПериоды.Удалить(ОписаниеКорректируемогоПериода);			
		Иначе	
			КорректируемыеПериодыДокументов.Удалить(ОписаниеКорректируемогоПериода.Период);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого КорректируемыйПериод Из КорректируемыеПериодыДокументов Цикл
		ОписаниеКорректируемогоПериода = КорректируемыеПериоды.Добавить();
		ОписаниеКорректируемогоПериода.Период = КорректируемыйПериод.Ключ;
		ОписаниеКорректируемогоПериода.ВариантФормирования = Перечисления.ВариантыФормированияКорректирующихСведенийВПФР.РучнойВводДокументов;
	КонецЦикла;	
	
	КорректируемыеПериоды.Сортировать("Период");

КонецПроцедуры	

Процедура ПриЗаписи(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;	
	
	ДокументПринятВПРФ = Ложь;
	ЗаписыватьДокументыОписи = Ложь;
	Если ПредыдущееСостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены
		И СостояниеКомплекта <> Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены Тогда
		
		РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
		ЗаписыватьДокументыОписи = Истина;
		
	ИначеЕсли ПредыдущееСостояниеКомплекта <> Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены	
		И СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены Тогда
		
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	    ДокументПринятВПРФ = Истина;
		ЗаписыватьДокументыОписи = Истина;
		
		Справочники.КомплектыОтчетностиПерсучета.УстановитьСостояниеНеОтправленныхКомплектов(Организация, ОтчетныйПериод, КорректирующаяФормаРСВ_1);		
	КонецЕсли;	

	Если ЗаписыватьДокументыОписи Тогда
		ЗаписатьДокументыКомплекта(РежимЗаписи, ДокументПринятВПРФ);
	КонецЕсли;	
КонецПроцедуры

Функция НовыйВедомостьУплатыАДВ11() Экспорт
	ДокументОбъект = Документы.ВедомостьУплатыАДВ_11.СоздатьДокумент();	
	
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ОтчетныйПериод = Год(ОтчетныйПериод);
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	ДокументОбъект.КодКатегории = Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР;
			
	ДокументОбъект.НомерПачки = ПерсонифицированныйУчет.ПолучитьСледующийНомерПачки(Организация, ОтчетныйПериод);

	ЗаполнитьОтветственныхЛицДокумента(ДокументОбъект);
	
	ДокументОбъект.ФайлСформирован = Истина;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);	
	
	ВедомостьУплатыАДВ11 = ДокументОбъект.Ссылка;

	Возврат ДокументОбъект;	
КонецФункции

Функция НовыйПачкаСЗВ6(ТипПачки, ТипСведенийСЗВ, КатегорияЗастрахованныхЛиц, КорректируемыйПериод, ТипДоговора = Неопределено, ЗаписыватьПачку = Истина, РегистрационныйНомерПФРвКорректируемыйПериод = "") Экспорт
	Если Не ОписьПачекСЗВ.Пустая() Тогда
		ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
	Иначе	
		ОписьОбъект = Неопределено;
	КонецЕсли;	
	
	Если ТипПачки = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_1") Тогда
		ДокументОбъект = Документы.ПачкаДокументовСЗВ_6_1.СоздатьДокумент();
	ИначеЕсли ТипПачки = Тип("ДокументСсылка.РеестрСЗВ_6_2") Тогда
		ДокументОбъект = Документы.РеестрСЗВ_6_2.СоздатьДокумент();
	ИначеЕсли ТипПачки = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
		ДокументОбъект = Документы.ПачкаДокументовСЗВ_6_4.СоздатьДокумент();
		ДокументОбъект.ТипДоговора = ?(ТипДоговора = Неопределено, Перечисления.ТипыДоговоровСЗВ63.Трудовой, ТипДоговора);
		ДокументОбъект.РегистрационныйНомерПФРвКорректируемыйПериод = РегистрационныйНомерПФРвКорректируемыйПериод;
	ИначеЕсли ТипПачки = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
		ДокументОбъект = Документы.ПачкаРазделов6РасчетаРСВ_1.СоздатьДокумент();
		ДокументОбъект.РегистрационныйНомерПФРвКорректируемыйПериод = РегистрационныйНомерПФРвКорректируемыйПериод;	
		ДокументОбъект.СпециальныйДокумент2015года = СпециальныйДокумент2015года;	
	КонецЕсли;	
	                                                 
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ОтчетныйПериод = ОтчетныйПериод;
	ДокументОбъект.Дата = ТекущаяДатаСеанса();       
	
	ПерсонифицированныйУчет.ДокументыКвартальнойОтчетностиЗаполнитьОтветственныхЛиц(ДокументОбъект);
	
	Если ОписьОбъект <> Неопределено Тогда	
		СтрокаОписи = ОписьОбъект.ПачкиДокументов.Добавить();
	КонецЕсли;	

	ДокументОбъект.ТипСведенийСЗВ = ТипСведенийСЗВ;
	
	Если Не ТипПачки = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
		ДокументОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	КонецЕсли;
	
	ДокументОбъект.КорректируемыйПериод = КорректируемыйПериод;

	ДокументОбъект.НомерПачки = ПерсонифицированныйУчет.ПолучитьСледующийНомерПачки(Организация, ОтчетныйПериод);
	
	Если ОписьОбъект <> Неопределено Тогда
		ЗаполнитьОтветственныхЛицДокумента(ДокументОбъект, ОписьОбъект);
	КонецЕсли;	

	Если ЗаписыватьПачку Тогда 
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				
		СтрокаКомплекта = СписокПачекСЗВ.Добавить();
		СтрокаКомплекта.ПачкаДокументов = ДокументОбъект.Ссылка;
		
		Если ОписьОбъект <> Неопределено Тогда
			СтрокаОписи.ПачкаДокументов = ДокументОбъект.Ссылка;
			ОписьОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат ДокументОбъект;
	
КонецФункции	

Функция ОписаниеПачекСЗВ63() Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокПачек", СписокПачекСЗВ6_3.ВыгрузитьКолонку("ПачкаДокументов"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_3.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_3.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_3.НомерПачки,
	|	ПачкаДокументовСЗВ_6_3.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_3.Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3 КАК ПачкаДокументовСЗВ_6_3
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_3.Ссылка В (&СписокПачек)
	|	И НЕ ПачкаДокументовСЗВ_6_3.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции	

Процедура УдалитьДокументыКомплекта(СписокУдаляемыхДокументов) Экспорт
	Если Не ОписьПачекСЗВ.Пустая() Тогда
		ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
	Иначе
		ОписьОбъект = Неопределено;
	КонецЕсли;
	
	Для Каждого УдаляемыйДокумент Из СписокУдаляемыхДокументов Цикл
		Если ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			РСВ_1 = Документы.РегламентированныйОтчет.ПустаяСсылка();
			РСВ_1Объект = УдаляемыйДокумент.ПолучитьОбъект();
			РСВ_1Объект.УстановитьПометкуУдаления(Истина);
			РСВ_1Объект.Записать(РежимЗаписиДокумента.Запись);
		ИначеЕсли ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ОписьПачекСЗВ_6") Тогда
			Если ОписьОбъект = Неопределено Тогда
				ОписьОбъект = УдаляемыйДокумент.ПолучитьОбъект();
			КонецЕсли;		
			ОписьОбъект.УстановитьПометкуУдаления(Истина);
			ОписьОбъект.ПачкиДокументов.Очистить();
			ОписьОбъект.Записать(РежимЗаписиДокумента.Запись);
			
			ОписьПачекСЗВ = Документы.ОписьПачекСЗВ_6.ПустаяСсылка();
		ИначеЕсли ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ВедомостьУплатыАДВ_11") Тогда
			ВедомостьУплатыАДВ11 = Документы.ВедомостьУплатыАДВ_11.ПустаяСсылка();
			АДВ11Объект = УдаляемыйДокумент.ПолучитьОбъект();
			АДВ11Объект.УстановитьПометкуУдаления(Истина);
			АДВ11Объект.Записать(РежимЗаписиДокумента.Запись); 	
		ИначеЕсли ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3") Тогда
			СтрокаСЗВ63 = СписокПачекСЗВ6_3.Найти(УдаляемыйДокумент, "ПачкаДокументов");
			Если СтрокаСЗВ63 <> Неопределено Тогда
				СписокПачекСЗВ6_3.Удалить(СписокПачекСЗВ6_3.Индекс(СтрокаСЗВ63));
			КонецЕсли;	
		
			СЗВ63Объект = УдаляемыйДокумент.ПолучитьОбъект();
			СЗВ63Объект.УстановитьПометкуУдаления(Истина);
			СЗВ63Объект.Записать(РежимЗаписиДокумента.Запись);	
		ИначеЕсли  ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_1")
			Или ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.РеестрСЗВ_6_2")
			Или ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4")
			Или ТипЗнч(УдаляемыйДокумент) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда 
			
			СтрокаСЗВ = СписокПачекСЗВ.Найти(УдаляемыйДокумент, "ПачкаДокументов");
			Если СтрокаСЗВ <> Неопределено Тогда
				СписокПачекСЗВ.Удалить(СписокПачекСЗВ.Индекс(СтрокаСЗВ));
			КонецЕсли;	
			
			Если ОписьОбъект <> Неопределено Тогда
				СтрокаСЗВОписи = ОписьОбъект.ПачкиДокументов.Найти(УдаляемыйДокумент, "ПачкаДокументов");
				Если СтрокаСЗВОписи <> Неопределено Тогда
					ОписьОбъект.ПачкиДокументов.Удалить(ОписьОбъект.ПачкиДокументов.Индекс(СтрокаСЗВОписи));
				КонецЕсли;
			КонецЕсли;	
		
			СЗВ6Объект = УдаляемыйДокумент.ПолучитьОбъект();
			СЗВ6Объект.УстановитьПометкуУдаления(Истина);
			СЗВ6Объект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	СписокПачек = СписокПачекСЗВ.ВыгрузитьКолонку("ПачкаДокументов");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокПачек", СписокПачек);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументов.КорректируемыйПериод
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_1 КАК ПачкаДокументов
	|ГДЕ
	|	ПачкаДокументов.Ссылка В(&СписокПачек)
	|	И ПачкаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументов.КорректируемыйПериод
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументов
	|ГДЕ
	|	ПачкаДокументов.Ссылка В(&СписокПачек)
	|	И ПачкаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументов.КорректируемыйПериод
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК ПачкаДокументов
	|ГДЕ
	|	ПачкаДокументов.Ссылка В(&СписокПачек)
	|	И ПачкаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументов.КорректируемыйПериод
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаДокументов
	|ГДЕ
	|	ПачкаДокументов.Ссылка В(&СписокПачек)
	|	И ПачкаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументов.КорректируемыйПериод
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК ПачкаДокументов
	|ГДЕ
	|	ПачкаДокументов.Ссылка В(&СписокПачек)
	|	И ПачкаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Периоды = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		Периоды.Добавить(Выборка.КорректируемыйПериод);
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из КорректируемыеПериоды Цикл
		Если Периоды.Найти(СтрокаТаблицы.Период) = Неопределено Тогда
			КорректируемыеПериоды.Удалить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;	
	
	Если ОписьОбъект <> Неопределено Тогда
		ОписьОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;	
КонецПроцедуры	

Процедура СформироватьВТСДаннымиДокументовКомплекта(МенеджерВременныхТаблиц, СписокПачек, МассивФизЛиц = Неопределено)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокПачек", СписокПачек);
	Запрос.УстановитьПараметр("МассивФизЛиц", МассивФизЛиц);
	Запрос.УстановитьПараметр("НеОтбиратьПоСотрудникам", МассивФизЛиц = Неопределено);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НомерСтроки,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ФиксСтаж,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ФиксНачисленныеВзносы,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ФиксУплаченныеВзносы,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоУплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоУплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоначисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.АдресДляИнформирования,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.АдресДляИнформированияПредставление,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка) КАК ТипДоговора,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.КорректируемыйПериод
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка В(&СписокПачек)
	|	И (ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник В (&МассивФизЛиц)
	|			ИЛИ &НеОтбиратьПоСотрудникам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ФиксСтаж,
	|	РеестрСЗВ_6_2Сотрудники.ФиксНачисленныеВзносы,
	|	РеестрСЗВ_6_2Сотрудники.ФиксУплаченныеВзносы,
	|	РеестрСЗВ_6_2Сотрудники.ДоУплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоУплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформированияПредставление,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка),
	|	РеестрСЗВ_6_2Сотрудники.Ссылка.КорректируемыйПериод
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&СписокПачек)
	|	И (РеестрСЗВ_6_2Сотрудники.Сотрудник В (&МассивФизЛиц)
	|			ИЛИ &НеОтбиратьПоСотрудникам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ФиксСтаж,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ФиксНачисленныеВзносы,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ФиксУплаченныеВзносы,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоУплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоУплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	"""",
	|	"""",
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.КорректируемыйПериод
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&СписокПачек)
	|	И (ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник В (&МассивФизЛиц)
	|			ИЛИ &НеОтбиратьПоСотрудникам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка),
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.НачисленоСтраховая,
	|	0,
	|	0,
	|	0,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксСтаж,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксНачисленныеВзносы,
	|	ЛОЖЬ,
	|	0,
	|	0,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ДоначисленоСтраховая,
	|	0,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Фамилия,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Имя,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Отчество,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.СтраховойНомерПФР,
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка),
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.КорректируемыйПериод
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка В(&СписокПачек)
	|	И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник В (&МассивФизЛиц)
	|			ИЛИ &НеОтбиратьПоСотрудникам)";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура ЗафиксироватьСтрокиСтажаПоСотрудникам(СписокСотрудников, ТипСведенийСЗВ, ПериодРасчета) Экспорт
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
			
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		СписокПачек = МассивСсылокСЗВ(ТипСведенийСЗВ);
	Иначе	
		МассивПериодов = Новый Массив;
		МассивПериодов.Добавить(ПериодРасчета);
		СписокПачек = МассивСсылокСЗВ(ТипСведенийСЗВ, МассивПериодов);
	КонецЕсли;	

	СформироватьВТСДаннымиДокументовКомплекта(МенеджерВТ, СписокПачек, СписокСотрудников);	

    Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.НомерСтроки
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		МодифицированностьДокумента = Ложь;
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Пока Выборка.Следующий() Цикл
			СтрокаСотрудник = ДокументОбъект.Сотрудники.Найти(Выборка.НомерСтроки, "НомерСтроки");
			Если Не СтрокаСотрудник.ФиксСтаж Тогда
				СтрокаСотрудник.ФиксСтаж = Истина;
				МодифицированностьДокумента = Истина;
			КонецЕсли;	
		КонецЦикла;
		Если МодифицированностьДокумента Тогда
			ДокументОбъект.Записать();
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ИзменитьЛичныеДанныеУСотрудниковВКомплекте(ИзменившиесяДанныеСотрудников) Экспорт
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	СписокСотрудников = Новый Массив;
	
	Для Каждого КлючЗначение Из ИзменившиесяДанныеСотрудников Цикл
		СписокСотрудников.Добавить(КлючЗначение.Ключ);
	КонецЦикла;	
	
	СписокПачек = МассивСсылокСЗВ();

	СформироватьВТСДаннымиДокументовКомплекта(МенеджерВТ, СписокПачек, СписокСотрудников);	

    Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.НомерСтроки,
	|	ДанныеДокументов.Фамилия,
	|	ДанныеДокументов.Имя,
	|	ДанныеДокументов.Отчество,
	|	ДанныеДокументов.СтраховойНомерПФР
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		МодифицированностьДокумента = Ложь;
		ДокументОбъект = Неопределено;
		Пока Выборка.Следующий() Цикл
			ДанныеСотрудника = ИзменившиесяДанныеСотрудников.Получить(Выборка.Сотрудник);
			
			Если ДанныеСотрудника <> Неопределено
				И (ДанныеСотрудника.Фамилия <> Выборка.Фамилия
				Или ДанныеСотрудника.Имя <> Выборка.Имя
				Или ДанныеСотрудника.Отчество <> Выборка.Отчество
				Или ДанныеСотрудника.СтраховойНомерПФР <> Выборка.СтраховойНомерПФР) Тогда
				
				МодифицированностьДокумента = Истина;				
				
				Если ДокументОбъект = Неопределено Тогда
					ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				КонецЕсли;	
				СтрокаСотрудник = ДокументОбъект.Сотрудники.Найти(Выборка.НомерСтроки, "НомерСтроки");
				ЗаполнитьЗначенияСвойств(СтрокаСотрудник, ДанныеСотрудника, "Фамилия, Имя, Отчество, СтраховойНомерПФР");				
			КонецЕсли;			
		КонецЦикла;
		Если МодифицированностьДокумента Тогда
			ДокументОбъект.Записать();
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗагрузитьКомплектСведений(ОписаниеКомплекта, ИмяФайлаАДВ, МассивИменПачек, СоответствиеИменФайлов) Экспорт
	
	КорректирующаяФормаРСВ_1 = ОписаниеКомплекта.ЭтоРСВ_1 И ОписаниеКомплекта.ЭтоКорректирующаяФорма;
	
	СписокПачекСЗВ.Очистить();
	
	Если Не ОписаниеКомплекта.ЭтоРСВ_1 Тогда
		ХранениеФайлаАДВ = СоответствиеИменФайлов.Получить(ИмяФайлаАДВ);
		ДеревоСведенийАДВ_6_2 = ПерсонифицированныйУчет.ДеревоСведенийИзВременногоХранилища(ХранениеФайлаАДВ);
	Иначе
		ХранениеФайлаАДВ = Неопределено;
		ДеревоСведенийАДВ_6_2 = Неопределено;
	КонецЕсли;	
	
	Если ДеревоСведенийАДВ_6_2 = Неопределено Тогда
		ОписьПачекСЗВ = Документы.ОписьПачекСЗВ_6.ПустаяСсылка();
	КонецЕсли;	
	
	МассивСведенийСЗВ = Новый Массив;
	
	Для Каждого ИмяПачки Из МассивИменПачек Цикл
		
		ХранениеФайлаСЗВ = СоответствиеИменФайлов.Получить(ИмяПачки);
		ДеревоСведенийСЗВ = ПерсонифицированныйУчет.ДеревоСведенийИзВременногоХранилища(ХранениеФайлаСЗВ);
		
		Если ДеревоСведенийСЗВ <> Неопределено Тогда
			МассивСведенийСЗВ.Добавить(ДеревоСведенийСЗВ);
		КонецЕсли;	
	КонецЦикла;	
	
	Если Не ОписаниеКомплекта.ЭтоРСВ_1 Тогда
		Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда  		
			ДокументАДВ = ОписьПачекСЗВ.ПолучитьОбъект();	
		Иначе
			ДокументАДВ = Документы.ОписьПачекСЗВ_6.СоздатьДокумент();				
		КонецЕсли; 
	Иначе
		ДокументАДВ = Неопределено;
	КонецЕсли;	
		
	// Сохраним список документов прошлой описи, дополним колонкой с номером пачки.
	ЗагружаемыеПачки = Новый Массив;
	Для каждого ДеревоСведенийСЗВ Из МассивСведенийСЗВ Цикл
		Если ПерсонифицированныйУчет.ЭтоДокументСЗВ_6(ДеревоСведенийСЗВ) Тогда
			НомерПачки = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/НомерПачки/Основной"));
		ИначеЕсли ПерсонифицированныйУчет.ЭтоДокументСЗВ_6_4(ДеревоСведенийСЗВ) Тогда
			НомерПачки = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/НомерПачки/Основной"));
		ИначеЕсли ПерсонифицированныйУчет.ЭтоПачкаРаздела6РСВ1(ДеревоСведенийСЗВ) Тогда 	
			НомерПачки = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/НомерПачки/Основной"));		
		КонецЕсли;

		Если ЗначениеЗаполнено(НомерПачки) Тогда
			ЗагружаемыеПачки.Добавить(НомерПачки); 
		КонецЕсли;	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЗагружаемыеПачки", ЗагружаемыеПачки);

	Если ДокументАДВ <> Неопределено Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов,
		|	ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов.НомерПачки КАК НомерПачки,
		|	ВЫБОР
		|		КОГДА ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов.НомерПачки В (&ЗагружаемыеПачки)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДокументСоответствуетФайлу
		|ИЗ
		|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК ОписьПачекСЗВ_6ПачкиДокументов
		|ГДЕ
		|	ОписьПачекСЗВ_6ПачкиДокументов.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ДокументАДВ.Ссылка);
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомплектыОтчетностиПерсучетаПачкиДокументов.ПачкаДокументов,
		|	КомплектыОтчетностиПерсучетаПачкиДокументов.ПачкаДокументов.НомерПачки КАК НомерПачки,
		|	ВЫБОР
		|		КОГДА КомплектыОтчетностиПерсучетаПачкиДокументов.ПачкаДокументов.НомерПачки В (&ЗагружаемыеПачки)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДокументСоответствуетФайлу
		|ИЗ
		|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ КАК КомплектыОтчетностиПерсучетаПачкиДокументов
		|ГДЕ
		|	КомплектыОтчетностиПерсучетаПачкиДокументов.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	КонецЕсли;	

	Выборка = Запрос.Выполнить().Выбрать();
		
	ПачкиСоответствующиеФайлам = Новый Соответствие;
	МассивНеСоответствующихФайламПачек = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДокументСоответствуетФайлу Тогда
			ПачкиСоответствующиеФайлам.Вставить(Выборка.НомерПачки, Выборка.ПачкаДокументов)
		Иначе
			МассивНеСоответствующихФайламПачек.Добавить(Выборка.ПачкаДокументов)
		КонецЕсли;
	КонецЦикла;
	
	Классификаторы = Новый Соответствие;
		
	ПрочитатьКлассификаторы(Классификаторы);
	
	// Подготовим табличную часть к загрузке документов.

	ИспользованныйНомерПачки = 0;
	Если ДокументАДВ <> Неопределено Тогда
		ДокументАДВ.ПачкиДокументов.Очистить();		
		ДокументАДВ.Дата = ДатаПоСтроковомуПредставлению(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийАДВ_6_2, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/ДатаСоставления"));
		
		Если ДокументАДВ.Организация <> Организация Или ДокументАДВ.ЭтоНовый() Тогда
			ДокументАДВ.Организация = Организация;
		КонецЕсли;
		
		Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийАДВ_6_2, "ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ/ОтчетныйПериод/Квартал");
		Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийАДВ_6_2, "ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ/ОтчетныйПериод/Год");
		ОтчетныйПериод = ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));
		
		ДокументАДВ.НомерПачки = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийАДВ_6_2, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/НомерПачки/Основной");
		ДокументАДВ.ОтчетныйПериод = ОтчетныйПериод;
		
		ИспользованныйНомерПачки = ?(ЗначениеЗаполнено(ДокументАДВ.НомерПачки), ДокументАДВ.НомерПачки, 0);
	КонецЕсли;	
		
	ДобавленыНовыеФизлица = Ложь;
	Для каждого ДеревоСведенийСЗВ Из МассивСведенийСЗВ Цикл
		Если ПерсонифицированныйУчет.ЭтоДокументСЗВ_6(ДеревоСведенийСЗВ) Тогда
			ДокументСЗВ = ЗагруженныйДокументСЗВ_6(ДеревоСведенийСЗВ, ПачкиСоответствующиеФайлам, МассивНеСоответствующихФайламПачек, Классификаторы);
		ИначеЕсли ПерсонифицированныйУчет.ЭтоДокументСЗВ_6_4(ДеревоСведенийСЗВ) Тогда	
			ДокументСЗВ = ЗагруженныйДокументСЗВ_6_4(ДеревоСведенийСЗВ, ПачкиСоответствующиеФайлам, МассивНеСоответствующихФайламПачек, Классификаторы);	
		ИначеЕсли ПерсонифицированныйУчет.ЭтоПачкаРаздела6РСВ1(ДеревоСведенийСЗВ) Тогда	
			ДокументСЗВ = ЗагруженныйДокументПачкаРазделов6РСВ1(ДеревоСведенийСЗВ, ПачкиСоответствующиеФайлам, МассивНеСоответствующихФайламПачек, Классификаторы);	
		КонецЕсли;	
		
		Если ДокументСЗВ <> Неопределено Тогда
			
			Если ДокументАДВ <> Неопределено Тогда
			
				СтрокаТЧ = ДокументАДВ.ПачкиДокументов.Добавить();
				СтрокаТЧ.ПачкаДокументов = ДокументСЗВ.Ссылка;
			КонецЕсли;
			
			ИспользованныйНомерПачки = Макс(ИспользованныйНомерПачки,ДокументСЗВ.НомерПачки);
			
			СтрокаТЧКомплекта = СписокПачекСЗВ.Добавить();
			СтрокаТЧКомплекта.ПачкаДокументов = ДокументСЗВ.Ссылка;
		КонецЕсли;	
	КонецЦикла;
	
	// Пометим на удаление не участвовавшие в загрузке документы.
	Для каждого Пачка Из МассивНеСоответствующихФайламПачек Цикл
		Если ЗначениеЗаполнено(Пачка) Тогда
			
			ДокументПачкаОбъект = Пачка.ПолучитьОбъект();
			
			ДокументПачкаОбъект.ДокументПринятВПФР = Ложь;
			
			ДокументПачкаОбъект.ПометкаУдаления = Истина;
			
			ДокументПачкаОбъект.ДополнительныеСвойства.Вставить("УдалениеИзКомплекта", Истина);
			
			ДокументПачкаОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			
		КонецЕсли; 
	КонецЦикла; 
	
	Если ДокументАДВ <> Неопределено Тогда
		ДокументАДВ.ПометкаУдаления = Ложь;	
		ДокументАДВ.ДокументПринятВПФР = Истина;
		ДокументАДВ.Записать(РежимЗаписиДокумента.Проведение);
						
		ОписьПачекСЗВ = ДокументАДВ.Ссылка;
	КонецЕсли;	
	
	СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены;		
	
	Записать();
КонецПроцедуры

Процедура ПоместитьОписанияФайловКомплектаВМассив(МассивОписанийФайловВыгрузки, УникальныйИдентификатор) Экспорт
	СоответствиеТиповСсылокТипамФайловВыгрузки = ПерсонифицированныйУчет.СоответствиеТиповСсылокТипамФайловВыгрузки();
	
	Если Не ОписьПачекСЗВ.Пустая() Тогда
		ДанныеФайлаДокумента = ЗарплатаКадры.ПолучитьДанныеФайла(ОписьПачекСЗВ, УникальныйИдентификатор, Истина);
			
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  ОписьПачекСЗВ);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  ДанныеФайлаДокумента.СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки",  ВРег(ДанныеФайлаДокумента.ИмяФайла));
		ТипФайлаВыгрузки = СоответствиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ОписьПачекСЗВ));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  КодировкаТекста.ANSI);

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);
	КонецЕсли;	
	
	Если (Не РСВ_1.Пустая()) И (Не ПустаяСтрока(АдресФайлаВыгрузкиРСВ)) Тогда
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  РСВ_1);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  АдресФайлаВыгрузкиРСВ);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки",  ИмяФайлаВыгрузкиРСВ);
		
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  "ПачкаРСВ");
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  "windows-1251");

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);	
		
	КонецЕсли;	
	
	Если Не ВедомостьУплатыАДВ11.Пустая() Тогда 
		ДанныеФайлаДокумента = ЗарплатаКадры.ПолучитьДанныеФайла(ВедомостьУплатыАДВ11, УникальныйИдентификатор, Истина);
			
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  ВедомостьУплатыАДВ11);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  ДанныеФайлаДокумента.СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки",  ВРег(ДанныеФайлаДокумента.ИмяФайла));
		ТипФайлаВыгрузки = СоответствиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ВедомостьУплатыАДВ11));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  КодировкаТекста.ANSI);

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);
	КонецЕсли;
	
	Для Каждого ОписаниеПачки Из СписокПачекСЗВ Цикл
		ДанныеФайлаДокумента = ЗарплатаКадры.ПолучитьДанныеФайла(ОписаниеПачки.ПачкаДокументов, УникальныйИдентификатор, Истина);
			
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  ОписаниеПачки.ПачкаДокументов);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  ДанныеФайлаДокумента.СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки",  ВРег(ДанныеФайлаДокумента.ИмяФайла));
		ТипФайлаВыгрузки = СоответствиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ОписаниеПачки.ПачкаДокументов));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  КодировкаТекста.ANSI);

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);	
	КонецЦикла;	
	
	Для Каждого ОписаниеПачки Из СписокПачекСЗВ6_3 Цикл
		ДанныеФайлаДокумента = ЗарплатаКадры.ПолучитьДанныеФайла(ОписаниеПачки.ПачкаДокументов, УникальныйИдентификатор, Истина);
			
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  ОписаниеПачки.ПачкаДокументов);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  ДанныеФайлаДокумента.СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки",  ВРег(ДанныеФайлаДокумента.ИмяФайла));
		ТипФайлаВыгрузки = СоответствиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(ОписаниеПачки.ПачкаДокументов));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки",  КодировкаТекста.ANSI);

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);	
	КонецЦикла;	
	
	ДополнительныеФайлы = Новый Массив;
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(Ссылка, ДополнительныеФайлы);
	
	Для Каждого Файл Из ДополнительныеФайлы Цикл
		ПараметрыДанныхФайла = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
		ПараметрыДанныхФайла.ИдентификаторФормы = УникальныйИдентификатор;
		ПараметрыДанныхФайла.ПолучатьСсылкуНаДвоичныеДанные = Истина;
		
		ДанныеФайлаДокумента = РаботаСФайлами.ДанныеФайла(Файл, ПараметрыДанныхФайла);
		
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Ссылка",  Файл);
		ОписаниеФайла.Вставить("АдресФайлаВыгрузки",  ДанныеФайлаДокумента.СсылкаНаДвоичныеДанныеФайла);
		ОписаниеФайла.Вставить("ИмяФайлаВыгрузки",  ДанныеФайлаДокумента.ИмяФайла);
		ТипФайлаВыгрузки = СоответствиеТиповСсылокТипамФайловВыгрузки.Получить(ТипЗнч(Файл));
		ОписаниеФайла.Вставить("ТипФайлаВыгрузки",  ?(ТипФайлаВыгрузки = Неопределено, "", ТипФайлаВыгрузки));
		ОписаниеФайла.Вставить("КодировкаФайлаВыгрузки");

		МассивОписанийФайловВыгрузки.Добавить(ОписаниеФайла);	
	КонецЦикла;	
	
КонецПроцедуры

Процедура ДобавитьДокументыВКомплект(ДобавляемыеДокументы) Экспорт
	ИзменилсяСоставОписи = Ложь;
	Для Каждого ДобавляемыйДокумент Из ДобавляемыеДокументы Цикл
		Если ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.ОписьПачекСЗВ_6") И ОписьПачекСЗВ.Пустая() Тогда
			ОписьПачекСЗВ = ДобавляемыйДокумент;
			ИзменилсяСоставОписи = Истина;
		ИначеЕсли (ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_1") 
			Или ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.РеестрСЗВ_6_2")
			Или ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4")
			Или ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1"))
			И СписокПачекСЗВ.Найти(ДобавляемыйДокумент, "ПачкаДокументов") = Неопределено Тогда
			
			СтрокаСпискаДокументов = СписокПачекСЗВ.Добавить();
			СтрокаСпискаДокументов.ПачкаДокументов = ДобавляемыйДокумент;
			ИзменилсяСоставОписи = Истина;
		ИначеЕсли ТипЗнч(ДобавляемыйДокумент) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_3")
			И СписокПачекСЗВ6_3.Найти(ДобавляемыйДокумент, "ПачкаДокументов") = Неопределено Тогда
			
			СтрокаСпискаДокументов = СписокПачекСЗВ6_3.Добавить();
			СтрокаСпискаДокументов.ПачкаДокументов = ДобавляемыйДокумент;			
		КонецЕсли;	
	КонецЦикла;	
	
	Если ИзменилсяСоставОписи
		И Не ОписьПачекСЗВ.Пустая() Тогда
		
		ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
		
		ОписьОбъект.ПачкиДокументов.Очистить();
		
		Для Каждого ПачкаСЗВ Из СписокПачекСЗВ Цикл
			СтрокаОписи = ОписьОбъект.ПачкиДокументов.Добавить();
			СтрокаОписи.ПачкаДокументов = ПачкаСЗВ.ПачкаДокументов;
		КонецЦикла;
		
		ОписьОбъект.Записать();
		
	КонецЕсли;
	
	Записать();
			
КонецПроцедуры	

Функция ДанныеРСВКомплекта() Экспорт
	Если Не ЗначениеЗаполнено(РСВ_1) Тогда
		Возврат Неопределено;
	ИначеЕсли Год(ОтчетныйПериод) = 2012 Тогда 
		ДанныеРСВКомплекта = ДанныеРСВЗа2012();
	ИначеЕсли Год(ОтчетныйПериод) = 2013 Тогда
		ДанныеРСВКомплекта = ДанныеРСВЗа2013();
	ИначеЕсли Год(ОтчетныйПериод) >= 2014 Тогда
		ДанныеРСВКомплекта = ДанныеРСВЗа2014();	
	Иначе	
		ДанныеРСВКомплекта = ДанныеРСВ_2010_2011()
	КонецЕсли;	
	
	ДанныеРСВКомплекта.Вставить("Ссылка", РСВ_1);
	
	Возврат ДанныеРСВКомплекта;
КонецФункции	

Процедура ПроверитьДанныеКомплекта(Ошибки, Отказ = Ложь) Экспорт
		
	Если Не ОписьПачекСЗВ.Пустая() Тогда
		ПроверитьДокументКомплекта(ОписьПачекСЗВ, Ошибки, Отказ);		
	КонецЕсли;	
	
	Для Каждого ОписаниеПачкиКомплекта Из СписокПачекСЗВ Цикл
		ПроверитьДокументКомплекта(ОписаниеПачкиКомплекта.ПачкаДокументов, Ошибки, Отказ);
	КонецЦикла;	

	Для Каждого ОписаниеПачкиКомплекта Из СписокПачекСЗВ6_3 Цикл
		ПроверитьДокументКомплекта(ОписаниеПачкиКомплекта.ПачкаДокументов, Ошибки, Отказ);
	КонецЦикла;	
	
	Если Не ВедомостьУплатыАДВ11.Пустая() Тогда
		ПроверитьДокументКомплекта(ВедомостьУплатыАДВ11, Ошибки, Отказ);
	КонецЕсли;	
	
	Если Год(ОтчетныйПериод) >= 2012 Тогда
		ДанныеРСВ = ДанныеРСВКомплекта();
		
		Если ОтчетныйПериод < '20140101' Тогда
			ПроверитьСоставКомплекта(Ошибки, ДанныеРСВ, Отказ);
		КонецЕсли;	
		
		Если Год(ОтчетныйПериод) = 2012 И 
			ДанныеРСВ <> Неопределено Тогда
			
			ПроверитьДанныеРСВЗа2012(ДанныеРСВ, Ошибки, Отказ);	
			
			Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
				Если ОтчетныйПериод = ПерсонифицированныйУчетКлиентСервер.ПолучитьНачалоОтчетногоПериода(КонецГода(ОтчетныйПериод)) Тогда
					ПроверитьСоответствиеДанныхКомплектаЗаГод(ДанныеРСВ, Ошибки, Отказ);
				КонецЕсли;	

				ПроверитьСоответствиеДанныхПачекДаннымРСВЗа2012(ДанныеРСВ, Ошибки, Отказ);
			КонецЕсли;	
		ИначеЕсли ЗначениеЗаполнено(ОписьПачекСЗВ) 
			И Год(ОтчетныйПериод) = 2013 Тогда
			
			ПроверитьСоответствиеДанныхПачекДаннымРСВЗа2013(ДанныеРСВ, Ошибки, Отказ);
		ИначеЕсли Год(ОтчетныйПериод) >= 2014 Тогда 
			ПроверитьСоответствиеОсновныхРазделовРСВ1Разделам6(ДанныеРСВ, Ошибки, Отказ);
			ПроверитьСоответствиеИсходныхИКорректируемыхСведений(Отказ);
		КонецЕсли;	
	КонецЕсли;	
	
	ПроверитьУникальностьНомеровПачек(Ошибки, Отказ);
	
	ОкончаниеПериода = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
	Если СписокПачекСЗВ.Количество() > 0
		Или СписокПачекСЗВ6_3.Количество()
		Или ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
	
		ПерсонифицированныйУчет.ПроверитьДанныеОрганизации(ЭтотОбъект, Организация, Отказ, ОкончаниеПериода);
	КонецЕсли;	

КонецПроцедуры	

Процедура ПроверитьУникальностьНомеровПачек(Ошибки, Отказ)
	НомерПачкиРСВ_1 = Неопределено;
	Если ЗначениеЗаполнено(РСВ_1) Тогда
		НомерПачкиРСВ_1 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РСВ_1, "НомерПачки");
	КонецЕсли;
	
	НомерПачкиОписи = Неопределено;
	Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
		НомерПачкиОписи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписьПачекСЗВ, "НомерПачки");
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов КАК Документ,
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.ПачкаДокументов.НомерПачки КАК НомерПачки
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета.СписокПачекСЗВ КАК КомплектыОтчетностиПерсучетаСписокПачекСЗВ
	|ГДЕ
	|	КомплектыОтчетностиПерсучетаСписокПачекСЗВ.Ссылка = &Ссылка";
	
	СуществующиеНомераДокументов = Новый Массив;
		
	СписокПачек = Новый Массив;
	
	НомераПачек = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокПачек.Добавить(Выборка.Документ);
		НомераПачек.Вставить(Выборка.Документ, Выборка.НомерПачки);
	КонецЦикла;	
	
	Если НомерПачкиРСВ_1 <> Неопределено Тогда
		СуществующиеНомераДокументов.Добавить(НомерПачкиРСВ_1);
	КонецЕсли;
	
	ТекстОшибки = НСтр("ru = 'Документ с таким же номером уже входит в состав комплекта.'");
	
	Если НомерПачкиОписи <> Неопределено Тогда
		Если СуществующиеНомераДокументов.Найти(НомерПачкиОписи) = Неопределено Тогда
			СуществующиеНомераДокументов.Добавить(НомерПачкиОписи);
		Иначе
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, ОписьПачекСЗВ, ТекстОшибки, "НомерПачки", Отказ);	
		КонецЕсли;			
	КонецЕсли;	
	
	ПорядокСортировкиПачек = Справочники.КомплектыОтчетностиПерсучета.ПорядокСортировкиПачекКомплекта(СписокПачек, Ложь);
	
	Для Каждого ДокументКомплекта Из ПорядокСортировкиПачек Цикл
		НомерПачки = НомераПачек[ДокументКомплекта];
		
		Если СуществующиеНомераДокументов.Найти(НомерПачки) = Неопределено Тогда
			СуществующиеНомераДокументов.Добавить(НомерПачки);
		Иначе
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, ДокументКомплекта, ТекстОшибки, "НомерПачки", Отказ);	
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ПроверитьСоставКомплекта(Ошибки, ДанныеРСВ = Неопределено, Отказ = Ложь)
	ЕстьФормыСЗВ6 = МассивСсылокСЗВ(Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ).Количество() > 0;
	
	Если ДанныеРСВ = Неопределено
		И ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
		
		ТекстОшибки = НСтр("ru = 'При наличии Описи сведений по форме АДВ-6-2, наличие формы РСВ-1 обязательно за тот же отчетный период.'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(
			Ошибки, 
			Ссылка, 
			ТекстОшибки, 
			, 
			Отказ);
		
		Возврат;
	КонецЕсли;
	
	Если ДанныеРСВ <> Неопределено
		И ОписьПачекСЗВ.Пустая() 
		И (ДанныеРСВ.НачисленоРСВ1НаСтраховую <> 0
		Или ДанныеРСВ.НачисленоРСВ1НаНакопительную <> 0) Тогда
		
		ТекстОшибки = НСтр("ru = 'При наличии Расчета с ненулевыми начислениями страховых взносов за 3 месяца отчетного периода (строка  114 Расчета) наличие Описи сведений АДВ-6-2  за тот же отчетный период обязательно.'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(
			Ошибки, 
			Ссылка, 
			ТекстОшибки, 
			, 
			Отказ);
		
		Возврат;
	КонецЕсли;	
	
	Если Не ЕстьФормыСЗВ6 И Не ОписьПачекСЗВ.Пустая() Тогда
		
		ИмяФорм = ?(ОтчетныйПериод >= '20130101', НСтр("ru = 'СЗВ-6-4'"), НСтр("ru = 'СЗВ-6-1(2)'"));
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'При наличии Описи сведений по форме АДВ-6-2, наличие исходных форм %1 обязательно за тот же отчетный период.'"),
						ИмяФорм);
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(
			Ошибки, 
			Ссылка, 
			ТекстОшибки, 
			, 
			Отказ);
		
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПоместитьКорректирующиеСведения(КорректирующиеСведения) Экспорт
	Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
		ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект(); 
	Иначе
		ОписьОбъект = Документы.ОписьПачекСЗВ_6.НовыйОписьАДВ(Организация, ОтчетныйПериод);
		ОписьПачекСЗВ = ОписьОбъект.Ссылка;
	КонецЕсли;	
	
	СписокПачекСЗВ.Очистить();
	
	ОписьОбъект.ПачкиДокументов.Очистить();
	
	СозданыКорректируемыеДокументы = Ложь;
	Для Каждого ПачкаДокументов Из КорректирующиеСведения.ДокументыКомплекта Цикл
		Если ТипЗнч(ПачкаДокументов) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_1")
			Или ТипЗнч(ПачкаДокументов) = Тип("ДокументСсылка.РеестрСЗВ_6_2")
			Или ТипЗнч(ПачкаДокументов) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4")
			Или ТипЗнч(ПачкаДокументов) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда 

			СтрокаТаблицыКомплекта = СписокПачекСЗВ.Добавить();
			СтрокаТаблицыКомплекта.ПачкаДокументов = ПачкаДокументов;
			
			СтрокаТаблицыОписи = ОписьОбъект.ПачкиДокументов.Добавить();
			СтрокаТаблицыОписи.ПачкаДокументов = ПачкаДокументов;
			
			СозданыКорректируемыеДокументы = Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	Если ОтчетныйПериод < '20140101' Тогда
		ОписьОбъект.Записать();
	КонецЕсли;	
	
	ОписаниеКорректируемогоПериода = КорректируемыеПериоды.Найти(КорректирующиеСведения.КорректируемыйПериод, "Период");
	
	Если ОписаниеКорректируемогоПериода = Неопределено 
		И СозданыКорректируемыеДокументы Тогда
		
		ОписаниеКорректируемогоПериода = КорректируемыеПериоды.Добавить();
		ОписаниеКорректируемогоПериода.Период = КорректирующиеСведения.КорректируемыйПериод;
		ОписаниеКорректируемогоПериода.ВариантФормирования = КорректирующиеСведения.ВариантФормирования;
		ОписаниеКорректируемогоПериода.НулевойКомплектСведений = КорректирующиеСведения.НулевойКомплект;
	ИначеЕсли ОписаниеКорректируемогоПериода <> Неопределено
		И СозданыКорректируемыеДокументы Тогда 
		
		ОписаниеКорректируемогоПериода.ВариантФормирования = КорректирующиеСведения.ВариантФормирования;	
		ОписаниеКорректируемогоПериода.НулевойКомплектСведений = КорректирующиеСведения.НулевойКомплект;
	ИначеЕсли ОписаниеКорректируемогоПериода <> Неопределено Тогда  
		КорректируемыеПериоды.Удалить(ОписаниеКорректируемогоПериода);
	КонецЕсли;
	
КонецПроцедуры	

Функция ПараметрыФормированияКорректирующихСведений() Экспорт
	СтруктураПараметров = Справочники.КомплектыОтчетностиПерсучета.ПараметрыФормированияКорректирующихСведений();
	
	Для Каждого ПачкаСЗВ Из СписокПачекСЗВ Цикл
		СтруктураПараметров.ДокументыКомплекта.Добавить(ПачкаСЗВ.ПачкаДокументов);
	КонецЦикла;
	
	СтруктураПараметров.Организация = Организация;
	СтруктураПараметров.ОтчетныйПериод = ОтчетныйПериод;
	СтруктураПараметров.КорректируемыеПериодыКомплекта = КорректируемыеПериоды.Выгрузить();
	
	Возврат СтруктураПараметров;
КонецФункции	

Процедура УстановитьПредставлениеСоставаКомплекта() Экспорт
	Если НулевойКомплект Тогда
		СоставКомплектаПредставление = НСтр("ru = 'Комплект ""нулевых"" отчетов'");
	ИначеЕсли ОтчетныйПериод >= '20140101' Тогда
		Если КорректирующаяФормаРСВ_1 Тогда
			Строкаформы = НСтр("ru = 'Коррект. РСВ-1'");	
		Иначе
			Строкаформы = НСтр("ru = 'Исх. РСВ-1'");
		КонецЕсли;	
		
		СтрокаКоррПериоды = ПредставлениеКорректируемыхПериодов();
		
		СоставКомплектаПредставление = СтрокаФормы + Символы.ПС + СтрокаКоррПериоды;
	Иначе
		СтрокаФормы = "";
		
		Если ЗначениеЗаполнено(РСВ_1) Тогда
			СтрокаФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, РСВ-1'"), СтрокаФормы);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
			СтрокаФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, АДВ-6-2'"), СтрокаФормы);
		КонецЕсли;	
		
		Если КомплектСодержитДокументы(Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_1")) Тогда
			СтрокаФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, СЗВ-6-1'"), СтрокаФормы);
		КонецЕсли;	
		
		Если КомплектСодержитДокументы(Тип("ДокументСсылка.РеестрСЗВ_6_2")) Тогда
			СтрокаФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, СЗВ-6-2'"), СтрокаФормы);
		КонецЕсли;	
		
		Если КомплектСодержитДокументы(Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4")) Тогда
			СтрокаФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, СЗВ-6-4'"), СтрокаФормы);
		КонецЕсли;	
		
		Если СписокПачекСЗВ6_3.Количество() > 0 Тогда
			СтрокаФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, СЗВ-6-3'"), СтрокаФормы);
		КонецЕсли;	
		
		СтрокаФормы = НСтр("ru = 'Комплект форм'") + " " + Сред(СтрокаФормы, 3);
		
		СтрокаКоррПериоды = ПредставлениеКорректируемыхПериодов();
		
		СоставКомплектаПредставление = СтрокаФормы + Символы.ПС + СтрокаКоррПериоды;			
	КонецЕсли;	
	
КонецПроцедуры	

Функция ПредставлениеКорректируемыхПериодов()
	СтрокаКоррПериоды = "";
	Если КорректируемыеПериоды.Количество() > 0 Тогда 			
		ГодПредыдущегоПериода =  Год(КорректируемыеПериоды[0].Период);
		
		Для Каждого ОписаниеКорректируемогоПериода Из КорректируемыеПериоды Цикл
			
			Если ГодПредыдущегоПериода <> Год(ОписаниеКорректируемогоПериода.Период) Тогда
				Если ГодПредыдущегоПериода = 2010 Тогда
					СтрокаКоррПериоды = СтрокаКоррПериоды + НСтр("ru = ' полугодие 2010 г.,'");
				Иначе 	
					СтрокаКоррПериоды = СтрокаКоррПериоды + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = ' кв. %1 г.,'"), Формат(ГодПредыдущегоПериода, "ЧГ="));
				КонецЕсли;
				ГодПредыдущегоПериода =  Год(ОписаниеКорректируемогоПериода.Период);
			Иначе 
				СтрокаКоррПериоды = СтрокаКоррПериоды + ", ";
			КонецЕсли;	
			
			Если ОписаниеКорректируемогоПериода.Период = '20100701' Тогда
				СтрокаКоррПериоды = СтрокаКоррПериоды + "2";			
			Иначе
				СтрокаКоррПериоды = СтрокаКоррПериоды + Формат(ОписаниеКорректируемогоПериода.Период, "ДФ=к");
			КонецЕсли;	
			
		КонецЦикла;
		СтрокаКоррПериоды = СтрокаКоррПериоды + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = ' кв. %1 г.'"), Формат(ГодПредыдущегоПериода, "ЧГ="));
		
		ДлинаСтроки = СтрДлина(СтрокаКоррПериоды);
		
		СтрокаКоррПериоды = НСтр("ru = 'Коррект.:'") + " " + Сред(СтрокаКоррПериоды, 3, ДлинаСтроки - 2);
	КонецЕсли;	
	
	Возврат СтрокаКоррПериоды;
КонецФункции	

Функция КомплектСодержитДокументы(ТипДокумента)
	Для Каждого СтрокаТаблицы Из СписокПачекСЗВ Цикл 
		Если ТипЗнч(СтрокаТаблицы.ПачкаДокументов) = ТипДокумента Тогда
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Ложь;
КонецФункции	

Процедура ПроверитьДокументКомплекта(ПачкаСсылка, Ошибки, Отказ = Ложь)
	 	 
	ПачкаОбъект = ПачкаСсылка.ПолучитьОбъект();
	
	ПачкаОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДанныеОрганизации", Истина);
		
	ПачкаОбъект.ПроверитьДанныеДокумента(Отказ);
КонецПроцедуры	

Функция ТаблицаТарифовСтраховыхВзносов(ОтчетныйПериод)
	ТаблицаТарифов = РегистрыСведений.ТарифыСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ТаблицаТарифов", ТаблицаТарифов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТарифов.Период,
	|	ТаблицаТарифов.ВидТарифа,
	|	ТаблицаТарифов.ПФР,
	|	ТаблицаТарифов.ПФРНакопительная,
	|	ТаблицаТарифов.ФФОМС
	|ПОМЕСТИТЬ ВТТарифы
	|ИЗ
	|	&ТаблицаТарифов КАК ТаблицаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Тарифы.Период) КАК Период,
	|	Тарифы.ВидТарифа
	|ПОМЕСТИТЬ ВТПериодыТарифов
	|ИЗ
	|	ВТТарифы КАК Тарифы
	|ГДЕ
	|	Тарифы.Период <= &КонецГода
	|
	|СГРУППИРОВАТЬ ПО
	|	Тарифы.ВидТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Тарифы.Период,
	|	Тарифы.ВидТарифа,
	|	Тарифы.ПФР,
	|	Тарифы.ПФРНакопительная,
	|	Тарифы.ФФОМС
	|ИЗ
	|	ВТПериодыТарифов КАК ПериодыТарифов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТарифы КАК Тарифы
	|		ПО ПериодыТарифов.Период = Тарифы.Период
	|			И ПериодыТарифов.ВидТарифа = Тарифы.ВидТарифа";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции	

Процедура ПроверитьДанныеРСВЗа2012(ДанныеРСВ, Ошибки, Отказ = Ложь)
	
	Отчет = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(РСВ_1);
	
	Если НЕ ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде Тогда
		ТекстСообщения = НСтр("ru = 'Форма РСВ-1 не актуальна в текущем периоде'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, , , , , , , Отказ);
		
		Возврат;
	КонецЕсли;	
	
	СоответствиеТарифов = СоответствиеКодовТарифам();
	
	ПоказателиОтчета = ДанныеРСВ.ПоказателиОтчета;	
										
	ТитульныйЛист = ПоказателиОтчета.Титульный;
	ИННизРСВ1 = ТитульныйЛист.ИНН;
	ИННизРСВ1 = СтрЗаменить(ИННизРСВ1, "-","");
	КППизРСВ1 = ТитульныйЛист.КПП;
	КППизРСВ1 = СтрЗаменить(КППизРСВ1, "-","");
	РегНомерПФРизРСВ1 = ТитульныйЛист.НомРег;
	
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.ОтчетГод) И ЗначениеЗаполнено(ПоказателиОтчета.Титульный.Период) Тогда 
		ОтчетныйПериодРСВ1 = Дата(Число(ПоказателиОтчета.Титульный.ОтчетГод), Число(ПоказателиОтчета.Титульный.Период) , 1);
	Иначе 
		ОтчетныйПериодРСВ1 = '00010101';
	КонецЕсли;		
	
	НулевойРСВ = ДанныеРСВ.НачисленоРСВ1НаСтраховую = 0
					И ДанныеРСВ.НачисленоРСВ1НаНакопительную = 0 
					И ДанныеРСВ.УплаченоРСВ1НаСтраховую = 0 
					И ДанныеРСВ.УплаченоРСВ1НаНакопительную = 0;
	
	Если ДанныеРСВ.КоличествоЗастрахованных = 0 
		И НЕ (НулевойРСВ) Тогда 

		ТекстСообщения = НСтр("ru = 'Количество застрахованных лиц должно быть больше нуля.'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Титульный", , , , , "КолЗастрахованных6", Отказ);
	КонецЕсли;
	
	СредняяЧисленность = 0;
	Если ЗначениеЗаполнено(ТитульныйЛист.СрСписЧисл) Тогда
		СредняяЧисленность = Число(ТитульныйЛист.СрСписЧисл)
	КонецЕсли;
	Если СредняяЧисленность = 0 
		И НЕ (НулевойРСВ) Тогда 
		
		ТекстСообщения = НСтр("ru = 'Среднесписочная численность должна быть больше нуля.'");
		                                                          
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Титульный", , , , , "СрСписЧисл6", Отказ);
	КонецЕсли;
	
	ТаблицаТарифов = ТаблицаТарифовСтраховыхВзносов(ОтчетныйПериод);
					
	Раздел1 = ПоказателиОтчета.Раздел1;
	
	НачисленоРСВ1НаСтраховую = Раздел1.П000100011403;
	НачисленоРСВ1НаНакопительную = Раздел1.П000100011404;
	УплаченоРСВ1НаСтраховую = Раздел1.П000100014403;
	УплаченоРСВ1НаНакопительную = Раздел1.П000100014404;
			
	ОбщийНалоговыйРежим = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим");
	УпрощенныйНалоговыйРежим = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.УпрощенныйНалоговыйРежим");
	ЕНВД = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ЕНВД");
		
	Разделы = ПоказателиОтчета.Раздел2;
	НомерСтраницы = 0;
	Для каждого ЛистДанных Из Разделы Цикл
		НомерСтраницы = НомерСтраницы + 1;
		
		ПоказателиРазделов = ЛистДанных.Данные;
		
		КодТарифа = ПоказателиРазделов.П000200001001;
		Тариф = СоответствиеТарифов.Получить(КодТарифа);
				
		СтрокаТарифа = ТаблицаТарифов.Найти(Тариф,"ВидТарифа");
		ТарифССуммПревышения = ?(Тариф = ОбщийНалоговыйРежим Или Тариф = УпрощенныйНалоговыйРежим Или Тариф = ЕНВД, 10, 0);
		
		ДопустимоеРасхождение = 0.005 * ДанныеРСВ.КоличествоЗастрахованных;
		СообщениеОРасхожденииУжеВыводилось = Ложь;
			
		// строка 240
		Если ПоказателиРазделов.П000200024003 <> ПоказателиРазделов.П000200020103 + ПоказателиРазделов.П000200020303 - ПоказателиРазделов.П000200021103 - ПоказателиРазделов.П000200021303 - ПоказателиРазделов.П000200022103 - ПоказателиРазделов.П000200022303 - ПоказателиРазделов.П000200023103 - ПоказателиРазделов.П000200023303 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.3 строки 240 должно быть равно: строка 201 плюс строка 203, минус строка 211, минус строка 213, минус строка 221, минус строка 223, минус строка 231, минус строка 233 по гр.3.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "240", Строка(НомерСтраницы), "", "П000200024003", Отказ);
		КонецЕсли;
		Если ПоказателиРазделов.П000200024004 <> ПоказателиРазделов.П000200020104 + ПоказателиРазделов.П000200020304 - ПоказателиРазделов.П000200021104 - ПоказателиРазделов.П000200021304 - ПоказателиРазделов.П000200022104 - ПоказателиРазделов.П000200022304 - ПоказателиРазделов.П000200023104 - ПоказателиРазделов.П000200023304 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.4 строки 240 должно быть равно: строка 201 плюс строка 204, минус строка 211, минус строка 213, минус строка 221, минус строка 223, минус строка 231, минус строка 233 по гр.4.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "4", "240", Строка(НомерСтраницы), "", "П000200024004", Отказ);	
		КонецЕсли;
		Если ПоказателиРазделов.П000200024005 <> ПоказателиРазделов.П000200020105 + ПоказателиРазделов.П000200020305 - ПоказателиРазделов.П000200021105 - ПоказателиРазделов.П000200021305 - ПоказателиРазделов.П000200022105 - ПоказателиРазделов.П000200022305 - ПоказателиРазделов.П000200023105 - ПоказателиРазделов.П000200023305 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.5 строки 240 должно быть равно: строка 201 плюс строка 205, минус строка 211, минус строка 213, минус строка 221, минус строка 223, минус строка 231, минус строка 233 по гр.5.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "240", Строка(НомерСтраницы), "", "П000200024005", Отказ);
		КонецЕсли;
		Если ПоказателиРазделов.П000200024006 <> ПоказателиРазделов.П000200020106 + ПоказателиРазделов.П000200020306 - ПоказателиРазделов.П000200021106 - ПоказателиРазделов.П000200021306 - ПоказателиРазделов.П000200022106 - ПоказателиРазделов.П000200022306 - ПоказателиРазделов.П000200023106 - ПоказателиРазделов.П000200023306 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.6 строки 240 должно быть равно: строка 201 плюс строка 206, минус строка 211, минус строка 213, минус строка 221, минус строка 223, минус строка 231, минус строка 233 по гр.6.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "240", Строка(НомерСтраницы), "", "П000200024006", Отказ);
		КонецЕсли;
		// строка 241
		Если ПоказателиРазделов.П000200024103 <> ПоказателиРазделов.П000200020203 - ПоказателиРазделов.П000200021203 - ПоказателиРазделов.П000200022203 - ПоказателиРазделов.П000200023203 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.3 строки 241 должно быть равно: строка 202 минус строка 212, минус строка 222, минус строка 232 по гр.3.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "241", Строка(НомерСтраницы), "", "П000200024103", Отказ);	
		КонецЕсли;
		Если ПоказателиРазделов.П000200024104 <> ПоказателиРазделов.П000200020204 - ПоказателиРазделов.П000200021204 - ПоказателиРазделов.П000200022204 - ПоказателиРазделов.П000200023204 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.4 строки 241 должно быть равно: строка 202 минус строка 212, минус строка 222, минус строка 232 по гр.4.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "4", "241", Строка(НомерСтраницы), "", "П000200024104", Отказ);
		КонецЕсли;
		Если ПоказателиРазделов.П000200024105 <> ПоказателиРазделов.П000200020205 - ПоказателиРазделов.П000200021205 - ПоказателиРазделов.П000200022205 - ПоказателиРазделов.П000200023205 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.5 строки 241 должно быть равно: строка 202 минус строка 212, минус строка 222, минус строка 232 по гр.5.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "241", Строка(НомерСтраницы), "", "П000200024105", Отказ);
		КонецЕсли;
		Если ПоказателиРазделов.П000200024106 <> ПоказателиРазделов.П000200020206 - ПоказателиРазделов.П000200021206 - ПоказателиРазделов.П000200022206 - ПоказателиРазделов.П000200023206 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.6 строки 241 должно быть равно: строка 202 минус строка 212, минус строка 222, минус строка 232 по гр.6.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "241", Строка(НомерСтраницы), "", "П000200024106", Отказ);
		КонецЕсли;
		
		// строка 250
		Если СтрокаТарифа <> Неопределено Тогда
			РасчетноеЗначение = Окр(ПоказателиРазделов.П000200024003 * СтрокаТарифа.ПФР / 100, 2) + Окр(ПоказателиРазделов.П000200024103 * (СтрокаТарифа.ПФР - СтрокаТарифа.ПФРНакопительная) / 100, 2);
			Разность = Макс(ПоказателиРазделов.П000200025003 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025003);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.3 строки 250 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025003,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "250", Строка(НомерСтраницы), "", "П000200025003", Отказ);	
			КонецЕсли;
			РасчетноеЗначение = Окр((ПоказателиРазделов.П000200024003 - ПоказателиРазделов.П000200024005 - ПоказателиРазделов.П000200024006) * СтрокаТарифа.ПФР / 100, 2) + Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * (СтрокаТарифа.ПФР - СтрокаТарифа.ПФРНакопительная) / 100, 2)
								- (Окр((ПоказателиРазделов.П000200024003 - ПоказателиРазделов.П000200024004 - ПоказателиРазделов.П000200024005 - ПоказателиРазделов.П000200024006) * СтрокаТарифа.ПФР / 100, 2) + Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024104 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * (СтрокаТарифа.ПФР - СтрокаТарифа.ПФРНакопительная) / 100, 2));
			Разность = Макс(ПоказателиРазделов.П000200025004 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025004);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.4 строки 250 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"),  Формат(ПоказателиРазделов.П000200025004,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "4", "250", Строка(НомерСтраницы), "", "П000200025004", Отказ);	
			КонецЕсли;
			РасчетноеЗначение = Окр((ПоказателиРазделов.П000200024003 - ПоказателиРазделов.П000200024006) * СтрокаТарифа.ПФР / 100, 2) + Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024106) * (СтрокаТарифа.ПФР - СтрокаТарифа.ПФРНакопительная) / 100, 2)
								- (Окр((ПоказателиРазделов.П000200024003 - ПоказателиРазделов.П000200024004 - ПоказателиРазделов.П000200024005 - ПоказателиРазделов.П000200024006) * СтрокаТарифа.ПФР / 100, 2) + Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024104 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * (СтрокаТарифа.ПФР - СтрокаТарифа.ПФРНакопительная) / 100, 2))
								- ПоказателиРазделов.П000200025004;
			Разность = Макс(ПоказателиРазделов.П000200025005 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025005);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.5 строки 250 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"),  Формат(ПоказателиРазделов.П000200025005,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "250", Строка(НомерСтраницы), "", "П000200025005", Отказ);	
			КонецЕсли;
			РасчетноеЗначение = Окр(ПоказателиРазделов.П000200024003 * СтрокаТарифа.ПФР / 100, 2) + Окр(ПоказателиРазделов.П000200024103 * (СтрокаТарифа.ПФР - СтрокаТарифа.ПФРНакопительная) / 100, 2)
								- (Окр((ПоказателиРазделов.П000200024003 - ПоказателиРазделов.П000200024004 - ПоказателиРазделов.П000200024005 - ПоказателиРазделов.П000200024006) * СтрокаТарифа.ПФР / 100, 2) + Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024104 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * (СтрокаТарифа.ПФР - СтрокаТарифа.ПФРНакопительная) / 100, 2))
								- ПоказателиРазделов.П000200025004 - ПоказателиРазделов.П000200025005;
			Разность = Макс(ПоказателиРазделов.П000200025006 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025006);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.6 строки 250 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"),  Формат(ПоказателиРазделов.П000200025006,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "250", Строка(НомерСтраницы), "", "П000200025006", Отказ);	
			КонецЕсли;
			// строка 251
			РасчетноеЗначение = Окр(ПоказателиРазделов.П000200024103 * СтрокаТарифа.ПФРНакопительная / 100, 2);
			Разность = Макс(ПоказателиРазделов.П000200025103 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025103);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.3 строки 251 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025103,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "251", Строка(НомерСтраницы), "", "П000200025103", Отказ);	
			КонецЕсли;
			РасчетноеЗначение = Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * СтрокаТарифа.ПФРНакопительная / 100, 2)
								- Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024104 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * СтрокаТарифа.ПФРНакопительная / 100, 2);
			Разность = Макс(ПоказателиРазделов.П000200025104 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025104);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.4 строки 251 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025104,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "4", "251", Строка(НомерСтраницы), "", "П000200025104", Отказ);
			КонецЕсли;
			РасчетноеЗначение = Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024106) * СтрокаТарифа.ПФРНакопительная / 100, 2)
								- Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024104 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * СтрокаТарифа.ПФРНакопительная / 100, 2)
								- ПоказателиРазделов.П000200025104;
			Разность = Макс(ПоказателиРазделов.П000200025105 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025105);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.5 строки 251 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025105,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "251", Строка(НомерСтраницы), "", "П000200025105", Отказ);
			КонецЕсли;
			РасчетноеЗначение = Окр(ПоказателиРазделов.П000200024103 * СтрокаТарифа.ПФРНакопительная / 100, 2)
								- Окр((ПоказателиРазделов.П000200024103 - ПоказателиРазделов.П000200024104 - ПоказателиРазделов.П000200024105 - ПоказателиРазделов.П000200024106) * СтрокаТарифа.ПФРНакопительная / 100, 2)
								- ПоказателиРазделов.П000200025104 - ПоказателиРазделов.П000200025105;
			Разность = Макс(ПоказателиРазделов.П000200025106 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025106);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.6 строки 251 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025106,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "251", Строка(НомерСтраницы), "", "П000200025106", Отказ);
			КонецЕсли;
		КонецЕсли;	
		// строка 252
		РасчетноеЗначение = Окр((ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303) * ТарифССуммПревышения / 100, 2);
		Разность = Макс(ПоказателиРазделов.П000200025203 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025203);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.3 строки 252 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025203,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "253", Строка(НомерСтраницы), "", "П000200025303", Отказ);
		КонецЕсли;
		РасчетноеЗначение = Окр((ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303 - (ПоказателиРазделов.П000200023105 + ПоказателиРазделов.П000200023205 + ПоказателиРазделов.П000200023305) - (ПоказателиРазделов.П000200023106 + ПоказателиРазделов.П000200023206 + ПоказателиРазделов.П000200023306)) * ТарифССуммПревышения / 100, 2)
							- Окр((ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303 - (ПоказателиРазделов.П000200023104 + ПоказателиРазделов.П000200023204 + ПоказателиРазделов.П000200023304) - (ПоказателиРазделов.П000200023105 + ПоказателиРазделов.П000200023205 + ПоказателиРазделов.П000200023305) - (ПоказателиРазделов.П000200023106 + ПоказателиРазделов.П000200023206 + ПоказателиРазделов.П000200023306)) * ТарифССуммПревышения / 100, 2);
		Разность = Макс(ПоказателиРазделов.П000200025204 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025204);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.4 строки 252 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025204,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "4", "253", Строка(НомерСтраницы), "", "П000200025304", Отказ);
		КонецЕсли;
		РасчетноеЗначение = Окр((ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303 - (ПоказателиРазделов.П000200023106 + ПоказателиРазделов.П000200023206 + ПоказателиРазделов.П000200023306)) * ТарифССуммПревышения / 100, 2)
							- Окр((ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303 - (ПоказателиРазделов.П000200023104 + ПоказателиРазделов.П000200023204 + ПоказателиРазделов.П000200023304) - (ПоказателиРазделов.П000200023105 + ПоказателиРазделов.П000200023205 + ПоказателиРазделов.П000200023305) - (ПоказателиРазделов.П000200023106 + ПоказателиРазделов.П000200023206 + ПоказателиРазделов.П000200023306)) * ТарифССуммПревышения / 100, 2)
							- ПоказателиРазделов.П000200025204;
		Разность = Макс(ПоказателиРазделов.П000200025205 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025205);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.5 строки 252 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025205,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "253", Строка(НомерСтраницы), "", "П000200025305", Отказ);
		КонецЕсли;
		РасчетноеЗначение = Окр((ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303) * ТарифССуммПревышения / 100, 2)
							- Окр((ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303 - (ПоказателиРазделов.П000200023104 + ПоказателиРазделов.П000200023204 + ПоказателиРазделов.П000200023304) - (ПоказателиРазделов.П000200023105 + ПоказателиРазделов.П000200023205 + ПоказателиРазделов.П000200023305) - (ПоказателиРазделов.П000200023106 + ПоказателиРазделов.П000200023206 + ПоказателиРазделов.П000200023306)) * ТарифССуммПревышения / 100, 2)
							- ПоказателиРазделов.П000200025204 - ПоказателиРазделов.П000200025205;
		Разность = Макс(ПоказателиРазделов.П000200025206 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200025206);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.6 строки 252 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200025206,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "253", Строка(НомерСтраницы), "", "П000200025306", Отказ);
		КонецЕсли;
		// строка 260
		Если ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303 > 0 И ПоказателиРазделов.П000200026003 = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Если сумма значений гр.3 строк 231, 232, 233 больше 0, то и значение в гр.3 строки 260 раздела 2 должно быть больше 0.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "260", Строка(НомерСтраницы), "", "П000200026003", Отказ);	
		КонецЕсли;
		Если ПоказателиРазделов.П000200023104 + ПоказателиРазделов.П000200023204 + ПоказателиРазделов.П000200023304 > 0 И ПоказателиРазделов.П000200026004 = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Если сумма значений гр.4 строк 231, 232, 233 больше 0, то и значение в гр.4 строки 260 раздела 2 должно быть больше 0.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "4", "260", Строка(НомерСтраницы), "", "П000200026004", Отказ);	
		КонецЕсли;
		Если ПоказателиРазделов.П000200023105 + ПоказателиРазделов.П000200023205 + ПоказателиРазделов.П000200023305 > 0 И ПоказателиРазделов.П000200026005 = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Если сумма значений гр.5 строк 231, 232, 233 больше 0, то и значение в гр.5 строки 260 раздела 2 должно быть больше 0.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "260", Строка(НомерСтраницы), "", "П000200026005", Отказ);	
		КонецЕсли;
		Если ПоказателиРазделов.П000200023106 + ПоказателиРазделов.П000200023206 + ПоказателиРазделов.П000200023306 > 0 И ПоказателиРазделов.П000200026006 = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Если сумма значений гр.6 строк 231, 232, 233 больше 0, то и значение в гр.6 строки 260 раздела 2 должно быть больше 0.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "260", Строка(НомерСтраницы), "", "П000200026006", Отказ);	
		КонецЕсли;
		// строка 275
		Если ПоказателиРазделов.П000200027503 <> ПоказателиРазделов.П000200027103 - ПоказателиРазделов.П000200027203 - ПоказателиРазделов.П000200027303 - ПоказателиРазделов.П000200027403 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.3 строки 275 должно быть равно: строка 271 минус строка 272, минус строка 273, минус строка 274 по гр.3.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "275", Строка(НомерСтраницы), "", "П000200027503", Отказ);	
		КонецЕсли;
		Если ПоказателиРазделов.П000200027504 <> ПоказателиРазделов.П000200027104 - ПоказателиРазделов.П000200027204 - ПоказателиРазделов.П000200027304 - ПоказателиРазделов.П000200027404 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.4 строки 275 должно быть равно: строка 271 минус строка 272, минус строка 273, минус строка 274 по гр.4.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "275", Строка(НомерСтраницы), "", "П000200027505", Отказ);
		КонецЕсли;
		Если ПоказателиРазделов.П000200027505 <> ПоказателиРазделов.П000200027105 - ПоказателиРазделов.П000200027205 - ПоказателиРазделов.П000200027305 - ПоказателиРазделов.П000200027405 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.5 строки 275 должно быть равно: строка 271 минус строка 272, минус строка 273, минус строка 274 по гр.5.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "275", Строка(НомерСтраницы), "", "П000200027505", Отказ);
		КонецЕсли;
		Если ПоказателиРазделов.П000200027506 <> ПоказателиРазделов.П000200027106 - ПоказателиРазделов.П000200027206 - ПоказателиРазделов.П000200027306 - ПоказателиРазделов.П000200027406 Тогда
			ТекстСообщения = НСтр("ru = 'Значение показателя в гр.6 строки 275 должно быть равно: строка 271 минус строка 272, минус строка 273, минус строка 274 по гр.6.'");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "275", Строка(НомерСтраницы), "", "П000200027506", Отказ);
		КонецЕсли;
		// строка 276
		Если СтрокаТарифа <> Неопределено Тогда
			РасчетноеЗначение = Окр(ПоказателиРазделов.П000200027503 * СтрокаТарифа.ФФОМС / 100, 2);
			Разность = Макс(ПоказателиРазделов.П000200027603 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200027603);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.3 строки 276 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200027603,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "3", "276", Строка(НомерСтраницы), "", "П000200027603", Отказ);
			КонецЕсли;
			РасчетноеЗначение = Окр((ПоказателиРазделов.П000200027503 - ПоказателиРазделов.П000200027505 - ПоказателиРазделов.П000200027506) * СтрокаТарифа.ФФОМС / 100, 2)
								- Окр((ПоказателиРазделов.П000200027503 - ПоказателиРазделов.П000200027504 - ПоказателиРазделов.П000200027505 - ПоказателиРазделов.П000200027506) * СтрокаТарифа.ФФОМС / 100, 2);
			Разность = Макс(ПоказателиРазделов.П000200027604 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200027604);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.4 строки 276 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200027604,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "4", "276", Строка(НомерСтраницы), "", "П000200027604", Отказ);
			КонецЕсли;
			РасчетноеЗначение = Окр((ПоказателиРазделов.П000200027503 - ПоказателиРазделов.П000200027506) * СтрокаТарифа.ФФОМС / 100, 2)
								- Окр((ПоказателиРазделов.П000200027503 - ПоказателиРазделов.П000200027504 - ПоказателиРазделов.П000200027505 - ПоказателиРазделов.П000200027506) * СтрокаТарифа.ФФОМС / 100, 2)
								- ПоказателиРазделов.П000200027604;
			Разность = Макс(ПоказателиРазделов.П000200027605 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200027605);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.5 строки 276 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200027605,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "5", "276", Строка(НомерСтраницы), "", "П000200027605", Отказ);
			КонецЕсли;
			РасчетноеЗначение = Окр(ПоказателиРазделов.П000200027503 * СтрокаТарифа.ФФОМС / 100, 2)
								- Окр((ПоказателиРазделов.П000200027503 - ПоказателиРазделов.П000200027504 - ПоказателиРазделов.П000200027505 - ПоказателиРазделов.П000200027506) * СтрокаТарифа.ФФОМС / 100, 2)
								- ПоказателиРазделов.П000200027604 - ПоказателиРазделов.П000200027605;
			Разность = Макс(ПоказателиРазделов.П000200027606 - РасчетноеЗначение, РасчетноеЗначение - ПоказателиРазделов.П000200027606);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Значение показателя в гр.6 строки 276 (""%1"") и расчетное значение, определенное исходя из облагаемой базы и тарифа (""%2""), различаются более чем на ""%3"" руб.'"), Формат(ПоказателиРазделов.П000200027606,"ЧДЦ=2; ЧН=0.00"), Формат(РасчетноеЗначение,"ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел2", "6", "276", Строка(НомерСтраницы), "", "П000200027606", Отказ);
			КонецЕсли;
		КонецЕсли;					
	КонецЦикла; 

КонецПроцедуры	

Процедура ПроверитьСоответствиеДанныхКомплектаЗаГод(ДанныеРСВ, Ошибки, Отказ)
		
	МассивСсылокСЗВ63 = Новый Массив;
	Для Каждого ПачкаСЗВ63 Из СписокПачекСЗВ6_3 Цикл
		МассивСсылокСЗВ63.Добавить(ПачкаСЗВ63.ПачкаДокументов);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылокСЗВ63", МассивСсылокСЗВ63);
	Запрос.УстановитьПараметр("ТаблицаТарифов",  РегистрыСведений.ТарифыСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов());
	Запрос.УстановитьПараметр("Ссылка", ОписьПачекСЗВ);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ОбщийНалоговыйРежим", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим"));
	Запрос.УстановитьПараметр("ТарифМоряков", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ДляЧленовЭкипажейМорскихСудовПодФлагомРФ"));
	Запрос.УстановитьПараметр("ПредельнаяВеличина", УчетСтраховыхВзносов.ТекущаяПредельнаяВеличинаБазыСтраховыхВзносов(ОтчетныйПериод));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПерсонифицированныйУчет.СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТарифов.ВидТарифа,
	|	ТаблицаТарифов.ПФРНакопительная,
	|	ТаблицаТарифов.Период,
	|	ТаблицаТарифов.ПФР
	|ПОМЕСТИТЬ ВТТаблицаТарифов
	|ИЗ
	|	&ТаблицаТарифов КАК ТаблицаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТарифов.ВидТарифа,
	|	ТаблицаТарифов.ПФРНакопительная,
	|	ТаблицаТарифов.Период,
	|	ТаблицаТарифов.ПФР
	|ПОМЕСТИТЬ ВТТаблицаТарифовСрезПоследних
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТарифов.ВидТарифа КАК ВидТарифа,
	|		МАКСИМУМ(ТаблицаТарифов.Период) КАК Период
	|	ИЗ
	|		ВТТаблицаТарифов КАК ТаблицаТарифов
	|	ГДЕ
	|		ТаблицаТарифов.Период <= &КонецГода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаТарифов.ВидТарифа) КАК ПериодыТарифов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаТарифов КАК ТаблицаТарифов
	|		ПО (ТаблицаТарифов.ВидТарифа = ПериодыТарифов.ВидТарифа)
	|			И (ТаблицаТарифов.Период = ПериодыТарифов.Период)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТарифыСтраховыхВзносовСрезПоследних.ВидТарифа,
	|	ТарифыСтраховыхВзносовСрезПоследних.ПФР,
	|	ТарифыСтраховыхВзносовСрезПоследних.ПФРНакопительная
	|ПОМЕСТИТЬ ВТТарифыСтраховыхВзносов
	|ИЗ
	|	ВТТаблицаТарифовСрезПоследних КАК ТарифыСтраховыхВзносовСрезПоследних
	|ГДЕ
	|	ТарифыСтраховыхВзносовСрезПоследних.ВидТарифа <> &ТарифМоряков
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ТарифМоряков,
	|	ТарифыСтраховыхВзносовСрезПоследних.ПФР,
	|	ТарифыСтраховыхВзносовСрезПоследних.ПФРНакопительная
	|ИЗ
	|	ВТТаблицаТарифовСрезПоследних КАК ТарифыСтраховыхВзносовСрезПоследних
	|ГДЕ
	|	ТарифыСтраховыхВзносовСрезПоследних.ВидТарифа = &ОбщийНалоговыйРежим
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов
	|ПОМЕСТИТЬ ВТФормыСЗВ_6_12
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК ОписьПачекСЗВ_6ПачкиДокументов
	|ГДЕ
	|	ОписьПачекСЗВ_6ПачкиДокументов.Ссылка = &Ссылка
	|	И ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов
	|ПОМЕСТИТЬ ВТКорректирующиеФормыИзТекущегоПериода
	|ИЗ
	|	Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК ОписьПачекСЗВ_6ПачкиДокументов
	|ГДЕ
	|	ОписьПачекСЗВ_6ПачкиДокументов.Ссылка = &Ссылка
	|	И ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|	И ГОД(ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов.КорректируемыйПериод) = &ОтчетныйГод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектыОтчетностиПерсучета.ОписьПачекСЗВ КАК Опись
	|ПОМЕСТИТЬ ВТПредыдущиеОписиАДВ62
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
	|ГДЕ
	|	КомплектыОтчетностиПерсучета.Организация = &Организация
	|	И ГОД(КомплектыОтчетностиПерсучета.ОтчетныйПериод) = &ОтчетныйГод
	|	И КомплектыОтчетностиПерсучета.ОтчетныйПериод < &ОтчетныйПериод
	|	И КомплектыОтчетностиПерсучета.СостояниеКомплекта = ЗНАЧЕНИЕ(Перечисление.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОписьПачекСЗВ_6ПачкиДокументов.ПачкаДокументов
	|ПОМЕСТИТЬ ВТФормыСЗВИзПредыдущихОписей
	|ИЗ
	|	ВТПредыдущиеОписиАДВ62 КАК ПредыдущиеОписиАДВ62
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОписьПачекСЗВ_6.ПачкиДокументов КАК ОписьПачекСЗВ_6ПачкиДокументов
	|		ПО ПредыдущиеОписиАДВ62.Опись = ОписьПачекСЗВ_6ПачкиДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_1.Ссылка КАК ПачкаДокументов
	|ПОМЕСТИТЬ ВТПредыдущиеФормыСЗВ_6_12
	|ИЗ
	|	ВТФормыСЗВИзПредыдущихОписей КАК ФормыСЗВИзПредыдущихОписей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_1 КАК ПачкаДокументовСЗВ_6_1
	|		ПО ФормыСЗВИзПредыдущихОписей.ПачкаДокументов = ПачкаДокументовСЗВ_6_1.Ссылка
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_1.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ)
	|	И (ПачкаДокументовСЗВ_6_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ИЛИ ПачкаДокументовСЗВ_6_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|				И ГОД(ПачкаДокументовСЗВ_6_1.КорректируемыйПериод) = &ОтчетныйГод)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка
	|ИЗ
	|	ВТФормыСЗВИзПредыдущихОписей КАК ФормыСЗВИзПредыдущихОписей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|		ПО ФормыСЗВИзПредыдущихОписей.ПачкаДокументов = РеестрСЗВ_6_2.Ссылка
	|ГДЕ
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ)
	|	И (РеестрСЗВ_6_2.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ИЛИ РеестрСЗВ_6_2.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|				И ГОД(РеестрСЗВ_6_2.КорректируемыйПериод) = &ОтчетныйГод)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФормыСЗВ_6_12.ПачкаДокументов
	|ПОМЕСТИТЬ ВТФормыСЗВ_6_12ЗаГод
	|ИЗ
	|	ВТПредыдущиеФормыСЗВ_6_12 КАК ФормыСЗВ_6_12
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НовыеКорректирующиеФормы.ПачкаДокументов
	|ИЗ
	|	ВТКорректирующиеФормыИзТекущегоПериода КАК НовыеКорректирующиеФормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФормыСЗВ_6_12.ПачкаДокументов
	|ПОМЕСТИТЬ ВТКорректирующиеФормы
	|ИЗ
	|	ВТПредыдущиеФормыСЗВ_6_12 КАК ФормыСЗВ_6_12
	|ГДЕ
	|	ФормыСЗВ_6_12.ПачкаДокументов.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НовыеКорректирующиеФормы.ПачкаДокументов
	|ИЗ
	|	ВТКорректирующиеФормыИзТекущегоПериода КАК НовыеКорректирующиеФормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	МИНИМУМ(СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТТарифыПоКатегориям
	|ИЗ
	|	ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|ГДЕ
	|	&ОтчетныйГод МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеТарифаИВидаЗЛКатегории.ИсходнаяКатегорияЗастрахованныхЛиц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТИсходныеКатегорииЗЛ
	|ИЗ
	|	ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|ГДЕ
	|	&ОтчетныйГод МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество,
	|	Застрахованные.НомерСтроки,
	|	ВЫБОР
	|		КОГДА Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоЛьготныеКатегории,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТФормыСЗВ_6_3
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка В(&МассивСсылокСЗВ63)
	|	И Застрахованные.Ссылка.ОтчетныйПериод = &ОтчетныйГод
	|	И Застрахованные.Ссылка.Организация = &Организация
	|	И Застрахованные.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И НЕ Застрахованные.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Ссылка,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц,
	|	Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная КАК НачисленоВзносов,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество
	|ПОМЕСТИТЬ ВТЗастрахованныеСЗВ_6_12
	|ИЗ
	|	ВТФормыСЗВ_6_12 КАК ФормыСЗВ_6_12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК Застрахованные
	|		ПО ФормыСЗВ_6_12.ПачкаДокументов = Застрахованные.Ссылка
	|ГДЕ
	|	(Застрахованные.НачисленоСтраховая <> 0
	|			ИЛИ Застрахованные.НачисленоНакопительная <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц,
	|	Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество
	|ИЗ
	|	ВТФормыСЗВ_6_12 КАК ФормыСЗВ_6_12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК Застрахованные
	|		ПО ФормыСЗВ_6_12.ПачкаДокументов = Застрахованные.Ссылка
	|ГДЕ
	|	(Застрахованные.НачисленоСтраховая <> 0
	|			ИЛИ Застрахованные.НачисленоНакопительная <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	Застрахованные.Ссылка.КорректируемыйПериод КАК КорректируемыйПериод,
	|	Застрахованные.Ссылка.ОтчетныйПериод КАК ОтчетныйПериод,
	|	Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная КАК НачисленоВзносов,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество
	|ПОМЕСТИТЬ ВТКорректирующиеСведенияЗаГод
	|ИЗ
	|	ВТКорректирующиеФормы КАК КорректирующиеФормы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК Застрахованные
	|		ПО КорректирующиеФормы.ПачкаДокументов = Застрахованные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц,
	|	Застрахованные.Ссылка.КорректируемыйПериод,
	|	Застрахованные.Ссылка.ОтчетныйПериод,
	|	Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество
	|ИЗ
	|	ВТКорректирующиеФормы КАК КорректирующиеФормы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК Застрахованные
	|		ПО КорректирующиеФормы.ПачкаДокументов = Застрахованные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДанныеДокументов.НачисленоВзносов) КАК НачисленоВзносов,
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТЗастрахованныеСЗВ_6_12заГод
	|ИЗ
	|	(ВЫБРАТЬ
	|		Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная КАК НачисленоВзносов,
	|		Застрахованные.Сотрудник КАК Сотрудник,
	|		Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц
	|	ИЗ
	|		ВТФормыСЗВ_6_12ЗаГод КАК ФормыСЗВ_6_12ЗаГод
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК Застрахованные
	|			ПО ФормыСЗВ_6_12ЗаГод.ПачкаДокументов = Застрахованные.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКорректирующиеСведенияЗаГод КАК КорректирующиеСведения
	|			ПО (Застрахованные.Сотрудник = КорректирующиеСведения.Сотрудник)
	|				И (ВЫБОР
	|					КОГДА Застрахованные.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|						ТОГДА Застрахованные.Ссылка.ОтчетныйПериод
	|					ИНАЧЕ Застрахованные.Ссылка.КорректируемыйПериод
	|				КОНЕЦ = КорректирующиеСведения.КорректируемыйПериод)
	|				И (Застрахованные.Ссылка.ОтчетныйПериод < КорректирующиеСведения.ОтчетныйПериод)
	|	ГДЕ
	|		(Застрахованные.НачисленоСтраховая <> 0
	|				ИЛИ Застрахованные.НачисленоНакопительная <> 0)
	|		И КорректирующиеСведения.Сотрудник ЕСТЬ NULL 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная,
	|		Застрахованные.Сотрудник,
	|		Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц
	|	ИЗ
	|		ВТФормыСЗВ_6_12ЗаГод КАК ФормыСЗВ_6_12ЗаГод
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК Застрахованные
	|			ПО ФормыСЗВ_6_12ЗаГод.ПачкаДокументов = Застрахованные.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКорректирующиеСведенияЗаГод КАК КорректирующиеСведения
	|			ПО (Застрахованные.Сотрудник = КорректирующиеСведения.Сотрудник)
	|				И (ВЫБОР
	|					КОГДА Застрахованные.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|						ТОГДА Застрахованные.Ссылка.ОтчетныйПериод
	|					ИНАЧЕ Застрахованные.Ссылка.КорректируемыйПериод
	|				КОНЕЦ = КорректирующиеСведения.КорректируемыйПериод)
	|				И (Застрахованные.Ссылка.ОтчетныйПериод < КорректирующиеСведения.ОтчетныйПериод)
	|	ГДЕ
	|		(Застрахованные.НачисленоСтраховая <> 0
	|				ИЛИ Застрахованные.НачисленоНакопительная <> 0)
	|		И КорректирующиеСведения.Сотрудник ЕСТЬ NULL 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗастрахованныеПоследнегоКвартала.НачисленоВзносов,
	|		ЗастрахованныеПоследнегоКвартала.Сотрудник,
	|		ЗастрахованныеПоследнегоКвартала.КатегорияЗастрахованныхЛиц
	|	ИЗ
	|		ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеПоследнегоКвартала) КАК ДанныеДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Сотрудник,
	|	МесяцыГода.Месяц,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.ОблагаетсяВзносами, 0)) > &ПредельнаяВеличина
	|			ТОГДА &ПредельнаяВеличина
	|		ИНАЧЕ СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.ОблагаетсяВзносами, 0))
	|	КОНЕЦ КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТОблагаемаяБазаНарастающимИтогом
	|ИЗ
	|	ВТФормыСЗВ_6_3 КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			1 КАК Месяц
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			2
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			3
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			4
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			5
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			6
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			7
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			8
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			9
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			10
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			11
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			12) КАК МесяцыГода
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК ЗаработокПоМесяцам
	|		ПО Застрахованные.Ссылка = ЗаработокПоМесяцам.Ссылка
	|			И Застрахованные.Сотрудник = ЗаработокПоМесяцам.Сотрудник
	|			И (ЗаработокПоМесяцам.Месяц <= МесяцыГода.Месяц)
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Сотрудник,
	|	МесяцыГода.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБазаНарастающимИтогом.Сотрудник,
	|	ОблагаемаяБазаНарастающимИтогом.Месяц,
	|	ОблагаемаяБазаНарастающимИтогом.ОблагаетсяВзносами - ЕСТЬNULL(ОблагаемаяБазаПредыдущегоМесяца.ОблагаетсяВзносами, 0) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТОблагаемаяБазаПомесячноСУчетомПредела
	|ИЗ
	|	ВТОблагаемаяБазаНарастающимИтогом КАК ОблагаемаяБазаНарастающимИтогом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОблагаемаяБазаНарастающимИтогом КАК ОблагаемаяБазаПредыдущегоМесяца
	|		ПО ОблагаемаяБазаНарастающимИтогом.Сотрудник = ОблагаемаяБазаПредыдущегоМесяца.Сотрудник
	|			И (ОблагаемаяБазаНарастающимИтогом.Месяц = ОблагаемаяБазаПредыдущегоМесяца.Месяц + 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Сотрудник,
	|	ЗаработокПоМесяцам.Месяц,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	Застрахованные.ЭтоЛьготныеКатегории,
	|	СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.ОблагаетсяВзносами, 0)) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТОблагаетсяВзносамиПоКатегориямИМесяцам
	|ИЗ
	|	ВТФормыСЗВ_6_3 КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК ЗаработокПоМесяцам
	|		ПО Застрахованные.Ссылка = ЗаработокПоМесяцам.Ссылка
	|			И Застрахованные.Сотрудник = ЗаработокПоМесяцам.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	Застрахованные.ЭтоЛьготныеКатегории,
	|	ЗаработокПоМесяцам.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаетсяВзносамиПоКатегориямИМесяцам.Сотрудник,
	|	СУММА(ОблагаетсяВзносамиПоКатегориямИМесяцам.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	ОблагаетсяВзносамиПоКатегориямИМесяцам.Месяц
	|ПОМЕСТИТЬ ВТОблагаетсяВзносамиПоЛьготнымКатегориямИМесяцам
	|ИЗ
	|	ВТОблагаетсяВзносамиПоКатегориямИМесяцам КАК ОблагаетсяВзносамиПоКатегориямИМесяцам
	|ГДЕ
	|	ОблагаетсяВзносамиПоКатегориямИМесяцам.ЭтоЛьготныеКатегории
	|
	|СГРУППИРОВАТЬ ПО
	|	ОблагаетсяВзносамиПоКатегориямИМесяцам.Сотрудник,
	|	ОблагаетсяВзносамиПоКатегориямИМесяцам.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Сотрудник,
	|	Застрахованные.Месяц,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	ВЫБОР
	|		КОГДА Застрахованные.ЭтоЛьготныеКатегории
	|			ТОГДА Застрахованные.ОблагаетсяВзносами
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Застрахованные.ОблагаетсяВзносами <= ЕСТЬNULL(ОблагаемаяБазаПомесячноСУчетомПредела.ОблагаетсяВзносами, 0) - ЕСТЬNULL(ОблагаетсяВзносамиПоЛьготнымКатегориямИМесяцам.ОблагаетсяВзносами, 0)
	|					ТОГДА Застрахованные.ОблагаетсяВзносами
	|				ИНАЧЕ ЕСТЬNULL(ОблагаемаяБазаПомесячноСУчетомПредела.ОблагаетсяВзносами, 0) - ЕСТЬNULL(ОблагаетсяВзносамиПоЛьготнымКатегориямИМесяцам.ОблагаетсяВзносами, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТБазаДляРасчетаВзносовПоСЗВ_6_3
	|ИЗ
	|	ВТОблагаетсяВзносамиПоКатегориямИМесяцам КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОблагаемаяБазаПомесячноСУчетомПредела КАК ОблагаемаяБазаПомесячноСУчетомПредела
	|		ПО Застрахованные.Сотрудник = ОблагаемаяБазаПомесячноСУчетомПредела.Сотрудник
	|			И Застрахованные.Месяц = ОблагаемаяБазаПомесячноСУчетомПредела.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОблагаетсяВзносамиПоЛьготнымКатегориямИМесяцам КАК ОблагаетсяВзносамиПоЛьготнымКатегориямИМесяцам
	|		ПО Застрахованные.Сотрудник = ОблагаетсяВзносамиПоЛьготнымКатегориямИМесяцам.Сотрудник
	|			И Застрахованные.Месяц = ОблагаетсяВзносамиПоЛьготнымКатегориямИМесяцам.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	СУММА(ЕСТЬNULL(Застрахованные.ОблагаетсяВзносами, 0)) * ТарифыСтраховыхВзносов.ПФР / 100 КАК ВзносовКНачислению
	|ПОМЕСТИТЬ ВТВзносыПоЗаработкуСЗВ_6_3
	|ИЗ
	|	ВТБазаДляРасчетаВзносовПоСЗВ_6_3 КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифыПоКатегориям КАК ТарифПоКатегории
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифыСтраховыхВзносов КАК ТарифыСтраховыхВзносов
	|			ПО ТарифПоКатегории.ВидТарифаСтраховыхВзносов = ТарифыСтраховыхВзносов.ВидТарифа
	|		ПО Застрахованные.КатегорияЗастрахованныхЛиц = ТарифПоКатегории.КатегорияЗастрахованныхЛиц
	|ГДЕ
	|	Застрахованные.Месяц В (10, 11, 12)
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	ТарифыСтраховыхВзносов.ПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	СУММА(ЕСТЬNULL(Застрахованные.ОблагаетсяВзносами, 0)) * ТарифыСтраховыхВзносов.ПФР / 100 КАК ВзносовКНачислению
	|ПОМЕСТИТЬ ВТВзносыПоЗаработкуСЗВ_6_3заГод
	|ИЗ
	|	ВТБазаДляРасчетаВзносовПоСЗВ_6_3 КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифыПоКатегориям КАК ТарифПоКатегории
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифыСтраховыхВзносов КАК ТарифыСтраховыхВзносов
	|			ПО ТарифПоКатегории.ВидТарифаСтраховыхВзносов = ТарифыСтраховыхВзносов.ВидТарифа
	|		ПО Застрахованные.КатегорияЗастрахованныхЛиц = ТарифПоКатегории.КатегорияЗастрахованныхЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	ТарифыСтраховыхВзносов.ПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФормыСЗВ_6_3.Ссылка,
	|	ФормыСЗВ_6_3.Ссылка.ТипСведенийСЗВ КАК ТипСведенийСЗВ,
	|	ФормыСЗВ_6_3.Ссылка.ОтчетныйПериод КАК ОтчетныйПериод,
	|	ФормыСЗВ_6_3.Ссылка.НомерПачки КАК НомерПачки
	|ИЗ
	|	ВТФормыСЗВ_6_3 КАК ФормыСЗВ_6_3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ИсходныеКатегорииЗЛ.ИсходнаяКатегорияЗастрахованныхЛиц КАК ИсходнаяКатегорияЗастрахованныхЛиц,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Ссылка.НомерПачки КАК НомерПачки,
	|	СУММА(СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	Застрахованные.Фамилия + "" "" + Застрахованные.Имя + "" "" + Застрахованные.Отчество КАК ФИОЗастрахованного,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Ссылка,
	|	СведенияОЗаработке.НомерСтроки КАК НомерСтрокиЗаработок
	|ИЗ
	|	ВТФормыСЗВ_6_3 КАК Застрахованные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК СведенияОЗаработке
	|		ПО Застрахованные.Ссылка = СведенияОЗаработке.Ссылка
	|			И Застрахованные.Сотрудник = СведенияОЗаработке.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеКатегорииЗЛ КАК ИсходныеКатегорииЗЛ
	|		ПО Застрахованные.КатегорияЗастрахованныхЛиц = ИсходныеКатегорииЗЛ.КатегорияЗастрахованныхЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	ИсходныеКатегорииЗЛ.ИсходнаяКатегорияЗастрахованныхЛиц,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия + "" "" + Застрахованные.Имя + "" "" + Застрахованные.Отчество,
	|	Застрахованные.Ссылка.НомерПачки,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Ссылка,
	|	СведенияОЗаработке.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	КатегорияЗастрахованныхЛиц,
	|	Застрахованные.Ссылка,
	|	ФИОЗастрахованного
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеСЗВ_6_12.Сотрудник,
	|	ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ВЫБОР
	|		КОГДА ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению < 0
	|			ТОГДА Заработок.ВзносовКНачислению - ЗастрахованныеСЗВ_6_12.НачисленоВзносов
	|		ИНАЧЕ ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению
	|	КОНЕЦ КАК РасхождениеВоВзносах,
	|	Заработок.ВзносовКНачислению,
	|	ЗастрахованныеСЗВ_6_12.НачисленоВзносов,
	|	ЕСТЬNULL(Заработок.Сотрудник.Наименование, ЗастрахованныеСЗВ_6_12.Сотрудник.Наименование) КАК ФИОЗастрахованного,
	|	ФормыСЗВ_6_3.Ссылка КАК СЗВ63Ссылка,
	|	ФормыСЗВ_6_3.НомерСтроки
	|ИЗ
	|	ВТЗастрахованныеСЗВ_6_12заГод КАК ЗастрахованныеСЗВ_6_12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносыПоЗаработкуСЗВ_6_3заГод КАК Заработок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФормыСЗВ_6_3 КАК ФормыСЗВ_6_3
	|			ПО Заработок.Сотрудник = ФормыСЗВ_6_3.Сотрудник
	|				И Заработок.КатегорияЗастрахованныхЛиц = ФормыСЗВ_6_3.КатегорияЗастрахованныхЛиц
	|		ПО ЗастрахованныеСЗВ_6_12.Сотрудник = Заработок.Сотрудник
	|			И ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц = Заработок.КатегорияЗастрахованныхЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФИОЗастрахованного,
	|	КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка,
	|	ВЫБОР
	|		КОГДА Застрахованные.КатегорияЗастрахованныхЛиц = ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ООИ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДоходыИнвалидов,
	|	ВЫБОР
	|		КОГДА Застрахованные.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоЛьготныеКатегории,
	|	СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.ОблагаетсяВзносами, 0)) КАК ОблагаемаяБаза,
	|	СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.Заработок, 0)) КАК Заработок
	|ИЗ
	|	ВТФормыСЗВ_6_3 КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК ЗаработокПоМесяцам
	|		ПО Застрахованные.Ссылка = ЗаработокПоМесяцам.Ссылка
	|			И Застрахованные.Сотрудник = ЗаработокПоМесяцам.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Застрахованные.КатегорияЗастрахованныхЛиц = ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ООИ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Застрахованные.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Застрахованные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеСЗВ_6_12.Сотрудник,
	|	ЗастрахованныеСЗВ_6_12.Ссылка,
	|	ЗастрахованныеСЗВ_6_12.Ссылка.НомерПачки КАК НомерПачкиСЗВ6_12,
	|	ЗастрахованныеСЗВ_6_12.НомерСтроки КАК НомерСтрокиСЗВ6_12,
	|	ВЫБОР
	|		КОГДА ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению < 0
	|			ТОГДА Заработок.ВзносовКНачислению - ЗастрахованныеСЗВ_6_12.НачисленоВзносов
	|		ИНАЧЕ ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению
	|	КОНЕЦ КАК РасхождениеВоВзносах,
	|	Заработок.ВзносовКНачислению,
	|	ЗастрахованныеСЗВ_6_12.НачисленоВзносов
	|ИЗ
	|	ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеСЗВ_6_12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносыПоЗаработкуСЗВ_6_3 КАК Заработок
	|		ПО ЗастрахованныеСЗВ_6_12.Сотрудник = Заработок.Сотрудник
	|			И ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц = Заработок.КатегорияЗастрахованныхЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПачкиСЗВ6_12,
	|	НомерСтрокиСЗВ6_12
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеСЗВ_6_12.Сотрудник,
	|	ЗастрахованныеСЗВ_6_12.Ссылка КАК СЗВ61Ссылка,
	|	ЗастрахованныеСЗВ_6_12.Ссылка.НомерПачки КАК НомерПачкиСЗВ6_12,
	|	ЗастрахованныеСЗВ_6_12.НомерСтроки КАК НомерСтрокиСЗВ6_12,
	|	ФормыСЗВ_6_3.Ссылка.НомерПачки КАК НомерПачкиСЗВ_6_3,
	|	ВЫБОР
	|		КОГДА ФормыСЗВ_6_3.Ссылка ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтсутствуетФормаСЗВ63,
	|	ВЫБОР
	|		КОГДА ЗастрахованныеСЗВ_6_12.СтраховойНомерПФР <> ФормыСЗВ_6_3.СтраховойНомерПФР
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеСовпадаетСНИЛС,
	|	ВЫБОР
	|		КОГДА ЗастрахованныеСЗВ_6_12.Имя <> ФормыСЗВ_6_3.Имя
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеСовпадаетИмя,
	|	ВЫБОР
	|		КОГДА ЗастрахованныеСЗВ_6_12.Отчество <> ФормыСЗВ_6_3.Отчество
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеСовпадаетОтчество,
	|	ВЫБОР
	|		КОГДА ЗастрахованныеСЗВ_6_12.Фамилия <> ФормыСЗВ_6_3.Фамилия
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеСовпадаетФамилия,
	|	ЗастрахованныеСЗВ_6_12.Фамилия + "" "" + ЗастрахованныеСЗВ_6_12.Имя + "" "" + ЗастрахованныеСЗВ_6_12.Отчество КАК ФИОЗастрахованного,
	|	ФормыСЗВ_6_3.Ссылка КАК СЗВ63Ссылка,
	|	ФормыСЗВ_6_3.НомерСтроки КАК НомерСтрокиСЗВ63
	|ИЗ
	|	ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеСЗВ_6_12
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФормыСЗВ_6_3 КАК ФормыСЗВ_6_3
	|		ПО ЗастрахованныеСЗВ_6_12.Сотрудник = ФормыСЗВ_6_3.Сотрудник
	|			И ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц = ФормыСЗВ_6_3.КатегорияЗастрахованныхЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПачкиСЗВ6_12,
	|	НомерСтрокиСЗВ6_12,
	|	НомерПачкиСЗВ_6_3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ЗастрахованныеСЗВ_6_12.Количество, 0) КАК КоличествоЗастрахованныхСЗВ_6_12,
	|	ЕСТЬNULL(ФормыСЗВ_6_3.Количество, 0) КАК КоличествоФормСЗВ_6_3
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК Поле) КАК СтрокаЗапроса
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество
	|		ИЗ
	|			ВТФормыСЗВ_6_3 КАК ФормыСЗВ_6_3) КАК ФормыСЗВ_6_3
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество
	|		ИЗ
	|			ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеСЗВ_6_12) КАК ЗастрахованныеСЗВ_6_12
	|		ПО (ИСТИНА)";
	
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоРезультатов = Результаты.Количество();
	
	// Сверка отдельных реквизитов документов персонифицированного учета «Сведений о сумме выплат и иных вознаграждений,
	// начисляемых плательщиками страховых взносов - страхователями в пользу физического лица» (формы СЗВ-6-3, АДВ-6-4) и
	// Расчета по начисленным и уплаченным страховым взносам (форма РСВ-1).
	Если ДанныеРСВ <> Неопределено И ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде И ДанныеРСВ.ОтчетныйПериодРСВ1 = ОтчетныйПериод Тогда
		
		ОбъектОбложенияПоФормамСЗВ63 = 0;
		ОбъектОбложенияПоФормамСЗВ63Льготный = 0;
		ОблагаемаяБазаПоФормамСЗВ63 = 0;
		ОблагаемаяБазаПоФормамСЗВ63Льготная = 0;
		ВыборкаСверкиДоходов = Результаты[ВсегоРезультатов - 4].Выбрать();
		Пока ВыборкаСверкиДоходов.Следующий() Цикл
			Если ВыборкаСверкиДоходов.ЭтоЛьготныеКатегории Тогда
				ОбъектОбложенияПоФормамСЗВ63Льготный = ОбъектОбложенияПоФормамСЗВ63Льготный + ВыборкаСверкиДоходов.Заработок;
				ОблагаемаяБазаПоФормамСЗВ63Льготная = ОблагаемаяБазаПоФормамСЗВ63Льготная + ВыборкаСверкиДоходов.ОблагаемаяБаза;
			Иначе
				ОбъектОбложенияПоФормамСЗВ63 = ОбъектОбложенияПоФормамСЗВ63 + ВыборкаСверкиДоходов.Заработок;
				ОблагаемаяБазаПоФормамСЗВ63 = ОблагаемаяБазаПоФормамСЗВ63 + ВыборкаСверкиДоходов.ОблагаемаяБаза;
			КонецЕсли;
		КонецЦикла;
		
		// Правило 1. По всем формам СЗВ-6-3 (при их наличии) по всем категориям ЗЛ  значение итоговой строки показателя.
		// «Сумма выплат и иных вознаграждений, начисленных в пользу физического лица»,  должно быть больше или равно сумме
		// показателей строк 201, 202, 203 формы РСВ-1 за календарный год, уменьшенной на показатели строк 211, 212, 213,
		// 231, 232 и 233 формы РСВ-1.
		Если ОбъектОбложенияПоФормамСЗВ63 < ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 Тогда
			ТекстСообщения = НСтр("ru = 'Общая сумма заработка, указанная в формах СЗВ-6-3 с категориями «НР», «ВЖНР» и «ВПНР», меньше облагаемых взносами в ПФР сумм, указанных в разделе 2 Расчета РСВ-1 с кодами тарифа 01, 52 и 53.'"); 
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "УменьшенныйОбъектОбложенияРСВ1");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "Заработок"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// Значение итоговой строки показателя «Из них на которые начислены страховые взносы на обязательное пенсионное
		// страхование» должно равняться сумме значений строк «240» и «241» формы РСВ-1.
		Если ОблагаемаяБазаПоФормамСЗВ63 <> ДанныеРСВ.ОблагаемаяБазаРСВ1 Тогда
			ТекстСообщения = НСтр("ru = 'Общая сумма облагаемой базы, указанная в формах СЗВ-6-3 с категориями «НР», «ВЖНР» и «ВПНР», и сумма показателей колонки ""Всего с начала расчетного периода"" по строкам 240 и 241 раздела 2 Расчета РСВ-1 с кодами тарифа 01, 52 и 53 не совпадают.'");
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "ОблагаемаяБазаРСВ1");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "ОблагаетсяВзносами"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// Правило 1. По всем формам СЗВ-6-3 (при их наличии) по всем категориям ЗЛ  значение итоговой строки показателя.
		// «Сумма выплат и иных вознаграждений, начисленных в пользу физического лица»,  должно быть больше или равно сумме
		// показателей строк 201, 202, 203 формы РСВ-1 за календарный год, уменьшенной на показатели строк 211, 212, 213,
		// 231, 232 и 233 формы РСВ-1.
		Если ОбъектОбложенияПоФормамСЗВ63Льготный < ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный Тогда
			ТекстСообщения = НСтр("ru = 'Общая сумма заработка, указанная в формах СЗВ-6-3 по всем категориям, кроме «НР», «ВЖНР» и «ВПНР», меньше облагаемых взносами в ПФР сумм, указанных в разделе 2 Расчета РСВ-1 по всем кодам тарифа, кроме 01, 52 и 53.'"); 
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "УменьшенныйОбъектОбложенияРСВ1Льготный");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "ЗаработокПоЛьготнымКатегориям"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// Значение итоговой строки показателя «Из них на которые начислены страховые взносы на обязательное пенсионное
		// страхование» должно равняться сумме значений строк «240» и «241» формы РСВ-1.
		Если ОблагаемаяБазаПоФормамСЗВ63Льготная <> ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная Тогда
			ТекстСообщения = НСтр("ru = 'Общая сумма облагаемой базы, указанная в формах СЗВ-6-3 по всем категориям, кроме «НР», «ВЖНР» и «ВПНР», и сумма показателей колонки ""Всего с начала расчетного периода"" по строкам 240 и 241 раздела 2 Расчета РСВ-1 по всем кодам тарифа, кроме 01, 52 и 53, не совпадают.'");
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "ОблагаемаяБазаРСВ1Льготная");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "ОблагаетсяВзносамиПоЛьготнымКатегориям"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// Правило 2. По всем формам СЗВ-6-3 по всем категориям ЗЛ сумма значений итоговых строк в графе «Сумма выплат и иных
		// вознаграждений, начисленных в пользу физического лица» должна быть равна сумме значений итоговых строк в графе «Из
		// них на которые начислены страховые взносы на обязательное пенсионное страхование» при условии, что показатели
		// строки «211», «212», «213», «221», «222», «223», «231», «232» и «233»  формы РСВ-1 за календарный год равны нулю.
		ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам = Результаты[ВсегоРезультатов - 6].Выбрать();
		Пока ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.Следующий() Цикл
			
			ПроверяемыйПоказатель = ДанныеРСВ.ПоказателиНеоблагаемыхДоходов[ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.ИсходнаяКатегорияЗастрахованныхЛиц];
			
			Если ПроверяемыйПоказатель = 0 И ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.Заработок <> ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.ОблагаетсяВзносами Тогда
								
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Для застрахованного %1, указанного в строке %2  пачки СЗВ-6-3 № %3: общая сумма заработка и общая сумма облагаемой базы, должны быть равны'"), 
																				СокрЛП(ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.ФИОЗастрахованного), 
																				ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.НомерСтроки, 
																				ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.НомерПачки);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(Ошибки, 
																			ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.Ссылка, 
																			ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.НомерСтроки, 
																			ВыборкаСведенияОЗаработкеСЗВ63ПоФизЛицам.НомерСтрокиЗаработок,
																			ТекстСообщения, 
																			Отказ);
			КонецЕсли;	
			
		КонецЦикла;	
		
		// Правило 3. Сумма показателей строк «201», «202», «203» формы РСВ-1 должна быть равна сумме значений итоговой
		// строки в графе «Сумма выплат и иных вознаграждений, начисленных в пользу физического лица» по всем формам СЗВ-6-3
		// по всем категориям застрахованных лиц.
		Если ОбъектОбложенияПоФормамСЗВ63 <> ДанныеРСВ.ОбъектОбложенияРСВ1 Тогда 
			ТекстСообщения =   НСтр("ru = 'Сумма показателей строк «201», «202», «203» формы РСВ-1 должна быть равна сумме значений итоговых строк в графе «Сумма выплат и иных вознаграждений, начисленных в пользу физического лица» по всем формам СЗВ-6-3.
                                                             |Невыполнение условия допускается при наличии выплат в пользу наемных работников, за которых не представляются формы СЗВ-6-3: выплаты в пользу военнослужащих, временно пребывающих на территории РФ, предусмотренные п.п. 14) и 15) части 2 статьи 9 Федерального закона от 24 июля 2009 года № 212-ФЗ; выплаты в пользу прокуроров, следователей, федеральных или мировых судей, предусмотренные п.1) части 3 статьи 9 указанного Федерального закона, в том числе  с сумм, превышающих предельную базу для начисления страховых взносов. В остальных случаях невыполнение условия является ошибкой и подлежит исправлению.'");
															 
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "ОбъектОбложенияРСВ1");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "Заработок"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
				
	КонецЕсли;
		
	// Сверка «Сведений о сумме выплат и иных вознаграждений, начисляемых плательщиками страховых взносов - страхователями
	// в пользу физического лица» (по форме СЗВ-6-3, АДВ-6-4) со сведениями персонифицированного учета о стаже и
	// начисленным и уплаченным страховым взносам (по форме АДВ-6-2, СЗВ-6-2, СЗВ-6-1).
		
	ВыборкаПоСЗВ63 = Результаты[ВсегоРезультатов - 7].Выбрать(); 
	Пока ВыборкаПоСЗВ63.Следующий() Цикл
		Если ВыборкаПоСЗВ63.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ И ВыборкаПоСЗВ63.ОтчетныйПериод <> Год(ОтчетныйПериод) Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Исходная пачка СЗВ-6-3 № %1 содержит данные за другой отчетный период.'")
																				,ВыборкаПоСЗВ63.НомерПачки);
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, ВыборкаПоСЗВ63.Ссылка, ТекстСообщения, "ОтчетныйПериод", Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаСверкиКоличества = Результаты[ВсегоРезультатов - 1].Выбрать();
	ВыборкаСверкиКоличества.Следующий();
	Если ВыборкаСверкиКоличества.КоличествоФормСЗВ_6_3 < ВыборкаСверкиКоличества.КоличествоЗастрахованныхСЗВ_6_12 Тогда
		РазделыИтоговСОшибкой = Новый Массив;
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "КоличествоИсходныхФорм");
		
		ТекстСообщения = НСтр("ru = 'Количество исходных форм СЗВ-6-3 меньше количества исходных форм СЗВ-6-1(2), содержащих ненулевые начисленные взносы.'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
	КонецЕсли;

	ВыборкаСверкиЗастрахованных = Результаты[ВсегоРезультатов - 2].Выбрать();
	ВыборкаСверкиВзносов = Результаты[ВсегоРезультатов - 3].Выбрать();
	СтруктураПоиска = Новый Структура("Ссылка, НомерСтрокиСЗВ6_12");
	Пока ВыборкаСверкиЗастрахованных.Следующий() Цикл
				
		НачалоСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Для застрахованного %1, указанного в строке %2 пачки СЗВ-6-1(2) № %3:'")
																			,СокрЛП(ВыборкаСверкиЗастрахованных.ФИОЗастрахованного)
																			,ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ6_12
																			,ВыборкаСверкиЗастрахованных.НомерПачкиСЗВ6_12);  
		ИсточникиСверкиСпискаСотрудников = Новый Массив;
			
		ПерсонифицированныйУчетКлиентСервер.ДобавитьИсточникСверкиСпискаСотрудников(ИсточникиСверкиСпискаСотрудников
																				,ВыборкаСверкиЗастрахованных.СЗВ61Ссылка
																				,ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ6_12);
																	
		Если ВыборкаСверкиЗастрахованных.ОтсутствуетФормаСЗВ63 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 отсутствуют формы СЗВ-6-3.'"), НачалоСообщения);	
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиСпискаСотрудниковКомплекта(Ошибки
																						,ИсточникиСверкиСпискаСотрудников
																						,ТекстСообщения 
																						,
																						,Отказ);			
			
		Иначе 
																						
			ПерсонифицированныйУчетКлиентСервер.ДобавитьИсточникСверкиСпискаСотрудников(ИсточникиСверкиСпискаСотрудников
																				,ВыборкаСверкиЗастрахованных.СЗВ63Ссылка
																				,ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ63);
																				
			НачалоСообщенияНесовпадения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в пачке СЗВ-6-3 № %2 не совпадает'"), НачалоСообщения, ВыборкаСверкиЗастрахованных.НомерПачкиСЗВ_6_3); 
			Если ВыборкаСверкиЗастрахованных.НеСовпадаетСНИЛС Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 СНИЛС.'"), НачалоСообщенияНесовпадения);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиСпискаСотрудниковКомплекта(Ошибки
																						,ИсточникиСверкиСпискаСотрудников
																						,ТекстСообщения 
																						,"СтраховойНомерПФР"
																						,Отказ);			
			КонецЕсли;
			Если ВыборкаСверкиЗастрахованных.НеСовпадаетФамилия Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 фамилия.'"), НачалоСообщенияНесовпадения);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиСпискаСотрудниковКомплекта(Ошибки
																						,ИсточникиСверкиСпискаСотрудников
																						,ТекстСообщения 
																						,"Фамилия"
																						,Отказ);			
			КонецЕсли;
			Если ВыборкаСверкиЗастрахованных.НеСовпадаетИмя Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '% 1имя.'"), НачалоСообщенияНесовпадения);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиСпискаСотрудниковКомплекта(Ошибки
																						,ИсточникиСверкиСпискаСотрудников
																						,ТекстСообщения 
																						,"Имя"
																						,Отказ);			
			КонецЕсли;
			Если ВыборкаСверкиЗастрахованных.НеСовпадаетОтчество Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 отчество.'"), НачалоСообщенияНесовпадения);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиСпискаСотрудниковКомплекта(Ошибки
																						,ИсточникиСверкиСпискаСотрудников
																						,ТекстСообщения 
																						,"Отчество"
																						,Отказ);			
			КонецЕсли;
			
			Если СтруктураПоиска.Ссылка <> ВыборкаСверкиЗастрахованных.СЗВ61Ссылка Или СтруктураПоиска.НомерСтрокиСЗВ6_12 <> ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ6_12 Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаСверкиЗастрахованных);
				СтруктураПоиска.Ссылка = ВыборкаСверкиЗастрахованных.СЗВ61Ссылка;
				// Сверка начисленных взносов за текущий отчетный период.
				ВыборкаСверкиВзносов.Сбросить();
				Если ВыборкаСверкиВзносов.НайтиСледующий(СтруктураПоиска) Тогда
					Если ВыборкаСверкиВзносов.РасхождениеВоВзносах > 0.03 Тогда						
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 сумма начисленных взносов, указанная в форме СЗВ-6-1,2 (%2), отличается от суммы взносов, исчисленной по всем формам СЗВ-6-3 (%3), более чем на 3 копейки - величины, допустимой правилами проверки сведений персонифицированного учета.'"), НачалоСообщения, Формат(ВыборкаСверкиВзносов.НачисленоВзносов,"ЧДЦ=2; ЧН=0; ЧГ=0"), Формат(ВыборкаСверкиВзносов.ВзносовКНачислению,"ЧДЦ=2; ЧН=0.00; ЧГ=0"));
						
						ИсточникиСверкиСпискаСотрудников = Новый Массив;
			
						ПерсонифицированныйУчетКлиентСервер.ДобавитьИсточникСверкиСпискаСотрудников(ИсточникиСверкиСпискаСотрудников
																								,ВыборкаСверкиЗастрахованных.СЗВ61Ссылка
																								,ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ6_12);
																								
						ПерсонифицированныйУчетКлиентСервер.ДобавитьИсточникСверкиСпискаСотрудников(ИсточникиСверкиСпискаСотрудников
																								,ВыборкаСверкиЗастрахованных.СЗВ63Ссылка
																								,ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ63);

						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиСпискаСотрудниковКомплекта(Ошибки
																						,ИсточникиСверкиСпискаСотрудников
																						,ТекстСообщения 
																						,
																						,Отказ);			

					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	// Сверка начисленных взносов за год в целом.
	ВыборкаСверкиВзносовЗаГод = Результаты[ВсегоРезультатов - 5].Выбрать();
	Пока ВыборкаСверкиВзносовЗаГод.Следующий() Цикл
		Если ВыборкаСверкиВзносовЗаГод.РасхождениеВоВзносах > 0.03 Тогда
						
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Для застрахованного %1: сумма начисленных взносов, указанная в формах СЗВ-6-1,2 текущего года по категории ЗЛ %2 (%3), отличается от суммы взносов, исчисленной по всем формам СЗВ-6-3 этой же категории (%4), более чем на 3 копейки - величины, допустимой правилами проверки сведений персонифицированного учета.'"), 
																				СокрЛП(ВыборкаСверкиВзносовЗаГод.ФИОЗастрахованного), 
																				ВыборкаСверкиВзносовЗаГод.КатегорияЗастрахованныхЛиц, 
																				Формат(ВыборкаСверкиВзносовЗаГод.НачисленоВзносов,"ЧДЦ=2; ЧН=0.00; ЧГ=0"), 
																				Формат(ВыборкаСверкиВзносовЗаГод.ВзносовКНачислению,"ЧДЦ=2; ЧН=0.00; ЧГ=0"));   
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработке(Ошибки, 
																		ВыборкаСверкиВзносовЗаГод.СЗВ63Ссылка, 
																		ВыборкаСверкиВзносовЗаГод.НомерСтроки, 
																		ТекстСообщения, 
																		Отказ);
						
		КонецЕсли;
	КонецЦикла;
			
КонецПроцедуры	

Процедура ПроверитьСоответствиеДанныхПачекДаннымРСВЗа2012(ДанныеРСВ, Ошибки, Отказ = Ложь)
	
	Если ЗначениеЗаполнено(РСВ_1) Тогда
		Отчет = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(РСВ_1);
	Иначе
		Отчет = "";
	КонецЕсли;	
	
	ЕстьОшибкиАДВ62_РСВ1 = Ложь;
	Если ДанныеРСВ <> Неопределено И ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде И ДанныеРСВ.ОтчетныйПериодРСВ1 <> ОтчетныйПериод Тогда
		ТекстСообщения = НСтр("ru = 'Период Расчета РСВ-1 не соответствует отчетному периоду Описи АДВ-6-2'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Титульный", , , , , "Период2", Отказ);  
			
	ИначеЕсли ДанныеРСВ <> Неопределено И ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде Тогда	
		СоответствиеКатегорий = СоответствиеКатегорий();
		
		ДанныеАДВ62 = СводныеДанныеПоДокументамКомплекта();
		                     
		ДопустимоеРасхождение = 0.03 * ДанныеРСВ.КоличествоЗастрахованных;
		СообщениеОРасхожденииУжеВыводилось = Ложь;
		
		// Значение показателя  «Начислено» в графе «Сумма страховых взносов на страховую часть  трудовой пенсии», строки.
		// «Итого по страхователю»  раздела «Сведения об исходных сведениях» Описи сведений АДВ-6-2, уменьшенное на значения
		// соответствующих показателей строки с кодом категории застрахованного лица «ЧЭС», «ВЖЭС» и «ВПЭС», должно быть
		// равно (в пределах значения равного 1 копейка, умноженная на количество застрахованных лиц, умноженное на 3)
		// значению показателя  строки 114   «Итого подлежит уплате за последние 3 месяца (сумма строк 111+112+113)» » по
		// графе 3  Раздела 1 Расчета по начисленным и уплаченным страховым взносам РСВ-1 уменьшенного на сумму значений граф
		// 4, 5 и 6 строки 252 раздела 2 Расчета по начисленным и уплаченным страховым взносам (РСВ-1).
		Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаСтраховую - (ДанныеАДВ62.НачисленоСтраховая - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаСтраховую), ДанныеАДВ62.НачисленоСтраховая - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаСтраховую - ДанныеРСВ.НачисленоРСВ1НаСтраховую);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на страховую часть пенсии в Расчете РСВ-1 (%1) и Описи АДВ-6-2 (%2) больше ""%3 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"), Формат(ДанныеРСВ.НачисленоРСВ1НаСтраховую, "ЧДЦ=2; ЧН=0.00"), Формат(ДанныеАДВ62.НачисленоСтраховая - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаСтраховую, "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);
			
			РазделыИтоговСверки = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "НачисленоСтраховая");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "НачисленоСтраховая");

			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
		КонецЕсли;
		Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаНакопительную - (ДанныеАДВ62.НачисленоНакопительная - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаНакопительную), ДанныеАДВ62.НачисленоНакопительная - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаНакопительную - ДанныеРСВ.НачисленоРСВ1НаНакопительную);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на накопительную часть пенсии в Расчете РСВ-1 (%1) и Описи АДВ-6-2 (%2) больше ""%3 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"), Формат(ДанныеРСВ.НачисленоРСВ1НаНакопительную, "ЧДЦ=2; ЧН=0.00"), Формат(ДанныеАДВ62.НачисленоНакопительная - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаНакопительную, "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);
			
			РазделыИтоговСверки = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "НачисленоНакопительная");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "НачисленоНакопительная");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// В расчете РСВ-1 отсутствуют разделы с кодами тарифов «01», «52», «53».
		Если ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР] <> Неопределено Тогда
			Если ДанныеРСВ.УплаченоРСВ1НаСтраховую + 1 < ДанныеАДВ62.УплаченоСтраховая Тогда
				ТекстСообщения = НСтр("ru = 'Суммы уплаченных взносов на страховую часть пенсии в Описи АДВ-6-2 превысила сумму уплаченных взносов на страховую часть в Расчете РСВ-1.'");
				
				РазделыИтоговСверки = Новый Массив;
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "УплаченоРСВ1НаСтраховую");
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "УплаченоСтраховая");
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
		ДопустимоеРасхождение = 1;
		// В расчете РСВ-1 отсутствуют разделы с кодами тарифов «01», «52», «53».
		Если ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР] = Неопределено Тогда
			Разность = Макс(ДанныеРСВ.УплаченоРСВ1НаСтраховую - ДанныеАДВ62.УплаченоСтраховая, ДанныеАДВ62.УплаченоСтраховая - ДанныеРСВ.УплаченоРСВ1НаСтраховую);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Разница суммы уплаченных взносов на страховую часть пенсии в Расчете РСВ-1 (%2) и Описи АДВ-6-2 (%3) больше %1 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"),  
									ДопустимоеРасхождение,
									Формат(ДанныеРСВ.УплаченоРСВ1НаСтраховую, "ЧДЦ=2; ЧН=0.00"),
									Формат(ДанныеАДВ62.УплаченоСтраховая, "ЧДЦ=2; ЧН=0.00"));
				
				РазделыИтоговСверки = Новый Массив;
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "УплаченоРСВ1НаСтраховую");
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "УплаченоСтраховая");
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
		Разность = Макс(ДанныеРСВ.УплаченоРСВ1НаНакопительную - ДанныеАДВ62.УплаченоНакопительная, ДанныеАДВ62.УплаченоНакопительная - ДанныеРСВ.УплаченоРСВ1НаНакопительную);
		Если Разность > ДопустимоеРасхождение Тогда
			Разность = Макс(ДанныеРСВ.УплаченоРСВ1НаНакопительную - ДанныеАДВ62.УплаченоНакопительная, ДанныеАДВ62.УплаченоНакопительная - ДанныеРСВ.УплаченоРСВ1НаНакопительную);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Разница суммы уплаченных взносов на накопительную часть пенсии в Расчете РСВ-1 (%2) и Описи АДВ-6-2 (%3) больше %1 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"),  
									ДопустимоеРасхождение,
									Формат(ДанныеРСВ.УплаченоРСВ1НаНакопительную, "ЧДЦ=2; ЧН=0.00"),
									Формат(ДанныеАДВ62.УплаченоНакопительная, "ЧДЦ=2; ЧН=0.00"));
				
				РазделыИтоговСверки = Новый Массив;
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "УплаченоРСВ1НаНакопительную");
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "УплаченоНакопительная");
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
		
		// При наличии в РСВ-1 указанных кодов тарифа обязательно должны быть формы СЗВ с соответствующими кодами категорий
		// застрахованных лиц.
		СтрокаКатегорий = "";
		Для каждого Элемент Из ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям Цикл
			РСВНачисленоНаНакопительную = ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям.Получить(Элемент.Ключ);
			РСВНачисленоНаНакопительную = ?(РСВНачисленоНаНакопительную = Неопределено, 0, РСВНачисленоНаНакопительную);
			Если (Элемент.Значение <> 0 ИЛИ РСВНачисленоНаНакопительную <> 0) И ДанныеАДВ62.НачисленоСтраховаяПоКатегориям[Элемент.Ключ] = Неопределено Тогда
				СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий);
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Отсутствуют документы СЗВ-6-1,2 по категориям %1, соответствующим указанным в Расчете РСВ-1 кодам тарифа.'"),  СтрокаКатегорий);
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, ОписьПачекСЗВ, ТекстСообщения, , Отказ);
		КонецЕсли;
		
		// Сумма страховой части начисленных взносов по указанным категориям застрахованных лиц (по формам СЗВ-6-1, СЗВ-6-2)
		// должна равняться (в пределах значения равного 0,5 копейки, умноженной на количество застрахованных лиц и
		// округленное до целых копеек). сумме начисленных взносов по строкам 250 (графы 4,5,6) для указанных  кодов  тарифа
		// форма РСВ-1.
		// Сумма накопительной части начисленных взносов по указанным категориям застрахованных лиц (по формам СЗВ-6-1,
		// СЗВ-6-2) должна равняться (в пределах значения равного 0,5 копейки, умноженной на количество застрахованных лиц и
		// округленное до целых копеек). сумме начисленных взносов по строке 251 (графы 4,5,6) для указанных  кодов  тарифа
		// форма РСВ-1.
		
		ДопустимоеРасхождение = Окр(ДанныеРСВ.КоличествоЗастрахованных / 2) / 100;
		СтрокаКатегорий = "";
		Для каждого Элемент Из ДанныеАДВ62.НачисленоСтраховаяПоКатегориям Цикл
			
			Если ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ] = Неопределено Тогда
				СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий);
				Продолжить;
			КонецЕсли;
			Если Элемент.Ключ = Перечисления.КатегорииЗастрахованныхЛицДляПФР.ЧЭС Тогда
				Продолжить;
			КонецЕсли;
			Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ] - Элемент.Значение, Элемент.Значение - ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ]);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на страховую часть пенсии в Расчете РСВ-1 (%1) и документах СЗВ-6-1,2 по категориям %2 (%3) больше %4 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"), Формат(ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ], "ЧДЦ=2; ЧН=0.00"), ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий), Формат(Элемент.Значение, "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);   
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиВзносовРСВ1СОписьюПоКатегории(Ошибки, Элемент.Ключ, ТекстСообщения, ДанныеАДВ62, ДанныеРСВ, "НачисленоСтраховая", Отказ);
			КонецЕсли;
			Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[Элемент.Ключ] - ДанныеАДВ62.НачисленоНакопительнаяПоКатегориям[Элемент.Ключ], ДанныеАДВ62.НачисленоНакопительнаяПоКатегориям[Элемент.Ключ] - ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[Элемент.Ключ]);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на накопительную часть пенсии в Расчете РСВ-1 (%1) и документах СЗВ-6-1,2 по категориям %2 (%3) больше %4 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"), Формат(ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[Элемент.Ключ], "ЧДЦ=2; ЧН=0.00"), ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий), Формат(ДанныеАДВ62.НачисленоНакопительнаяПоКатегориям[Элемент.Ключ], "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);   
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиВзносовРСВ1СОписьюПоКатегории(Ошибки, Элемент.Ключ, ТекстСообщения, ДанныеАДВ62, ДанныеРСВ, "НачисленоНакопительная", Отказ);
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Расчете РСВ-1 отсутствует Раздел 2 с кодом тарифа, соответствующим категориям %1.'"), СтрокаКатегорий);   
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуНесоответствияТарифовКатегориям(Ошибки, ТекстСообщения, ДанныеРСВ, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	

Функция РезультатЗапросаПоЗаработкуФизЛицЗа2013()
	ДокументыСЗВ = Новый Массив;
	
	Для Каждого ПачкаСЗВ6 Из СписокПачекСЗВ Цикл
		ДокументыСЗВ.Добавить(ПачкаСЗВ6.ПачкаДокументов);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПерсонифицированныйУчет.СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);
	Запрос.УстановитьПараметр("ДокументыСЗВ", ДокументыСЗВ);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеТарифаИВидаЗЛКатегории.ИсходнаяКатегорияЗастрахованныхЛиц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТИсходныеКатегорииЗЛ
	|ИЗ
	|	ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|ГДЕ
	|	&ОтчетныйГод МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество,
	|	Застрахованные.НомерСтроки,
	|	ВЫБОР
	|		КОГДА Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоЛьготныеКатегории,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТФормыСЗВ_6_4
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка В(&ДокументыСЗВ)
	|	И Застрахованные.Ссылка.ОтчетныйПериод = &ОтчетныйПериод
	|	И Застрахованные.Ссылка.Организация = &Организация
	|	И Застрахованные.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И НЕ Застрахованные.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Ссылка,
	|	Застрахованные.Сотрудник,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия,
	|	Застрахованные.Имя,
	|	Застрахованные.Отчество,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ИсходныеКатегорииЗЛ.ИсходнаяКатегорияЗастрахованныхЛиц КАК ИсходнаяКатегорияЗастрахованныхЛиц,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Ссылка.НомерПачки КАК НомерПачки,
	|	СУММА(СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины + ВЫБОР
	|			КОГДА ИсходныеКатегорииЗЛ.ИсходнаяКатегорияЗастрахованныхЛиц = ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР)
	|				ТОГДА СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносами,
	|	Застрахованные.Фамилия + "" "" + Застрахованные.Имя + "" "" + Застрахованные.Отчество КАК ФИОЗастрахованного,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Ссылка,
	|	СведенияОЗаработке.НомерСтроки КАК НомерСтрокиЗаработок
	|ИЗ
	|	ВТФормыСЗВ_6_4 КАК Застрахованные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.СведенияОЗаработке КАК СведенияОЗаработке
	|		ПО Застрахованные.Ссылка = СведенияОЗаработке.Ссылка
	|			И Застрахованные.Сотрудник = СведенияОЗаработке.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеКатегорииЗЛ КАК ИсходныеКатегорииЗЛ
	|		ПО Застрахованные.КатегорияЗастрахованныхЛиц = ИсходныеКатегорииЗЛ.КатегорияЗастрахованныхЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Сотрудник,
	|	Застрахованные.КатегорияЗастрахованныхЛиц,
	|	ИсходныеКатегорииЗЛ.ИсходнаяКатегорияЗастрахованныхЛиц,
	|	Застрахованные.СтраховойНомерПФР,
	|	Застрахованные.Фамилия + "" "" + Застрахованные.Имя + "" "" + Застрахованные.Отчество,
	|	Застрахованные.Ссылка.НомерПачки,
	|	Застрахованные.НомерСтроки,
	|	Застрахованные.Ссылка,
	|	СведенияОЗаработке.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	КатегорияЗастрахованныхЛиц,
	|	Застрахованные.Ссылка,
	|	ФИОЗастрахованного";
	
	Возврат Запрос.Выполнить();
КонецФункции	

Процедура ПроверитьСоответствиеДанныхПачекДаннымРСВЗа2013(ДанныеРСВ, Ошибки, Отказ = Ложь)
	Если ЗначениеЗаполнено(РСВ_1) Тогда
		Отчет = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(РСВ_1);
	Иначе
		Отчет = "";
	КонецЕсли;	
	
	ЕстьОшибкиАДВ62_РСВ1 = Ложь;
	Если ДанныеРСВ <> Неопределено И ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде И ДанныеРСВ.ОтчетныйПериодРСВ1 <> ОтчетныйПериод Тогда
		ТекстСообщения = НСтр("ru = 'Период Расчета РСВ-1 не соответствует отчетному периоду Описи АДВ-6-2'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Титульный", , , , , "Период2", Отказ);  
			
	ИначеЕсли ДанныеРСВ <> Неопределено И ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде Тогда	
		СоответствиеКатегорий = СоответствиеКатегорий();
				
		ДанныеАДВ62 = СводныеДанныеПоДокументамКомплекта();		
		// -----------------------
		
		// Правило 1. По всем формам СЗВ-6-4 (при их наличии) по всем категориям ЗЛ  значение итоговой строки показателя.
		// «Сумма выплат и иных вознаграждений, начисленных в пользу физического лица»,  должно быть больше или равно сумме
		// показателей строк 201, 202, 203 формы РСВ-1 за календарный год, уменьшенной на показатели строк 211, 212, 213,
		// 231, 232 и 233 формы РСВ-1.
		Если ДанныеАДВ62.Заработок + 1 < ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 Тогда
			ТекстСообщения = НСтр("ru = 'Общая сумма заработка, указанная в формах СЗВ-6-4 с категориями «НР», «ВЖНР» и «ВПНР», меньше облагаемых взносами в ПФР сумм, указанных в разделе 2 Расчета РСВ-1 с кодами тарифа 01, 52 и 53.'"); 
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "УменьшенныйОбъектОбложенияРСВ1");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "Заработок"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// Значение строки «Всего за последние три месяца отчетного периода, в т.ч.» графы «В том числе на которые начислены
		// страховые взносы на обязательное пенсионное страхование» должно равняться сумме значений граф 4, 5, 6 строк
		// «240»,«241», «231», «232», «233» формы РСВ-1,  с погрешностью, равной 1 рублю.
		ДопустимоеРасхождение = 1;
		Разность = Макс(ДанныеАДВ62.ОблагаетсяВзносами - ДанныеРСВ.ОблагаемаяБазаРСВ1, ДанныеРСВ.ОблагаемаяБазаРСВ1 - ДанныеАДВ62.ОблагаетсяВзносами);
		Если Разность > ДопустимоеРасхождение Тогда

			ТекстСообщения = НСтр("ru = 'Общая сумма облагаемой базы, указанная в формах СЗВ-6-4 с категориями «НР», «ВЖНР» и «ВПНР» и сумма показателей колонок ""1, 2 и 3 месяц"" по строкам 240, 241, 231, 232 и 233 раздела 2 Расчета РСВ-1 с кодами тарифа 01, 52 и 53 не совпадают.'");
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "ОблагаемаяБазаРСВ1");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "ОблагаетсяВзносами"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
				
		// Правило 1. По всем формам СЗВ-6-4 (при их наличии) по всем категориям ЗЛ значение строки «Всего за последние три
		// месяца отчетного периода, в т.ч.» графы ««Сумма выплат и иных вознаграждений» раздела  «Сумма выплат и иных
		// вознаграждений, начисленных в пользу физического лица»,  увеличенное  на 1 рубль, должно быть больше или равно
		// сумме показателей граф 4, 5, 6 строк 201, 202, 203 формы РСВ-1, уменьшенной на показатели граф 4, 5, 6 строк
		// «211», «212», «213», «221», «222» и «223» формы РСВ-1.
		Если ДанныеАДВ62.ЗаработокПоЛьготнымКатегориям + 1 < ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный Тогда
			ТекстСообщения = НСтр("ru = 'Общая сумма заработка, указанная в формах СЗВ-6-4 по всем категориям, кроме «НР», «ВЖНР» и «ВПНР», меньше облагаемых взносами в ПФР сумм, указанных в разделе 2 Расчета РСВ-1 по всем кодам тарифа, кроме 01, 52 и 53.'"); 
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "УменьшенныйОбъектОбложенияРСВ1Льготный");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "ЗаработокПоЛьготнымКатегориям"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// Значение строки «Всего за последние три месяца отчетного периода, в т.ч.» графы «в том числе на которые начислены
		// страховые взносы на обязательное пенсионное страхование» должно равняться сумме значений граф 4, 5, 6 строк 240,
		// 241 формы РСВ-1 кроме разделов « с кодами тарифов 01, 52 и 53 с погрешностью, равной  1 рублю.
		ДопустимоеРасхождение = 1;
		Разность = Макс(ДанныеАДВ62.ОблагаетсяВзносамиПоЛьготнымКатегориям - ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная, ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная - ДанныеАДВ62.ОблагаетсяВзносамиПоЛьготнымКатегориям);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = НСтр("ru = 'Общая сумма облагаемой базы, указанная в формах СЗВ-6-4 по всем категориям, кроме «НР», «ВЖНР» и «ВПНР», и сумма показателей колонок ""1, 2 и 3 месяц"" по строкам 240 и 241 раздела 2 Расчета РСВ-1 по всем кодам тарифа, кроме 01, 52 и 53, не совпадают.'");
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "ОблагаемаяБазаРСВ1Льготная");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "ОблагаетсяВзносамиПоЛьготнымКатегориям"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// Правило 2. По всем формам СЗВ-6-4 по всем категориям ЗЛ сумма значений строк «Всего за последние три месяца
		// отчетного периода, в т.ч.» графы ««Сумма выплат и иных вознаграждений» раздела  «Сумма выплат и иных
		// вознаграждений, начисленных в пользу физического лица» должна быть равна сумме значений строк «Всего за последние
		// три месяца отчетного периода, в т.ч.» графы в графе «в том числе на которые начислены страховые взносы на
		// обязательное пенсионное страхование» при условии при условии, что показатели граф 4, 5, 6  строки «211», «212»,
		// «213», «221», «222», «223»,  формы РСВ-1 за отчетный период равны нулю (при наличии в форме РСВ-1 нескольких.
		// Разделов 2 оцениваются графы 4, 5, 6 строки «211», «212», «213», «221», «222» и «223» каждого из Разделов 2 формы
		// РСВ-1).
		ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам = РезультатЗапросаПоЗаработкуФизЛицЗа2013().Выбрать();
		Пока ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.Следующий() Цикл
			
			ПроверяемыйПоказатель = ДанныеРСВ.ПоказателиНеоблагаемыхДоходов[ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.ИсходнаяКатегорияЗастрахованныхЛиц];
			
			Если ПроверяемыйПоказатель = 0 И ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.Заработок <> ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.ОблагаетсяВзносами Тогда
								
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Для застрахованного %1, указанного в строке %2  пачки СЗВ-6-4 № %3: общая сумма заработка и общая сумма облагаемой базы, должны быть равны'"), 
									СокрЛП(ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.ФИОЗастрахованного), 
									ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.НомерСтроки, 
									ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.НомерПачки);  
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
					Ошибки, 
					ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.Ссылка, 
					ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.НомерСтроки, 
					ВыборкаСведенияОЗаработкеСЗВ64ПоФизЛицам.НомерСтрокиЗаработок,
					ТекстСообщения, 
					Отказ);
			КонецЕсли;	
			
		КонецЦикла;	
		
		// Правило 3. Сумма показателей строк «201», «202», «203» формы РСВ-1 должна быть равна сумме значений итоговой
		// строки в графе «Сумма выплат и иных вознаграждений, начисленных в пользу физического лица» по всем формам СЗВ-6-4
		// по всем категориям застрахованных лиц.
		Если ДанныеАДВ62.Заработок + ДанныеАДВ62.ЗаработокПоЛьготнымКатегориям <> ДанныеРСВ.ОбъектОбложенияРСВ1 + ДанныеРСВ.ОбъектОбложенияРСВ1Льготный Тогда 
			ТекстСообщения =  НСтр("ru = 'Сумма показателей строк «201», «202», «203» формы РСВ-1 должна быть равна сумме значений итоговых строк в графе «Сумма выплат и иных вознаграждений, начисленных в пользу физического лица» по всем формам СЗВ-6-4.
									|Невыполнение условия допускается при наличии выплат в пользу наемных работников, за которых не представляются формы СЗВ-6-4: выплаты в пользу военнослужащих, предусмотренные п.п. 14) части 2 статьи 9 Федерального закона от 24 июля 2009 года № 212-ФЗ; выплаты в пользу прокуроров, следователей, федеральных или мировых судей, предусмотренные п.1) части 3 статьи 9 указанного Федерального закона, в том числе с сумм, превышающих предельную базу для начисления страховых взносов. В остальных случаях невыполнение условия является ошибкой и подлежит исправлению.'");
															 
			РазделыИтоговСОшибкой = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСОшибкой, ДанныеРСВ.Ссылка, "ОбъектОбложенияРСВ1");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговЗаработок(РазделыИтоговСОшибкой, ОписьПачекСЗВ, "Заработок"); 
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСОшибкой, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// По всем формам СЗВ-6-4 значение итоговой строки показателя «Сумма выплат и иных вознаграждений, начисленных
		// застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О
		// трудовых пенсиях в Российской Федерации»»,  должно быть равно сумме показателей граф 4, 5, 6 строки 283 РСВ-1.
		Если ДанныеАДВ62.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах <> ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах Тогда
			ТекстСообщения =  НСтр("ru = 'Общая сумма облагаемой базы взносов по дополнительному тарифу за занятых на вредных и подземных работах (подпункт 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации»), указанная в формах СЗВ-6-4, и сумма показателей колонок ""1, 2 и 3 месяц"" по строке 283 раздела 2.2 Расчета РСВ-1 не совпадают.'");
															 			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел22", "4", "283", "2", "", "П000220028304", Отказ); 
			
		КонецЕсли;
		
		// По всем формам СЗВ-6-4 значение итоговой строки показателя «Сумма выплат и иных вознаграждений, начисленных
		// застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона.
		// «О трудовых пенсиях в Российской Федерации»»,  должно быть равно сумме показателей граф 4, 5, 6 строки 293 РСВ-1.
		Если ДанныеАДВ62.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах <> ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах Тогда
			ТекстСообщения =  НСтр("ru = 'Общая сумма облагаемой базы взносов по дополнительному тарифу за занятых на тяжелых работах (подпункты 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации»), указанная в формах СЗВ-6-4 , и сумма показателей колонок ""1, 2 и 3 месяц"" по строке 293 раздела 2.3 Расчета РСВ-1 не совпадают.'");
															 
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстСообщения, "Раздел22", "4", "293", "2", "", "П000230029304", Отказ); 
 		КонецЕсли;	
		
		// ---------------------
		
		ДопустимоеРасхождение = 0.015 * ДанныеРСВ.КоличествоЗастрахованных;		
				
		// Значение показателя  «Начислено» в графе «Сумма страховых взносов на страховую часть  трудовой пенсии», строки.
		// «Итого по страхователю»  раздела «Сведения об исходных сведениях» Описи сведений АДВ-6-2, уменьшенное на значения
		// соответствующих показателей строки с кодом категории застрахованного лица «ЧЭС», «ВЖЭС» и «ВПЭС», должно быть
		// равно (в пределах значения равного 1 копейка, умноженная на количество застрахованных лиц, умноженное на 3)
		// значению показателя  строки 114   «Итого подлежит уплате за последние 3 месяца (сумма строк 111+112+113)» » по
		// графе 3  Раздела 1 Расчета по начисленным и уплаченным страховым взносам РСВ-1 уменьшенного на сумму значений граф
		// 4, 5 и 6 строки 252 раздела 2 Расчета по начисленным и уплаченным страховым взносам (РСВ-1).
		Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаСтраховую - (ДанныеАДВ62.НачисленоСтраховая - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаСтраховую), ДанныеАДВ62.НачисленоСтраховая - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаСтраховую - ДанныеРСВ.НачисленоРСВ1НаСтраховую);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на страховую часть пенсии в Расчете РСВ-1 (%1) и Описи АДВ-6-2 (%2) больше %3 руб. - величины, допустимой правилами проверки сведений персонифицированного учета.'"), Формат(ДанныеРСВ.НачисленоРСВ1НаСтраховую, "ЧДЦ=2; ЧН=0.00"), Формат(ДанныеАДВ62.НачисленоСтраховая - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаСтраховую, "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);
			
			РазделыИтоговСверки = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "НачисленоРСВ1НаСтраховую");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "НачисленоСтраховая");

			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
		КонецЕсли;
		Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаНакопительную - (ДанныеАДВ62.НачисленоНакопительная - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаНакопительную), ДанныеАДВ62.НачисленоНакопительная - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаНакопительную - ДанныеРСВ.НачисленоРСВ1НаНакопительную);
		Если Разность > ДопустимоеРасхождение Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на накопительную часть пенсии в Расчете РСВ-1 (%1) и Описи АДВ-6-2 (%2) больше %3 руб. - величины, допустимой правилами проверки сведений персонифицированного учета.'"), Формат(ДанныеРСВ.НачисленоРСВ1НаНакопительную, "ЧДЦ=2; ЧН=0.00"), Формат(ДанныеАДВ62.НачисленоНакопительная - ДанныеАДВ62.НачисленоЧленамЭкипажейСудовНаНакопительную, "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);
			
			РазделыИтоговСверки = Новый Массив;
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "НачисленоРСВ1НаНакопительную");
			ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "НачисленоНакопительная");
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
		КонецЕсли;
		
		// В расчете РСВ-1 отсутствуют разделы с кодами тарифов «01», «52», «53».
		Если ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР] <> Неопределено Тогда
			Если ДанныеРСВ.УплаченоРСВ1НаСтраховую + 1 < ДанныеАДВ62.УплаченоСтраховая Тогда
				ТекстСообщения = НСтр("ru = 'Суммы уплаченных взносов на страховую часть пенсии в Описи АДВ-6-2 превысила сумму уплаченных взносов на страховую часть в Расчете РСВ-1.'");
				
				РазделыИтоговСверки = Новый Массив;
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "УплаченоРСВ1НаСтраховую");
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "УплаченоСтраховая");
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
		ДопустимоеРасхождение = 1;
		// В расчете РСВ-1 отсутствуют разделы с кодами тарифов «01», «52», «53».
		Если ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР] = Неопределено Тогда
			Разность = Макс(ДанныеРСВ.УплаченоРСВ1НаСтраховую - ДанныеАДВ62.УплаченоСтраховая, ДанныеАДВ62.УплаченоСтраховая - ДанныеРСВ.УплаченоРСВ1НаСтраховую);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Разница суммы уплаченных взносов на страховую часть пенсии в Расчете РСВ-1 (%2) и Описи АДВ-6-2 (%3) больше %1 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"),  
									ДопустимоеРасхождение,
									Формат(ДанныеРСВ.УплаченоРСВ1НаСтраховую, "ЧДЦ=2; ЧН=0.00"),
									Формат(ДанныеАДВ62.УплаченоСтраховая, "ЧДЦ=2; ЧН=0.00"));
				
				РазделыИтоговСверки = Новый Массив;
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "УплаченоРСВ1НаСтраховую");
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "УплаченоСтраховая");
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
		Разность = Макс(ДанныеРСВ.УплаченоРСВ1НаНакопительную - ДанныеАДВ62.УплаченоНакопительная, ДанныеАДВ62.УплаченоНакопительная - ДанныеРСВ.УплаченоРСВ1НаНакопительную);
		Если Разность > ДопустимоеРасхождение Тогда
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Разница суммы уплаченных взносов на накопительную часть пенсии в Расчете РСВ-1 (%2) и Описи АДВ-6-2 (%3) больше %1 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"),  
									ДопустимоеРасхождение,
									Формат(ДанныеРСВ.УплаченоРСВ1НаНакопительную, "ЧДЦ=2; ЧН=0.00"),
									Формат(ДанныеАДВ62.УплаченоНакопительная, "ЧДЦ=2; ЧН=0.00"));

				РазделыИтоговСверки = Новый Массив;
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтоговСверки, ДанныеРСВ.Ссылка, "УплаченоРСВ1НаНакопительную");
				ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговАДВ62(РазделыИтоговСверки, ОписьПачекСЗВ, "УплаченоНакопительная");
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтоговСверки, ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
		
		// При наличии в РСВ-1 указанных кодов тарифа обязательно должны быть формы СЗВ с соответствующими кодами категорий
		// застрахованных лиц.
		СтрокаКатегорий = "";
		Для каждого Элемент Из ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям Цикл
			РСВНачисленоНаНакопительную = ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям.Получить(Элемент.Ключ);
			РСВНачисленоНаНакопительную = ?(РСВНачисленоНаНакопительную = Неопределено, 0, РСВНачисленоНаНакопительную);
			Если (Элемент.Значение <> 0 ИЛИ РСВНачисленоНаНакопительную <> 0) И ДанныеАДВ62.НачисленоСтраховаяПоКатегориям[Элемент.Ключ] = Неопределено Тогда
				СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий);
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Отсутствуют документы СЗВ-6-4 по категориям %1, соответствующим указанным в Расчете РСВ-1 кодам тарифа.'"),  СтрокаКатегорий);
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, ОписьПачекСЗВ, ТекстСообщения, , Отказ);
		КонецЕсли;
		
		// Сумма страховой части начисленных взносов по указанным категориям застрахованных лиц (по формам СЗВ-6-1, СЗВ-6-2)
		// должна равняться (в пределах значения равного 0,5 копейки, умноженной на количество застрахованных лиц и
		// округленное до целых копеек). сумме начисленных взносов по строкам 250 (графы 4,5,6) для указанных  кодов  тарифа
		// форма РСВ-1.
		// Сумма накопительной части начисленных взносов по указанным категориям застрахованных лиц (по формам СЗВ-6-1,
		// СЗВ-6-2) должна равняться (в пределах значения равного 0,5 копейки, умноженной на количество застрахованных лиц и
		// округленное до целых копеек). сумме начисленных взносов по строке 251 (графы 4,5,6) для указанных  кодов  тарифа
		// форма РСВ-1.
		
		ДопустимоеРасхождение = Окр(ДанныеРСВ.КоличествоЗастрахованных / 2) / 100;
		СтрокаКатегорий = "";
		Для каждого Элемент Из ДанныеАДВ62.НачисленоСтраховаяПоКатегориям Цикл
			
			Если ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ] = Неопределено Тогда
				СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий);
				Продолжить;
			КонецЕсли;
			Если Элемент.Ключ = Перечисления.КатегорииЗастрахованныхЛицДляПФР.ЧЭС Тогда
				Продолжить;
			КонецЕсли;
			Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ] - Элемент.Значение, Элемент.Значение - ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ]);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на страховую часть пенсии в Расчете РСВ-1 (%1) и документах СЗВ-6-4 по категориям %2 (%3) больше %4 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"), Формат(ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[Элемент.Ключ], "ЧДЦ=2; ЧН=0.00"), ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий), Формат(Элемент.Значение, "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);   
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиВзносовРСВ1СОписьюПоКатегории(Ошибки, Элемент.Ключ, ТекстСообщения, ДанныеАДВ62, ДанныеРСВ, "НачисленоСтраховая", Отказ);
			КонецЕсли;
			Разность = Макс(ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[Элемент.Ключ] - ДанныеАДВ62.НачисленоНакопительнаяПоКатегориям[Элемент.Ключ], ДанныеАДВ62.НачисленоНакопительнаяПоКатегориям[Элемент.Ключ] - ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[Элемент.Ключ]);
			Если Разность > ДопустимоеРасхождение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Разница суммы начисленных взносов на накопительную часть пенсии в Расчете РСВ-1 (%1) и документах СЗВ-6-4 по категориям %2 (%3) больше %4 руб. - величины, допустимой правилами проверки сведений персонифицированного учета'"), Формат(ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[Элемент.Ключ], "ЧДЦ=2; ЧН=0.00"), ДочерниеКатегории(Элемент.Ключ, СоответствиеКатегорий), Формат(ДанныеАДВ62.НачисленоНакопительнаяПоКатегориям[Элемент.Ключ], "ЧДЦ=2; ЧН=0.00"), ДопустимоеРасхождение);   
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиВзносовРСВ1СОписьюПоКатегории(Ошибки, Элемент.Ключ, ТекстСообщения, ДанныеАДВ62, ДанныеРСВ, "НачисленоНакопительная", Отказ);
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Расчете РСВ-1 отсутствует Раздел 2 с кодом тарифа, соответствующим категориям %1.'"), СтрокаКатегорий);   
			
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуНесоответствияТарифовКатегориям(Ошибки, ТекстСообщения, ДанныеРСВ, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура  ПроверитьСоответствиеОсновныхРазделовРСВ1Разделам6(ДанныеРСВ, Ошибки, Отказ = Ложь)
	Если ДанныеРСВ = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ДанныеРазделов6 = СводныеДанныеПоРазделам6РСВ1();
	
	// Сверка показателей
	
	// П. 1.5 Элемент «Количество застрахованных лиц, на которых представлены сведения о сумме выплат и иных
	// вознаграждений и/или страховом стаже» (указывается количество больше  нуля).  Значение показателя должно быть равно
	// значению «итого» графы 4  подраздела 2.5.1.
	Если ДанныеРСВ.КоличествоЗастрахованных <> ДанныеРазделов6.КоличествоЗастрахованныхЛиц Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Количество застрахованных лиц, указанное на титульном листе Расчета РСВ-1 (%1) не совпадает с количеством лиц, на которых подаются сведения перс.учета (%2).'"),
						Формат(ДанныеРСВ.КоличествоЗастрахованных, "ЧДЦ=; ЧН=0"),
						Формат(ДанныеРазделов6.КоличествоЗастрахованныхЛиц, "ЧДЦ=; ЧН=0"));
						
		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "КоличествоЗастрахованных");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);
						
	КонецЕсли;
	
	// П. 3.5.4 Значение, указанное в графе 3 строки «Итого» должно равняться  значению, указанному в графе 3 строки 114
	// раздела 1 уменьшенному на значения граф 4-6 строки 206 подраздела 2.1.
	Если ДанныеРСВ.НачисленоРСВ1НаСтраховую <> ДанныеРазделов6.НачисленоВзносов Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Сумма начисленных взносов на ОПС в разделе 1 Расчета РСВ-1 (%1) не совпадает с данными перс.учета (%2).'"),
						Формат(ДанныеРСВ.НачисленоРСВ1НаСтраховую, "ЧДЦ=2; ЧН=0"),
						Формат(ДанныеРазделов6.НачисленоВзносов, "ЧДЦ=2; ЧН=0"));
						
		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "НачисленоРСВ1НаСтраховую");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);
				
	КонецЕсли;
	
	// П. 7.4.2 По всем разделам 6 по всем категориям ЗЛ  значение графы 4 строки 401 (411 и т.д.) подраздела 6.4,  должно
	// быть больше или равно значению, указанному в графе 4 строки 200 подраздела 2.1, уменьшенной на показатели графы 4
	// строки 201 подраздела 2.1. по всем кодам тарифов.
	Если ДанныеРазделов6.ЗаработокЗа1Месяц < ДанныеРСВ.ОбъектОбложенияРСВ1За1Месяц Тогда 
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Общая сумма выплат и иных вознаграждений, указанная за первый месяц отчетного периода в разделах 2.1 Расчета РСВ-1, уменьшенная на суммы, не подлежащие обложению, (%1) не может быть больше общей суммы выплат и иных вознаграждений по данным перс.учета (%2)'"),
						Формат(ДанныеРСВ.ОбъектОбложенияРСВ1За1Месяц, "ЧДЦ=2; ЧН=0"),
						Формат(ДанныеРазделов6.ЗаработокЗа1Месяц, "ЧДЦ=2; ЧН=0"));
						
		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "ОбъектОбложенияРСВ1За1Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);
				
	КонецЕсли;
	
	// П. 7.4.6 По всем разделам 6 по всем категориям ЗЛ  значение графы 5 строки 401 (411 и т.д.) подраздела 6.4 должно
	// быть равно значению, указанному в графе 4 строки 204 подраздела 2.1 по всем кодам тарифов.
	Если ДанныеРазделов6.ОблагаетсяВзносамиДоПредельнойВеличиныЗа1Месяц <> ДанныеРСВ.ОблагаемаяБазаРСВ1За1Месяц Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Общая сумма облагаемой базы, не превышающей предельной величины, указанная за первый месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (%1) не совпадает с данными перс.учета (%2)'"),
							Формат(ДанныеРСВ.ОблагаемаяБазаРСВ1За1Месяц, "ЧДЦ=2; ЧН=0"),
							Формат(ДанныеРазделов6.ОблагаетсяВзносамиДоПредельнойВеличиныЗа1Месяц, "ЧДЦ=2; ЧН=0"));
							
		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "ОблагаемаяБазаРСВ1За1Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);					
	КонецЕсли;
	
	// П. 7.4.10 По всем разделам 6 по всем категориям ЗЛ  значение графы 7 строки 401 (411 и т.д.) подраздела 6.4,
	// должно быть равно значению, указанному в графе 4 строки 203 подраздела 2.1 по всем кодам тарифов.
	Если ДанныеРазделов6.ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа1Месяц <> ДанныеРСВ.БазаСверхПредельнойРСВ1За1Месяц Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Общая сумма облагаемой базы, превышающей предельную величину, указанная за первый месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (%1) не совпадает с данными перс.учета (%2)'"),
							Формат(ДанныеРСВ.БазаСверхПредельнойРСВ1За1Месяц, "ЧДЦ=2; ЧН=0"),
							Формат(ДанныеРазделов6.ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа1Месяц, "ЧДЦ=2; ЧН=0"));

		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "БазаСверхПредельнойРСВ1За1Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);	
	КонецЕсли;
	
	// П. 7.4.3 По всем разделам 6 по всем категориям ЗЛ  значение графы 4 строки 402 (412 и т.д.) подраздела 6.4,  должно
	// быть больше или равно значению, указанному в графе 5 строки 200 подраздела 2.1, уменьшенной на показатели графы 5
	// строки 201 подраздела 2.1. по всем кодам тарифов.
	Если ДанныеРазделов6.ЗаработокЗа2Месяц < ДанныеРСВ.ОбъектОбложенияРСВ1За2Месяц Тогда 
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Общая сумма выплат и иных вознаграждений, указанная за второй месяц отчетного периода в разделах 2.1 Расчета РСВ-1, уменьшенная на суммы, не подлежащие обложению, (%1) не может быть больше общей суммы выплат и иных вознаграждений по данным перс.учета (%2)'"),
						Формат(ДанныеРСВ.ОбъектОбложенияРСВ1За2Месяц, "ЧДЦ=2; ЧН=0"),
						Формат(ДанныеРазделов6.ЗаработокЗа2Месяц, "ЧДЦ=2; ЧН=0"));

		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "ОбъектОбложенияРСВ1За2Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);		
	КонецЕсли;
	
	// П. 7.4.7 По всем разделам 6 по всем категориям ЗЛ  значение графы 5 строки 402 (412 и т.д.) подраздела 6.4 должно
	// быть равно значению, указанному в графе 5 строки 204 подраздела 2.1 по всем кодам тарифов.
	Если ДанныеРазделов6.ОблагаетсяВзносамиДоПредельнойВеличиныЗа2Месяц <> ДанныеРСВ.ОблагаемаяБазаРСВ1За2Месяц Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Общая сумма облагаемой базы, не превышающей предельной величины, указанная за второй месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (%1) не совпадает с данными перс.учета (%2)'"),
							Формат(ДанныеРСВ.ОблагаемаяБазаРСВ1За2Месяц, "ЧДЦ=2; ЧН=0"),
							Формат(ДанныеРазделов6.ОблагаетсяВзносамиДоПредельнойВеличиныЗа2Месяц, "ЧДЦ=2; ЧН=0"));

		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "ОблагаемаяБазаРСВ1За2Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);	
	КонецЕсли;
	
	// П. 7.4.11 По всем разделам 6 по всем категориям ЗЛ  значение графы 7 строки 402 (412 и т.д.) подраздела 6.4,
	// должно быть равно значению, указанному в графе 5 строки 203 подраздела 2.1 по всем кодам тарифов.
	Если ДанныеРазделов6.ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа2Месяц <> ДанныеРСВ.БазаСверхПредельнойРСВ1За2Месяц Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Общая сумма облагаемой базы, превышающей предельную величину, указанная за второй месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (%1) не совпадает с данными перс.учета (%2)'"),
							Формат(ДанныеРСВ.БазаСверхПредельнойРСВ1За2Месяц, "ЧДЦ=2; ЧН=0"),
							Формат(ДанныеРазделов6.ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа2Месяц, "ЧДЦ=2; ЧН=0"));

		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "БазаСверхПредельнойРСВ1За2Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);	
	КонецЕсли;
	
	// П. 7.4.4 По всем разделам 6 по всем категориям ЗЛ  значение графы 4 строки 403 (413 и т.д.) подраздела 6.4,  должно
	// быть больше или равно значению, указанному в графе 6 строки 200 подраздела 2.1, уменьшенной на показатели графы 6
	// строки 201 подраздела 2.1. по всем кодам тарифов.
	Если ДанныеРазделов6.ЗаработокЗа3Месяц < ДанныеРСВ.ОбъектОбложенияРСВ1За3Месяц Тогда 
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Общая сумма выплат и иных вознаграждений, указанная за третий месяц отчетного периода в разделах 2.1 Расчета РСВ-1, уменьшенная на суммы, не подлежащие обложению, (%1) не может быть больше общей суммы выплат и иных вознаграждений по данным перс.учета (%2)'"),
						Формат(ДанныеРСВ.ОбъектОбложенияРСВ1За3Месяц, "ЧДЦ=2; ЧН=0"),
						Формат(ДанныеРазделов6.ЗаработокЗа3Месяц, "ЧДЦ=2; ЧН=0"));

		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "ОбъектОбложенияРСВ1За3Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);	
	КонецЕсли;
	
	// П. 7.4.8 По всем разделам 6 по всем категориям ЗЛ  значение графы 5 строки 403 (413 и т.д.) подраздела 6.4 должно
	// быть равно значению, указанному в графе 6 строки 204 подраздела 2.1 по всем кодам тарифов.
	Если ДанныеРазделов6.ОблагаетсяВзносамиДоПредельнойВеличиныЗа3Месяц <> ДанныеРСВ.ОблагаемаяБазаРСВ1За3Месяц Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Общая сумма облагаемой базы, не превышающей предельной величины, указанная за третий месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (%1) не совпадает с данными перс.учета (%2)'"),
							Формат(ДанныеРСВ.ОблагаемаяБазаРСВ1За3Месяц, "ЧДЦ=2; ЧН=0"),
							Формат(ДанныеРазделов6.ОблагаетсяВзносамиДоПредельнойВеличиныЗа3Месяц, "ЧДЦ=2; ЧН=0"));

		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "ОблагаемаяБазаРСВ1За3Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);
	КонецЕсли;
	
	// П. 7.4.12 По всем разделам 6 по всем категориям ЗЛ  значение графы 7 строки 403 (413 и т.д.) подраздела 6.4,
	// должно быть равно значению, указанному в графе 6 строки 203 подраздела 2.1 по всем кодам тарифов.
	Если ДанныеРазделов6.ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа3Месяц <> ДанныеРСВ.БазаСверхПредельнойРСВ1За3Месяц Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Общая сумма облагаемой базы, превышающей предельную величину, указанная за третий месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (%1) не совпадает с данными перс.учета (%2)'"),
							Формат(ДанныеРСВ.БазаСверхПредельнойРСВ1За3Месяц, "ЧДЦ=2; ЧН=0"),
							Формат(ДанныеРазделов6.ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа3Месяц, "ЧДЦ=2; ЧН=0"));

		РазделыИтогов = Новый Массив;				
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьРазделИтоговРСВ(РазделыИтогов, РСВ_1, "БазаСверхПредельнойРСВ1За3Месяц");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуСверкиИтоговКомплекта(Ошибки, РазделыИтогов, ТекстОшибки, Отказ);
	КонецЕсли;
	
	Отчет = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(РСВ_1);
	
	СоответствиеКлассовУсловийТруда = Новый Соответствие;
	СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный,"опасным (подкласс 4)");
	СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4,"вредным (подкласс 3.4)");
	СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3,"вредным (подкласс 3.3)");
	СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2,"вредным (подкласс 3.2)");
	СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1,"вредным (подкласс 3.1)");
	// П. 7.7.1-8 По всем разделам 6 значение, указанное в графе 4 строки 701(711) подраздела 6.7  при условии, что код
	// специальной оценки условий труда не указан, должно быть равно значению, указанному в графе 4 строки 223 подраздела
	// 2.2.
	СтрокаРСВ1 = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Найти(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка(), "КлассУсловийТруда");
	СтрокаПерсучета = ДанныеРазделов6.ИтогиПоВредномуЗаработку.Найти(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка(), "КлассУсловийТруда");
	Для СчМесяцев = 1 По 3 Цикл
		ОписаниеМесяца = ?(СчМесяцев = 1, "первый", ?(СчМесяцев = 2, "второй", "третий"));
		
		ИмяПоляСтрокиТаблицы = "ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа" + СчМесяцев + "Месяц";
		
		Если СтрокаРСВ1[ИмяПоляСтрокиТаблицы] <> СтрокаПерсучета[ИмяПоляСтрокиТаблицы] Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Общая сумма базы для начисления взносов, указанная за %1 месяц отчетного периода в разделе 2.2 Расчета РСВ-1 (%2) не совпадает с данными перс.учета (%3).'"),
								ОписаниеМесяца,
								Формат(СтрокаРСВ1[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"),
								Формат(СтрокаПерсучета[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"));
								
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(
				Ошибки,
				РСВ_1,
				Отчет,
				ТекстОшибки, , , , , , ,
				Отказ);
		КонецЕсли;
		
		ИмяПоляСтрокиТаблицы = "ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа" + СчМесяцев + "Месяц";
		Если СтрокаРСВ1[ИмяПоляСтрокиТаблицы] <> СтрокаПерсучета[ИмяПоляСтрокиТаблицы] Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Общая сумма базы для начисления взносов, указанная за %1 месяц отчетного периода в разделе 2.3 Расчета РСВ-1 (%2) не совпадает с данными перс.учета (%3).'"),
								ОписаниеМесяца,
								Формат(СтрокаРСВ1[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"),
								Формат(СтрокаПерсучета[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"));
								
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(
				Ошибки,
				РСВ_1,
				Отчет,
				ТекстОшибки, , , , , , ,
				Отказ);
					
		КонецЕсли;
	КонецЦикла;
	
	// П. 7.7.9-28 По всем разделам 6 значение, указанное в графе 4 или (и) 5 строки 701 (711) при наличии кода «О4» в
	// графе 3 подраздела 6.7  должно быть равно значению, указанному в графе 4 строки 243 подраздела 2.4  или (и) «2»
	// соответственно.
	Для СчСтрокУсловий = 1 По 5 Цикл
		СтрокаРСВ1 = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку[СчСтрокУсловий];
		СтрокаПерсучета = ДанныеРазделов6.ИтогиПоВредномуЗаработку.Найти(СтрокаРСВ1.КлассУсловийТруда, "КлассУсловийТруда");
		ОписаниеУсловийТруда = СоответствиеКлассовУсловийТруда[СтрокаРСВ1.КлассУсловийТруда];
		Для СчМесяцев = 1 По 3 Цикл
			ОписаниеМесяца = ?(СчМесяцев = 1, "первый", ?(СчМесяцев = 2, "второй", "третий"));
			
			ИмяПоляСтрокиТаблицы = "ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа" + СчМесяцев + "Месяц";
			Если СтрокаРСВ1[ИмяПоляСтрокиТаблицы] <> СтрокаПерсучета[ИмяПоляСтрокиТаблицы] Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Общая сумма базы для начисления взносов, указанная за %1 месяц отчетного периода в разделе 2.4 с кодом основания «1» по %2 условиям труда Расчета РСВ-1 (%3) не совпадает с данными перс.учета (%4).'"),
									ОписаниеМесяца,
									ОписаниеУсловийТруда,
									Формат(СтрокаРСВ1[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"),
									Формат(СтрокаПерсучета[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"));
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(
					Ошибки,
					РСВ_1,
					Отчет,
					ТекстОшибки, , , , , , ,
					Отказ);
				
			КонецЕсли;
			
			ИмяПоляСтрокиТаблицы = "ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа" + СчМесяцев + "Месяц";
			Если СтрокаРСВ1[ИмяПоляСтрокиТаблицы] <> СтрокаПерсучета[ИмяПоляСтрокиТаблицы] Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Общая сумма базы для начисления взносов, указанная за %1 месяц отчетного периода в разделе 2.4 с кодом основания «2» по %2 условиям труда Расчета РСВ-1 (%3) не совпадает с данными перс.учета (%4).'"),
									ОписаниеМесяца,
									ОписаниеУсловийТруда,
									Формат(СтрокаРСВ1[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"),
									Формат(СтрокаПерсучета[ИмяПоляСтрокиТаблицы], "ЧДЦ=2; ЧН=0"));
													
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(
					Ошибки,
					РСВ_1,
					Отчет,
					ТекстОшибки, , , , , , ,
					Отказ);
	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; 
	
	СоответствиеКатегорий = СоответствиеКатегорий();
	
	// При наличии в РСВ-1 указанных кодов тарифа обязательно должны быть формы Раздела 6 с соответствующими кодами
	// категорий застрахованных лиц.
	СтрокаКатегорий = "";
	Для каждого Элемент Из ДанныеРСВ.КатегорииСоответствующиеТарифамРСВ Цикл
		Если ЗначениеЗаполнено(Элемент) И ДанныеРазделов6.ИспользуемыеКатегории.Найти(Элемент) = Неопределено Тогда
			СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Элемент, СоответствиеКатегорий)
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Отсутствуют Разделы 6 по категориям %1, соответствующим указанным в Расчете РСВ-1 кодам тарифа.'"),
						СтрокаКатегорий);
						
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстОшибки, , , , , , , Отказ); 				
	КонецЕсли;
	
	СтрокаКатегорий = "";
	Для каждого Значение Из ДанныеРазделов6.ИспользуемыеКатегории Цикл
		Если ДанныеРСВ.КатегорииСоответствующиеТарифамРСВ.Найти(Значение) = Неопределено Тогда
			СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Значение, СоответствиеКатегорий);
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'В Расчете РСВ-1 отсутствует Раздел 2 с кодом тарифа, соответствующим категориям %1.'"),
						СтрокаКатегорий);

		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхРСВ1(Ошибки, РСВ_1, Отчет, ТекстОшибки, , , , , , ,Отказ); 		
	КонецЕсли;
	
КонецПроцедуры	

Процедура ПроверитьСоответствиеИсходныхИКорректируемыхСведений(Отказ)
	ДокументыКомплекта = СписокПачекСЗВ.ВыгрузитьКолонку("ПачкаДокументов");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументыКомплекта", ДокументыКомплекта);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиКорректирующихДокументов.Ссылка,
	|	СотрудникиКорректирующихДокументов.Сотрудник,
	|	СотрудникиКорректирующихДокументов.НомерСтроки
	|ПОМЕСТИТЬ ВТСотрудникиКорректирующихДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК СотрудникиКорректирующихДокументов
	|ГДЕ
	|	СотрудникиКорректирующихДокументов.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И СотрудникиКорректирующихДокументов.Ссылка.Ссылка В(&ДокументыКомплекта)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиКорректирующихДокументов.Ссылка,
	|	СотрудникиКорректирующихДокументов.Сотрудник,
	|	СотрудникиКорректирующихДокументов.НомерСтроки
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК СотрудникиКорректирующихДокументов
	|ГДЕ
	|	СотрудникиКорректирующихДокументов.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И СотрудникиКорректирующихДокументов.Ссылка.Ссылка В(&ДокументыКомплекта)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиКорректирующихДокументов.Ссылка,
	|	СотрудникиКорректирующихДокументов.Сотрудник,
	|	СотрудникиКорректирующихДокументов.НомерСтроки
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК СотрудникиКорректирующихДокументов
	|ГДЕ
	|	СотрудникиКорректирующихДокументов.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И СотрудникиКорректирующихДокументов.Ссылка.Ссылка В(&ДокументыКомплекта)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиКорректирующихДокументов.Ссылка,
	|	СотрудникиКорректирующихДокументов.Сотрудник,
	|	СотрудникиКорректирующихДокументов.НомерСтроки
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК СотрудникиКорректирующихДокументов
	|ГДЕ
	|	СотрудникиКорректирующихДокументов.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И СотрудникиКорректирующихДокументов.Ссылка.Ссылка В(&ДокументыКомплекта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиКорректирующихДокументов.Ссылка,
	|	СотрудникиКорректирующихДокументов.Сотрудник,
	|	СотрудникиКорректирующихДокументов.Сотрудник.Наименование КАК Наименование,
	|	СотрудникиКорректирующихДокументов.НомерСтроки
	|ИЗ
	|	ВТСотрудникиКорректирующихДокументов КАК СотрудникиКорректирующихДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|		ПО СотрудникиКорректирующихДокументов.Сотрудник = ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка В (&ДокументыКомплекта))
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ))
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник ЕСТЬ NULL ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Ошибки = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		ШаблонОшибки = НСтр("ru = 'Сотрудник %1: при наличии корректирующих сведений, данные по сотруднику обязательно должны присутствовать в пачках исходных сведений Раздела 6.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Выборка.Наименование);
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(Ошибки, Выборка.Ссылка, Выборка.НомерСтроки, ТекстОшибки,, Отказ);	
	КонецЦикла;	
КонецПроцедуры	

Функция СоответствиеКодовТарифам()	
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	УчетСтраховыхВзносов.СоздатьВТКодыВидовТарифаСтраховыхВзносов(ОтчетныйПериод, ОтчетныйПериод, МенеджерВТ);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КодыВидовТарифаСтраховыхВзносов.ВидТарифаСтраховыхВзносов,
	|	КодыВидовТарифаСтраховыхВзносов.КодПФР
	|ИЗ
	|	ВТКодыВидовТарифаСтраховыхВзносов КАК КодыВидовТарифаСтраховыхВзносов
	|ГДЕ
	|	&ОтчетныйГод = КодыВидовТарифаСтраховыхВзносов.РасчетныйПериод
	|";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	СоответствиеТарифов = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		СоответствиеТарифов.Вставить(Выборка.КодПФР, Выборка.ВидТарифаСтраховыхВзносов);			
	КонецЦикла;
	
	Возврат СоответствиеТарифов;
	
КонецФункции

Функция СоответствиеКатегорий()
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	ПерсонифицированныйУчет.СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(МенеджерВТ, Год(ОтчетныйПериод));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	СоответствиеТарифаИВидаЗЛКатегории.ИсходнаяКатегорияЗастрахованныхЛиц
	|ИЗ
	|	ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|ГДЕ
	|	&ОтчетныйГод МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	СоответствиеКатегорий = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		СоответствиеКатегорий.Вставить(Выборка.КатегорияЗастрахованныхЛиц, Выборка.ИсходнаяКатегорияЗастрахованныхЛиц);			
	КонецЦикла;
	
	Возврат СоответствиеКатегорий;
	
КонецФункции	

Функция ДочерниеКатегории(Категория, СоответствиеКатегорий)
	
	СтрокаСообщения = "";
	Для каждого ЭлементСоответствияКатегорий Из СоответствиеКатегорий Цикл
		Если Категория = ЭлементСоответствияКатегорий.Значение Тогда
			СтрокаСообщения = СтрокаСообщения + ?(ПустаяСтрока(СтрокаСообщения),"",", ") + Строка(ЭлементСоответствияКатегорий.Ключ)
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаСообщения
	
КонецФункции 

Функция СтруктураДанныхРСВ_1()
	ДанныеРСВ = Новый Структура;
	
	ДанныеРСВ.Вставить("ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде", Ложь);
	
	ДанныеРСВ.Вставить("Организация"); 
		
	ДанныеРСВ.Вставить("КоличествоЗастрахованных", 0);
	
	ДанныеРСВ.Вставить("ПоказателиОтчета");		
	
	ДанныеРСВ.Вставить("ОтчетныйПериодРСВ1", '00010101');
	
	ДанныеРСВ.Вставить("НачисленоРСВ1НаСтраховую", 0);
	ДанныеРСВ.Вставить("НачисленоРСВ1НаНакопительную", 0);
	ДанныеРСВ.Вставить("УплаченоРСВ1НаСтраховую", 0);
	ДанныеРСВ.Вставить("УплаченоРСВ1НаНакопительную", 0);

	ДанныеРСВ.Вставить("ЗадолженностьНаСтраховуюНаНачалоПериода", 0);
	ДанныеРСВ.Вставить("ЗадолженностьНаНакопительнуюНаНачалоПериода", 0);
	ДанныеРСВ.Вставить("ЗадолженностьНаСтраховуюНаКонецПериода", 0);
	ДанныеРСВ.Вставить("ЗадолженностьНаНакопительнуюНаКонецПериода", 0);
		
	ДанныеРСВ.Вставить("УплаченоРСВ1НаСтраховую ", 0);
	ДанныеРСВ.Вставить("УплаченоРСВ1НаНакопительную", 0);
	
	ДанныеРСВ.Вставить("НачисленоРСВ1НаСтраховуюПоКатегориям", Новый Соответствие);
	ДанныеРСВ.Вставить("НачисленоРСВ1НаНакопительнуюПоКатегориям", Новый Соответствие);
	ДанныеРСВ.Вставить("ПоказателиНеоблагаемыхДоходов", Новый Соответствие);
	
	ДанныеРСВ.Вставить("ИтогиПоТарифам", ТаблицаИтогиРСВПоТарифам()); 
	ДанныеРСВ.Вставить("ИтогиРСВПоВредномуЗаработку", ТаблицаИтогиРСВПоВредномуЗаработку());
	
	ДанныеРСВ.Вставить("ОбъектОбложенияРСВ1", 0);
	ДанныеРСВ.Вставить("УменьшенныйОбъектОбложенияРСВ1", 0);
	ДанныеРСВ.Вставить("ОблагаемаяБазаРСВ1", 0);
	ДанныеРСВ.Вставить("БазаСверхПредельнойРСВ1", 0);
	
	ДанныеРСВ.Вставить("ОбъектОбложенияРСВ1За1Месяц", 0);
	ДанныеРСВ.Вставить("ОблагаемаяБазаРСВ1За1Месяц", 0);
	ДанныеРСВ.Вставить("БазаСверхПредельнойРСВ1За1Месяц", 0);
	ДанныеРСВ.Вставить("ОбъектОбложенияРСВ1За2Месяц", 0);
	ДанныеРСВ.Вставить("УменьшенныйОбъектОбложенияРСВ1За2Месяц", 0);
	ДанныеРСВ.Вставить("ОблагаемаяБазаРСВ1За2Месяц", 0);
	ДанныеРСВ.Вставить("БазаСверхПредельнойРСВ1За2Месяц", 0);
	ДанныеРСВ.Вставить("ОбъектОбложенияРСВ1За3Месяц", 0);
	ДанныеРСВ.Вставить("УменьшенныйОбъектОбложенияРСВ1За3Месяц", 0);
	ДанныеРСВ.Вставить("ОблагаемаяБазаРСВ1За3Месяц", 0);
	ДанныеРСВ.Вставить("БазаСверхПредельнойРСВ1За3Месяц", 0);

	ДанныеРСВ.Вставить("ОбъектОбложенияРСВ1Льготный", 0);
	ДанныеРСВ.Вставить("УменьшенныйОбъектОбложенияРСВ1Льготный", 0);
	ДанныеРСВ.Вставить("ОблагаемаяБазаРСВ1Льготная", 0);
		
	ДанныеРСВ.Вставить("ПрименяемыеТарифы", Новый Массив);
	ДанныеРСВ.Вставить("КатегорииСоответствующиеТарифамРСВ", Новый Массив);
	
	ДанныеРСВ.Вставить("Строка25003", 0);
	ДанныеРСВ.Вставить("Строка25004", 0);
	ДанныеРСВ.Вставить("Строка25005", 0);
	ДанныеРСВ.Вставить("Строка25006", 0);
	ДанныеРСВ.Вставить("Строка25103", 0);
	ДанныеРСВ.Вставить("Строка25104", 0);
	ДанныеРСВ.Вставить("Строка25105", 0);
	ДанныеРСВ.Вставить("Строка25106", 0);
	ДанныеРСВ.Вставить("Строка25203", 0);
	ДанныеРСВ.Вставить("Строка25204", 0);
	ДанныеРСВ.Вставить("Строка25205", 0);
	ДанныеРСВ.Вставить("Строка25206", 0);
	ДанныеРСВ.Вставить("Строка27603", 0);
	ДанныеРСВ.Вставить("Строка27604", 0);
	ДанныеРСВ.Вставить("Строка27605", 0);
	ДанныеРСВ.Вставить("Строка27606", 0);
	ДанныеРСВ.Вставить("Строка20604", 0);
	ДанныеРСВ.Вставить("Строка20605", 0);
	ДанныеРСВ.Вставить("Строка20606", 0);
			
	ДанныеРСВ.Вставить("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах", 0);
	ДанныеРСВ.Вставить("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах", 0);
		
	Возврат ДанныеРСВ;
	
КонецФункции	

Функция ДанныеРСВ_2010_2011()
	СоответствиеКодовТарифаКатегориям = ПерсонифицированныйУчет.СоответствиеКодовТарифаКатегориям(ОтчетныйПериод);
	
	ДанныеРСВ = СтруктураДанныхРСВ_1();	
	
	ДанныеРегламентированногоОтчета = РегламентированнаяОтчетность.ПолучитьДанныеРеглОтчета(РСВ_1);

	ПоказателиОтчета = ДанныеРегламентированногоОтчета.ДанныеРазделовРеглОтчета;	
	
	ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде = ДанныеРегламентированногоОтчета.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде;
	
	Если НЕ ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде Тогда
		Возврат ДанныеРСВ;
	КонецЕсли;	
	
	ДанныеРСВ.Организация = ДанныеРегламентированногоОтчета.Организация; 
	
	КоличествоЗастрахованных = 0;
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.КолЗастрахованных) Тогда
		КоличествоЗастрахованных = Число(ПоказателиОтчета.Титульный.КолЗастрахованных);
	КонецЕсли;
	
	ДанныеРСВ.КоличествоЗастрахованных = КоличествоЗастрахованных;
	
	ДанныеРСВ.ПоказателиОтчета = ПоказателиОтчета;		
	
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.ОтчетГод) И ЗначениеЗаполнено(ПоказателиОтчета.Титульный.Период) Тогда 
		ОтчетныйПериодРСВ1 = Дата(Число(ПоказателиОтчета.Титульный.ОтчетГод), Число(ПоказателиОтчета.Титульный.Период), 1);
		ОтчетныйПериодРСВ1 = ПерсонифицированныйУчетКлиентСервер.ПолучитьНачалоОтчетногоПериода(ОтчетныйПериодРСВ1);
	Иначе 
		ОтчетныйПериодРСВ1 = '00010101';
	КонецЕсли;		
	ДанныеРСВ.ОтчетныйПериодРСВ1 = ОтчетныйПериодРСВ1;
						
	ДанныеРСВ.НачисленоРСВ1НаСтраховую = 0;
	ДанныеРСВ.НачисленоРСВ1НаНакопительную = 0;
	ДанныеРСВ.УплаченоРСВ1НаСтраховую = 0;
	ДанныеРСВ.УплаченоРСВ1НаНакопительную = 0;
	
	ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода = 0;
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода = 0;
	ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода = 0;
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода = 0;
		
	ДанныеРСВ.УплаченоРСВ1НаСтраховую  = 0;
	ДанныеРСВ.УплаченоРСВ1НаНакопительную = 0;
			
	ДанныеРСВ.ОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1 = 0;
	
	ДанныеРСВ.ОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная = 0;
	
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = 0;
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = 0;
		
	ЗадолженностьНаСтраховуюНаНачалоПериода = 0;
	ЗадолженностьНаНакопительнуюНаНачалоПериода = 0;
	ЗадолженностьНаСтраховуюНаКонецПериода = 0;
	ЗадолженностьНаНакопительнуюНаКонецПериода = 0;

	Разделы = ПоказателиОтчета.Раздел12;
	Для каждого ЛистДанных Из Разделы Цикл
		ПоказателиРазделов = ЛистДанных.Данные;
		
		КодТарифа = ПоказателиРазделов.П000200001001;
		ЗначениеПеречисления = СоответствиеКодовТарифаКатегориям[КодТарифа];
		Если Не ЗначениеЗаполнено(ЗначениеПеречисления) Тогда
			Продолжить;
		КонецЕсли;
		
		НачисленоПоТарифу = ДанныеРСВ.ИтогиПоТарифам.Добавить();
		НачисленоПоТарифу.КодТарифа = КодТарифа;
		НачисленоПоТарифу.КатегорияЗастрахованныхЛиц = ЗначениеПеречисления;
		НачисленоПоТарифу.НачисленоСтраховаяЗаОтчетныйПериод = ПоказателиРазделов.П000200024104 + ПоказателиРазделов.П000200024105 + ПоказателиРазделов.П000200024106;
		НачисленоПоТарифу.НачисленоНакопительнаяЗаОтчетныйПериод = ПоказателиРазделов.П000200024204 + ПоказателиРазделов.П000200024205 + ПоказателиРазделов.П000200024206; 
		НачисленоПоТарифу.НачисленоСтраховаяЗаГод = ПоказателиРазделов.П000200024103;
		НачисленоПоТарифу.НачисленоНакопительнаяЗаГод = ПоказателиРазделов.П000200024203; 
		
		ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[ЗначениеПеречисления]) + ПоказателиРазделов.П000200024104 + ПоказателиРазделов.П000200024105 + ПоказателиРазделов.П000200024106);
		ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[ЗначениеПеречисления]) + ПоказателиРазделов.П000200024204 + ПоказателиРазделов.П000200024205 + ПоказателиРазделов.П000200024206);
		
		ДанныеРСВ.НачисленоРСВ1НаСтраховую = ДанныеРСВ.НачисленоРСВ1НаСтраховую + ПоказателиРазделов.П000100011403;
		ДанныеРСВ.НачисленоРСВ1НаНакопительную = ДанныеРСВ.НачисленоРСВ1НаНакопительную + ПоказателиРазделов.П000100011404;
		
		ЗадолженностьНаСтраховуюНаНачалоПериода = ЗадолженностьНаСтраховуюНаНачалоПериода + ПоказателиРазделов.П000100010003 + (ПоказателиРазделов.П000100011003 - ПоказателиРазделов.П000100011403) - (ПоказателиРазделов.П000100014003 - ПоказателиРазделов.П000100014403);
		ЗадолженностьНаНакопительнуюНаНачалоПериода = ЗадолженностьНаНакопительнуюНаНачалоПериода + ПоказателиРазделов.П000100010004 + (ПоказателиРазделов.П000100011004 - ПоказателиРазделов.П000100011404) - (ПоказателиРазделов.П000100014004 - ПоказателиРазделов.П000100014404);
		ЗадолженностьНаСтраховуюНаКонецПериода = ЗадолженностьНаСтраховуюНаКонецПериода + ПоказателиРазделов.П000100015003;
		ЗадолженностьНаНакопительнуюНаКонецПериода = ЗадолженностьНаНакопительнуюНаКонецПериода + ПоказателиРазделов.П000100015004;
		
		ДанныеРСВ.УплаченоРСВ1НаСтраховую = ДанныеРСВ.УплаченоРСВ1НаСтраховую + ПоказателиРазделов.П000100014403;
		ДанныеРСВ.УплаченоРСВ1НаНакопительную = ДанныеРСВ.УплаченоРСВ1НаНакопительную + ПоказателиРазделов.П000100014404;
		
		ДанныеРСВ.ОбъектОбложенияРСВ1 = ДанныеРСВ.ОбъектОбложенияРСВ1 + ПоказателиРазделов.П000200020003;
		ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 = ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 + ПоказателиРазделов.П000200020003 - ПоказателиРазделов.П000200021003 - ПоказателиРазделов.П000200021403 - ПоказателиРазделов.П000200021503 - ПоказателиРазделов.П000200021603;
		ДанныеРСВ.ОблагаемаяБазаРСВ1 = ДанныеРСВ.ОблагаемаяБазаРСВ1 + ПоказателиРазделов.П000200022003 + ПоказателиРазделов.П000200022103;
	КонецЦикла; 
	
	ДанныеРСВ.УплаченоРСВ1НаСтраховую = ДанныеРСВ.УплаченоРСВ1НаСтраховую - ?(ЗадолженностьНаСтраховуюНаКонецПериода < 0, -ЗадолженностьНаСтраховуюНаКонецПериода, 0) + ?(ЗадолженностьНаСтраховуюНаНачалоПериода < 0, -ЗадолженностьНаСтраховуюНаНачалоПериода,0);
	ДанныеРСВ.УплаченоРСВ1НаНакопительную = ДанныеРСВ.УплаченоРСВ1НаНакопительную - ?(ЗадолженностьНаНакопительнуюНаКонецПериода < 0, -ЗадолженностьНаНакопительнуюНаКонецПериода, 0) + ?(ЗадолженностьНаНакопительнуюНаНачалоПериода < 0, -ЗадолженностьНаНакопительнуюНаНачалоПериода,0);
	
	Раздел3 = ПоказателиОтчета.Раздел30;
	
	ДанныеРСВ.ОбъектОбложенияРСВ1Льготный = Раздел3.П000300030003;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный = Раздел3.П000300030003 - Раздел3.П000300031003 - Раздел3.П000300031403 - Раздел3.П000300031503 - Раздел3.П000300031603;
	ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная = Раздел3.П000300032003 + Раздел3.П000300032103;
	
	СвернутьТаблицуИтоговоПоТарифамРСВ1(ДанныеРСВ.ИтогиПоТарифам);

	Возврат ДанныеРСВ;
КонецФункции	

Функция ДанныеРСВЗа2012()
	
	СоответствиеКодовТарифаКатегориям = ПерсонифицированныйУчет.СоответствиеКодовТарифаКатегориям(ОтчетныйПериод);
	
	ДанныеРСВ = СтруктураДанныхРСВ_1();	
	
	ДанныеРегламентированногоОтчета = РегламентированнаяОтчетность.ПолучитьДанныеРеглОтчета(РСВ_1);

	ПоказателиОтчета = ДанныеРегламентированногоОтчета.ДанныеРазделовРеглОтчета;	
	
	ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде = ДанныеРегламентированногоОтчета.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде;
	
	Если НЕ ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде Тогда
		Возврат ДанныеРСВ;
	КонецЕсли;	
	
	ДанныеРСВ.Организация = ДанныеРегламентированногоОтчета.Организация; 
	
	КоличествоЗастрахованных = 0;
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.КолЗастрахованных) Тогда
		КоличествоЗастрахованных = Число(ПоказателиОтчета.Титульный.КолЗастрахованных)
	КонецЕсли;
	
	ДанныеРСВ.КоличествоЗастрахованных = КоличествоЗастрахованных;
	
	ДанныеРСВ.ПоказателиОтчета = ПоказателиОтчета;		
	
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.ОтчетГод) И ЗначениеЗаполнено(ПоказателиОтчета.Титульный.Период) Тогда 
		ОтчетныйПериодРСВ1 = Дата(Число(ПоказателиОтчета.Титульный.ОтчетГод), Число(ПоказателиОтчета.Титульный.Период), 1);
		ОтчетныйПериодРСВ1 = ПерсонифицированныйУчетКлиентСервер.ПолучитьНачалоОтчетногоПериода(ОтчетныйПериодРСВ1);
	Иначе 
		ОтчетныйПериодРСВ1 = '00010101';
	КонецЕсли;		
	ДанныеРСВ.ОтчетныйПериодРСВ1 = ОтчетныйПериодРСВ1;
	
	Раздел1 = ПоказателиОтчета.Раздел1;
					
	ДанныеРСВ.НачисленоРСВ1НаСтраховую = Раздел1.П000100011403;
	ДанныеРСВ.НачисленоРСВ1НаНакопительную = Раздел1.П000100011404;
	ДанныеРСВ.УплаченоРСВ1НаСтраховую = Раздел1.П000100014403;
	ДанныеРСВ.УплаченоРСВ1НаНакопительную = Раздел1.П000100014404;
	
	ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода = Раздел1.П000100010003 + (Раздел1.П000100011003 - Раздел1.П000100011403) - (Раздел1.П000100014003 - Раздел1.П000100014403);
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода = Раздел1.П000100010004 + (Раздел1.П000100011004 - Раздел1.П000100011404) - (Раздел1.П000100014004 - Раздел1.П000100014404);
	ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода = Раздел1.П000100015003;
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода = Раздел1.П000100015004;
		
	ДанныеРСВ.УплаченоРСВ1НаСтраховую  = ДанныеРСВ.УплаченоРСВ1НаСтраховую - ?(ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода < 0, -ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода, 0) + ?(ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода < 0, -ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода,0);
	ДанныеРСВ.УплаченоРСВ1НаНакопительную = ДанныеРСВ.УплаченоРСВ1НаНакопительную - ?(ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода < 0, -ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода, 0) + ?(ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода < 0, -ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода,0); 
	
	ДанныеРСВ.ОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1 = 0;
	
	ДанныеРСВ.ОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная = 0;
				
	ДанныеРСВ.Строка25003 = 0;
	ДанныеРСВ.Строка25004 = 0;
	ДанныеРСВ.Строка25005 = 0;
	ДанныеРСВ.Строка25006 = 0;
	ДанныеРСВ.Строка25103 = 0;
	ДанныеРСВ.Строка25104 = 0;
	ДанныеРСВ.Строка25105 = 0;
	ДанныеРСВ.Строка25106 = 0;
	ДанныеРСВ.Строка25203 = 0;
	ДанныеРСВ.Строка25204 = 0;
	ДанныеРСВ.Строка25205 = 0;
	ДанныеРСВ.Строка25206 = 0;
	ДанныеРСВ.Строка27603 = 0;
	ДанныеРСВ.Строка27604 = 0;
	ДанныеРСВ.Строка27605 = 0;
	ДанныеРСВ.Строка27606 = 0;
	
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = 0;
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = 0;
		
	Разделы = ПоказателиОтчета.Раздел2;
	Для каждого ЛистДанных Из Разделы Цикл
		ПоказателиРазделов = ЛистДанных.Данные;
		
		КодТарифа = ПоказателиРазделов.П000200001001;
		
		ЗначениеПеречисления = СоответствиеКодовТарифаКатегориям.Получить(КодТарифа);
		
		Если ЗначениеПеречисления = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ДанныеРСВ.ПрименяемыеТарифы.Найти(КодТарифа) = Неопределено Тогда
			ДанныеРСВ.ПрименяемыеТарифы.Добавить(КодТарифа);					
		КонецЕсли;	
		
		НачисленоПоТарифу = ДанныеРСВ.ИтогиПоТарифам.Добавить();
		НачисленоПоТарифу.КодТарифа = КодТарифа;
		НачисленоПоТарифу.КатегорияЗастрахованныхЛиц = ЗначениеПеречисления;
		НачисленоПоТарифу.НачисленоСтраховаяЗаОтчетныйПериод = ПоказателиРазделов.П000200025004 + ПоказателиРазделов.П000200025005 + ПоказателиРазделов.П000200025006;
		НачисленоПоТарифу.НачисленоНакопительнаяЗаОтчетныйПериод = ПоказателиРазделов.П000200025104 + ПоказателиРазделов.П000200025105 + ПоказателиРазделов.П000200025106; 
		НачисленоПоТарифу.НачисленоСтраховаяЗаГод = ПоказателиРазделов.П000200025003;
		НачисленоПоТарифу.НачисленоНакопительнаяЗаГод = ПоказателиРазделов.П000200025103; 
		
		ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[ЗначениеПеречисления]) + ПоказателиРазделов.П000200025004 + ПоказателиРазделов.П000200025005 + ПоказателиРазделов.П000200025006);
		ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[ЗначениеПеречисления]) + ПоказателиРазделов.П000200025104 + ПоказателиРазделов.П000200025105 + ПоказателиРазделов.П000200025106);
						
		ДанныеРСВ.ПоказателиНеоблагаемыхДоходов.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.ПоказателиНеоблагаемыхДоходов[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.ПоказателиНеоблагаемыхДоходов[ЗначениеПеречисления])
				+ ПоказателиРазделов.П000200021103 + ПоказателиРазделов.П000200021203 + ПоказателиРазделов.П000200021303
				+ ПоказателиРазделов.П000200022103 + ПоказателиРазделов.П000200022203 + ПоказателиРазделов.П000200022303
				+ ?(ЗначениеПеречисления = Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР, 0, ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303));
		
		Если ЗначениеПеречисления = Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР Тогда
			ДанныеРСВ.ОбъектОбложенияРСВ1 = ДанныеРСВ.ОбъектОбложенияРСВ1 + ПоказателиРазделов.П000200020103 + ПоказателиРазделов.П000200020203 + ПоказателиРазделов.П000200020303;
			ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 = ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 + ПоказателиРазделов.П000200020103 + ПоказателиРазделов.П000200020203 + ПоказателиРазделов.П000200020303 
					- ПоказателиРазделов.П000200021103 - ПоказателиРазделов.П000200021203 - ПоказателиРазделов.П000200021303;
			ДанныеРСВ.ОблагаемаяБазаРСВ1 = ДанныеРСВ.ОблагаемаяБазаРСВ1 + ПоказателиРазделов.П000200024003 + ПоказателиРазделов.П000200024103 + ПоказателиРазделов.П000200023103 + ПоказателиРазделов.П000200023203 + ПоказателиРазделов.П000200023303;
		Иначе
			ДанныеРСВ.ОбъектОбложенияРСВ1Льготный = ДанныеРСВ.ОбъектОбложенияРСВ1Льготный + ПоказателиРазделов.П000200020103 + ПоказателиРазделов.П000200020203 + ПоказателиРазделов.П000200020303;
			ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный = ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный + ПоказателиРазделов.П000200020103 + ПоказателиРазделов.П000200020203 + ПоказателиРазделов.П000200020303 
					- ПоказателиРазделов.П000200021103 - ПоказателиРазделов.П000200021203 - ПоказателиРазделов.П000200021303 
					- ПоказателиРазделов.П000200023103 - ПоказателиРазделов.П000200023203 - ПоказателиРазделов.П000200023303;
			ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная = ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная + ПоказателиРазделов.П000200024003 + ПоказателиРазделов.П000200024103;
		КонецЕсли;		
			
		ДанныеРСВ.Строка25003 = ДанныеРСВ.Строка25003 + ПоказателиРазделов.П000200025003;
		ДанныеРСВ.Строка25004 = ДанныеРСВ.Строка25004 + ПоказателиРазделов.П000200025004;
		ДанныеРСВ.Строка25005 = ДанныеРСВ.Строка25005 + ПоказателиРазделов.П000200025005;
		ДанныеРСВ.Строка25006 = ДанныеРСВ.Строка25006 + ПоказателиРазделов.П000200025006;
		ДанныеРСВ.Строка25103 = ДанныеРСВ.Строка25103 + ПоказателиРазделов.П000200025103;
		ДанныеРСВ.Строка25104 = ДанныеРСВ.Строка25104 + ПоказателиРазделов.П000200025104;
		ДанныеРСВ.Строка25105 = ДанныеРСВ.Строка25105 + ПоказателиРазделов.П000200025105;
		ДанныеРСВ.Строка25106 = ДанныеРСВ.Строка25106 + ПоказателиРазделов.П000200025106;
		ДанныеРСВ.Строка25203 = ДанныеРСВ.Строка25203 + ПоказателиРазделов.П000200025203;
		ДанныеРСВ.Строка25204 = ДанныеРСВ.Строка25204 + ПоказателиРазделов.П000200025204;
		ДанныеРСВ.Строка25205 = ДанныеРСВ.Строка25205 + ПоказателиРазделов.П000200025205;
		ДанныеРСВ.Строка25206 = ДанныеРСВ.Строка25206 + ПоказателиРазделов.П000200025206;
		ДанныеРСВ.Строка27603 = ДанныеРСВ.Строка27603 + ПоказателиРазделов.П000200027603;
		ДанныеРСВ.Строка27604 = ДанныеРСВ.Строка27604 + ПоказателиРазделов.П000200027604;
		ДанныеРСВ.Строка27605 = ДанныеРСВ.Строка27605 + ПоказателиРазделов.П000200027605;
		ДанныеРСВ.Строка27606 = ДанныеРСВ.Строка27606 + ПоказателиРазделов.П000200027606;
		
	КонецЦикла; 
		
	ДанныеРСВ.НачисленоРСВ1НаСтраховую = ДанныеРСВ.НачисленоРСВ1НаСтраховую - ДанныеРСВ.Строка25204 - ДанныеРСВ.Строка25205 - ДанныеРСВ.Строка25206;
	
	СвернутьТаблицуИтоговоПоТарифамРСВ1(ДанныеРСВ.ИтогиПоТарифам);

	Возврат ДанныеРСВ;

КонецФункции

Функция ДанныеРСВЗа2013()
	СоответствиеКодовТарифаКатегориям = ПерсонифицированныйУчет.СоответствиеКодовТарифаКатегориям(ОтчетныйПериод);
	
	ДанныеРСВ = СтруктураДанныхРСВ_1();	
	
	ДанныеРегламентированногоОтчета = РегламентированнаяОтчетность.ПолучитьДанныеРеглОтчета(РСВ_1);

	ПоказателиОтчета = ДанныеРегламентированногоОтчета.ДанныеРазделовРеглОтчета;	
	
	ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде = ДанныеРегламентированногоОтчета.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде;
	
	Если НЕ ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде Тогда
		Возврат ДанныеРСВ;
	КонецЕсли;	
	
	ДанныеРСВ.Организация = ДанныеРегламентированногоОтчета.Организация; 
	
	КоличествоЗастрахованных = 0;
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.КолЗастрахованных) Тогда
		КоличествоЗастрахованных = Число(ПоказателиОтчета.Титульный.КолЗастрахованных)
	КонецЕсли;
	
	ДанныеРСВ.КоличествоЗастрахованных = КоличествоЗастрахованных;
	
	ДанныеРСВ.ПоказателиОтчета = ПоказателиОтчета;		
	
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.ОтчетГод) И ЗначениеЗаполнено(ПоказателиОтчета.Титульный.Период) Тогда 
		ОтчетныйПериодРСВ1 = Дата(Число(ПоказателиОтчета.Титульный.ОтчетГод), Число(ПоказателиОтчета.Титульный.Период), 1);
		ОтчетныйПериодРСВ1 = ПерсонифицированныйУчетКлиентСервер.ПолучитьНачалоОтчетногоПериода(ОтчетныйПериодРСВ1);
	Иначе 
		ОтчетныйПериодРСВ1 = '00010101';
	КонецЕсли;		
	ДанныеРСВ.ОтчетныйПериодРСВ1 = ОтчетныйПериодРСВ1;
	
	Раздел1 = ПоказателиОтчета.Раздел1;
	
	ДанныеРСВ.НачисленоРСВ1НаСтраховую = Раздел1.П000100011403;
	ДанныеРСВ.НачисленоРСВ1НаНакопительную = Раздел1.П000100011404;
	ДанныеРСВ.УплаченоРСВ1НаСтраховую = Раздел1.П000100014403;
	ДанныеРСВ.УплаченоРСВ1НаНакопительную = Раздел1.П000100014404;

	ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода = Раздел1.П000100010003 + (Раздел1.П000100011003 - Раздел1.П000100011403) - (Раздел1.П000100014003 - Раздел1.П000100014403);
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода = Раздел1.П000100010004 + (Раздел1.П000100011004 - Раздел1.П000100011404) - (Раздел1.П000100014004 - Раздел1.П000100014404);
	ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода = Раздел1.П000100015003;
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода = Раздел1.П000100015004;
		
	ДанныеРСВ.УплаченоРСВ1НаСтраховую  = ДанныеРСВ.УплаченоРСВ1НаСтраховую - ?(ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода < 0, -ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода, 0) + ?(ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода < 0, -ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода,0);
	ДанныеРСВ.УплаченоРСВ1НаНакопительную = ДанныеРСВ.УплаченоРСВ1НаНакопительную - ?(ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода < 0, -ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода, 0) + ?(ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода < 0, -ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода,0);
		
	ДанныеРСВ.ОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1 = 0;
	
	ДанныеРСВ.ОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная = 0;
	
	ДанныеРСВ.Строка25204 = 0;
	ДанныеРСВ.Строка25205 = 0;
	ДанныеРСВ.Строка25206 = 0;
			
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = 0;
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = 0;
		
	Разделы = ПоказателиОтчета.Раздел2;
	Для каждого ЛистДанных Из Разделы Цикл
		ПоказателиРазделов = ЛистДанных.Данные;
		
		КодТарифа = ПоказателиРазделов.П000200001001;
		
		ЗначениеПеречисления = СоответствиеКодовТарифаКатегориям.Получить(КодТарифа);
		
		Если ЗначениеПеречисления = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ДанныеРСВ.ПрименяемыеТарифы.Найти(КодТарифа) = Неопределено Тогда
			ДанныеРСВ.ПрименяемыеТарифы.Добавить(КодТарифа);					
		КонецЕсли;	
		
		НачисленоПоТарифу = ДанныеРСВ.ИтогиПоТарифам.Добавить();
		НачисленоПоТарифу.КодТарифа = КодТарифа;
		НачисленоПоТарифу.КатегорияЗастрахованныхЛиц = ЗначениеПеречисления;
		НачисленоПоТарифу.НачисленоСтраховаяЗаОтчетныйПериод =  ПоказателиРазделов.П000210025004 + ПоказателиРазделов.П000210025005 + ПоказателиРазделов.П000210025006;
		НачисленоПоТарифу.НачисленоНакопительнаяЗаОтчетныйПериод =  ПоказателиРазделов.П000210025104 + ПоказателиРазделов.П000210025105 + ПоказателиРазделов.П000210025106; 
		НачисленоПоТарифу.НачисленоСтраховаяЗаГод = ПоказателиРазделов.П000210025003;
		НачисленоПоТарифу.НачисленоНакопительнаяЗаГод = ПоказателиРазделов.П000210025103; 

		ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.НачисленоРСВ1НаСтраховуюПоКатегориям[ЗначениеПеречисления]) + ПоказателиРазделов.П000210025004 + ПоказателиРазделов.П000210025005 + ПоказателиРазделов.П000210025006);
		ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.НачисленоРСВ1НаНакопительнуюПоКатегориям[ЗначениеПеречисления]) + ПоказателиРазделов.П000210025104 + ПоказателиРазделов.П000210025105 + ПоказателиРазделов.П000210025106);
				
		ДанныеРСВ.ПоказателиНеоблагаемыхДоходов.Вставить(ЗначениеПеречисления, ?(ДанныеРСВ.ПоказателиНеоблагаемыхДоходов[ЗначениеПеречисления] = Неопределено, 0, ДанныеРСВ.ПоказателиНеоблагаемыхДоходов[ЗначениеПеречисления])
												+ ПоказателиРазделов.П000210021104 + ПоказателиРазделов.П000210021204 + ПоказателиРазделов.П000210021304
												+ ПоказателиРазделов.П000210022104 + ПоказателиРазделов.П000210022204 + ПоказателиРазделов.П000210022304
												+ ПоказателиРазделов.П000210021105 + ПоказателиРазделов.П000210021205 + ПоказателиРазделов.П000210021305
												+ ПоказателиРазделов.П000210022105 + ПоказателиРазделов.П000210022205 + ПоказателиРазделов.П000210022305
												+ ПоказателиРазделов.П000210021106 + ПоказателиРазделов.П000210021206 + ПоказателиРазделов.П000210021306
												+ ПоказателиРазделов.П000210022106 + ПоказателиРазделов.П000210022206 + ПоказателиРазделов.П000210022306
												+ ?(ЗначениеПеречисления = Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР, 0,  
												ПоказателиРазделов.П000210023104 + ПоказателиРазделов.П000210023204 + ПоказателиРазделов.П000210023304
												+ ПоказателиРазделов.П000210023105 + ПоказателиРазделов.П000210023205 + ПоказателиРазделов.П000210023305
												+ ПоказателиРазделов.П000210023106 + ПоказателиРазделов.П000210023206 + ПоказателиРазделов.П000210023306));
		
		Если ЗначениеПеречисления = Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР Тогда
			ДанныеРСВ.ОбъектОбложенияРСВ1 = ДанныеРСВ.ОбъектОбложенияРСВ1 
					+ ПоказателиРазделов.П000210020104 + ПоказателиРазделов.П000210020204 + ПоказателиРазделов.П000210020304
					+ ПоказателиРазделов.П000210020105 + ПоказателиРазделов.П000210020205 + ПоказателиРазделов.П000210020305
					+ ПоказателиРазделов.П000210020106 + ПоказателиРазделов.П000210020206 + ПоказателиРазделов.П000210020306;
			ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 = ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 
					+ ПоказателиРазделов.П000210020104 + ПоказателиРазделов.П000210020204 + ПоказателиРазделов.П000210020304 
					- ПоказателиРазделов.П000210021104 - ПоказателиРазделов.П000210021204 - ПоказателиРазделов.П000210021304
					- ПоказателиРазделов.П000210022104 - ПоказателиРазделов.П000210022204 - ПоказателиРазделов.П000210022304
					+ ПоказателиРазделов.П000210020105 + ПоказателиРазделов.П000210020205 + ПоказателиРазделов.П000210020305 
					- ПоказателиРазделов.П000210021105 - ПоказателиРазделов.П000210021205 - ПоказателиРазделов.П000210021305
					- ПоказателиРазделов.П000210022105 - ПоказателиРазделов.П000210022205 - ПоказателиРазделов.П000210022305
					+ ПоказателиРазделов.П000210020106 + ПоказателиРазделов.П000210020206 + ПоказателиРазделов.П000210020306 
					- ПоказателиРазделов.П000210021106 - ПоказателиРазделов.П000210021206 - ПоказателиРазделов.П000210021306
					- ПоказателиРазделов.П000210022106 - ПоказателиРазделов.П000210022206 - ПоказателиРазделов.П000210022306;
			ДанныеРСВ.ОблагаемаяБазаРСВ1 = ДанныеРСВ.ОблагаемаяБазаРСВ1 
					+ ПоказателиРазделов.П000210024004 + ПоказателиРазделов.П000210024104 
					+ ПоказателиРазделов.П000210024005 + ПоказателиРазделов.П000210024105 + ПоказателиРазделов.П000210024006 + ПоказателиРазделов.П000210024106
					+ ПоказателиРазделов.П000210023104 + ПоказателиРазделов.П000210023204 + ПоказателиРазделов.П000210023304
					+ ПоказателиРазделов.П000210023105 + ПоказателиРазделов.П000210023205 + ПоказателиРазделов.П000210023305
					+ ПоказателиРазделов.П000210023106 + ПоказателиРазделов.П000210023206 + ПоказателиРазделов.П000210023306;
		Иначе
			ДанныеРСВ.ОбъектОбложенияРСВ1Льготный = ДанныеРСВ.ОбъектОбложенияРСВ1Льготный 
					+ ПоказателиРазделов.П000210020104 + ПоказателиРазделов.П000210020204 + ПоказателиРазделов.П000210020304
					+ ПоказателиРазделов.П000210020105 + ПоказателиРазделов.П000210020205 + ПоказателиРазделов.П000210020305
					+ ПоказателиРазделов.П000210020106 + ПоказателиРазделов.П000210020206 + ПоказателиРазделов.П000210020306;
			ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный = ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный 
					+ ПоказателиРазделов.П000210020104 + ПоказателиРазделов.П000210020204 + ПоказателиРазделов.П000210020304 
					- ПоказателиРазделов.П000210021104 - ПоказателиРазделов.П000210021204 - ПоказателиРазделов.П000210021304
					- ПоказателиРазделов.П000210022104 - ПоказателиРазделов.П000210022204 - ПоказателиРазделов.П000210022304
					- ПоказателиРазделов.П000210023104 - ПоказателиРазделов.П000210023204 - ПоказателиРазделов.П000210023304
					+ ПоказателиРазделов.П000210020105 + ПоказателиРазделов.П000210020205 + ПоказателиРазделов.П000210020305 
					- ПоказателиРазделов.П000210021105 - ПоказателиРазделов.П000210021205 - ПоказателиРазделов.П000210021305
					- ПоказателиРазделов.П000210022105 - ПоказателиРазделов.П000210022205 - ПоказателиРазделов.П000210022305
					- ПоказателиРазделов.П000210023105 - ПоказателиРазделов.П000210023205 - ПоказателиРазделов.П000210023305
					+ ПоказателиРазделов.П000210020106 + ПоказателиРазделов.П000210020206 + ПоказателиРазделов.П000210020306 
					- ПоказателиРазделов.П000210021106 - ПоказателиРазделов.П000210021206 - ПоказателиРазделов.П000210021306
					- ПоказателиРазделов.П000210022106 - ПоказателиРазделов.П000210022206 - ПоказателиРазделов.П000210022306
					- ПоказателиРазделов.П000210023106 - ПоказателиРазделов.П000210023206 - ПоказателиРазделов.П000210023306;
					
			ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная = ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная 
					+ ПоказателиРазделов.П000210024004 + ПоказателиРазделов.П000210024104 + ПоказателиРазделов.П000210024005 + ПоказателиРазделов.П000210024105 + ПоказателиРазделов.П000210024006 + ПоказателиРазделов.П000210024106;
		КонецЕсли;

		ДанныеРСВ.Строка25204 = ДанныеРСВ.Строка25204 + ПоказателиРазделов.П000210025204;
		ДанныеРСВ.Строка25205 = ДанныеРСВ.Строка25205 + ПоказателиРазделов.П000210025205;
		ДанныеРСВ.Строка25206 = ДанныеРСВ.Строка25206 + ПоказателиРазделов.П000210025206;
			
	КонецЦикла; 
		
	Раздел22 = ПоказателиОтчета.Раздел22;
	
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = Раздел22.П000220028304 + Раздел22.П000220028305 + Раздел22.П000220028306;
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах =  Раздел22.П000230029304 + Раздел22.П000230029305 + Раздел22.П000230029306;
	
	ДанныеРСВ.НачисленоРСВ1НаСтраховую = ДанныеРСВ.НачисленоРСВ1НаСтраховую - ДанныеРСВ.Строка25204 - ДанныеРСВ.Строка25205 - ДанныеРСВ.Строка25206;
	
	СвернутьТаблицуИтоговоПоТарифамРСВ1(ДанныеРСВ.ИтогиПоТарифам);
	
	Возврат ДанныеРСВ;
	
КонецФункции	

Функция ДанныеРСВЗа2014()
	СоответствиеКодовТарифаКатегориям = ПерсонифицированныйУчет.СоответствиеКодовТарифаКатегориям(ОтчетныйПериод);
	
	ДанныеРСВ = СтруктураДанныхРСВ_1();	
	
	ДанныеРегламентированногоОтчета = РегламентированнаяОтчетность.ПолучитьДанныеРеглОтчета(РСВ_1);

	ПоказателиОтчета = ДанныеРегламентированногоОтчета.ДанныеРазделовРеглОтчета;	
	
	ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде = ДанныеРегламентированногоОтчета.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде;
	
	Если НЕ ДанныеРСВ.ФормаРеглОтчетаДействуетВТекущемОтчетномПериоде 
		И ОтчетныйПериод < '20150101' Тогда
		
		Возврат ДанныеРСВ;
	КонецЕсли;	
	
	ДанныеРСВ.Организация = ДанныеРегламентированногоОтчета.Организация; 
	
	КоличествоЗастрахованных = 0;
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.КолЗастрахованных) Тогда
		КоличествоЗастрахованных = Число(ПоказателиОтчета.Титульный.КолЗастрахованных)
	КонецЕсли;
	
	ДанныеРСВ.КоличествоЗастрахованных = КоличествоЗастрахованных;
	
	ДанныеРСВ.ПоказателиОтчета = ПоказателиОтчета;		
	
	Если ЗначениеЗаполнено(ПоказателиОтчета.Титульный.ОтчетГод) 
		И (ЗначениеЗаполнено(ПоказателиОтчета.Титульный.Период) 
		Или Число(ПоказателиОтчета.Титульный.Период) = 0) Тогда 
		
		Если Число(ПоказателиОтчета.Титульный.Период) = 0 Тогда
			ОтчетныйПериодРСВ1 = Дата(Число(ПоказателиОтчета.Титульный.ОтчетГод), 12, 1);		
		Иначе	
			ОтчетныйПериодРСВ1 = Дата(Число(ПоказателиОтчета.Титульный.ОтчетГод), Число(ПоказателиОтчета.Титульный.Период), 1);
		КонецЕсли;
		
		ОтчетныйПериодРСВ1 = ПерсонифицированныйУчетКлиентСервер.ПолучитьНачалоОтчетногоПериода(ОтчетныйПериодРСВ1);
	Иначе 
		ОтчетныйПериодРСВ1 = '00010101';
	КонецЕсли;	
	
	ДанныеРСВ.ОтчетныйПериодРСВ1 = ОтчетныйПериодРСВ1;
	
	Раздел1 = ПоказателиОтчета.Раздел1;
	
	ДанныеРСВ.НачисленоРСВ1НаСтраховую = Раздел1.П000100011403;
	ДанныеРСВ.НачисленоРСВ1НаНакопительную = 0;
	ДанныеРСВ.УплаченоРСВ1НаСтраховую = Раздел1.П000100014403;

	ДанныеРСВ.ЗадолженностьНаСтраховуюНаНачалоПериода = 0;
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаНачалоПериода = 0;
	ДанныеРСВ.ЗадолженностьНаСтраховуюНаКонецПериода = 0;
	ДанныеРСВ.ЗадолженностьНаНакопительнуюНаКонецПериода = 0;
		
	ДанныеРСВ.ОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1 = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1 = 0;
	
	ДанныеРСВ.ОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.УменьшенныйОбъектОбложенияРСВ1Льготный = 0;
	ДанныеРСВ.ОблагаемаяБазаРСВ1Льготная = 0;
	
	ДанныеРСВ.Строка25204 = 0;
	ДанныеРСВ.Строка25205 = 0;
	ДанныеРСВ.Строка25206 = 0;
			
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = 0;
	ДанныеРСВ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = 0;
		
	Разделы = ПоказателиОтчета.Раздел21;
	Для каждого ЛистДанных Из Разделы Цикл
		ПоказателиРазделов = ЛистДанных.Данные;
		
		КодТарифа = ПоказателиРазделов.П000210001001;
		
		ЗначениеПеречисления = СоответствиеКодовТарифаКатегориям.Получить(КодТарифа);
		
		Если Не ЗначениеЗаполнено(КодТарифа)
			Или ЗначениеПеречисления = Неопределено Тогда
			
			Продолжить;
		КонецЕсли;	
		
		Если ДанныеРСВ.ПрименяемыеТарифы.Найти(КодТарифа) = Неопределено Тогда
			ДанныеРСВ.ПрименяемыеТарифы.Добавить(КодТарифа);					
		КонецЕсли;	
		
		ТребуютсяДанныеПерсучета = ЗначениеЗаполнено(ПоказателиРазделов.П000210020004) Или ЗначениеЗаполнено(ПоказателиРазделов.П000210020005) Или ЗначениеЗаполнено(ПоказателиРазделов.П000210020006);		
		
		Если ТребуютсяДанныеПерсучета  
			И ДанныеРСВ.КатегорииСоответствующиеТарифамРСВ.Найти(ЗначениеПеречисления) = Неопределено Тогда
			
			ДанныеРСВ.КатегорииСоответствующиеТарифамРСВ.Добавить(ЗначениеПеречисления);
		КонецЕсли;	
		
		ДанныеПоТарифу = ДанныеРСВ.ИтогиПоТарифам.Добавить();
		ДанныеПоТарифу.КодТарифа = КодТарифа;
		ДанныеПоТарифу.КатегорияЗастрахованныхЛиц = ЗначениеПеречисления;
		
		// 1-Й месяц отчетного периода.
		
		ДанныеПоТарифу.ОбъектОбложенияЗа1Месяц =  ПоказателиРазделов.П000210020004 - ПоказателиРазделов.П000210020104;
		ДанныеРСВ.ОбъектОбложенияРСВ1За1Месяц = ДанныеРСВ.ОбъектОбложенияРСВ1За1Месяц + ДанныеПоТарифу.ОбъектОбложенияЗа1Месяц;
		
		ДанныеПоТарифу.ОблагаемаяБазаЗа1Месяц = ПоказателиРазделов.П000210020404;
		ДанныеРСВ.ОблагаемаяБазаРСВ1За1Месяц = ДанныеРСВ.ОблагаемаяБазаРСВ1За1Месяц + ДанныеПоТарифу.ОблагаемаяБазаЗа1Месяц;

		ДанныеПоТарифу.БазаСверхПредельнойЗа1Месяц = ПоказателиРазделов.П000210020304;
		ДанныеРСВ.БазаСверхПредельнойРСВ1За1Месяц = ДанныеРСВ.БазаСверхПредельнойРСВ1За1Месяц + ДанныеПоТарифу.БазаСверхПредельнойЗа1Месяц;
		
		// 2-Й месяц отчетного периода.
		
		ДанныеПоТарифу.ОбъектОбложенияЗа2Месяц = ПоказателиРазделов.П000210020005 - ПоказателиРазделов.П000210020105;
		ДанныеРСВ.ОбъектОбложенияРСВ1За2Месяц = ДанныеРСВ.ОбъектОбложенияРСВ1За2Месяц + ДанныеПоТарифу.ОбъектОбложенияЗа2Месяц;
		
		ДанныеПоТарифу.ОблагаемаяБазаЗа2Месяц = ПоказателиРазделов.П000210020405;
		ДанныеРСВ.ОблагаемаяБазаРСВ1За2Месяц = ДанныеРСВ.ОблагаемаяБазаРСВ1За2Месяц + ДанныеПоТарифу.ОблагаемаяБазаЗа2Месяц;

		ДанныеПоТарифу.БазаСверхПредельнойЗа2Месяц = ПоказателиРазделов.П000210020305;
		ДанныеРСВ.БазаСверхПредельнойРСВ1За2Месяц = ДанныеРСВ.БазаСверхПредельнойРСВ1За2Месяц + ДанныеПоТарифу.БазаСверхПредельнойЗа2Месяц;

		// 3-Й месяц отчетного периода.
		
		ДанныеПоТарифу.ОбъектОбложенияЗа3Месяц =  ПоказателиРазделов.П000210020006 - ПоказателиРазделов.П000210020106;
		ДанныеРСВ.ОбъектОбложенияРСВ1За3Месяц = ДанныеРСВ.ОбъектОбложенияРСВ1За3Месяц + ДанныеПоТарифу.ОбъектОбложенияЗа3Месяц;
		
		ДанныеПоТарифу.ОблагаемаяБазаЗа3Месяц = ПоказателиРазделов.П000210020406;
		ДанныеРСВ.ОблагаемаяБазаРСВ1За3Месяц = ДанныеРСВ.ОблагаемаяБазаРСВ1За3Месяц + ДанныеПоТарифу.ОблагаемаяБазаЗа3Месяц;

		ДанныеПоТарифу.БазаСверхПредельнойЗа3Месяц = ПоказателиРазделов.П000210020306;
		ДанныеРСВ.БазаСверхПредельнойРСВ1За3Месяц = ДанныеРСВ.БазаСверхПредельнойРСВ1За3Месяц + ДанныеПоТарифу.БазаСверхПредельнойЗа3Месяц;
		
		ДанныеРСВ.Строка20604 = ДанныеРСВ.Строка20604 + ПоказателиРазделов.П000210020604;
		ДанныеРСВ.Строка20605 = ДанныеРСВ.Строка20605 + ПоказателиРазделов.П000210020605;
		ДанныеРСВ.Строка20606 = ДанныеРСВ.Строка20606 + ПоказателиРазделов.П000210020606;
		
		ДанныеПоТарифу.ОбъектОбложения = ДанныеПоТарифу.ОбъектОбложенияЗа1Месяц + ДанныеПоТарифу.ОбъектОбложенияЗа2Месяц + ДанныеПоТарифу.ОбъектОбложенияЗа3Месяц;
		ДанныеПоТарифу.ОблагаемаяБаза = ДанныеПоТарифу.ОблагаемаяБазаЗа1Месяц + ДанныеПоТарифу.ОблагаемаяБазаЗа2Месяц + ДанныеПоТарифу.ОблагаемаяБазаЗа3Месяц;
		ДанныеПоТарифу.БазаСверхПредельной = ДанныеПоТарифу.БазаСверхПредельнойЗа1Месяц + ДанныеПоТарифу.БазаСверхПредельнойЗа2Месяц + ДанныеПоТарифу.БазаСверхПредельнойЗа3Месяц;
	КонецЦикла; 
	
	ДанныеРСВ.НачисленоРСВ1НаСтраховую = ДанныеРСВ.НачисленоРСВ1НаСтраховую - ДанныеРСВ.Строка20604 - ДанныеРСВ.Строка20605 - ДанныеРСВ.Строка20606;
	
	Раздел22 = ПоказателиОтчета.Раздел22;
	НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка();
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего = Раздел22.П000220022303;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц = Раздел22.П000220022304;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц = Раздел22.П000220022305;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц = Раздел22.П000220022306;
	
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего = Раздел22.П000230023303;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц = Раздел22.П000230023304;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц = Раздел22.П000230023305;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц = Раздел22.П000230023306;
	
	НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный;
	
	НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4;
	
	НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3;
	
	НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2;
	
	НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1;
	
	Для каждого ЛистДанных Из ПоказателиОтчета.Раздел24 Цикл
		
		ПоказателиРазделов = ЛистДанных.Данные;
		Если ПоказателиРазделов.П000240001001 = "1" Тогда
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего = ПоказателиРазделов.П000240024303;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц = ПоказателиРазделов.П000240024304;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц = ПоказателиРазделов.П000240024305;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц = ПоказателиРазделов.П000240024306;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего = ПоказателиРазделов.П000240024903;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц = ПоказателиРазделов.П000240024904;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц = ПоказателиРазделов.П000240024905;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц = ПоказателиРазделов.П000240024906;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего = ПоказателиРазделов.П000240025503;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц = ПоказателиРазделов.П000240025504;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц = ПоказателиРазделов.П000240025505;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц = ПоказателиРазделов.П000240025506;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего = ПоказателиРазделов.П000240026103;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц = ПоказателиРазделов.П000240026104;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц = ПоказателиРазделов.П000240026105;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц = ПоказателиРазделов.П000240026106;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего = ПоказателиРазделов.П000240026703;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц = ПоказателиРазделов.П000240026704;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц = ПоказателиРазделов.П000240026705;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц = ПоказателиРазделов.П000240026706;
			
		ИначеЕсли ПоказателиРазделов.П000240001001 = "2" Тогда
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего = ПоказателиРазделов.П000240024303;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц = ПоказателиРазделов.П000240024304;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц = ПоказателиРазделов.П000240024305;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц = ПоказателиРазделов.П000240024306;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего = ПоказателиРазделов.П000240024903;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц = ПоказателиРазделов.П000240024904;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц = ПоказателиРазделов.П000240024905;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц = ПоказателиРазделов.П000240024906;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего = ПоказателиРазделов.П000240025503;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц = ПоказателиРазделов.П000240025504;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц = ПоказателиРазделов.П000240025505;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц = ПоказателиРазделов.П000240025506;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего = ПоказателиРазделов.П000240026103;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц = ПоказателиРазделов.П000240026104;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц = ПоказателиРазделов.П000240026105;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц = ПоказателиРазделов.П000240026106;
			
			НоваяСтрока = ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего = ПоказателиРазделов.П000240026703;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц = ПоказателиРазделов.П000240026704;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц = ПоказателиРазделов.П000240026705;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц = ПоказателиРазделов.П000240026706;
		КонецЕсли;
		
	КонецЦикла;
	
	РесурсыВредногоЗаработка = "ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего, ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц, ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц, ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц, ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего, ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц, ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц, ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц";
	
	ДанныеРСВ.ИтогиРСВПоВредномуЗаработку.Свернуть("КлассУсловийТруда", РесурсыВредногоЗаработка);
	
	Возврат ДанныеРСВ;
	
КонецФункции	

Функция ТаблицаИтогиРСВПоТарифам()
	ТаблицаПоТарифам = Новый ТаблицаЗначений;
	ТаблицаПоТарифам.Колонки.Добавить("КодТарифа");
	ТаблицаПоТарифам.Колонки.Добавить("КатегорияЗастрахованныхЛиц");
	ТаблицаПоТарифам.Колонки.Добавить("НачисленоСтраховаяЗаОтчетныйПериод");
	ТаблицаПоТарифам.Колонки.Добавить("НачисленоНакопительнаяЗаОтчетныйПериод");
	ТаблицаПоТарифам.Колонки.Добавить("НачисленоСтраховаяЗаГод");
	ТаблицаПоТарифам.Колонки.Добавить("НачисленоНакопительнаяЗаГод");
	ТаблицаПоТарифам.Колонки.Добавить("ОбъектОбложения");
	ТаблицаПоТарифам.Колонки.Добавить("ОблагаемаяБаза");
	ТаблицаПоТарифам.Колонки.Добавить("БазаСверхПредельной");	
	ТаблицаПоТарифам.Колонки.Добавить("ОбъектОбложенияЗа1Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("ОблагаемаяБазаЗа1Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("БазаСверхПредельнойЗа1Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("ОбъектОбложенияЗа2Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("ОблагаемаяБазаЗа2Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("БазаСверхПредельнойЗа2Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("ОбъектОбложенияЗа3Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("ОблагаемаяБазаЗа3Месяц");
	ТаблицаПоТарифам.Колонки.Добавить("БазаСверхПредельнойЗа3Месяц");
	
	Возврат ТаблицаПоТарифам;
КонецФункции	

Процедура СвернутьТаблицуИтоговоПоТарифамРСВ1(Таблица)
	СуммируемыеКолонки = "НачисленоСтраховаяЗаОтчетныйПериод, НачисленоНакопительнаяЗаОтчетныйПериод, НачисленоСтраховаяЗаГод, НачисленоНакопительнаяЗаГод, ОбъектОбложения, ОблагаемаяБаза, БазаСверхПредельной, ОбъектОбложенияЗа1Месяц, ОблагаемаяБазаЗа1Месяц, БазаСверхПредельнойЗа1Месяц, ОбъектОбложенияЗа2Месяц, ОблагаемаяБазаЗа2Месяц, БазаСверхПредельнойЗа2Месяц, ОбъектОбложенияЗа3Месяц, ОблагаемаяБазаЗа3Месяц, БазаСверхПредельнойЗа3Месяц";
	
	Таблица.Свернуть("КодТарифа, КатегорияЗастрахованныхЛиц", СуммируемыеКолонки);
КонецПроцедуры	

Функция ТаблицаИтогиРСВПоВредномуЗаработку()
	ИтогиПоЗаработку = Новый ТаблицаЗначений;
	ИтогиПоЗаработку.Колонки.Добавить("КлассУсловийТруда");
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц", Новый ОписаниеТипов("Число"));
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц", Новый ОписаниеТипов("Число"));
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц", Новый ОписаниеТипов("Число"));
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего", Новый ОписаниеТипов("Число"));
	
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц", Новый ОписаниеТипов("Число"));
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц", Новый ОписаниеТипов("Число"));
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц", Новый ОписаниеТипов("Число"));
	ИтогиПоЗаработку.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего", Новый ОписаниеТипов("Число"));
	
	Возврат ИтогиПоЗаработку;
КонецФункции	

Функция СводныеДанныеПоДокументамКомплекта() Экспорт
	ИтогиПоДокументамКомплекта = Новый Структура;
	ИтогиПоДокументамКомплекта.Вставить("Ссылка", ОписьПачекСЗВ);
	ИтогиПоДокументамКомплекта.Вставить("ИтогиПоКатегориям");
	ИтогиПоДокументамКомплекта.Вставить("НачисленоСтраховая", 0);
	ИтогиПоДокументамКомплекта.Вставить("НачисленоНакопительная", 0);
	ИтогиПоДокументамКомплекта.Вставить("УплаченоСтраховая", 0);
	ИтогиПоДокументамКомплекта.Вставить("НачисленоЧленамЭкипажейСудовНаСтраховую", 0);
	ИтогиПоДокументамКомплекта.Вставить("НачисленоЧленамЭкипажейСудовНаНакопительную", 0);
	ИтогиПоДокументамКомплекта.Вставить("УплаченоНакопительная", 0);
	ИтогиПоДокументамКомплекта.Вставить("Заработок", 0);
	ИтогиПоДокументамКомплекта.Вставить("ОблагаетсяВзносами", 0);
	ИтогиПоДокументамКомплекта.Вставить("ЗаработокПоЛьготнымКатегориям", 0);
	ИтогиПоДокументамКомплекта.Вставить("ОблагаетсяВзносамиПоЛьготнымКатегориям", 0);
	ИтогиПоДокументамКомплекта.Вставить("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах", 0);
	ИтогиПоДокументамКомплекта.Вставить("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах", 0);
	ИтогиПоДокументамКомплекта.Вставить("НачисленоСтраховаяПоКатегориям", Новый Соответствие);
	ИтогиПоДокументамКомплекта.Вставить("НачисленоНакопительнаяПоКатегориям", Новый Соответствие);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПерсонифицированныйУчет.СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);

	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.УстановитьПараметр("СписокДокументовСЗВ", СписокПачекСЗВ.Выгрузить().ВыгрузитьКолонку("ПачкаДокументов"));
	Запрос.УстановитьПараметр("СписокДокументовСЗВ63", СписокПачекСЗВ6_3.Выгрузить().ВыгрузитьКолонку("ПачкаДокументов"));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	СоответствиеТарифаИВидаЗЛКатегории.ИсходнаяКатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТСоответствиеРодительскихКатегорий
	|ИЗ
	|	ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|ГДЕ
	|	&ОтчетныйГод МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоСтраховая КАК НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоНакопительная КАК НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоСтраховая КАК УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоНакопительная КАК УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник
	|ПОМЕСТИТЬ ВТВзносы
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка В(&СписокДокументовСЗВ)
	|	И ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&СписокДокументовСЗВ)
	|	И РеестрСЗВ_6_2Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка),
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.НачисленоСтраховая,
	|	0,
	|	0,
	|	0,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка В(&СписокДокументовСЗВ)
	|	И ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&СписокДокументовСЗВ)
	|	И ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗВ.Исходная)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Заработок КАК Заработок,
	|	ПачкаДокументовСЗВ_6_3СведенияОЗаработке.ОблагаетсяВзносами КАК ОблагаетсяВзносами,
	|	0 КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	0 КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	0 КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	0 КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ПОМЕСТИТЬ ВТЗаработок
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_3СведенияОЗаработке
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Ссылка В(&СписокДокументовСЗВ63)
	|	И ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Заработок,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины + ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР))
	|			ТОГДА ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_4СведенияОЗаработке
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка В(&СписокДокументовСЗВ)
	|	И ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины + ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	0,
	|	0,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В(&СписокДокументовСЗВ)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Сотрудник КАК СотрудникСЗВ_6_3,
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТЗастрахованныеЛицаСЗВ_6_3
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК ПачкаДокументовСЗВ_6_3Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка В(&СписокДокументовСЗВ63)
	|	И ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Итоги.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	Итоги.ИсходнаяКатегорияЗастрахованныхЛиц КАК ИсходнаяКатегорияЗастрахованныхЛиц,
	|	СУММА(Итоги.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Итоги.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Итоги.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Итоги.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	СУММА(Итоги.Заработок) КАК Заработок,
	|	СУММА(Итоги.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	СУММА(Итоги.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(Итоги.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Итоги.СотрудникСЗВ_6_3) КАК КоличествоЗастрахованныхЛицСЗВ_6_3,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Итоги.СотрудникСЗВ_6) КАК КоличествоЗастрахованныхЛицСЗВ_6,
	|	СУММА(Итоги.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(Итоги.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ИЗ
	|	(ВЫБРАТЬ
	|		Взносы.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		СоответствиеРодительскихКатегорий.ИсходнаяКатегорияЗастрахованныхЛиц КАК ИсходнаяКатегорияЗастрахованныхЛиц,
	|		Взносы.НачисленоСтраховая КАК НачисленоСтраховая,
	|		Взносы.НачисленоНакопительная КАК НачисленоНакопительная,
	|		Взносы.УплаченоСтраховая КАК УплаченоСтраховая,
	|		Взносы.УплаченоНакопительная КАК УплаченоНакопительная,
	|		Взносы.Сотрудник КАК СотрудникСЗВ_6,
	|		0 КАК Заработок,
	|		0 КАК ОблагаетсяВзносами,
	|		0 КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		0 КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		NULL КАК СотрудникСЗВ_6_3,
	|		0 КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|		0 КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|	ИЗ
	|		ВТВзносы КАК Взносы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеРодительскихКатегорий КАК СоответствиеРодительскихКатегорий
	|			ПО Взносы.КатегорияЗастрахованныхЛиц = СоответствиеРодительскихКатегорий.КатегорияЗастрахованныхЛиц
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаработокЗастрахованныхЛиц.КатегорияЗастрахованныхЛиц,
	|		СоответствиеРодительскихКатегорий.ИсходнаяКатегорияЗастрахованныхЛиц,
	|		0,
	|		0,
	|		0,
	|		0,
	|		NULL,
	|		ЗаработокЗастрахованныхЛиц.Заработок,
	|		ЗаработокЗастрахованныхЛиц.ОблагаетсяВзносами,
	|		ЗаработокЗастрахованныхЛиц.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		ЗаработокЗастрахованныхЛиц.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		NULL,
	|		ЗаработокЗастрахованныхЛиц.ОблагаетсяВзносамиДоПредельнойВеличины,
	|		ЗаработокЗастрахованныхЛиц.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|	ИЗ
	|		ВТЗаработок КАК ЗаработокЗастрахованныхЛиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеРодительскихКатегорий КАК СоответствиеРодительскихКатегорий
	|			ПО ЗаработокЗастрахованныхЛиц.КатегорияЗастрахованныхЛиц = СоответствиеРодительскихКатегорий.КатегорияЗастрахованныхЛиц
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗастрахованныеЛицаСЗВ_6_3.КатегорияЗастрахованныхЛиц,
	|		СоответствиеРодительскихКатегорий.ИсходнаяКатегорияЗастрахованныхЛиц,
	|		0,
	|		0,
	|		0,
	|		0,
	|		NULL,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ЗастрахованныеЛицаСЗВ_6_3.СотрудникСЗВ_6_3,
	|		0,
	|		0
	|	ИЗ
	|		ВТЗастрахованныеЛицаСЗВ_6_3 КАК ЗастрахованныеЛицаСЗВ_6_3
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеРодительскихКатегорий КАК СоответствиеРодительскихКатегорий
	|			ПО ЗастрахованныеЛицаСЗВ_6_3.КатегорияЗастрахованныхЛиц = СоответствиеРодительскихКатегорий.КатегорияЗастрахованныхЛиц) КАК ИТОГИ
	|
	|СГРУППИРОВАТЬ ПО
	|	Итоги.КатегорияЗастрахованныхЛиц,
	|	Итоги.ИсходнаяКатегорияЗастрахованныхЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсходнаяКатегорияЗастрахованныхЛиц,
	|	КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Взносы.НачисленоСтраховая), 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(СУММА(Взносы.НачисленоНакопительная), 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(СУММА(Взносы.УплаченоСтраховая), 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(СУММА(Взносы.УплаченоНакопительная), 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Взносы.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ЧЭС), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖЭС), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПЭС))
	|					ТОГДА Взносы.НачисленоСтраховая
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НачисленоЧленамЭкипажейСудовНаСтраховую,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Взносы.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ЧЭС), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖЭС), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПЭС))
	|					ТОГДА Взносы.НачисленоНакопительная
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НачисленоЧленамЭкипажейСудовНаНакопительную
	|ИЗ
	|	ВТВзносы КАК Взносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА СоответствиеРодительскихКатегорий.ИсходнаяКатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР))
	|				ТОГДА СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Заработок,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ СоответствиеРодительскихКатегорий.ИсходнаяКатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР))
	|				ТОГДА СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаработокПоЛьготнымКатегориям,
	|	СУММА(ВЫБОР
	|			КОГДА СоответствиеРодительскихКатегорий.ИсходнаяКатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР))
	|				ТОГДА СведенияОЗаработке.ОблагаетсяВзносами
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносами,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ СоответствиеРодительскихКатегорий.ИсходнаяКатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВЖНР), ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ВПНР))
	|				ТОГДА СведенияОЗаработке.ОблагаетсяВзносами
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиПоЛьготнымКатегориям,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ИЗ
	|	ВТЗаработок КАК СведенияОЗаработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеРодительскихКатегорий КАК СоответствиеРодительскихКатегорий
	|		ПО СведенияОЗаработке.КатегорияЗастрахованныхЛиц = СоответствиеРодительскихКатегорий.КатегорияЗастрахованныхЛиц";
	
	Результаты = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результаты.Количество();
	
	ИтогиПоДокументамКомплекта.ИтогиПоКатегориям = Результаты[КоличествоРезультатов - 3].Выгрузить();

	Для Каждого СтрокаИтогов Из ИтогиПоДокументамКомплекта.ИтогиПоКатегориям Цикл 
		Если СтрокаИтогов.НачисленоСтраховая <> 0
			Или СтрокаИтогов.НачисленоНакопительная <> 0 Тогда
			
			НачисленоСтраховаяПоКатегории = ИтогиПоДокументамКомплекта.НачисленоСтраховаяПоКатегориям.Получить(СтрокаИтогов.ИсходнаяКатегорияЗастрахованныхЛиц);
			НачисленоСтраховаяПоКатегории = ?(НачисленоСтраховаяПоКатегории = Неопределено, 0, НачисленоСтраховаяПоКатегории) + СтрокаИтогов.НачисленоСтраховая;
			ИтогиПоДокументамКомплекта.НачисленоСтраховаяПоКатегориям.Вставить(СтрокаИтогов.ИсходнаяКатегорияЗастрахованныхЛиц, НачисленоСтраховаяПоКатегории);
			
			НачисленоНакопительнаяПоКатегории = ИтогиПоДокументамКомплекта.НачисленоНакопительнаяПоКатегориям.Получить(СтрокаИтогов.ИсходнаяКатегорияЗастрахованныхЛиц);
			НачисленоНакопительнаяПоКатегории = ?(НачисленоНакопительнаяПоКатегории = Неопределено, 0, НачисленоНакопительнаяПоКатегории) + СтрокаИтогов.НачисленоНакопительная;
			ИтогиПоДокументамКомплекта.НачисленоНакопительнаяПоКатегориям.Вставить(СтрокаИтогов.ИсходнаяКатегорияЗастрахованныхЛиц, НачисленоНакопительнаяПоКатегории);
		КонецЕсли;	
	КонецЦикла;	
	
	ИтогиПоВзносам = Результаты[КоличествоРезультатов - 2].Выбрать();
	
	Если ИтогиПоВзносам.Следующий() Тогда
		ИтогиПоДокументамКомплекта.НачисленоСтраховая = ИтогиПоВзносам.НачисленоСтраховая;
		ИтогиПоДокументамКомплекта.НачисленоНакопительная = ИтогиПоВзносам.НачисленоНакопительная;
		ИтогиПоДокументамКомплекта.УплаченоСтраховая = ИтогиПоВзносам.УплаченоСтраховая;
		ИтогиПоДокументамКомплекта.УплаченоНакопительная = ИтогиПоВзносам.УплаченоНакопительная;
		ИтогиПоДокументамКомплекта.НачисленоЧленамЭкипажейСудовНаСтраховую = ИтогиПоВзносам.НачисленоЧленамЭкипажейСудовНаСтраховую;
		ИтогиПоДокументамКомплекта.НачисленоЧленамЭкипажейСудовНаНакопительную = ИтогиПоВзносам.НачисленоЧленамЭкипажейСудовНаНакопительную;
	КонецЕсли;
	
	ИтогиПоЗаработку = Результаты[КоличествоРезультатов - 1].Выбрать();
	
	Если ИтогиПоЗаработку.Следующий() Тогда
		ИтогиПоДокументамКомплекта.Заработок = ?(ИтогиПоЗаработку.Заработок = Null, 0, ИтогиПоЗаработку.Заработок);
		ИтогиПоДокументамКомплекта.ОблагаетсяВзносами = ?(ИтогиПоЗаработку.ОблагаетсяВзносами = Null, 0, ИтогиПоЗаработку.ОблагаетсяВзносами);
		ИтогиПоДокументамКомплекта.ЗаработокПоЛьготнымКатегориям = ?(ИтогиПоЗаработку.ЗаработокПоЛьготнымКатегориям = Null, 0, ИтогиПоЗаработку.ЗаработокПоЛьготнымКатегориям);
		ИтогиПоДокументамКомплекта.ОблагаетсяВзносамиПоЛьготнымКатегориям = ?(ИтогиПоЗаработку.ОблагаетсяВзносамиПоЛьготнымКатегориям = Null, 0, ИтогиПоЗаработку.ОблагаетсяВзносамиПоЛьготнымКатегориям);
		ИтогиПоДокументамКомплекта.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = ?(ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = Null, 0, ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах);
		ИтогиПоДокументамКомплекта.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = ?(ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = Null, 0, ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах);
	КонецЕсли;	
	
	Возврат ИтогиПоДокументамКомплекта;	
КонецФункции	

Функция СводныеДанныеПоРазделам6РСВ1()
	ДокументыКомплекта = СписокПачекСЗВ.ВыгрузитьКолонку("ПачкаДокументов");
	
	ИсходныеДокументы = Справочники.КомплектыОтчетностиПерсучета.ДокументыСЗВ6ПоПараметрам(ДокументыКомплекта, Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	
	МесяцНачалаОтчетногоПериода = Месяц(НачалоКвартала(ОтчетныйПериод));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПерсонифицированныйУчет.СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц, Год(ОтчетныйПериод));
	
	Запрос.УстановитьПараметр("ИсходныеДокументы", ИсходныеДокументы);
	Запрос.УстановитьПараметр("Месяц1", МесяцНачалаОтчетногоПериода);
	Запрос.УстановитьПараметр("Месяц2", МесяцНачалаОтчетногоПериода + 1);
	Запрос.УстановитьПараметр("Месяц3", МесяцНачалаОтчетногоПериода + 2);
	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеТарифаИВидаЗЛКатегории.ИсходнаяКатегорияЗастрахованныхЛиц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТИсходныеКатегорииЗЛ
	|ИЗ
	|	ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|ГДЕ
	|	&ОтчетныйГод МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаработокСначалаПериода,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличиныСначалаПериода,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличиныСначалаПериода,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаработокЗа1Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличиныЗа1Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа1Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаработокЗа2Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличиныЗа2Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа2Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаработокЗа3Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличиныЗа3Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа3Месяц,
	|	ЕСТЬNULL(ИсходныеКатегорииЗЛ.ИсходнаяКатегорияЗастрахованныхЛиц, ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка)) КАК ИсходнаяКатегорияЗастрахованныхЛиц
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеКатегорииЗЛ КАК ИсходныеКатегорииЗЛ
	|		ПО ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц = ИсходныеКатегорииЗЛ.КатегорияЗастрахованныхЛиц
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В(&ИсходныеДокументы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	ЕСТЬNULL(ИсходныеКатегорииЗЛ.ИсходнаяКатегорияЗастрахованныхЛиц, ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник), 0) КАК КоличествоЗастрахованныхЛиц,
	|	ЕСТЬNULL(СУММА(ПачкаРазделов6РасчетаРСВ_1Сотрудники.НачисленоСтраховая), 0) КАК НачисленоВзносов
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка В(&ИсходныеДокументы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТКлассыВредности
	|ИЗ
	|	Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки КАК КлассыУсловийТрудаПоРезультатамСпециальнойОценки
	|ГДЕ
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка <> ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый)
	|	И КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка <> ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка КАК КлассУсловийТруда,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа1Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа1Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа2Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа2Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахЗа3Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахЗа3Месяц
	|ИЗ
	|	ВТКлассыВредности КАК КлассыУсловийТрудаПоРезультатамСпециальнойОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|		ПО КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка = ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда
	|			И (ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Ссылка В (&ИсходныеДокументы))
	|
	|СГРУППИРОВАТЬ ПО
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка";

	Результаты = Запрос.ВыполнитьПакет();
	
	ДоходыПоКатегориям = Результаты[1].Выгрузить();
	
	СводныеДанныеОРазделов6 = Новый Структура;
	СводныеДанныеОРазделов6.Вставить("ЗаработокСначалаПериода", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиДоПредельнойВеличиныСначалаПериода", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиСвышеПредельнойВеличиныСначалаПериода", 0);
	СводныеДанныеОРазделов6.Вставить("ЗаработокЗа1Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиДоПредельнойВеличиныЗа1Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа1Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ЗаработокЗа2Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиДоПредельнойВеличиныЗа2Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа2Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ЗаработокЗа3Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиДоПредельнойВеличиныЗа3Месяц", 0);
	СводныеДанныеОРазделов6.Вставить("ОблагаетсяВзносамиСвышеПредельнойВеличиныЗа3Месяц", 0);

	ИспользуемыеКатегории = Новый Массив;
	
	Для Каждого СтрокаДоходов Из ДоходыПоКатегориям Цикл
		
		Для Каждого КлючЗначение Из СводныеДанныеОРазделов6 Цикл
			ТекущееЗначение = СводныеДанныеОРазделов6[КлючЗначение.Ключ];
			
			СводныеДанныеОРазделов6[КлючЗначение.Ключ] = ТекущееЗначение + СтрокаДоходов[КлючЗначение.Ключ];
		КонецЦикла;	
		
		Если ИспользуемыеКатегории.Найти(СтрокаДоходов.ИсходнаяКатегорияЗастрахованныхЛиц) = Неопределено
			И ЗначениеЗаполнено(СтрокаДоходов.ИсходнаяКатегорияЗастрахованныхЛиц) Тогда
			
			Если ЗначениеЗаполнено(СтрокаДоходов.ЗаработокЗа1Месяц) 
				Или ЗначениеЗаполнено(СтрокаДоходов.ЗаработокЗа2Месяц)
				Или ЗначениеЗаполнено(СтрокаДоходов.ЗаработокЗа3Месяц) Тогда 
				
				ИспользуемыеКатегории.Добавить(СтрокаДоходов.ИсходнаяКатегорияЗастрахованныхЛиц);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	СводныеДанныеОРазделов6.Вставить("ИспользуемыеКатегории", ИспользуемыеКатегории);
	
	СводныеДанныеОРазделов6.Вставить("КоличествоЗастрахованныхЛиц", 0);
	СводныеДанныеОРазделов6.Вставить("НачисленоВзносов", 0);
	
	ВыборкаИтоговПоВзносам = Результаты[2].Выбрать();
	
	Если ВыборкаИтоговПоВзносам.Следующий() Тогда
		СводныеДанныеОРазделов6.КоличествоЗастрахованныхЛиц = ВыборкаИтоговПоВзносам.КоличествоЗастрахованныхЛиц;	
		СводныеДанныеОРазделов6.НачисленоВзносов = ВыборкаИтоговПоВзносам.НачисленоВзносов;
	КонецЕсли;	
	
	СводныеДанныеОРазделов6.Вставить("ДоходыПоКатегориям", ДоходыПоКатегориям);
	
	СводныеДанныеОРазделов6.Вставить("ИтогиПоВредномуЗаработку", Результаты[4].Выгрузить());

	Возврат СводныеДанныеОРазделов6;
		
КонецФункции

Процедура ЗаписатьДокументыКомплекта(РежимЗаписи, ДокументПринятВПФР = Ложь)	
	
	Для Каждого ОписаниеПачкиСЗВ6 Из СписокПачекСЗВ Цикл
		Если ЗначениеЗаполнено(ОписаниеПачкиСЗВ6.ПачкаДокументов) Тогда
			ДокументОбъект = ОписаниеПачкиСЗВ6.ПачкаДокументов.ПолучитьОбъект();
			Если ДокументОбъект <> Неопределено Тогда
				ДокументОбъект.ДокументПринятВПФР = ДокументПринятВПФР;
				ДокументОбъект.Записать(РежимЗаписи);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого ОписаниеПачкиСЗВ6_3 Из СписокПачекСЗВ6_3 Цикл
		Если ЗначениеЗаполнено(ОписаниеПачкиСЗВ6_3.ПачкаДокументов) Тогда
			ДокументОбъект = ОписаниеПачкиСЗВ6_3.ПачкаДокументов.ПолучитьОбъект();
			Если ДокументОбъект <> Неопределено Тогда
				ДокументОбъект.ДокументПринятВПФР = ДокументПринятВПФР;
				ДокументОбъект.Записать(РежимЗаписи);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ВедомостьУплатыАДВ11) Тогда
		ДокументОбъект = ВедомостьУплатыАДВ11.ПолучитьОбъект();
		Если ДокументОбъект <> Неопределено Тогда
			ДокументОбъект.ДокументПринятВПФР = ДокументПринятВПФР;
			ДокументОбъект.Записать(РежимЗаписи);
		КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
		ДокументОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
		Если ДокументОбъект <> Неопределено Тогда
			ДокументОбъект.ДокументПринятВПФР = ДокументПринятВПФР;
			ДокументОбъект.Записать(РежимЗаписи);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ЗаполнитьОтветственныхЛицДокумента(ДокументОбъект, ДанныеОписи = Неопределено)
	Если ДанныеОписи = Неопределено Тогда
		ДанныеОписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОписьПачекСЗВ, "Ответственный,Руководитель,ДолжностьРуководителя");
	КонецЕсли;
	
	ДокументОбъект.Ответственный = ДанныеОписи.Ответственный;
	ДокументОбъект.Руководитель = ДанныеОписи.Руководитель;
	ДокументОбъект.ДолжностьРуководителя = ДанныеОписи.ДолжностьРуководителя;	
КонецПроцедуры	

Функция МассивСсылокСЗВ(ТипСведенийСЗВ = Неопределено, СписокКорректируемыхПериодов = Неопределено)
	Запрос = Новый Запрос;
	ДокументыКомплекта = СписокПачекСЗВ.ВыгрузитьКолонку("ПачкаДокументов");
	
	Запрос.УстановитьПараметр("СписокДокументов", ДокументыКомплекта);
	Запрос.УстановитьПараметр("ТипСведений", ТипСведенийСЗВ);
	Запрос.УстановитьПараметр("СписокКорректируемыхПериодов", СписокКорректируемыхПериодов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокПачекСЗВ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_1 КАК СписокПачекСЗВ
	|ГДЕ
	|	СписокПачекСЗВ.Ссылка В(&СписокДокументов)
	|	И &Условие
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокПачекСЗВ.Ссылка
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК СписокПачекСЗВ
	|ГДЕ
	|	СписокПачекСЗВ.Ссылка В(&СписокДокументов)
	|	И &Условие
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокПачекСЗВ.Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК СписокПачекСЗВ
	|ГДЕ
	|	СписокПачекСЗВ.Ссылка В(&СписокДокументов)
	|	И &Условие
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокПачекСЗВ.Ссылка
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК СписокПачекСЗВ
	|ГДЕ
	|	СписокПачекСЗВ.Ссылка В(&СписокДокументов)
	|	И &Условие";
	
	СтрокаУсловие = "";
	Если ТипСведенийСЗВ <> Неопределено Тогда
		СтрокаУсловие = СтрокаУсловие + " И СписокПачекСЗВ.ТипСведенийСЗВ = &ТипСведений";
	КонецЕсли;
	
	Если СписокКорректируемыхПериодов <> Неопределено Тогда 
		СтрокаУсловие = СтрокаУсловие + " И СписокПачекСЗВ.КорректируемыйПериод В (&СписокКорректируемыхПериодов)";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &Условие", СтрокаУсловие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСсылок = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивСсылок.Добавить(Выборка.Ссылка);		
	КонецЦикла;	
	
	Возврат МассивСсылок;
	
КонецФункции	

Процедура ПрочитатьКлассификаторы(Классификаторы)

	Запрос = Новый Запрос;
	
	Классификаторы = Новый Соответствие;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсобыеУсловияТруда.Ссылка,
	|	ОсобыеУсловияТруда.Код КАК Обозначение
	|ИЗ
	|	Справочник.ОсобыеУсловияТрудаПФР КАК ОсобыеУсловияТруда
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОснованияВыслугиЛет.Ссылка,
	|	ОснованияВыслугиЛет.Код
	|ИЗ
	|	Справочник.ОснованияДосрочногоНазначенияПенсии КАК ОснованияВыслугиЛет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.Ссылка,
	|	СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.Код
	|ИЗ
	|	Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения КАК СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОснованияИсчисляемогоТрудовогоСтажа.Ссылка,
	|	ОснованияИсчисляемогоТрудовогоСтажа.Код
	|ИЗ
	|	Справочник.ОснованияИсчисляемогоСтраховогоСтажа КАК ОснованияИсчисляемогоТрудовогоСтажа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТерриториальныеУсловия.Ссылка,
	|	ТерриториальныеУсловия.Код
	|ИЗ
	|	Справочник.ТерриториальныеУсловияПФР КАК ТерриториальныеУсловия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыИсчисляемогоСтраховогоСтажа.Ссылка,
	|	ПараметрыИсчисляемогоСтраховогоСтажа.Код
	|ИЗ
	|	Справочник.ПараметрыИсчисляемогоСтраховогоСтажа КАК ПараметрыИсчисляемогоСтраховогоСтажа";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Классификаторы[СокрЛП(Выборка.Обозначение)] = Выборка.Ссылка
	КонецЦикла;

КонецПроцедуры

Функция ДатаПоСтроковомуПредставлению(ДатаСтрока)

	Возврат Дата(Прав(ДатаСтрока,4), Сред(ДатаСтрока, СтрНайти(ДатаСтрока,".") + 1, 2), Лев(ДатаСтрока, СтрНайти(ДатаСтрока,".") - 1));

КонецФункции 

// Сохраняет данные о стаже в таблице значений для последующей записи.
//
// Параметры:
//  ТаблицаДанныхОСтаже			- Таблица значений.
//  ФизЛицо  					- СправочникСсылка.ФизическиеЛица - текущее физ лицо.
//  ОтчетныйПериод  			- Дата - Дата, характеризующая отчетный период.
//  Организация  				- СправочникСсылка.Организации - организация (обособленное подразделение).
//  КатегорияЗастрахованныхЛиц  - ПеречислениеСсылка.КатегорииЗастрахованныхЛицПФР - категория застрахованного лица.
//  СписокСтажей  				- ОбъектXDTO - дерево сведений о стаже физического лица.
//
Процедура ПрочитатьДанныеОСтаже(ТаблицаДанныхОСтаже, Сотрудник, СписокСтажей, Классификаторы)
	Для каждого ЗаписьОСтаже Из СписокСтажей Цикл
		
		Если ЗаписьОСтаже = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи = Новый Структура("Сотрудник, НомерОсновнойЗаписи," + 
				"НомерДополнительнойЗаписи, Год, ДатаНачалаПериода, ДатаОкончанияПериода, ОсобыеУсловияТруда, КодПозицииСписка," +
				"ОснованиеИсчисляемогоСтажа, ПервыйПараметрИсчисляемогоСтажа, ВторойПараметрИсчисляемогоСтажа, ТретийПараметрИсчисляемогоСтажа," +
				"ОснованиеВыслугиЛет, ПервыйПараметрВыслугиЛет, ВторойПараметрВыслугиЛет, ТретийПараметрВыслугиЛет," + 
				"ТерриториальныеУсловия, ПараметрТерриториальныхУсловий");
		
		СтруктураЗаписи.Сотрудник = Сотрудник;		
				
		СтруктураЗаписи.НомерОсновнойЗаписи  = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОСтаже, "НомерСтроки");
		СтруктураЗаписи.ДатаНачалаПериода 	 = ДатаПоСтроковомуПредставлению(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОСтаже, "ДатаНачалаПериода"));
		СтруктураЗаписи.ДатаОкончанияПериода = ДатаПоСтроковомуПредставлению(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОСтаже, "ДатаКонцаПериода"));
		
		КоличествоЛьготныхСоставляющих = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОСтаже, "КоличествоЛьготныхСоставляющих");
		КоличествоЛьготныхСоставляющих = ?(ЗначениеЗаполнено(КоличествоЛьготныхСоставляющих), Число(КоличествоЛьготныхСоставляющих), 0);
		
		Если КоличествоЛьготныхСоставляющих > 0 Тогда
		
			Составляющие = ПерсонифицированныйУчет.СписокXDTOИзДерева(ЗаписьОСтаже, "ЛьготныйСтаж");
			
			Для каждого Составляющая Из Составляющие Цикл
				
				ОсобенностиУчета = ПерсонифицированныйУчет.СписокXDTOИзДерева(Составляющая, "ОсобенностиУчета");
				
				Если ОсобенностиУчета.Количество() > 0 Тогда
					
					Если Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(Составляющая, "НомерСтроки")) > 1 Тогда
						СтруктураЗаписи.ДатаНачалаПериода 	 = "";
						СтруктураЗаписи.ДатаОкончанияПериода = "";
					КонецЕсли;
					
					Для каждого ОсобенностьУчета Из ОсобенностиУчета Цикл
						
						ОсобыеУсловияТрудаКод = СокрЛП(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ОсобыеУсловияТруда/ОснованиеОУТ"));
						СтруктураЗаписи.ОсобыеУсловияТруда = Классификаторы[ОсобыеУсловияТрудаКод];
						
						КодПозицииСпискаКод = СокрЛП(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ОсобыеУсловияТруда/ПозицияСписка"));						
						СтруктураЗаписи.КодПозицииСписка = ЭлементКлассификатораСтажа(Классификаторы, КодПозицииСпискаКод, "СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения");
						
						ОснованиеИсчисляемогоСтажаКод = СокрЛП(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ИсчисляемыйСтаж/ОснованиеИС"));
						СтруктураЗаписи.ОснованиеИсчисляемогоСтажа = Классификаторы[ОснованиеИсчисляемогоСтажаКод];
						
						СтруктураЗаписи.ПервыйПараметрИсчисляемогоСтажа = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ИсчисляемыйСтаж/ВыработкаКалендарная/ВсеМесяцы");
						СтруктураЗаписи.ВторойПараметрИсчисляемогоСтажа = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ИсчисляемыйСтаж/ВыработкаКалендарная/ВсеДни");
						
						ТретийПараметрИсчисляемогоСтажаКод = СокрЛП(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ДекретДети"));
						СтруктураЗаписи.ТретийПараметрИсчисляемогоСтажа = Классификаторы[ТретийПараметрИсчисляемогоСтажаКод];
						
						ОснованиеВыслугиЛетКод = СокрЛП(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ВыслугаЛет/ОснованиеВЛ")); 
						СтруктураЗаписи.ОснованиеВыслугиЛет = Классификаторы[ОснованиеВыслугиЛетКод];
						
						СтруктураЗаписи.ПервыйПараметрВыслугиЛет = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ВыслугаЛет/ВыработкаВчасах/Часы");
						СтруктураЗаписи.ВторойПараметрВыслугиЛет = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ВыслугаЛет/ВыработкаВчасах/Минуты");
						СтруктураЗаписи.ТретийПараметрВыслугиЛет = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ВыслугаЛет/ДоляСтавки");
						
						ТерриториальныеУсловияКод = СокрЛП(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ТерриториальныеУсловия/ОснованиеТУ"));
						СтруктураЗаписи.ТерриториальныеУсловия =  Классификаторы[ТерриториальныеУсловияКод];
						
						СтруктураЗаписи.ПараметрТерриториальныхУсловий = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ОсобенностьУчета, "ТерриториальныеУсловия/Коэффициент");
						
						ЗаполнитьЗначенияСвойств(ТаблицаДанныхОСтаже.Добавить(), СтруктураЗаписи);
						
					КонецЦикла; 
					
				Иначе
				
					ЗаполнитьЗначенияСвойств(ТаблицаДанныхОСтаже.Добавить(), СтруктураЗаписи);
					
				КонецЕсли; 
				
			КонецЦикла; 
						
		Иначе
			
			ЗаполнитьЗначенияСвойств(ТаблицаДанныхОСтаже.Добавить(), СтруктураЗаписи);
			
		КонецЕсли; 
		
	КонецЦикла; 

КонецПроцедуры 

Функция ЭлементКлассификатораСтажа(Классификаторы, КодЭлемента, ИмяКлассификатора)
	Если Не ЗначениеЗаполнено(КодЭлемента) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Элемент = Классификаторы[КодЭлемента];
	
	Если Элемент <> Неопределено Тогда
		Возврат Элемент;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КодЭлемента", КодЭлемента);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Классификатор.Ссылка
	|ИЗ
	|	#Классификатор КАК Классификатор
	|ГДЕ
	|	Классификатор.Код ПОДОБНО &КодЭлемента";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Классификатор", "Справочник." + ИмяКлассификатора);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Классификаторы.Вставить(КодЭлемента, Выборка.Ссылка);
		
		Возврат Выборка.Ссылка;
	КонецЕсли;	
	
	ЭлементКлассификатора = Справочники[ИмяКлассификатора].СоздатьЭлемент();
	
	ЭлементКлассификатора.Код = КодЭлемента;
	ЭлементКлассификатора.ОбменДанными.Загрузка = Истина;
	
	ЭлементКлассификатора.Записать();
	
	Классификаторы.Вставить(КодЭлемента, ЭлементКлассификатора.Ссылка);
	
	Возврат ЭлементКлассификатора.Ссылка;
КонецФункции	

Функция ЗагруженныйДокументСЗВ_6(ДеревоСведенийСЗВ, ПачкиСоответствующиеФайлам, МассивНеСоответствующихФайламПачек, Классификаторы)
	
	Если Не ПерсонифицированныйУчет.ЭтоДокументСЗВ_6(ДеревоСведенийСЗВ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Комментарий = "";
	
	ДокументПачка = СтруктураДокументаСЗВ_6();
	
	НомерПачки = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/НомерПачки/Основной"));
	
	СсылкаСЗВ6 = ПачкиСоответствующиеФайлам[НомерПачки];
				
	ДокументПачка.Дата = ДатаПоСтроковомуПредставлению(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/ДатаСоставления")); 
	
	ДокументПачка.НомерПачки = НомерПачки;
	Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/ОтчетныйПериод/Квартал");
	Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/ОтчетныйПериод/Год");
	ДокументПачка.ОтчетныйПериод =  ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));

	ДокументПачка.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ[ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/ТипСведений")];
	
	ОтчетныйПериодПачки = ДокументПачка.ОтчетныйПериод;
	Если ДокументПачка.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/КорректируемыйОтчетныйПериод/Квартал");
		Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/КорректируемыйОтчетныйПериод/Год");
		ДокументПачка.КорректируемыйПериод =  ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));
		ОтчетныйПериодПачки = ДокументПачка.КорректируемыйПериод;
	КонецЕсли;
	
	ДокументПачка.КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицДляПФР[ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ/КодКатегории")];
	
	Если ДокументПачка.Организация <> Организация Или ДокументПачка.ЭтоНовый() Тогда
		ДокументПачка.Организация = Организация;
	КонецЕсли;
	
	ИмяСписка = ПерсонифицированныйУчет.ИмяСпискаЗастрахованныхЛицПоТипуФормы("СЗВ_6");
	Если ПустаяСтрока(ИмяСписка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	МассивЗастрахованных = ПерсонифицированныйУчет.СписокXDTOИзДерева(ДеревоСведенийСЗВ, ИмяСписка);
	
	СтраховыеНомераФизическихЛиц = ПерсонифицированныйУчет.СтраховыеНомераФизическихЛиц(МассивЗастрахованных);

	СложныйСтаж = Ложь;
	ДанныеФизическогоЛица = Новый Структура("ФизическоеЛицо, Фамилия, Имя, Отчество, СтраховойНомерПФР");
	Для каждого СтрокаЗастрахованного Из МассивЗастрахованных Цикл
		
		ТипФормы = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "ВидФормы");
		
		Если ТипФормы = "СЗВ-6-1" Тогда
			СложныйСтаж = Истина;
		КонецЕсли;	
		
		ПерсонифицированныйУчет.ЗаполнитьДанныеФизическогоЛицаИзЗначенияXDTO(ДанныеФизическогоЛица, СтрокаЗастрахованного, СтраховыеНомераФизическихЛиц);
		
		НоваяСтрока = ДокументПачка.Сотрудники.Добавить();
		НоваяСтрока.Фамилия  = ДанныеФизическогоЛица.Фамилия;
		НоваяСтрока.Имя 	 = ДанныеФизическогоЛица.Имя;
		НоваяСтрока.Отчество = ДанныеФизическогоЛица.Отчество;
		НоваяСтрока.СтраховойНомерПФР = ДанныеФизическогоЛица.СтраховойНомерПФР;
		ФизическоеЛицо = ДанныеФизическогоЛица.ФизическоеЛицо;
			
		// Если не находим создаем новое.
		НовоеФизЛицо = ФизическоеЛицо = Неопределено;
		
		Если НовоеФизЛицо Тогда
		
			ФизическоеЛицо = ПерсонифицированныйУчет.НовоеЗастрахованноеЛицо(ДанныеФизическогоЛица, НачалоГода(ДокументПачка.ОтчетныйПериод));
			
			ДобавленыНовыеФизлица = Истина;
			
			// Добавим сообщение в строку комментария.
			Комментарий = Комментарий + ?(ПустаяСтрока(Комментарий), "", ";" + Символы.ПС) + ФизическоеЛицо.Наименование + ", СНИЛС " + НоваяСтрока.СтраховойНомерПФР;
		
		КонецЕсли; 
		
		НоваяСтрока.Сотрудник = ФизическоеЛицо;
		
		СтруктураАдреса = ПерсонифицированныйУчет.СтрокаАдресаПоXDTO(ПерсонифицированныйУчет.ОбъектXDTOИзДерева(СтрокаЗастрахованного, "АдресЗЛ"));
		Если ЗначениеЗаполнено(СтруктураАдреса) Тогда
			НоваяСтрока.АдресДляИнформированияПредставление = СтруктураАдреса.Представление;
			НоваяСтрока.АдресДляИнформирования = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(СтруктураАдреса, , Справочники.ВидыКонтактнойИнформации.АдресДляИнформированияФизическиеЛица);
		КонецЕсли; 
		
		Если ДокументПачка.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			Продолжить;
		КонецЕсли;
		
		Если НовоеФизЛицо И ЗначениеЗаполнено(НоваяСтрока.АдресДляИнформирования) Тогда
			
			// Для нового ФизЛица сохраним адрес для информирования.
			УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(
				ФизическоеЛицо, 
				НоваяСтрока.АдресДляИнформирования, 
				Справочники.ВидыКонтактнойИнформации.АдресДляИнформированияФизическиеЛица,
				Перечисления.ТипыКонтактнойИнформации.Адрес);
			
		КонецЕсли; 

		НоваяСтрока.НачисленоСтраховая = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаСтраховую/Начислено");
		НоваяСтрока.УплаченоСтраховая = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаСтраховую/Уплачено");
		
		НоваяСтрока.НачисленоНакопительная = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаНакопительную/Начислено");
		НоваяСтрока.УплаченоНакопительная = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаНакопительную/Уплачено");
		
		НоваяСтрока.ФиксУплаченныеВзносы = Истина;
		НоваяСтрока.ФиксНачисленныеВзносы = Истина;
		НоваяСтрока.ФиксСтаж = Истина;
		
		// Сохраним данные о стаже
		
		ПрочитатьДанныеОСтаже(ДокументПачка.ЗаписиОСтаже, ФизическоеЛицо, ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СтажевыйПериод"), Классификаторы);
		
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(Комментарий) Тогда
		ДокументПачка.Комментарий = "Были созданы новые элементы справочника «Физические лица» для следующих застрахованных лиц: " + Комментарий;
	КонецЕсли; 
	
	ПачкаОбъект = СоздатьДокументыСЗВ_6ИзСтруктуры(ДокументПачка, СсылкаСЗВ6, СложныйСтаж, МассивНеСоответствующихФайламПачек);
	
	ПачкаОбъект.ПометкаУдаления = Ложь;
	ПачкаОбъект.ФайлСформирован = Истина;
	ПачкаОбъект.ДокументПринятВПФР = Истина;
	ПачкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	Возврат ПачкаОбъект;
	
КонецФункции

Функция ЗагруженныйДокументСЗВ_6_4(ДеревоСведенийСЗВ, ПачкиСоответствующиеФайлам, МассивНеСоответствующихФайламПачек, Классификаторы)
	
	Если Не ПерсонифицированныйУчет.ЭтоДокументСЗВ_6_4(ДеревоСведенийСЗВ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Комментарий = "";
	
	ДокументПачка = СтруктураДокументаСЗВ_6_4();
	
	НомерПачки = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/НомерПачки/Основной"));
	
	СсылкаСЗВ6 = ПачкиСоответствующиеФайлам[НомерПачки];
				
	ДокументПачка.Дата = ДатаПоСтроковомуПредставлению(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/ДатаСоставления")); 
	
	ДокументПачка.НомерПачки = НомерПачки;
	Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/ОтчетныйПериод/Квартал");
	Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/ОтчетныйПериод/Год");
	ДокументПачка.ОтчетныйПериод =  ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));

	ДокументПачка.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ[ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/ТипСведений")];
	
	ОтчетныйПериодПачки = ДокументПачка.ОтчетныйПериод;
	Если ДокументПачка.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/КорректируемыйОтчетныйПериод/Квартал");
		Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/КорректируемыйОтчетныйПериод/Год");
		ДокументПачка.КорректируемыйПериод =  ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));
		ОтчетныйПериодПачки = ДокументПачка.КорректируемыйПериод;
	КонецЕсли;
	
	ДокументПачка.КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицДляПФР[ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/КодКатегории")];
	ДокументПачка.ТипДоговора = ?(ВРег(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ/ТипДоговора")) = "ТРУДОВОЙ",Перечисления.ТипыДоговоровСЗВ63.Трудовой, Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой);
	
	Если ДокументПачка.Организация <> Организация Или ДокументПачка.ЭтоНовый() Тогда
		ДокументПачка.Организация = Организация;
	КонецЕсли;
	
	ИмяСписка = ПерсонифицированныйУчет.ИмяСпискаЗастрахованныхЛицПоТипуФормы("СЗВ_6_4");
	Если ПустаяСтрока(ИмяСписка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	МассивЗастрахованных = ПерсонифицированныйУчет.СписокXDTOИзДерева(ДеревоСведенийСЗВ, ИмяСписка);

	СтраховыеНомераФизическихЛиц = ПерсонифицированныйУчет.СтраховыеНомераФизическихЛиц(МассивЗастрахованных);

	СложныйСтаж = Ложь;
	ДанныеФизическогоЛица = Новый Структура("ФизическоеЛицо, Фамилия, Имя, Отчество, СтраховойНомерПФР");
	Для каждого СтрокаЗастрахованного Из МассивЗастрахованных Цикл
		
		ТипФормы = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "ВидФормы");
		
		Если ТипФормы = "СЗВ-6-1" Тогда
			СложныйСтаж = Истина;
		КонецЕсли;	
				
		ПерсонифицированныйУчет.ЗаполнитьДанныеФизическогоЛицаИзЗначенияXDTO(ДанныеФизическогоЛица, СтрокаЗастрахованного, СтраховыеНомераФизическихЛиц);
		
		НоваяСтрока = ДокументПачка.Сотрудники.Добавить();
		НоваяСтрока.Фамилия  = ДанныеФизическогоЛица.Фамилия;
		НоваяСтрока.Имя 	 = ДанныеФизическогоЛица.Имя;
		НоваяСтрока.Отчество = ДанныеФизическогоЛица.Отчество;
		НоваяСтрока.СтраховойНомерПФР = ДанныеФизическогоЛица.СтраховойНомерПФР;
		ФизическоеЛицо = ДанныеФизическогоЛица.ФизическоеЛицо;
		
		// Если не находим создаем новое.
		НовоеФизЛицо = ФизическоеЛицо = Неопределено;
		
		Если НовоеФизЛицо Тогда
		
			ФизическоеЛицо = ПерсонифицированныйУчет.НовоеЗастрахованноеЛицо(ДанныеФизическогоЛица, НачалоГода(ДокументПачка.ОтчетныйПериод));
			
			ДобавленыНовыеФизлица = Истина;
			
			// Добавим сообщение в строку комментария.
			Комментарий = Комментарий + ?(ПустаяСтрока(Комментарий), "", ";" + Символы.ПС) + ФизическоеЛицо.Наименование + ", СНИЛС " + НоваяСтрока.СтраховойНомерПФР;
		
		КонецЕсли; 
		
		НоваяСтрока.Сотрудник = ФизическоеЛицо;
		
		Если ДокументПачка.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока.НачисленоСтраховая = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаСтраховую/Начислено");
		НоваяСтрока.УплаченоСтраховая = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаСтраховую/Уплачено");
		
		НоваяСтрока.НачисленоНакопительная = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаНакопительную/Начислено");
		НоваяСтрока.УплаченоНакопительная = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаНакопительную/Уплачено");
		
		НоваяСтрока.ФиксУплаченныеВзносы = Истина;
		НоваяСтрока.ФиксНачисленныеВзносы = Истина;
		НоваяСтрока.ФиксСтаж = Истина;
		
		СтрокиДохода = ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СуммаВыплатИвознагражденийВпользуЗЛ");
		Для каждого ЗаписьОДоходе Из СтрокиДохода Цикл
			Если ВРег(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "ТипСтроки")) = "ИТОГ" Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = ДокументПачка.СведенияОЗаработке.Добавить();
			НоваяСтрока.Сотрудник = ФизическоеЛицо;
			
			Месяц = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "Месяц")) - Месяц(ОтчетныйПериодПачки) + 1;
			НоваяСтрока.Месяц = Месяц;
			НоваяСтрока.Заработок = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатВсего");
			НоваяСтрока.ОблагаетсяВзносамиДоПредельнойВеличины = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатНачисленыСтраховыеВзносыНеПревышающие");
			НоваяСтрока.ОблагаетсяВзносамиСвышеПредельнойВеличины = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатНачисленыСтраховыеВзносыПревышающие");
		КонецЦикла;
		СтрокиДоходаВредника = ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СуммаВыплатИВознагражденийПоДопТарифу");
        Если СтрокиДоходаВредника.Количество() > 0 Тогда
			СтруктураПоиска = Новый Структура("Сотрудник,Месяц",ФизическоеЛицо);
			Для каждого ЗаписьОДоходе Из СтрокиДоходаВредника Цикл
				Если ВРег(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "ТипСтроки")) = "ИТОГ" Тогда
					Продолжить;
				КонецЕсли;
				Месяц = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "Месяц")) - Месяц(ОтчетныйПериодПачки) + 1;
				СтруктураПоиска.Месяц = ?(ЗначениеЗаполнено(Месяц), Месяц, 0);
				ПохожиеСтроки = ДокументПачка.СведенияОЗаработке.НайтиСтроки(СтруктураПоиска);
				Если ПохожиеСтроки.Количество() = 0 Тогда
					НоваяСтрока = ДокументПачка.СведенияОЗаработке.Добавить();
					НоваяСтрока.Сотрудник = ФизическоеЛицо;
					НоваяСтрока.Месяц = СтруктураПоиска.Месяц;
				Иначе
					НоваяСтрока = ПохожиеСтроки[0]
				КонецЕсли;
				НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатПоДопТарифу27_1");
				НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатПоДопТарифу27_2_18");
			КонецЦикла;
			
		КонецЕсли;                
		
		// Сохраним данные о стаже
		
		ПрочитатьДанныеОСтаже(ДокументПачка.ЗаписиОСтаже, ФизическоеЛицо, ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СтажевыйПериод"), Классификаторы);
		
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(Комментарий) Тогда
		ДокументПачка.Комментарий = "Были созданы новые элементы справочника «Физические лица» для следующих застрахованных лиц: " + Комментарий;
	КонецЕсли; 
	
	ПачкаОбъект = СоздатьДокументыСЗВ_6_4ИзСтруктуры(ДокументПачка, СсылкаСЗВ6, СложныйСтаж, МассивНеСоответствующихФайламПачек);
	
	ПачкаОбъект.ПометкаУдаления = Ложь;
	ПачкаОбъект.ФайлСформирован = Истина;
	ПачкаОбъект.ДокументПринятВПФР = Истина;
	ПачкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	Возврат ПачкаОбъект;
	
КонецФункции

Функция ЗагруженныйДокументПачкаРазделов6РСВ1(ДеревоСведенийСЗВ, ПачкиСоответствующиеФайлам, МассивНеСоответствующихФайламПачек, Классификаторы)
	
	Если Не ПерсонифицированныйУчет.ЭтоПачкаРаздела6РСВ1(ДеревоСведенийСЗВ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СоответствиеКодовОсобыхУсловийТруда = СоответствиеКодовОсобыхУсловийТрудаЗначениямПеречисления();
	
	Комментарий = "";
	
	ДокументПачка = СтруктураДокументаПачкаРазделов6РСВ1();
	
	НомерПачки = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/НомерПачки/Основной"));
	
	СсылкаСЗВ6 = ПачкиСоответствующиеФайлам[НомерПачки];
				
	ДокументПачка.Дата = ДатаПоСтроковомуПредставлению(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/ДатаСоставления")); 
	
	ДокументПачка.НомерПачки = НомерПачки;
	Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/ОтчетныйПериод/Квартал");
		
	Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/ОтчетныйПериод/Год");
	ДокументПачка.ОтчетныйПериод =  ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));

	ДокументПачка.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ[ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/ТипСведений")];
	
	ОтчетныйПериодПачки = ДокументПачка.ОтчетныйПериод;
	Если ДокументПачка.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/КорректируемыйОтчетныйПериод/Квартал");
	
		Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоСведенийСЗВ, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6/КорректируемыйОтчетныйПериод/Год");
		ДокументПачка.КорректируемыйПериод =  ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));
		ОтчетныйПериодПачки = ДокументПачка.КорректируемыйПериод;
	КонецЕсли;
		
	Если ДокументПачка.Организация <> Организация Или ДокументПачка.ЭтоНовый() Тогда
		ДокументПачка.Организация = Организация;
	КонецЕсли;
	
	ИмяСписка = ПерсонифицированныйУчет.ИмяСпискаЗастрахованныхЛицПоТипуФормы("ПАЧКА_РАЗДЕЛОВ6РСВ1");
	Если ПустаяСтрока(ИмяСписка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	МассивЗастрахованных = ПерсонифицированныйУчет.СписокXDTOИзДерева(ДеревоСведенийСЗВ, ИмяСписка);

	СтраховыеНомераФизическихЛиц = ПерсонифицированныйУчет.СтраховыеНомераФизическихЛиц(МассивЗастрахованных);

	СложныйСтаж = Ложь;
	ДанныеФизическогоЛица = Новый Структура("ФизическоеЛицо, Фамилия, Имя, Отчество, СтраховойНомерПФР");
	Для каждого СтрокаЗастрахованного Из МассивЗастрахованных Цикл
						
		ПерсонифицированныйУчет.ЗаполнитьДанныеФизическогоЛицаИзЗначенияXDTO(ДанныеФизическогоЛица, СтрокаЗастрахованного, СтраховыеНомераФизическихЛиц);
		
		НоваяСтрока = ДокументПачка.Сотрудники.Добавить();
		НоваяСтрока.Фамилия  = ДанныеФизическогоЛица.Фамилия;
		НоваяСтрока.Имя 	 = ДанныеФизическогоЛица.Имя;
		НоваяСтрока.Отчество = ДанныеФизическогоЛица.Отчество;
		НоваяСтрока.СтраховойНомерПФР = ДанныеФизическогоЛица.СтраховойНомерПФР;
		ФизическоеЛицо = ДанныеФизическогоЛица.ФизическоеЛицо;
		
		// Если не находим создаем новое.
		НовоеФизЛицо = ФизическоеЛицо = Неопределено;
		
		Если НовоеФизЛицо Тогда
		
			ФизическоеЛицо = ПерсонифицированныйУчет.НовоеЗастрахованноеЛицо(ДанныеФизическогоЛица, НачалоГода(ДокументПачка.ОтчетныйПериод));
			
			ДобавленыНовыеФизлица = Истина;
			
			// Добавим сообщение в строку комментария.
			Комментарий = Комментарий + ?(ПустаяСтрока(Комментарий), "", ";" + Символы.ПС) + ФизическоеЛицо.Наименование + ", СНИЛС " + НоваяСтрока.СтраховойНомерПФР;
		
		КонецЕсли; 
		
		НоваяСтрока.Сотрудник = ФизическоеЛицо;
				
		НоваяСтрока.НачисленоСтраховая = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаЗастрахованного, "СуммаВзносовНаОПС");
		
		НоваяСтрока.ФиксНачисленныеВзносы = Истина;
		НоваяСтрока.ФиксСтаж = Истина;
		НоваяСтрока.ФиксЗаработок = Истина;
		
		СтрокиДохода = ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СведенияОсуммеВыплатИвознагражденийВпользуЗЛ");
		Если СтрокиДохода = Неопределено Тогда
			СтрокиДохода = Новый Массив;
		КонецЕсли;	
		
		Для каждого ЗаписьОДоходе Из СтрокиДохода Цикл
			
			НоваяСтрока = ДокументПачка.СведенияОЗаработке.Добавить();
			НоваяСтрока.Сотрудник = ФизическоеЛицо;
			
			Если ВРег(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "ТипСтроки")) = "ИТОГ" Тогда
				НоваяСтрока.Месяц = 0;
			Иначе
				Месяц = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "Месяц"));
				НоваяСтрока.Месяц = Месяц;
			КонецЕсли;
							
			НоваяСтрока.КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицДляПФР[ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "КодКатегории")];
			
			НоваяСтрока.Заработок = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатИныхВознаграждений");
			НоваяСтрока.ОблагаетсяВзносамиДоПредельнойВеличины = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "НеПревышающиеВсего");
			НоваяСтрока.ОблагаетсяВзносамиСвышеПредельнойВеличины = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "ПревышающиеПредельную");
			НоваяСтрока.ПоДоговорамГПХДоПредельнойВеличины = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "НеПревышающиеПоДоговорам");

		КонецЦикла;
		СтрокиДоходаВредника = ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СведенияОсуммеВыплатИвознагражденийПоДопТарифу");
		
		Если СтрокиДоходаВредника = Неопределено Тогда
			СтрокиДоходаВредника = Новый Массив;
		КонецЕсли;	
		
       Для каждого ЗаписьОДоходе Из СтрокиДоходаВредника Цикл
		   НоваяСтрока = ДокументПачка.СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Добавить();
		   
			Если ВРег(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "ТипСтроки")) = "ИТОГ" Тогда
				НоваяСтрока.Месяц = 0;
			Иначе
				Месяц = Число(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "Месяц"));
				НоваяСтрока.Месяц = Месяц;
			КонецЕсли;

			КодКлассаОсобыхУсловий = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "КодСпециальнойОценкиУсловийТруда");
			
			НоваяСтрока.КлассУсловийТруда = СоответствиеКодовОсобыхУсловийТруда.Получить(КодКлассаОсобыхУсловий);
			
			НоваяСтрока.Сотрудник = ФизическоеЛицо;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатПоДопТарифу27_1");
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаВыплатПоДопТарифу27_2_18")
			
		КонецЦикла;                
		
		// Сохраним данные о стаже
		
		ПрочитатьДанныеОСтаже(ДокументПачка.ЗаписиОСтаже, ФизическоеЛицо, ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СтажевыйПериод"), Классификаторы);
		
		Если ДокументПачка.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			СтрокиКорректировок = ПерсонифицированныйУчет.СписокXDTOИзДерева(СтрокаЗастрахованного, "СведенияОкорректировках");
		
			Если СтрокиКорректировок = Неопределено Тогда
				СтрокиКорректировок = Новый Массив;
			КонецЕсли;	
			
			Для Каждого СтрокаКорректировки Из СтрокиКорректировок Цикл
				НоваяСтрока = ДокументПачка.КорректирующиеСведения.Добавить();
				НоваяСтрока.Сотрудник = ФизическоеЛицо;
				
				Если ВРег(ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаКорректировки, "ТипСтроки")) = "ИТОГ" Тогда
					Продолжить;
				КонецЕсли;
				
				Год = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаКорректировки, "Год");
				Квартал = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(СтрокаКорректировки, "Квартал");
				
				НоваяСтрока.КорректируемыйПериод = ОтчетныйПериодПоГодуИКварталу(Число(Год), Число(Квартал));
				
				НоваяСтрока.ДоначисленоНаОПС = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаДоначисленныхВзносовОПС");
				НоваяСтрока.ДоначисленоСтраховая = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаДоначисленныхВзносовНаСтраховую");
				НоваяСтрока.ДоначисленоНакопительная = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ЗаписьОДоходе, "СуммаДоначисленныхВзносовНаНакопительную");
			КонецЦикла;	
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(Комментарий) Тогда
		ДокументПачка.Комментарий = "Были созданы новые элементы справочника «Физические лица» для следующих застрахованных лиц: " + Комментарий;
	КонецЕсли; 
	
	ПачкаОбъект = СоздатьДокументыПачкиРазделов6ИзСтруктуры(ДокументПачка, СсылкаСЗВ6, СложныйСтаж, МассивНеСоответствующихФайламПачек);
	
	ПачкаОбъект.ПометкаУдаления = Ложь;
	ПачкаОбъект.ФайлСформирован = Истина;
	ПачкаОбъект.ДокументПринятВПФР = Истина;
	ПачкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	Возврат ПачкаОбъект;
	
КонецФункции

Функция СоответствиеКодовОсобыхУсловийТрудаЗначениямПеречисления()
	СоответствиеКодов = Новый Соответствие;
	
	СоответствиеКодов.Вставить("О4", Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный);
	СоответствиеКодов.Вставить("В3.4", Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4);
	СоответствиеКодов.Вставить("В3.3", Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3);
	СоответствиеКодов.Вставить("В3.2", Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2);
	СоответствиеКодов.Вставить("В3.1", Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1);
	
	Возврат СоответствиеКодов;
КонецФункции	

Функция СтруктураДокументаСЗВ_6()
	СтруктураДокумента = Новый Структура;

	ОписаниеДокумента = Метаданные.Документы.ПачкаДокументовСЗВ_6_1;
	
	Для Каждого Реквизит Из ОписаниеДокумента.Реквизиты Цикл
		СтруктураДокумента.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Для Каждого ОписаниеТЧ Из ОписаниеДокумента.ТабличныеЧасти Цикл
		Таблица = Новый ТаблицаЗначений;
		СтруктураДокумента.Вставить(ОписаниеТЧ.Имя, Таблица);	
		Для Каждого РеквизитТЧ Из ОписаниеТЧ.Реквизиты Цикл
			Таблица.Колонки.Добавить(РеквизитТЧ.Имя);		
		КонецЦикла;	
	КонецЦикла;	
	
	СтруктураДокумента.Вставить("Дата");
	
	Возврат СтруктураДокумента;
	
КонецФункции

Функция СтруктураДокументаСЗВ_6_4()
	СтруктураДокумента = Новый Структура;

	ОписаниеДокумента = Метаданные.Документы.ПачкаДокументовСЗВ_6_4;
	
	Для Каждого Реквизит Из ОписаниеДокумента.Реквизиты Цикл
		СтруктураДокумента.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Для Каждого ОписаниеТЧ Из ОписаниеДокумента.ТабличныеЧасти Цикл
		Таблица = Новый ТаблицаЗначений;
		СтруктураДокумента.Вставить(ОписаниеТЧ.Имя, Таблица);	
		Для Каждого РеквизитТЧ Из ОписаниеТЧ.Реквизиты Цикл
			Таблица.Колонки.Добавить(РеквизитТЧ.Имя);		
		КонецЦикла;	
	КонецЦикла;	
	
	СтруктураДокумента.Вставить("Дата");
	
	Возврат СтруктураДокумента;
	
КонецФункции

Функция СтруктураДокументаПачкаРазделов6РСВ1()
	СтруктураДокумента = Новый Структура;

	ОписаниеДокумента = Метаданные.Документы.ПачкаРазделов6РасчетаРСВ_1;
	
	Для Каждого Реквизит Из ОписаниеДокумента.Реквизиты Цикл
		СтруктураДокумента.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Для Каждого ОписаниеТЧ Из ОписаниеДокумента.ТабличныеЧасти Цикл
		Таблица = Новый ТаблицаЗначений;
		СтруктураДокумента.Вставить(ОписаниеТЧ.Имя, Таблица);	
		Для Каждого РеквизитТЧ Из ОписаниеТЧ.Реквизиты Цикл
			Таблица.Колонки.Добавить(РеквизитТЧ.Имя);		
		КонецЦикла;	
	КонецЦикла;	
	
	СтруктураДокумента.Вставить("Дата");
	
	Возврат СтруктураДокумента;
	
КонецФункции

Функция СоздатьДокументыСЗВ_6ИзСтруктуры(СтруктураДокумента, ПачкаСсылка, СложныйСтаж, МассивПачекКУдалению)
	Если ЗначениеЗаполнено(ПачкаСсылка) И ((ТипЗнч(ПачкаСсылка) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_1") И СложныйСтаж) 
		Или (ТипЗнч(ПачкаСсылка) = Тип("ДокументСсылка.РеестрСЗВ_6_2") И Не СложныйСтаж)) Тогда
		
		ПачкаОбъект = ПачкаСсылка.ПолучитьОбъект();
	Иначе
		Если СложныйСтаж Тогда
			ПачкаОбъект = Документы.ПачкаДокументовСЗВ_6_1.СоздатьДокумент();
		Иначе
			ПачкаОбъект = Документы.РеестрСЗВ_6_2.СоздатьДокумент();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПачкаСсылка) Тогда
			МассивПачекКУдалению.Добавить(ПачкаСсылка);
		КонецЕсли;	
		
	КонецЕсли;	
	
	Для Каждого Реквизит Из СтруктураДокумента Цикл
		ЗначениеРеквизита = Реквизит.Значение;
		
		Если ТипЗнч(ЗначениеРеквизита) = Тип("ТаблицаЗначений") Тогда
			ПачкаОбъект[Реквизит.Ключ].Очистить();
			
			Для Каждого СтрокаТаблицы Из ЗначениеРеквизита Цикл
				ЗаполнитьЗначенияСвойств(ПачкаОбъект[Реквизит.Ключ].Добавить(), СтрокаТаблицы);	
			КонецЦикла;	
		Иначе
			ПачкаОбъект[Реквизит.Ключ] = ЗначениеРеквизита		
		КонецЕсли;
	КонецЦикла;	
	
	Возврат ПачкаОбъект;	
КонецФункции

Функция СоздатьДокументыСЗВ_6_4ИзСтруктуры(СтруктураДокумента, ПачкаСсылка, СложныйСтаж, МассивПачекКУдалению)
	Если ЗначениеЗаполнено(ПачкаСсылка)
		И ТипЗнч(ПачкаСсылка) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
		
		ПачкаОбъект = ПачкаСсылка.ПолучитьОбъект();
	Иначе
		ПачкаОбъект = Документы.ПачкаДокументовСЗВ_6_4.СоздатьДокумент();
		
		Если ЗначениеЗаполнено(ПачкаСсылка) Тогда
			МассивПачекКУдалению.Добавить(ПачкаСсылка);
		КонецЕсли;		
	КонецЕсли;	
	
	Для Каждого Реквизит Из СтруктураДокумента Цикл
		ЗначениеРеквизита = Реквизит.Значение;
		
		Если ТипЗнч(ЗначениеРеквизита) = Тип("ТаблицаЗначений") Тогда
			ПачкаОбъект[Реквизит.Ключ].Очистить();
			
			Для Каждого СтрокаТаблицы Из ЗначениеРеквизита Цикл
				ЗаполнитьЗначенияСвойств(ПачкаОбъект[Реквизит.Ключ].Добавить(), СтрокаТаблицы);	
			КонецЦикла;	
		Иначе
			ПачкаОбъект[Реквизит.Ключ] = ЗначениеРеквизита		
		КонецЕсли;
	КонецЦикла;	
	
	Возврат ПачкаОбъект;	
КонецФункции

Функция СоздатьДокументыПачкиРазделов6ИзСтруктуры(СтруктураДокумента, ПачкаСсылка, СложныйСтаж, МассивПачекКУдалению)
	Если ЗначениеЗаполнено(ПачкаСсылка)
		И ТипЗнч(ПачкаСсылка) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
		
		ПачкаОбъект = ПачкаСсылка.ПолучитьОбъект();
	Иначе
		ПачкаОбъект = Документы.ПачкаРазделов6РасчетаРСВ_1.СоздатьДокумент();
		
		Если ЗначениеЗаполнено(ПачкаСсылка) Тогда
			МассивПачекКУдалению.Добавить(ПачкаСсылка);
		КонецЕсли;		
	КонецЕсли;	
	
	Для Каждого Реквизит Из СтруктураДокумента Цикл
		ЗначениеРеквизита = Реквизит.Значение;
		
		Если ТипЗнч(ЗначениеРеквизита) = Тип("ТаблицаЗначений") Тогда
			ПачкаОбъект[Реквизит.Ключ].Очистить();
			
			Для Каждого СтрокаТаблицы Из ЗначениеРеквизита Цикл
				ЗаполнитьЗначенияСвойств(ПачкаОбъект[Реквизит.Ключ].Добавить(), СтрокаТаблицы);	
			КонецЦикла;	
		Иначе
			ПачкаОбъект[Реквизит.Ключ] = ЗначениеРеквизита		
		КонецЕсли;
	КонецЦикла;	
	
	Возврат ПачкаОбъект;	
КонецФункции

Процедура УстановитьПризнакНаличияИсходныхПачекРаздела6()
	Если ОтчетныйПериод >= '20140101' Тогда
	
		СписокПачекРаздела6 = Новый Массив;
		
		Для Каждого ОписаниеДокумента Из СписокПачекСЗВ Цикл
			Если ТипЗнч(ОписаниеДокумента.ПачкаДокументов) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
				СписокПачекРаздела6.Добавить(ОписаниеДокумента.ПачкаДокументов);
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокПачек", СписокПачекРаздела6);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПачкаРазделов6РасчетаРСВ_1.Ссылка
		|ИЗ
		|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
		|ГДЕ
		|	ПачкаРазделов6РасчетаРСВ_1.Ссылка В(&СписокПачек)
		|	И ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)";
		
		Если Запрос.Выполнить().Пустой() Тогда
			СодержитТолькоКорректирующиеФормы = Истина;
		Иначе
			СодержитТолькоКорректирующиеФормы = Ложь;
		КонецЕсли;	
	Иначе
		СодержитТолькоКорректирующиеФормы = Ложь;	
	КонецЕсли;			
КонецПроцедуры	

Функция ОтчетныйПериодПоГодуИКварталу(Год, Квартал)
	ОтчетныйПериодПачки = Неопределено;
	
	Если Год >= 2014 Тогда
		Если Квартал = 0 Тогда
			ОтчетныйПериодПачки = Дата(Год, 10, 1);
		Иначе
			ОтчетныйПериодПачки = Дата(Год, Квартал - 2, 1);
		КонецЕсли;		
	ИначеЕсли  Год = 2010 Тогда
		Если Квартал = 1 Тогда
			ОтчетныйПериодПачки = '20100101'
		Иначе
			ОтчетныйПериодПачки = '20100701'
		КонецЕсли;
	Иначе
		ОтчетныйПериодПачки = ДобавитьМесяц(Дата(Год, 1, 1), (Число(Квартал) - 1) * 3);
	КонецЕсли;

	Возврат ОтчетныйПериодПачки;
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриУстановкеПометкиУдаления(Значение)
	
	Для Каждого ПачкаСЗВ Из СписокПачекСЗВ Цикл
		ПачкаОбъект = ПачкаСЗВ.ПачкаДокументов.ПолучитьОбъект();
		Если ПачкаОбъект <> Неопределено Тогда
			ПачкаОбъект.УстановитьПометкуУдаления(Значение);
		КонецЕсли;
	КонецЦикла;	
	
	Для Каждого ПачкаСЗВ Из СписокПачекСЗВ6_3 Цикл
		ПачкаОбъект = ПачкаСЗВ.ПачкаДокументов.ПолучитьОбъект();
		Если ПачкаОбъект <> Неопределено Тогда
			ПачкаОбъект.УстановитьПометкуУдаления(Значение);
		КонецЕсли;
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ОписьПачекСЗВ) Тогда
		ОписьОбъект = ОписьПачекСЗВ.ПолучитьОбъект();
		Если ОписьОбъект <> Неопределено Тогда
			ОписьОбъект.УстановитьПометкуУдаления(Значение);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РСВ_1) Тогда
		Если Значение Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("РСВ_1", РСВ_1);
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	КомплектыОтчетностиПерсучета.Ссылка
			|ИЗ
			|	Справочник.КомплектыОтчетностиПерсучета КАК КомплектыОтчетностиПерсучета
			|ГДЕ
			|	КомплектыОтчетностиПерсучета.РСВ_1 = &РСВ_1
			|	И КомплектыОтчетностиПерсучета.Ссылка <> &Ссылка";
			
			Если Запрос.Выполнить().Пустой() Тогда
				РСВ_1Объект = РСВ_1.ПолучитьОбъект();
				Если РСВ_1Объект <> Неопределено Тогда
					РСВ_1Объект.УстановитьПометкуУдаления(Значение);
				КонецЕсли;
			КонецЕсли;	
		Иначе
			РСВ_1Объект = РСВ_1.ПолучитьОбъект();
			Если РСВ_1Объект <> Неопределено Тогда
				РСВ_1Объект.УстановитьПометкуУдаления(Значение);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияНеБудутПередаваться;

КонецПроцедуры	

#КонецОбласти

#КонецЕсли
