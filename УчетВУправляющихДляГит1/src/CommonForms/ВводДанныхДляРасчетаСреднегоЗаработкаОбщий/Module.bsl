#Область ОписаниеПеременных

&НаКлиенте
Перем ТаблицаРедактируется;

&НаКлиенте
Перем ТекущееЗначение;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// "Распаковываем" параметры
	Сотрудник = Параметры.Сотрудник;
	Организация = Параметры.Организация;
	ДатаНачалаСобытия = Параметры.ДатаНачалаСобытия;
	ДокументСсылка = Параметры.ДокументСсылка;
	
	// Заполним дату приема на работу для ограничения ввода данных о среднем заработке.
	
	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудник, "ДатаПриема");
	Если КадровыеДанные.Количество()>0 Тогда
		ДатаПриемаНаРаботуСотрудника = КадровыеДанные[0].ДатаПриема;
	Иначе
		Отказ = Истина;
	КонецЕсли; 
	
	Если Отказ Тогда
		// Проблемы с датой приема на работу.
		Возврат;
	КонецЕсли;
	
	// Заполняем период расчета среднего заработка.
	НачалоПериодаРасчета = Параметры.НачалоПериодаРасчета;
	ОкончаниеПериодаРасчета = Параметры.ОкончаниеПериодаРасчета;
	
	// Инициализируем соответствие по умолчанию.
	МесяцыРасчета = Новый ФиксированноеСоответствие(Новый Соответствие);
	
	// Заполняем период расчета среднего заработка.
	ЗаполнитьПериодРасчетаПоУмолчанию();
	// Заполним соответствие месяца и номера его колонки.
	ЗаполнитьМесяцыРасчета(ЭтаФорма);
	
	УстановитьОтображениеЭлементовУправления();
	
	УстановитьЗаголовокФормы();
	
	Если Параметры.ДанныеОНачислениях <> Неопределено Тогда
		ТаблицаНачислений = ПолучитьИзВременногоХранилища(Параметры.ДанныеОНачислениях);
	КонецЕсли;
	
	Если Параметры.ДанныеОВремени <> Неопределено Тогда
		ТаблицаВремени = ПолучитьИзВременногоХранилища(Параметры.ДанныеОВремени);
	КонецЕсли;
	
	Если Параметры.ДанныеОНачислениях = Неопределено Тогда
		// Используется режим непосредственного редактирования данных учета для расчета среднего заработка
		// в этом режиме непосредственно из учета получаем данные по всем месяцам
		// по окончании редактирования изменения записываем непосредственно в учет.
		ТаблицаНачислений	= Новый ТаблицаЗначений;
		ТаблицаВремени		= Новый ТаблицаЗначений;
		
		// Признак того, что при закрытии формы необходимо записать изменения в учет.
		ЗаписыватьИзменения = Истина;
	КонецЕсли;
	
	Если ЗаписыватьИзменения Тогда
		ПрочитатьДанныеУчетаСреднегоЗаработка();
	Иначе
		ЗаполнитьФорму(ТаблицаНачислений, ТаблицаВремени);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОсновныеНачисленияПриИзменении(Элемент)
	
	РассчитатьСреднийЗаработок();
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарныхДнейПриИзменении(Элемент)
	
	КалендарныхДнейПриИзмененииНаСервере(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда) 
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьДанныеУчета(Команда)
	
	Если СреднийЗаработокИтог <> 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением введенные данные будут очищены.
			|Продолжить?'");
			
		ОписаниеОповещения = Новый ОписаниеОповещения("ПеречитатьДанныеУчетаЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		ПеречитатьДанныеУчетаЗавершение(КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПеречитатьДанныеУчетаЗавершение(Знач Результат, Знач Параметры = Неопределено) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеречитатьДанныеУчетаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ Модифицированность ИЛИ ТолькоПросмотр Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ДанныеДляРасчета = ДанныеДляРасчетаСреднего(ВладелецФормы.УникальныйИдентификатор);
	
	Модифицированность = Ложь;
	Закрыть(ДанныеДляРасчета);
	
КонецПроцедуры

&НаСервере
Функция ДанныеДляРасчетаСреднего(ИдентификаторВладельца)
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("Сотрудник", Сотрудник);
	
	СтруктураДанных.Вставить("НачалоПериодаРасчета", НачалоПериодаРасчета);
	СтруктураДанных.Вставить("ОкончаниеПериодаРасчета", ОкончаниеПериодаРасчета);
	
	СтруктураДанных.Вставить("ДанныеОНачислениях", ПоместитьВоВременноеХранилище(РезультатРедактированияНачислений(ЭтаФорма)));
	СтруктураДанных.Вставить("ДанныеОВремени", ПоместитьВоВременноеХранилище(РезультатРедактированияВремени(ЭтаФорма)));
	
	СтруктураДанных.Вставить("СреднийЗаработок", СреднийЗаработокИтог);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураДанных, ИдентификаторВладельца);
	
КонецФункции	

&НаСервере
Процедура ПеречитатьДанныеУчетаНаСервере()
	
	ПрочитатьДанныеУчетаСреднегоЗаработка();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму(ДанныеОНачислениях, ДанныеОВремени)
	
	Для НомерМесяца = 1 По МесяцыРасчета.Количество() Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(
			ЭтаФорма, "КалендарныхДней" + НомерМесяца, 0);
		
		ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(
			ЭтаФорма, "ОсновныеНачисления" + НомерМесяца, 0);
			
	КонецЦикла;
	
	ЗаполнитьНачисления(ДанныеОНачислениях);
	ЗаполнитьВремя(ДанныеОВремени);
	
	РассчитатьСреднийЗаработок();	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачисления(ДанныеОНачислениях)
	
	Для Каждого СтрокаНачислений Из ДанныеОНачислениях Цикл
		
		ИндексМесяца = МесяцыРасчета.Найти(НачалоМесяца(СтрокаНачислений.Период));
		Если ИндексМесяца <> Неопределено Тогда
			
			НомерМесяца = ИндексМесяца + 1;
			
			ОсновныеНачисления = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
				ЭтаФорма, "ОсновныеНачисления" + НомерМесяца);
				
			ОсновныеНачисления = ОсновныеНачисления + СтрокаНачислений.Сумма;
			
			ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(
				ЭтаФорма, "ОсновныеНачисления" + НомерМесяца, ОсновныеНачисления);
				
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьВремя(ДанныеВремени)
	
	ПоследнийИзвестныйПериод = Неопределено;
	Для Каждого СтрокаДанныхВремени Из ДанныеВремени Цикл
		
		ИндексМесяца = МесяцыРасчета.Найти(НачалоМесяца(СтрокаДанныхВремени.Период));
		Если ИндексМесяца <> Неопределено Тогда
			
			НомерМесяца = ИндексМесяца + 1;
			
			ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(
				ЭтаФорма, "КалендарныхДней" + НомерМесяца, СтрокаДанныхВремени.ОтработаноДнейКалендарных);
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеУчетаСреднегоЗаработка(ОтборМесяцев = Неопределено)
	
	ДанныеДляРасчета = РасчетЗарплатыДляНебольшихОрганизаций.ДанныеДляРасчетаОбщегоСреднегоЗаработкаСотрудника(Сотрудник, Организация, НачалоПериодаРасчета, ОкончаниеПериодаРасчета);
	ЗаполнитьФорму(ДанныеДляРасчета.ДанныеОНачислениях, ДанныеДляРасчета.ДанныеОВремени);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьМесяцыРасчета(Форма)
	
	МесяцыРасчета = Новый Массив;
	МесяцОбхода = НачалоМесяца(Форма.НачалоПериодаРасчета);
	Пока МесяцОбхода <= Форма.ОкончаниеПериодаРасчета Цикл
		МесяцыРасчета.Добавить(МесяцОбхода);
		МесяцОбхода = ДобавитьМесяц(МесяцОбхода, 1);
	КонецЦикла;
	Форма.МесяцыРасчета = Новый ФиксированныйМассив(МесяцыРасчета);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеЭлементовУправления(ДобавляемыеМесяцы = Неопределено)
	
	Для НомерМесяца = МесяцыРасчета.Количество() + 1 По 12 Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СреднийЗаработокГруппа" + НомерМесяца,
			"Видимость",
			Ложь);
		
	КонецЦикла;
	
	СчетчикМесяцев = 1;
	Для Каждого Месяц Из МесяцыРасчета Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЗаголовокДекорация" + СчетчикМесяцев,
			"Заголовок",
			Формат(Месяц, "ДФ='ММММ гггг'"));
			
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"КалендарныхДней" + СчетчикМесяцев,
			"МаксимальноеЗначение",
			ЗарплатаКадрыКлиентСервер.КоличествоДнейМесяца(Месяц));
			
		СчетчикМесяцев = СчетчикМесяцев + 1;

	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ТолькоПросмотр Тогда
		Заголовок = НСтр("ru = 'Данные для расчета среднего заработка (только просмотр)'");
	Иначе
		Заголовок = НСтр("ru = 'Ввод данных для расчета среднего заработка'"); 
	КонецЕсли;
							
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеСтрокиДанныхОВремени()
	
	// Функция конструирует структуру, описывающую данные о времени 
	// для расчета среднего заработка за один месяц расчетного периода.
	// Поля структуры заполнены пустыми значениями соответствующих типов.
	
	ПоляОписания = Новый Соответствие;
	ПоляОписания.Вставить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ПоляОписания.Вставить("Период", Новый ОписаниеТипов("Дата"));
	ПоляОписания.Вставить("ОтработаноДнейКалендарных", Новый ОписаниеТипов("Число"));
	
	Описание = Новый Структура;
	Для Каждого КлючИЗначение Из ПоляОписания Цикл
		Описание.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.ПривестиЗначение());
	КонецЦикла;
	
	Возврат Описание;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПериодРасчетаПоУмолчанию()
	
	НачалоПериода = ДобавитьМесяц(НачалоМесяца(ДатаНачалаСобытия), -12);
	ОкончаниеПериода = НачалоМесяца(ДатаНачалаСобытия) - 1;
	
	ПериодРасчета = Новый СтандартныйПериод;
	ПериодРасчета.ДатаНачала = Макс(НачалоПериода, НачалоМесяца(ДатаПриемаНаРаботуСотрудника));
	ПериодРасчета.ДатаОкончания = ОкончаниеПериода;

	НачалоПериодаРасчета = ПериодРасчета.ДатаНачала;
	ОкончаниеПериодаРасчета = ПериодРасчета.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСреднийЗаработок()
	
	ДанныеНачислений = РезультатРедактированияНачислений(ЭтаФорма);
	ДанныеВремени = РезультатРедактированияВремени(ЭтаФорма);
	
	ТаблицыПоСотруднику = Новый Структура;
	ТаблицыПоСотруднику.Вставить("ДанныеОНачислениях", ДанныеНачислений);
	ТаблицыПоСотруднику.Вставить("ДанныеОВремени", ДанныеВремени);
	
	ПараметрыПолученияДанныхСреднего = РасчетЗарплатыДляНебольшихОрганизаций.ПараметрыПолученияДанныхСреднегоОбщего();
	ПараметрыПолученияДанныхСреднего.Вставить("ТаблицыПоСотруднику", 	ТаблицыПоСотруднику); 
	ПараметрыПолученияДанныхСреднего.Вставить("ДатаНачалаПериода",  	НачалоПериодаРасчета); 
	ПараметрыПолученияДанныхСреднего.Вставить("ДатаОкончанияПериода",	ОкончаниеПериодаРасчета); 
	ПараметрыПолученияДанныхСреднего.Вставить("ДатаНачалаСобытия", 		ДатаНачалаСобытия);		
	
	ДанныеРасчетаСреднегоЗаработка = РасчетЗарплатыДляНебольшихОрганизаций.ДанныеРасчетаСреднегоЗаработкаОбщего(ПараметрыПолученияДанныхСреднего);

	СреднийЗаработокИтог = ДанныеРасчетаСреднегоЗаработка.Итоги.СреднедневнойЗаработок;
	
	УстановитьРасширеннуюПодсказку();
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Функция РезультатРедактированияНачислений(Форма)
	
	Сотрудник						= Форма.Сотрудник;
	ДанныеНачислений = Новый Массив;
	
	Для НомерМесяца = 1 По Форма.МесяцыРасчета.Количество() Цикл
		
		СуммаНачислений = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
			Форма, "ОсновныеНачисления" + НомерМесяца);
			
		Если СуммаНачислений = 0 Тогда
			Продолжить
		КонецЕсли; 
		
		ОписаниеСтроки = ОписаниеСтрокиДанныхОНачисленияхОбщегоСреднегоЗаработка();
		ОписаниеСтроки.Сотрудник = Сотрудник;
		ОписаниеСтроки.Период = Форма.МесяцыРасчета[НомерМесяца - 1];
		ОписаниеСтроки.Сумма = СуммаНачислений;
		ДанныеНачислений.Добавить(ОписаниеСтроки);
		
	КонецЦикла;
		
	Возврат ДанныеНачислений;
	
КонецФункции	

&НаКлиентеНаСервереБезКонтекста
Функция РезультатРедактированияВремени(Форма)

	ДанныеВремени = Новый Массив;
	
	Для НомерМесяца = 1 По Форма.МесяцыРасчета.Количество() Цикл
		
		КалендарныхДней = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
			Форма, "КалендарныхДней" + НомерМесяца);
			
		Если КалендарныхДней = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		ОписаниеСтроки = ОписаниеСтрокиДанныхОВремени();
		ОписаниеСтроки.Сотрудник = Форма.Сотрудник;
		ОписаниеСтроки.Период = Форма.МесяцыРасчета[НомерМесяца - 1];
		ОписаниеСтроки.ОтработаноДнейКалендарных = КалендарныхДней;

		ДанныеВремени.Добавить(ОписаниеСтроки);

	КонецЦикла;
	
	Возврат ДанныеВремени;
	
КонецФункции	

&НаКлиентеНаСервереБезКонтекста
// Функция конструирует структуру, описывающую данные о начислениях 
// для расчета среднего заработка за один месяц расчетного периода.
// Поля структуры заполнены пустыми значениями соответствующих типов.
//
Функция ОписаниеСтрокиДанныхОНачисленияхОбщегоСреднегоЗаработка()
	
	ПоляОписания = Новый Соответствие;
	ПоляОписания.Вставить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ПоляОписания.Вставить("Период", Новый ОписаниеТипов("Дата"));
	ПоляОписания.Вставить("Сумма", Новый ОписаниеТипов("Число"));
	
	Описание = Новый Структура;
	Для Каждого КлючИЗначение Из ПоляОписания Цикл
		Описание.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.ПривестиЗначение());
	КонецЦикла;
	
	Возврат Описание;
	
КонецФункции

&НаСервере
Процедура КалендарныхДнейПриИзмененииНаСервере(ИмяЭлемента)
	
	РассчитатьСреднийЗаработок();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРасширеннуюПодсказку()
	
	КалендарныхДней = 0;
	СуммаЗаработка = 0;
	МассивРасшифровкиМесяцев = Новый Массив;
	МаксимальнаяДлинаРасшифровкиМесяца = 0;	
	МаксимальнаяДлинаРасшифровкиДней = 0;	
	
	Для НомерМесяца = 1 По МесяцыРасчета.Количество() Цикл
		
		СуммаЗаработка = СуммаЗаработка + ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
			ЭтаФорма, "ОсновныеНачисления" + НомерМесяца);
		
		КалендарныхДнейМесяца = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
			ЭтаФорма, "КалендарныхДней" + НомерМесяца);
			
		Если КалендарныхДнейМесяца <> 0 Тогда
			
			Месяц = МесяцыРасчета[НомерМесяца - 1];
			УчтеноДней = РасчетЗарплатыДляНебольшихОрганизаций.КоличествоУчтенныхДнейОтпуска(ДатаНачалаСобытия, Месяц, КалендарныхДнейМесяца);
			КалендарныхДней = КалендарныхДней + УчтеноДней;
			
			РасшифровкаМесяца = Новый Структура("Месяц,Дни", Формат(Месяц, "ДФ='ММММ гггг'"), Формат(УчтеноДней, "ЧДЦ=2"));
			МассивРасшифровкиМесяцев.Добавить(РасшифровкаМесяца);
			
			ДлинаМесяца = СтрДлина(РасшифровкаМесяца.Месяц);
			Если МаксимальнаяДлинаРасшифровкиМесяца < ДлинаМесяца Тогда
				МаксимальнаяДлинаРасшифровкиМесяца = ДлинаМесяца;
			КонецЕсли; 
						
			ДлинаДней = СтрДлина(РасшифровкаМесяца.Дни);
			Если МаксимальнаяДлинаРасшифровкиДней < ДлинаДней Тогда
				МаксимальнаяДлинаРасшифровкиДней = ДлинаДней;
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Если СуммаЗаработка = 0 ИЛИ КалендарныхДней = 0 Тогда
		ТекстПодсказки = НСтр("ru='Нет данных для расчета среднего заработка'");
	Иначе
		
		ТекстПодсказки = НСтр("ru='Всего заработано'") + ": " + Формат(СуммаЗаработка, "ЧДЦ=2");
		
		ТекстПодсказки = ТекстПодсказки + Символы.ПС + Символы.ПС
			+ НСтр("ru='Учтено дней'") + ": " + Формат(КалендарныхДней, "ЧДЦ=2") + Символы.ПС
			+ Символы.Таб + НСтр("ru='в том числе'") + ":";
			
		ШаблонПробелов = "          ";
		Для каждого РасшифровкаМесяца Из МассивРасшифровкиМесяцев Цикл
			
			ТекстПодсказки = ТекстПодсказки + Символы.ПС + Символы.Таб
				+ РасшифровкаМесяца.Месяц + Лев(ШаблонПробелов, МаксимальнаяДлинаРасшифровкиМесяца - СтрДлина(РасшифровкаМесяца.Месяц))
				+ " - "
				+ Лев(ШаблонПробелов, МаксимальнаяДлинаРасшифровкиДней - СтрДлина(РасшифровкаМесяца.Дни)) + РасшифровкаМесяца.Дни;

		КонецЦикла;
		
		ТекстПодсказки = ТекстПодсказки + Символы.ПС + Символы.ПС
			+ НСтр("ru='Среднедневной заработок'") + ": " + Формат(СуммаЗаработка / КалендарныхДней, "ЧДЦ=2");
		
	КонецЕсли;
	
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		ЭтаФорма, "СреднийЗаработокИтог", ТекстПодсказки);
	
КонецПроцедуры

#КонецОбласти
