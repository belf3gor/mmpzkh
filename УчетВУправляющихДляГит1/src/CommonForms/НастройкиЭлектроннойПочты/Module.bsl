
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УчетнаяЗапись = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("УчетнаяЗаписьЭлектроннойПочты");
	
	ПараметрыОтправкиСкрытыхКопий = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ПараметрыОтправкиСкрытыхКопий");
	ПараметрыОтправкиСкрытыхКопий.Свойство("ОтправлятьСкрытыеКопии"     , ОтправлятьСкрытыеКопии);
	ПараметрыОтправкиСкрытыхКопий.Свойство("АдресПолучателяСкрытойКопии", АдресПолучателяСкрытойКопии);
	
	ПодписьHTML = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("Подпись");
	Подпись.УстановитьHTML(ПодписьHTML, Новый Структура);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru='Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ОтправлятьСкрытыеКопии И НЕ ЗначениеЗаполнено(АдресПолучателяСкрытойКопии) Тогда
		ТекстОшибки = НСтр("ru='Не заполнен адрес получателя копий писем'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "АдресПолучателяСкрытойКопии", , Отказ);
	КонецЕсли;
	
	Если ОтправлятьСкрытыеКопии И ЗначениеЗаполнено(АдресПолучателяСкрытойКопии) Тогда
		РезультатПроверки = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(АдресПолучателяСкрытойКопии, Ложь);
		Для Каждого ПроверенныйАдрес Из РезультатПроверки Цикл
			Если НЕ ЗначениеЗаполнено(ПроверенныйАдрес.Адрес)
				ИЛИ НЕ ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(ПроверенныйАдрес.Адрес) Тогда
				
				ТекстОшибки = НСтр("ru='Указан некорректный адрес электронной почты.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ,
					"АдресПолучателяСкрытойКопии", , Отказ);
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтправлятьСкрытыеКопииПриИзменении(Элемент)
	
	ОтправлятьСкрытыеКопииПриИзмененииНаСервере(ОтправлятьСкрытыеКопии, УчетнаяЗапись, АдресПолучателяСкрытойКопии);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УчетнаяЗаписьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УчетнаяЗаписьОбработкаВыбораНаСервере(УчетнаяЗапись, ВыбранноеЗначение, АдресПолучателяСкрытойКопии, ОтправлятьСкрытыеКопии);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьИЗакрыть()
	
	Отказ = Ложь;
	СохранитьНастройки(Отказ);
	
	Если НЕ Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Отказ)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиСервер();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиСервер()
	
	Перем ПодписьHTML;
	
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("УчетнаяЗаписьЭлектроннойПочты", УчетнаяЗапись);
	
	ПараметрыОтправкиСкрытыхКопий = Новый Структура("ОтправлятьСкрытыеКопии, АдресПолучателяСкрытойКопии",
		ОтправлятьСкрытыеКопии, СокрЛП(АдресПолучателяСкрытойКопии));
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ПараметрыОтправкиСкрытыхКопий", ПараметрыОтправкиСкрытыхКопий);
	
	Подпись.ПолучитьHTML(ПодписьHTML, Новый Структура);
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("Подпись", ПодписьHTML);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтправлятьСкрытыеКопииПриИзмененииНаСервере(Знач ОтправлятьСкрытыеКопии, УчетнаяЗапись, АдресПолучателяСкрытойКопии)
	
	Если НЕ ОтправлятьСкрытыеКопии ИЛИ НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат;
	КонецЕсли;
	
	Адрес = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "АдресЭлектроннойПочты");
	ДобавитьАдресПолучателяСкрытойКопии(АдресПолучателяСкрытойКопии, Адрес);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УчетнаяЗаписьОбработкаВыбораНаСервере(ТекущаяУчетнаяЗапись, ВыбраннаяУчетнаяЗапись, АдресПолучателяСкрытойКопии, ОтправлятьСкрытыеКопии)
	
	УчетныеЗаписи = Новый Массив;
	УчетныеЗаписи.Добавить(ТекущаяУчетнаяЗапись);
	УчетныеЗаписи.Добавить(ВыбраннаяУчетнаяЗапись);
	АдресаУчетныхЗаписей = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(УчетныеЗаписи, "АдресЭлектроннойПочты");
	
	Если НЕ ЗначениеЗаполнено(ТекущаяУчетнаяЗапись) И ОтправлятьСкрытыеКопии Тогда
		ДобавитьАдресПолучателяСкрытойКопии(АдресПолучателяСкрытойКопии, АдресаУчетныхЗаписей[ВыбраннаяУчетнаяЗапись]);
		Возврат;
	КонецЕсли;
	
	ОбновитьАдресПолучателяСкрытойКопии(АдресПолучателяСкрытойКопии,
		АдресаУчетныхЗаписей[ВыбраннаяУчетнаяЗапись],
		АдресаУчетныхЗаписей[ТекущаяУчетнаяЗапись]);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьАдресПолучателяСкрытойКопии(АдресПолучателяСкрытойКопии, Знач НовыйАдрес)
	
	Адреса = СтрРазделить(АдресПолучателяСкрытойКопии, ";", Ложь);
	НовыеАдресПолучателейСкрытойКопии = Новый Массив;
	
	Для Каждого Адрес Из Адреса Цикл
		Адрес = СокрЛП(Адрес);
		Если Адрес = НовыйАдрес Тогда
			Продолжить;
		КонецЕсли;
		НовыеАдресПолучателейСкрытойКопии.Добавить(Адрес);
	КонецЦикла;
	
	НовыеАдресПолучателейСкрытойКопии.Добавить(НовыйАдрес);
	
	АдресПолучателяСкрытойКопии = СтрСоединить(НовыеАдресПолучателейСкрытойКопии, "; ") + ";";
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьАдресПолучателяСкрытойКопии(АдресПолучателяСкрытойКопии, Знач НовыйАдрес, Знач СтарыйАдрес)
	
	Адреса = СтрРазделить(АдресПолучателяСкрытойКопии, ";", Ложь);
	НовыеАдресПолучателейСкрытойКопии = Новый Массив;
	
	Для Каждого Адрес Из Адреса Цикл
		Адрес = СокрЛП(Адрес);
		Если Адрес = СтарыйАдрес Тогда
			НовыеАдресПолучателейСкрытойКопии.Добавить(НовыйАдрес);
			Продолжить;
		КонецЕсли;
		НовыеАдресПолучателейСкрытойКопии.Добавить(Адрес);
	КонецЦикла;
	
	Если НовыеАдресПолучателейСкрытойКопии.Найти(НовыйАдрес) = Неопределено Тогда
		НовыеАдресПолучателейСкрытойКопии.Добавить(НовыйАдрес);
	КонецЕсли;
	
	АдресПолучателяСкрытойКопии = СтрСоединить(НовыеАдресПолучателейСкрытойКопии, "; ") + ";";
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(ЭтотОбъект)
	
	Элементы = ЭтотОбъект.Элементы;
	
	Элементы.АдресПолучателяСкрытойКопии.Доступность = ЭтотОбъект.ОтправлятьСкрытыеКопии;
	
КонецПроцедуры

#КонецОбласти