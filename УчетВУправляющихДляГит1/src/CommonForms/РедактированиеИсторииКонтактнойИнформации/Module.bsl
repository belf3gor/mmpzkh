
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ИсторияИзмененийАдреса")
		ИЛИ НЕ Параметры.Свойство("ТекущийАдрес") Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Вид = Параметры.Вид;
	Тип = ?(ЗначениеЗаполнено(Вид), 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Вид, "Тип"), Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	ИсторияКонтактнойИнформацииИзПараметров = Параметры.ИсторияИзмененийАдреса.Выгрузить();
	УправлениеКонтактнойИнформациейБП.ЗаполнитьЗначенияJSONИсторииКонтактнойИнформации(ИсторияКонтактнойИнформацииИзПараметров);
	
	ИсторияКонтактнойИнформации.Загрузить(ИсторияКонтактнойИнформацииИзПараметров);
	Если ИсторияКонтактнойИнформации.Количество() = 0 Тогда
		СтрокаКИ = ИсторияКонтактнойИнформации.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКИ, Параметры.ТекущийАдрес);
		СтрокаКИ.Вид = Вид;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	Элементы.ИсторияКонтактнойИнформации.ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	Если ТолькоПросмотр Тогда
		
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	УстановитьПризнакПервоначальногоЗначения(ИсторияКонтактнойИнформации);
	
	Если ИсторияКонтактнойИнформации.Количество() > 0 Тогда
		Элементы.ИсторияКонтактнойИнформации.ТекущаяСтрока =
			ИсторияКонтактнойИнформации[ИсторияКонтактнойИнформации.Количество()-1].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыИсторияКонтактнойИнформации

&НаКлиенте
Процедура ИсторияКонтактнойИнформацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ИсторияКонтактнойИнформацииПредставление" Тогда
		
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элемент.ТекущиеДанные;
		
		ОткрытьФормуКонтактнойИнформации(ТекущиеДанные.Значение, ТекущиеДанные.Представление);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияКонтактнойИнформацииПередУдалением(Элемент, Отказ)
	
	Если ИсторияКонтактнойИнформации.Индекс(Элемент.ТекущиеДанные) = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияКонтактнойИнформацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ДобавлениеНовойСтроки = Истина;
	
	ЗначениеКонтактнойИнформации = "";
	Представление = "";
	Если Копирование Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ЗначениеКонтактнойИнформации = ТекущиеДанные.Значение;
		Представление = ТекущиеДанные.Представление;
		
	КонецЕсли;
	
	ОткрытьФормуКонтактнойИнформации(ЗначениеКонтактнойИнформации, Представление);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияКонтактнойИнформацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПризнакПервоначальногоЗначения(ИсторияКонтактнойИнформации);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = Ложь;
	
	ПроверитьЗаполнениеИстории(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ИсторияИзмененийАдреса", ИсторияКонтактнойИнформации);
	
	Если Модифицированность Тогда
		
		ОповеститьОВыборе(РезультатВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПризнакПервоначальногоЗначения(ТаблицаИстории)
	
	ТаблицаИстории.Сортировать("Период");
	// Первая строка должна быть первоначальным значением
	Если ТаблицаИстории.Количество() > 0 Тогда
		ПерваяСтрока = ТаблицаИстории[0];
		ПерваяСтрока.ПервоначальноеЗначение = Истина;
		ПерваяСтрока.Период = '00010101';
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеИстории(Отказ)
	
	ПериодыСтрок = Новый Массив;
	
	Для Каждого Запись Из ИсторияКонтактнойИнформации Цикл
		
		ИндексСтроки = ИсторияКонтактнойИнформации.Индекс(Запись);
		ПрефиксСообщенияСтроки = "ИсторияКонтактнойИнформации["+Формат(ИндексСтроки, "ЧЦ=; ЧДЦ=; ЧГ=")+"].";
		
		Если НЕ ЗначениеЗаполнено(Запись.Период) И ИндексСтроки > 0 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Нужно указать дату начала действия'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"Период", , Отказ);
		КонецЕсли;
		
		Если ПериодыСтрок.Найти(Запись.Период) = Неопределено Тогда
			Если ЗначениеЗаполнено(Запись.Период) Тогда
				ПериодыСтрок.Добавить(Запись.Период);
			КонецЕсли;
		Иначе
			// Строка с такой датой уже была раньше, это ошибка.
			// Не может быть 2 строки с одинаковой датой.
			СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"Период", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.Представление) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Поле ""Адрес"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"КПП",  , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформации(ЗначениеКонтактнойИнформации, Представление)
	
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		Вид, ЗначениеКонтактнойИнформации, Представление, , Тип);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуКонтактнойИнформацииЗавершение", ЭтотОбъект, Новый Структура);
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформацииЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ИсторияКонтактнойИнформации.ТекущиеДанные;
	Если ДобавлениеНовойСтроки Тогда
		
		НовыйПериод = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
		
		// Получим максимальный период в таблице
		ПоследнийПериод = '00010101000000';
		Для Каждого ЗаписьИстории ИЗ ИсторияКонтактнойИнформации Цикл
			Если ЗаписьИстории.Период > ПоследнийПериод Тогда
				ПоследнийПериод = ЗаписьИстории.Период;
			КонецЕсли;
		КонецЦикла;
		
		Если НовыйПериод <= ПоследнийПериод Тогда
			НовыйПериод = НачалоДня(ПоследнийПериод + 60*60*24);
		КонецЕсли;
		
		ТекущиеДанные = ИсторияКонтактнойИнформации.Добавить();
		ТекущиеДанные.Период = НовыйПериод;
		
		Элементы.ИсторияКонтактнойИнформации.ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
		ТекущийЭлемент = Элементы.ИсторияКонтактнойИнформацииПредставление;
		
	КонецЕсли;
	ТекущиеДанные.Вид = РезультатЗакрытия.Вид;
	ТекущиеДанные.Значение = РезультатЗакрытия.Значение;
	ТекущиеДанные.Представление = РезультатЗакрытия.Представление;
	
	ДобавлениеНовойСтроки = Ложь;
	
КонецПроцедуры

#КонецОбласти