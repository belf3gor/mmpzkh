
#Область ОписаниеПеременных

Перем КонтрагентВ1СЭДО;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация             = Параметры.Организация;
	Контрагент              = Параметры.Контрагент;
	ДополнительныеПараметры = Параметры.ДополнительныеПараметры;
	
	HTMLДокумент = ПолучитьОбщийМакет(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ПредложениеОформитьЗаявлениеНаПодключение_%1", ОбщегоНазначения.КодОсновногоЯзыка())).ПолучитьТекст();
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		HTMLДокумент = ПолучитьОбщийМакет(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ПредложениеОформитьЗаявлениеНаПодключениеИзСправочникаКонтрагенты_%1",
		ОбщегоНазначения.КодОсновногоЯзыка())).ПолучитьТекст();
	КонецЕсли;
	
	ПодготовитьФорму(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// В случае полного набора параметров сразу стартуем помощник подключения в 1С-ЭДО.
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		
		НачатьОткрытиеПомощникаПодключенияЭДО();
		Возврат;
		
	ИначеЕсли НастройкиОтправкиСозданы Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Получатель", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Контрагент));
		ПараметрыФормы.Вставить("Организация", Организация);
		ОткрытьФорму("РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами.Форма.ФормаОтправкиПриглашений",
			ПараметрыФормы, , , , , , РежимОткрытияОкнаФормы.Независимый);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияЗаголовокНажатие(Элемент)
	
	АдресСтраницы = "https://portal.1c.ru/applications/30";
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(АдресСтраницы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НажатиеБольшеНеПоказывать(Команда)
		
	СохранитьЗначениеБольшеНеПоказыватьНаСервере(Истина);
		
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеПоказатьПозже(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключиться(Команда)
	
	Если ПодключитьсяКЭДО() Тогда
	
		Если УчетнаяЗаписьСоздана И ЗначениеЗаполнено(Контрагент) Тогда
			ПараметрыФормы = Новый Структура;
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("Получатель",               Контрагент);
			ЗначенияЗаполнения.Вставить("Отправитель",              Организация);
			ЗначенияЗаполнения.Вставить("ПредварительнаяНастройка", Истина);
			
			ОткрытьФорму("Обработка.ОбменСКонтрагентами.Форма.НастройкаОбменаСКонтрагентом", ЗначенияЗаполнения, ЭтотОбъект.ВладелецФормы);
			
		Иначе
			
			Если ТипПодключенияЭДО = 1 Тогда
				СпособыОЭД = Новый Массив;
				СпособыОЭД.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("СпособыОбменаЭД", СпособыОЭД);
				
				ПараметрыФормы.Вставить("Организация", Организация);
				
				ОткрытьФорму("РегистрСведений.УчетныеЗаписиЭДО.Форма.ПомощникПодключенияЭДО", ПараметрыФормы, ЭтотОбъект.ВладелецФормы);
			Иначе
				ПараметрыФормы = Новый Структура("Ссылка", Организация);
				ФормаПомощникаБизнесСети = "Обработка.БизнесСеть.Форма.ПодключениеУчастников";
				ОткрытьФорму(ФормаПомощникаБизнесСети, ПараметрыФормы, ЭтотОбъект.ВладелецФормы);
			КонецЕсли;
			
		КонецЕсли;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПодключитьсяКЭДО()
	
	Если ОбменСКонтрагентамиСлужебныйВызовСервера.ЕстьПравоВыполненияОбмена(Истина) Тогда
		УстановитьЗначенияКонстант();
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьЗначенияКонстант()
	
	ИспользуютсяОбменЭД = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции(
		"ИспользоватьОбменЭД");
	Если Не ИспользуютсяОбменЭД Тогда
		Константы.ИспользоватьОбменЭД.Установить(Истина);
	КонецЕсли;
	
	ИспользуютсяЭП = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции(
		"ИспользоватьЭлектронныеПодписиЭД");
	Если Не ИспользуютсяЭП Тогда
		Константы.ИспользоватьЭлектронныеПодписи.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФорму(Отказ)
	
	ТипПодключенияЭДО    = 1;
	УчетнаяЗаписьСоздана = Ложь;
	КлючСохраненияПоложенияОкна = УникальныйИдентификатор;
	
	// Проверим - есть ли уже подключение к сервису 1С-ЭДО по искомой организации.
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО,
	|	УчетныеЗаписиЭДО.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
	|ГДЕ
	|	&УсловиеОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.НастройкиОтправкиЭлектронныхДокументов КАК НастройкиОтправкиЭлектронныхДокументов
	|ГДЕ
	|	НастройкиОтправкиЭлектронныхДокументов.Отправитель = &Организация
	|	И НастройкиОтправкиЭлектронныхДокументов.Получатель = &Контрагент";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОрганизация", "УчетныеЗаписиЭДО.Организация = &Организация");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОрганизация", "ИСТИНА");
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("Контрагент" , Параметры.Контрагент);
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не Результат[0].Пустой() Тогда
		
		Выборка = Результат[0].Выбрать();
		Если Выборка.Следующий() Тогда
			
			Если Не ЗначениеЗаполнено(Организация) Тогда
				Организация = Выборка.Организация;
			КонецЕсли;
			
			УчетнаяЗаписьСоздана = Истина;
		КонецЕсли;
	КонецЕсли;
	
	НастройкиОтправкиСозданы = Не Результат[1].Пустой();
	
	// Проверим - есть ли уже подключение к сервису 1С-ЭДО по искомого контрагента.
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СостоянияКонтрагентовБЭД.Состояние
		|ИЗ
		|	РегистрСведений.СостоянияКонтрагентовБЭД КАК СостоянияКонтрагентовБЭД
		|ГДЕ
		|	СостоянияКонтрагентовБЭД.Контрагент = &Контрагент
		|	И СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.НеПодключен)";
		
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		УстановитьПривилегированныйРежим(Истина);
		КонтрагентВ1СЭДО = Запрос.Выполнить().Пустой();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) И УчетнаяЗаписьСоздана И Не ЗначениеЗаполнено(Контрагент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если УчетнаяЗаписьСоздана И ЗначениеЗаполнено(Контрагент) Тогда
		
		УстановитьЗначенияКонстант();
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		УстановитьЗначенияКонстант();
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ДекорацияПроверка.Заголовок = НСтр("ru = 'Из этой программы можно обмениваться электронными документами с контрагентами.'");
	
	Если КонтрагентВ1СЭДО Тогда
		ШаблонТекстаДекорации = НСтр("ru = 'С контрагентом ""%1"" можно обмениваться электронными документами
		|из этой программы.'");
		Элементы.ДекорацияПроверка.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаДекорации,
		Контрагент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьЗначениеБольшеНеПоказыватьНаСервере(БольшеНеПоказывать)
	
	ХранилищеОбщихНастроек.Сохранить("Обработка.ОбменСКонтрагентами", "НеПоказыватьПредложениеОформитьЗаявлениеНаПодключение", БольшеНеПоказывать);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОткрытиеПомощникаПодключенияЭДО()
	
	ПодключитьОбработчикОжидания("Подключаемый_ОткрытьПомощникПодключенияЭДО", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПомощникПодключенияЭДО() Экспорт
	
	ОбработкаЗакрытия = ОписаниеОповещенияОЗакрытии;
	ОписаниеОповещенияОЗакрытии = Неопределено;
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
	СпособыОЭД = Новый Массив;
	СпособыОЭД.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("СпособыОбменаЭД", СпособыОЭД);
	
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("Контрагент",  Контрагент);
	ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	ОткрытьФорму("РегистрСведений.УчетныеЗаписиЭДО.Форма.ПомощникПодключенияЭДО",
		ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

КонтрагентВ1СЭДО = Ложь;

#КонецОбласти

