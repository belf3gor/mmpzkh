
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого ЭлементДанных Из Параметры.НаборДанных Цикл
		
		Сертификаты = ИнтеграцияГИСМВызовСервера.СертификатыПользователяДляПодписиПоОрганизации(ЭлементДанных.Сообщение.Организация);
		
		СтрокаТЧ = Таблица.Добавить();
		СтрокаТЧ.Организация = ЭлементДанных.Сообщение.Организация;
		
		Если Сертификаты.Количество() > 0 Тогда
			СтрокаТЧ.Сертификат = Сертификаты[0];
		КонецЕсли;
		
		СтрокаТЧ.ДанныеДляПодписания = ЭлементДанных.Сообщение.ПараметрыАвторизации.Данные;
		СтрокаТЧ.Сообщение           = ЭлементДанных.Сообщение;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТребуетсяУстановкаBrowserPlugin = Неопределено;
	Попытка
		ТребуетсяУстановкаBrowserPlugin = Новый COMОбъект("CAdESCOM.Store");
	ИСключение
		ТребуетсяУстановкаBrowserPlugin = Неопределено;
	КонецПопытки;
	
	Элементы.ТребуетсяУстановкаBrowserPlugin.Видимость = (ТребуетсяУстановкаBrowserPlugin = Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВойтиПоКЭП(Команда)
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Успех",       Истина);
	ВозвращаемоеЗначение.Вставить("НаборДанных", Новый Массив);
	
	Отказ = Ложь;
	
	Для Каждого СтрокаТЧ Из Таблица Цикл
		СтрокаТЧ.Подпись = "";
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из Таблица Цикл
		
		Отпечаток = Отпечаток(СтрокаТЧ.Сертификат);
		Если Отпечаток <> Неопределено Тогда
			
			ComОбъектСертификата = ComОбъектСертификатаПоОтпечатку(Отпечаток);
			
			СтрокаТЧ.Подпись = ПодписатьCAdES(СтрокаТЧ.ДанныеДляПодписания, ComОбъектСертификата);
			
			Если ЗначениеЗаполнено(СтрокаТЧ.Подпись) Тогда
				
				СвойстваПодписи = Новый Структура;
				СвойстваПодписи.Вставить("Подпись", СтрЗаменить(СтрокаТЧ.Подпись, "¶", ""));
				
				ЭлементДанных = Новый Структура;
				ЭлементДанных.Вставить("Сообщение",       СтрокаТЧ.Сообщение);
				ЭлементДанных.Вставить("СвойстваПодписи", СвойстваПодписи);
				
				ВозвращаемоеЗначение.НаборДанных.Добавить(ЭлементДанных);
			
			Иначе
				
				Отказ = Истина;
				
			КонецЕсли;
			
		Иначе
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Не найден сертификат криптографии для организации %1'"),
					СтрокаТЧ.Организация),,,,Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ВозвращаемоеЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция Отпечаток(Сертификат)
	
	ДанныеСертификата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сертификат, "ДанныеСертификата");
	СертификатКриптографии = Новый СертификатКриптографии(ДанныеСертификата.Получить());
	Возврат НРег(ПолучитьHexСтрокуИзДвоичныхДанных(СертификатКриптографии.Отпечаток));
	
КонецФункции

&НаКлиенте
Функция ПодписатьCAdES(ТекстДляПодписи, ComОбъектСертификата)
	
	CADESCOM_CADES_TYPE = 1; // Тип усовершенствованной подписи
	bDetached           = Ложь;
	EncodingType        = 0;
	
	oSigner = Новый COMОбъект("CAdESCOM.CPSigner"); // Объект, задающий параметры создания и содержащий информацию об усовершенствованной подписи.
	oSigner.Certificate = ComОбъектСертификата;
	
	oSignedData = Новый COMОбъект("CAdESCOM.CadesSignedData"); // Объект CadesSignedData предоставляет свойства и методы для работы с усовершенствованной подписью.
	oSignedData.Content = СокрЛП(ТекстДляПодписи);
	
	sSignedMessage = oSignedData.SignCades(oSigner, CADESCOM_CADES_TYPE, bDetached, EncodingType); // Метод добавляет к сообщению усовершенствованную подпись.
	
	Возврат sSignedMessage; // Подпись в формате Base64
	
КонецФункции

// Получить Com-объект сертификата по отпечатку.
// 
// Параметры:
// 	Отпечаток - Строка - отпечаток сертификата, используемого для подписи; строка, представляющая отпечаток в шестнадцатеричном виде
// 	                     пример 195934d72dcdf69149901d6632aca4562d8806d8
// Возвращаемое значение:
// 	ComОбъект - Com-объект сертификата.
&НаКлиенте
Функция ComОбъектСертификатаПоОтпечатку(Отпечаток)
	
	CAPICOM_CURRENT_USER_STORE         = 2;    // 2 - Искать сертификат в ветке "Личное" хранилища.
	CAPICOM_MY_STORE                   = "My"; // Указываем, что ветку "Личное" берем из хранилища текущего пользователя
	CAPICOM_STORE_OPEN_READ_ONLY       = 0;    // Открыть хранилище только на чтение
	CAPICOM_CERTIFICATE_FIND_SHA1_HASH = 0;
	
	oStore = Новый COMОбъект("CAdESCOM.Store"); // Объект описывает хранилище сертификатов
	oStore.Open(CAPICOM_CURRENT_USER_STORE, CAPICOM_MY_STORE, CAPICOM_STORE_OPEN_READ_ONLY); // Открыть хранилище сертификатов
	
	Certificates = oStore.Certificates.Find(CAPICOM_CERTIFICATE_FIND_SHA1_HASH, Отпечаток);
	ComОбъект = Certificates.Item(1); // Найденный сертификат (Com-объект)
	
	oStore.Close(); // Закрыть хранилище сертификатов и освободить объект
	
	Возврат ComОбъект;
	
КонецФункции

#КонецОбласти