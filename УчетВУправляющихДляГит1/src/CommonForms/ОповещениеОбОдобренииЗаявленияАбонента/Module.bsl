
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Заявление = Параметры.Заявление;
	
	// 1. Если в мастере произойдет ошибка, мы не должны опять показывать это заявление.
	// 2. Если в мастере нажали на крестик закрытия, вместо кнопки, мы не должны опять показывать это заявление -
	//	 отказ от серверных вызовов при закрытии формы.
	// Для этого откладываем его показ на некоторое время.
	НапоминитьПозжеПроЗаявление(Заявление);
	
	Одобрено 				= Заявление.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Одобрено;
	ЭтоВторичноеЗаявление	= Заявление.ТипЗаявления = Перечисления.ТипыЗаявленияАбонентаСпецоператораСвязи.Изменение;
	Организация 			= Заявление.Организация;
	
	УправлениеЭУ();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаНачатьИспользование(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаНачатьИспользованиеЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНачатьИспользованиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если Одобрено Тогда
		
		РеквизитыДокумента 		= ОбработкаЗаявленийАбонентаВызовСервера.ПолучитьСтруктуруРеквизитовЗаявления(Заявление);
		РезультатОтветаСервера 	= ОбработкаЗаявленийАбонентаВызовСервера.ПолучитьИРазобратьОтветНаЗаявление(Заявление, Истина);
		
		Если РезультатОтветаСервера.Выполнено Тогда
			
			ИдентификаторАбонента 	= ВРег(РезультатОтветаСервера.ИдентификаторАбонента);
			
			// Идентификатора для ЭЦП в облаке может и не быть.
			Если ЗначениеЗаполнено(ИдентификаторАбонента) Тогда
				
				СтруктураПараметров = Новый Структура();
				СтруктураПараметров.Вставить("Ключ", 								Заявление);
				СтруктураПараметров.Вставить("СтруктураРеквизитовДокумента",		Заявление);
				СтруктураПараметров.Вставить("ЭтоЭлектроннаяПодписьВМоделиСервиса", Истина);
				
				Если Одобрено Тогда
					РезультатОтветаСервера.Вставить("НовыйСтатусДокумента", ПредопределенноеЗначение("Перечисление.СтатусыЗаявленияАбонентаСпецоператораСвязи.Одобрено"));
				Иначе
					РезультатОтветаСервера.Вставить("НовыйСтатусДокумента", ПредопределенноеЗначение("Перечисление.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отклонено"));
				КонецЕсли;
				РезультатОтветаСервера.Вставить("ИдентификаторАбонента", ИдентификаторАбонента);
					
				СтруктураПараметров.Вставить("РезультатОтветаСервера", РезультатОтветаСервера);
				
				Закрыть(СтруктураПараметров);

			КонецЕсли;
			
		Иначе
			
			Если НЕ РезультатОтветаСервера.УдалосьСоединиться Тогда
				
				ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ПоказатьДиалогОшибкиДоступаВИнтернет(
					НСтр("ru = 'Не удалось обратиться к серверу регистрации'"));
				
			КонецЕсли;
			
		КонецЕсли;
	
	Иначе
		
		// Проставляем флаг, что заявление обработано и больше о нем напоминать не нужно.
		ОбработкаЗаявленийАбонентаВызовСервера.ОбновитьРеквизитыЗаявления(
			Заявление, Новый Структура("НастройкаЗавершена", Истина));
			
		// Если статус заявления - "Отклонено", тогда создаем новое заявление
		ДополнительныеПараметры = ДокументооборотСКОКлиентСервер.ПараметрыОткрытияМастера();
		ДополнительныеПараметры.Вставить("ЗначениеКопирования", Заявление);
			
		Закрыть(ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапомнитьПозже(Команда = Неопределено)
	
	НапоминитьПозжеПроЗаявление(Заявление);
	// Ищем следующее заявления уже после добавления текущего в список на "Напомнить позже",
	// иначе при поиске следующего заявления мы опять на него натолкнемся.
	ОбработкаЗаявленийАбонентаКлиент.ПодключитьОбработчикПроверкиЗаявлений(2);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаБольшеНеНапоминать(Команда)
	
	НапоминитьПозжеПроЗаявление(Заявление, Истина);
	// Ищем следующее заявления уже после добавления текущего в список на "Напомнить позже",
	// иначе при поиске следующего заявления мы опять на него натолкнемся.
	ОбработкаЗаявленийАбонентаКлиент.ПодключитьОбработчикПроверкиЗаявлений(2);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура НапоминитьПозжеПроЗаявление(ЗаявлениеАбонента, БольшеНеНапоминать = Ложь) Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонтекстЭДОСервер.НапоминитьПозжеПроЗаявление(ЗаявлениеАбонента, БольшеНеНапоминать);

КонецПроцедуры

&НаСервере
Процедура УправлениеЭУ()
	
	СформироватьНадпись();
	СформироватьЗаголовок();
	СформироватьЗаголовокКнопок();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНадпись()
	
	КонтекстЭДОСервер  =  ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонтекстЭДОСервер.УстановитьПредставлениеЗаявленияВВидеФорматированнойСтроки(Заявление, Элементы.ТекстОповещения, Истина);
	
	Если Одобрено Тогда
		Элементы.ГруппаПричиныОтклонения.Видимость = Ложь;
	Иначе
		Элементы.ГруппаПричиныОтклонения.Видимость = Истина;
		Элементы.ПричинаОтклонения.Заголовок = Заявление.СтатусКомментарий;
	КонецЕсли;
		
	Если Одобрено Тогда
		Элементы.ЧтоДелать.Заголовок = НСтр("ru = 'Для завершения нужно выполнить несколько простых шагов.'");
	Иначе
		Элементы.ЧтоДелать.Заголовок = НСтр("ru = 'Устраните проблему и отправьте новое заявление.'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовок()
	
	Если Одобрено Тогда
		Заголовок = НСтр("ru = 'Заявление одобрено'");
	Иначе
		Заголовок = НСтр("ru = 'Заявление отклонено'");
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервере
Процедура СформироватьЗаголовокКнопок()
	
	Если Одобрено Тогда
		Элементы.КнопкаНачатьИспользование.Заголовок = НСтр("ru = 'Продолжить сейчас'");
	Иначе
		Элементы.КнопкаНачатьИспользование.Заголовок = НСтр("ru = 'Подготовить новое заявление'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

