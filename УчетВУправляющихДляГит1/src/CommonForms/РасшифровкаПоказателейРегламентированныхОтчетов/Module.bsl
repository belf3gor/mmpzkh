
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МакетРасшифровки = ПолучитьОбщийМакет("РасшифровкаПоказателейРегламентированныхОтчетов");
	
	ИсходнаяТаблицаРасшифровок = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаРасшифровки);
	
	Если ТипЗнч(ИсходнаяТаблицаРасшифровок) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Если ИсходнаяТаблицаРасшифровок.Колонки.Найти("Организация") = Неопределено Тогда
		ИсходнаяТаблицаРасшифровок.Колонки.Добавить("Организация");
	КонецЕсли;
	
	ИсходнаяТаблицаРасшифровок.Индексы.Добавить("ИмяПоказателя");
	
	ЕстьПоказателиИзСписка = Ложь;
	
	Для Каждого ИмяПоказателя Из Параметры.ИДИменПоказателей Цикл
		Если ИсходнаяТаблицаРасшифровок.Найти(ИмяПоказателя, "ИмяПоказателя") <> Неопределено Тогда
			ЕстьПоказателиИзСписка = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьПоказателиИзСписка Тогда
		Для Каждого ИмяПоказателя Из Параметры.ИДИменПоказателей Цикл
			ВывестиРасшифровкуПоказателя(МакетРасшифровки, ИсходнаяТаблицаРасшифровок, ИмяПоказателя);
		КонецЦикла;
		
	Иначе
		ВыведенныеПоказатели = Новый ТаблицаЗначений;
		ВыведенныеПоказатели.Колонки.Добавить("ИмяПоказателя");
		ВыведенныеПоказатели.Индексы.Добавить("ИмяПоказателя");
		
		Для Каждого СтрокаТаблицыРасшифровки Из ИсходнаяТаблицаРасшифровок Цикл
			Если ВыведенныеПоказатели.Найти(СтрокаТаблицыРасшифровки.ИмяПоказателя, "ИмяПоказателя") = Неопределено Тогда
				
				ИмяПоказателя = СтрокаТаблицыРасшифровки.ИмяПоказателя;
				ВывестиРасшифровкуПоказателя(МакетРасшифровки, ИсходнаяТаблицаРасшифровок, ИмяПоказателя);
				
				ВыведенныйПоказатель = ВыведенныеПоказатели.Добавить();
				ВыведенныйПоказатель.ИмяПоказателя = ИмяПоказателя;
			КонецЕсли;
		КонецЦикла;
		
		Если Параметры.Свойство("ЗаголовокРасшифровки") Тогда
			ЭтаФорма.Заголовок = Параметры.ЗаголовокРасшифровки;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиРасшифровкуПоказателя(МакетРасшифровки, ТаблицаРасшифровок, ИмяПоказателя)
	
	СекцияЗаголовок = МакетРасшифровки.ПолучитьОбласть("Заголовок");
	СекцияИтог      = МакетРасшифровки.ПолучитьОбласть("Итог");
	СекцияПлюс      = МакетРасшифровки.ПолучитьОбласть("Плюс");
	СекцияМинус     = МакетРасшифровки.ПолучитьОбласть("Минус");
	СекцияСлагаемое = МакетРасшифровки.ПолучитьОбласть("Слагаемое");
	
	СекцияНазваниеОрг         = МакетРасшифровки.ПолучитьОбласть("НазваниеОрг");
	СекцияНазваниеОргБезПлюса = МакетРасшифровки.ПолучитьОбласть("НазваниеОргБезПлюса");
	
	СтрокиРасшифровки = ТаблицаРасшифровок.НайтиСтроки(Новый Структура("ИмяПоказателя", ИмяПоказателя));
	Если СтрокиРасшифровки.Количество() > 0 Тогда
		
		НетРасшифровок = Ложь;
		
		Организации = Новый ТаблицаЗначений;
		Организации.Колонки.Добавить("Организация");
		Организации.Колонки.Добавить("Сумма");
		
		Для Каждого СтрокаРасшифровки Из СтрокиРасшифровки Цикл
			Если ЗначениеЗаполнено(СтрокаРасшифровки.Организация) Тогда
				Организация = СтрокаРасшифровки.Организация;
			Иначе
				Организация = "Без указания организации";
				Если ТаблицаРасшифровок.Колонки.Найти("ДополнительныеПараметры") <> Неопределено
				   И ТипЗнч(СтрокаРасшифровки.ДополнительныеПараметры) = Тип("Структура")
				   И СтрокаРасшифровки.ДополнительныеПараметры.Свойство("Организация") Тогда
					Если ЗначениеЗаполнено(СтрокаРасшифровки.ДополнительныеПараметры.Организация) Тогда
						Организация = СтрокаРасшифровки.ДополнительныеПараметры.Организация;
					КонецЕсли;
				КонецЕсли;
				СтрокаРасшифровки.Организация = Организация;
			КонецЕсли;
			
			НайденнаяСтрока = Организации.Найти(Организация, "Организация");
			Если НайденнаяСтрока = Неопределено Тогда
				НоваяСтрока = Организации.Добавить();
				НоваяСтрока.Организация = Организация;
				НоваяСтрока.Сумма = СтрокаРасшифровки.Сумма;
			Иначе
				НайденнаяСтрока.Сумма = НайденнаяСтрока.Сумма + СтрокаРасшифровки.Сумма;
			КонецЕсли;
		КонецЦикла;
		
		ПоНесколькимОрганизациям = (Организации.Количество() > 1);
		
		// Вывод пустого заголовка (заполнение произойдет при выводе строки с непустым полем НаименованиеПоказателя).
		ПолеРасшифровки.Вывести(СекцияЗаголовок);
		
		ИтоговаяСумма = 0;
		ПерваяОрганизация = Истина;
		Для Каждого Организация Из Организации Цикл
			
			Если ПерваяОрганизация Тогда
				СекцияОрганизации = СекцияНазваниеОргБезПлюса;
				ПерваяОрганизация = Ложь;
			Иначе
				СекцияОрганизации = СекцияНазваниеОрг;
			КонецЕсли;
			
			Если ПоНесколькимОрганизациям Тогда
				СекцияОрганизации.Параметры.ИтогПоОрганизации = Организация.Сумма;
				СекцияОрганизации.Параметры.НазваниеОрганизации = Организация.Организация;
				ПолеРасшифровки.Вывести(СекцияОрганизации);
			КонецЕсли;
			
			ПерваяСтрока = Истина;
			Для Каждого СтрокаРасшифровки Из СтрокиРасшифровки Цикл
				
				Если СтрокаРасшифровки.Организация <> Организация.Организация Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ПустаяСтрока(СтрокаРасшифровки.НаименованиеПоказателя) Тогда
					ПолеРасшифровки.Области.НаименованиеЗаголовок.Значение = СтрокаРасшифровки.НаименованиеПоказателя;
					ЭтаФорма.Заголовок = СтрокаРасшифровки.НаименованиеПоказателя + " - расшифровка значения";
				КонецЕсли;
				
				Если НЕ ПерваяСтрока Тогда
					Если СтрокаРасшифровки.ЗнакОперации = "-" Тогда
						ПолеРасшифровки.Вывести(СекцияМинус);
					Иначе
						ПолеРасшифровки.Вывести(СекцияПлюс);
					КонецЕсли;
				Иначе
					ПерваяСтрока = Ложь;
				КонецЕсли;
				
				ПолеРасшифровки.Вывести(СекцияСлагаемое);
				
				ПолеРасшифровки.Области.СлагаемоеНаименование.Значение = ПолучитьПолноеНаименованиеСлагаемого(СтрокаРасшифровки.НаименованиеСлагаемого) + ПолучитьНаименованиеДополнительныхПараметров(СтрокаРасшифровки.ДополнительныеПараметры);
				ПолеРасшифровки.Области.СлагаемоеСумма.Значение        = СтрокаРасшифровки.Сумма;
				
				Если СтрокаРасшифровки.ДополнительныеПараметры <> Неопределено
				   И ТипЗнч(СтрокаРасшифровки.ДополнительныеПараметры) = Тип("Структура")
				   И СтрокаРасшифровки.ДополнительныеПараметры.Свойство("Отчет") Тогда
					РасшифровкаОбласти = СтрокаРасшифровки.ДополнительныеПараметры.Отчет;
					ПолеРасшифровки.Области.СлагаемоеНаименование.Расшифровка = РасшифровкаОбласти;
					ПолеРасшифровки.Области.СлагаемоеСумма.Расшифровка = РасшифровкаОбласти;
				КонецЕсли;
				
				ИтоговаяСумма = ИтоговаяСумма + СтрокаРасшифровки.Сумма;
				
			КонецЦикла;
		КонецЦикла;
		
		// Вывод итога.
		ПолеРасшифровки.Вывести(СекцияИтог);
		ПолеРасшифровки.Области.ИтогСумма.Значение = ИтоговаяСумма;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает полное наименования слагаемого после обработки макросов в имени
//
// Параметры
//     НаименованиеСлагаемого  - Строка - Исходное наименование слагаемого
//                 
// Возвращаемое значение:
//     Строка  - Обработанное наименование слагаемого
//
&НаСервере
Функция ПолучитьПолноеНаименованиеСлагаемого(НаименованиеСлагаемого)

	Если СтрНайти(НаименованиеСлагаемого, "!СКДР") = 1 Тогда
		Возврат "Развернутое сальдо на конец периода по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СККР") = 1 Тогда
		Возврат "Развернутое сальдо на конец периода по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СНД") = 1 Тогда
		Возврат "Сальдо на начало периода по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СНК") = 1 Тогда
		Возврат "Сальдо на начало периода по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СКД") = 1 Тогда
		Возврат "Сальдо на конец периода по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СКК") = 1 Тогда
		Возврат "Сальдо на конец периода по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!ДО") = 1 Тогда
		Возврат "Оборот по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 4));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!КО") = 1 Тогда
		Возврат "Оборот по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 4));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!ОБ") = 1 Тогда
		КодыСчетов = СокрЛП(Сред(НаименованиеСлагаемого, 4));
		ПозицияПробела = СтрНайти(КодыСчетов, " ");
		КодСчетаДт = СокрЛП(Лев(КодыСчетов, ПозицияПробела));
		КодСчетаКт = СокрЛП(Сред(КодыСчетов, ПозицияПробела + 1));
		
		Возврат "Оборот с дебета счета " + КодСчетаДт + " в кредит счета " + КодСчетаКт;
		
	Иначе
		Возврат(НаименованиеСлагаемого);
	КонецЕсли;
	
КонецФункции // ПолучитьПолноеНаименованиеСлагаемого()

Функция ПолучитьНаименованиеДополнительныхПараметров(ДополнительныеПараметры)
	
	НаименованиеДополнительныхПараметров = "";
	
	Если ДополнительныеПараметры <> Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		
		Если ДополнительныеПараметры.Свойство("Субконто1") Тогда
			Субконто = ДополнительныеПараметры.Субконто1;
			
			НаименованиеСубконто = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Субконто.ВидСубконто, "Наименование");
			ЗначениеСубконто     = Субконто.ЗначениеСубконто;
			
			Если ЗначениеСубконто <> Неопределено Тогда
				Если ТипЗнч(ЗначениеСубконто) = Тип("СписокЗначений") Тогда
					НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + "." + Символы.ПС + "Субконто " + НаименованиеСубконто + " принимает "+?(ЗначениеСубконто.Количество()=1,"значение", "одно из следующих значений")+":" + Символы.ПС;
					Для Каждого Эл Из ЗначениеСубконто Цикл
						НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + Эл.Значение + ", ";
					КонецЦикла;
					НаименованиеДополнительныхПараметров = Лев(НаименованиеДополнительныхПараметров, СтрДлина(НаименованиеДополнительныхПараметров) - 2) + "; ";
				Иначе
					НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + "." + Символы.ПС + "Субконто " + НаименованиеСубконто + " принимает значение " + ЗначениеСубконто + ";";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НаименованиеДополнительныхПараметров;
	
КонецФункции

&НаКлиенте
Процедура ПолеРасшифровкиОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") И Расшифровка.Свойство("ИмяОтчета") Тогда
		
		ИмяФормыОтчета = Расшифровка.ИмяОтчета;
		
		ПараметрыФормы = Новый Структура;
		
		Если ИмяФормыОтчета = "ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов" Тогда
			// Имя формы и другие ее параметры переданы через общий механизм расшифровок,
			// например из НалогНаПрибыльДекларация.ДобавитьЗаписиРасшифровкиПоказателяБРО()
			// Адрес временного хранилища в тот момент, очевидно, не мог быть определен.
			// Но это тот же адрес, который используется для формирования этого (вызывающего, уже существующего) экземпляра формы.
			ПараметрыФормы.Вставить("АдресВременногоХранилищаРасшифровки", Параметры.АдресВременногоХранилищаРасшифровки);
		КонецЕсли;
		
		Если Расшифровка.Свойство("ПараметрыФормы") Тогда
			Для Каждого ЭлементНастройки Из Расшифровка.ПараметрыФормы Цикл
				ПараметрыФормы.Вставить(ЭлементНастройки.Ключ, ЭлементНастройки.Значение);
			КонецЦикла;
		КонецЕсли;
		
		Если Расшифровка.Свойство("ПользовательскиеНастройки") Тогда
			ПараметрыФормы.Вставить("ПользовательскиеНастройки", Расшифровка.ПользовательскиеНастройки);
		КонецЕсли;
		
		ОткрытьФорму(ИмяФормыОтчета, ПараметрыФормы, , Истина);
		
	КонецЕсли;
	
КонецПроцедуры
