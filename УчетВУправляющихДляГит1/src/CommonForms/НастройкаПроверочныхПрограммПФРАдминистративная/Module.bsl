
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоФайловаяИБ = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	ТолькоПросмотр = ЭтоФайловаяИБ;
	Элементы.ВыполнятьПроверкуНаСервереИнфоГруппа.Видимость = ЭтоФайловаяИБ;
	НастройкиПроверочныхПрограммВДанныеФормы();
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA();
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML();
		УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA();
	УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML();
	УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД();
	
	ПроверитьНаличиеФайловПрограмм(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкиПроверочныхПрограммКаталогПрограммыCheckUFAНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
																
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок = НСтр("ru = 'Укажите каталог программы CheckPFR.'");
	ДиалогВыбора.Каталог = НастройкиПроверочныхПрограмм.КаталогПрограммыCheckUFA;
	ДиалогВыбора.Показать(Новый ОписаниеОповещения("КаталогПрограммыCheckUFAПослеВыбора", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПрограммыCheckUFAПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
																
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПроверочныхПрограмм.КаталогПрограммыCheckUFA = ВыбранныеФайлы[0];
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммКаталогПрограммыCheckXMLНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок = НСтр("ru = 'Укажите каталог программы CheckXML.'");
	ДиалогВыбора.Каталог = НастройкиПроверочныхПрограмм.КаталогПрограммыCheckXML;
	ДиалогВыбора.Показать(Новый ОписаниеОповещения("КаталогПрограммыCheckXMLПослеВыбора", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПрограммыCheckXMLПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
																
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПроверочныхПрограмм.КаталогПрограммыCheckXML = ВыбранныеФайлы[0];
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммКаталогПрограммыПОПДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок = НСтр("ru = 'Укажите каталог программы ПО ПД.'");
	ДиалогВыбора.Каталог = НастройкиПроверочныхПрограмм.КаталогПрограммыПОПД;
	ДиалогВыбора.Показать(Новый ОписаниеОповещения("КаталогПрограммыПОПДПослеВыбора", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПрограммыПОПДПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
																
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПроверочныхПрограмм.КаталогПрограммыПОПД = ВыбранныеФайлы[0];
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммКаталогПрограммыCheckUFAПриИзменении(Элемент)	
	
	НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере = НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckUFA
		Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckXML Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойПОПД;
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммКаталогПрограммыCheckXMLПриИзменении(Элемент)
	
	НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере = НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckUFA
		Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckXML Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойПОПД;
																
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммКаталогПрограммыПОПДПриИзменении(Элемент)
	
	НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере = НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckUFA
		Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckXML Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойПОПД;
																
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммПроверятьПрограммойCheckUFAПриИзменении(Элемент)	
	НастройкиПроверочныхПрограммПроверятьПрограммойCheckUFAПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммПроверятьПрограммойCheckXMLПриИзменении(Элемент)
	НастройкиПроверочныхПрограммПроверятьПрограммойCheckXMLПриИзмененииНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммПроверятьПрограммойПОПДПриИзменении(Элемент)
	
	НастройкиПроверочныхПрограммПроверятьПрограммойПОПДПриИзмененииНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроверочныхПрограммВыполнятьПроверкуНаСервереПриИзменении(Элемент)
	НастройкиПроверочныхПрограммВыполнятьПроверкуНаСервереПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	Если ЭтоФайловаяИБ Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда 
		Если Не ПроверитьЗаполнение() Тогда
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;	
		
	Если Не Отказ Тогда
		СохранитьНастройкиПроверочныхПрограмм();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастройкиПроверочныхПрограммПроверятьПрограммойCheckUFAПриИзмененииНаСервере()
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура НастройкиПроверочныхПрограммПроверятьПрограммойCheckXMLПриИзмененииНаСервере()
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура НастройкиПроверочныхПрограммПроверятьПрограммойПОПДПриИзмененииНаСервере()
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД();;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастройкиПроверочныхПрограммВыполнятьПроверкуНаСервереПриИзмененииНаСервере()
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFAНаСервере();
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXMLНаСервере();
		УстановитьПодсказкуКЭлементуКаталогПрограммыПОПДНаСервере();
	Иначе	
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA();
		УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML();
		УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура НастройкиПроверочныхПрограммВДанныеФормы()
	МенеджерЗаписи = РеквизитФормыВЗначение("НастройкиПроверочныхПрограмм", Тип("РегистрСведенийМенеджерЗаписи.НастройкиПроверкиОтчетностиПерсУчета"));
	МенеджерЗаписи.Прочитать();
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "НастройкиПроверочныхПрограмм");
	
	Если ЭтоФайловаяИБ Тогда
		НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере = Ложь;
	КонецЕсли;	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма)
	Элементы = Форма.Элементы;
	НастройкиПроверочныхПрограмм = Форма.НастройкиПроверочныхПрограмм;
	
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда 		
		Элементы.НастройкиПроверочныхПрограммГруппа.Доступность = Истина;

		Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckUFA.Доступность = 
			НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckUFA;
		
		Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckXML.Доступность = 
			НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckXML;
			
		Элементы.НастройкиПроверочныхПрограммКаталогПрограммыПОПД.Доступность = 
			НастройкиПроверочныхПрограмм.ПроверятьПрограммойПОПД;
	Иначе
		Элементы.НастройкиПроверочныхПрограммГруппа.Доступность = Ложь;	
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXMLНаСервере()
	УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML();	
КонецПроцедуры	

&НаСервере
Процедура УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFAНаСервере()
	УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA();	
КонецПроцедуры	

&НаСервере
Процедура УстановитьПодсказкуКЭлементуКаталогПрограммыПОПДНаСервере()
	УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД();	
КонецПроцедуры	

&НаСервере
Процедура УстановитьПодсказкуКЭлементуКаталогПрограммыCheckXML()	
	Если НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckXML
		И НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда 
		
		Если ПустаяСтрока(НастройкиПроверочныхПрограмм.КаталогПрограммыCheckXML) Тогда
			ФайлCheckXMLНайден = Ложь;	
			Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckXML.Подсказка = НСтр("ru = 'Укажите каталог программы CheckXML'");
		Иначе	
			Файл = Новый Файл(НастройкиПроверочныхПрограмм.КаталогПрограммыCheckXML + "\CheckXML.exe");
			ФайлCheckXMLНайден = Файл.Существует();
			Если ФайлCheckXMLНайден Тогда
				Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckXML.Подсказка = НСтр("ru = 'Каталог программы CheckXML'");	
			Иначе
				Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckXML.Подсказка = НСтр("ru = 'Файл программы CheckXML не найден'");
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		ФайлCheckXMLНайден = Истина;
		Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckXML.Подсказка = НСтр("ru = 'Каталог программы CheckXML'")
	КонецЕсли;		
КонецПроцедуры	

&НаСервере
Процедура УстановитьПодсказкуКЭлементуКаталогПрограммыCheckUFA()

	Если НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckUFA 
		И НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда 
		
		Если ПустаяСтрока(НастройкиПроверочныхПрограмм.КаталогПрограммыCheckUFA) Тогда
			ФайлCheckUFAНайден = Ложь;	
			Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckUFA.Подсказка = НСтр("ru = 'Укажите каталог программы CheckPFR'");
		Иначе	
			Файл = Новый Файл(НастройкиПроверочныхПрограмм.КаталогПрограммыCheckUFA + "\Check.exe");
			ФайлCheckUFAНайден = Файл.Существует();
			Если ФайлCheckUFAНайден Тогда
				Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckUFA.Подсказка = НСтр("ru = 'Каталог программы CheckPFR'");	
			Иначе
				Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckUFA.Подсказка = НСтр("ru = 'Файл программы CheckPFR не найден'");
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		ФайлCheckUFAНайден = Истина;
		Элементы.НастройкиПроверочныхПрограммКаталогПрограммыCheckUFA.Подсказка = НСтр("ru = 'Каталог программы CheckPFR'");	
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказкуКЭлементуКаталогПрограммыПОПД()	
	Если НастройкиПроверочныхПрограмм.ПроверятьПрограммойПОПД
		И НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда 
		
		Если ПустаяСтрока(НастройкиПроверочныхПрограмм.КаталогПрограммыПОПД) Тогда
			ФайлПОПДНайден = Ложь;	
			Элементы.НастройкиПроверочныхПрограммКаталогПрограммыПОПД.Подсказка = НСтр("ru = 'Укажите каталог программы ПО ПД'");
		Иначе	
			Файл = Новый Файл(НастройкиПроверочныхПрограмм.КаталогПрограммыПОПД + "\run.cmd");
			ФайлПОПДНайден = Файл.Существует();
			Если ФайлПОПДНайден Тогда
				Элементы.НастройкиПроверочныхПрограммКаталогПрограммыПОПД.Подсказка = НСтр("ru = 'Каталог программы ПО ПД'");	
			Иначе
				Элементы.НастройкиПроверочныхПрограммКаталогПрограммыПОПД.Подсказка = НСтр("ru = 'Файл программы ПО ПД не найден'");
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		ФайлПОПДНайден = Истина;
		Элементы.НастройкиПроверочныхПрограммКаталогПрограммыПОПД.Подсказка = НСтр("ru = 'Каталог программы ПО ПД'")
	КонецЕсли;		
КонецПроцедуры	

&НаСервере 
Процедура ПроверитьНаличиеФайловПрограмм(Отказ)
		
	Если НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере Тогда
		Если НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckUFA 
			И Не ФайлCheckUFAНайден Тогда
			
			ТекстСообщения = НСтр("ru = 'Файл программы CheckPFR не найден.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КаталогПрограммыCheckPFR", ,Отказ);
		КонецЕсли;
		
		Если НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckXML 
			И Не ФайлCheckXMLНайден Тогда
			
			ТекстСообщения = НСтр("ru = 'Файл программы CheckXML не найден.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КаталогПрограммыCheckXML", ,Отказ);
		КонецЕсли;
		
		Если НастройкиПроверочныхПрограмм.ПроверятьПрограммойПОПД 
			И Не ФайлПОПДНайден Тогда
			
			ТекстСообщения = НСтр("ru = 'Файл программы ПО ПД не найден.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КаталогПрограммыПОПД", ,Отказ);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПроверочныхПрограмм()
	НастройкиПроверочныхПрограмм.ВыполнятьПроверкуНаСервере = НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckUFA
		Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойCheckXML Или НастройкиПроверочныхПрограмм.ПроверятьПрограммойПОПД;
	
	МенеджерЗаписи = РеквизитФормыВЗначение("НастройкиПроверочныхПрограмм", Тип("РегистрСведенийМенеджерЗаписи.НастройкиПроверкиОтчетностиПерсУчета"));
	МенеджерЗаписи.Записать();
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "НастройкиПроверочныхПрограмм");	
КонецПроцедуры	

#КонецОбласти
