&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СрокОплатыПокупателей.ТолькоПросмотр = 
		НЕ ПравоДоступа("Изменение", Метаданные.Константы.СрокОплатыПокупателей);
		
	Элементы.СрокОплатыСчетовПокупателю.ТолькоПросмотр = 
		НЕ ПравоДоступа("Изменение", Метаданные.Константы.СрокОплатыСчетовПокупателю);
		
	Параметры.Свойство("ПараметрыОткрытия", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТипЗнч(ПараметрыОткрытия) = Тип("Структура") Тогда
		АктивныйЭлемент = Неопределено;
		ПараметрыОткрытия.Свойство("АктивныйЭлемент", АктивныйЭлемент);
		
		Если ТипЗнч(АктивныйЭлемент) = Тип("Строка") Тогда
			
			Если АктивныйЭлемент = "СрокОплатыВыставленныхСчетов" Тогда
				
				ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.СрокОплатыСчетовПокупателю;
				
			КонецЕсли;
			
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СрокОплатыПокупателейПриИзменении(Элемент)
	
	ПриИзмененииРеквизитаНаКлиенте(Элемент, Ложь);
	
	Оповестить("ИзменениеСрокаОплатыПокупателями");
	
КонецПроцедуры

&НаКлиенте
Процедура СрокОплатыПокупателейИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ПриИзмененииРеквизитаНаКлиенте(Элемент, Ложь);
	
	Оповестить("ИзменениеСрокаОплатыПокупателями");
	
КонецПроцедуры

&НаКлиенте
Процедура СрокОплатыВыставленныхСчетовПриИзменении(Элемент)
	
	ПриИзмененииРеквизитаНаКлиенте(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокОплатыСчетовПокупателюИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ПриИзмененииРеквизитаНаКлиенте(Элемент, Ложь);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииРеквизитаНаКлиенте(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
	Оповестить("ИзменениеНастроекПараметровУчета");
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти