

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Продукция             = Параметры.Продукция;
	КоличествоВЕТИС       = Параметры.КоличествоВЕТИС;
	ЕдиницаИзмеренияВЕТИС = Параметры.ЕдиницаИзмеренияВЕТИС;
	
	Если Параметры.Свойство("Упаковки") Тогда
		Для каждого Строка Из Параметры.Упаковки Цикл
			ЗаполнитьЗначенияСвойств(Упаковки.Добавить(), Строка);
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("ШтрихкодыУпаковок") Тогда
		Для каждого Строка Из Параметры.ШтрихкодыУпаковок Цикл
			ЗаполнитьЗначенияСвойств(ШтрихкодыУпаковок.Добавить(), Строка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИнтеграцияВЕТИСКлиент.ПронумероватьТаблицу(ЭтаФорма, "Упаковки");
	
	СформироватьЗаголовки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУпаковки

&НаКлиенте
Процедура УпаковкиПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	ИнтеграцияВЕТИСКлиент.ПронумероватьТаблицу(ЭтаФорма, "Упаковки");
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.Упаковки.ТекущиеДанные;
		ТекущиеДанные.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкиПриАктивизацииСтроки(Элемент)
	
	НастроитьОтборТаблицыШтрихкодов();
	
	СформироватьЗаголовки();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда
		НастроитьОтборТаблицыШтрихкодов();
		СформироватьЗаголовки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкиПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Упаковки.ТекущиеДанные;
	
	УдалитьСтроки = ШтрихкодыУпаковок.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ТекущиеДанные.ИдентификаторСтроки));
	Для каждого Строка Из УдалитьСтроки Цикл
		ШтрихкодыУпаковок.Удалить(Строка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШтрихкодыУпаковок

&НаКлиенте
Процедура ШтрихкодыУпаковокПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СформироватьЗаголовки();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокПослеУдаления(Элемент)
	
	СформироватьЗаголовки();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущиеДанные = Элементы.Упаковки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Упаковки.ТекущиеДанные;
	
	Если НоваяСтрока Тогда
		Элементы.ШтрихкодыУпаковок.ТекущиеДанные.ИдентификаторСтроки = ТекущиеДанные.ИдентификаторСтроки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличествоУпаковок(Команда)
	ЗаполнитьКоличествоУпаковокНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьИзменения();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения()
	
	ОчиститьСообщения();
	
	СтруктураПроверяемыхПолей = Новый Структура;
	СтруктураПроверяемыхПолей.Вставить("УровеньУпаковки", НСтр("ru='Уровень'"));
	СтруктураПроверяемыхПолей.Вставить("УпаковкаВЕТИС", НСтр("ru='Упаковка'"));
	СтруктураПроверяемыхПолей.Вставить("КоличествоУпаковокВЕТИС", НСтр("ru='Количество единиц упаковки'"));
	
	ОшибкаПроверкаУпаковок = Не ИнтеграцияВЕТИСКлиент.ПроверитьЗаполнениеТаблицы(ЭтаФорма, "Упаковки", СтруктураПроверяемыхПолей);
	ОшибкаПроверкиШтрихкодов = Ложь;
	
	ШаблонСообщения = НСтр("ru = 'Не заполнено поле ""%1"" таблицы штрихкодов для строки упаковок %2'");
	Для каждого Строка Из ШтрихкодыУпаковок Цикл
		
		СтрокаУпаковки = Упаковки.НайтиСтроки(Новый Структура("ИдентификаторСтроки", Строка.ИдентификаторСтроки))[0];
		
		Если НЕ ЗначениеЗаполнено(Строка.ТипМаркировки) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru='Тип маркировки'"), СтрокаУпаковки.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Упаковки", СтрокаУпаковки.НомерСтроки, "НомерСтроки");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,,ОшибкаПроверкиШтрихкодов);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.Штрихкод) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru='Штрихкод'"), СтрокаУпаковки.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Упаковки", СтрокаУпаковки.НомерСтроки, "НомерСтроки");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,,ОшибкаПроверкиШтрихкодов);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ОшибкаПроверкаУпаковок И Не ОшибкаПроверкиШтрихкодов Тогда
		
		Модифицированность = Ложь;
		
		Результат = Новый Структура;
		Результат.Вставить("Упаковки", Упаковки);
		Результат.Вставить("ШтрихкодыУпаковок", ШтрихкодыУпаковок);
		
		ОповеститьОВыборе(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаголовки()
	
	Количество = Упаковки.Количество();
	
	НадписьУпаковки = НСтр("ru = 'Упаковки'")+?(Количество>0," ("+Количество+")","");
	
	Количество = 0;
	ТекущиеДанные = Элементы.Упаковки.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Отбор = Новый Структура("ИдентификаторСтроки", ТекущиеДанные.ИдентификаторСтроки);
		Количество = ШтрихкодыУпаковок.НайтиСтроки(Отбор).Количество();
	КонецЕсли;
		
	НадписьШтрихкодыУпаковок = НСтр("ru = 'Штрихкоды упаковки'")+?(Количество>0," ("+Количество+")","");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборТаблицыШтрихкодов()
	
	ТекущиеДанные = Элементы.Упаковки.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтроки", ТекущиеДанные.ИдентификаторСтроки);
	Иначе
		ОтборСтрок = Неопределено;
	КонецЕсли;
	
	Элементы.ШтрихкодыУпаковок.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоУпаковокНаСервере()
	
	РеквизитыПродукции = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Продукция,
		"ФасовкаУпаковка, ФасовкаКоличествоУпаковок, ФасовкаЕдиницаИзмерения, ФасовкаКоличествоЕдиницВУпаковке");
	
	Если РеквизитыПродукции.ФасовкаЕдиницаИзмерения = ЕдиницаИзмеренияВЕТИС Тогда
		
		Если РеквизитыПродукции.ФасовкаКоличествоЕдиницВУпаковке <> 0 Тогда
			
			КоличествоУпаковок = Цел(КоличествоВЕТИС / РеквизитыПродукции.ФасовкаКоличествоЕдиницВУпаковке);
			
			КоличествоИтог = 0;
			
			ПараметрыОтбора = Новый Структура("УпаковкаВЕТИС", РеквизитыПродукции.ФасовкаУпаковка);
			НайденныеСтроки = Упаковки.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
				КоличествоИтог = КоличествоИтог + СтрокаТЧ.КоличествоУпаковокВЕТИС;
			КонецЦикла;
			
			Если КоличествоИтог < КоличествоУпаковок Тогда
				
				Если НайденныеСтроки.Количество() > 0 Тогда
					СтрокаТЧ = НайденныеСтроки[0];
				Иначе
					СтрокаТЧ = Упаковки.Добавить();
					СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
					СтрокаТЧ.УровеньУпаковки = Перечисления.УровниУпаковокВЕТИС.ПотребительскийУровень;
				КонецЕсли;
				
				СтрокаТЧ.УпаковкаВЕТИС = РеквизитыПродукции.ФасовкаУпаковка;
				СтрокаТЧ.КоличествоУпаковокВЕТИС = СтрокаТЧ.КоличествоУпаковокВЕТИС + КоличествоУпаковок - КоличествоИтог;
				
			ИначеЕсли КоличествоИтог > КоличествоУпаковок Тогда
				
				КоличествоКРаспределению = КоличествоИтог - КоличествоУпаковок;
				Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
					
					Если СтрокаТЧ.КоличествоУпаковокВЕТИС < КоличествоКРаспределению Тогда
						КоличествоКРаспределению = КоличествоКРаспределению - СтрокаТЧ.КоличествоУпаковокВЕТИС;
						СтрокаТЧ.КоличествоУпаковокВЕТИС = 0;
					Иначе
						СтрокаТЧ.КоличествоУпаковокВЕТИС = СтрокаТЧ.КоличествоУпаковокВЕТИС - КоличествоКРаспределению;
						КоличествоКРаспределению = 0;
					КонецЕсли;
					
					Если КоличествоКРаспределению = 0 Тогда
						Прервать
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти