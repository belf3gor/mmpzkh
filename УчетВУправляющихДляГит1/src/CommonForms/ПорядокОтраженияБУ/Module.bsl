
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период                     = Параметры.Период;
	Организация                = Параметры.Организация;
	Счет                       = Параметры.Счет;
	СуммаПоПлатежномуПоручению = Параметры.СуммаПоПлатежномуПоручению;
	НазначениеПлатежа          = Параметры.НазначениеПлатежа;
	ДокументСсылка             = Параметры.ДокументСсылка;

	Если ЗначениеЗаполнено(Параметры.АдресТаблицыНалоговыйАгентНДСВХранилище) Тогда
		АдресТаблицыНалоговыйАгентНДСВХранилище = Параметры.АдресТаблицыНалоговыйАгентНДСВХранилище;
		ТаблицаНалоговыйАгентНДС = ПолучитьИзВременногоХранилища(АдресТаблицыНалоговыйАгентНДСВХранилище);
		ЭтотОбъект.НалоговыйАгентНДС.Очистить();
		ЭтотОбъект.НалоговыйАгентНДС.Загрузить(ТаблицаНалоговыйАгентНДС);
	КонецЕсли;
	
	Для НомерСубконто = 1 По 3 Цикл
		ЭтотОбъект["Субконто" + НомерСубконто] = Параметры["Субконто" + НомерСубконто];
	КонецЦикла;
	
	Направление = СокрЛП(Параметры.Направление);
	
	УстановитьПараметрыВыбораСчета();
	УстановитьУсловноеОформление();
	УстановитьВидимость();
	РассчитатьИтог();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Счет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НДСНалоговогоАгента") Тогда
		ЭтотОбъект.ЗаголовокСчет = НСтр("ru = 'Счет учета:'");
		Возврат;
	КонецЕсли;
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Счет) Тогда
		ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
		Для Индекс = 1 По 3 Цикл
			Если Индекс <= ДанныеСчета.КоличествоСубконто Тогда
				ТипЗначенияСубконто = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				ЭтотОбъект["Субконто" + Индекс] = ТипЗначенияСубконто.ПривестиЗначение(ЭтотОбъект["Субконто" + Индекс]);
			Иначе
				ЭтотОбъект["Субконто" + Индекс] = Неопределено;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		Если Не ЗавершениеРаботы Тогда
			Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНДСНалоговогоАгентаКУплате.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Счет = ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента Тогда
		
		Для Индекс = 0 По НалоговыйАгентНДС.Количество() - 1 Цикл
			
			СтрокаПлатежа = НалоговыйАгентНДС[Индекс];
			
			Префикс = "НалоговыйАгентНДС[%1]";
			Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				Префикс, Формат(Индекс, "ЧН=0; ЧГ="));
			
			ИмяСписка = "Расшифровка платежа";
			
			Если НЕ ЗначениеЗаполнено(СтрокаПлатежа.Контрагент) Тогда
				Поле = Префикс + ".Контрагент";
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Контрагент'"),
					Индекс + 1, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаПлатежа.Договор) Тогда
				Поле = Префикс + ".Договор";
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Договор'"),
					Индекс + 1, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаПлатежа.ДокументРасчетов) Тогда
				Поле = Префикс + ".ДокументРасчетов";
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Документ'"),
					Индекс + 1, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаПлатежа.Сумма) Тогда
				Поле = Префикс + ".Сумма";
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма'"),
					Индекс + 1, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СчетУчетаПриИзменении(Элемент)
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтотОбъект);
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
	
	ЗначенияСубконто = Новый Соответствие;
	ЗначенияСубконто.Вставить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет"), 
		ПредопределенноеЗначение("Перечисление.ВидыПлатежейВГосБюджет.Налог"));
	
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(Счет, ЭтотОбъект, ПоляОбъекта,, ЗначенияСубконто);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтотОбъект);
	
	ОчиститьТаблицуНалоговыйАгентНДС();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокПараметров = СписокПараметровВыбораСубконто(ЭтотОбъект, ЭтотОбъект, "Субконто%Индекс%");
	
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтотОбъект, Элемент, СтандартнаяОбработка, СписокПараметров);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыНалоговыйАгентНДС

&НаКлиенте
Процедура НалоговыйАгентНДСДокументРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтрокаПлатеж = Элементы.НалоговыйАгентНДС.ТекущиеДанные;
	СчетУчета = ЭтотОбъект.Счет;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Период) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указана дата.'"));
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(ЭтотОбъект.Организация) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указана организация.'"));
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаПлатеж.Контрагент) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указан контрагент.'"));
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаПлатеж.Договор) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указан договор.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("Дата",               ЭтотОбъект.Период);
	ПараметрыОбъекта.Вставить("ДоговорКонтрагента", СтрокаПлатеж.Договор);
	ПараметрыОбъекта.Вставить("Контрагент",         СтрокаПлатеж.Контрагент);
	ПараметрыОбъекта.Вставить("Организация",        ЭтотОбъект.Организация);
	ПараметрыОбъекта.Вставить("ОстаткиОбороты",     "Кт");
	ПараметрыОбъекта.Вставить("СчетУчета",          СчетУчета);
	ПараметрыОбъекта.Вставить("РежимОтбораДокументов", 
		ПредопределенноеЗначение("Перечисление.РежимОтбораДокументов.ПоОборотам"));
	ПараметрыОбъекта.Вставить("ТипыДокументов",
		"Метаданные.Документы.СписаниеСРасчетногоСчета.ТабличныеЧасти.НалоговыйАгентНДС.Реквизиты.ДокументРасчетов.Тип");
	
	ПараметрыФормы = Новый Структура("ПараметрыОбъекта", ПараметрыОбъекта);
	ОткрытьФорму("Документ.ДокументРасчетовСКонтрагентом.ФормаВыбора", ПараметрыФормы, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура НалоговыйАгентНДСДокументРасчетовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаПлатеж = Элементы.НалоговыйАгентНДС.ТекущиеДанные;
	
	Если ЭтотОбъект.НалоговыйАгентНДС.Количество() = 1
	   И СтрокаПлатеж.Сумма = 0 Тогда
		СтрокаПлатеж.Сумма = СуммаПоПлатежномуПоручению;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыйАгентНДСПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьИтог();
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыйАгентНДСПослеУдаления(Элемент, Отказ)
	
	РассчитатьИтог();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ОповеститьОВыбореИЗакрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ДатаДокумента",                           ЭтотОбъект.Период);
	ПараметрыФормы.Вставить("Организация",                             ЭтотОбъект.Организация);
	ПараметрыФормы.Вставить("СуммаПоПлатежномуПоручению",              ЭтотОбъект.СуммаПоПлатежномуПоручению);
	ПараметрыФормы.Вставить("АдресТаблицыНалоговыйАгентНДСВХранилище", ПоместитьРасшифровкуНалоговыйАгентНДСВХранилище());
	ПараметрыФормы.Вставить("ДокументСсылка",                          ЭтотОбъект.ДокументСсылка);
	
	ОткрытьФорму("Обработка.ПодборНДСНалоговогоАгентаКУплате.Форма.Форма", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ЭтотОбъект.НалоговыйАгентНДС.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросЗаполнитьТаблицуЗавершение", ЭтотОбъект);
		ПоказатьВопрос(
			ОписаниеОповещения, 
			НСтр("ru='Перед заполнением табличная часть будет очищена. Заполнить?'"),
			РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьПараметрыВыбораСчета()
	
	НовыйМассивПараметров = Новый Массив;
	
	ПредопределенныеСчетаУплатыНалогов = Новый Массив;
	ПредопределенныеСчетаУплатыНалогов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);                // 68
	ПредопределенныеСчетаУплатыНалогов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию); // 69
	МассивСчетовУплатыНалогов = БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныеСчетаУплатыНалогов);
	
	НовыйМассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивСчетовУплатыНалогов)));
	НовыйМассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Забалансовый", Ложь));
	НовыйМассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", Ложь));
	Элементы.СчетУчета.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассивПараметров);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Для Индекс = 1 По 3 Цикл
		
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Субконто" + Индекс);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
			"Счет", ВидСравненияКомпоновкиДанных.НеРавно, ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма)
	
	Счет = Форма.Счет;
	
	Если Форма.Направление = "Дт" Тогда
		Форма.ЗаголовокСчет = НСтр("ru = 'Счет дебета:'");
	ИначеЕсли Форма.Направление = "Кт" Тогда
		Форма.ЗаголовокСчет = НСтр("ru = 'Счет кредита:'");
	Иначе
		Форма.ЗаголовокСчет = НСтр("ru = 'Счет учета:'");
	КонецЕсли;
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3", 
		"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3");
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма)
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма, "Субконто%Индекс%");
	
	БухгалтерскийУчетКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(
		Форма, Форма, "Субконто%Индекс%", "Субконто%Индекс%", ПараметрыДокумента);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(Форма, ПараметрыОбъекта, ШаблонИмяПоляОбъекта)
	
	СписокПараметров = Новый Структура;
	
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("Организация", Форма.Организация);
	СписокПараметров.Вставить("СчетУчета",   Форма.Счет);
	
	Если Форма.Счет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НДСНалоговогоАгента") Тогда
		
		Если СписокПараметров.Свойство("ДоговорКонтрагента") 
			И ЗначениеЗаполнено(СписокПараметров.ДоговорКонтрагента) Тогда
			
			ОпределитьПараметрыПоРеквизитамДоговора(СписокПараметров);
	
		КонецЕсли;
				
		СписокПараметров.Вставить("ТипыДокументов", Новый ОписаниеТипов(
			"ДокументСсылка.СписаниеСРасчетногоСчета,ДокументСсылка.РасходныйКассовыйОрдер,ДокументСсылка.КорректировкаДолга,
			|ДокументСсылка.РеализацияТоваровУслуг"));
	КонецЕсли;
	
	Возврат СписокПараметров;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОпределитьПараметрыПоРеквизитамДоговора(СписокПараметров)
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СписокПараметров.ДоговорКонтрагента, "УчетАгентскогоНДС,ВидДоговора");
	
	Если РеквизитыДоговора.УчетАгентскогоНДС 
		И РеквизитыДоговора.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом") Тогда
		СписокПараметров.Вставить("РежимОтбораДокументов", ПредопределенноеЗначение("Перечисление.РежимОтбораДокументов.ПоОборотам"));
		СписокПараметров.Вставить("ОстаткиОбороты", "Кт");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОВыбореИЗакрыть()
	
	ВыбранноеЗначение = Новый Структура;
	ВыбранноеЗначение.Вставить("Счет" + Направление, Счет);
	Для НомерСубконто = 1 По 3 Цикл
		ВыбранноеЗначение.Вставить("Субконто" + Направление + НомерСубконто, ЭтотОбъект["Субконто" + НомерСубконто]);
	КонецЦикла;
	
	Если Счет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НДСНалоговогоАгента") Тогда
		ВыбранноеЗначение.Вставить("АдресТаблицыНалоговыйАгентНДСВХранилище", 
			ПоместитьРасшифровкуНалоговыйАгентНДСВХранилище());
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Если Счет = ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента Тогда
		Элементы.ГруппаНалоговыйАгентНДС.Видимость = Истина;
		Элементы.ГруппаОднаСтрока.Видимость = Ложь;
		Элементы.НазначениеПлатежа.Видимость = ЗначениеЗаполнено(ЭтотОбъект.НазначениеПлатежа);
		ЭтотОбъект.Ширина = 70;
		ЭтотОбъект.Высота = 20;
	Иначе
		Элементы.ГруппаНалоговыйАгентНДС.Видимость = Ложь;
		Элементы.ГруппаОднаСтрока.Видимость = Истина;
		ЭтотОбъект.Ширина = 50;
		ЭтотОбъект.Высота = 11;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаНалоговыйАгентНДС = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТаблицыНалоговыйАгентНДСВХранилище);
	Если ТаблицаНалоговыйАгентНДС.Количество() > 0 Тогда
		ЭтотОбъект.НалоговыйАгентНДС.Очистить();
		ЭтотОбъект.НалоговыйАгентНДС.Загрузить(ТаблицаНалоговыйАгентНДС);
		РассчитатьИтог();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	РеквизитыДокумента = Новый Структура();
	РеквизитыДокумента.Вставить("ДатаДокумента",              ЭтотОбъект.Период);
	РеквизитыДокумента.Вставить("Организация",                ЭтотОбъект.Организация);
	РеквизитыДокумента.Вставить("СуммаПоПлатежномуПоручению", ЭтотОбъект.СуммаПоПлатежномуПоручению);
	РеквизитыДокумента.Вставить("ТекущийДокумент",            ЭтотОбъект.ДокументСсылка);
	
	ЗадолженностьНалоговогоАгентаПоНДС = УчетНДСБП.ЗадолженностьНалоговогоАгентаПоНДС(РеквизитыДокумента);
	
	Если ЗадолженностьНалоговогоАгентаПоНДС.Итог("Сумма") <= ЭтотОбъект.СуммаПоПлатежномуПоручению Тогда
		ЭтотОбъект.НалоговыйАгентНДС.Очистить();
		ЭтотОбъект.НалоговыйАгентНДС.Загрузить(ЗадолженностьНалоговогоАгентаПоНДС);
	Иначе
		ЗадолженностьВПределахСуммыПлатежа = ЗадолженностьВПределахСуммыПлатежа(
			ЗадолженностьНалоговогоАгентаПоНДС, ЭтотОбъект.СуммаПоПлатежномуПоручению);
		ЭтотОбъект.НалоговыйАгентНДС.Очистить();
		ЭтотОбъект.НалоговыйАгентНДС.Загрузить(ЗадолженностьВПределахСуммыПлатежа);
	КонецЕсли;

	РассчитатьИтог();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗадолженностьВПределахСуммыПлатежа(Задолженность, СуммаПлатежа)
	
	Если Задолженность.Количество() = 0 Тогда
		Возврат Задолженность;
	КонецЕсли;
	
	ПодобраноВсего = 0;
	ЗадолженностьВПределахСуммыПлатежа = Задолженность.СкопироватьКолонки();
	
	Для Каждого СтрокаЗадолженности Из Задолженность Цикл
		
		ОсталосьПодобрать = СуммаПлатежа - ПодобраноВсего;
		Если ОсталосьПодобрать = 0 Тогда
			Прервать;
		КонецЕсли;
		
		ПодобратьПоТекущейСтроке = Мин(ОсталосьПодобрать, СтрокаЗадолженности.Сумма);
		
		НоваяСтрока = ЗадолженностьВПределахСуммыПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗадолженности);
		НоваяСтрока.Сумма = ПодобратьПоТекущейСтроке;
		
		ПодобраноВсего = ПодобраноВсего + ПодобратьПоТекущейСтроке;
		
	КонецЦикла;
	
	Возврат ЗадолженностьВПределахСуммыПлатежа;
	
КонецФункции

&НаКлиенте
Процедура ВопросЗаполнитьТаблицуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект.НалоговыйАгентНДС.Очистить();
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да И ПроверитьЗаполнение() Тогда
		ОповеститьОВыбореИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРасшифровкуНалоговыйАгентНДСВХранилище()
	
	ТаблицаНалоговыйАгентНДС = ЭтотОбъект.НалоговыйАгентНДС.Выгрузить();
	АдресТаблицыНалоговыйАгентНДСВХранилище = ПоместитьВоВременноеХранилище(ТаблицаНалоговыйАгентНДС, УникальныйИдентификатор);
	
	Возврат АдресТаблицыНалоговыйАгентНДСВХранилище;
	
КонецФункции

&НаСервере
Процедура РассчитатьИтог()
	
	ИтогПоТаблице = ЭтотОбъект.НалоговыйАгентНДС.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицуНалоговыйАгентНДС()
	
	Если ЭтотОбъект.Счет <> ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НДСНалоговогоАгента")
	   И ЭтотОбъект.НалоговыйАгентНДС.Количество() > 0 Тогда
		ЭтотОбъект.НалоговыйАгентНДС.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти