
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСвойстваЗагрузкиФайлов();
			
	ЗаполнитьДанныеИмеющихсяОрганизаций();
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекстСообщения = НСтр("ru = 'Для загрузки файлов рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
	Обработчик = Новый ОписаниеОповещения("ПриОткрытииПослеПодключенияРасширения", ЭтотОбъект);
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(Обработчик, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПослеПодключенияРасширения(Подключено, ДополнительныеПараметры) Экспорт
	
	РасширениеПодключено = Подключено;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"КаталогСФайлами",
		"Видимость",
		Подключено);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СписокФайловКомандаОбновитьСписокФайлов",
		"Видимость",
		Подключено);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДобавитьФайл",
		"Видимость",
		Не Подключено);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогСФайламиПриИзменении(Элемент)
	
	ПрочитатьФайлыИзКаталога(КаталогСФайлами);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогСФайламиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.Заголовок = НСтр("ru='Выберите каталог с файлами сведений'");
	ДиалогВыбораКаталога.Каталог = КаталогСФайлами;
	ДиалогВыбораКаталога.Показать(Новый ОписаниеОповещения("КаталогСФайламиПослеВыбора", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогСФайламиПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КаталогСФайлами = ВыбранныеФайлы[0];
	
	ПрочитатьФайлыИзКаталога(КаталогСФайлами);
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокФайлов

&НаКлиенте
Процедура СписокФайловПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = СписокФайлов.НайтиПоИдентификатору(Элементы.СписокФайлов.ТекущаяСтрока);
	Если ТекущаяСтрока <> Неопределено И ТекущаяСтрока.Пометка Тогда
		Если ТекущаяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР") Тогда
			УстановитьПометкуЗагружаемыхФайловПФР();
		КонецЕсли;
		ОбработатьВыборФайлаСведений(ТекущаяСтрока);
	КонецЕсли;
	
	ОбновитьДоступностьКомандыЗагрузитьОтмеченныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловПриАктивизацииСтроки(Элемент)
	
	УстановитьКомментарийВыбраннойСтроки(ЭтаФорма);
	ОбновитьДоступностьКомандыЗагрузитьОтмеченныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловВыбор(Элемент, ИдентификаторВыбраннойСтроки, Поле, СтандартнаяОбработка)
	
	ВыбраннаяСтрока = СписокФайлов.НайтиПоИдентификатору(ИдентификаторВыбраннойСтроки);
	Если ВыбраннаяСтрока.ДоступенДляВыбора 
		И Не ВыбраннаяСтрока.ИмпортНевозможен 
		И ВыбраннаяСтрока.Организация = Организация 
		И ВыбраннаяСтрока.Период = Период Тогда
		МассивСтрокЗагружаемыхФайлов = Новый Массив;
		МассивСтрокЗагружаемыхФайлов.Добавить(ВыбраннаяСтрока);
		ЗагрузитьФайлы(МассивСтрокЗагружаемыхФайлов);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОбновитьСписокФайлов(Команда)
	
	ПрочитанныйКаталогСФайлами = "";
	ПрочитатьФайлыИзКаталога(КаталогСФайлами);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузитьОтмеченныеФайлы(Команда)
	
	ЗагрузитьОтмеченныеФайлы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	ПрочитатьФайлыИзКаталога(КаталогСФайлами);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСвойстваЗагрузкиФайлов()
	
	ТипФайловСведений = Параметры.ТипФайловСведений;
	ЗагрузкаОрганизацийИФизическихЛиц = Параметры.ЗагрузкаОрганизацийИФизическихЛиц;	
	Организация = Параметры.Организация;
	
	Если ЗагрузкаОрганизацийИФизическихЛиц Тогда	
		ВыбиратьФайлыПоОднойОрганизации = ЗарплатаКадры.ЭтоБазоваяВерсияКонфигурации();
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ТипФайловСведений) Тогда
		ВызватьИсключение НСтр("ru='Не задан тип файлов сведений физических лиц'");
	КонецЕсли;
	
	Если Не ЗагрузкаОрганизацийИФизическихЛиц И Не ЗначениеЗаполнено(Организация) Тогда
		ВызватьИсключение НСтр("ru='Не задана организация'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ЗагрузкаОрганизацийИФизическихЛиц Тогда
		
		ТекстЗаголовка = НСтр("ru='Загрузка сведений из'");
		Если ТипФайловСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР Тогда  
			ОписаниеФайла = " " + НСтр("ru='файлов квартальной отчетности в ПФР'");
		ИначеЕсли ТипФайловСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.СправкиОДоходахВФНС Тогда
			ОписаниеФайла = " " + НСтр("ru='файлов справок о доходах в ФНС'");
			Элементы.СписокФайловКоличествоПачек.Видимость = Ложь;
			Элементы.СписокФайловОрганизацияРегистрационныйНомер.Заголовок = НСтр("ru='Налоговый агент'");
		ИначеЕсли ТипФайловСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьРСВ Тогда
			ОписаниеФайла = " " + НСтр("ru='файлов РСВ в ФНС'");
			Элементы.СписокФайловКоличествоПачек.Видимость = Ложь;
			Элементы.СписокФайловДата.Видимость = Ложь;
			Элементы.СписокФайловОрганизацияРегистрационныйНомер.Заголовок = НСтр("ru='Организация'");	
		Иначе
			ОписаниеФайла = " " + НСтр("ru='файлов'");
		КонецЕсли;
		Заголовок = ТекстЗаголовка + ОписаниеФайла;
		Элементы.СписокФайловТип.Видимость = Ложь;
		
	Иначе	
		
		Параметры.Свойство("Период", Период);
		Если ТипФайловСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР Тогда
			Заголовок = НСтр("ru='Загрузка комплекта отчетности'");
		ИначеЕсли ТипФайловСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.СправкиОДоходахВФНС Тогда
			Заголовок = НСтр("ru='Загрузка справок о доходах'");
			Элементы.СписокФайловКоличествоПачек.Видимость = Ложь;
		Иначе
			Заголовок = НСтр("ru='Загрузка сведений из файлов'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Организация) Тогда
			НаименованиеОрганизации = Организация.Наименование;
			Если СтрДлина(НаименованиеОрганизации) > 24 Тогда
				НаименованиеОрганизации = СокрЛП(Лев(НаименованиеОрганизации, 21)) + "...";
			КонецЕсли; 
			Заголовок = Заголовок + " (" + НаименованиеОрганизации + ?(ЗначениеЗаполнено(Период), "", ")");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Период) Тогда
			Заголовок = Заголовок + ?(ЗначениеЗаполнено(Организация), ", ", " (") + ОтчетныйПериодПоГодуИКварталу(Год(Период), Цел(Месяц(Период) / 3) + 1) + ")";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДанныеИмеющихсяОрганизаций()
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация,
	|	Организации.ИНН,
	|	РегистрацииВНалоговомОргане.КПП КАК КПП
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО Организации.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Организация,
	|	&Период КАК Период
	|ИЗ
	|	ВТОрганизации КАК Организации";
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ИсторияРегистрацийВОрганеПФР",
		Запрос.МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(Запрос.Выполнить().Выгрузить()));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Организация КАК Организация,
	|	ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	Организации.ИНН КАК ИНН,
	|	Организации.КПП КАК КПП
	|ИЗ
	|	ВТОрганизации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияРегистрацийВОрганеПФРСрезПоследних КАК ИсторияРегистрацийВОрганеПФР
	|		ПО Организации.Организация = ИсторияРегистрацийВОрганеПФР.Организация";
	
	СписокСобственныхОрганизаций.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуЗагружаемыхФайловПФР()
	
	ТекущиеДанные = Элементы.СписокФайлов.ТекущиеДанные;
	
	СтруктураПоиска = Новый Структура("Организация,Период", ТекущиеДанные.Организация, ТекущиеДанные.Период);
	НайденныеСтроки = СписокФайлов.НайтиСтроки(СтруктураПоиска);
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Если НайденнаяСтрока = ТекущиеДанные Или Не НайденнаяСтрока.Пометка Тогда
			Продолжить;
		КонецЕсли; 
		Если ТекущиеДанные.ЭтоРСВ_1 Тогда
			Если Не ТекущиеДанные.ЭтоКорректирующаяФорма И Не ТекущиеДанные.ЭтоКорректирующаяФорма Тогда	
				НайденнаяСтрока.Пометка = Ложь;
			КонецЕсли;
		Иначе	
			НайденнаяСтрока.Пометка = Ложь;
		КонецЕсли;	
	КонецЦикла;
	ОбработатьВыборФайлаСведений(ТекущиеДанные);
	
КонецПроцедуры

#Область ПроцедурыОбработкиФайловXML

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыЗагрузкиФайлов()
	
	Параметры = Новый Структура(
		"КаталогФайлов");
	
	Возврат Параметры;
	
КонецФункции

&НаКлиенте
Процедура ПрочитатьФайлыИзКаталога(КаталогФайлов, ПараметрыЗагрузки = Неопределено)
	
	Если ПараметрыЗагрузки = Неопределено Тогда
		ПараметрыЗагрузки = ПараметрыЗагрузкиФайлов();
	КонецЕсли;
	
	Если Не РасширениеПодключено Тогда
		// Веб-клиент без расширения для работы с файлами.
		Обработчик = Новый ОписаниеОповещения("ПрочитатьФайлыИзКаталогаПослеПомещенияФайла", ЭтотОбъект, ПараметрыЗагрузки);
		НачатьПомещениеФайла(Обработчик, , , , УникальныйИдентификатор); 
		Возврат;
	КонецЕсли;
	
	// Веб-клиент с подключенным расширением.
	Если ПрочитанныйКаталогСФайлами = ВРег(КаталогСФайлами) Тогда
		Возврат;
	КонецЕсли; 
	
	СписокФайлов.Очистить();
	
	// Инициализируем каталог
	Каталог = Новый Файл;
	Каталог.НачатьИнициализацию(Новый ОписаниеОповещения("ПрочитатьФайлыИзКаталогаПослеИнициализацииКаталога", ЭтотОбъект, ПараметрыЗагрузки), КаталогСФайлами);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлыИзКаталогаПослеИнициализацииКаталога(Каталог, ПараметрыЗагрузки) Экспорт
	
	// Теперь нужно проверить каталог на существование.
	
	Каталог.НачатьПроверкуСуществования(
		Новый ОписаниеОповещения("ПрочитатьФайлыИзКаталогаПослеПроверкиСуществования", ЭтотОбъект, ПараметрыЗагрузки));
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлыИзКаталогаПослеПроверкиСуществования(Существует, ПараметрыЗагрузки) Экспорт
	
	Если Не Существует Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Каталог «%1» не обнаружен.'"), КаталогСФайлами);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	// Если каталог существует, начинаем поиск.
	Обработчик = Новый ОписаниеОповещения("ПрочитатьФайлыИзКаталогаПослеПоискаФайлов", ЭтотОбъект, ПараметрыЗагрузки);
	НачатьПоискФайлов(Обработчик, КаталогСФайлами, "*.xml");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлыИзКаталогаПослеПоискаФайлов(НайденныеФайлы, ПараметрыЗагрузки) Экспорт
	
	Если НайденныеФайлы.Количество() = 0 Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В каталоге «%1» не найдено файлов для загрузки.'"), КаталогСФайлами);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	МаскаИмениФайлов = МаскаИмениФайлов();
	ПомещаемыеФайлы = Новый Массив;
	Для Каждого ОписаниеФайла Из НайденныеФайлы Цикл
		Если СтрНайти(ОписаниеФайла.Имя, МаскаИмениФайлов) > 0 Тогда
			ПомещаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ОписаниеФайла.ПолноеИмя, ""));
		КонецЕсли;
	КонецЦикла;
	
	Если ПомещаемыеФайлы.Количество() = 0 Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В каталоге «%1» не найдено файлов для загрузки.'"), КаталогСФайлами);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ПрочитатьФайлыИзКаталогаПослеПомещенияФайлов", ЭтотОбъект, ПараметрыЗагрузки);
	НачатьПомещениеФайлов(Обработчик, ПомещаемыеФайлы, , Ложь, ВладелецФормы.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлыИзКаталогаПослеПомещенияФайлов(ПомещенныеФайлы, ПараметрыЗагрузки) Экспорт
	
	ОбновитьСписокФайловНаСервере(ПомещенныеФайлы);
	ПрочитанныйКаталогСФайлами = ВРег(КаталогСФайлами);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлыИзКаталогаПослеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ПараметрыЗагрузки) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	ПомещенныеФайлы = Новый Массив;
	ПомещенныеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ВыбранноеИмяФайла, Адрес));
	
	ПрочитатьФайлыИзКаталогаЗавершение(ПомещенныеФайлы);
	
КонецПроцедуры

&НаКлиенте
Функция МаскаИмениФайлов()
	
	Если ТипФайловСведений = ПредопределенноеЗначение("Перечисление.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР") Тогда
		Возврат "PFR-700-Y-" + ?(ЗначениеЗаполнено(Период), Формат(Период, "ДФ=гггг"), "");
	ИначеЕсли ТипФайловСведений = ПредопределенноеЗначение("Перечисление.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьРСВ") Тогда
		Возврат "NO_RASCHSV_" + ?(ЗначениеЗаполнено(Период), Формат(Период, "ДФ=гггг"), "");	
	ИначеЕсли ТипФайловСведений = ПредопределенноеЗначение("Перечисление.ТипыФайловСведенийФизическихЛиц.СправкиОДоходахВФНС") Тогда
		Возврат "NO_NDFL2_";
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПрочитатьФайлыИзКаталогаЗавершение(ПомещенныеФайлы)
	
	// Действия, выполняемые по завершению чтения файлов из каталога.
	
	ОбновитьСписокФайловНаСервере(ПомещенныеФайлы, Истина);
	
	Если ЗагрузкаОрганизацийИФизическихЛиц Тогда
		НеобходимоОтметитьФайлы = Истина;
		МожноВыбратьНесколькоСтрок = Истина;
	Иначе
		
		ДоступныеДляВыбора = СписокФайлов.НайтиСтроки(Новый Структура("ДоступенДляВыбора", Истина));
		Помеченные = СписокФайлов.НайтиСтроки(Новый Структура("Пометка", Истина));
		МожноВыбратьНесколькоСтрок = Не ЗначениеЗаполнено(Организация) Или Не ЗначениеЗаполнено(Период);
		НеобходимоОтметитьФайлы = МожноВыбратьНесколькоСтрок Или ДоступныеДляВыбора.Количество() <> Помеченные.Количество();
		Если МожноВыбратьНесколькоСтрок И Не НеобходимоОтметитьФайлы Тогда
			Элементы.СписокФайлов.РежимВыделения = РежимВыделенияТаблицы.Множественный;
		Иначе
			Элементы.СписокФайлов.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьДоступностьКомандыЗагрузитьОтмеченныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ДеревоXMLИзФайла(ПутьКФайлу)
	
	Попытка
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.ОткрытьФайл(ПутьКФайлу);
		Фабрика = Новый ФабрикаXDTO;
		ДеревоXML = Фабрика.ПрочитатьXML(ЧтениеXML);
		ЧтениеXML.Закрыть();
		Возврат ДеревоXML;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция КоллекцияСвойствXDTO(ДеревоXML, ПутьКСвойству)
	
	Если ТипЗнч(ДеревоXML.ПолучитьXDTO(ПутьКСвойству)) = Тип("ОбъектXDTO") Тогда
		КоллекцияСвойств = Новый Массив;
		КоллекцияСвойств.Добавить(ДеревоXML.ПолучитьXDTO(ПутьКСвойству));
	Иначе
		КоллекцияСвойств = ДеревоXML.ПолучитьСписок(ПутьКСвойству);
	КонецЕсли;
	
	Возврат КоллекцияСвойств;
	
КонецФункции

&НаСервере
Функция ОбновитьСписокФайловНаСервере(ПомещенныеФайлы, ДобавитьВСписок = Ложь)
	
	Если Не ДобавитьВСписок Тогда
		СписокФайлов.Очистить();
	КонецЕсли; 
	
	Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Файл", ПомещенныйФайл.Имя);
		
		Если СписокФайлов.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		// Получим данные из временного хранилища и запишем их на диск.
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
		ДанныеФайла = ПолучитьИзВременногоХранилища(ПомещенныйФайл.Хранение);
		ДанныеФайла.Записать(ИмяВременногоФайла);
		
		// Прочитаем данные и удалим временный файл, он больше может не понадобиться.
		ДеревоXML = ДеревоXMLИзФайла(ИмяВременногоФайла);
		Попытка
			УдалитьФайлы(ИмяВременногоФайла);
		Исключение
			// Если файл не удалось удалить, он удалится при следующем запуске.
		КонецПопытки;
		
		Если ДеревоXML = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТипФайлаСведений = ТипФайлаСведений(ДеревоXML);
		Если ТипФайлаСведений <> ТипФайловСведений Тогда
			Если ДобавитьВСписок Тогда
				ДобавитьФайлСведений(ПомещенныйФайл);
			КонецЕсли; 
			Продолжить;
		КонецЕсли;
		
		Если ТипФайлаСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР Тогда
			ДобавитьВСписокФайлАДВ_6_2(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML);
			ДобавитьВСписокФайлРСВ(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML);
		ИначеЕсли ТипФайлаСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.СправкиОДоходахВФНС Тогда
			ДобавитьВСписокФайлСправокОДоходах(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML);
		ИначеЕсли ТипФайлаСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьРСВ Тогда
			ДобавитьВСписокФайлРСВФНС(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML);	
		Иначе
			// для других типов сведений
		КонецЕсли; 
		
	КонецЦикла;
	УстановитьОтметкиДляФайловПачекПФР();
	СписокФайлов.Сортировать("ПорядокОрганизации Убыв, Пометка Убыв, ДоступенДляВыбора Убыв, Организация, Период");
	
	Возврат СписокФайлов.Количество();
	
КонецФункции

&НаСервере
Процедура ДобавитьФайлСведений(ПомещенныйФайл)
	
	ПомещаемыеФайлы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПомещенныйФайл);
	Для Каждого ФайлСписка Из СписокФайлов Цикл
		
		Если ФайлСписка.Тип <> Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
		ДанныеФайла = ПолучитьИзВременногоХранилища(ФайлСписка.ОписаниеПереданныхФайлов[0].Хранение);
		ДанныеФайла.Записать(ИмяВременногоФайла);
		
		// Прочитаем данные и удалим временный файл, он больше может не понадобиться.
		ДеревоXML = ДеревоXMLИзФайла(ИмяВременногоФайла);
		ПачкаДокументов = ПачкаДокументов(ДеревоXML);
		
		ЗаполнитьСписокФайловПачек(ФайлСписка, ПачкаДокументов, ПомещаемыеФайлы);
		
	КонецЦикла;
	
КонецПроцедуры

// Определяет к какому типу файлов принадлежит текущий.
&НаСервере
Функция ТипФайлаСведений(ДеревоXML)
	
	ТипФайлаСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.ПустаяСсылка();
	// Проверка на принадлежность к файлам ПФР версии 7.0.
	Если ЭтоXMLФайлВФорматеПФРВерсии7(ДеревоXML) Тогда
		// Получим пачку документов
		ПачкаДокументов = ПачкаДокументов(ДеревоXML);
		Если ПачкаДокументов <> Неопределено Тогда
			// Если это не файл описи АДВ-6-2 пропустим его.
			Если ЭтоДокументАДВ_6_2(ПачкаДокументов) 
				Или ЭтоДокументРСВ(ПачкаДокументов) Тогда 
				
				ТипФайлаСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР;
			КонецЕсли;
		КонецЕсли; 
	ИначеЕсли ЭтоXMLФайлВФорматеФНС(ДеревоXML) Тогда
		
		ИдФайл = ДеревоXML.ИдФайл;
		
		Если Лев(ИдФайл,9)= "NO_NDFL2_" Тогда
			ТипФайлаСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.СправкиОДоходахВФНС;
		ИначеЕсли Лев(ИдФайл,11)= "NO_RASCHSV_" Тогда
			ТипФайлаСведений = Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьРСВ;
		КонецЕсли;
		
	Иначе
		// Для других форматов файлов
	КонецЕсли; 
	
	Возврат ТипФайлаСведений;
	
КонецФункции

&НаСервере
Функция ДобавитьФайлВСписок(ТипФайлаСведений, ПомещенныйФайл)
	
	НоваяЗапись = СписокФайлов.Добавить();
	НоваяЗапись.Тип = ТипФайлаСведений;
	ФайлПачки = Новый Файл(ПомещенныйФайл.Имя);
	НоваяЗапись.Файл = ФайлПачки.Имя;
	ЗаписьОписаниеХранения = НоваяЗапись.ОписаниеПереданныхФайлов.Добавить();
	ЗаписьОписаниеХранения.Имя = ФайлПачки.Имя;
	ЗаписьОписаниеХранения.Хранение = ПомещенныйФайл.Хранение;
	
	Возврат НоваяЗапись;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииЗагрузкиФайловФнсВФормате502503

&НаСервере
Функция ЭтоXMLФайлВФорматеФНС(ДеревоXML)
	
	Попытка
		ИдФайл = ДеревоXML.ИдФайл;
		Возврат Лев(ИдФайл,9)= "NO_NDFL2_" Или Лев(ИдФайл,11)= "NO_RASCHSV_"
	Исключение
		Возврат Ложь;  
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ДобавитьВСписокФайлСправокОДоходах(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML)
	
	ВерсФорм = ?(ДеревоXML.Свойства().Получить("ВерсФорм")<>Неопределено,ДеревоXML.ВерсФорм,"");
	
	Если ВерсФорм <> "5.02" И ВерсФорм <> "5.03" И ВерсФорм <> "5.04" И ВерсФорм <> "5.05" И ВерсФорм <> "5.06" Тогда
		Возврат;
	КонецЕсли;
	
	НоваяЗапись = ДобавитьФайлВСписок(ТипФайлаСведений, ПомещенныйФайл);
	
	Если ВерсФорм = "5.06" Тогда
		
		ИНН = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНА/СвНАЮЛ/ИННЮЛ");
		Юрлицо = Истина;
		Если ИНН = Неопределено Тогда
			ИНН = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНА/СвНАФЛ/ИННФЛ");
			КПП = "";
			Юрлицо = Ложь;
		Иначе
			КПП = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНА/СвНАЮЛ/КПП");
		КонецЕсли;
		ПериодОтчета = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML, "Документ/ОтчетГод");
		
	Иначе
		
		ИНН = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"СвРекв/СвЮЛ/ИННЮЛ");
		Юрлицо = Истина;
		Если ИНН = Неопределено Тогда
			ИНН = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"СвРекв/СвФЛ/ИННФЛ");
			КПП = "";
			Юрлицо = Ложь;
		Иначе
			КПП = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"СвРекв/СвЮЛ/КПП");
		КонецЕсли;
		ПериодОтчета = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML, "СвРекв/ОтчетГод");
		
	КонецЕсли;
	
	НоваяЗапись.Период					= Дата(ПериодОтчета, 1, 1);
	НоваяЗапись.ПериодСтрокой			= ПериодОтчета + " " + НСтр("ru='год'");
	НайденныеОрганизации = СписокСобственныхОрганизаций.НайтиСтроки(Новый Структура("ИНН", ИНН));
	Если НайденныеОрганизации.Количество() > 0 Тогда
		НоваяЗапись.Организация			= НайденныеОрганизации[0].Организация;
		НоваяЗапись.НаименованиеКраткое	= НайденныеОрганизации[0].Организация;
	Иначе
		НаименованиеОрганизации = "";
		Если ТипЗнч(ДеревоXML.Документ) = Тип("ОбъектXDTO") Тогда
			НаименованиеОрганизации = ДеревоXML.Документ.СвНА.СвНАЮЛ.НаимОрг;
		Иначе
			Если ДеревоXML.Документ.Количество() > 0 Тогда
				Если Юрлицо Тогда
					НаименованиеОрганизации = ДеревоXML.Документ[0].СвНА.СвНАЮЛ.НаимОрг;
				Иначе
					НаименованиеОрганизации = ДеревоXML.Документ[0].СвНА.СвНАФЛ.ФИО.Фамилия; 
				КонецЕсли;	
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПустаяСтрока(НаименованиеОрганизации) Тогда
			НоваяЗапись.НаименованиеКраткое = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='ИНН=%1; КПП=%2'"),
				ИНН,
				КПП);
			
		Иначе
			НоваяЗапись.НаименованиеКраткое = НаименованиеОрганизации;
			
		КонецЕсли;
		
	КонецЕсли;
	СписокСправок2НДФЛ = СписокСправок2НДФЛ(ДеревоXML, ВерсФорм);
	Если СписокСправок2НДФЛ.Количество() > 0 Тогда
		
		Если ВерсФорм = "5.06" Тогда
			ДатаЗаполненияСправок = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML, "Документ/ДатаДок");
		Иначе
			ПерваяСправка = СписокСправок2НДФЛ[0];
			ДатаЗаполненияСправок = ПерваяСправка.ДатаДок;
		КонецЕсли;
		
		ДатаЗаполненияГод 	= Прав(ДатаЗаполненияСправок, 4);
		ДатаЗаполненияМесяц = Сред(ДатаЗаполненияСправок, 4, 2);
		ДатаЗаполненияДень 	= Лев(ДатаЗаполненияСправок, 2);
		НоваяЗапись.Дата 	= Дата(ДатаЗаполненияГод, ДатаЗаполненияМесяц, ДатаЗаполненияДень);
		НоваяЗапись.Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В составе %1 спр. 2-НДФЛ.'"),
			СписокСправок2НДФЛ.Количество());
	Иначе
		НоваяЗапись.Комментарий = НСтр("ru='Не содержит справок 2-НДФЛ.'");
	КонецЕсли;
	
	Если Не НоваяЗапись.ИмпортНевозможен Тогда
		Если ЗначениеЗаполнено(НоваяЗапись.Организация) И ЗначениеЗаполнено(Организация) И НоваяЗапись.Организация <> Организация Тогда
			НоваяЗапись.Пометка = Ложь;
			НоваяЗапись.Комментарий = ?(ПустаяСтрока(НоваяЗапись.Комментарий), "", НоваяЗапись.Комментарий + Символы.ПС)
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Сведения относятся к другой организации (%1)'"),
					НоваяЗапись.Организация);
		Иначе
			НоваяЗапись.ПорядокОрганизации = Истина;
		КонецЕсли;
	КонецЕсли; 
	Если Не НоваяЗапись.ИмпортНевозможен И ЗначениеЗаполнено(Период) И Период <> НоваяЗапись.Период Тогда
		НоваяЗапись.Пометка = Ложь;
		НоваяЗапись.Комментарий = ?(ПустаяСтрока(НоваяЗапись.Комментарий), "", НоваяЗапись.Комментарий + Символы.ПС)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Сведения относятся к другому отчетному периоду (%1)'"),
				ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(НоваяЗапись.Период));
	КонецЕсли;
	Если Не НоваяЗапись.ИмпортНевозможен Тогда
		Если ЗначениеЗаполнено(Организация) И Организация <> НоваяЗапись.Организация
			Или ЗначениеЗаполнено(Период) И Период <> НоваяЗапись.Период Тогда
			НоваяЗапись.ДоступенДляВыбора = Ложь;
		Иначе
			НоваяЗапись.ДоступенДляВыбора = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВСписокФайлРСВФНС(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML)

	НоваяЗапись = ДобавитьФайлВСписок(ТипФайлаСведений, ПомещенныйФайл);
	ИНН = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНП/НПЮЛ/ИННЮЛ");
	Юрлицо = Истина;
	Если ИНН = Неопределено Тогда
		ИНН = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНП/НПФЛ/ИННФЛ"); 
		КПП = "";
		Юрлицо = Ложь;
	Иначе
		КПП = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНП/НПЮЛ/КПП");
	КонецЕсли;

	ОтчетныйПериод = ДеревоXML.Документ.Период;
	Если ОтчетныйПериод = "21" Или ОтчетныйПериод = "51" Тогда
		Квартал = 1;
	ИначеЕсли ОтчетныйПериод = "31" Или ОтчетныйПериод = "52" Тогда
		Квартал = 2;
	ИначеЕсли ОтчетныйПериод = "33" Или ОтчетныйПериод = "53" Тогда
		Квартал = 3;
	Иначе
		Квартал = 4;
	КонецЕсли;	
	
	ОтчетГод = ДеревоXML.Документ.ОтчетГод;
	
	НоваяЗапись.Период = Дата(ОтчетГод, (Квартал - 1) * 3 + 1, 1);
	НоваяЗапись.ПериодСтрокой = ОтчетныйПериодПоГодуИКварталу(ОтчетГод, Квартал);
	НайденныеОрганизации = СписокСобственныхОрганизаций.НайтиСтроки(Новый Структура("ИНН", ИНН));
	Если НайденныеОрганизации.Количество() > 0 Тогда
		НоваяЗапись.Организация			= НайденныеОрганизации[0].Организация;
		НоваяЗапись.НаименованиеКраткое	= НайденныеОрганизации[0].Организация;
	Иначе
		НаименованиеОрганизации = ""; 
		Если Юрлицо Тогда
			НаименованиеОрганизации = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНП/НПЮЛ/НаимОрг");
		Иначе
			НаименованиеОрганизации = ПерсонифицированныйУчет.ЗначениеXDTOИзДерева(ДеревоXML,"Документ/СвНП/НПФЛ/ФИО/Фамилия");
		КонецЕсли;
		Если ПустаяСтрока(НаименованиеОрганизации) Тогда
			НоваяЗапись.НаименованиеКраткое = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='ИНН=%1; КПП=%2'"),
				ИНН,
				КПП);
		Иначе
			НоваяЗапись.НаименованиеКраткое = НаименованиеОрганизации;
		КонецЕсли;
	КонецЕсли;
	
	НоваяЗапись.ДоступенДляВыбора = Истина;   
	
КонецПроцедуры


&НаСервере
Функция СписокСправок2НДФЛ(ДеревоXML, ВерсФорм)
	
	Если ВерсФорм = "5.06" Тогда
		
		КоллекцияСвойств = ДеревоXML.ПолучитьСписок("Документ/НДФЛ_2");
		
	Иначе
		
		Если ТипЗнч(ДеревоXML.Документ) = Тип("ОбъектXDTO") Тогда
			КоллекцияСвойств = Новый Массив;
			КоллекцияСвойств.Добавить(ДеревоXML.Документ);
		Иначе
			КоллекцияСвойств = ДеревоXML.ПолучитьСписок("Документ");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КоллекцияСвойств;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииЗагрузкиФайловПФРВФормате70

&НаСервере
Функция ЭтоXMLФайлВФорматеПФРВерсии7(ДеревоXML)
	
	Попытка
		ВерсияФормата = ДеревоXML.Получить("/ЗаголовокФайла/ВерсияФормата");
		Возврат ВерсияФормата = "07.00";
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция ЭтоДокументАДВ_6_2(ДеревоXML)
	Возврат ДеревоXML.Свойства().Получить("ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ") <> Неопределено;
КонецФункции 

&НаСервере
Функция ЭтоДокументРСВ(ДеревоXML)
		
	Если ДеревоXML.Свойства().Получить("РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2014") <> Неопределено 
		Или ДеревоXML.Свойства().Получить("РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2015") <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции 

&НаСервере
Функция ПачкаДокументов(ДеревоXML)
	Возврат ДеревоXML.ПолучитьXDTO("/ПачкаВходящихДокументов");
КонецФункции

&НаСервере
Процедура ДобавитьВСписокФайлАДВ_6_2(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML)
	
	ПачкаДокументов = ПачкаДокументов(ДеревоXML);
	
	Если Не ЭтоДокументАДВ_6_2(ПачкаДокументов) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ПачкаДокументов.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ.Страхователь.РегистрационныйНомер = "0" Тогда
		Возврат;
	КонецЕсли; 
	НоваяЗапись = ДобавитьФайлВСписок(ТипФайлаСведений, ПомещенныйФайл);
	// Определим страхователя
	ЗаполнитьЗначенияСвойств(НоваяЗапись, ПачкаДокументов.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ.Страхователь);
	Если Не ПустаяСтрока(НоваяЗапись.РегистрационныйНомер) Тогда
		НайденныеСтрахователи = СписокСобственныхОрганизаций.НайтиСтроки(Новый Структура("РегистрационныйНомерПФР", НоваяЗапись.РегистрационныйНомер));
		Если НайденныеСтрахователи.Количество() > 0 Тогда
			НоваяЗапись.Организация = НайденныеСтрахователи[0].Организация;
		КонецЕсли;
	КонецЕсли;
	// Определяем дату
	ДатаЗаполненияГод = Прав(ПачкаДокументов.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ.ДатаЗаполнения, 4);
	ДатаЗаполненияМесяц = Сред(ПачкаДокументов.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ.ДатаЗаполнения, 4, 2);
	ДатаЗаполненияДень = Лев(ПачкаДокументов.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ.ДатаЗаполнения, 2);
	НоваяЗапись.Дата = Дата(ДатаЗаполненияГод, ДатаЗаполненияМесяц, ДатаЗаполненияДень);
	// Определим период отчетности.
	Квартал = ПачкаДокументов.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ.ОтчетныйПериод.Квартал;
	Год = ПачкаДокументов.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ.ОтчетныйПериод.Год;
	НоваяЗапись.Период = Дата(Год, (Квартал - 1) * 3 + 1, 1);
	НоваяЗапись.ПериодСтрокой = ОтчетныйПериодПоГодуИКварталу(Год, Квартал);
	ЗаполнитьСписокФайловПачек(НоваяЗапись, ПачкаДокументов, ПомещенныеФайлы);
	Если Не НоваяЗапись.ИмпортНевозможен Тогда
		Если ЗначениеЗаполнено(НоваяЗапись.Организация) И ЗначениеЗаполнено(Организация) И НоваяЗапись.Организация <> Организация Тогда
			НоваяЗапись.Пометка = Ложь;
			НоваяЗапись.Комментарий = ?(ПустаяСтрока(НоваяЗапись.Комментарий), "", НоваяЗапись.Комментарий + Символы.ПС)
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Сведения относятся к другой организации (%1)'"),
					НоваяЗапись.Организация);
		Иначе
			НоваяЗапись.ПорядокОрганизации = Истина;
		КонецЕсли;
	КонецЕсли; 
	Если Не НоваяЗапись.ИмпортНевозможен И ЗначениеЗаполнено(Период) И Период <> НоваяЗапись.Период Тогда
		НоваяЗапись.Пометка = Ложь;
		НоваяЗапись.Комментарий = ?(ПустаяСтрока(НоваяЗапись.Комментарий), "", НоваяЗапись.Комментарий + Символы.ПС)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Сведения относятся к другому отчетному периоду (%1)'"),
				ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(НоваяЗапись.Период));
	КонецЕсли;
	Если Не НоваяЗапись.ИмпортНевозможен Тогда
		Если ЗначениеЗаполнено(Организация) И Организация <> НоваяЗапись.Организация
			Или ЗначениеЗаполнено(Период) И Период <> НоваяЗапись.Период Тогда
			НоваяЗапись.ДоступенДляВыбора = Ложь;
		Иначе
			НоваяЗапись.ДоступенДляВыбора = Истина;
		КонецЕсли;
	КонецЕсли;
	
	НоваяЗапись.КоличествоПачек = НоваяЗапись.ОписаниеПереданныхФайлов.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВСписокФайлРСВ(ТипФайлаСведений, ПомещенныйФайл, ПомещенныеФайлы, ДеревоXML)
	
	ПачкаДокументов = ПачкаДокументов(ДеревоXML);
	
	Если Не ЭтоДокументРСВ(ПачкаДокументов) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПачкаДокументов.Свойства().Получить("РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2014") <> Неопределено Тогда
		ДанныеОтчета = ПачкаДокументов.РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2014;
	ИначеЕсли ПачкаДокументов.Свойства().Получить("РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2015") <> Неопределено Тогда
		ДанныеОтчета = ПачкаДокументов.РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2015;	
	Иначе
		Возврат;
	КонецЕсли;	
	
	Если ДанныеОтчета.РегистрационныйНомерПФР = "0" Тогда
		Возврат;
	КонецЕсли; 
	
	НоваяЗапись = ДобавитьФайлВСписок(ТипФайлаСведений, ПомещенныйФайл);
	
	// Определим страхователя
	НоваяЗапись.РегистрационныйНомер = ДанныеОтчета.РегистрационныйНомерПФР;
	НоваяЗапись.ЭтоРСВ_1 = Истина;
	
	Если ДанныеОтчета.Свойства().Получить("НаименованиеОрганизации") <> Неопределено Тогда
		НоваяЗапись.НаименованиеКраткое = ДанныеОтчета.НаименованиеОрганизации;
	ИначеЕсли ДанныеОтчета.Свойства().Получить("ФИОФизическогоЛица") <> Неопределено Тогда
		СтруктураФИО = ДанныеОтчета.ФИОФизическогоЛица;
		НоваяЗапись.НаименованиеКраткое = СтруктураФИО.Фамилия + " " + СтруктураФИО.Имя + " " + СтруктураФИО.Отчество;
	КонецЕсли;

	НомерКорректировкиСтрокой = ДанныеОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(НомерКорректировкиСтрокой) 
		И Число(НомерКорректировкиСтрокой) <> 0 Тогда 
		
		НоваяЗапись.ЭтоКорректирующаяФорма = Истина;
		ФормаРСВ_Представление = НСтр("ru = 'Корректирующая (№ %1) форма РСВ'") + "-1 ";
		НоваяЗапись.ФормаРСВ_Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ФормаРСВ_Представление,
												НомерКорректировкиСтрокой);
	Иначе
		НоваяЗапись.ФормаРСВ_Представление = НСтр("ru = 'Исходная форма РСВ'") + "-1 ";
	КонецЕсли;	
		
	Если Не ПустаяСтрока(НоваяЗапись.РегистрационныйНомер) Тогда
		НайденныеСтрахователи = СписокСобственныхОрганизаций.НайтиСтроки(Новый Структура("РегистрационныйНомерПФР", НоваяЗапись.РегистрационныйНомер));
		Если НайденныеСтрахователи.Количество() > 0 Тогда
			НоваяЗапись.Организация = НайденныеСтрахователи[0].Организация;
		КонецЕсли;
	КонецЕсли;
	// Определим период отчетности.
	КодПериодаСтрокой = ДанныеОтчета.КодОтчетногоПериода;
	ГодСтрокой = ДанныеОтчета.КалендарныйГод;
	
	КодПериода = Число(КодПериодаСтрокой);
	Год = Число(ГодСтрокой);
	
	Если КодПериода = 0 Тогда
		НоваяЗапись.Период = Дата(Год, 10, 1);
	Иначе		
		НоваяЗапись.Период = НачалоКвартала(Дата(Год, Число(КодПериода), 1));
	КонецЕсли;	
	НоваяЗапись.ПериодСтрокой = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(НоваяЗапись.Период);
	
	ЗаполнитьСписокФайловПачек(НоваяЗапись, ПачкаДокументов, ПомещенныеФайлы);
		
	Если Не НоваяЗапись.ИмпортНевозможен Тогда
		Если ЗначениеЗаполнено(НоваяЗапись.Организация) И ЗначениеЗаполнено(Организация) И НоваяЗапись.Организация <> Организация Тогда
			НоваяЗапись.Пометка = Ложь;
			НоваяЗапись.Комментарий = ?(ПустаяСтрока(НоваяЗапись.Комментарий), "", НоваяЗапись.Комментарий + Символы.ПС)
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Сведения относятся к другой организации (%1)'"),
					НоваяЗапись.Организация);
		Иначе
			НоваяЗапись.ПорядокОрганизации = Истина;
		КонецЕсли;
	КонецЕсли; 
	Если Не НоваяЗапись.ИмпортНевозможен И ЗначениеЗаполнено(Период) И Период <> НоваяЗапись.Период Тогда
		НоваяЗапись.Пометка = Ложь;
		НоваяЗапись.Комментарий = ?(ПустаяСтрока(НоваяЗапись.Комментарий), "", НоваяЗапись.Комментарий + Символы.ПС)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Сведения относятся к другому отчетному периоду (%1)'"),
				ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(НоваяЗапись.Период));
	КонецЕсли;
	
	ИменаФайловРаздела6 = СписокИменФайловВРСВ_1(ПачкаДокументов);
	
	Если Не НоваяЗапись.ИмпортНевозможен
		И ИменаФайловРаздела6.Количество() = 0 Тогда
		
		НоваяЗапись.ИмпортНевозможен = Истина;
		НоваяЗапись.Комментарий = НСтр("ru = 'Форма РСВ-1 не содержит раздела 6'");
	КонецЕсли;	
			
	Если Не НоваяЗапись.ИмпортНевозможен Тогда
		Если ЗначениеЗаполнено(Организация) И Организация <> НоваяЗапись.Организация
			Или ЗначениеЗаполнено(Период) И Период <> НоваяЗапись.Период Тогда
			НоваяЗапись.ДоступенДляВыбора = Ложь;
		Иначе
			НоваяЗапись.ДоступенДляВыбора = Истина;
		КонецЕсли;
	КонецЕсли;
	
	НоваяЗапись.КоличествоПачек = НоваяЗапись.ОписаниеПереданныхФайлов.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИменаФайловВМассив(МассивСтрокСИменамиФайлов, ОписьСведений, ИмяРесурсаСведений)
	
	Если ОписьСведений.Свойства().Получить(ИмяРесурсаСведений) <> Неопределено Тогда
		ИсходныеПачки = КоллекцияСвойствXDTO(ОписьСведений, ИмяРесурсаСведений +"/ИмяФайла");
		Для Каждого СтрокаСИменемФайла Из ИсходныеПачки Цикл   
			Если ЗначениеЗаполнено(СтрокаСИменемФайла) Тогда
				МассивСтрокСИменамиФайлов.Добавить(СтрокаСИменемФайла);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИменаИсходныхФайловРСВВМассив(МассивСтрокСИменамиФайлов, ОписьСведений, ИмяРесурсаСведений)
	
	Если ОписьСведений.Свойства().Получить(ИмяРесурсаСведений) <> Неопределено Тогда
		Пачки = Новый Массив;
		Если ТипЗнч(ОписьСведений[ИмяРесурсаСведений]) = Тип("ОбъектXDTO") Тогда
			Пачки.Добавить(ОписьСведений[ИмяРесурсаСведений]);
		Иначе
			Пачки = ОписьСведений.ПолучитьСписок(ИмяРесурсаСведений)
		КонецЕсли;	
		
		Для Каждого ОписаниеПачки Из Пачки Цикл   
			Если ЗначениеЗаполнено(ОписаниеПачки.ИмяФайла) Тогда
				МассивСтрокСИменамиФайлов.Добавить(ОписаниеПачки.ИмяФайла);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИменаКорректирующихФайловРСВВМассив(МассивСтрокСИменамиФайлов, ОписьСведений, ИмяРесурсаСведений)
	
	Если ОписьСведений.Свойства().Получить(ИмяРесурсаСведений) <> Неопределено Тогда
		Пачки = Новый Массив;
		Если ТипЗнч(ОписьСведений[ИмяРесурсаСведений]) = Тип("ОбъектXDTO") Тогда
			Пачки.Добавить(ОписьСведений[ИмяРесурсаСведений]);
		Иначе
			Пачки = ОписьСведений.ПолучитьСписок(ИмяРесурсаСведений)
		КонецЕсли;	
		
		Для Каждого ОписаниеПачки Из Пачки Цикл   
			Если ЗначениеЗаполнено(ОписаниеПачки.ИмяФайла) Тогда
				МассивСтрокСИменамиФайлов.Добавить(ОписаниеПачки.ИмяФайла);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСписокФайловПачек(ЗаписьСпискаФайлов, ПачкаДокументов, ПомещенныеФайлы)
	
	// Получим список файлов пачек описи.
	СписокИменФайловВПачке = СписокИменФайловВПачке(ПачкаДокументов);
	Если СписокИменФайловВПачке.Количество() > 0 Тогда
		ЗаписьСпискаФайлов.КоличествоПачек = СписокИменФайловВПачке.Количество();
		// Убедимся, что все необходимые файлы имеются.
		РезультатПроверки = Истина;
		ОписаниеОтсутствующихФайлов = "";
		
		Для Каждого ИмяФайлаОтчетности Из СписокИменФайловВПачке Цикл
			ФайлОтчетностиНайден = Ложь;
			Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
				ФайлОтчетности = Новый Файл(ПомещенныйФайл.Имя);
				Если ВРег(ФайлОтчетности.Имя) = ВРег(ИмяФайлаОтчетности) Тогда
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Имя", ИмяФайлаОтчетности);
					
					НайденныеФайлы = ЗаписьСпискаФайлов.ОписаниеПереданныхФайлов.НайтиСтроки(СтруктураПоиска);
					Если НайденныеФайлы.Количество() = 0 Тогда
						ЗаписьОписаниеХранения = ЗаписьСпискаФайлов.ОписаниеПереданныхФайлов.Добавить();
						ЗаписьОписаниеХранения.Имя = ИмяФайлаОтчетности;
						ЗаписьОписаниеХранения.Хранение = ПомещенныйФайл.Хранение;
					КонецЕсли; 
					
					ФайлОтчетностиНайден = Истина;
					
					Прервать;
					
				КонецЕсли; 
			КонецЦикла;
			
			Если Не ФайлОтчетностиНайден Тогда
				ОписаниеОтсутствующихФайлов = ОписаниеОтсутствующихФайлов + ?(ПустаяСтрока(ОписаниеОтсутствующихФайлов), "", Символы.ПС)
					+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" - %1",
						ИмяФайлаОтчетности);
				РезультатПроверки = Ложь;
			КонецЕсли; 
		КонецЦикла;
		
		Если Не РезультатПроверки Тогда
			
			ЗаписьСпискаФайлов.Комментарий = ЗаписьСпискаФайлов.Комментарий + Символы.ПС + НСтр("ru='Отсутствуют необходимые файлы пачек'") + ":" + Символы.ПС + ОписаниеОтсутствующихФайлов;
			ЗаписьСпискаФайлов.Пометка = Ложь;
			ЗаписьСпискаФайлов.ИмпортНевозможен = Истина;
			
		Иначе
			
			ПозицияПредупреждения = СтрНайти(ЗаписьСпискаФайлов.Комментарий, НСтр("ru='Отсутствуют необходимые файлы пачек'") + ":");
			Если ПозицияПредупреждения > 0 Тогда
				ЗаписьСпискаФайлов.Комментарий = СокрЛП(Лев(ЗаписьСпискаФайлов.Комментарий, ПозицияПредупреждения - 1));
			КонецЕсли;
			
			ЗаписьСпискаФайлов.ИмпортНевозможен = ЗаписьСпискаФайлов.КоличествоПачек <> СписокИменФайловВПачке.Количество();
			
			УстановитьКомментарийВыбраннойСтроки(ЭтаФорма);
			ОбновитьДоступностьКомандыЗагрузитьОтмеченныеФайлы(ЭтаФорма);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СписокИменФайловВПачке(ПачкаДокументовДеревоXML)
	
	Если ЭтоДокументАДВ_6_2(ПачкаДокументовДеревоXML) Тогда	
		Возврат СписокИменФайловВПачкеАДВ6_2(ПачкаДокументовДеревоXML);
	ИначеЕсли ЭтоДокументРСВ(ПачкаДокументовДеревоXML) Тогда
		Возврат СписокИменФайловВРСВ_1(ПачкаДокументовДеревоXML);
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СписокИменФайловВПачкеАДВ6_2(ПачкаДокументовДеревоXML)
	
	МассивСтрокСИменамиФайлов = Новый Массив();
	ОписьСведений = ПачкаДокументовДеревоXML.ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ;
	ДобавитьИменаФайловВМассив(МассивСтрокСИменамиФайлов, ОписьСведений, "СведенияОбИсходныхСведениях");
	ДобавитьИменаФайловВМассив(МассивСтрокСИменамиФайлов, ОписьСведений, "СведенияОкорректирующихСведениях");
	
	Возврат МассивСтрокСИменамиФайлов;
	
КонецФункции

&НаСервере
Функция СписокИменФайловВРСВ_1(ПачкаДокументовДеревоXML)
	
	МассивСтрокСИменамиФайлов = Новый Массив();
	
	Если ПачкаДокументовДеревоXML.Свойства().Получить("РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2014") <> Неопределено Тогда
		ДанныеРСВ_XML = ПачкаДокументовДеревоXML.РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2014;
	ИначеЕсли ПачкаДокументовДеревоXML.Свойства().Получить("РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2015") <> Неопределено Тогда
		ДанныеРСВ_XML = ПачкаДокументовДеревоXML.РАСЧЕТ_ПО_СТРАХОВЫМ_ВЗНОСАМ_НА_ОПС_И_ОМС_ПЛАТЕЛЬЩИКАМИ_ПРОИЗВОДЯЩИМИ_ВЫПЛАТЫ_ФЛ_2015;	
	Иначе
		Возврат МассивСтрокСИменамиФайлов;
	КонецЕсли;	
	
	Если ДанныеРСВ_XML.Свойства().Получить("Раздел2РасчетПоТарифуИдопТарифу") = Неопределено Тогда
		Возврат МассивСтрокСИменамиФайлов;
	КонецЕсли;
	
	Раздел2_XML = ДанныеРСВ_XML.Раздел2РасчетПоТарифуИдопТарифу;
	
	Если Раздел2_XML.Свойства().Получить("Раздел_2_5") = Неопределено Тогда
		Возврат МассивСтрокСИменамиФайлов;
	КонецЕсли;

	Раздел2_5_XML = Раздел2_XML.Раздел_2_5;
	
	Если Раздел2_5_XML.Свойства().Получить("ПереченьПачекИсходныхСведенийПУ") <> Неопределено Тогда
		ПереченьПачек_XML = Раздел2_5_XML.ПереченьПачекИсходныхСведенийПУ;
		ДобавитьИменаИсходныхФайловРСВВМассив(МассивСтрокСИменамиФайлов, ПереченьПачек_XML, "СведенияОпачкеИсходных");
	КонецЕсли;	
	Если Раздел2_5_XML.Свойства().Получить("ПереченьПачекКорректирующихСведенийПУ") <> Неопределено Тогда
		ПереченьПачек_XML = Раздел2_5_XML.ПереченьПачекКорректирующихСведенийПУ;
		ДобавитьИменаКорректирующихФайловРСВВМассив(МассивСтрокСИменамиФайлов, ПереченьПачек_XML, "СведенияОпачкеКорректирующих");
	КонецЕсли;	
	
	Возврат МассивСтрокСИменамиФайлов;
	
КонецФункции

&НаСервере
Функция ОтчетныйПериодПоГодуИКварталу(Год, Квартал)
	
	Если Год = "2010" Тогда
		Если Квартал = "1" Тогда
			ОтчетныйПериод = '20100101'
		Иначе
			ОтчетныйПериод = '20100701'
		КонецЕсли;
	Иначе
		ОтчетныйПериод = ДобавитьМесяц(Дата(Год, 1, 1), (Число(Квартал) - 1) * 3);
	КонецЕсли;
	
	Возврат ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ОтчетныйПериод);
	
КонецФункции 

&НаКлиенте
Процедура ЗагрузитьОтмеченныеФайлы()
	
	МассивСтрокЗагружаемыхФайлов = Новый Массив;
	Если НеобходимоОтметитьФайлы И МожноВыбратьНесколькоСтрок Тогда
		Для Каждого СтрокаФайла Из СписокФайлов Цикл
			Если Не СтрокаФайла.Пометка Тогда
				Продолжить;
			КонецЕсли;
			МассивСтрокЗагружаемыхФайлов.Добавить(СтрокаФайла);
		КонецЦикла;
	Иначе
		Для Каждого ИдентификаторВыделеннойСтроки Из Элементы.СписокФайлов.ВыделенныеСтроки Цикл
			ВыделеннаяСтрока = СписокФайлов.НайтиПоИдентификатору(ИдентификаторВыделеннойСтроки);
			Если ВыделеннаяСтрока <> Неопределено Тогда
				МассивСтрокЗагружаемыхФайлов.Добавить(ВыделеннаяСтрока);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	ЗагрузитьФайлы(МассивСтрокЗагружаемыхФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлы(МассивСтрокЗагружаемыхФайлов)
	
	СоответствиеВыбранныхФайлов = Новый Соответствие;
	Для Каждого СтрокаФайла Из МассивСтрокЗагружаемыхФайлов Цикл
		МассивВыбранныхФайлов = Новый Массив;
		ОсновнойФайл = Истина;
		Для Каждого СтрокаОписаниеПереданныхФайлов Из СтрокаФайла.ОписаниеПереданныхФайлов Цикл
			ОписаниеФайла = Новый Структура("ОсновнойФайл, Имя, Хранение");
			ОписаниеФайла.ОсновнойФайл = ОсновнойФайл;
			ОписаниеФайла.Имя = СтрокаОписаниеПереданныхФайлов.Имя;
			ОписаниеФайла.Хранение = СтрокаОписаниеПереданныхФайлов.Хранение;
			МассивВыбранныхФайлов.Добавить(ОписаниеФайла);
			ОсновнойФайл = Ложь;
		КонецЦикла;
		СтруктураВозврата = Новый Структура("Организация, Период, МассивВыбранныхФайлов, ЭтоРСВ_1, ЭтоКорректирующаяФорма");
		СтруктураВозврата.Организация = СтрокаФайла.Организация; 
		СтруктураВозврата.Период = СтрокаФайла.Период;
		СтруктураВозврата.МассивВыбранныхФайлов = МассивВыбранныхФайлов;
		СтруктураВозврата.ЭтоРСВ_1 = СтрокаФайла.ЭтоРСВ_1;
		СтруктураВозврата.ЭтоКорректирующаяФорма = СтрокаФайла.ЭтоКорректирующаяФорма;
		СоответствиеВыбранныхФайлов.Вставить(СтрокаФайла.Файл, СтруктураВозврата);
	КонецЦикла;
	
	Закрыть(СоответствиеВыбранныхФайлов);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьКомандыЗагрузитьОтмеченныеФайлы(Форма)
	
	ДоступностьЗагрузки = Ложь;
	Если Форма.НеобходимоОтметитьФайлы И Форма.МожноВыбратьНесколькоСтрок Тогда
		ДоступностьЗагрузки = Форма.СписокФайлов.НайтиСтроки(Новый Структура("Пометка", Истина)).Количество() > 0;
	Иначе
		ВыделенныеСтроки = Форма.Элементы.СписокФайлов.ВыделенныеСтроки;
		Если ВыделенныеСтроки.Количество() > 0 Тогда
			ДоступностьЗагрузки = Истина;
			Для Каждого ИдентификаторВыделеннойСтроки Из ВыделенныеСтроки Цикл
				ВыделеннаяСтрока = Форма.СписокФайлов.НайтиПоИдентификатору(ИдентификаторВыделеннойСтроки);
				Если ВыделеннаяСтрока = Неопределено Или Не ВыделеннаяСтрока.ДоступенДляВыбора Тогда
					ДоступностьЗагрузки = Ложь;
					Прервать;
				КонецЕсли; 
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли;
	
	Форма.Элементы.ФормаКомандаЗагрузитьОтмеченныеФайлы.Доступность = ДоступностьЗагрузки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтметкиДляФайловПачекПФР()
	
	ТаблицаОрганизацийИПериодов = СписокФайлов.Выгрузить(Новый Структура("Тип,ДоступенДляВыбора", Перечисления.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР, Истина), "Организация,Период");
	Если ТаблицаОрганизацийИПериодов.Количество() > 0 Тогда
		ТаблицаОрганизацийИПериодов.Свернуть("Организация,Период");
		Для Каждого СтрокаОрганизацииПериода Из ТаблицаОрганизацийИПериодов Цикл
			Если ЗначениеЗаполнено(Период) И Период <> СтрокаОрганизацииПериода.Период Тогда
				Продолжить;
			КонецЕсли; 
			НайденныеСтроки = СписокФайлов.НайтиСтроки(Новый Структура("Организация,Период", СтрокаОрганизацииПериода.Организация, СтрокаОрганизацииПериода.Период));
			Если НайденныеСтроки.Количество() = 1 Тогда
				НайденныеСтроки[0].Пометка = Не ВыбиратьФайлыПоОднойОрганизации;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКомментарийВыбраннойСтроки(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Элементы.СписокФайлов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекущаяСтрока = Форма.СписокФайлов.НайтиПоИдентификатору(Элементы.СписокФайлов.ТекущаяСтрока);
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		ПояснениеКВыбранномуФайлу = "";
		
		Если ТекущаяСтрока.ИмпортНевозможен Тогда
			Форма.ПояснениеКВыбранномуФайлу = НСтр("ru='Отсутствуют необходимые файлы.'");
		Иначе
			
			Если ЗначениеЗаполнено(ТекущаяСтрока.Организация) 
				И ЗначениеЗаполнено(Форма.Организация) 
				И ТекущаяСтрока.Организация <> Форма.Организация Тогда
				
					Форма.ПояснениеКВыбранномуФайлу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Сведения организации %1.'"),
						ТекущаяСтрока.Организация);
					Элементы.ПояснениеКВыбранномуФайлу.Подсказка = ТекущаяСтрока.Комментарий;
					
			ИначеЕсли ЗначениеЗаполнено(Форма.Период) 
				И Форма.Период <> ТекущаяСтрока.Период Тогда
				
					Форма.ПояснениеКВыбранномуФайлу = ?(ПустаяСтрока(ПояснениеКВыбранномуФайлу), "", ПояснениеКВыбранномуФайлу + " ")
						+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='Отчетный период - %1.'"),
							ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ТекущаяСтрока.Период));
							
					Элементы.ПояснениеКВыбранномуФайлу.Подсказка = ТекущаяСтрока.Комментарий;
				
			Иначе
				
				Форма.ПояснениеКВыбранномуФайлу = ТекущаяСтрока.Комментарий;
				Элементы.ПояснениеКВыбранномуФайлу.Подсказка = "";
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаСведений(ТекущаяСтрока)
	
	Если ЗагрузкаОрганизацийИФизическихЛиц И ВыбиратьФайлыПоОднойОрганизации Тогда
		
		Если ТипФайловСведений = ПредопределенноеЗначение("Перечисление.ТипыФайловСведенийФизическихЛиц.СправкиОДоходахВФНС") Тогда
			ИмяПоля = "НаименованиеКраткое";
		ИначеЕсли ТипФайловСведений = ПредопределенноеЗначение("Перечисление.ТипыФайловСведенийФизическихЛиц.КвартальнаяОтчетностьВПФР") Тогда
			ИмяПоля = "РегистрационныйНомер";
		Иначе
			ИмяПоля = "НаименованиеКраткое";
		КонецЕсли;
		
		ЗначениеСравнения = ТекущаяСтрока[ИмяПоля];
		Для Каждого СтрокаСпискаФайлов Из СписокФайлов Цикл
			Если СтрокаСпискаФайлов[ИмяПоля] <> ЗначениеСравнения Тогда
				СтрокаСпискаФайлов.Пометка = Ложь;
			КонецЕсли; 
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
