
#Область ОбработчикиСобытийФормы

// Обработчик события "ПриСозданииНаСервере" формы документа.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
	
КонецПроцедуры

// Обработчик события "ПриОткрытии" формы документа.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СобратьДанные();
	
	ОпределитьПодключеноЛиРасширениеДляРаботыСФайламиВВебКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик команды "Обновить" формы документа.
//
&НаКлиенте
Процедура Обновить(Команда)
	
	СобратьДанные();
	
КонецПроцедуры

// Обработчик команды "СохранитьВФайл" формы документа.
//
&НаКлиенте
Процедура СохранитьВФайл(Команда)
	
	ИмяФайла = "Информация для технической поддержки.txt";
	
	Если РасширениеПодключено Тогда
		ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораКаталога.Заголовок = "Сохранение";
		ДиалогВыбораКаталога.ПолноеИмяФайла = ИмяФайла;
		ДиалогВыбораКаталога.Фильтр = НСтр("ru = 'Текст'; en = 'Text'") + "(*.txt)|*.txt";
		ДиалогВыбораКаталога.ПроверятьСуществованиеФайла = Истина;
		ДиалогВыбораКаталога.Показать(Новый ОписаниеОповещения("СохранитьНаДискПродолжениеЗавершение", ЭтотОбъект, Новый Структура("ДиалогВыбораКаталога, ИмяФайла", ДиалогВыбораКаталога, ИмяФайла)));
	Иначе
		СохранитьФайлНаДиск(,ИмяФайла);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

// Управляет видимостью страниц.
//
&НаКлиенте
Процедура ПереключитьСтраницы(ИдетСборДанных = Ложь)
	
	Элементы.ГруппаИнформация.Видимость = Не ИдетСборДанных;
	Элементы.ЗаголовокСтраницыОжидания.Видимость = ИдетСборДанных;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСТекстовымДокументом

// Запускает сбор данных в фоне. См. ДлительныеОперации.ВыполнитьВФоне()
//
&НаКлиенте
Процедура СобратьДанные()
	
	ПереключитьСтраницы(Истина);
	
	ПараметрыДлительнойОперации = Новый Структура;
	ПараметрыДлительнойОперации.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыДлительнойОперации.Вставить("Организация",             Организация);
		
	ДлительнаяОперация = ПолучитьДлительнуюОперациюНаСервере(ПараметрыДлительнойОперации);
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("При формировании документа произошла ошибка. Попробуйте обновить информацию.");
		
		ПереключитьСтраницы();
		
	Иначе
		
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
		НастройкиОжидания.ПолучатьРезультат = Истина;
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		
		Обработчик = Новый ОписаниеОповещения("ФоновоеЗадниеЗавершение", ЭтаФорма);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

// Получает длительную операцию, выполняемую в фоне. См. ДлительныеОперации.ВыполнитьВФоне()
//
&НаСервереБезКонтекста
Функция ПолучитьДлительнуюОперациюНаСервере(ПараметрыДлительнойОперации)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ПараметрыДлительнойОперации.УникальныйИдентификатор);
	
	ИмяМетода = "ОТР_ОбращениеВТехническуюПоддержкуПереопределяемый.ПолучитьДанныеДляОбращенияВТехническуюПоддержку";
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ПараметрыДлительнойОперации, ПараметрыВыполнения);
	
	Возврат ДлительнаяОперация;

КонецФункции

// Оповещение о завершении фонового задания.
//
&НаКлиенте
Процедура ФоновоеЗадниеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Неопределено Тогда
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();
		ТекстовыйДокумент.Прочитать(Поток);
		
		ПереключитьСтраницы();
		
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыРаботыСФайлами

// Обрабатывает результат выбора католога сохранения.
//
&НаКлиенте
Процедура СохранитьНаДискПродолжениеЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогВыбораКаталога = ДополнительныеПараметры.ДиалогВыбораКаталога;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		СохранитьФайлНаДиск(ДиалогВыбораКаталога);
	КонецЕсли;
	
КонецПроцедуры // СохранитьНаДискПродолжениеЗавершение()

// Процедура сохраняет файл на диск.
//
&НаКлиенте
Процедура СохранитьФайлНаДиск(ДиалогВыбораКаталога = Неопределено, ИмяФайла = "")
	
	Если ДиалогВыбораКаталога <> Неопределено Тогда
		КаталогСохранения = ДиалогВыбораКаталога.Каталог;
		ПолноеИмяФайла = ДиалогВыбораКаталога.ПолноеИмяФайла;
		ОбработчикЗавершения = Новый ОписаниеОповещения("ОбработатьПослеВыгрузки", ЭтотОбъект,Новый Структура("ПолноеИмяФайла", ПолноеИмяФайла));
	Иначе
		КаталогСохранения = "";
		ПолноеИмяФайла = ИмяФайла;
		ОбработчикЗавершения = Новый ОписаниеОповещения("ОбработатьПослеВыгрузки", ЭтотОбъект);
	КонецЕсли;
	
	МассивВыгружаемыхФайлов = Новый Массив();
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("txt");
	ТекстовыйДокумент.Записать(ИмяВременногоФайла);
	
	СоответствиеИменФайловИАдресов = Новый Соответствие;
	СоответствиеИменФайловИАдресов.Вставить(ПолноеИмяФайла, ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяВременногоФайла), Новый УникальныйИдентификатор));
	
	МассивВыгружаемыхФайлов = УПЖКХ_РаботаСФайламиСервер.ПолучитьМассивПередаваемыхФайлов(СоответствиеИменФайловИАдресов);
	
	УПЖКХ_РаботаСФайламиКлиент.ВыгрузитьВФайл(РасширениеПодключено, МассивВыгружаемыхФайлов, ОбработчикЗавершения);
	
КонецПроцедуры // СохранитьФайлНаДиск()

&НаКлиенте
// Процедура-обработчик, вызванная в процедуре "ВыгрузкаФайлов()".
Процедура ОбработатьПослеВыгрузки(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПомещенныеФайлы = Неопределено И Не ПомещенныеФайлы.Количество() = 0 Тогда
		Состояние("Файл сохранен.");
	Иначе
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("При сохранении файла возникла ошибка.");
	КонецЕсли;
	
КонецПроцедуры // ОбработатьПослеВыгрузки()

// Определяет подключено ли расширение для работы с файлами.
//
&НаКлиенте
Процедура ОпределитьПодключеноЛиРасширениеДляРаботыСФайламиВВебКлиенте()
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ОпределитьПодключеноЛиРасширениеДляРаботыСФайламиВВебКлиентеЗавершение", ЭтотОбъект);
	
	УПЖКХ_РаботаСФайламиКлиент.ОпределитьВидВзаимодействияСФайловойСистемой(ОповещениеЗавершения);
	
КонецПроцедуры // ОпределитьПодключеноЛиРасширениеДляРаботыСФайламиВВебКлиентеЗавершение()

// Обработчик процедуры определяющей подключено расширение работы с файлами или нет.
//
&НаКлиенте
Процедура ОпределитьПодключеноЛиРасширениеДляРаботыСФайламиВВебКлиентеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		РасширениеПодключено = Результат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти







