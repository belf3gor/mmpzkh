#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьРазделы();
	ЗагрузитьКлассификатор();
	
	Если ЗначениеЗаполнено(Параметры.ТекущийКод) Тогда
		Отбор = Новый Структура("Код", Параметры.ТекущийКод);
		РезультатыПоиска = ЭлементыКатегорий.НайтиСтроки(Отбор);
		Если РезультатыПоиска.Количество() > 0 Тогда
			НайденныйЭлемент = РезультатыПоиска[0];
			Элементы.ЭлементыКатегорий.ТекущаяСтрока = НайденныйЭлемент.ПолучитьИдентификатор();
			Отбор = Новый Структура("Наименование", НайденныйЭлемент.Категория);
			РезультатыПоиска = Разделы.НайтиСтроки(Отбор);
			Если РезультатыПоиска.Количество() > 0 Тогда
				Элементы.Разделы.ТекущаяСтрока = РезультатыПоиска[0].ПолучитьИдентификатор();
			КонецЕсли;
		Иначе
			РезультатыПоиска = Классификатор.НайтиСтроки(Отбор);
			Если РезультатыПоиска.Количество() > 0 Тогда
				Элементы.Классификатор.ТекущаяСтрока = РезультатыПоиска[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	МножественныйВыбор = Параметры.МножественныйВыбор;
	РежимВыделенияТаблиц = ?(МножественныйВыбор, РежимВыделенияТаблицы.Множественный, РежимВыделенияТаблицы.Одиночный);
	Элементы.Классификатор.РежимВыделения     = РежимВыделенияТаблиц;
	Элементы.ЭлементыКатегорий.РежимВыделения = РежимВыделенияТаблиц;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	ОтобразитьНайденные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыРазделы

&НаКлиенте
Процедура РазделыПриАктивизацииСтроки(Элемент)
	
	РазделыТекущиеДанные = Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	
	Если РазделыТекущиеДанные.ЭтоКлассификатор Тогда
		ТекущаяСтраница = Элементы.СтраницаКлассификатор;
		ОтобразитьНайденные();
	Иначе
		ТекущаяСтраница = Элементы.СтраницаЭлементыКатегорий;
		Элементы.ЭлементыКатегорий.ОтборСтрок = Новый ФиксированнаяСтруктура("Категория", РазделыТекущиеДанные.Наименование);
		СтрокаПоиска = "";
	КонецЕсли;
	
	Если Элементы.СтраницыРазделы.ТекущаяСтраница <> ТекущаяСтраница Тогда
		Элементы.СтраницыРазделы.ТекущаяСтраница = ТекущаяСтраница;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыКлассификатор

&НаКлиенте
Процедура КлассификаторВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыКатегорииЭлементы

&НаКлиенте
Процедура ЭлементыКатегорийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВидДеятельности(Команда)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьКлассификатор()
	
	КлассификаторОКВЭД2 = Справочники.Организации.КлассификаторОКВЭД2(Истина);
	АдресХранилищаКлассификатораПоиска = ПоместитьВоВременноеХранилище(КлассификаторОКВЭД2, Новый УникальныйИдентификатор);
	
	Классификатор.Загрузить(КлассификаторОКВЭД2);
	
	КлассификаторЗагруженПоОтбору = "";
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРазделы()
	
	Раздел = Разделы.Добавить();
	
	Раздел.ЭтоКлассификатор = Истина;
	Раздел.Наименование = НСтр("ru = 'Все виды деятельности'");
	Раздел.Иконка       = БиблиотекаКартинок.ВыборОКВЭДВсе;
	
	ЗаполнитьПопулярныеКодыВЭД();
	
	Разделы.Сортировать("Порядок");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПопулярныеКодыВЭД()
	
	МакетыСКатегориями = Новый Массив;
	МакетыСКатегориями.Добавить(ПолучитьОбщийМакет("КатегорииОКВЭД_ИП"));
	МакетыСКатегориями.Добавить(ПолучитьОбщийМакет("КатегорииОКВЭД_ООО"));
	
	Для Каждого Макет Из МакетыСКатегориями Цикл
		
		Для Каждого ОбластьКатегория Из Макет.Области Цикл
			
			Верх = ОбластьКатегория.Верх;
			Низ  = ОбластьКатегория.Низ;
			
			НаименованиеКатегории = СокрП(Макет.Область(Верх, 2).Текст);
			
			Если Разделы.НайтиСтроки(Новый Структура("Наименование", НаименованиеКатегории)).Количество() <> 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Категория = Разделы.Добавить();
			
			Категория.Иконка       = ИконкаКатегории(ОбластьКатегория.Имя);
			Категория.Порядок      = Число(Макет.Область(Верх, 1).Текст);
			Категория.Наименование = НаименованиеКатегории;
			
			Для НомерСтр = Верх + 1 По Низ Цикл
				
				Элемент = ЭлементыКатегорий.Добавить();
				
				Элемент.Категория    = Категория.Наименование;
				Элемент.Код          = СокрП(Макет.Область(НомерСтр, 1).Текст);
				Элемент.Наименование = СокрП(Макет.Область(НомерСтр, 2).Текст);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ИконкаКатегории(Наименование)
	
	Иконка = Неопределено;
	
	Если Метаданные.ОбщиеКартинки.Найти("ВыборОКВЭД" + Наименование) <> Неопределено Тогда
		Иконка = БиблиотекаКартинок["ВыборОКВЭД" + Наименование];
	КонецЕсли;
	
	Возврат Иконка;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьВыбор()
	
	РезультатВыбора = Неопределено;
	
	Если Элементы.СтраницыРазделы.ТекущаяСтраница = Элементы.СтраницаЭлементыКатегорий Тогда
		ТекущийСписок = Элементы.ЭлементыКатегорий;
	Иначе
		ТекущийСписок = Элементы.Классификатор;
	КонецЕсли;
	
	Если МножественныйВыбор Тогда
		РезультатВыбора = Новый Массив;
		Для Каждого ВыделеннаяСтрока Из ТекущийСписок.ВыделенныеСтроки Цикл
			ТекущаяСтрока = ТекущийСписок.ДанныеСтроки(ВыделеннаяСтрока);
			Если ТекущаяСтрока <> Неопределено Тогда
				РезультатВыбора.Добавить(Новый Структура("Код, Наименование", ТекущаяСтрока.Код, ТекущаяСтрока.Наименование));
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТекущаяСтрока = ТекущийСписок.ТекущиеДанные;
		Если ТекущаяСтрока <> Неопределено Тогда
			РезультатВыбора = Новый Структура("Код, Наименование", ТекущаяСтрока.Код, ТекущаяСтрока.Наименование);
		КонецЕсли;
	КонецЕсли;
	
	Если РезультатВыбора <> Неопределено Тогда
		Закрыть(РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьНайденные()
	
	ОтобразитьНайденные = ЗначениеЗаполнено(СтрокаПоиска);
	
	Если ОтобразитьНайденные Тогда
		
		Если КлассификаторЗагруженПоОтбору <> СтрокаПоиска Тогда
			
			ТаблицаОКВЭД = ПолучитьИзВременногоХранилища(АдресХранилищаКлассификатораПоиска);
			
			СписокВыбранныхКодов = Новый СписокЗначений;
			КлассификаторСОтбором = Справочники.Организации.НайтиВКлассификатореОКВЭД2(
				СтрокаПоиска, СписокВыбранныхКодов, ТаблицаОКВЭД);
			
			Классификатор.Загрузить(КлассификаторСОтбором);
			
			КлассификаторЗагруженПоОтбору = СтрокаПоиска;
			
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(КлассификаторЗагруженПоОтбору) Тогда
		
		ТаблицаОКВЭД = ПолучитьИзВременногоХранилища(АдресХранилищаКлассификатораПоиска);
		
		Классификатор.Загрузить(ТаблицаОКВЭД);
		
		КлассификаторЗагруженПоОтбору = "";
		
	КонецЕсли;
	
	Элементы.Разделы.ТекущаяСтрока = 0;
	
КонецПроцедуры

#КонецОбласти
