
#Область УправлениеВнешнимВидомФормы

&НаКлиентеНаСервереБезКонтекста
// Управляет видимостью элементов формы.
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ТекстПереходаКСтатье.Видимость                    = Не Форма.РегистрСведенийЗаполнен;
	Элементы.ТекстИнформацииОЧастоЗадаваемыхВопросах.Видимость = Не Форма.РегистрСведенийЗаполнен;
	
	Если (Форма.РегистрСведенийЗаполнен И Не Форма.КаналСвязиУспешноСоздан) Тогда
		Элементы.ПроблемыСИнтернетомНадпись.Видимость              = Истина;
		Элементы.ПроблемыСИнтернетомНадпись.АвтоМаксимальнаяШирина = Ложь;
		Элементы.ПроблемыСИнтернетомНадпись.МаксимальнаяШирина     = 70;
	Иначе
		Элементы.ПроблемыСИнтернетомНадпись.Видимость              = Ложь;
	КонецЕсли;
	
	ДлинаНедели = 86400*7;
	Если (Форма.ДатаПоследнегоОбновленияСпискаСтатей >= ТекущаяДата() - ДлинаНедели) Тогда
		Элементы.АктуальностьСпискаСтатей.Заголовок       = "Список статей актуален";
		Элементы.АктуальностьСпискаСтатей.ЦветТекста      = WebЦвета.Зеленый;
		Элементы.ОбновлениеНадпись.Заголовок              = "Последнее обновление:"+ " " + Форма.ДатаПоследнегоОбновленияСпискаСтатей;
	Иначе
		Элементы.АктуальностьСпискаСтатей.Заголовок       = "Список статей давно не обновлялся";
		Элементы.АктуальностьСпискаСтатей.ЦветТекста      = WebЦвета.Золотой;
		Элементы.ОбновлениеНадпись.Заголовок              = "Последнее обновление:"+ " " + Форма.ДатаПоследнегоОбновленияСпискаСтатей;
	КонецЕсли;
	
	Если Форма.ДатаПоследнегоОбновленияСпискаСтатей = Дата(1,1,1) Тогда
		Элементы.ОбновлениеНадпись.Заголовок        = "Последнее обновление: не выполнялось";
	КонецЕсли;
	
	Элементы.АктуальностьСпискаСтатей.Видимость = Не Форма.РегистрСведенийЗаполнен;
	
	Если Форма.КаналСвязиУспешноСоздан Тогда
		Элементы.СтатусПодключенияКСетиИнтернет.Заголовок = "Подключено";
	Иначе
		Элементы.СтатусПодключенияКСетиИнтернет.Заголовок = "Нет доступа к сети Интернет";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Формирует заголовок формы со списком статей по объекту.
Процедура СформироватьЗаголовокФормыПоИмениОбъекта(ИмяОбъекта, ТипОбъекта)
	
	// Формируем заголовок для формы.
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ТипОбъекта + "." + ИмяОбъекта);
	Если Не ОбъектМетаданных = Неопределено Тогда
		
		// Определим представление типа объекта по умолчанию.
		ПредставлениеТипаОбъекта = "объекту";
		
		// Определим соответствие типов объектов и их представлений.
		СоответствиеПредставленийТиповОбъектов = Новый Соответствие;
		СоответствиеПредставленийТиповОбъектов.Вставить("ОбщаяФорма",        "объекту");
		СоответствиеПредставленийТиповОбъектов.Вставить("Справочник",        "справочнику");
		СоответствиеПредставленийТиповОбъектов.Вставить("Документ",          "документу");
		СоответствиеПредставленийТиповОбъектов.Вставить("Обработка",         "обработке");
		СоответствиеПредставленийТиповОбъектов.Вставить("Отчет",             "отчету");
		СоответствиеПредставленийТиповОбъектов.Вставить("РегистрСведений",   "регистру сведений");
		СоответствиеПредставленийТиповОбъектов.Вставить("РегистрНакопления", "регистру накопления");
		
		НайденноеПредставление = СоответствиеПредставленийТиповОбъектов.Получить(ТипОбъекта);
		Если Не НайденноеПредставление = Неопределено Тогда
			ПредставлениеТипаОбъекта = НайденноеПредставление;
		КонецЕсли;
		
		Заголовок     = "Статьи по " + ПредставлениеТипаОбъекта + " """ + ОбъектМетаданных.Синоним + """";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Получение и вывод списка статей Часто Задаваемых Вопросов на форму для пользователя.
//
Процедура ПрорисоватьСписокСтатейЧастоЗадаваемыхВопросов(МассивСсылокНаЧастоЗадаваемыеВопросы)
	
	// Если в группе "ГруппаДляГиперссылок" уже содержится список статей, 
	// тогда данную группу очищаем и заново прорисовываем список статей на форме.
	Если Элементы.ГруппаДляГиперссылок.ПодчиненныеЭлементы.Количество() > 0 Тогда
		
		Массив = Новый Массив;
		
		Для Каждого Элемент Из Элементы.ГруппаДляГиперссылок.ПодчиненныеЭлементы Цикл
			Массив.Добавить(Элемент);
		КонецЦикла;
		
		Для Каждого Элемент Из Массив Цикл
			Элементы.Удалить(Элемент);
		КонецЦикла;
		
	КонецЕсли;
	
	// Очищаем соответствие ссылок и гиперссылок на статьи во временных данных, они будут перезаполнены.
	СоответствиеСсылокНаСтатьиИГиперссылокНаНих.Очистить();
	
	ШиринаНадписейИСсылок = 70;
	
	НомерСсылкиНаСтатью = 1;
	
	ИмяСозданнойГруппыСтатьей = "";
	
	// Для каждой ссылки добавляем реквизит на форму. В реквизите будет хранится тема статьи,
	// а в заголовке - ссылка на статью.
	Для Каждого СтрокаСсылка Из МассивСсылокНаЧастоЗадаваемыеВопросы Цикл
		
		// Определим в какую группу нужно помещать ссылки на статьи. Это может быть
		// сворачиваемая группа, созданная программно, либо группа "ГруппаДляГиперссылок".
		
		Если Не СтрокаСсылка.ИмяГруппыСтатьи = "" Тогда
			
			Если Не СтрокаСсылка.ИмяГруппыСтатьи = ИмяСозданнойГруппыСтатьей Тогда
				
				// Создадим новую сворачиваемую группу.
				ИмяСозданнойГруппыСтатьей = СтрокаСсылка.ИмяГруппыСтатьи;
				
				ИмяСворачиваемойГруппы = "СворачиваемаяГруппа" + НомерСсылкиНаСтатью;
				
				Элемент = Элементы.Добавить(ИмяСворачиваемойГруппы, Тип("ГруппаФормы"), Элементы["ГруппаДляГиперссылок"]);
				Элемент.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
				Элемент.Поведение   = ПоведениеОбычнойГруппы.Свертываемая;
				Элемент.Заголовок   = ИмяСозданнойГруппыСтатьей;
				Элемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				Элемент.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
				Элемент.Ширина      = ШиринаНадписейИСсылок;
				Элемент.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
				Элемент.ЗаголовокСвернутогоОтображения = ИмяСозданнойГруппыСтатьей;
				
			КонецЕсли;
			
			РодительГруппыСсылкиНаСтатью = ИмяСворачиваемойГруппы;
			
		Иначе
			
			РодительГруппыСсылкиНаСтатью = "ГруппаДляГиперссылок";
			
		КонецЕсли;
		
		// Группа для отображения маркеров и ссылок. Ссылка "Все статьи на сайте программы"
		// будет без маркера и с отступом от остальных ссылок.
		ИмяГруппы = "ГруппаДляГиперссылок" + НомерСсылкиНаСтатью;
		
		// Для каждой ссылки добавляем новую горизонтальную группу,
		// в которой разместим картинку и саму ссылку.
		Элемент = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), Элементы[РодительГруппыСсылкиНаСтатью]);
		Элемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		
		ОтображениеГруппы = ОтображениеОбычнойГруппы.Нет;
		Если СтрокаСсылка.ТемаВопроса = "Все статьи на сайте программы" Тогда
			ОтображениеГруппы = ОтображениеОбычнойГруппы.ОбычноеВыделение;
		КонецЕсли;
		Элемент.Отображение = ОтображениеГруппы;
		
		Элемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элемент.ОтображатьЗаголовок = Ложь;
		
		Если Не СтрокаСсылка.ТемаВопроса = "Все статьи на сайте программы" Тогда
			
			// Добавление маркера для гиперссылки.
			Элемент = Элементы.Добавить("Маркер" + НомерСсылкиНаСтатью, Тип("ДекорацияФормы"), Элементы[ИмяГруппы]);
			Элемент.Вид = ВидДекорацииФормы.Картинка;
			
			// В зависимости от контента отмечаем статью иконкой определенного цвета.
			Если СтрокаСсылка.ЭтоВидео Тогда
				Элемент.Картинка = БиблиотекаКартинок.ОТР_Видео;
			Иначе
				Элемент.Картинка = БиблиотекаКартинок.ОТР_ЗолотойШар;
			КонецЕсли;
			
			ПодсказкаГиперссылки = "Открыть статью """ + СтрокаСсылка.ТемаВопроса + """";
			
		Иначе
			
			ПодсказкаГиперссылки = "Открыть список всех статей на сайте программы";
			
		КонецЕсли;
		
		// Добавляем гиперссылку для перехода к статье на сайте.
		Элемент = Элементы.Добавить("СсылкаНаСтатью" + НомерСсылкиНаСтатью, Тип("ДекорацияФормы"), Элементы[ИмяГруппы]);
		Элемент.Заголовок          = СтрокаСсылка.ТемаВопроса;
		Элемент.Гиперссылка        = Истина;
		Элемент.Подсказка          = ПодсказкаГиперссылки;
		Элемент.Ширина             = ШиринаНадписейИСсылок;
		Элемент.УстановитьДействие("Нажатие", "ПерейтиПоСсылке");
		
		// Добавление соответствия ссылки и элемента формы в список значений.
		СоответствиеСсылокНаСтатьиИГиперссылокНаНих.Добавить("СсылкаНаСтатью" + НомерСсылкиНаСтатью, СтрокаСсылка.Ссылка);
		
		НомерСсылкиНаСтатью = НомерСсылкиНаСтатью + 1;
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Выделяет имя объекта из полного имени, отсекая тип объекта.
Процедура ПереопределитьИмяОбъекта(ПолноеИмяОбъекта, ИмяОбъекта)
	
	// Выделяем из полного имени объекта, переданного в параметрах, тип объекта и имя объекта.
	РазделительВПолномИмениОбъекта = Найти(ПолноеИмяОбъекта, "_");
	
	Если Не РазделительВПолномИмениОбъекта = 0 Тогда
		
		ТипОбъекта = Лев(ПолноеИмяОбъекта, РазделительВПолномИмениОбъекта - 1);
		ИмяОбъекта = Сред(ПолноеИмяОбъекта, РазделительВПолномИмениОбъекта + 1);
		
		СформироватьЗаголовокФормыПоИмениОбъекта(ИмяОбъекта, ТипОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Получение параметров структуры и запись этих данных в реквизиты формы.
//
Процедура ОбновитьИнформациюОСостоянииПодсистемыЧастоЗадаваемыхВопросовНаФорме()
	
	ПараметрыОпределяющиеСостояниеПодсистемыЧастоЗадаваемыхВопросов = ОТР_ЧастоЗадаваемыеВопросыСервер.ПолучитьИнформациюОСостоянииПодсистемыЧастоЗадаваемыхВопросов();
	ДатаПоследнегоОбновленияСпискаСтатей                            = ПараметрыОпределяющиеСостояниеПодсистемыЧастоЗадаваемыхВопросов.ДатаПоследнегоОбновленияСпискаСтатей;
	КаналСвязиУспешноСоздан                                         = ПараметрыОпределяющиеСостояниеПодсистемыЧастоЗадаваемыхВопросов.КаналСвязиУспешноСоздан;
	РегистрСведенийЗаполнен                                         = ПараметрыОпределяющиеСостояниеПодсистемыЧастоЗадаваемыхВопросов.РегистрСведенийЗаполнен;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// В свойстве "ОбъектМетаданных" передается полное имя объекта конфигурации, из формы которого,
	// по нажатию на кнопку "Часто задаваемые вопросы", открывается данная форма. В полном имени объекта
	// символ "." заменен на "_".
	Если Не Параметры.Свойство("ПолноеИмяОбъекта") Тогда
		Возврат;
	КонецЕсли;
	
	// Имя объекта по умолчанию.
	ИмяОбъекта = Параметры.ПолноеИмяОбъекта;
	
	// Переход к списку общих статей осуществляется по нажатию на кнопку "Часто задаваемые вопросы",
	// расположенную в подразделе "Информация" каждого раздела ЖКХ. В макете со списком статей в колонке
	// "Объекты назначения" так и указано "Общие статьи", поэтому переопределять имя объекта не нужно.
	Если ИмяОбъекта   = "Общие статьи" Тогда
		Заголовок     = "Общие статьи";
	Иначе
		ПереопределитьИмяОбъекта(Параметры.ПолноеИмяОбъекта, ИмяОбъекта);
	КонецЕсли;
	
	МассивСсылокНаЧастоЗадаваемыеВопросы = ОТР_ЧастоЗадаваемыеВопросыСервер.ПолучитьМассивСсылокНаЧастоЗадаваемыеВопросыДляОбъекта(ИмяОбъекта);
	ОбновитьИнформациюОСостоянииПодсистемыЧастоЗадаваемыхВопросовНаФорме();
	ПрорисоватьСписокСтатейЧастоЗадаваемыхВопросов(МассивСсылокНаЧастоЗадаваемыеВопросы);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура - Обработчик события "Нажатие" на реквизиты, добавленные программно в событии "ПриСозданииНаСервере".
//
Процедура ПерейтиПоСсылке(Элемент)
	
	// Ищем ссылку на статью в соответствии элементов форм и ссылок.
	НайденноеСоответствие = СоответствиеСсылокНаСтатьиИГиперссылокНаНих.НайтиПоЗначению(Элемент.Имя);
	Если Не НайденноеСоответствие = Неопределено Тогда
		ОТР_ЧастоЗадаваемыеВопросыКлиент.ОткрытьСтатьюЧастоЗадаваемыеВопросыВБраузере(НайденноеСоответствие.Представление);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик нажатия кнопки "Обновить список статей".
//
Функция ОбновитьСписокСтатейЧастоЗадаваемыхВопросов(Команда)
	
	ОбновитьСписокСтатейЧастоЗадаваемыхВопросовНаСервере();
	
	Если КаналСвязиУспешноСоздан = Истина Тогда
		ПоказатьОповещениеПользователя("Данные успешно обновлены");
	Иначе
		ПоказатьОповещениеПользователя("Обновить данные не удалось");
	КонецЕсли;
	
КонецФункции

&НаСервере
// Обработчик нажатия кнопки "Обновить список статей". 
// Считывает данные из Регистра Сведений "УПЖКХ_СтатьиЧастоЗадаваемыхВопросов", затем проверяет соединение с Интернетом,
// удаляет ранее записанные статьи в группе "ГруппаСГиперссылками",
// заново прорисовывает полученные статьи и возвращает полученный результат.
//
Функция ОбновитьСписокСтатейЧастоЗадаваемыхВопросовНаСервере()
	
	МассивСсылокНаЧастоЗадаваемыеВопросы = ОТР_ЧастоЗадаваемыеВопросыСервер.ПолучитьМассивСсылокНаЧастоЗадаваемыеВопросыДляОбъекта(ИмяОбъекта, Истина);
	ОбновитьИнформациюОСостоянииПодсистемыЧастоЗадаваемыхВопросовНаФорме();
	ПрорисоватьСписокСтатейЧастоЗадаваемыхВопросов(МассивСсылокНаЧастоЗадаваемыеВопросы);
	УправлениеФормой(ЭтаФорма);
	
КонецФункции

#КонецОбласти
