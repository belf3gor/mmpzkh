
#Область ПрочиеПроцедурыИФункции

&НаСервере
// Возвращает html-строку с информацией по элементу схемы.
//
// Параметры:
// Имя - Строка - Имя элемента графической схемы, для которого нужно сформировать html-строку с информацией.
//
Функция ПолучитьОписаниеЭлемента(Знач Имя = "")
	
	// Имя блока с текстом задано в формате "Текст_<ИмяОбъекта>".
	// Выделим из этой строки имя объекта конфигурации.
	Если Найти(Имя, "Текст_") = 1 Тогда
		Имя = Сред(Имя, 7);
	КонецЕсли;
	
	// По имени переданному в параметре функции находятся области из макета "УПЖКХ_СхемыУчетаОписание"
	// и текст из данных областей подставляется в шаблон html-строки.
	
	ШаблонОписанияHTML = ПолучитьОбщийМакет("ОТР_СхемыУчетаШаблонОписания").ПолучитьТекст();
	МакетСОписанием    = ПолучитьОбщийМакет("ОТР_СхемыУчетаОписание");
	
	Если Имя = "" Тогда
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Текст открытия", "Выделите элемент на схеме для получения информации о нем.");
	Иначе
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Текст открытия", "");
	КонецЕсли;
	
	// Подмена заголовка в html-шаблоне.
	Если Не МакетСОписанием.Области.Найти(Имя + "_Заголовок") = Неопределено Тогда
		
		ОбластьЗаголовок = МакетСОписанием.ПолучитьОбласть(Имя + "_Заголовок");
		
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Текст заголовка", ОбластьЗаголовок.ТекущаяОбласть.Текст);
		
	Иначе
		
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Текст заголовка", "");
		
	КонецЕсли;
	
	// Подмена описания в html-шаблоне.
	Если Не МакетСОписанием.Области.Найти(Имя + "_Описание") = Неопределено Тогда
		
		ОбластьОписание  = МакетСОписанием.ПолучитьОбласть(Имя + "_Описание");
		
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Текст описания",  ОбластьОписание.ТекущаяОбласть.Текст);
		
	Иначе
		
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Описание", "");
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Текст описания", "");
		
	КонецЕсли;
	
	// Подмена ссылок у кнопок открытия формы и справочной информации в html-шаблоне.
	Если Не МакетСОписанием.Области.Найти(Имя + "_ПолноеИмя") = Неопределено Тогда
		
		ОбластьСсылка = МакетСОписанием.ПолучитьОбласть(Имя + "_ПолноеИмя");
		
		// Проверим нужно ли для данного объекта выводить гиперссылку открытия формы.
		Если ВыводитьКнопкуОткрытьФорму(Имя) Тогда
			ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Форма_", "Форма_" + ОбластьСсылка.ТекущаяОбласть.Текст);
		Иначе
			ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Открыть форму объекта", "");
		КонецЕсли;
		
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Справка_", "Справка_" + ОбластьСсылка.ТекущаяОбласть.Текст);
		
	Иначе
		
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Открыть форму объекта", "");
		ШаблонОписанияHTML = СтрЗаменить(ШаблонОписанияHTML, "Открыть справочную информацию", "");
		
	КонецЕсли;
	
	Возврат ШаблонОписанияHTML;
	
КонецФункции

&НаСервере
// Определяет нужно отображать гиперссылку "Открыть форму объекта" или нет.
//
Функция ВыводитьКнопкуОткрытьФорму(Имя)
	
	Если Имя = "" Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
// Выполняет переход к новой схеме учета.
Процедура ВыполнитьПереходКСхеме(Имя)
	
	НомерПозиции = СтрДлина("Переход_");
	
	Если Найти(Имя, "Текст_") Тогда
		НомерПозиции = СтрДлина("Текст_Переход_");
	КонецЕсли;
	
	ИмяМакета = Сред(Имя, НомерПозиции + 1);
	
	ЭтаФорма.КлючУникальности = ИмяМакета;
	
	ОткрытьСхемуУчета(ИмяМакета);
	
КонецПроцедуры

&НаСервере
// Загружает схему учета из макета.
Процедура ОткрытьСхемуУчета(ИмяМакета)
	
	ИмяРаздела = ОТР_СхемыУчетаСервер.ПолучитьСинонимРаздела(ИмяМакета);
	
	Заголовок = "Схема учета раздела """ + ИмяРаздела + """";
	
	Схема = ПолучитьОбщийМакет(ИмяМакета);
	
	// Сформируем пояснительную надпись при открытии формы в панели с информацией.
	Описание = ПолучитьОписаниеЭлемента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ИмяМакета") Тогда
		
		ОткрытьСхемуУчета(Параметры.ИмяМакета);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриАктивизации" элемента формы "Схема".
//
Процедура СхемаПриАктивизации(Элемент)
	
	ЭлементСхемы = Элементы.Схема.ТекущийЭлемент;
	
	// Информацию будем выводить только для блоков на схеме.
	Если ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыДекорация") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Найти(ЭлементСхемы.Имя, "Переход_") = 0 Тогда
		ВыполнитьПереходКСхеме(ЭлементСхемы.Имя);
		Возврат;
	КонецЕсли;
	
	Описание = ПолучитьОписаниеЭлемента(ЭлементСхемы.Имя);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриНажатии" элемента формы "Описание".
//
Процедура ОписаниеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ДанныеСобытия.Href = Неопределено Тогда
		Возврат; // Это не ссылка
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекстСсылки = ДанныеСобытия.Href;
	
	НачалоИД = СтрНайти(ТекстСсылки, "Форма_");
	
	Если НачалоИД <> 0 Тогда
		
		НачалоТипаОбъекта = НачалоИД + 6;
		КонецТипаОбъекта  = СтрНайти(ТекстСсылки, ".");
		
		Если КонецТипаОбъекта <> 0 Тогда
			
			ПолноеИмяОбъекта = Сред(ТекстСсылки, НачалоТипаОбъекта);
			
			КоличествоСимволовВТипе = КонецТипаОбъекта - НачалоТипаОбъекта;
			
			ТипОбъекта = Сред(ТекстСсылки, НачалоТипаОбъекта, КоличествоСимволовВТипе);
			
			Если ТипОбъекта = "Отчет" ИЛИ ТипОбъекта = "Обработка" Тогда
				ТипФормы = ".Форма";
			ИначеЕсли ТипОбъекта = "ОбщаяФорма" Тогда
				ТипФормы = "";
			Иначе
				ТипФормы = ".ФормаСписка";
			КонецЕсли;
			
			ОткрытьФорму(ПолноеИмяОбъекта + ТипФормы);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НачалоИД = СтрНайти(ТекстСсылки, "Справка_");
	
	Если НачалоИД <> 0 Тогда
		
		НачалоТипаОбъекта = НачалоИД + 8;
		
		ПолноеИмяОбъекта = Сред(ТекстСсылки, НачалоТипаОбъекта);
		
		ОткрытьСправку(ПолноеИмяОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти