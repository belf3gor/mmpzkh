
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ВспомогательныеПроцедурыИФункции

&НаСервере
// Процедура заполняет таблицу видами операций документа "Регистрация оплаты".
//
Процедура ЗаполнениеТаблицыВидов(Организация)
	
	ТаблицаВидов.Очистить();
	
	НаборЗаписей = РегистрыСведений.УПЖКХ_НастройкаИсточниковОплаты.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() <> 0 Тогда
		Для Каждого Запись из НаборЗаписей Цикл 
			НоваяСтрока = ТаблицаВидов.Добавить();
			НоваяСтрока.ВидОперации = Запись.ВидОперации;
			НоваяСтрока.ИсточникОплаты = Запись.ИсточникОплаты;
		КонецЦикла; 
	Иначе
	
		Для Каждого Запись Из Перечисления.КВП_ВидыОперацийРегистрацииОплаты Цикл 
			Если Запись = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ПоступлениеИзАвтоматизированныхСистемПриемаОплаты 
			   И Документ = "УПЖКХ_ОплатаСервисныхУслуг" Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаВидов.Добавить();
			НоваяСтрока.ВидОперации = Запись;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Процедура записывает источники оплат.
Функция ЗаписатьИсточникиОплат(Организация, Документ, Знач ТаблицаВидов)
	
	НаборЗаписей = РегистрыСведений.УПЖКХ_НастройкаИсточниковОплаты.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	
	Для Каждого СтрокаОпераций Из ТаблицаВидов Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Документ       = Документ;
		НоваяЗапись.ВидОперации    = СтрокаОпераций.ВидОперации; 
		НоваяЗапись.ИсточникОплаты = СтрокаОпераций.ИсточникОплаты;
		НоваяЗапись.Организация    = Организация;
		
	КонецЦикла;
	
	Возврат КВП_ЗаписатьОбъект(НаборЗаписей);
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
	
	Если Параметры.Свойство("Документ") Тогда
		Документ = Параметры.Документ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	ЗаполнениеТаблицыВидов(Организация);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура обработчик события "ПриИзменении" поля ввода "Организация".
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнениеТаблицыВидов(Организация);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "КомандаЗаписать".
Процедура КомандаЗаписать(Команда)
	
	Если ЗаписатьИсточникиОплат(Организация, Документ, ТаблицаВидов) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
