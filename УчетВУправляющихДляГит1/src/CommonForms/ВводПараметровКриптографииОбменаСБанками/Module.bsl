#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ОтпечатокСертификата") Тогда
		Организация			= Параметры.Организация;
		Сервис				= Параметры.Сервис;
		СертификатАбонента 	= УниверсальныйОбменСБанкамиВызовСервера.ПолучитьСертификатОрганизации(Сервис, Организация);
		Если Параметры.Свойство("ПараметрыОтбора") Тогда
			ПараметрыОтбора = Параметры.ПараметрыОтбора;
		Иначе
			ПараметрыОтбора = УниверсальныйОбменСБанкамиКлиентСервер.ПараметрыОтбораСертификата(Сервис, Организация);
		КонецЕсли;
	Иначе
		СертификатАбонента 	= Параметры.ОтпечатокСертификата;
	КонецЕсли;
	
	Если Параметры.Свойство("ВозможностьВыбораСертификата") Тогда
		Элементы.СертификатАбонентаПредставление.ТолькоПросмотр = НЕ Параметры.ВозможностьВыбораСертификата;
	КонецЕсли;
	
	Если Параметры.Свойство("НазваниеКнопки") Тогда
		Если НЕ ПустаяСтрока(Параметры.НазваниеКнопки) Тогда
			Элементы.ФормаОК.Заголовок = Параметры.НазваниеКнопки;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Если НЕ ПустаяСтрока(Параметры.Заголовок) Тогда
			ЭтаФорма.Заголовок = Параметры.Заголовок;
		КонецЕсли;
	КонецЕсли;
	
	ОтображатьПолеВводаПароля = Истина;
	Если Параметры.Свойство("ОтображатьПолеВводаПароля") Тогда
		ОтображатьПолеВводаПароля = Параметры.ОтображатьПолеВводаПароля;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекстПодсказкиПоСертификату") Тогда
		ТекстПодсказкиПоСертификату = Параметры.ТекстПодсказкиПоСертификату;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтобразитьПредставлениеСертификата();
	
	// Для облачного сертификата пароль не отображается.
	Элементы.Пароль.Видимость = ВидимостьПароля();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВвод(Команда)
	
	// обновляем настройки обмена с банками
	Если СертификатАбонента <> "" Тогда
		Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Сервис) Тогда
			УниверсальныйОбменСБанкамиВызовСервера.СохранитьСертификатОрганизации(Сервис, Организация, СертификатАбонента);
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Сертификат криптографии не выбран, его необходимо указать для продолжения формирования транзакции.'"),
			,"СертификатАбонентаПредставление");
		Возврат;
	КонецЕсли;
	
	Если СертификатНеНайденВХранилище Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Выбран сертификат криптографии, который не найден в хранилище сертификатов.
				|Выберите сертификат из хранилища.'"),
			,"СертификатАбонентаПредставление");
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура("Пароль,
								|Сертификат,
								|ЭтоОблачныйСертификат",
								Пароль,
								СертификатАбонента,
								ЭтоОблачныйСертификат);
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВидимостьПароля()
	
	Возврат НЕ ЭтоОблачныйСертификат И ОтображатьПолеВводаПароля;
	
КонецФункции

&НаКлиенте
Процедура СертификатАбонентаПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Оповещение = Новый ОписаниеОповещения(
		"СертификатАбонентаПредставлениеНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент));

	УниверсальныйОбменСБанкамиКлиент.ВыбратьСертификат(
		Оповещение, СертификатАбонента, ПараметрыОтбора);

КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если Результат.Выполнено Тогда
		СертификатАбонента = Результат.ВыбранноеЗначение.Отпечаток;
		
		ОтобразитьПредставлениеСертификата();
		Элементы.Пароль.Видимость = ВидимостьПароля();
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДанныеСертификата(Отпечаток)
	
	ОблачныйСертификат = УниверсальныйОбменСБанками.НайтиОблачныйСертификатВХранилище(Отпечаток);
	Если ОблачныйСертификат <> Неопределено Тогда
		Сертификат = УниверсальныйОбменСБанкамиКлиентСервер.СертификатКриптографииВСтуктуру(
			Новый СертификатКриптографии(ОблачныйСертификат.Сертификат));
		Возврат Сертификат;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура СертификатАбонентаПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЭтоОблачныйСертификат Тогда
		ДанныеСертификата = ДанныеСертификата(СертификатАбонента);
		Если ДанныеСертификата <> Неопределено Тогда
			ПараметрыФормы = Новый Структура("Сертификат", ДанныеСертификата);
			ОткрытьФорму(
				"ОбщаяФорма.ПросмотрСертификатаОбменаСБанками", ПараметрыФормы,
				ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	Иначе
		УниверсальныйОбменСБанкамиКлиент.ПоказатьСертификат(
			Новый Структура("Отпечаток, ЭтоЭлектроннаяПодписьВМоделиСервиса",
			СертификатАбонента, ЭтоОблачныйСертификат));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СертификатАбонента = "";
	ОтобразитьПредставлениеСертификата();
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредставлениеСертификата()
	
	ЭтоОблачныйСертификат = УниверсальныйОбменСБанкамиКлиент.ЭтоОблачныйСертификатПользователя(СертификатАбонента);
		
	ПараметрыОтображенияСертификата = УниверсальныйОбменСБанкамиКлиент.ПараметрыОтобразитьПредставленияСертификатов();
	ПараметрыОтображенияСертификата.ПолеВвода								= Элементы.СертификатАбонентаПредставление;
	ПараметрыОтображенияСертификата.Сертификат								= СертификатАбонента;
	ПараметрыОтображенияСертификата.ИмяРеквизитаПредставлениеСертификата	= 	"СертификатАбонентаПредставление";
	ПараметрыОтображенияСертификата.Форма 									= ЭтотОбъект;
	ПараметрыОтображенияСертификата.ЭтоОблачныйСертификат					= ЭтоОблачныйСертификат;
	ПараметрыОтображенияСертификата.ТекстПодсказкиПоСертификату 			= ТекстПодсказкиПоСертификату;
	
	Оповещение = Новый ОписаниеОповещения("ОтобразитьПредставлениеСертификатаЗавершение", ЭтотОбъект);
	УниверсальныйОбменСБанкамиКлиент.ОтобразитьПредставлениеСертификата(Оповещение,ПараметрыОтображенияСертификата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредставлениеСертификатаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Выполнено Тогда
		СертификатНеНайденВХранилище = Результат.СертификатНеНайденВХранилище;
	Иначе
		СертификатНеНайденВХранилище = Истина;
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти
