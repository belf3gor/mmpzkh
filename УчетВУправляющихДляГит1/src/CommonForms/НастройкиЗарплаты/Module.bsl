&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

Процедура ПриСозданииНаСервере()
	
	ДоступенУчетВоВнешнейПрограмме = ТарификацияБПВызовСервераПовтИсп.РазрешеноИспользованиеВнешнейПрограммыУчетаЗарплаты();	
	
	Элементы.УчетЗарплатыИКадровВоВнешнейПрограмме.Доступность = 
		ПравоДоступа("Изменение", Метаданные.Константы.УчетЗарплатыИКадровВоВнешнейПрограмме);
		
	Элементы.РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций.Доступность = 
		ПравоДоступа("Изменение", Метаданные.Константы.РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций);
	// Включить расчет зарплаты по подразделениям для небольших организаций можно только в том случае,
	// если не ведется учет по обособленным подразделениям.
	Элементы.РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций.Видимость = 
		Не БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям();
		
	УчетЗарплатыИКадровВоВнешнейПрограмме = БухгалтерскийУчетПереопределяемый.УчетЗарплатыИКадровВоВнешнейПрограмме();
	РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций = БухгалтерскийУчетПереопределяемый.РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций();

	НесколькоОрганизаций = НесколькоОрганизаций();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Организации" Тогда
		НесколькоОрганизаций = НесколькоОрганизаций();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетЗарплатыИКадровВоВнешнейПрограммеПриИзменении(Элемент)
	
	НаборКонстант.УчетЗарплатыИКадровВоВнешнейПрограмме = 
		?(УчетЗарплатыИКадровВоВнешнейПрограмме = 1, Истина, Ложь);
	
	ИзмененныеКонстанты = УчетЗарплатыИКадровВоВнешнейПрограммеПриИзмененииНаСервере();
	
	УправлениеФормой(ЭтаФорма);
	
	ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
	ОбновитьИнтерфейс = Истина;
	
	Для Каждого КонстантаИмя ИЗ ИзмененныеКонстанты Цикл
		Если КонстантаИмя <> "" Тогда
			Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокУчетаЗарплатыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НЕ НесколькоОрганизаций Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючНастроекЗарплаты()); 
		ОткрытьФорму("РегистрСведений.НастройкиУчетаЗарплаты.ФормаЗаписи", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетЗарплатыПоПодразделениямДляНебольшихОрганизацийПриИзменении(Элемент)
	
	ПриИзмененииРеквизитаНаКлиенте(Элемент, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВосстановитьСтандартныеНастройки(Команда)
	
	ЗарплатаКадрыКлиент.ВосстановитьНачальныеЗначения(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.УчетЗарплатыИКадровВоВнешнейПрограмме.Видимость = Форма.ДоступенУчетВоВнешнейПрограмме;
	
	ВедетсяУчетЗарплатыВЭтойПрограмме = ?(Форма.ДоступенУчетВоВнешнейПрограмме,
		Форма.УчетЗарплатыИКадровВоВнешнейПрограмме = 0,
		Истина);
	
	Элементы.ПорядокУчетаЗарплаты.Видимость                   = ВедетсяУчетЗарплатыВЭтойПрограмме;
	Элементы.ПорядокУчетаЗарплатыВоВнешнейПрограмме.Видимость = НЕ ВедетсяУчетЗарплатыВЭтойПрограмме;
	Элементы.НастройкиДокументовИПечатныхФорм.Видимость       = ВедетсяУчетЗарплатыВЭтойПрограмме;
	Элементы.Начисления.Видимость                             = ВедетсяУчетЗарплатыВЭтойПрограмме;
	Элементы.Удержания.Видимость                              = ВедетсяУчетЗарплатыВЭтойПрограмме;
	Элементы.СтраховыеВзносы.Видимость                        = ВедетсяУчетЗарплатыВЭтойПрограмме;
	Элементы.НДФЛ.Видимость                                   = ВедетсяУчетЗарплатыВЭтойПрограмме;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВосстановитьСтандартныеНастройки", "Видимость", ВедетсяУчетЗарплатыВЭтойПрограмме);		
	
КонецПроцедуры

&НаСервере
Функция УчетЗарплатыИКадровВоВнешнейПрограммеПриИзмененииНаСервере()
	
	ИзмененныеКонстанты = Новый Массив;
	
	КонстантаИмя = СохранитьЗначениеРеквизита("НаборКонстант.УчетЗарплатыИКадровВоВнешнейПрограмме");
	ИзмененныеКонстанты.Добавить(КонстантаИмя);
	
	НаборКонстант.РасчетЗарплатыДляНебольшихОрганизаций = Ложь;
	КонстантаИмя = СохранитьЗначениеРеквизита("НаборКонстант.РасчетЗарплатыДляНебольшихОрганизаций");
	ИзмененныеКонстанты.Добавить(КонстантаИмя);
	
	НаборКонстант.ИспользоватьКадровыйУчет = Ложь;
	КонстантаИмя = СохранитьЗначениеРеквизита("НаборКонстант.ИспользоватьКадровыйУчет");
	ИзмененныеКонстанты.Добавить(КонстантаИмя);
	
	УстановитьНастройкиУчетаЗарплаты(НаборКонстант.УчетЗарплатыИКадровВоВнешнейПрограмме);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат ИзмененныеКонстанты;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииРеквизитаНаКлиенте(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций" Тогда
		НовоеЗначение = РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций;
		Константы.РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций.Установить(НовоеЗначение);
		Если Константы.РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций.Получить() = НовоеЗначение Тогда
			ТекстОшибки = "";
			НачатьТранзакцию();
			Если ИзменитьФлагЕстьОбособленныеПодразделенияОрганизаций(ТекстОшибки) Тогда
				ЗафиксироватьТранзакцию();
			Иначе
				Константы.РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций.Установить(НЕ НовоеЗначение);
				РасчетЗарплатыПоПодразделениямДляНебольшихОрганизаций = НЕ НовоеЗначение;
				ВызватьИсключение ТекстОшибки;
			КонецЕсли;
		КонецЕсли;
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючНастроекЗарплаты()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", Справочники.Организации.ОрганизацияПоУмолчанию());
	Возврат РегистрыСведений.НастройкиУчетаЗарплаты.СоздатьКлючЗаписи(Отбор);
	
КонецФункции

&НаСервереБезКонтекста
Функция НесколькоОрганизаций()
	
	Возврат Справочники.Организации.ИспользуетсяНесколькоОрганизаций();	
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьНастройкиУчетаЗарплаты(ВестиУчетЗарплатыИКадровВоВнешнейПрограмме)
	
	УчетЗарплаты.УстановитьНастройкиУчетаЗарплаты(ВестиУчетЗарплатыИКадровВоВнешнейПрограмме);
	
КонецПроцедуры

&НаСервере
Функция ИзменитьФлагЕстьОбособленныеПодразделенияОрганизаций(ТекстИсключения)
	
	Если БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Для правильной установки флага ЕстьОбособленныеПодразделения перезаписываем все организации.
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Справочники.Организации.Выбрать();
	Пока Выборка.Следующий() Цикл
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ОрганизацияОбъект = Выборка.ПолучитьОбъект();
			ОрганизацияОбъект.Записать();
		Исключение
			ТекстИсключения = ТекстОшибкиИзмененияФлагаЕстьОбособленныеПодразделения();
			Возврат Ложь;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстОшибкиИзмененияФлагаЕстьОбособленныеПодразделения()
	
	Возврат НСтр("ru='Не удалось изменить признак наличия обособленных подразделений организаций.'");
	
КонецФункции

#КонецОбласти