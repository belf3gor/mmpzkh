#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Заголовок            = Параметры.Заголовок;
	ТолькоПросмотр       = Параметры.ТолькоПросмотр;
	
	ТочностьЗаполненияПериода = Параметры.ТочностьЗаполненияПериода;
	НачалоПериода             = Параметры.НачалоПериода;
	КонецПериода              = Параметры.КонецПериода;
	ПредставлениеПериода      = Параметры.ПредставлениеПериода;
	
	ФорматСтрока = Ложь;
	Если ЗначениеЗаполнено(ПредставлениеПериода) Тогда
		ФорматСтрока = Истина;
		ТолькоПросмотр = Истина;
	КонецЕсли; 
	
	Если ТипЗнч(Параметры.ПараметрыРедактирования) = Тип("Структура") Тогда
		Если Параметры.ПараметрыРедактирования.Свойство("СпособЗаполненияПериода") Тогда
			ДоступныеСпособыЗаполненияПериода = Параметры.ПараметрыРедактирования.СпособЗаполненияПериода;
			
			Если ФорматСтрока Тогда
				
				ДоступныеСпособыЗаполненияПериода.Очистить();
				ДоступныеСпособыЗаполненияПериода.Добавить(
					ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка"));
					
			Иначе
				НайденныйСпособ = ДоступныеСпособыЗаполненияПериода.НайтиПоЗначению(
					ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка"));
					
				Если НайденныйСпособ <> Неопределено Тогда
					ДоступныеСпособыЗаполненияПериода.Удалить(НайденныйСпособ);
				КонецЕсли;
			КонецЕсли;
				
		КонецЕсли;
		
		Если Параметры.ПараметрыРедактирования.Свойство("ТочностьЗаполненияПериода") Тогда
			ДоступнаяТочностьЗаполненияПериода = Параметры.ПараметрыРедактирования.ТочностьЗаполненияПериода;
			
			Если ФорматСтрока Тогда
				ДоступнаяТочностьЗаполненияПериода.Очистить();
			КонецЕсли;
			
		КонецЕсли;
		
		Если Параметры.ПараметрыРедактирования.Свойство("СкоропортящаясяПродукция") Тогда
			
			Если Не Параметры.ПараметрыРедактирования.СкоропортящаясяПродукция Тогда
				НайденнаяТочность = ДоступнаяТочностьЗаполненияПериода.НайтиПоЗначению(
					ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ"));
					
				Если НайденнаяТочность <> Неопределено Тогда
					ДоступнаяТочностьЗаполненияПериода.Удалить(НайденнаяТочность);
				КонецЕсли;
			КонецЕсли; 
			
		КонецЕсли; 
		
		ЗаполнитьКнопки(ЭтаФорма);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КонецПериода)
		И Элементы.СпособЗаполненияПериода.СписокВыбора.НайтиПоЗначению(
			Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Период"))) <> Неопределено Тогда
		
		СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Период"));
	ИначеЕсли ЗначениеЗаполнено(ПредставлениеПериода)
		И Элементы.СпособЗаполненияПериода.СписокВыбора.НайтиПоЗначению(
			Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка")))<>Неопределено Тогда
		
		СпособЗаполненияПериода = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка");
	ИначеЕсли ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(ТочностьЗаполненияПериода) Тогда
		СпособЗаполненияПериода = Элементы.СпособЗаполненияПериода.СписокВыбора.НайтиПоЗначению(
			Строка(ТочностьЗаполненияПериода));
	ИначеЕсли Элементы.СпособЗаполненияПериода.СписокВыбора.НайтиПоЗначению(
			ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Дата")) <> Неопределено Тогда
			
		СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Дата"));
	ИначеЕсли Элементы.СпособЗаполненияПериода.СписокВыбора.Количество() Тогда 
		СпособЗаполненияПериода = Элементы.СпособЗаполненияПериода.СписокВыбора[0].Значение;
	КонецЕсли;
	
	Если Элементы.ТочностьЗаполненияПериода.СписокВыбора.Количество() Тогда 
		Если ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ПустаяСсылка") Тогда
			ТочностьЗаполненияПериода = Элементы.ТочностьЗаполненияПериода.СписокВыбора[0].Значение;
		ИначеЕсли Элементы.ТочностьЗаполненияПериода.СписокВыбора.НайтиПоЗначению(ТочностьЗаполненияПериода) = Неопределено Тогда
			ТочностьЗаполненияПериода = Элементы.ТочностьЗаполненияПериода.СписокВыбора[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	НачалоПериодаДень = НачалоДня(НачалоПериода);
	НачалоПериодаЧас  = Час(НачалоПериода);
	КонецПериодаДень  = НачалоДня(КонецПериода);
	КонецПериодаЧас   = Час(КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВариантУказанияСрокаГодности();
	УстановитьТочностьЗаполненияПериода();
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособЗаполненияПериодаПриИзменении(Элемент)
	
	ИдентификаторНайденного = НайтиПредставлениеДоступнойТочности(СпособЗаполненияПериода);
	Если ИдентификаторНайденного <> Неопределено Тогда
		ТочностьЗаполненияПериода = ДоступнаяТочностьЗаполненияПериода.НайтиПоИдентификатору(ИдентификаторНайденного).Значение;
	КонецЕсли;
	
	УстановитьТочностьЗаполненияПериода();
	УстановитьВариантУказанияСрокаГодности();
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ТочностьЗаполненияПериодаПриИзменении(Элемент)
	
	УстановитьТочностьЗаполненияПериода();
	УстановитьВариантУказанияСрокаГодности();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовГруппыФормыСтраницы

&НаКлиенте
Процедура СрокГодностиМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьПериодМесяц ("НачалоПериода", НачалоПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиМесяцРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ГГГГ") Тогда
		НачалоПериода = ДобавитьМесяц(НачалоПериода,12*Направление);
	Иначе
		НачалоПериода = ДобавитьМесяц(НачалоПериода,Направление);
	КонецЕсли;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиНачалоПериодаПриИзменении(Элемент)
	
	НачалоПериодаЧас = 0;
	ОбновитьНачалоПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиНачалоПериодаБезЧасаПриИзменении(Элемент)
	
	ОбновитьНачалоПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиНачалоПериодаЧасПриИзменении(Элемент)
	
	ОбновитьНачалоПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалМесяцГодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьПериодМесяц ("НачалоПериода", НачалоПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалМесяцГодПоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьПериодМесяц ("КонецПериода", КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалМесяцГодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(НачалоПериода)Тогда 
		НачалоПериода = ДобавитьМесяц(НачалоПериода,Направление);
		ПолучитьПредставлениеПериода();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалМесяцГодПоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(КонецПериода)Тогда 
		КонецПериода = ДобавитьМесяц(КонецПериода,Направление);
		ПолучитьПредставлениеПериода();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалДеньМесяцГодПриИзменении(Элемент)
	
	ОбновитьНачалоПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалДеньМесяцГодПоПриИзменении(Элемент)
	
	ОбновитьКонецПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалДеньМесяцГодЧасПриИзменении(Элемент)
	
	ОбновитьНачалоПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиИнтервалДеньМесяцГодЧасПоПриИзменении(Элемент)
	
	ОбновитьКонецПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаПриИзменении(Элемент)
	
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаМесяцОчистка(Элемент, СтандартнаяОбработка)
	
	НачалоПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалМесяцОчистка(Элемент, СтандартнаяОбработка)
	
	НачалоПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалМесяцПоОчистка(Элемент, СтандартнаяОбработка)
	
	КонецПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаДеньОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачалоПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаДеньБезЧасаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачалоПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалДеньОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачалоПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалДеньПоОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КонецПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалДеньБезЧасаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачалоПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалДеньБезЧасаПоОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КонецПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПредставлениеПериода = Неопределено;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Установить(Команда)
	
	Если НЕ ИнтервалКорректен() Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьПредставлениеПериода();
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("НачалоПериода",             Неопределено);
	СтруктураВозврата.Вставить("КонецПериода",              Неопределено);
	
	ИдентификаторТочности = НайтиПредставлениеДоступнойТочности(СпособЗаполненияПериода);
	Если ИдентификаторТочности <> Неопределено Тогда
		СтруктураВозврата.Вставить("ТочностьЗаполненияПериода", ДоступнаяТочностьЗаполненияПериода.НайтиПоИдентификатору(ИдентификаторТочности).Значение);
	Иначе
		СтруктураВозврата.Вставить("ТочностьЗаполненияПериода", ТочностьЗаполненияПериода);
	КонецЕсли;
	
	СтруктураВозврата.Вставить("ПредставлениеПериода", Неопределено);
	Если СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Дата")) Тогда
		СтруктураВозврата.НачалоПериода         = НачалоПериода;
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Период")) Тогда
		СтруктураВозврата.НачалоПериода         = НачалоПериода;
		СтруктураВозврата.КонецПериода          = КонецПериода;
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка")) Тогда
		СтруктураВозврата.ПредставлениеПериода  = ПредставлениеПериода;
	КонецЕсли;
	
	ОповеститьОВыборе(СтруктураВозврата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьКнопки(Форма)
	
	Форма.Элементы.СпособЗаполненияПериода.СписокВыбора.Очистить();
	Форма.Элементы.ТочностьЗаполненияПериода.СписокВыбора.Очистить();
	
	Для каждого ТекущийСпособЗаполнения Из Форма.ДоступныеСпособыЗаполненияПериода Цикл
		Форма.Элементы.СпособЗаполненияПериода.СписокВыбора.Добавить(Строка(ТекущийСпособЗаполнения.Значение));
	КонецЦикла;
	
	Для каждого ТекущаяДоступнаяТочность Из Форма.ДоступнаяТочностьЗаполненияПериода Цикл
		Если ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(ТекущаяДоступнаяТочность.Значение) Тогда
			Форма.Элементы.СпособЗаполненияПериода.СписокВыбора.Добавить(Строка(ТекущаяДоступнаяТочность.Значение));
		Иначе
			Форма.Элементы.ТочностьЗаполненияПериода.СписокВыбора.Добавить(ТекущаяДоступнаяТочность.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СоответствиеПереключателейИмениПоля(ПолеКонецПериода = Ложь)
	
	Если СпособЗаполненияПериода = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка") Тогда 
		Возврат "ПредставлениеПериода";
	ИначеЕсли ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ")Тогда 
		ИмяПоля = "ПредставлениеПериода"+?(ПолеКонецПериода,"По","С");
	ИначеЕсли ПолеКонецПериода Тогда 
		ИмяПоля = "КонецПериодаДень";
	Иначе 
		ИмяПоля = "НачалоПериодаДень";
	КонецЕсли;
	
	Возврат ИмяПоля;
	
КонецФункции

&НаКлиенте
Функция ИнтервалКорректен()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	Если СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Дата")) Тогда
		Если НЕ ЗначениеЗаполнено(НачалоПериодаДень)Тогда 
			ТекстОшибки = НСтр("ru='Не указана дата'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				СоответствиеПереключателейИмениПоля(),
				,
				Отказ);
		КонецЕсли;
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Период")) Тогда
		Если НЕ ЗначениеЗаполнено(НачалоПериодаДень)Тогда 
			ТекстОшибки = НСтр("ru='Не указана дата начала периода'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				СоответствиеПереключателейИмениПоля(),
				,
				Отказ);
		КонецЕсли;
		Если НачалоПериода >= КонецПериода Тогда 
			ТекстОшибки = НСтр("ru='Дата окончания периода должна быть больше даты начала'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				СоответствиеПереключателейИмениПоля(Истина),
				,
				Отказ);
		КонецЕсли;
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка")) Тогда
		Если НЕ ЗначениеЗаполнено(ПредставлениеПериода)Тогда 
			ТекстОшибки = НСтр("ru='Не указан период'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				СоответствиеПереключателейИмениПоля(),
				,
				Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

&НаКлиенте
Процедура УстановитьВариантУказанияСрокаГодности()
	
	Если СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Дата")) Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДата;
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Период")) Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнтервал;
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка")) Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСтрока;
	ИначеЕсли ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(СпособЗаполненияПериода) Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПеречисления;
	КонецЕсли;
	
	// Определим страницу в зависимости от выбранной точности
	Если ТочностьЗаполненияПериода  = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ") Тогда
		
		Элементы.ПериодыДата.ТекущаяСтраница = Элементы.СтраницаДатаМесяц;
		Элементы.ПериодыИнтервал.ТекущаяСтраница = Элементы.СтраницаИнтервалМесяц;
		
	ИначеЕсли ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ") Тогда
		
		Элементы.ПериодыДата.ТекущаяСтраница = Элементы.СтраницаДатаДень;
		Элементы.ПериодыИнтервал.ТекущаяСтраница = Элементы.СтраницаИнтервалДень;
		
	ИначеЕсли ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ") Тогда
		
		Элементы.ПериодыДата.ТекущаяСтраница = Элементы.СтраницаДатаЧас;
		Элементы.ПериодыИнтервал.ТекущаяСтраница = Элементы.СтраницаИнтервалЧас;
		
	ИначеЕсли ТочностьЗаполненияПериода  = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ГГГГ") Тогда
		
		Элементы.ПериодыДата.ТекущаяСтраница = Элементы.СтраницаДатаМесяц;
		Элементы.ПериодыИнтервал.ТекущаяСтраница = Элементы.СтраницаИнтервалМесяц;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НайтиПредставлениеДоступнойТочности(Представление)
	
	Для каждого СтрокаДоступнойТочности Из ДоступнаяТочностьЗаполненияПериода Цикл
		Если Строка(СтрокаДоступнойТочности) = Представление Тогда
			Возврат СтрокаДоступнойТочности.ПолучитьИдентификатор();
		КонецЕсли; 
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции // ПредставлениеЕстьВДоступнойТочности()

&НаКлиенте
Процедура УстановитьТочностьЗаполненияПериода()
	
	ЗаполнитьКнопки(ЭтаФорма);
	
	Если СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Дата")) Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДата;
		
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Период")) Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнтервал;
		
		ТочностьГод = Элементы.ТочностьЗаполненияПериода.СписокВыбора.НайтиПоЗначению(
			ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ГГГГ"));
			
		Если ТочностьГод <> Неопределено Тогда
			Элементы.ТочностьЗаполненияПериода.СписокВыбора.Удалить(ТочностьГод);
		КонецЕсли;
		
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка")) Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСтрока;
		
	ИначеЕсли НайтиПредставлениеДоступнойТочности(СпособЗаполненияПериода) <> Неопределено Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПеречисления;
		Элементы.ТочностьЗаполненияПериода.СписокВыбора.Очистить();
		
	КонецЕсли;
	
	// Если текущая точность недоступна для текущего способа заполнения установим первое доступное
	Если Элементы.ТочностьЗаполненияПериода.СписокВыбора.НайтиПоЗначению(ТочностьЗаполненияПериода) = Неопределено
		И Элементы.ТочностьЗаполненияПериода.СписокВыбора.Количество() > 0 Тогда
		
		ТочностьЗаполненияПериода = Элементы.ТочностьЗаполненияПериода.СписокВыбора[0].Значение;
	КонецЕсли;
	
	ПолучитьПредставлениеПериода();

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодМесяц(РеквизитПериода, ТекущееЗначениеПериода)
	
	ПараметрыОповещения = Новый Структура("РеквизитПериода",РеквизитПериода);
	Оповещение = Новый ОписаниеОповещения("ВыбратьПериодМесяцЗавершение", ЭтотОбъект, ПараметрыОповещения);
	ПараметрыФормыВыбораПериода = Новый Структура("Значение", ТекущееЗначениеПериода);
	
	ОткрытьФорму("ОбщаяФорма.ВыборПериодаИС",
	ПараметрыФормыВыбораПериода,
	ЭтотОбъект,
	ЭтотОбъект.УникальныйИдентификатор,
	,
	,
	Оповещение,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодМесяцЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйПериод <> Неопределено Тогда
		
		ЭтотОбъект[ДополнительныеПараметры.РеквизитПериода] = ВыбранныйПериод;
		ПолучитьПредставлениеПериода();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПредставлениеПериода()
	
	//Приведение к выбранным настройкам
	Если СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Строка")) Тогда
		НачалоПериода     = Неопределено;
		НачалоПериодаДень = Неопределено;
		НачалоПериодаЧас  = 0;
		КонецПериода      = Неопределено;
		КонецПериодаДень  = Неопределено;
		КонецПериодаЧас   = 0;
	ИначеЕсли СпособЗаполненияПериода = Строка(ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПериодаВЕТИС.Дата")) Тогда
		КонецПериода     = Неопределено;
		КонецПериодаДень = Неопределено;
		КонецПериодаЧас  = 0;
	КонецЕсли;
	
	Если ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ") Тогда
		НачалоПериода = НачалоМесяца(НачалоПериода);
		КонецПериода  = НачалоМесяца(КонецПериода);
	ИначеЕсли ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ГГГГ") Тогда
		НачалоПериода = НачалоГода(НачалоПериода);
		КонецПериода  = НачалоГода(КонецПериода);
	ИначеЕсли ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ") Тогда
		НачалоПериода = НачалоДня(НачалоПериода);
		КонецПериода  = НачалоДня(КонецПериода);
	ИначеЕсли ТочностьЗаполненияПериода = ПредопределенноеЗначение("Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ") Тогда
		НачалоПериода = НачалоЧаса(НачалоПериода);
		КонецПериода  = НачалоЧаса(КонецПериода);
	КонецЕсли;
	//Заполнение служебных полей
	НачалоПериодаДень = НачалоДня(НачалоПериода);
	НачалоПериодаЧас  = Час(НачалоПериода);
	КонецПериодаДень  = НачалоДня(КонецПериода);
	КонецПериодаЧас   = Час(КонецПериода);
	
	ПредставлениеПериода   = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПериодаВЕТИС(ТочностьЗаполненияПериода,НачалоПериода,КонецПериода,ПредставлениеПериода);
	ПредставлениеПериодаС  = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПериодаВЕТИС(ТочностьЗаполненияПериода,НачалоПериода);
	ПредставлениеПериодаПо = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеПериодаВЕТИС(ТочностьЗаполненияПериода,КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНачалоПериода()
	
	НачалоПериода = НачалоПериодаДень + 3600*НачалоПериодаЧас;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКонецПериода()
	
	КонецПериода = КонецПериодаДень + 3600*КонецПериодаЧас;
	ПолучитьПредставлениеПериода();
	
КонецПроцедуры

#КонецОбласти



