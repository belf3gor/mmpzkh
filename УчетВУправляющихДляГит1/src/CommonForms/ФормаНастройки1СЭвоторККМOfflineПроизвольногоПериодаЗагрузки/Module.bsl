#Область ОбработчикСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаИнформацияНачальнаяЗагрузка.Видимость = Ложь;
	
	РезультатЗагрузки = Ложь;
	Параметры.Свойство("ИдентификаторУстройства", ИдентификаторУстройства);
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ДатаЗагрузкиОтчетовКассЭвотор.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КассаЭвотор.Значение = Параметры.ИдентификаторУстройства;
	НаборЗаписей.Отбор.КассаЭвотор.Использование = Истина;
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
	
		Для Каждого Запись Из НаборЗаписей Цикл
			
			ДатаНачалаЗагрузки    = Запись.ДатаПоследнейЗакрытойКассовойСмены;
			ДатаОкончанияЗагрузки = ТекущаяДата();
			
		КонецЦикла;
		
	Иначе
		
		УстановитьМаксимальнуюДатуЗагрузки();
		Элементы.ГруппаИнформацияНачальнаяЗагрузка.Видимость = Истина;
		
	КонецЕсли;
	
	МенеджерОфлайнОборудованияПереопределяемый.ФормаНастройкиПроизвольногоПериодаЭвоторПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикКомандФормы

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	Результат = Неопределено;
	
	УстановитьПараметрыУстройства(Результат);
	
	Если Результат Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ЗагрузитьДанныеЗавершение", ЭтотОбъект);
		МенеджерОфлайнОборудованияКлиент.НачатьЗагрузкуДанныхИзККМ(ИдентификаторУстройства, УникальныйИдентификатор, ОповещениеПриЗавершении, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	Закрыть();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалаЗагрузкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение < ТекущаяДата() - 6*30*86400 Тогда
		
		ТекстСообщения = НСтр("ru='Выбранный период загрузки превышает 6 месяцев'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	ИначеЕсли ВыбранноеЗначение > ДатаОкончанияЗагрузки Тогда
		
		ТекстСообщения = НСтр("ru='Начальная дата загрузки не может превышать конечную'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	Иначе
		
		ДатаНачалаЗагрузки = ВыбранноеЗначение;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияЗагрузкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение < ДатаНачалаЗагрузки Тогда
		СообщениеОбОшибке = НСтр("ru='Дата окончания загрузки не может быть меньше даты загрузки.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
	Иначе
		ДатаОкончанияЗагрузки = КонецДня(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьДанныеЗавершение(Результат, Параметры) Экспорт
	
	УстановитьАвтоматическийПериодЗагрузки();
	РезультатЗагрузки = Результат.Результат;
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыУстройства(Результат)
	
	Результат = Неопределено;
	УстановитьПривилегированныйРежим(Истина);
	ДанныеУстройства = МенеджерОборудованияВызовСервера.ПолучитьДанныеУстройства(ИдентификаторУстройства);
	Если Не ДанныеУстройства.Параметры.Свойство("ДатаНачала") ИЛИ Не ДанныеУстройства.Параметры.Свойство("ДатаОкончания") Тогда
		СообщениеОбОшибке = НСтр("ru='Не записаны параметры устройства. Проведите настройку офлайн кассы.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		Результат = Ложь;
		Возврат;
	КонецЕсли;
	ДанныеУстройства.Параметры.ДатаНачала           = ДатаНачалаЗагрузки;
	ДанныеУстройства.Параметры.ДатаОкончания        = ДатаОкончанияЗагрузки;
	ДанныеУстройства.Параметры.ЭтоПерваяЗагрузка    = Истина;
	
	НаборЗаписей = РегистрыСведений.ДатаЗагрузкиОтчетовКассЭвотор.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КассаЭвотор.Значение = ИдентификаторУстройства;
	НаборЗаписей.Отбор.КассаЭвотор.Использование = Истина;
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		Запись             = НаборЗаписей.Добавить();
		Запись.КассаЭвотор = ИдентификаторУстройства;
		Запись.ДатаПоследнейЗакрытойКассовойСмены = ДатаНачалаЗагрузки;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	ДанныеУстройства.Параметры.ПериодИзмененВручную = Истина;
	РезультатЗавершения = МенеджерОборудованияВызовСервера.СохранитьПараметрыУстройства(ИдентификаторУстройства, ДанныеУстройства.Параметры);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗавершения Тогда
		Результат = РезультатЗавершения;
		ОбновитьПовторноИспользуемыеЗначения();
	Иначе
		Результат = Ложь;
		СообщениеОбОшибке = НСтр("ru='Не удалось сохранить параметры устройства.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьАвтоматическийПериодЗагрузки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеУстройства = МенеджерОборудованияВызовСервера.ПолучитьДанныеУстройства(ИдентификаторУстройства);
	ДанныеУстройства.Параметры.ПериодИзмененВручную = Ложь;
	
	РезультатЗавершения = МенеджерОборудованияВызовСервера.СохранитьПараметрыУстройства(ИдентификаторУстройства, ДанныеУстройства.Параметры);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗавершения Тогда 
		ОбновитьПовторноИспользуемыеЗначения();
	Иначе
		СообщениеОбОшибке = НСтр("ru='Не удалось сохранить параметры устройства.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМаксимальнуюДатуЗагрузки()
	
	ДатаНачалаЗагрузки    = НачалоДня(ТекущаяДата() - 6*30*86400 + 86400);
	ДатаОкончанияЗагрузки = ТекущаяДата();
	
КонецПроцедуры

#КонецОбласти