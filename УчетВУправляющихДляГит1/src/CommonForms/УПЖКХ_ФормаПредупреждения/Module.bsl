
///////////////////////////////////////////////////////////////////////////////
// Описание входящих параметров обработки:

// Заголовок - строка - заголовок формы.
// ТекстКнопки - строка - текст кнопки выполнения операции.
// ИмяХранилищаНастроек - строка - имя хранилища настроек, в котором будет храниться информация о
//     необходимости вывода предупреждения для текущего пользователя.
// ВладелецМакета - строка - строковое представление владельца макета, который нужно вывести.
//     Например, если нужно вывести макет справочника "Здания", владельцем будет "Справочники.КВП_Здания".
// ИмяМакета - строка - имя макета, который нужно выводить в поле HTML.
// ВладелецМетода - строка, объект (в рамках клиента) - владелец метода, который будет выполняться при
//     нажатии на основную кнопку формы.
// МетодДляВыполнения - строка - имя метода, который будет выполняться при нажатии на основную кнопку формы.
// ИмяОповещения - строка - имя оповещения. Нужно, если после выполнения операции нужно обработать результат
//     обработкой оповещения.

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// 1. Устанавливаем имя хранилища настроек для хранения информации о предупреждениях.
	ИмяХранилищаНастроек = Параметры.ИмяХранилищаНастроек;
	
	// 2. Проверяем, нужно ли выводить форму. Ориентируемся на сохраненную информацию.
	// Форма не выводится в следующих условиях:
	//    - действие, предлагаемое на форме, уже выполнялось.
	//    - пользователь отказался получать предупреждение.
	Если ПроверитьНеобходимостьВыводаФормы() Тогда
		
		// 3. Считываем остальные параметры.
		ОбъектВладелецМакета = Параметры.ВладелецМакета;
		ИмяМакета            = Параметры.ИмяМакета;
		ВладелецМетода       = Параметры.ВладелецМетода;
		МетодДляВыполнения   = Параметры.МетодДляВыполнения;
		ИмяОповещения        = Параметры.ИмяОповещения;
		
		// 4. Заполняем тексты.
		ЭтаФорма.Заголовок = Параметры.Заголовок;
		Элементы.КнопкаВыполнитьДействие.Заголовок = Параметры.ТекстКнопки;
		
		МакетПредупреждения  = Неопределено;
		
		// 5. Выводим информацию из макета HTML-документа.
		Попытка
			
			Выполнить(СтрШаблон("МакетПредупреждения = %1.ПолучитьМакет(""%2"");", ОбъектВладелецМакета, ИмяМакета));
			
			ТекстСообщения = МакетПредупреждения.ПолучитьТекст();
			
		Исключение
			
		КонецПопытки;
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если БольшеНеПоказывать Тогда
		ОтменитьВыводПредупрежденияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// РАБОТА С ХРАНИЛИЩЕМ НАСТРОЕК

#Область РаботаСХранилищемНастроек

&НаСервере
// Процедура сохраняет настройку вывода предупреждения на сервере.
//
Процедура ОтменитьВыводПредупрежденияНаСервере()
	
	ХранилищеОбщихНастроек.Сохранить(ИмяХранилищаНастроек,, Ложь);
	
КонецПроцедуры

&НаСервере
// Процедура проверяет необходимость вывода формы.
//
Функция ПроверитьНеобходимостьВыводаФормы()
	
	НеобходимоВывестиФорму = Ложь;
	
	Если ЗначениеЗаполнено(ИмяХранилищаНастроек) Тогда
		
		Пользователь           = Строка(ПользователиКлиентСервер.ТекущийПользователь());
		НеобходимоВывестиФорму = ХранилищеОбщихНастроек.Загрузить(ИмяХранилищаНастроек);
		
		Если НеобходимоВывестиФорму = Неопределено Тогда
			ХранилищеОбщихНастроек.Сохранить(ИмяХранилищаНастроек,, Истина);
			НеобходимоВывестиФорму = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НеобходимоВывестиФорму;
	
КонецФункции

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ВЫПОЛНЕНИЕ ПРЕДЛАГАЕМОГО ДЕЙСТВИЯ

#Область ВыполнениеПредлагаемогоДействия

&НаКлиенте
// Выполняет действие.
//
Процедура ВыполнитьДействие(Команда)
	
	Попытка
		// Если владелец передан строкой.
		Если ТипЗнч(ВладелецМетода) = Тип("Строка") Тогда
			
			// Сначала пытаемся выполнить на клиенте. Если не получается - пытаемся на сервере.
			Попытка
				Выполнить(СтрШаблон("%1.%2();", ВладелецМетода, МетодДляВыполнения));
			Исключение
				ВыполнитьДействиеНаСервере();
			КонецПопытки;
		// Если владелец передан объектом.
		Иначе
			Выполнить(СтрШаблон("ВладелецМетода.%1();", МетодДляВыполнения));
		КонецЕсли;
		
		// Оповещаем.
		Если ЗначениеЗаполнено(ИмяОповещения) Тогда
			Оповестить(ИмяОповещения);
		КонецЕсли;
		
		БольшеНеПоказывать = Истина;
		
		Закрыть();
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
// Выполняем действие на сервере
Процедура ВыполнитьДействиеНаСервере()
	
	Выполнить(СтрШаблон("%1.%2();", ВладелецМетода, МетодДляВыполнения));
	
КонецПроцедуры

#КонецОбласти
