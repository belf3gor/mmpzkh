#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//  ДокументРезультат - табличный документ, в который будет осуществлен вывод;
//  ПоказыватьЗаголовок - Булево - показывать ли заголовок;
//  ВысотаЗаголовка - Число - переменная, в которую запишется высота
//                 области заголовка.
//
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
		
	ДокументРезультат = Новый ТабличныйДокумент;
	
	Макет = Отчеты.КВП_ОтчетОбИсполненииГрафикаПлатежей.ПолучитьМакет("Макет");
	
	ПостроительОтчета = Новый ПостроительОтчета();
	ПостроительОтчета.Параметры.Вставить("Дата",               ПараметрыОтчета.Дата);
	ПостроительОтчета.Параметры.Вставить("Организация",        ПараметрыОтчета.Организация);
	
	// Необязательные для заполнения поля.
	ПостроительОтчета.Параметры.Вставить("СудебноеСоглашение", ПараметрыОтчета.СудебноеСоглашение);
	ПостроительОтчета.Параметры.Вставить("ЛицевойСчет",        ПараметрыОтчета.ЛицевойСчет);
	
	ПостроительОтчета.Текст = ПолучитьТекстЗапроса(ПараметрыОтчета.Организация, ПараметрыОтчета.ЛицевойСчет, ПараметрыОтчета.СудебноеСоглашение);
	
	ПостроительОтчета.Выполнить();
	
	ДеревоПлатежей = ПостроительОтчета.Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ОбластьСтрокаЗдания           = Макет.ПолучитьОбласть("СтрокаЗдания");
	ОбластьОписаниеСоглашения     = Макет.ПолучитьОбласть("ОписаниеСоглашения");
	ОбластьСтрокаГрафикаПогашения = Макет.ПолучитьОбласть("СтрокаГрафикаПогашения");
	
	ОбластьЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовокОтчета.Параметры.Заголовок = ПолучитьТекстЗаголовокОтчета(ПараметрыОтчета.Организация, ПараметрыОтчета.Дата, Истина);
	ДокументРезультат.Вывести(ОбластьЗаголовокОтчета);
	
	ОбластьШапкаОтчета = Макет.ПолучитьОбласть("ШапкаОтчета");
	ДокументРезультат.Вывести(ОбластьШапкаОтчета);
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	
	Для каждого ТекЗдание Из ДеревоПлатежей.Строки Цикл
		
		ОбластьСтрокаЗдания.Параметры.Здание               = ТекЗдание.Здание;
		ОбластьСтрокаЗдания.Параметры.КоличествоСоглашений = ТекЗдание.ЛицевойСчет;
		
		ДокументРезультат.Вывести(ОбластьСтрокаЗдания, 0);
		
		Для каждого ТекЛицевойСчет Из ТекЗдание.Строки Цикл
			
			ПервыйПроход = Истина;
			Для Каждого СтрокаЛС ИЗ ТекЛицевойСчет.Строки Цикл
				
				Если ПервыйПроход Тогда
					ТекстОписанияСоглашения = "Лицевой счет №" + ПодготовитьНомерЛСДляВывода(СтрокаЛС.ЛицевойСчет) + ", " + СокрЛП(СтрокаЛС.ОтветственныйСобственник) + Символы.ПС
											+ "Судебное соглашение №" + СокрЛП(СтрокаЛС.НомерДокумента) + " от " + Формат(СтрокаЛС.ДатаДокумента, "ДФ=dd.MM.yyyy")
											+ ?(ПараметрыОтчета.Организация.Пустая(), " с организацией " + СокрЛП(СтрокаЛС.Организация), "");
					
					ОбластьОписаниеСоглашения.Параметры.ОписаниеСоглашения = ТекстОписанияСоглашения;
					
					ДокументРезультат.Вывести(ОбластьОписаниеСоглашения, 1);
					
					ПервыйПроход = Ложь;
				КонецЕсли;
				
				ОбластьСтрокаГрафикаПогашения.Параметры.Заполнить(СтрокаЛС);
				ОбластьСтрокаГрафикаПогашения.Параметры.Дата = Формат(СтрокаЛС.Дата, "ДФ='ММММ гггг'");
				ДокументРезультат.Вывести(ОбластьСтрокаГрафикаПогашения, 2);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	
	// Присвоим имя для сохранения параметров печати табличного документа.
	ДокументРезультат.ИмяПараметровПечати = "ОтчетОбИсполненииГрафикаПлатежейКВП";
	
	//УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета(), Строка(глЗначениеПеременной("глТекущийПользователь")));
	ПоместитьВоВременноеХранилище(ДокументРезультат, АдресХранилища);
	
КонецПроцедуры

// Формирует заголовок отчета.
Функция ПолучитьТекстЗаголовокОтчета(Организация, Дата, ДобавитьПереносСтрок = Ложь) Экспорт
	
	ТекстЗаголовка = "Отчет об исполнении графика платежей" + ?(ДобавитьПереносСтрок, Символы.ПС, "")
				   + ?(Организация.Пустая(), " ", " по организации " + Организация + " ")
				   + "на " + Формат(Дата, "ДЛФ=DD");
	
	Возврат ТекстЗаголовка;
	
КонецФункции // ЗаголовокОтчета()

// Формирует текст запроса.
Функция ПолучитьТекстЗапроса(Организация, ЛицевойСчет, СудебноеСоглашение)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КВП_ГрафикиПлатежейПоЛС.Регистратор,
	|	КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет,
	|	МИНИМУМ(КВП_ГрафикиПлатежейПоЛС.ДатаПлатежа) КАК ДатаНачалаПлатежей,
	|	МАКСИМУМ(КВП_ГрафикиПлатежейПоЛС.ДатаПлатежа) КАК ДатаОкончанияПлатежей
	|ПОМЕСТИТЬ втВсеГрафикиПлатежей
	|ИЗ
	|	РегистрСведений.КВП_ГрафикиПлатежейПоЛС КАК КВП_ГрафикиПлатежейПоЛС";
	
	Если НЕ Организация.Пустая() Тогда
		ТекстЗапросаОтбор = "ГДЕ" + Символы.ПС
						  + "	КВП_ГрафикиПлатежейПоЛС.Регистратор.Организация = &Организация";
	КонецЕсли;
	
	Если НЕ ЛицевойСчет.Пустая() Тогда
		Если ПустаяСтрока(ТекстЗапросаОтбор) Тогда
			ТекстЗапросаОтбор = "ГДЕ" + Символы.ПС
							  + "	КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет = &ЛицевойСчет";
		Иначе
			ТекстЗапросаОтбор = ТекстЗапросаОтбор + Символы.ПС
							  + "	И КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет = &ЛицевойСчет";
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ СудебноеСоглашение.Пустая() Тогда
		Если ПустаяСтрока(ТекстЗапросаОтбор) Тогда
			ТекстЗапросаОтбор = "ГДЕ" + Символы.ПС
							  + "	КВП_ГрафикиПлатежейПоЛС.Регистратор = &СудебноеСоглашение";
		Иначе
			ТекстЗапросаОтбор = ТекстЗапросаОтбор + Символы.ПС
							  + "	И КВП_ГрафикиПлатежейПоЛС.Регистратор = &СудебноеСоглашение";
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстЗапросаОтбор) Тогда
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + ТекстЗапросаОтбор;
	КонецЕсли;
	
	// ПРИМЕЧАНИЕ:
	// Ранее, данные о фактических сумм оплат текущего лицевого счета по судебному соглашению получались из поля "СуммаПоГрафику"
	// табличной части "Лицевые счета" документа "Регистрация оплаты". Данное поле автоматически никак не заполнялось и
	// по умолчанию было скрыто для пользователей, поэтому и его заполнение практически не происходило.
	// В связи с этим механизмы, где есть обращение о получении сумм фактических оплат из документа "Регистрация оплаты",
	// отрабатываются некорректно. Суммы всегда будут равны нулю.
	//
	// Механизм в данный момент имеет кучу недостатков. Нормально, полноценно не работает. Если уж приводить в нормальный вид – это отдельный здоровый проект.
	// Поэтому на данный момент решили сделать следующим образом:
	// - получаем все суммы фактических оплат по текущему лицевому счету из регистра накопления "Начисления"
	// и считаем эти суммы как суммы фактических оплат по судебному соглашению (временная таблица "втФактическаяСуммаОплат" в запросе).
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС +
	"СГРУППИРОВАТЬ ПО
	|	КВП_ГрафикиПлатежейПоЛС.Регистратор,
	|	КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВсеГрафикиПлатежей.Регистратор,
	|	втВсеГрафикиПлатежей.ЛицевойСчет
	|ПОМЕСТИТЬ втДействующиеГрафикиПлатежей
	|ИЗ
	|	втВсеГрафикиПлатежей КАК втВсеГрафикиПлатежей
	|ГДЕ
	|	втВсеГрафикиПлатежей.ДатаНачалаПлатежей <= &Дата
	|	И втВсеГрафикиПлатежей.ДатаОкончанияПлатежей >= &Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КВП_ГрафикиПлатежейПоЛС.Регистратор.Дата КАК ДатаДокумента,
	|	КВП_ГрафикиПлатежейПоЛС.Регистратор.Номер КАК НомерДокумента,
	|	КВП_ГрафикиПлатежейПоЛС.Регистратор.Организация КАК Организация,
	|	КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет,
	|	КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет.Адрес КАК Помещение,
	|	КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет.Адрес.Владелец КАК Здание,
	|	КВП_ГрафикиПлатежейПоЛС.ДатаПлатежа,
	|	КВП_ГрафикиПлатежейПоЛС.Сумма КАК СуммаПлановая
	|ПОМЕСТИТЬ втДействующиеГрафикиССуммамиПлатежей
	|ИЗ
	|	РегистрСведений.КВП_ГрафикиПлатежейПоЛС КАК КВП_ГрафикиПлатежейПоЛС
	|ГДЕ
	|	(КВП_ГрафикиПлатежейПоЛС.Регистратор, КВП_ГрафикиПлатежейПоЛС.ЛицевойСчет) В
	|			(ВЫБРАТЬ
	|				втДействующиеГрафикиПлатежей.Регистратор,
	|				втДействующиеГрафикиПлатежей.ЛицевойСчет
	|			ИЗ
	|				втДействующиеГрафикиПлатежей КАК втДействующиеГрафикиПлатежей)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет,
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.Наименование КАК ОтветственныйСобственник
	|ПОМЕСТИТЬ втОтветственныеСобственники
	|ИЗ
	|	РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(
	|			&Дата,
	|			ЛицевойСчет В
	|				(ВЫБРАТЬ
	|					втДействующиеГрафикиССуммамиПлатежей.ЛицевойСчет
	|				ИЗ
	|					втДействующиеГрафикиССуммамиПлатежей КАК втДействующиеГрафикиССуммамиПлатежей)) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДействующиеГрафикиССуммамиПлатежей.ДатаДокумента,
	|	втДействующиеГрафикиССуммамиПлатежей.НомерДокумента,
	|	втДействующиеГрафикиССуммамиПлатежей.Организация,
	|	втДействующиеГрафикиССуммамиПлатежей.ЛицевойСчет,
	|	втДействующиеГрафикиССуммамиПлатежей.Помещение,
	|	втДействующиеГрафикиССуммамиПлатежей.Здание,
	|	втДействующиеГрафикиССуммамиПлатежей.ДатаПлатежа,
	|	втДействующиеГрафикиССуммамиПлатежей.СуммаПлановая,
	|	ЕСТЬNULL(втОтветственныеСобственники.ОтветственныйСобственник, """") КАК ОтветственныйСобственник
	|ПОМЕСТИТЬ втДействующиеГрафикиСОтветственнымиСобственниками
	|ИЗ
	|	втДействующиеГрафикиССуммамиПлатежей КАК втДействующиеГрафикиССуммамиПлатежей
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОтветственныеСобственники КАК втОтветственныеСобственники
	|		ПО втДействующиеГрафикиССуммамиПлатежей.ЛицевойСчет = втОтветственныеСобственники.ЛицевойСчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УПЖКХ_Начисления.ЛицевойСчет,
	|	СУММА(-УПЖКХ_Начисления.СуммаНачисления) КАК СуммаФактическая,
	|	НАЧАЛОПЕРИОДА(УПЖКХ_Начисления.Период, МЕСЯЦ) КАК ДатаОплаты,
	|	УПЖКХ_Начисления.Организация
	|ПОМЕСТИТЬ втФактическаяСуммаОплат
	|ИЗ
	|	РегистрНакопления.УПЖКХ_Начисления КАК УПЖКХ_Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеГрафикиПлатежей КАК втВсеГрафикиПлатежей
	|		ПО УПЖКХ_Начисления.ЛицевойСчет = втВсеГрафикиПлатежей.ЛицевойСчет
	|ГДЕ
	|	УПЖКХ_Начисления.ЛицевойСчет В
	|			(ВЫБРАТЬ
	|				втДействующиеГрафикиСОтветственнымиСобственниками.ЛицевойСчет
	|			ИЗ
	|				втДействующиеГрафикиСОтветственнымиСобственниками КАК втДействующиеГрафикиСОтветственнымиСобственниками)
	|	И УПЖКХ_Начисления.Период МЕЖДУ НАЧАЛОПЕРИОДА(втВсеГрафикиПлатежей.ДатаНачалаПлатежей, МЕСЯЦ) И КОНЕЦПЕРИОДА(КОНЕЦПЕРИОДА(втВсеГрафикиПлатежей.ДатаОкончанияПлатежей, МЕСЯЦ), ДЕНЬ)
	|	И УПЖКХ_Начисления.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_Начисления.ЛицевойСчет,
	|	НАЧАЛОПЕРИОДА(УПЖКХ_Начисления.Период, МЕСЯЦ),
	|	УПЖКХ_Начисления.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДействующиеГрафикиСОтветственнымиСобственниками.ДатаДокумента,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.НомерДокумента,
	|	ПРЕДСТАВЛЕНИЕ(втДействующиеГрафикиСОтветственнымиСобственниками.Организация) КАК Организация,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.ЛицевойСчет.Наименование КАК ЛицевойСчет,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.Здание КАК Здание,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.ОтветственныйСобственник,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.ДатаПлатежа КАК Дата,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.СуммаПлановая,
	|	ЕСТЬNULL(втФактическаяСуммаОплат.СуммаФактическая, 0) КАК СуммаФактическая
	|ИЗ
	|	втДействующиеГрафикиСОтветственнымиСобственниками КАК втДействующиеГрафикиСОтветственнымиСобственниками
	|		ЛЕВОЕ СОЕДИНЕНИЕ втФактическаяСуммаОплат КАК втФактическаяСуммаОплат
	|		ПО втДействующиеГрафикиСОтветственнымиСобственниками.ЛицевойСчет = втФактическаяСуммаОплат.ЛицевойСчет
	|			И втДействующиеГрафикиСОтветственнымиСобственниками.ДатаПлатежа = втФактическаяСуммаОплат.ДатаОплаты
	|			И втДействующиеГрафикиСОтветственнымиСобственниками.Организация = втФактическаяСуммаОплат.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	втДействующиеГрафикиСОтветственнымиСобственниками.Здание.Наименование,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.Помещение.ВидПомещения,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.Помещение.Код,
	|	втДействующиеГрафикиСОтветственнымиСобственниками.Помещение.Суффикс
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицевойСчет)
	|ПО
	|	Здание,
	|	ЛицевойСчет";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапроса()

// Убирает из наименования лицевого счета не цифровые символы.
// 
Функция ПодготовитьНомерЛСДляВывода(ЛицевойСчет)
	
	НаименованиеЛС = СокрЛП(ЛицевойСчет);
	СтрокаДляВозврата = "";
	Пока СтрДлина(НаименованиеЛС) > 0 Цикл
		
		СимволЛС = Лев(НаименованиеЛС, 1);
		Если КодСимвола(СимволЛС) > 47 И КодСимвола(СимволЛС) < 58 Тогда
			СтрокаДляВозврата = СтрокаДляВозврата + СимволЛС;
		КонецЕсли;
		
		НаименованиеЛС = Прав(НаименованиеЛС, СтрДлина(НаименованиеЛС) - 1);
	КонецЦикла;
	
	Возврат СтрокаДляВозврата;
	
КонецФункции // ПодготовитьНомерЛСДляВывода()

#КонецОбласти

#КонецЕсли