#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеФормаР24001.Форма.Форма2014_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2014_1";
	Стр.ОписаниеФормы = "В редакции от 25.01.2012 приказ ФНС России № ММВ-7-6/25@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ПечатьСразу_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьМакет_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы) Экспорт
	Если Объект.ИмяФормы = "Форма2014_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы);
	КонецЕсли;
КонецФункции

Функция ДанныеУведомления(ЭкземплярУведомления) Экспорт
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("СпособРегистрации", "");
	СтруктураДанных.Вставить("ОсновнойКодОКВЭД", "");
	СтруктураДанных.Вставить("ПрежнийОсновнойКодОКВЭД", "");
	
	Если ЭкземплярУведомления.ИмяФормы = "Форма2014_1" Тогда
		
		ДанныеУведомления = ЭкземплярУведомления.ДанныеУведомления.Получить();
		
		Если ТипЗнч(ДанныеУведомления) <> Тип("Структура") Тогда
			Возврат СтруктураДанных;
		КонецЕсли;
		
		Если ДанныеУведомления.ДанныеУведомления.Свойство("ЛистЖ") Тогда
			
			КодСпособаРегистрации = "Ж01010000";
			
			ЛистЖ = ДанныеУведомления.ДанныеУведомления.ЛистЖ;
			
			СпособРегистрации = Неопределено;
			Если ЛистЖ.Свойство(КодСпособаРегистрации, СпособРегистрации) Тогда
				СтруктураДанных.Вставить("СпособРегистрации", СпособРегистрации);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеУведомления.ДанныеУведомления.Свойство("ЛистЕ1") Тогда
			
			КодОсновнойКодОКВЭД = "А01010000";
			
			ЛистЕ = ДанныеУведомления.ДанныеУведомления.ЛистЕ1;
			
			Если ЛистЕ.Свойство(КодОсновнойКодОКВЭД) Тогда
				СтруктураДанных.Вставить("ОсновнойКодОКВЭД", ЛистЕ[КодОсновнойКодОКВЭД]);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеУведомления.ДанныеУведомления.Свойство("ЛистЕ2") Тогда
			
			КодОсновнойКодОКВЭД = "А01010000";
			
			ЛистЕ = ДанныеУведомления.ДанныеУведомления.ЛистЕ2;
			
			Если ЛистЕ.Свойство(КодОсновнойКодОКВЭД) Тогда
				СтруктураДанных.Вставить("ПрежнийОсновнойКодОКВЭД", ЛистЕ[КодОсновнойКодОКВЭД]);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеУведомления.Свойство("МногострочнаяЧасть1") Тогда
			КодыОКВЭД = Новый Массив;
			Для Каждого СтрокаОКВЭД Из ДанныеУведомления.МногострочнаяЧасть1 Цикл
				КодыОКВЭД.Добавить(СтрокаОКВЭД["А01020000"]);
			КонецЦикла;
			СтруктураДанных.Вставить("ДобавленныеКодыОКВЭД", СтрСоединить(КодыОКВЭД, ";"));
		КонецЕсли;
		
		Если ДанныеУведомления.Свойство("МногострочнаяЧасть2") Тогда
			КодыОКВЭД = Новый Массив;
			Для Каждого СтрокаОКВЭД Из ДанныеУведомления.МногострочнаяЧасть2 Цикл
				КодыОКВЭД.Добавить(СтрокаОКВЭД["А01020000"]);
			КонецЦикла;
			СтруктураДанных.Вставить("УдаленныеКодыОКВЭД", СтрСоединить(КодыОКВЭД, ";"));
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы) Экспорт
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР24001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
		
		Если Стр.ИДНаименования = "ЛистЕ1" Или Стр.ИДНаименования = "ЛистЕ2" Тогда 
			Если Стр.ИДНаименования = "ЛистЕ1" Тогда 
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть1;
			Иначе
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть2;
			КонецЕсли;
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
			
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
				И Не УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда 
				Продолжить;
			КонецЕсли;
			
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000, "А01010000", МакетПФ.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
			ВсегоНапечатаноСтрок = 1;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда 
					Продолжить;
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+ВсегоНапечатаноСтрок, МакетПФ.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
				Если ВсегоНапечатаноСтрок = 57 Тогда
					ПечатнаяФорма.Вывести(МакетПФ);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					
					ВсегоНапечатаноСтрок = 1;
					НомСтр = НомСтр + 1;
					МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР24001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
				КонецЕсли;
			КонецЦикла;
			
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		Иначе 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
			
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда 
				НомСтр = НомСтр + 1;
				Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
					Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
						Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(КЗ.Ключ) Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
						Иначе 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области);
						КонецЕсли;
					ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
						УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
					КонецЕсли;
				КонецЦикла;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
				ПечатнаяФорма.Вывести(МакетПФ);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьМакет_Форма2014_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразу_Форма2014_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2014_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(СведенияОтправки)
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда 
		ДатаФормированияФайла = Формат(Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)), Число(Сред(СведенияОтправки.ДатаДок, 4, 2)), Число(Лев(СведенияОтправки.ДатаДок, 2))), "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R24001_0000_0000_000000000000000_" + ДатаФормированияФайла + "_" + Строка(Новый УникальныйИдентификатор);
	Возврат Префикс;
КонецФункции

Процедура Проверить_Форма2014_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	Если ЗначениеЗаполнено(Данные.ДанныеУведомления.ЛистГ.П01050100) И ЗначениеЗаполнено(Данные.ДанныеУведомления.ЛистГ.П01050100) Тогда 
		ОсновныеСведения.Вставить("КодПодр", "" + Данные.ДанныеУведомления.ЛистГ.П01050100 + "-" + Данные.ДанныеУведомления.ЛистГ.П01050200);
	Иначе
		ОсновныеСведения.Вставить("КодПодр", "");
	КонецЕсли; 
	
	Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2014_1");
	ЗаполнитьДанными_Форма2014_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2014_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(Объект.ДанныеУведомления.Получить(), ДеревоВыгрузки);
КонецПроцедуры

Функция СформироватьДеревоСтраниц_Форма2014_1()
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 001";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист А";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница2";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Б";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница3";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист В";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница4";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Г";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница5";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Д";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница6";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Е-1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница7";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ1";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть1");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Е-2";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница8";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ2";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть2");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Ж";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница9";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЖ";
	
	Возврат ДеревоСтраниц;
КонецФункции

Функция СформироватьДеревоСтраниц(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда 
		Возврат СформироватьДеревоСтраниц_Форма2014_1();
	КонецЕсли;
КонецФункции

Функция СформироватьКонтейнерДляАвтозаполнения(ДанныеУведомления, МногострочнаяЧасть1, МногострочнаяЧасть2)
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ДанныеУведомления Цикл 
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Контейнер.Вставить("МногострочнаяЧасть1", МногострочнаяЧасть1);
	Контейнер.Вставить("МногострочнаяЧасть2", МногострочнаяЧасть2);
	
	УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(ДанныеУведомления);
	
	Возврат Контейнер;
КонецФункции

Функция СоздатьЗаполненноеУведомление(Параметры, СуществующийДокументСсылка = Неопределено) Экспорт
	ИмяФормы = Неопределено;
	Если Не Параметры.Свойство("ИмяФормы", ИмяФормы) Тогда 
		ИмяФормы = "Форма2014_1";
	КонецЕсли;
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	ИмяОтчета = "РегламентированноеУведомлениеФормаР24001";
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	РезультатКонтейнер2 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииСКонтейнеромМногострочныхБлоков(ВходящийКонтейнер, РезультатКонтейнер2);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			     Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения",          Параметры.ДополнительныеПараметры);
	
	Контейнер = СформироватьКонтейнерДляАвтозаполнения(РезультатКонтейнер1.ДанныеУведомления
														,РезультатКонтейнер2.МногострочнаяЧасть1
														,РезультатКонтейнер2.МногострочнаяЧасть2);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево);
	
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
		И СуществующийДокументСсылка.Свойство("Ссылка")
		И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда 
		
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
		И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ИмяФормы = ИмяФормы;
		НовыйДок.ИмяОтчета = ИмяОтчета;
		НовыйДок.Дата = ТекущаяДатаСеанса();
		НовыйДок.ДатаПодписи = ТекущаяДатаСеанса();
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР24001;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ДанныеУведомления, ДеревоСтраниц, МногострочнаяЧасть1, МногострочнаяЧасть2",
			РезультатКонтейнер1.ДанныеУведомления, Дерево, РезультатКонтейнер2["МногострочнаяЧасть1"], РезультатКонтейнер2["МногострочнаяЧасть2"]);
			
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
КонецФункции

Процедура ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево)
	КУдалению = Новый Массив;
	
	Для Каждого КЗ Из Контейнер Цикл 
		Если РезультатКонтейнер1.ДанныеУведомления.Свойство(КЗ.Ключ) Тогда 
			ЗаполнитьЗначенияСвойств(РезультатКонтейнер1.ДанныеУведомления[КЗ.Ключ], КЗ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	РезультатКонтейнер2.МногострочнаяЧасть1 = Контейнер.МногострочнаяЧасть1;
	РезультатКонтейнер2.МногострочнаяЧасть2 = Контейнер.МногострочнаяЧасть2;
КонецПроцедуры

Процедура СохранитьДанныеПомощника(Уведомление, ДанныеПомощникаЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(Уведомление) Тогда
		Возврат;
	КонецЕсли;
	
	УведомлениеОбъект = Уведомление.ПолучитьОбъект();
	ДанныеУведомления = УведомлениеОбъект.ДанныеУведомления.Получить();
	Если ТипЗнч(ДанныеУведомления) = Тип("Структура") Тогда
		ДанныеУведомления.Вставить("ДанныеПомощникаЗаполнения", ДанныеПомощникаЗаполнения);
	КонецЕсли;
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
	Попытка
		УведомлениеОбъект.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
#КонецЕсли