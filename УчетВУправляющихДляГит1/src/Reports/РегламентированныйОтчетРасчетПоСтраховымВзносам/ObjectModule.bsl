#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Переменные

Перем мПолноеИмяФайлаВнешнейОбработки Экспорт;

Перем мВерсияОтчета Экспорт;

#Область ПеременныеКонтрольныхСоотношений

Перем СчетчикФормулДляРасшифровок;

Перем СписокРасшифровкиПоказателей;

Перем СписокРасшифровкиформулы;

Перем мДанныеОтчета, мДанныеОтчетаПРП, мДанныеОтчетаПРП1, мДанныеОтчетаПРП2;

Перем КэшКодовТарифов, КэшСтавокТарифов;

Перем СтруктураРеквизитовФормы;

Перем ПараметрыКС;

Перем УчитыватьКорректировки;

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеРегламентированногоОтчета

Функция СформироватьАвтоматическиРеглОтчет(ПараметрыАвтоформирования, КорректирующийОтчет) Экспорт
	
	ИмяФормы = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	ПодготовленныйРеглОтчет = ПодготовленныйРеглОтчет(ИмяФормы, ПараметрыАвтоформирования, КорректирующийОтчет);
	
	РазделыОтчета       = ПодготовленныйРеглОтчет.РазделыОтчета;
	ДанныеРеглОтчета    = ПодготовленныйРеглОтчет.ДанныеРеглОтчета;
	ДеревоСтраницОтчета = ПодготовленныйРеглОтчет.ДеревоСтраницОтчета;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ИсточникОтчета", ПараметрыАвтоформирования.ИсточникОтчета);
	ПараметрыЗаписи.Вставить("ИмяФормыОтчета", ПараметрыАвтоформирования.ИмяФормыОтчета);
	ПараметрыЗаписи.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыЗаписи.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыЗаписи.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыЗаписи.Вставить("СохраняемыйРеглОтчет", ПараметрыАвтоформирования.СсылкаНаСохрРеглОтчет);
	ПараметрыЗаписи.Вставить("Ошибки", ПараметрыАвтоформирования.Ошибки);
	ПараметрыЗаписи.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	ПараметрыЗаписи.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ПараметрыЗаписи.Вставить("ТочностьЕдиницыИзмерения", 0);
	ПараметрыЗаписи.Вставить("Комментарий", "");
	ПараметрыЗаписи.Вставить("КодИФНС", РазделыОтчета.Титульный.НалоговыйОрган);
	ПараметрыЗаписи.Вставить("КПП", РазделыОтчета.Титульный.КПП);
	ПараметрыЗаписи.Вставить("СтруктураМногоуровневыхРазделов", ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов);
	ПараметрыЗаписи.Вставить("СтруктураРеквизитовФормы", ДанныеРеглОтчета.СтруктураРеквизитовФормы);
	ПараметрыЗаписи.Вставить("ВерсияФормы", ДанныеРеглОтчета.СтруктураРеквизитовФормы.мВерсияФормы);
	ПараметрыЗаписи.Вставить("ФлОтклВыборЗначений", Ложь);
	ПараметрыЗаписи.Вставить("Автозаполнение", Ложь);
	ПараметрыЗаписи.Вставить("ПечатьБезШтрихкодаРазрешена", Неопределено);
	ПараметрыЗаписи.Вставить("ФлПодсчетСтраниц", Неопределено);
	ПараметрыЗаписи.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	ПараметрыЗаписи.Вставить("Вариант", ?(КорректирующийОтчет, 1, 0));
	ПараметрыЗаписи.Вставить("РазделыОтчета", РазделыОтчета);
	ПараметрыЗаписи.Вставить("НаименованиеОтчета", ДанныеРеглОтчета.СтруктураРеквизитовФормы.НаименованиеОтчета);
	
	Возврат ЗаписатьРеглОтчет(ИмяФормы, ПараметрыЗаписи);
	
КонецФункции

Функция ПодготовленныйРеглОтчет(ИмяФормы, ПараметрыАвтоформирования, КорректирующийОтчет)
	
	РазделыОтчета = РазделыРеглОтчета(ИмяФормы);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	ПараметрыАвтоФормирования.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	
	ЗаполнитьРеглОтчет(ИмяФормы,
					   ПараметрыАвтоформирования,
					   КорректирующийОтчет,
					   РазделыОтчета,
					   ДанныеРеглОтчета);
		
	РазделыОтчета.Титульный.НомерКорректировки = ПараметрыАвтоФормирования.НомерКорректировки;
	
	Если НЕ ПараметрыАвтоформирования.Свойство("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати") Тогда
		
		РазделыОтчета.Титульный.КПП            = ПараметрыАвтоформирования.Организация.КПП;
		РазделыОтчета.Титульный.НалоговыйОрган = ПараметрыАвтоформирования.Организация.КодНалоговогоОргана;
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Период =
		Формат(ДанныеРеглОтчета.СтруктураРеквизитовФормы.КодОтчетногоПериода["НеЗаполненКодФормыРеорганизации_"
			   + Месяц(ПараметрыАвтоформирования.ДатаОкончания)],
			   "ЧЦ=2; ЧВН=");
	РазделыОтчета.Титульный.ОтчетГод    = Формат(ПараметрыАвтоформирования.ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.ВидДокумента = ?(КорректирующийОтчет, 1, 0);
		
	ЗаполнитьСведенияОбОрганизации(ИмяФормы,
								   ДанныеРеглОтчета.СтруктураРеквизитовФормы,
								   ДанныеРеглОтчета.ДатаПодписи,
								   РазделыОтчета.Титульный,
								   РазделыОтчета.ФизЛицо);
	
	ДеревоСтраницОтчета = СтруктураСтраницОтчета(ИмяФормы);
	
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ИзменитьНастройкиРазделов(ИмяФормы, РазделыОтчета, ДанныеРеглОтчета);
	
	ПодготовленныйРеглОтчет = Новый Структура;
	ПодготовленныйРеглОтчет.Вставить("РазделыОтчета",       РазделыОтчета);
	ПодготовленныйРеглОтчет.Вставить("ДанныеРеглОтчета",    ДанныеРеглОтчета);
	ПодготовленныйРеглОтчет.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ПодготовленныйРеглОтчет;
	
КонецФункции

Процедура СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("мВерсияФормы", "01/01/" + Лев(Прав(СокрЛП(ИмяФормы), 7), 4));
	СтруктураРеквизитовФормы.Вставить("НаименованиеОтчета", "Расчет по страховым взносам");
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);
	СтруктураРеквизитовФормы.Вставить("НачальноеЗначениеНаимОрганизации", "");
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуЗаполнить", Ложь);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуРасшифровать", Ложь);
	СтруктураРеквизитовФормы.Вставить("АвтозаполняемыеПоказатели", Новый Структура);
	СтруктураРеквизитовФормы.Вставить("ОКВЭД", "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("мАвтоВыборКодов");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы");
	СтруктураРеквизитовФормы.Вставить("мЗаписываетсяНовыйДокумент");
	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов", Новый СписокЗначений);
	СтруктураРеквизитовФормы.Вставить("мПечатныеформы", Новый СписокЗначений);
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы11131М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы11132М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1114М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы18М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы19М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы110М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы110М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы21М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы321М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы322М1");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГруппы");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГрафы");
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения");
	СтруктураРеквизитовФормы.Вставить("ВидДокумента");
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитовФормы.Вставить("мВариант");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мПечатьБезШтрихкодаРазрешена");
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("ИП");
	СтруктураРеквизитовФормы.Вставить("НаимОрганизации");
	СтруктураРеквизитовФормы.Вставить("СтрПериодОтчета");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");
	СтруктураРеквизитовФормы.Вставить("НомераСтрокМногоуровнегоРаздела");
	СтруктураРеквизитовФормы.Вставить("СтруктураМногострочныхЧастей");
	СтруктураРеквизитовФормы.Вставить("ИдентификаторЗадания");
	СтруктураРеквизитовФормы.Вставить("АдресВоВременномХранилище");
	СтруктураРеквизитовФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417");
	СтруктураРеквизитовФормы.Вставить("СправочникиВидыКонтактнойИнформацииФактАдресОрганизации");
	СтруктураРеквизитовФормы.Вставить("ТекстДляЗаголовочнойЧасти");
	СтруктураРеквизитовФормы.Вставить("СформироватьФормуОтчетаАвтоматически");
	СтруктураРеквизитовФормы.Вставить("КодОтчетногоПериода");
	
КонецПроцедуры

Процедура ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	// Идентификаторы многострочных групп.
	СтруктураРеквизитовФормы.мИдГруппы1М1     = "П00001М1";
	СтруктураРеквизитовФормы.мИдГруппы1М2     = "П00001М2";
	СтруктураРеквизитовФормы.мИдГруппы11131М1 = "П11131М1";
	СтруктураРеквизитовФормы.мИдГруппы11132М1 = "П11132М1";
	СтруктураРеквизитовФормы.мИдГруппы1114М1  = "П01114М1";
	СтруктураРеквизитовФормы.мИдГруппы18М1    = "П00018М1";
	СтруктураРеквизитовФормы.мИдГруппы19М1    = "П00019М1";
	СтруктураРеквизитовФормы.мИдГруппы110М1   = "П00110М1";
	СтруктураРеквизитовФормы.мИдГруппы110М2   = "П00110М2";
	СтруктураРеквизитовФормы.мИдГруппы21М1    = "П00021М1";
	СтруктураРеквизитовФормы.мИдГруппы321М1   = "П00321М1";
	СтруктураРеквизитовФормы.мИдГруппы322М1   = "П00322М1";
	
	// Свойства, общие для всех многострочных групп.
	СтруктураРеквизитовФормы.ДлинаИмениГруппы = 8;
	СтруктураРеквизитовФормы.ДлинаИмениГрафы  = 13;
	
	// Структура с описанием свойств каждой группы в отдельности.
	СтруктураМногострочныхЧастей = Новый Структура;
	
	// Группа П00001М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00001М106001");
	ИменаГраф.Добавить("П00001М107001");
	ИменаГраф.Добавить("П00001М107101");
	ИменаГраф.Добавить("П00001М107201");
	ИменаГраф.Добавить("П00001М107301");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00001М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00001М208001");
	ИменаГраф.Добавить("П00001М209001");
	ИменаГраф.Добавить("П00001М209101");
	ИменаГраф.Добавить("П00001М209201");
	ИменаГраф.Добавить("П00001М209301");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П11131М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П11131М100101");
	Для НомСтр = 1 По 5 Цикл
		Для НомКол = 1 По 5 Цикл
			ИменаГраф.Добавить("П11131М10" + НомСтр + "00" + НомКол);
		КонецЦикла;
	КонецЦикла;
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы11131М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П11132М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П11132М100101");
	ИменаГраф.Добавить("П11132М100201");
	ИменаГраф.Добавить("П11132М100301");
	Для НомСтр = 1 По 5 Цикл
		Для НомКол = 1 По 5 Цикл
			ИменаГраф.Добавить("П11132М10" + НомСтр + "00" + НомКол);
		КонецЦикла;
	КонецЦикла;
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы11132М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П01114М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П01114М100101");
	Для НомСтр = 1 По 5 Цикл
		Для НомКол = 1 По 5 Цикл
			ИменаГраф.Добавить("П01114М10" + НомСтр + "00" + НомКол);
		КонецЦикла;
	КонецЦикла;
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1114М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00018М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00018М102001");
	ИменаГраф.Добавить("П00018М103001");
	ИменаГраф.Добавить("П00018М104001");
	ИменаГраф.Добавить("П00018М105001");
	ИменаГраф.Добавить("П00018М106001");
	ИменаГраф.Добавить("П00018М106002");
	ИменаГраф.Добавить("П00018М106003");
	ИменаГраф.Добавить("П00018М106004");
	ИменаГраф.Добавить("П00018М106005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы18М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00019М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00019М102001");
	ИменаГраф.Добавить("П00019М103001");
	ИменаГраф.Добавить("П00019М104001");
	ИменаГраф.Добавить("П00019М105001");
	ИменаГраф.Добавить("П00019М106001");
	ИменаГраф.Добавить("П00019М107001");
	ИменаГраф.Добавить("П00019М107002");
	ИменаГраф.Добавить("П00019М108001");
	ИменаГраф.Добавить("П00019М108002");
	ИменаГраф.Добавить("П00019М108003");
	ИменаГраф.Добавить("П00019М108004");
	ИменаГраф.Добавить("П00019М108005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы19М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00110М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00110М102001");
	ИменаГраф.Добавить("П00110М103001");
	ИменаГраф.Добавить("П00110М104001");
	ИменаГраф.Добавить("П00110М105001");
	ИменаГраф.Добавить("П00110М106001");
	ИменаГраф.Добавить("П00110М107001");
	ИменаГраф.Добавить("П00110М108001");
	ИменаГраф.Добавить("П00110М109001");
	ИменаГраф.Добавить("П00110М110001");
	ИменаГраф.Добавить("П00110М110002");
	ИменаГраф.Добавить("П00110М110003");
	ИменаГраф.Добавить("П00110М110004");
	ИменаГраф.Добавить("П00110М110005");
	ИменаПодчиненныхГрупп = Новый Массив;
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппы110М2);
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы110М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00110М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00110М211001");
	ИменаГраф.Добавить("П00110М212001");
	ИменаГраф.Добавить("П00110М213001");
	ИменаГраф.Добавить("П00110М214001");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы110М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00021М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00021М101001");
	ИменаГраф.Добавить("П00021М102001");
	ИменаГраф.Добавить("П00021М103001");
	ИменаГраф.Добавить("П00021М104001");
	ИменаГраф.Добавить("П00021М105001");
	ИменаГраф.Добавить("П00021М106001");
	ИменаГраф.Добавить("П00021М107001");
	ИменаГраф.Добавить("П00021М108001");
	ИменаГраф.Добавить("П00021М109001");
	ИменаГраф.Добавить("П00021М109002");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы21М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00321М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00321М119001");
	ИменаГраф.Добавить("П00321М120001");
	ИменаГраф.Добавить("П00321М121001");
	ИменаГраф.Добавить("П00321М122001");
	ИменаГраф.Добавить("П00321М123001");
	ИменаГраф.Добавить("П00321М124001");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы321М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00322М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00322М126001");
	ИменаГраф.Добавить("П00322М127001");
	ИменаГраф.Добавить("П00322М128001");
	ИменаГраф.Добавить("П00322М129001");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы322М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей = СтруктураМногострочныхЧастей;
	
КонецПроцедуры

Процедура ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
												СтруктураРеквизитовФормы,
												СтруктураМногоуровневыхРазделов) Экспорт
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = Новый Массив;
	
	// Формирование структуры свойств многоуровневых разделов.
	//
	СтруктураМногоуровневыхРазделов = Новый Структура;
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М2);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаПодчиненныхРазделов = Новый Массив;
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_1и1_2");
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_1");
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_2");
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_4");
	СтруктураРаздела.Вставить("ИменаПодчиненныхРазделов", ИменаПодчиненныхРазделов);
	СтруктураРаздела.Вставить("Многостраничность");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подразделы 1.1, 1.2");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_1и1_2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11131М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.1");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11132М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.2");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1114М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.4");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_4", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил3", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил4", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил5_6", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил7", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы18М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил8", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы19М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил9", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы110М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил10", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы21М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураМногоуровневыхРазделов.Вставить("Раздел2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы321М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы322М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("Многостраничность");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел3", СтруктураРаздела);
	
	// Формирование начальной структуры дерева разделов
	// с заполнением каждого уровня пустыми данными.
	//
	ДеревоДанных = Новый ДеревоЗначений;
	ДеревоДанных.Колонки.Добавить("Данные");
	ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для каждого Элем Из СтруктураМногоуровневыхРазделов Цикл
		Если Элем.Значение.Свойство("Подчиненность") Тогда
			Продолжить;
		КонецЕсли;
		
		ДеревоДанныхРаздела = ДеревоДанных.Скопировать();
		ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + Элем.Ключ));
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
														Элем.Ключ,
														СтруктураМногоуровневыхРазделов,
														ТабличныйДокумент,
														СтруктураРеквизитовФормы);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		ИнициализироватьПодчиненныеРазделы(ИмяФормы,
										   Элем.Ключ,
										   ТекВетка,
										   СтруктураМногоуровневыхРазделов,
										   ТабличныйДокумент,
										   СтруктураРеквизитовФормы);
		
		// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
		Если Элем.Ключ = "Раздел1Прил10" Тогда
			МнЧ_П00110М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
			МнЧ_П00110М1.Строки[0].Данные.Вставить("П00110М102001", "001");
			МнЧ_П00110М2 = МнЧ_П00110М1.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			МнЧ_П00110М2.Строки[0].Данные.Вставить("П00110М211001", "001");
		КонецЕсли;
		
		СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + Элем.Ключ,
			ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, Новый УникальныйИдентификатор()));
	КонецЦикла;
		
КонецПроцедуры

Функция ДанныеТабличногоДокумента(ИмяФормы,
								  НаимРаздела,
								  СтруктураМногоуровневыхРазделов,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы) Экспорт
	
	ДанныеТаблДокумента = Новый Структура;
	
	// Многоуровневые разделы.
	//
	Если СтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		СтруктураРаздела = СтруктураМногоуровневыхРазделов[НаимРаздела];
		
		ИменаГруппМнЧ = Неопределено;
		СтруктураРаздела.Свойство("ИменаГруппМнЧ", ИменаГруппМнЧ);
		РазделСодержитМнЧ = (ИменаГруппМнЧ <> Неопределено);
		
		СтруктураДанных = Новый Структура();
		Для Каждого ТекущаяОбласть Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(ТекущаяОбласть), "Рисунок") = 0
				И ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекущаяОбласть.СодержитЗначение = Истина Тогда
				Если РазделСодержитМнЧ Тогда
					Если РегламентированнаяОтчетностьКлиентСервер.МногострочнаяЧастьТекущейОбласти(СтруктураРеквизитовФормы,
																					ТекущаяОбласть.Имя) = Неопределено Тогда
						СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
					КонецЕсли;
				Иначе
					СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДанныеТаблДокумента.Вставить("Данные", СтруктураДанных);
		
		СтруктураДанныхМногострочныхЧастей = Новый Структура;
		Если РазделСодержитМнЧ Тогда
			Для каждого ИмяГруппыМнЧ Из СтруктураРаздела["ИменаГруппМнЧ"] Цикл
				ЭлемСтруктуры = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
				Если ЭлемСтруктуры["УровеньПодчинения"] = 0 Тогда
					ДеревоДанных = Новый ДеревоЗначений;
					ДеревоДанных.Колонки.Добавить("Данные");
					ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
					СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
						ИмяФормы, СтруктураРеквизитовФормы, ТабличныйДокумент, ИмяГруппыМнЧ, ДеревоДанных);
					СтруктураДанныхМногострочныхЧастей.Вставить(ИмяГруппыМнЧ, ДеревоДанных);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ДанныеТаблДокумента.Вставить("ДанныеМногострочныхЧастей", СтруктураДанныхМногострочныхЧастей);
		
	// Обычные разделы.
	//
	Иначе
		
		Для Инд = 0 По ТабличныйДокумент.Области.Количество() - 1 Цикл
			
			ТекОбласть = ТабличныйДокумент.Области[Инд];
			
			Если СтрЧислоВхождений(Тип(ТекОбласть), "Рисунок") = 0
				И ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекОбласть.СодержитЗначение = Истина Тогда
				
				ДанныеТаблДокумента.Вставить(ТекОбласть.Имя, ТекОбласть.Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеТаблДокумента;
	
КонецФункции

Процедура ИнициализироватьПодчиненныеРазделы(ИмяФормы,
											 Знач ИмяРаздела,
											 Ветка,
											 СтруктураМногоуровневыхРазделов,
											 ТабличныйДокумент,
											 СтруктураРеквизитовФормы) Экспорт
	
	Если СтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
		
		ИменаПодчРазделов = СтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
		Для каждого ИмяПодчРаздела Из ИменаПодчРазделов Цикл
			ПодчВетка = Ветка.Строки.Добавить().Строки.Добавить();
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ИмяПодчРаздела));
			
			ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
															ИмяПодчРаздела,
															СтруктураМногоуровневыхРазделов,
															ТабличныйДокумент,
															СтруктураРеквизитовФормы);
									
			ПодчВетка.Данные = ДанныеТаблДокумента.Данные;
			ПодчВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
			
			ИнициализироватьПодчиненныеРазделы(ИмяФормы,
											   ИмяПодчРаздела,
											   ПодчВетка,
											   СтруктураМногоуровневыхРазделов,
											   ТабличныйДокумент,
											   СтруктураРеквизитовФормы);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьОбычныеРазделы(ИмяФормы,
 										 СтруктураРеквизитовФормы,
							 			 СтруктураМногоуровневыхРазделов,
								 		 СтруктураДанныхРазделов,
										 МассивИменРазделов = Неопределено) Экспорт
	
	Если МассивИменРазделов = Неопределено Тогда
		
		МассивИменРазделов = Новый Массив;
		МассивИменРазделов.Добавить("Титульный");
		МассивИменРазделов.Добавить("ФизЛицо");
		
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для Каждого ИмяРаздела Из МассивИменРазделов Цикл
				
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ИмяРаздела));
		
		СохранитьДанныеРаздела(ИмяФормы,
							   СтруктураРеквизитовФормы,
							   СтруктураМногоуровневыхРазделов,
							   СтруктураДанныхРазделов,
							   ТабличныйДокумент,
							   ИмяРаздела);
		
	КонецЦикла;
			
КонецПроцедуры

Процедура СохранитьДанныеРаздела(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 СтруктураДанныхРазделов,
								 ТабличныйДокумент,
								 НаимРаздела,
								 ВеткаРаздела = Неопределено) Экспорт
	
	// Многоуровневые разделы.
	Если СтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		Если ВеткаРаздела = Неопределено Тогда
			
			СтруктураРаздела = СтруктураМногоуровневыхРазделов[НаимРаздела];
			
			ИмяГлРаздела = Неопределено;
			СтруктураРаздела.Свойство("ИмяГлавногоРаздела", ИмяГлРаздела);
			ИмяГлРаздела = ?(ИмяГлРаздела = Неопределено, НаимРаздела, ИмяГлРаздела);
			
			ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
			
			ТекВетка = ДеревоДанныхРаздела;
			
			Для Каждого НомерСтроки Из СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела Цикл
				ТекВетка = ТекВетка.Строки[НомерСтроки - 1];
			КонецЦикла;
			
		Иначе
			
			ТекВетка = ВеткаРаздела;
			
		КонецЕсли;
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
														НаимРаздела,
														СтруктураМногоуровневыхРазделов,
														ТабличныйДокумент,
														СтруктураРеквизитовФормы);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела,
			ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, Новый УникальныйИдентификатор()));
		
		ДеревоДанныхРаздела = Неопределено;
		
	// Обычные разделы.
	Иначе
		
		СтруктураДанныхРазделов["СтруктураДанных" + НаимРаздела]
			= ДанныеТабличногоДокумента(ИмяФормы,
										НаимРаздела,
		 						  		СтруктураМногоуровневыхРазделов,
										ТабличныйДокумент,
										СтруктураРеквизитовФормы);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтруктураСтраницОтчета(ИмяФормы) Экспорт
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));	
		
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "ФизЛицо";
	СтрокаУровня1.Представление      = "Сведения о физическом лице";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 0;
	СтрокаУровня1.ПоказатьСтраницу   = 0;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил1";
	СтрокаУровня1.Представление      = "Приложение 1 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил2";
	СтрокаУровня1.Представление      = "Приложение 2 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил3";
	СтрокаУровня1.Представление      = "Приложение 3 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил4";
	СтрокаУровня1.Представление      = "Приложение 4 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил5_6";
	СтрокаУровня1.Представление      = "Приложения 5, 6 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил7";
	СтрокаУровня1.Представление      = "Приложение 7 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил8";
	СтрокаУровня1.Представление      = "Приложение 8 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил9";
	СтрокаУровня1.Представление      = "Приложение 9 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил10";
	СтрокаУровня1.Представление      = "Приложение 10 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	Возврат ДеревоСтраницОтчета;
	
КонецФункции

Функция СтруктураДанныхРазделов(ИмяФормы) Экспорт
	
	СтруктураДанныхРазделов = Новый Структура;
	
	СтруктураДанныхРазделов.Вставить("СтруктураДанныхТитульный", Новый Структура);
	СтруктураДанныхРазделов.Вставить("СтруктураДанныхФизЛицо", Новый Структура);
	
	Возврат СтруктураДанныхРазделов;
	
КонецФункции	

Процедура ЗаполнитьЗначенияПоУмолчанию(ИмяФормы,
									   СтруктураРеквизитовФормы,
									   СтруктураДанныхРазделов) Экспорт
			
	Если СтруктураРеквизитовФормы.ИП Тогда
		СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "120";
	Иначе
		СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "214";
	КонецЕсли;
	
	ДеревоПрил1Раздела1 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	ДеревоПрил1Раздела1.Строки[0].Данные.Вставить("П000110000101", "01");
	ПоместитьВоВременноеХранилище(ДеревоПрил1Раздела1,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	
	ДеревоПрил2Раздела1 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
	ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120000101", "2");
	ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009001", "1");
	ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009003", "1");
	ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009005", "1");
	ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009007", "1");
	ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009009", "1");
	ПоместитьВоВременноеХранилище(ДеревоПрил2Раздела1,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
	
КонецПроцедуры

Процедура ЗаполнитьКодОтчетногоПериода(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода = Новый Структура;
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_3",  51);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_6",  52);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_9",  53);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_12", 90);
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_3",  21);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_6",  31);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_9",  33);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_12", 34);
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_3",  83);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_6",  84);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_9",  85);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_12", 34);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизации(ИмяФормы,
										 СтруктураРеквизитовФормы,
										 ДатаПодписи,
										 СтруктураДанныхТитульный,
										 СтруктураДанныхФизЛицо,
										 ВПрограммеИзмененаДатаПодписи = Ложь) Экспорт
	
	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
	
		СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, НаимНО, ТипНП, ТелОрганизации, ФИО, ОКВЭД";
		
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
									СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		ИНН = СокрЛП(СведенияОбОрганизации.ИННЮЛ);
		КПП = СокрЛП(СведенияОбОрганизации.КППЮЛ);
		
		КодНО = СведенияОбОрганизации.КодНО;
		Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
			КодНО = " " + КодНО;
		КонецЦикла;
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			НаименованиеОрганизации = СведенияОбОрганизации.ФИО;
		Иначе
			НаименованиеОрганизации = СведенияОбОрганизации.НаимЮлПол;
		КонецЕсли;
		
		Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
			
			СтруктураДанныхТитульный.Области.ИНН.Значение = ИНН;
			СтруктураДанныхТитульный.Области.КПП.Значение = КПП;
			
			СтруктураДанныхТитульный.Области.НалоговыйОрган.Значение = КодНО;
			
			СтруктураДанныхТитульный.Области.НаимОрг.Значение = СокрЛП(НаименованиеОрганизации);
		
			СтруктураДанныхТитульный.Области.ТелОрганизации.Значение = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
			
			СтруктураДанныхТитульный.Области.ДатаПодписи.Значение = ДатаПодписи;
			
			ПоМесту = СокрЛП(СтруктураДанныхТитульный.Области.ПоМесту.Значение);
			
		ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
			
			СтруктураДанныхТитульный.ИНН = ИНН;
			СтруктураДанныхТитульный.КПП = КПП;
			
			СтруктураДанныхТитульный.НалоговыйОрган = КодНО;
			
			СтруктураДанныхТитульный.НаимОрг = СокрЛП(НаименованиеОрганизации);
		
			СтруктураДанныхТитульный.ТелОрганизации = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
			
			СтруктураДанныхТитульный.ДатаПодписи = ДатаПодписи;
			
			ПоМесту = СокрЛП(СтруктураДанныхТитульный.ПоМесту);
			
		КонецЕсли;
		
		СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации = СокрЛП(НаименованиеОрганизации);
				
		СсылкаНаРегистрациюВНО = РеквизитЭлементаСправочника(ИмяФормы,
								 	СтруктураРеквизитовФормы.Организация);
		УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(ИмяФормы,
																	  СсылкаНаРегистрациюВНО,
																	  СтруктураРеквизитовФормы,
																	  ПоМесту);
		
	КонецЕсли;
	
	Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
		
		ИНН = СтруктураДанныхТитульный.Области.ИНН.Значение;
				
	ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
		
		ИНН = СтруктураДанныхТитульный.ИНН;
				
	КонецЕсли;	
	
	Если СтруктураРеквизитовФормы.ИП
	   И НЕ ЗначениеЗаполнено(ИНН) Тогда
		
		СтрокаСведений = "ДатаРожд, МестоРожд, Гражд, КодУдЛичн, ОрганВыданУдЛичн, СерияУдЛичн, НомерУдЛичн, ДатаУдЛичн,
			|ИндексМЖ, КодСубъектМЖ, РайонМЖ, ГородМЖ, НПунктМЖ, УлицаМЖ, ДомМЖ, КорпусМЖ, КвартираМЖ";
		
		СведенияОФизЛице = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
								СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		Если СведенияОФизЛице.Свойство("ДатаРожд") Тогда
			СтруктураДанныхФизЛицо.ДатаРождения
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДатаРожд), СведенияОФизЛице.ДатаРожд, '00010101');
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("МестоРожд") Тогда
			СтруктураДанныхФизЛицо.МестоРождения
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.МестоРожд), СокрЛП(СведенияОФизЛице.МестоРожд), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("Гражд") Тогда
			СтруктураДанныхФизЛицо.КодСтраныГражданства
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.Гражд), СокрЛП(СведенияОФизЛице.Гражд), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("КодУдЛичн") Тогда
			СтруктураДанныхФизЛицо.КодВидаДокумента
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КодУдЛичн), СокрЛП(СведенияОФизЛице.КодУдЛичн), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("СерияУдЛичн") И СведенияОФизЛице.Свойство("НомерУдЛичн") Тогда
			СерУдЛичн = ?(ЗначениеЗаполнено(СведенияОФизЛице.СерияУдЛичн), СокрЛП(СведенияОФизЛице.СерияУдЛичн), "");
			НомУдЛичн = ?(ЗначениеЗаполнено(СведенияОФизЛице.НомерУдЛичн), СокрЛП(СведенияОФизЛице.НомерУдЛичн), "");
			СтруктураДанныхФизЛицо.СерияДокумента = СерУдЛичн;
			СтруктураДанныхФизЛицо.НомерДокумента = НомУдЛичн;
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("ОрганВыданУдЛичн") Тогда
			СтруктураДанныхФизЛицо.КемВыданДокумент
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ОрганВыданУдЛичн), СокрЛП(СведенияОФизЛице.ОрганВыданУдЛичн), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("ДатаУдЛичн") Тогда
			СтруктураДанныхФизЛицо.ДатаВыдачи
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДатаУдЛичн), СведенияОФизЛице.ДатаУдЛичн, '00010101');
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("ИндексМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресИндекс
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ИндексМЖ), СокрЛП(СведенияОФизЛице.ИндексМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("КодСубъектМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресКодРегиона
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КодСубъектМЖ), СокрЛП(СведенияОФизЛице.КодСубъектМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("РайонМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресРайон
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.РайонМЖ), СокрЛП(СведенияОФизЛице.РайонМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("ГородМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресГород
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ГородМЖ), СокрЛП(СведенияОФизЛице.ГородМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("НПунктМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНаселенныйПункт
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.НПунктМЖ), СокрЛП(СведенияОФизЛице.НПунктМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("УлицаМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресУлица
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.УлицаМЖ), СокрЛП(СведенияОФизЛице.УлицаМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("ДомМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНомерДома
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДомМЖ), СокрЛП(СведенияОФизЛице.ДомМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("КорпусМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНомерКорпуса
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КорпусМЖ), СокрЛП(СведенияОФизЛице.КорпусМЖ), "");
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("КвартираМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНомерКвартиры
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КвартираМЖ), СокрЛП(СведенияОФизЛице.КвартираМЖ), "");
		КонецЕсли;
		
	ИначеЕсли НЕ СтруктураРеквизитовФормы.ИП Тогда
		
		СтруктураДанныхФизЛицо.ДатаРождения = '00010101';
		СтруктураДанныхФизЛицо.МестоРождения = "";
		СтруктураДанныхФизЛицо.КодСтраныГражданства = "";
		СтруктураДанныхФизЛицо.КодВидаДокумента = "";
		СтруктураДанныхФизЛицо.СерияДокумента = "";
		СтруктураДанныхФизЛицо.НомерДокумента = "";
		СтруктураДанныхФизЛицо.КемВыданДокумент = "";
		СтруктураДанныхФизЛицо.ДатаВыдачи = '00010101';
		СтруктураДанныхФизЛицо.АдресИндекс = "";
		СтруктураДанныхФизЛицо.АдресКодРегиона = "";
		СтруктураДанныхФизЛицо.АдресРайон = "";
		СтруктураДанныхФизЛицо.АдресГород = "";
		СтруктураДанныхФизЛицо.АдресНаселенныйПункт = "";
		СтруктураДанныхФизЛицо.АдресУлица = "";
		СтруктураДанныхФизЛицо.АдресНомерДома = "";
		СтруктураДанныхФизЛицо.АдресНомерКорпуса = "";
		СтруктураДанныхФизЛицо.АдресНомерКвартиры = "";
		
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
								?(ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент"),
								 			  СтруктураДанныхТитульный.Области.ОКВЭД.Значение,
											  				   СтруктураДанныхТитульный.ОКВЭД));
	
	ЗаполнитьСведенияОПодписантах(ИмяФормы,
								  СтруктураРеквизитовФормы,
								  СтруктураДанныхТитульный,
								  ДатаПодписи);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОПодписантах(ИмяФормы,
										СтруктураРеквизитовФормы,
										СтруктураДанныхТитульный,
										ДатаПодписи) Экспорт
	
	ТипПодписанта = "1";
	Подписант = "";
	НаименованиеОрганизацииПредставителя = "";
	ДокументПредставителя = "";
			
	Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
		
		КодНО = СокрЛП(СтруктураДанныхТитульный.Области.НалоговыйОрган.Значение);
		КПП   = СокрЛП(СтруктураДанныхТитульный.Области.КПП.Значение);
		
	ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
		
		КодНО = СокрЛП(СтруктураДанныхТитульный.НалоговыйОрган);
		КПП   = СокрЛП(СтруктураДанныхТитульный.КПП);
		
	КонецЕсли;	

	СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
								СтруктураРеквизитовФормы.Организация, КодНО, КПП);
	
	ТипПодписанта = СведенияОПредставителе.ТипПодписанта;
	
	Если ТипПодписанта = "1" Тогда
		// Представителя нет.
		Если РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация) Тогда
			// Подписант - руководитель.
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
										СтруктураРеквизитовФормы.Организация, ДатаПодписи, "ФИОРук, ФИО");
			Подписант = СокрЛП(?(ЗначениеЗаполнено(СведенияОбОрганизации.ФИОРук), СведенияОбОрганизации.ФИОРук,
																				  СведенияОбОрганизации.ФИО));	
		КонецЕсли;
	Иначе
		// Подписант - представитель.
	    Подписант 							 = СведенияОПредставителе.ФИОПредставителя;
 		НаименованиеОрганизацииПредставителя = СведенияОПредставителе.НаименованиеОрганизацииПредставителя;
		ДокументПредставителя 				 = СведенияОПредставителе.ДокументПредставителя;
	КонецЕсли;
	
	Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
		
		СтруктураДанныхТитульный.Области.ПрПодп.Значение       = ТипПодписанта;
		СтруктураДанныхТитульный.Области.ОргПодписант.Значение = Подписант;
		СтруктураДанныхТитульный.Области.ОргУп.Значение        = НаименованиеОрганизацииПредставителя;
		СтруктураДанныхТитульный.Области.ДокУпПред.Значение    = ДокументПредставителя;
		
	ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
		
		СтруктураДанныхТитульный.ПрПодп       = ТипПодписанта;
		СтруктураДанныхТитульный.ОргПодписант = Подписант;
		СтруктураДанныхТитульный.ОргУп        = НаименованиеОрганизацииПредставителя;
		СтруктураДанныхТитульный.ДокУпПред    = ДокументПредставителя;
		
	КонецЕсли;
			
КонецПроцедуры

Функция РеквизитЭлементаСправочника(ИмяФормы, Ссылка) Экспорт
	
	Если Ссылка.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане") <> Неопределено Тогда
		Возврат Ссылка.РегистрацияВНалоговомОргане;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция РазделыРеглОтчета(ИмяФормы) Экспорт
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура);
	РазделыОтчета.Вставить("ФизЛицо",   Новый Структура);
	РазделыОтчета.Вставить("ДанныеМногоуровневыхРазделов", Новый Структура);
	
	Возврат РазделыОтчета;
	
КонецФункции

Функция ЗаписатьДокумент(ИмяФормы, ПараметрыЗаписи) Экспорт
	
	ДокументРегламентированныйОтчет = ПараметрыЗаписи.СохраняемыйРеглОтчет;
				
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ПараметрыЗаписи.ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = ПараметрыЗаписи.НаименованиеОтчета;
	ДокументРегламентированныйОтчет.ДатаНачала               = ПараметрыЗаписи.ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ПараметрыЗаписи.ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ПараметрыЗаписи.ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = ПараметрыЗаписи.Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ПараметрыЗаписи.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ПараметрыЗаписи.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ПараметрыЗаписи.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ПараметрыЗаписи.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ПараметрыЗаписи.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ПараметрыЗаписи.КПП;
	ДокументРегламентированныйОтчет.Вид                      = ПараметрыЗаписи.Вариант;
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.
															   ПредставлениеВидаДокумента(
															   ДокументРегламентированныйОтчет.Вид);
		
	ПоказателиОтчета = Новый Структура;
	ПоказателиОтчета.Вставить("ПолеТабличногоДокументаТитульный", ПараметрыЗаписи.РазделыОтчета.Титульный);
	ПоказателиОтчета.Вставить("ПолеТабличногоДокументаФизЛицо",   ПараметрыЗаписи.РазделыОтчета.ФизЛицо);
	
	СписокСохранения = Новый Структура;
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	// Вставляем данные многоуровневых разделов.
	ДанныеМногоуровневыхРазделов = Новый Структура;
	Для Каждого Элем Из ПараметрыЗаписи.СтруктураМногоуровневыхРазделов Цикл
		СтруктураРаздела = Элем.Значение;
		Если НЕ СтруктураРаздела.Свойство("Подчиненность") Тогда
			ДанныеМногоуровневыхРазделов.Вставить(Элем.Ключ, ПолучитьИзВременногоХранилища(
				ПараметрыЗаписи.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Элем.Ключ]));
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
		
	СписокСохранения.Вставить("ВерсияФормы",                 ПараметрыЗаписи.ВерсияФормы);
	СписокСохранения.Вставить("ФлОтклВыборЗначений",         ПараметрыЗаписи.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("Автозаполнение",              ПараметрыЗаписи.Автозаполнение);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена", ПараметрыЗаписи.ПечатьБезШтрихкодаРазрешена);
	СписокСохранения.Вставить("ФлПодсчетСтраниц", 			 ПараметрыЗаписи.ФлПодсчетСтраниц);
		
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(
												 ПараметрыЗаписи.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		ДокументРегламентированныйОтчет.Разблокировать();
						
	Исключение
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи, ТекстСообщения);
		
		ДокументРегламентированныйОтчет.Разблокировать();
		
		Возврат Ложь;
		
	КонецПопытки;
			
	Возврат Истина;
	
КонецФункции

Процедура УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(ИмяФормы,
																		СсылкаНаРегистрациюВНО,
																		СтруктураРеквизитовФормы,
																		ПоМесту) Экспорт
	
	Если СсылкаНаРегистрациюВНО <> Неопределено Тогда
		ОКТМО = СсылкаНаРегистрациюВНО.КодПоОКТМО;
	Иначе
		ОКТМО = "";
	КонецЕсли;
	
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010001001", ОКТМО);
	
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010002001", "18210202010061010160");
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010004001", "18210202101081013160");
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010010001", "18210202090071010160");
	
	ПоместитьВоВременноеХранилище(ДеревоРаздела,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	Если ПоМесту = "124" ИЛИ ПоМесту = "240" Тогда
		
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел2"]);
		
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020001001", ОКТМО);
		
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020002001", "18210202140061110160");
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020004001", "18210202103081013160");
		
		ПоместитьВоВременноеХранилище(ДеревоРаздела,
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел2"]);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьМногоуровневыйРаздел(ИмяФормы,
											   СтруктураРеквизитовФормы,
											   СтруктураМногоуровневыхРазделов,
											   ИмяРаздела) Экспорт
	
	УдалитьИзВременногоХранилища(
	 СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	ДеревоДанныхРаздела = Новый ДеревоЗначений;
	ДеревоДанныхРаздела.Колонки.Добавить("Данные");
	ДеревоДанныхРаздела.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
		
	ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
			
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ИмяРаздела));
	
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
													ИмяРаздела,
													СтруктураМногоуровневыхРазделов,
													ТабличныйДокумент,
													СтруктураРеквизитовФормы);
	
	ТекВетка.Данные = ДанныеТаблДокумента.Данные;
	ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	ИнициализироватьПодчиненныеРазделы(ИмяФормы,
									   ИмяРаздела,
									   ТекВетка,
									   СтруктураМногоуровневыхРазделов,
			 						   ТабличныйДокумент,
									   СтруктураРеквизитовФормы);
	
	// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
	Если ИмяРаздела = "Раздел1Прил10" Тогда
		МнЧ_П00110М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
		МнЧ_П00110М1.Строки[0].Данные.Вставить("П00110М102001", "001");
		МнЧ_П00110М2 = МнЧ_П00110М1.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
		МнЧ_П00110М2.Строки[0].Данные.Вставить("П00110М211001", "001");
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ИмяРаздела,
	ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, Новый УникальныйИдентификатор()));
			
КонецПроцедуры

Процедура СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(ИмяФормы,
																		  СтруктураРеквизитовФормы,
																		  ТабличныйДокумент,
																		  ИмяГруппы,
																		  ДеревоДанных,
																		  Координаты = "")
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат;
	КонецЕсли;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + Координаты
		 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число))
		 <> Неопределено Цикл
		НовВетка = ДеревоДанных.Строки.Добавить();
		
		// Заполнение данными из текущей строки многострочной части.
		Данные = Новый Структура;
		Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число);
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			Обл = ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты + Инд);
			Если Обл <> Неопределено Тогда
				Данные.Вставить(ИмяГрафы, Обл.Значение);
			КонецЕсли;
		КонецЦикла;
		НовВетка.Данные = Данные;
		
		// Заполнение данными из строк многострочных частей, подчиненных текущей строке многострочной части.
		ДанныеМногострочныхЧастей = Новый Структура;
		ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
			ДеревоПодчСтрок = Новый ДеревоЗначений;
			ДеревоПодчСтрок.Колонки.Добавить("Данные");
			ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ПодчКоординаты = Координаты + Инд;
			СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
			 ИмяФормы, СтруктураРеквизитовФормы, ТабличныйДокумент, ИмяПодчГруппы, ДеревоПодчСтрок, ПодчКоординаты);
			ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
		КонецЦикла;
		НовВетка.ДанныеМногострочныхЧастей = ДанныеМногострочныхЧастей;
		
		Инд_Число = Инд_Число + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчет(ИмяФормы,
							 ПараметрыАвтоформирования,
							 КорректирующийОтчет,
							 РазделыОтчета,
							 ДанныеРеглОтчета)
		
	ИсточникОтчета = ПараметрыАвтоформирования.ИсточникОтчета;
	ИмяФормыОтчета = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	Организация = ПараметрыАвтоформирования.Организация;
			
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ДопПараметры.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
		
	ДанныеРеглОтчета.Вставить("СтруктураРеквизитовФормы");
	ДанныеРеглОтчета.Вставить("СтруктураМногоуровневыхРазделов");
	
	СтруктураДанныхРазделов = СтруктураДанныхРазделов(ИмяФормы);
		
	СформироватьСтруктуруРеквизитовФормы(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы);
	
	ЗаполнитьКодОтчетногоПериода(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы);
	
	ИнициализироватьМногострочныеЧасти(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы);
			
	ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
										  ДанныеРеглОтчета.СтруктураРеквизитовФормы,
										  ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов);
	
	ИнициализироватьОбычныеРазделы(ИмяФормы,
								   ДанныеРеглОтчета.СтруктураРеквизитовФормы,
								   ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов,
								   СтруктураДанныхРазделов);
														  
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.Организация = ПараметрыАвтоформирования.Организация;
													  
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(
								  							ДанныеРеглОтчета.СтруктураРеквизитовФормы.Организация);
															
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета = ПараметрыАвтоформирования.ДатаОкончания;
													  
	ЗаполнитьЗначенияПоУмолчанию(ИмяФормы,
								 ДанныеРеглОтчета.СтруктураРеквизитовФормы,
								 СтруктураДанныхРазделов);
														  
	РазделыОтчета.Титульный = СтруктураДанныхРазделов.СтруктураДанныхТитульный;
	РазделыОтчета.ФизЛицо   = СтруктураДанныхРазделов.СтруктураДанныхФизЛицо;													  
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор;
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.АдресВоВременномХранилище =
		ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация",             ПараметрыАвтоформирования.Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыОтчета.Вставить("НомерКорректировки",      ПараметрыАвтоформирования.НомерКорректировки);
	ПараметрыОтчета.Вставить("ДатаПодписи",             ПараметрыАвтоформирования.ДатаПодписи);
	ПараметрыОтчета.Вставить("АдресВоВременномХранилище",
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	Если ПараметрыАвтоформирования.Свойство("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати")
		И ПараметрыАвтоформирования.Свойство("МассивФизическихЛиц") Тогда
		
		ПараметрыОтчета.Вставить("ФормированиеПерсонифицированныхСведенийОЗастрахованныхЛицах", Истина);
		ПараметрыОтчета.Вставить("МассивФизическихЛиц", ПараметрыАвтоформирования.МассивФизическихЛиц);
		
	КонецЕсли;
	
	Контейнер = Новый Структура;
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный);
	Контейнер.Вставить("ФизЛицо",   РазделыОтчета.ФизЛицо);
	
	Для Каждого Раздел Из ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов Цикл
		
		Если НЕ Раздел.Значение.Свойство("Подчиненность") Тогда
			
			Контейнер.Вставить(Раздел.Ключ, ПолучитьИзВременногоХранилища(
			    ДанныеРеглОтчета.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Раздел.Ключ]));
									
			Если Раздел.Ключ = "Раздел3" Тогда
				
				Если ПараметрыАвтоформирования.Свойство("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати") Тогда
					
					Контейнер[Раздел.Ключ].Строки[0].Данные.Вставить("ФизическоеЛицо", Неопределено);
					
				КонецЕсли;
				
				Если НЕ ДанныеРеглОтчета.СтруктураРеквизитовФормы.АвтозаполняемыеПоказатели.Свойство("П000030004001") Тогда
					
					// Очистка строки 040 раздела 3 в случае, если она не заполняется потребителем.
					ДеревоРаздела = Контейнер["Раздел3"];
					
					Для Инд = 0 По ДеревоРаздела.Строки.Количество() - 1 Цикл
						
						ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", "");
						
					КонецЦикла;
					
				Конецесли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
			
	Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
	   И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
		
		ЗаполнитьРеглОтчетВнешнимиДанными(ИмяФормы,
										  Контейнер,
										  ПараметрыАвтоформирования.ВнешниеДанные);
										  
  	Иначе
										  
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета,
																	ИмяФормыОтчета,
																	ПараметрыОтчета,
																	Контейнер);
																		
		РассчитатьИтоги(ИмяФормы,
						Контейнер,
						ДанныеРеглОтчета.СтруктураРеквизитовФормы,
						ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов);
					
	КонецЕсли;
			
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетВнешнимиДанными(ИмяФормы, Приемник, Источник)
	
	 // Код тарифа плательщика.
	 Приемник.Раздел1Прил1.Строки[0].Данные.П000110000101 = Источник.Раздел1Прил1.КодТарифаПлательщика;
	
КонецПроцедуры

Процедура РассчитатьИтоги(ИмяФормы, Контейнер, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		ИмяРаздела = "Раздел1";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
		СтруктураГруппыМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1];
		ИменаГрафМнЧ1 = СтруктураГруппыМнЧ1["ИменаГраф"];
		
		ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
		СтруктураГруппыМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2];
		ИменаГрафМнЧ2 = СтруктураГруппыМнЧ2["ИменаГраф"];
		
		Для каждого ВеткаР1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1.Данные.Вставить("П000010003001"
				, ВеткаР1.Данные["П000010003101"]
				+ ВеткаР1.Данные["П000010003201"]
				+ ВеткаР1.Данные["П000010003301"]);
			
			ВеткаР1.Данные.Вставить("П000010005001"
				, ВеткаР1.Данные["П000010005101"]
				+ ВеткаР1.Данные["П000010005201"]
				+ ВеткаР1.Данные["П000010005301"]);
			
			// Многострочная часть 060-073.
			ДеревоМнЧ1 = ВеткаР1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
			Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М107001"
					, СтрокаМнЧ.Данные["П00001М107101"]
					+ СтрокаМнЧ.Данные["П00001М107201"]
					+ СтрокаМнЧ.Данные["П00001М107301"]);
			КонецЦикла;
			
			// Многострочная часть 080-093.
			ДеревоМнЧ2 = ВеткаР1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
			Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М209001"
					, СтрокаМнЧ.Данные["П00001М209101"]
					+ СтрокаМнЧ.Данные["П00001М209201"]
					+ СтрокаМнЧ.Данные["П00001М209301"]);
			КонецЦикла;
			
			ПромежуточнаяСумма
				= ВеткаР1.Данные["П000010011101"]
				+ ВеткаР1.Данные["П000010011201"]
				+ ВеткаР1.Данные["П000010011301"]
				- ВеткаР1.Данные["П000010012101"]
				- ВеткаР1.Данные["П000010012201"]
				- ВеткаР1.Данные["П000010012301"];
			ВеткаР1.Данные.Вставить("П000010011001", Макс(ПромежуточнаяСумма, 0));
			ВеткаР1.Данные.Вставить("П000010012001", - Мин(ПромежуточнаяСумма, 0));
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИмяРаздела = "Раздел1Прил1Подр1_1и1_2";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
		
		ВеткаР1Пр1Подр11_12 = ВеткаР1Пр1.Строки[0].Строки[0];
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110003002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110003004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110003005"]);
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110004002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110004003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110004004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110004005"]);
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110003001", ВеткаР1Пр1Подр11_12.Данные["П011110003002"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110004001", ВеткаР1Пр1Подр11_12.Данные["П011110004002"]);
			
		КонецЕсли;
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005001",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003001"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004001"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003002"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004002"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005003",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003003"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004003"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005004",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003004"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004004"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005005",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003005"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004005"]);
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005102",
			  ВеткаР1Пр1Подр11_12.Данные["П011110005103"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110005104"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110005105"]);
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006102",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006103"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006104"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006105"]);
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006202",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006203"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006204"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006205"]);
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006101", ВеткаР1Пр1Подр11_12.Данные["П011110006102"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006201", ВеткаР1Пр1Подр11_12.Данные["П011110006202"]);
			
		КонецЕсли;
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006001",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006101"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006201"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006102"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006202"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006003",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006103"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006203"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006004",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006104"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006204"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006005",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006105"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006205"]);
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120003002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120003004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120003005"]);
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120004002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120004003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120004004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120004005"]);
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120003001", ВеткаР1Пр1Подр11_12.Данные["П011120003002"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120004001", ВеткаР1Пр1Подр11_12.Данные["П011120004002"]);
			
		КонецЕсли;
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005001",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003001"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004001"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003002"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004002"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005003",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003003"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004003"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005004",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003004"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004004"]);
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005005",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003005"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004005"]);
		
		ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120006002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120006003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120006004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120006005"]);
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005101", ВеткаР1Пр1Подр11_12.Данные["П011110005102"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120006001", ВеткаР1Пр1Подр11_12.Данные["П011120006002"]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил1Подр1_3_1";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы11131М1;
	СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
	ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
	
	Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
		
		ВеткаР1Пр1Подр131 = ВеткаР1Пр1.Строки[1].Строки[0];
		
		ДеревоМнЧ = ВеткаР1Пр1Подр131.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			
			СтрокаМнЧ.Данные.Вставить("П11131М102002", СтрокаМнЧ.Данные["П11131М102003"]
				+ СтрокаМнЧ.Данные["П11131М102004"] + СтрокаМнЧ.Данные["П11131М102005"]);
			
			СтрокаМнЧ.Данные.Вставить("П11131М103002", СтрокаМнЧ.Данные["П11131М103003"]
				+ СтрокаМнЧ.Данные["П11131М103004"] + СтрокаМнЧ.Данные["П11131М103005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				СтрокаМнЧ.Данные.Вставить("П11131М102001", СтрокаМнЧ.Данные["П11131М102002"]);
				СтрокаМнЧ.Данные.Вставить("П11131М103001", СтрокаМнЧ.Данные["П11131М103002"]);
				
			КонецЕсли;
			
			СтрокаМнЧ.Данные.Вставить("П11131М104001",
			СтрокаМнЧ.Данные["П11131М102001"] - СтрокаМнЧ.Данные["П11131М103001"]);
			СтрокаМнЧ.Данные.Вставить("П11131М104002",
			СтрокаМнЧ.Данные["П11131М102002"] - СтрокаМнЧ.Данные["П11131М103002"]);
			СтрокаМнЧ.Данные.Вставить("П11131М104003",
			СтрокаМнЧ.Данные["П11131М102003"] - СтрокаМнЧ.Данные["П11131М103003"]);
			СтрокаМнЧ.Данные.Вставить("П11131М104004",
			СтрокаМнЧ.Данные["П11131М102004"] - СтрокаМнЧ.Данные["П11131М103004"]);
			СтрокаМнЧ.Данные.Вставить("П11131М104005",
			СтрокаМнЧ.Данные["П11131М102005"] - СтрокаМнЧ.Данные["П11131М103005"]);
			
			СтрокаМнЧ.Данные.Вставить("П11131М105002", СтрокаМнЧ.Данные["П11131М105003"]
				+ СтрокаМнЧ.Данные["П11131М105004"] + СтрокаМнЧ.Данные["П11131М105005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				СтрокаМнЧ.Данные.Вставить("П11131М105001", СтрокаМнЧ.Данные["П11131М105002"]);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил1Подр1_3_2";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы11132М1;
	СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
	ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
	
	Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
		
		ВеткаР1Пр1Подр132 = ВеткаР1Пр1.Строки[2].Строки[0];
		
		ДеревоМнЧ = ВеткаР1Пр1Подр132.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			
			СтрокаМнЧ.Данные.Вставить("П11132М102002", СтрокаМнЧ.Данные["П11132М102003"]
				+ СтрокаМнЧ.Данные["П11132М102004"] + СтрокаМнЧ.Данные["П11132М102005"]);
			
			СтрокаМнЧ.Данные.Вставить("П11132М103002", СтрокаМнЧ.Данные["П11132М103003"]
				+ СтрокаМнЧ.Данные["П11132М103004"] + СтрокаМнЧ.Данные["П11132М103005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				СтрокаМнЧ.Данные.Вставить("П11132М102001", СтрокаМнЧ.Данные["П11132М102002"]);
				СтрокаМнЧ.Данные.Вставить("П11132М103001", СтрокаМнЧ.Данные["П11132М103002"]);
				
			КонецЕсли;
			
			СтрокаМнЧ.Данные.Вставить("П11132М104001",
			СтрокаМнЧ.Данные["П11132М102001"] - СтрокаМнЧ.Данные["П11132М103001"]);
			СтрокаМнЧ.Данные.Вставить("П11132М104002",
			СтрокаМнЧ.Данные["П11132М102002"] - СтрокаМнЧ.Данные["П11132М103002"]);
			СтрокаМнЧ.Данные.Вставить("П11132М104003",
			СтрокаМнЧ.Данные["П11132М102003"] - СтрокаМнЧ.Данные["П11132М103003"]);
			СтрокаМнЧ.Данные.Вставить("П11132М104004",
			СтрокаМнЧ.Данные["П11132М102004"] - СтрокаМнЧ.Данные["П11132М103004"]);
			СтрокаМнЧ.Данные.Вставить("П11132М104005",
			СтрокаМнЧ.Данные["П11132М102005"] - СтрокаМнЧ.Данные["П11132М103005"]);
			
			СтрокаМнЧ.Данные.Вставить("П11132М105002", СтрокаМнЧ.Данные["П11132М105003"]
				+ СтрокаМнЧ.Данные["П11132М105004"] + СтрокаМнЧ.Данные["П11132М105005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				СтрокаМнЧ.Данные.Вставить("П11132М105001", СтрокаМнЧ.Данные["П11132М105002"]);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил1Подр1_4";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы1114М1;
	СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
	ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
	
	Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
		
		ВеткаР1Пр1Подр14 = ВеткаР1Пр1.Строки[3].Строки[0];
		
		ДеревоМнЧ = ВеткаР1Пр1Подр14.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			
			СтрокаМнЧ.Данные.Вставить("П01114М102002", СтрокаМнЧ.Данные["П01114М102003"]
				+ СтрокаМнЧ.Данные["П01114М102004"] + СтрокаМнЧ.Данные["П01114М102005"]);
			
			СтрокаМнЧ.Данные.Вставить("П01114М103002", СтрокаМнЧ.Данные["П01114М103003"]
				+ СтрокаМнЧ.Данные["П01114М103004"] + СтрокаМнЧ.Данные["П01114М103005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				СтрокаМнЧ.Данные.Вставить("П01114М102001", СтрокаМнЧ.Данные["П01114М102002"]);
				СтрокаМнЧ.Данные.Вставить("П01114М103001", СтрокаМнЧ.Данные["П01114М103002"]);
				
			КонецЕсли;
			
			СтрокаМнЧ.Данные.Вставить("П01114М104001",
			СтрокаМнЧ.Данные["П01114М102001"] - СтрокаМнЧ.Данные["П01114М103001"]);
			СтрокаМнЧ.Данные.Вставить("П01114М104002",
			СтрокаМнЧ.Данные["П01114М102002"] - СтрокаМнЧ.Данные["П01114М103002"]);
			СтрокаМнЧ.Данные.Вставить("П01114М104003",
			СтрокаМнЧ.Данные["П01114М102003"] - СтрокаМнЧ.Данные["П01114М103003"]);
			СтрокаМнЧ.Данные.Вставить("П01114М104004",
			СтрокаМнЧ.Данные["П01114М102004"] - СтрокаМнЧ.Данные["П01114М103004"]);
			СтрокаМнЧ.Данные.Вставить("П01114М104005",
			СтрокаМнЧ.Данные["П01114М102005"] - СтрокаМнЧ.Данные["П01114М103005"]);
			
			СтрокаМнЧ.Данные.Вставить("П01114М105002", СтрокаМнЧ.Данные["П01114М105003"]
				+ СтрокаМнЧ.Данные["П01114М105004"] + СтрокаМнЧ.Данные["П01114М105005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				СтрокаМнЧ.Данные.Вставить("П01114М105001", СтрокаМнЧ.Данные["П01114М105002"]);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил2";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	Для каждого ВеткаР1Пр2 Из ДеревоДанных.Строки Цикл
		
		ВеткаР1Пр2.Данные.Вставить("П000120002002",
			  ВеткаР1Пр2.Данные["П000120002003"]
			+ ВеткаР1Пр2.Данные["П000120002004"]
			+ ВеткаР1Пр2.Данные["П000120002005"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120003002",
			  ВеткаР1Пр2.Данные["П000120003003"]
			+ ВеткаР1Пр2.Данные["П000120003004"]
			+ ВеткаР1Пр2.Данные["П000120003005"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120004002",
			  ВеткаР1Пр2.Данные["П000120004003"]
			+ ВеткаР1Пр2.Данные["П000120004004"]
			+ ВеткаР1Пр2.Данные["П000120004005"]);
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120002001", ВеткаР1Пр2.Данные["П000120002002"]);
			ВеткаР1Пр2.Данные.Вставить("П000120003001", ВеткаР1Пр2.Данные["П000120003002"]);
			ВеткаР1Пр2.Данные.Вставить("П000120004001", ВеткаР1Пр2.Данные["П000120004002"]);
		КонецЕсли;
		
		ВеткаР1Пр2.Данные.Вставить("П000120005001",
			  ВеткаР1Пр2.Данные["П000120002001"]
			- ВеткаР1Пр2.Данные["П000120003001"]
			- ВеткаР1Пр2.Данные["П000120004001"]);
		ВеткаР1Пр2.Данные.Вставить("П000120005002",
			  ВеткаР1Пр2.Данные["П000120002002"]
			- ВеткаР1Пр2.Данные["П000120003002"]
			- ВеткаР1Пр2.Данные["П000120004002"]);
		ВеткаР1Пр2.Данные.Вставить("П000120005003",
			  ВеткаР1Пр2.Данные["П000120002003"]
			- ВеткаР1Пр2.Данные["П000120003003"]
			- ВеткаР1Пр2.Данные["П000120004003"]);
		ВеткаР1Пр2.Данные.Вставить("П000120005004",
			  ВеткаР1Пр2.Данные["П000120002004"]
			- ВеткаР1Пр2.Данные["П000120003004"]
			- ВеткаР1Пр2.Данные["П000120004004"]);
		ВеткаР1Пр2.Данные.Вставить("П000120005005",
			  ВеткаР1Пр2.Данные["П000120002005"]
			- ВеткаР1Пр2.Данные["П000120003005"]
			- ВеткаР1Пр2.Данные["П000120004005"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120005102",
			  ВеткаР1Пр2.Данные["П000120005103"]
			+ ВеткаР1Пр2.Данные["П000120005104"]
			+ ВеткаР1Пр2.Данные["П000120005105"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120005202",
			  ВеткаР1Пр2.Данные["П000120005203"]
			+ ВеткаР1Пр2.Данные["П000120005204"]
			+ ВеткаР1Пр2.Данные["П000120005205"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120005302",
			  ВеткаР1Пр2.Данные["П000120005303"]
			+ ВеткаР1Пр2.Данные["П000120005304"]
			+ ВеткаР1Пр2.Данные["П000120005305"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120005402",
			  ВеткаР1Пр2.Данные["П000120005403"]
			+ ВеткаР1Пр2.Данные["П000120005404"]
			+ ВеткаР1Пр2.Данные["П000120005405"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120006002",
			  ВеткаР1Пр2.Данные["П000120006003"]
			+ ВеткаР1Пр2.Данные["П000120006004"]
			+ ВеткаР1Пр2.Данные["П000120006005"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120007002",
			  ВеткаР1Пр2.Данные["П000120007003"]
			+ ВеткаР1Пр2.Данные["П000120007004"]
			+ ВеткаР1Пр2.Данные["П000120007005"]);
		
		ВеткаР1Пр2.Данные.Вставить("П000120008002",
			  ВеткаР1Пр2.Данные["П000120008003"]
			+ ВеткаР1Пр2.Данные["П000120008004"]
			+ ВеткаР1Пр2.Данные["П000120008005"]);
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120006001", ВеткаР1Пр2.Данные["П000120006002"]);
			ВеткаР1Пр2.Данные.Вставить("П000120007001", ВеткаР1Пр2.Данные["П000120007002"]);
			ВеткаР1Пр2.Данные.Вставить("П000120008001", ВеткаР1Пр2.Данные["П000120008002"]);
		КонецЕсли;
		
		Сумма090 = ВеткаР1Пр2.Данные.П000120006001
				 - ВеткаР1Пр2.Данные.П000120007001
				 + ВеткаР1Пр2.Данные.П000120008001;
		Если Сумма090 < 0 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120009001", "2");
			ВеткаР1Пр2.Данные.Вставить("П000120009002", - Сумма090);
		Иначе
			ВеткаР1Пр2.Данные.Вставить("П000120009001", "1");
			ВеткаР1Пр2.Данные.Вставить("П000120009002", Сумма090);
		КонецЕсли;
		Сумма090 = ВеткаР1Пр2.Данные.П000120006002
				 - ВеткаР1Пр2.Данные.П000120007002
				 + ВеткаР1Пр2.Данные.П000120008002;
		Если Сумма090 < 0 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120009003", "2");
			ВеткаР1Пр2.Данные.Вставить("П000120009004", - Сумма090);
		Иначе
			ВеткаР1Пр2.Данные.Вставить("П000120009003", "1");
			ВеткаР1Пр2.Данные.Вставить("П000120009004", Сумма090);
		КонецЕсли;
		Сумма090 = ВеткаР1Пр2.Данные.П000120006003
				 - ВеткаР1Пр2.Данные.П000120007003
				 + ВеткаР1Пр2.Данные.П000120008003;
		Если Сумма090 < 0 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120009005", "2");
			ВеткаР1Пр2.Данные.Вставить("П000120009006", - Сумма090);
		Иначе
			ВеткаР1Пр2.Данные.Вставить("П000120009005", "1");
			ВеткаР1Пр2.Данные.Вставить("П000120009006", Сумма090);
		КонецЕсли;
		Сумма090 = ВеткаР1Пр2.Данные.П000120006004
				 - ВеткаР1Пр2.Данные.П000120007004
				 + ВеткаР1Пр2.Данные.П000120008004;
		Если Сумма090 < 0 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120009007", "2");
			ВеткаР1Пр2.Данные.Вставить("П000120009008", - Сумма090);
		Иначе
			ВеткаР1Пр2.Данные.Вставить("П000120009007", "1");
			ВеткаР1Пр2.Данные.Вставить("П000120009008", Сумма090);
		КонецЕсли;
		Сумма090 = ВеткаР1Пр2.Данные.П000120006005
				 - ВеткаР1Пр2.Данные.П000120007005
				 + ВеткаР1Пр2.Данные.П000120008005;
		Если Сумма090 < 0 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120009009", "2");
			ВеткаР1Пр2.Данные.Вставить("П000120009010", - Сумма090);
		Иначе
			ВеткаР1Пр2.Данные.Вставить("П000120009009", "1");
			ВеткаР1Пр2.Данные.Вставить("П000120009010", Сумма090);
		КонецЕсли;
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			ВеткаР1Пр2.Данные.Вставить("П000120005101", ВеткаР1Пр2.Данные["П000120005102"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005201", ВеткаР1Пр2.Данные["П000120005202"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005301", ВеткаР1Пр2.Данные["П000120005302"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005401", ВеткаР1Пр2.Данные["П000120005402"]);
		КонецЕсли;
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил3";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	Для каждого ВеткаР1Пр3 Из ДеревоДанных.Строки Цикл
		
		ВеткаР1Пр3.Данные.Вставить("П000130006002"
			, ВеткаР1Пр3.Данные["П000130006102"]
			+ ВеткаР1Пр3.Данные["П000130006202"]);
		ВеткаР1Пр3.Данные.Вставить("П000130006003"
			, ВеткаР1Пр3.Данные["П000130006103"]
			+ ВеткаР1Пр3.Данные["П000130006203"]);
		ВеткаР1Пр3.Данные.Вставить("П000130006004"
			, ВеткаР1Пр3.Данные["П000130006104"]
			+ ВеткаР1Пр3.Данные["П000130006204"]);
		
		ВеткаР1Пр3.Данные.Вставить("П000130010003"
			, ВеткаР1Пр3.Данные["П000130001003"]
			+ ВеткаР1Пр3.Данные["П000130002003"]
			+ ВеткаР1Пр3.Данные["П000130003003"]
			+ ВеткаР1Пр3.Данные["П000130004003"]
			+ ВеткаР1Пр3.Данные["П000130005003"]
			+ ВеткаР1Пр3.Данные["П000130006003"]
			+ ВеткаР1Пр3.Данные["П000130007003"]
			+ ВеткаР1Пр3.Данные["П000130008003"]
			+ ВеткаР1Пр3.Данные["П000130009003"]);
		ВеткаР1Пр3.Данные.Вставить("П000130010004"
			, ВеткаР1Пр3.Данные["П000130001004"]
			+ ВеткаР1Пр3.Данные["П000130003004"]
			+ ВеткаР1Пр3.Данные["П000130006004"]
			+ ВеткаР1Пр3.Данные["П000130007004"]
			+ ВеткаР1Пр3.Данные["П000130008004"]);
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил4";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	Для каждого ВеткаР1Пр4 Из ДеревоДанных.Строки Цикл
		
		ВеткаР1Пр4.Данные.Вставить("П000140004003"
			, ВеткаР1Пр4.Данные["П000140005003"]
			+ ВеткаР1Пр4.Данные["П000140006003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140004004"
			, ВеткаР1Пр4.Данные["П000140005004"]
			+ ВеткаР1Пр4.Данные["П000140006004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140001002"
			, ВеткаР1Пр4.Данные["П000140002002"]
			+ ВеткаР1Пр4.Данные["П000140003002"]
			+ ВеткаР1Пр4.Данные["П000140004002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140001004"
			, ВеткаР1Пр4.Данные["П000140002004"]
			+ ВеткаР1Пр4.Данные["П000140003004"]
			+ ВеткаР1Пр4.Данные["П000140004004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140010003"
			, ВеткаР1Пр4.Данные["П000140011003"]
			+ ВеткаР1Пр4.Данные["П000140012003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140010004"
			, ВеткаР1Пр4.Данные["П000140011004"]
			+ ВеткаР1Пр4.Данные["П000140012004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140007002"
			, ВеткаР1Пр4.Данные["П000140008002"]
			+ ВеткаР1Пр4.Данные["П000140009002"]
			+ ВеткаР1Пр4.Данные["П000140010002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140007004"
			, ВеткаР1Пр4.Данные["П000140008004"]
			+ ВеткаР1Пр4.Данные["П000140009004"]
			+ ВеткаР1Пр4.Данные["П000140010004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140013002"
			, ВеткаР1Пр4.Данные["П000140014002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140013004"
			, ВеткаР1Пр4.Данные["П000140014004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140018003"
			, ВеткаР1Пр4.Данные["П000140019003"]
			+ ВеткаР1Пр4.Данные["П000140020003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140018004"
			, ВеткаР1Пр4.Данные["П000140019004"]
			+ ВеткаР1Пр4.Данные["П000140020004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140015002"
			, ВеткаР1Пр4.Данные["П000140016002"]
			+ ВеткаР1Пр4.Данные["П000140017002"]
			+ ВеткаР1Пр4.Данные["П000140018002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140015004"
			, ВеткаР1Пр4.Данные["П000140016004"]
			+ ВеткаР1Пр4.Данные["П000140017004"]
			+ ВеткаР1Пр4.Данные["П000140018004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140021002"
			, ВеткаР1Пр4.Данные["П000140022002"]
			+ ВеткаР1Пр4.Данные["П000140023002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140021004"
			, ВеткаР1Пр4.Данные["П000140022004"]
			+ ВеткаР1Пр4.Данные["П000140023004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140029002"
			, ВеткаР1Пр4.Данные["П000140006002"]
			+ ВеткаР1Пр4.Данные["П000140012002"]
			+ ВеткаР1Пр4.Данные["П000140020002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140029003"
			, ВеткаР1Пр4.Данные["П000140006003"]
			+ ВеткаР1Пр4.Данные["П000140012003"]
			+ ВеткаР1Пр4.Данные["П000140020003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140029004"
			, ВеткаР1Пр4.Данные["П000140006004"]
			+ ВеткаР1Пр4.Данные["П000140012004"]
			+ ВеткаР1Пр4.Данные["П000140020004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140028002"
			, ВеткаР1Пр4.Данные["П000140005002"]
			+ ВеткаР1Пр4.Данные["П000140011002"]
			+ ВеткаР1Пр4.Данные["П000140019002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140028003"
			, ВеткаР1Пр4.Данные["П000140005003"]
			+ ВеткаР1Пр4.Данные["П000140011003"]
			+ ВеткаР1Пр4.Данные["П000140019003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140028004"
			, ВеткаР1Пр4.Данные["П000140005004"]
			+ ВеткаР1Пр4.Данные["П000140011004"]
			+ ВеткаР1Пр4.Данные["П000140019004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140027002"
			, ВеткаР1Пр4.Данные["П000140004002"]
			+ ВеткаР1Пр4.Данные["П000140010002"]
			+ ВеткаР1Пр4.Данные["П000140018002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140027003"
			, ВеткаР1Пр4.Данные["П000140028003"]
			+ ВеткаР1Пр4.Данные["П000140029003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140027004"
			, ВеткаР1Пр4.Данные["П000140028004"]
			+ ВеткаР1Пр4.Данные["П000140029004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140026002"
			, ВеткаР1Пр4.Данные["П000140003002"]
			+ ВеткаР1Пр4.Данные["П000140009002"]
			+ ВеткаР1Пр4.Данные["П000140017002"]
			+ ВеткаР1Пр4.Данные["П000140023002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140026003"
			, ВеткаР1Пр4.Данные["П000140003003"]
			+ ВеткаР1Пр4.Данные["П000140009003"]
			+ ВеткаР1Пр4.Данные["П000140017003"]
			+ ВеткаР1Пр4.Данные["П000140023003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140026004"
			, ВеткаР1Пр4.Данные["П000140003004"]
			+ ВеткаР1Пр4.Данные["П000140009004"]
			+ ВеткаР1Пр4.Данные["П000140017004"]
			+ ВеткаР1Пр4.Данные["П000140023004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140025002"
			, ВеткаР1Пр4.Данные["П000140002002"]
			+ ВеткаР1Пр4.Данные["П000140008002"]
			+ ВеткаР1Пр4.Данные["П000140014002"]
			+ ВеткаР1Пр4.Данные["П000140016002"]
			+ ВеткаР1Пр4.Данные["П000140022002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140025003"
			, ВеткаР1Пр4.Данные["П000140002003"]
			+ ВеткаР1Пр4.Данные["П000140008003"]
			+ ВеткаР1Пр4.Данные["П000140014003"]
			+ ВеткаР1Пр4.Данные["П000140016003"]
			+ ВеткаР1Пр4.Данные["П000140022003"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140025004"
			, ВеткаР1Пр4.Данные["П000140002004"]
			+ ВеткаР1Пр4.Данные["П000140008004"]
			+ ВеткаР1Пр4.Данные["П000140014004"]
			+ ВеткаР1Пр4.Данные["П000140016004"]
			+ ВеткаР1Пр4.Данные["П000140022004"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140024002"
			, ВеткаР1Пр4.Данные["П000140025002"]
			+ ВеткаР1Пр4.Данные["П000140026002"]
			+ ВеткаР1Пр4.Данные["П000140027002"]);
		
		ВеткаР1Пр4.Данные.Вставить("П000140024004"
			, ВеткаР1Пр4.Данные["П000140025004"]
			+ ВеткаР1Пр4.Данные["П000140026004"]
			+ ВеткаР1Пр4.Данные["П000140027004"]
			+ ВеткаР1Пр4.Данные["П000140030004"]
			+ ВеткаР1Пр4.Данные["П000140031004"]);
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил5_6";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	Для каждого ВеткаР1Пр5_6 Из ДеревоДанных.Строки Цикл
		
		Знаменатель = ВеткаР1Пр5_6.Данные["П000150002002"];
		Если Знаменатель = 0 Тогда
			ВеткаР1Пр5_6.Данные.Вставить("П000150004002", 0);
		Иначе
			ВеткаР1Пр5_6.Данные.Вставить("П000150004002",
			ВеткаР1Пр5_6.Данные["П000150003002"] / Знаменатель * 100);
		КонецЕсли;
		
		Знаменатель = ВеткаР1Пр5_6.Данные["П000150002003"];
		Если Знаменатель = 0 Тогда
			ВеткаР1Пр5_6.Данные.Вставить("П000150004003", 0);
		Иначе
			ВеткаР1Пр5_6.Данные.Вставить("П000150004003",
			ВеткаР1Пр5_6.Данные["П000150003003"] / Знаменатель * 100);
		КонецЕсли;
		
		Знаменатель = ВеткаР1Пр5_6.Данные["П000160006002"];
		Если Знаменатель = 0 Тогда
			ВеткаР1Пр5_6.Данные.Вставить("П000160008002", 0);
		Иначе
			ВеткаР1Пр5_6.Данные.Вставить("П000160008002",
			ВеткаР1Пр5_6.Данные["П000160007002"]
			/ Знаменатель * 100);
		КонецЕсли;
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил7";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	Для каждого ВеткаР1Пр7 Из ДеревоДанных.Строки Цикл
		
		Знаменатель = ВеткаР1Пр7.Данные["П000170001001"];
		Если Знаменатель = 0 Тогда
			ВеткаР1Пр7.Данные.Вставить("П000170005001", 0);
		Иначе
			ВеткаР1Пр7.Данные.Вставить("П000170005001",
				(ВеткаР1Пр7.Данные["П000170002001"]
				+ ВеткаР1Пр7.Данные["П000170003001"]
				+ ВеткаР1Пр7.Данные["П000170004001"])
				/ Знаменатель * 100);
		КонецЕсли;
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 12 Тогда
			Знаменатель = ВеткаР1Пр7.Данные["П000170001002"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр7.Данные.Вставить("П000170005002", 0);
			Иначе
				ВеткаР1Пр7.Данные.Вставить("П000170005002",
					(ВеткаР1Пр7.Данные["П000170002002"]
					+ ВеткаР1Пр7.Данные["П000170003002"]
					+ ВеткаР1Пр7.Данные["П000170004002"])
					/ Знаменатель * 100);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил8";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы18М1;
	СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
	ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
	
	Для каждого ВеткаР1Пр8 Из ДеревоДанных.Строки Цикл
		
		ДеревоМнЧ = ВеткаР1Пр8.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		П000180001001 = 0;
		П000180001002 = 0;
		П000180001003 = 0;
		П000180001004 = 0;
		П000180001005 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			СтрокаМнЧ.Данные.Вставить("П00018М106002"
				, СтрокаМнЧ.Данные["П00018М106003"]
				+ СтрокаМнЧ.Данные["П00018М106004"]
				+ СтрокаМнЧ.Данные["П00018М106005"]);
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				СтрокаМнЧ.Данные.Вставить("П00018М106001"
					, СтрокаМнЧ.Данные["П00018М106002"]);
			КонецЕсли;
			П000180001001 = П000180001001 + СтрокаМнЧ.Данные["П00018М106001"];
			П000180001002 = П000180001002 + СтрокаМнЧ.Данные["П00018М106002"];
			П000180001003 = П000180001003 + СтрокаМнЧ.Данные["П00018М106003"];
			П000180001004 = П000180001004 + СтрокаМнЧ.Данные["П00018М106004"];
			П000180001005 = П000180001005 + СтрокаМнЧ.Данные["П00018М106005"];
		КонецЦикла;
		ВеткаР1Пр8.Данные.Вставить("П000180001001", П000180001001);
		ВеткаР1Пр8.Данные.Вставить("П000180001002", П000180001002);
		ВеткаР1Пр8.Данные.Вставить("П000180001003", П000180001003);
		ВеткаР1Пр8.Данные.Вставить("П000180001004", П000180001004);
		ВеткаР1Пр8.Данные.Вставить("П000180001005", П000180001005);
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил9";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы19М1;
	СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
	ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
	
	Для каждого ВеткаР1Пр9 Из ДеревоДанных.Строки Цикл
		
		ДеревоМнЧ = ВеткаР1Пр9.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		П000190001001 = 0;
		П000190001002 = 0;
		П000190001003 = 0;
		П000190001004 = 0;
		П000190001005 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			СтрокаМнЧ.Данные.Вставить("П00019М108002"
				, СтрокаМнЧ.Данные["П00019М108003"]
				+ СтрокаМнЧ.Данные["П00019М108004"]
				+ СтрокаМнЧ.Данные["П00019М108005"]);
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				СтрокаМнЧ.Данные.Вставить("П00019М108001"
					, СтрокаМнЧ.Данные["П00019М108002"]);
			КонецЕсли;
			П000190001001 = П000190001001 + СтрокаМнЧ.Данные["П00019М108001"];
			П000190001002 = П000190001002 + СтрокаМнЧ.Данные["П00019М108002"];
			П000190001003 = П000190001003 + СтрокаМнЧ.Данные["П00019М108003"];
			П000190001004 = П000190001004 + СтрокаМнЧ.Данные["П00019М108004"];
			П000190001005 = П000190001005 + СтрокаМнЧ.Данные["П00019М108005"];
		КонецЦикла;
		ВеткаР1Пр9.Данные.Вставить("П000190001001", П000190001001);
		ВеткаР1Пр9.Данные.Вставить("П000190001002", П000190001002);
		ВеткаР1Пр9.Данные.Вставить("П000190001003", П000190001003);
		ВеткаР1Пр9.Данные.Вставить("П000190001004", П000190001004);
		ВеткаР1Пр9.Данные.Вставить("П000190001005", П000190001005);
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел1Прил10";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы110М1;
	СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
	ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
	
	Для каждого ВеткаР1Пр10 Из ДеревоДанных.Строки Цикл
		
		ДеревоМнЧ = ВеткаР1Пр10.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		П001100001001 = 0;
		П001100001002 = 0;
		П001100001003 = 0;
		П001100001004 = 0;
		П001100001005 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			СтрокаМнЧ.Данные.Вставить("П00110М110002"
				, СтрокаМнЧ.Данные["П00110М110003"]
				+ СтрокаМнЧ.Данные["П00110М110004"]
				+ СтрокаМнЧ.Данные["П00110М110005"]);
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				СтрокаМнЧ.Данные.Вставить("П00110М110001"
					, СтрокаМнЧ.Данные["П00110М110002"]);
			КонецЕсли;
			П001100001001 = П001100001001 + СтрокаМнЧ.Данные["П00110М110001"];
			П001100001002 = П001100001002 + СтрокаМнЧ.Данные["П00110М110002"];
			П001100001003 = П001100001003 + СтрокаМнЧ.Данные["П00110М110003"];
			П001100001004 = П001100001004 + СтрокаМнЧ.Данные["П00110М110004"];
			П001100001005 = П001100001005 + СтрокаМнЧ.Данные["П00110М110005"];
		КонецЦикла;
		ВеткаР1Пр10.Данные.Вставить("П001100001001", П001100001001);
		ВеткаР1Пр10.Данные.Вставить("П001100001002", П001100001002);
		ВеткаР1Пр10.Данные.Вставить("П001100001003", П001100001003);
		ВеткаР1Пр10.Данные.Вставить("П001100001004", П001100001004);
		ВеткаР1Пр10.Данные.Вставить("П001100001005", П001100001005);
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел2";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы21М1;
	СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
	ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
	
	Для каждого ВеткаР2 Из ДеревоДанных.Строки Цикл
		
		ДеревоМнЧ = ВеткаР2.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		П000020003001 = 0;
		П000020005001 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			П000020003001 = П000020003001 + СтрокаМнЧ.Данные["П00021М109001"];
			П000020005001 = П000020005001 + СтрокаМнЧ.Данные["П00021М109002"];
		КонецЦикла;
		ВеткаР2.Данные.Вставить("П000020003001", П000020003001);
		ВеткаР2.Данные.Вставить("П000020005001", П000020005001);
		
	КонецЦикла;
	
	ИмяРаздела = "Раздел3";
	ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
	ДеревоДанных = Контейнер[ИмяГлРаздела];
	
	ИмяГруппыМнЧ321 = СтруктураРеквизитовФормы.мИдГруппы321М1;
	СтруктураГруппыМнЧ321 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ321];
	ИменаГрафМнЧ321 = СтруктураГруппыМнЧ321["ИменаГраф"];
	
	ИмяГруппыМнЧ322 = СтруктураРеквизитовФормы.мИдГруппы322М1;
	СтруктураГруппыМнЧ322 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ322];
	ИменаГрафМнЧ322 = СтруктураГруппыМнЧ322["ИменаГраф"];
	
	Для каждого ВеткаР3 Из ДеревоДанных.Строки Цикл
		
		// Многострочная часть 3.2.1.
		ДеревоМнЧ = ВеткаР3.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ321];
		П003210025001 = 0;
		П003210025002 = 0;
		П003210025003 = 0;
		П003210025004 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			П003210025001 = П003210025001 + СтрокаМнЧ.Данные["П00321М121001"];
			П003210025002 = П003210025002 + СтрокаМнЧ.Данные["П00321М122001"];
			П003210025003 = П003210025003 + СтрокаМнЧ.Данные["П00321М123001"];
			П003210025004 = П003210025004 + СтрокаМнЧ.Данные["П00321М124001"];
		КонецЦикла;
		ВеткаР3.Данные.Вставить("П003210025001", П003210025001);
		ВеткаР3.Данные.Вставить("П003210025002", П003210025002);
		ВеткаР3.Данные.Вставить("П003210025003", П003210025003);
		ВеткаР3.Данные.Вставить("П003210025004", П003210025004);
		
		// Многострочная часть 3.2.2.
		ДеревоМнЧ = ВеткаР3.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ322];
		П003220030001 = 0;
		П003220030002 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			П003220030001 = П003220030001 + СтрокаМнЧ.Данные["П00322М128001"];
			П003220030002 = П003220030002 + СтрокаМнЧ.Данные["П00322М129001"];
		КонецЦикла;
		ВеткаР3.Данные.Вставить("П003220030001", П003220030001);
		ВеткаР3.Данные.Вставить("П003220030002", П003220030002);
		
	КонецЦикла;
	
	ДеревоРаздела1 = Контейнер["Раздел1"];
	СохрОКТМО = СокрЛП(ДеревоРаздела1.Строки[0].Данные.П000010001001);
	
	ВеткаРаздел1 = ДеревоРаздела1.Строки[0];
	ВеткаРаздел1.Данные.Вставить("П000010001001", СохрОКТМО);
	
	ДеревоДанныхРаздел1Прил1 = Контейнер["Раздел1Прил1"];
	
	Стр070_Код1 = 0;
	Стр071_Код1 = 0;
	Стр072_Код1 = 0;
	Стр073_Код1 = 0;
	
	Стр070_Код2 = 0;
	Стр071_Код2 = 0;
	Стр072_Код2 = 0;
	Стр073_Код2 = 0;
	
	Стр070_Код3 = 0;
	Стр071_Код3 = 0;
	Стр072_Код3 = 0;
	Стр073_Код3 = 0;
	
	Стр070_Код4 = 0;
	Стр071_Код4 = 0;
	Стр072_Код4 = 0;
	Стр073_Код4 = 0;
	
	Стр090_Код1 = 0;
	Стр091_Код1 = 0;
	Стр092_Код1 = 0;
	Стр093_Код1 = 0;
	
	Стр090_Код2 = 0;
	Стр091_Код2 = 0;
	Стр092_Код2 = 0;
	Стр093_Код2 = 0;
	
	Для каждого ВеткаРаздел1Прил1 Из ДеревоДанныхРаздел1Прил1.Строки Цикл
		
		ДанныеПодр1_1и1_2 = ВеткаРаздел1Прил1.Строки[0].Строки[0].Данные;
		
		ВеткаРаздел1.Данные["П000010003001"]
			= ВеткаРаздел1.Данные["П000010003001"] + ДанныеПодр1_1и1_2["П011110006001"];
		ВеткаРаздел1.Данные["П000010003101"]
			= ВеткаРаздел1.Данные["П000010003101"] + ДанныеПодр1_1и1_2["П011110006003"];
		ВеткаРаздел1.Данные["П000010003201"]
			= ВеткаРаздел1.Данные["П000010003201"] + ДанныеПодр1_1и1_2["П011110006004"];
		ВеткаРаздел1.Данные["П000010003301"]
			= ВеткаРаздел1.Данные["П000010003301"] + ДанныеПодр1_1и1_2["П011110006005"];
		
		ВеткаРаздел1.Данные["П000010005001"]
			= ВеткаРаздел1.Данные["П000010005001"] + ДанныеПодр1_1и1_2["П011120006001"];
		ВеткаРаздел1.Данные["П000010005101"]
			= ВеткаРаздел1.Данные["П000010005101"] + ДанныеПодр1_1и1_2["П011120006003"];
		ВеткаРаздел1.Данные["П000010005201"]
			= ВеткаРаздел1.Данные["П000010005201"] + ДанныеПодр1_1и1_2["П011120006004"];
		ВеткаРаздел1.Данные["П000010005301"]
			= ВеткаРаздел1.Данные["П000010005301"] + ДанныеПодр1_1и1_2["П011120006005"];
		
		МногострочныеДанныеПодр1_3_1
			= ВеткаРаздел1Прил1.Строки[1].Строки[0].ДанныеМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11131М1];
		Для каждого Строка1_3_1 Из МногострочныеДанныеПодр1_3_1.Строки Цикл
			Стр001 = СокрЛП(Строка1_3_1.Данные["П11131М100101"]);
			Если Стр001 = "1" Тогда
				Стр070_Код1 = Стр070_Код1 + Строка1_3_1.Данные["П11131М105001"];
				Стр071_Код1 = Стр071_Код1 + Строка1_3_1.Данные["П11131М105003"];
				Стр072_Код1 = Стр072_Код1 + Строка1_3_1.Данные["П11131М105004"];
				Стр073_Код1 = Стр073_Код1 + Строка1_3_1.Данные["П11131М105005"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр070_Код3 = Стр070_Код3 + Строка1_3_1.Данные["П11131М105001"];
				Стр071_Код3 = Стр071_Код3 + Строка1_3_1.Данные["П11131М105003"];
				Стр072_Код3 = Стр072_Код3 + Строка1_3_1.Данные["П11131М105004"];
				Стр073_Код3 = Стр073_Код3 + Строка1_3_1.Данные["П11131М105005"];
			КонецЕсли;
		КонецЦикла;
		
		МногострочныеДанныеПодр1_3_2
			= ВеткаРаздел1Прил1.Строки[2].Строки[0].ДанныеМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11132М1];
		Для каждого Строка1_3_2 Из МногострочныеДанныеПодр1_3_2.Строки Цикл
			Стр001 = СокрЛП(Строка1_3_2.Данные["П11132М100101"]);
			Если Стр001 = "1" Тогда
				Стр070_Код2 = Стр070_Код2 + Строка1_3_2.Данные["П11132М105001"];
				Стр071_Код2 = Стр071_Код2 + Строка1_3_2.Данные["П11132М105003"];
				Стр072_Код2 = Стр072_Код2 + Строка1_3_2.Данные["П11132М105004"];
				Стр073_Код2 = Стр073_Код2 + Строка1_3_2.Данные["П11132М105005"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр070_Код4 = Стр070_Код4 + Строка1_3_2.Данные["П11132М105001"];
				Стр071_Код4 = Стр071_Код4 + Строка1_3_2.Данные["П11132М105003"];
				Стр072_Код4 = Стр072_Код4 + Строка1_3_2.Данные["П11132М105004"];
				Стр073_Код4 = Стр073_Код4 + Строка1_3_2.Данные["П11132М105005"];
			КонецЕсли;
		КонецЦикла;
		
		МногострочныеДанныеПодр1_4
			= ВеткаРаздел1Прил1.Строки[3].Строки[0].ДанныеМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы1114М1];
		Для каждого Строка1_4 Из МногострочныеДанныеПодр1_4.Строки Цикл
			Стр001 = СокрЛП(Строка1_4.Данные["П01114М100101"]);
			Если Стр001 = "1" Тогда
				Стр090_Код1 = Стр090_Код1 + Строка1_4.Данные["П01114М105001"];
				Стр091_Код1 = Стр091_Код1 + Строка1_4.Данные["П01114М105003"];
				Стр092_Код1 = Стр092_Код1 + Строка1_4.Данные["П01114М105004"];
				Стр093_Код1 = Стр093_Код1 + Строка1_4.Данные["П01114М105005"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр090_Код2 = Стр090_Код2 + Строка1_4.Данные["П01114М105001"];
				Стр091_Код2 = Стр091_Код2 + Строка1_4.Данные["П01114М105003"];
				Стр092_Код2 = Стр092_Код2 + Строка1_4.Данные["П01114М105004"];
				Стр093_Код2 = Стр093_Код2 + Строка1_4.Данные["П01114М105005"];
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	МногострочныеДанные060_073
		= ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
	ИндексСтроки = 0;
	Если ЗначениеЗаполнено(Стр070_Код1)
		ИЛИ ЗначениеЗаполнено(Стр071_Код1)
		ИЛИ ЗначениеЗаполнено(Стр072_Код1)
		ИЛИ ЗначениеЗаполнено(Стр073_Код1) Тогда
		Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		Данные060_073.Вставить("П00001М106001", "18210202131061010160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код1);
		Данные060_073.Вставить("П00001М107101", Стр071_Код1);
		Данные060_073.Вставить("П00001М107201", Стр072_Код1);
		Данные060_073.Вставить("П00001М107301", Стр073_Код1);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код2)
		ИЛИ ЗначениеЗаполнено(Стр071_Код2)
		ИЛИ ЗначениеЗаполнено(Стр072_Код2)
		ИЛИ ЗначениеЗаполнено(Стр073_Код2) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
			Строка060_073.Данные = Новый Структура;
			Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
			Данные060_073 = Строка060_073.Данные;
		Иначе
			Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		КонецЕсли;
		Данные060_073.Вставить("П00001М106001", "18210202131061020160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код2);
		Данные060_073.Вставить("П00001М107101", Стр071_Код2);
		Данные060_073.Вставить("П00001М107201", Стр072_Код2);
		Данные060_073.Вставить("П00001М107301", Стр073_Код2);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код3)
		ИЛИ ЗначениеЗаполнено(Стр071_Код3)
		ИЛИ ЗначениеЗаполнено(Стр072_Код3)
		ИЛИ ЗначениеЗаполнено(Стр073_Код3) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
			Строка060_073.Данные = Новый Структура;
			Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
			Данные060_073 = Строка060_073.Данные;
		Иначе
			Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		КонецЕсли;
		Данные060_073.Вставить("П00001М106001", "18210202132061010160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код3);
		Данные060_073.Вставить("П00001М107101", Стр071_Код3);
		Данные060_073.Вставить("П00001М107201", Стр072_Код3);
		Данные060_073.Вставить("П00001М107301", Стр073_Код3);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код4)
		ИЛИ ЗначениеЗаполнено(Стр071_Код4)
		ИЛИ ЗначениеЗаполнено(Стр072_Код4)
		ИЛИ ЗначениеЗаполнено(Стр073_Код4) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
			Строка060_073.Данные = Новый Структура;
			Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
			Данные060_073 = Строка060_073.Данные;
		Иначе
			Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		КонецЕсли;
		Данные060_073.Вставить("П00001М106001", "18210202132061020160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код4);
		Данные060_073.Вставить("П00001М107101", Стр071_Код4);
		Данные060_073.Вставить("П00001М107201", Стр072_Код4);
		Данные060_073.Вставить("П00001М107301", Стр073_Код4);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	
	МногострочныеДанные080_093
		= ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
	ИндексСтроки = 0;
	Если ЗначениеЗаполнено(Стр090_Код1)
		ИЛИ ЗначениеЗаполнено(Стр091_Код1)
		ИЛИ ЗначениеЗаполнено(Стр092_Код1)
		ИЛИ ЗначениеЗаполнено(Стр093_Код1) Тогда
		Данные080_093 = МногострочныеДанные080_093.Строки[0].Данные;
		Данные080_093.Вставить("П00001М208001", "18210202080061000160");
		Данные080_093.Вставить("П00001М209001", Стр090_Код1);
		Данные080_093.Вставить("П00001М209101", Стр091_Код1);
		Данные080_093.Вставить("П00001М209201", Стр092_Код1);
		Данные080_093.Вставить("П00001М209301", Стр093_Код1);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр090_Код2)
		ИЛИ ЗначениеЗаполнено(Стр091_Код2)
		ИЛИ ЗначениеЗаполнено(Стр092_Код2)
		ИЛИ ЗначениеЗаполнено(Стр093_Код2) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка080_093 = МногострочныеДанные080_093.Строки.Добавить();
			Строка080_093.Данные = Новый Структура;
			Строка080_093.ДанныеМногострочныхЧастей = Новый Структура;
			Данные080_093 = Строка080_093.Данные;
		Иначе
			Данные080_093 = МногострочныеДанные080_093.Строки[0].Данные;
		КонецЕсли;
		Данные080_093.Вставить("П00001М208001", "18210202120061000160");
		Данные080_093.Вставить("П00001М209001", Стр090_Код2);
		Данные080_093.Вставить("П00001М209101", Стр091_Код2);
		Данные080_093.Вставить("П00001М209201", Стр092_Код2);
		Данные080_093.Вставить("П00001М209301", Стр093_Код2);
	КонецЕсли;
	
	ВеткаРаздел1.Данные["П000010002001"] = "18210202010061010160";
	ВеткаРаздел1.Данные["П000010004001"] = "18210202101081013160";
	ВеткаРаздел1.Данные["П000010010001"] = "18210202090071010160";
	
	ДеревоДанныхРаздел1Прил2 = Контейнер["Раздел1Прил2"];
	
	Для каждого ВеткаРаздел1Прил2 Из ДеревоДанныхРаздел1Прил2.Строки Цикл
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009001"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011001"]
				= ВеткаРаздел1.Данные["П000010011001"] + ВеткаРаздел1Прил2.Данные["П000120009002"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012001"]
				= ВеткаРаздел1.Данные["П000010012001"] + ВеткаРаздел1Прил2.Данные["П000120009002"];
		КонецЕсли;
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009005"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011101"]
				= ВеткаРаздел1.Данные["П000010011101"] + ВеткаРаздел1Прил2.Данные["П000120009006"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012101"]
				= ВеткаРаздел1.Данные["П000010012101"] + ВеткаРаздел1Прил2.Данные["П000120009006"];
		КонецЕсли;
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009007"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011201"]
				= ВеткаРаздел1.Данные["П000010011201"] + ВеткаРаздел1Прил2.Данные["П000120009008"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012201"]
				= ВеткаРаздел1.Данные["П000010012201"] + ВеткаРаздел1Прил2.Данные["П000120009008"];
		КонецЕсли;
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009009"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011301"]
				= ВеткаРаздел1.Данные["П000010011301"] + ВеткаРаздел1Прил2.Данные["П000120009010"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012301"]
				= ВеткаРаздел1.Данные["П000010012301"] + ВеткаРаздел1Прил2.Данные["П000120009010"];
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов)
	
	ИмяГлРаздела = ИмяРаздела;
	СтруктураРаздела = СтруктураМногоуровневыхРазделов[ИмяРаздела];
	Если СтруктураРаздела.Свойство("ИмяГлавногоРаздела") Тогда
		ИмяГлРаздела = СтруктураРаздела["ИмяГлавногоРаздела"];
	КонецЕсли;
	
	Возврат ИмяГлРаздела;
	
КонецФункции

Функция ЗаписатьРеглОтчет(ИмяФормы, ПараметрыЗаписи)
			
	Если НЕ ПараметрыЗаписи.СохраняемыйРеглОтчет = Неопределено Тогда
		
		Если ТипЗнч(ПараметрыЗаписи.СохраняемыйРеглОтчет) = Тип("ДокументСсылка.РегламентированныйОтчет")
		   И НЕ ПараметрыЗаписи.СохраняемыйРеглОтчет.Пустая() Тогда
			
			ДокументРегламентированныйОтчет = ПараметрыЗаписи.СохраняемыйРеглОтчет.ПолучитьОбъект();
			
			РегламентированнаяОтчетность.ЗаблокироватьДокумент(ДокументРегламентированныйОтчет);
						
		ИначеЕсли ТипЗнч(ПараметрыЗаписи.СохраняемыйРеглОтчет) = Тип("ДокументОбъект.РегламентированныйОтчет") Тогда
			
			ДокументРегламентированныйОтчет = ПараметрыЗаписи.СохраняемыйРеглОтчет;
			
			РегламентированнаяОтчетность.ЗаблокироватьДокумент(ДокументРегламентированныйОтчет);
						
		Иначе
								
			РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Неверный тип входящего параметра (%1) при автоматическом формировании формы %2'"),
						ТипЗнч(ПараметрыЗаписи.СохраняемыйРеглОтчет),  ПараметрыЗаписи.НаименованиеОтчета));			
						
			Возврат Неопределено;
			
		КонецЕсли
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		РегламентированнаяОтчетность.ЗаблокироватьДокумент(ДокументРегламентированныйОтчет);
		
		ДокументРегламентированныйОтчет.Дата = ПараметрыЗаписи.ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
		
	ПараметрыЗаписи.СохраняемыйРеглОтчет = ДокументРегламентированныйОтчет;
		
	Если ЗаписатьДокумент(ИмяФормы, ПараметрыЗаписи) = Ложь Тогда
		Возврат Неопределено;
	КонецЕсли;
			
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Процедура ИзменитьНастройкиРазделов(ИмяФормы, РазделыОтчета, ДанныеРеглОтчета)
	
	Если ДанныеРеглОтчета.СтруктураРеквизитовФормы.ИП Тогда
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "ФизЛицо", 1);
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил8", 1);
		
	Иначе
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "ФизЛицо", 0);
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил8", 0);
						
		ИнициализироватьМногоуровневыйРаздел(
			ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
			ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов,
			"Раздел1Прил8");
		
	КонецЕсли;
	
	Если РазделыОтчета.Титульный.ПоМесту = "124"
		ИЛИ РазделыОтчета.Титульный.ПоМесту = "240" Тогда
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел2", 1);
		
	Иначе
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел2", 0);
		
		ИнициализироватьМногоуровневыйРаздел(
			ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
			ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов,
			"Раздел2");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы,
												  ДеревоСтраницОтчета,
												  ИмяРаздела,
												  ВариантНастроек)
	
	Для Каждого СтраницаНастроек Из ДеревоСтраницОтчета.Строки Цикл
		
		Если СтраницаНастроек.ИмяСтраницы = ИмяРаздела Тогда
			
			СтраницаНастроек.ПоказатьСтраницу = ВариантНастроек;
			СтраницаНастроек.ВыводНаПечать    = ВариантНастроек;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
					
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаРегламентированногоОтчета

Функция УниверсальнаяВыгрузка(Параметры) Экспорт
	
	Перем ДанныеОтчета;
	Перем СтруктураРеквизитовФормы;
	Перем СтруктураМногоуровневыхРазделов;
	
	СохраненныйОтчет  = Параметры.СохраненныйОтчет;
	ИсточникОтчета    = Параметры.ИсточникОтчета;
	ИмяФормы	      = Параметры.ВыбраннаяФорма;
	РезультатВыгрузки = Параметры.РезультатВыгрузки;
	
	СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы);
	
	ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы);
	
	ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
									      СтруктураРеквизитовФормы,
										  СтруктураМногоуровневыхРазделов);
														  
	СтруктураРеквизитовФормы.мСохраненныйДок = СохраненныйОтчет;
															  
	СформироватьСтруктуруПоказателей(ИмяФормы,
									 ДанныеОтчета,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов);
	
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров(ИмяФормы,
														ДанныеОтчета,
														СтруктураРеквизитовФормы);
	
	ДеревоВыгрузки = ИзвлечьСтруктуруXML(ИмяФормы);
	
	Если НЕ ПроверитьВозможностьВыгрузки(ИмяФормы,
										 ПараметрыВыгрузки,
										 ДеревоВыгрузки,
										 РезультатВыгрузки,
										 СтруктураРеквизитовФормы,
										 СтруктураМногоуровневыхРазделов) Тогда
		
		РезультатВыгрузки.Вставить("РеглОтчетВыгружен", Ложь);
		
		Возврат РезультатВыгрузки;
		
	КонецЕсли;
	
	ЗаполнитьДанными(ИмяФормы,
					 ДанныеОтчета,
					 ПараметрыВыгрузки,
					 ДеревоВыгрузки,
					 РезультатВыгрузки,
					 СтруктураРеквизитовФормы,
					 СтруктураМногоуровневыхРазделов);
										
	КодировкаФайлаВыгрузки = "windows-1251";									
										
	ТекстФайлаВыгрузки = ВыгрузитьДеревоВXML(ИмяФормы,
											 ДеревоВыгрузки,
											 ПараметрыВыгрузки,
											 КодировкаФайлаВыгрузки);
			    	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаФайлаВыгрузки);
	ЗаписьТекста.Записать(ТекстФайлаВыгрузки);
	ЗаписьТекста.Закрыть();
	ЗаписьТекста = Неопределено;
	
	ФайлВыгрузки = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлВыгрузки, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	РезультатВыгрузки.Вставить("ИмяФайлаВыгрузки", ПараметрыВыгрузки.ИдФайл + ".xml");
	РезультатВыгрузки.Вставить("АдресФайлаВыгрузки", АдресВоВременномХранилище);
	РезультатВыгрузки.Вставить("КодировкаФайлаВыгрузки", КодировкаФайлаВыгрузки);
	РезультатВыгрузки.Вставить("ТипФайлаВыгрузки", "РасчетПоСтраховымВзносам");
	РезультатВыгрузки.Вставить("РеглОтчетВыгружен", Истина);
		
	Возврат РезультатВыгрузки;
	
КонецФункции

Процедура СформироватьСтруктуруПоказателей(ИмяФормы,
										   ДанныеОтчета,
										   СтруктураРеквизитовФормы,
										   СтруктураМногоуровневыхРазделов) Экспорт
	
	ДанныеОтчета = Новый Структура;
			
	СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы,
											СтруктураРеквизитовФормы,
											СтруктураМногоуровневыхРазделов);
	
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		
		ДанныеОтчета.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
			РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
			
	КонецЦикла;
	
	Для Каждого Раздел Из СтруктураМногоуровневыхРазделов Цикл
		
		ДанныеОтчета.Вставить(Раздел.Ключ);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СохраненныеДанныеОтчета(ИмяФормы,
								СтруктураРеквизитовФормы,
								СтруктураМногоуровневыхРазделов) Экспорт
		
	СохраненныеДанныеОтчета = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
	
	Если СохраненныеДанныеОтчета.Свойство("ОкружениеСохранения") Тогда
		ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(ИмяФормы,
														  СохраненныеДанныеОтчета,
														  СтруктураРеквизитовФормы,
														  СтруктураМногоуровневыхРазделов);
	КонецЕсли;
	
	ДеревоРаздела = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3;
	
	Если НЕ ДеревоРаздела.Строки[0].Данные.Свойство("П000030004001") Тогда
		// Заполнение строки 040 раздела 3 (случай сохраненных данных отчета предыдущей версии).
		ЗаполнитьСтроку040Раздела3(ИмяФормы,
								   ДеревоРаздела,
								   СтруктураРеквизитовФормы,
								   СтруктураМногоуровневыхРазделов);
		СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Вставить("Раздел3", ДеревоРаздела);
	КонецЕсли;
		
	Возврат СохраненныеДанныеОтчета;
	
КонецФункции

Процедура ЗаполнитьСтроку040Раздела3(ИмяФормы,
									 ДеревоРаздела,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов) Экспорт
	
	ЗаполненРаздел = ЗаполненРаздел(ИмяФормы,
									ДеревоРаздела,
									"Раздел3",
									СтруктураРеквизитовФормы,
									СтруктураМногоуровневыхРазделов);
		
	Для Инд = 0 По ДеревоРаздела.Строки.Количество() - 1 Цикл
		Если ЗаполненРаздел Тогда
			ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", Формат(Инд + 1, "ЧГ="));
		Иначе
			ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", "");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьСтруктуруПараметров(ИмяФормы,
										ДанныеОтчета,
										СтруктураРеквизитовФормы) Экспорт
	
	ИндивидуальныйПредприниматель = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(
									СтруктураРеквизитовФормы.мСохраненныйДок.Организация);
	
	Титульный = ДанныеОтчета.Титульный;
	СведенияОФизЛице = ДанныеОтчета.ФизЛицо;
	
	ПараметрыВыгрузки = Новый Структура;
	
	ПараметрыВыгрузки.Вставить("ПоМесту", СокрЛП(Титульный.ПоМесту));
	
	ПараметрыВыгрузки.Вставить("ЭтоЮЛ", НЕ ИндивидуальныйПредприниматель);
	
	ПараметрыВыгрузки.Вставить("ЭтоФизЛицоСИНН", ИндивидуальныйПредприниматель
	И ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.ИНН) И ПараметрыВыгрузки.ПоМесту = "112");
	
	ПараметрыВыгрузки.Вставить("ЭтоФизЛицоБезИНН", ИндивидуальныйПредприниматель
	И НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.ИНН) И ПараметрыВыгрузки.ПоМесту = "112");
	
	ПараметрыВыгрузки.Вставить("ЭтоПБОЮЛ", ИндивидуальныйПредприниматель
	И НЕ ПараметрыВыгрузки.ЭтоФизЛицоСИНН И НЕ ПараметрыВыгрузки.ЭтоФизЛицоБезИНН);
	
	ПараметрыВыгрузки.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	ПараметрыВыгрузки.Вставить("ДатаПодписи", Титульный.ДатаПодписи);
	
	ПараметрыВыгрузки.Вставить("ДатаДок_Дата", ТекущаяДатаСеанса());
	
	ПараметрыВыгрузки.Вставить("ДатаДок",  Формат(ПараметрыВыгрузки.ДатаДок_Дата, "ДФ=дд.ММ.гггг"));
	ПараметрыВыгрузки.Вставить("Период",   СокрЛП(Титульный.Период));
	ПараметрыВыгрузки.Вставить("ОтчетГод", Формат(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания, "ДФ=гггг"));
	ПараметрыВыгрузки.Вставить("КодНО",    СокрЛП(Титульный.НалоговыйОрган));
	ПараметрыВыгрузки.Вставить("НомКорр",  Строка(СтруктураРеквизитовФормы.мСохраненныйДок.Вид));
	
	ПараметрыВыгрузки.Вставить("КодИФНСПосредника",
	?(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.КрупнейшийНалогоплательщик,
	СокрЛП(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.КодНалоговогоОрганаПолучателя), ""));
	
	ПараметрыВыгрузки.Вставить("Тлф", СокрЛП(Титульный.ТелОрганизации));
	
	ПараметрыВыгрузки.Вставить("НаимОрг", СокрЛП(Титульный.НаимОрг));
	ПараметрыВыгрузки.Вставить("ИННОрг",  СокрЛП(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.ИНН));
	ПараметрыВыгрузки.Вставить("КПП",     СокрЛП(Титульный.КПП));
	ПараметрыВыгрузки.Вставить("ОКВЭД",   СокрЛП(Титульный.ОКВЭД));
	
	ПараметрыВыгрузки.Вставить("ФормРеорг", СокрЛП(Титульный.КодФормыРеорганизации));
	ПараметрыВыгрузки.Вставить("ИННРеорг",  СокрЛП(Титульный.ИННРеорганизованнойОрганизации));
	ПараметрыВыгрузки.Вставить("КППРеорг",  СокрЛП(Титульный.КППРеорганизованнойОрганизации));
	
	ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(Титульный.НаимОрг);
	ПараметрыВыгрузки.Вставить("Фамилия",  ФИОИП.Фамилия);
	ПараметрыВыгрузки.Вставить("Имя",      ФИОИП.Имя);
	ПараметрыВыгрузки.Вставить("Отчество", ФИОИП.Отчество);
	
	ПараметрыВыгрузки.Вставить("ПрПодп",      СокрЛП(Титульный.ПрПодп));
	ПараметрыВыгрузки.Вставить("НаимОргПред", СокрЛП(Титульный.ОргУп));
	ПараметрыВыгрузки.Вставить("НаимДокПред", СокрЛП(Титульный.ДокУпПред));
	ФИОПодписанта = РегламентированнаяОтчетность.РазложитьФИО(Титульный.ОргПодписант);
	ПараметрыВыгрузки.Вставить("ФамилияПодписанта",  ФИОПодписанта.Фамилия);
	ПараметрыВыгрузки.Вставить("ИмяПодписанта",      ФИОПодписанта.Имя);
	ПараметрыВыгрузки.Вставить("ОтчествоПодписанта", ФИОПодписанта.Отчество);
	
	ПараметрыВыгрузки.Вставить("ДатаРожд_Дата", СведенияОФизЛице.ДатаРождения);
	
	ПараметрыВыгрузки.Вставить("ДатаРожд",        Формат(ПараметрыВыгрузки.ДатаРожд_Дата, "ДФ=дд.ММ.гггг"));
	ПараметрыВыгрузки.Вставить("МестоРожд",       СокрЛП(СведенияОФизЛице.МестоРождения));
	ПараметрыВыгрузки.Вставить("ОКСМ",            СокрЛП(СведенияОФизЛице.КодСтраныГражданства));
	ПараметрыВыгрузки.Вставить("УдЛичнКодВидДок", СокрЛП(СведенияОФизЛице.КодВидаДокумента));
	ПараметрыВыгрузки.Вставить("УдЛичнСерДок",    СокрЛП(СведенияОФизЛице.СерияДокумента));
	ПараметрыВыгрузки.Вставить("УдЛичнНомДок",    СокрЛП(СведенияОФизЛице.НомерДокумента));
	ПараметрыВыгрузки.Вставить("УдЛичнСерНомДок", ПараметрыВыгрузки.УдЛичнСерДок + " " + ПараметрыВыгрузки.УдЛичнНомДок);
	ПараметрыВыгрузки.Вставить("УдЛичнВыдДок",    СокрЛП(СведенияОФизЛице.КемВыданДокумент));
	ПараметрыВыгрузки.Вставить("УдЛичнДатаДок",   Формат(СведенияОФизЛице.ДатаВыдачи, "ДФ=дд.ММ.гггг"));
	
	ПараметрыВыгрузки.Вставить("Индекс",     СокрЛП(СведенияОФизЛице.АдресИндекс));
	ПараметрыВыгрузки.Вставить("КодРегион",  СокрЛП(СведенияОФизЛице.АдресКодРегиона));
	ПараметрыВыгрузки.Вставить("Район",      СокрЛП(СведенияОФизЛице.АдресРайон));
	ПараметрыВыгрузки.Вставить("Город",      СокрЛП(СведенияОФизЛице.АдресГород));
	ПараметрыВыгрузки.Вставить("НаселПункт", СокрЛП(СведенияОФизЛице.АдресНаселенныйПункт));
	ПараметрыВыгрузки.Вставить("Улица",      СокрЛП(СведенияОФизЛице.АдресУлица));
	ПараметрыВыгрузки.Вставить("Дом",        СокрЛП(СведенияОФизЛице.АдресНомерДома));
	ПараметрыВыгрузки.Вставить("Корпус",     СокрЛП(СведенияОФизЛице.АдресНомерКорпуса));
	ПараметрыВыгрузки.Вставить("Кварт",      СокрЛП(СведенияОФизЛице.АдресНомерКвартиры));
	
	ПараметрыВыгрузки.Вставить("ИмяКлючевогоУзлаСодержательнойЧасти", "РасчетСВ");
	
	ПараметрыВыгрузки.Вставить("ИдФайл", ИдентификаторФайлаВыгрузки(ИмяФормы, ПараметрыВыгрузки, "NO_RASCHSV"));
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

Функция ИзвлечьСтруктуруXML(ИмяФормы) Экспорт
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Код");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Формат");
	ДеревоСтруктуры.Колонки.Добавить("МинРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("МаксРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("Обязательность");
	ДеревоСтруктуры.Колонки.Добавить("Многостраничность");
	ДеревоСтруктуры.Колонки.Добавить("Многострочность");
	ДеревоСтруктуры.Колонки.Добавить("Раздел");
	ДеревоСтруктуры.Колонки.Добавить("Ключ");
	ДеревоСтруктуры.Колонки.Добавить("Условие");
	ДеревоСтруктуры.Колонки.Добавить("ЗначениеПоУмолчанию");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	ДеревоСтруктуры.Колонки.Добавить("Представление");
	ДеревоСтруктуры.Колонки.Добавить("Показатели");
	
	Макет = ЭтотОбъект.ПолучитьМакет("СхемаВыгрузки501");
	
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	
	УчтенныеГруппы = Новый Соответствие;
	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 0, НомСтр, 0).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = ДеревоСтруктуры;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.Код = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.Раздел = СокрЛП(Макет.Область(НомСтр, 2, НомСтр, 2).Текст);
				НовСтр.Ключ = СокрЛП(Макет.Область(НомСтр, 3, НомСтр, 3).Текст);
				НовСтр.Тип = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст);
				НовСтр.Формат = СокрЛП(Макет.Область(НомСтр, 5, НомСтр, 5).Текст);
				МинРазмерность = СокрЛП(Макет.Область(НомСтр, 6, НомСтр, 6).Текст);
				НовСтр.МинРазмерность = ?(ПустаяСтрока(МинРазмерность), ?(НовСтр.Формат = "N", 99999, 0), Число(МинРазмерность));
				МаксРазмерность = СокрЛП(Макет.Область(НомСтр, 7, НомСтр, 7).Текст);
				НовСтр.МаксРазмерность = ?(ПустаяСтрока(МаксРазмерность), 99999, Число(МаксРазмерность));
				НовСтр.Обязательность = СокрЛП(Макет.Область(НомСтр, 8, НомСтр, 8).Текст);
				НовСтр.Многостраничность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 9, НомСтр, 9).Текст);
				НовСтр.Многострочность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 10, НомСтр, 10).Текст);
				НовСтр.Условие = СокрЛП(Макет.Область(НомСтр, 11, НомСтр, 11).Текст);
				НовСтр.ЗначениеПоУмолчанию = СокрЛП(Макет.Область(НомСтр, 12, НомСтр, 12).Текст);
				НовСтр.Представление = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции

Функция ПроверитьВозможностьВыгрузки(ИмяФормы,
								  	 ПараметрыВыгрузки,
									 ДеревоВыгрузки,
									 РезультатВыгрузки,
								 	 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов) Экспорт
	
	СтатусПроверки = Истина;
	
	ДанныеМногоуровневыхРазделов = Новый Структура;
	СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы,
						СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	Для каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	ВозможныеКодыПоМесту = Новый Массив;
	ВозможныеКодыПоМесту.Добавить("112");
	ВозможныеКодыПоМесту.Добавить("120");
	ВозможныеКодыПоМесту.Добавить("121");
	ВозможныеКодыПоМесту.Добавить("122");
	ВозможныеКодыПоМесту.Добавить("124");
	ВозможныеКодыПоМесту.Добавить("214");
	ВозможныеКодыПоМесту.Добавить("217");
	ВозможныеКодыПоМесту.Добавить("222");
	ВозможныеКодыПоМесту.Добавить("240");
	ВозможныеКодыПоМесту.Добавить("335");
	ВозможныеКодыПоМесту.Добавить("350");
	
	ВозможныеКодыПериода = Новый Массив;
	ВозможныеКодыПериода.Добавить("21");
	ВозможныеКодыПериода.Добавить("31");
	ВозможныеКодыПериода.Добавить("33");
	ВозможныеКодыПериода.Добавить("34");
	ВозможныеКодыПериода.Добавить("51");
	ВозможныеКодыПериода.Добавить("52");
	ВозможныеКодыПериода.Добавить("53");
	ВозможныеКодыПериода.Добавить("90");
	ВозможныеКодыПериода.Добавить("83");
	ВозможныеКодыПериода.Добавить("84");
	ВозможныеКодыПериода.Добавить("85");
	ВозможныеКодыПериода.Добавить("86");
	
	ВозможныеКодыФормыРеорганизции = Новый Массив;
	ВозможныеКодыФормыРеорганизции.Добавить("1");
	ВозможныеКодыФормыРеорганизции.Добавить("2");
	ВозможныеКодыФормыРеорганизции.Добавить("3");
	ВозможныеКодыФормыРеорганизции.Добавить("4");
	ВозможныеКодыФормыРеорганизции.Добавить("5");
	ВозможныеКодыФормыРеорганизции.Добавить("6");
	ВозможныеКодыФормыРеорганизции.Добавить("7");
	ВозможныеКодыФормыРеорганизции.Добавить("0");
	
	МассивСтрок1_2 = Новый Массив;
	МассивСтрок1_2.Добавить("1");
	МассивСтрок1_2.Добавить("2");
	
	МассивСтрок1_3 = Новый Массив;
	МассивСтрок1_3.Добавить("1");
	МассивСтрок1_3.Добавить("2");
	МассивСтрок1_3.Добавить("3");
	
	МассивСтрок1_5 = Новый Массив;
	МассивСтрок1_5.Добавить("1");
	МассивСтрок1_5.Добавить("2");
	МассивСтрок1_5.Добавить("3");
	МассивСтрок1_5.Добавить("4");
	МассивСтрок1_5.Добавить("5");
	
	// Титульный лист.
	Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Не задан ИНН организации, обособленного подразделения.",
				"Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 10 Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Задан ИНН организации, обособленного подразделения, не состоящий из 10 цифр.",
				"Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КПП) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Не задан КПП организации, обособленного подразделения.",
				"Титульный", "КПП");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.КПП) <> 9 Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Задан КПП организации, обособленного подразделения, не состоящий из 9 символов.",
				"Титульный", "КПП");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимОрг) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Не задано наименование организации, обособленного подразделения.",
				"Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
	Иначе
		Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
			Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
				ИП_ГлаваКФХ = " главы крестьянского (фермерского) хозяйства";
			Иначе
				ИП_ГлаваКФХ = " индивидуального предпринимателя";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
				ОписаниеОшибки = "Не задан ИНН" + ИП_ГлаваКФХ + ".";
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, ОписаниеОшибки,
					"Титульный", "ИНН");
				СтатусПроверки = Ложь;
			Иначе
				ТекстСообщения = "";
				Если НЕ ИННФЛСоответствуетТребованиям(ПараметрыВыгрузки.ИННОрг, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задан ИНН" + ИП_ГлаваКФХ + "."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ИНН");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Фамилия);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана фамилия" + ИП_ГлаваКФХ + ".",
				"Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задана фамилия" + ИП_ГлаваКФХ + "."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Имя);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задано имя" + ИП_ГлаваКФХ + ".",
				"Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано имя" + ИП_ГлаваКФХ + "."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Отчество);
			Если ЗначениеЗаполнено(РеквизитФИО)
				И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано отчество" + ИП_ГлаваКФХ + "."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
		Иначе
			Если ПараметрыВыгрузки.ЭтоФизЛицоСИНН Тогда
				ТекстСообщения = "";
				Если НЕ ИННФЛСоответствуетТребованиям(ПараметрыВыгрузки.ИННОрг, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задан ИНН физического лица."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ИНН");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Фамилия);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана фамилия физического лица.",
				"Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задана фамилия физического лица."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Имя);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задано имя физического лица.",
				"Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано имя физического лица."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Отчество);
			Если ЗначениеЗаполнено(РеквизитФИО)
				И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано отчество физического лица."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КодНО) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задан код налогового органа.",
			"Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(ПараметрыВыгрузки.КодНО) <> 4 Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Задан код налогового органа, не состоящий из 4 цифр.",
			"Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ПоМесту) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задан код места, по которому представляется расчет.",
			"Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПоМесту.Найти(ПараметрыВыгрузки.ПоМесту) = Неопределено Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Задан некорректный код места, по которому представляется расчет.",
			"Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Период) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задан код расчетного (отчетного) периода.",
			"Титульный", "Период");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПериода.Найти(ПараметрыВыгрузки.Период) = Неопределено Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Задан некорректный код расчетного (отчетного) периода.",
			"Титульный", "Период");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ВозможныеКодыПериода.Найти(ПараметрыВыгрузки.Период) <> Неопределено Тогда
		Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
			Если Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 3
				И ПараметрыВыгрузки.Период <> "83" Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за 1 квартал, допустим код ""83"" расчетного (отчетного) периода.",
				"Титульный", "ПоМесту");
				СтатусПроверки = Ложь;
			ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 6
				И ПараметрыВыгрузки.Период <> "84" Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за полугодие, допустим код ""84"" расчетного (отчетного) периода.",
				"Титульный", "ПоМесту");
				СтатусПроверки = Ложь;
			ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 9
				И ПараметрыВыгрузки.Период <> "85" Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за 9 месяцев, допустим код ""85"" расчетного (отчетного) периода.",
				"Титульный", "ПоМесту");
				СтатусПроверки = Ложь;
			ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 12
				И ПараметрыВыгрузки.Период <> "34" И ПараметрыВыгрузки.Период <> "86" Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за год, допустимы коды ""34"", ""86"" расчетного (отчетного) периода.",
				"Титульный", "ПоМесту");
				СтатусПроверки = Ложь;
			КонецЕсли;
		ИначеЕсли ПараметрыВыгрузки.ПоМесту = "240" Тогда
			Если Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 3 Тогда
				Если ПараметрыВыгрузки.Период <> "51" Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""240"" места, по которому представляется расчет за 1 квартал, допустим код ""51"" расчетного (отчетного) периода.",
					"Титульный", "ПоМесту");
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задан код формы реорганизации (ликвидации) при коде ""240"" места, по которому представляется расчет за 1 квартал.",
					"Титульный", "КодФормыРеорганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
			ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 6 Тогда
				Если ПараметрыВыгрузки.Период <> "52" Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""240"" места, по которому представляется расчет за полугодие, допустим код ""52"" расчетного (отчетного) периода.",
					"Титульный", "ПоМесту");
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задан код формы реорганизации (ликвидации) при коде ""240"" места, по которому представляется расчет за полугодие.",
					"Титульный", "КодФормыРеорганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
			ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 9 Тогда
				Если ПараметрыВыгрузки.Период <> "53" Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""240"" места, по которому представляется расчет за 9 месяцев, допустим код ""53"" расчетного (отчетного) периода.",
					"Титульный", "ПоМесту");
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задан код формы реорганизации (ликвидации) при коде ""240"" места, по которому представляется расчет за 9 месяцев.",
					"Титульный", "КодФормыРеорганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ОКВЭД) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задан код по ОКВЭД2.", "Титульный", "ОКВЭД");
		СтатусПроверки = Ложь;
	ИначеЕсли НЕ РегламентированнаяОтчетностьКлиентСервер.ОКВЭДСоответствуетТребованиям(
		ПараметрыВыгрузки.ОКВЭД) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Задан некорректный код по ОКВЭД2. Допустимы значения, соответствующие шаблонам: ""XX"", ""XX.X"", ""XX.XX"", ""XX.XX.X"", ""XX.XX.XX"" (X - любая цифра).",
			"Титульный", "ОКВЭД");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПараметрыВыгрузки.ПрПодп = "2" ИЛИ (ПараметрыВыгрузки.ЭтоЮЛ И ПараметрыВыгрузки.ПрПодп = "1") Тогда
		ТекстСообщения = "";
		РеквизитФИО = СокрЛП(ПараметрыВыгрузки.ФамилияПодписанта);
		Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана фамилия подписанта.",
			"Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задана фамилия подписанта."
			+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
		ТекстСообщения = "";
		РеквизитФИО = СокрЛП(ПараметрыВыгрузки.ИмяПодписанта);
		Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задано имя подписанта.",
			"Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано имя подписанта."
			+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
		ТекстСообщения = "";
		РеквизитФИО = СокрЛП(ПараметрыВыгрузки.ОтчествоПодписанта);
		Если ЗначениеЗаполнено(РеквизитФИО)
			И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано отчество подписанта."
			+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если ПараметрыВыгрузки.ПрПодп = "2" И НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимДокПред) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задано наименование документа, подтверждающего полномочия представителя плательщика страховых взносов.",
			"Титульный", "ДокУпПред");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.ИННРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.КППРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Не задан код формы реорганизации (ликвидации).",
				"Титульный", "КодФормыРеорганизации");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг)
			И ПараметрыВыгрузки.ФормРеорг <> "0" Тогда
			Если ВозможныеКодыФормыРеорганизции.Найти(ПараметрыВыгрузки.ФормРеорг) = Неопределено Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное значение кода формы реорганизации (ликвидации).",
					"Титульный", "КодФормыРеорганизации");
				СтатусПроверки = Ложь;
			Иначе
				ДлинаИННРеорг = СтрДлина(ПараметрыВыгрузки.ИННРеорг);
				Если ДлинаИННРеорг <> 10 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не" + ?(ДлинаИННРеорг = 0, "", "верно")
						+ " задан ИНН реорганизованной организации.",
						"Титульный", "ИННРеорганизованнойОрганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
				ДлинаКППРеорг = СтрДлина(ПараметрыВыгрузки.КППРеорг);
				Если ДлинаКППРеорг <> 9 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не" + ?(ДлинаКППРеорг = 0, "", "верно")
						+ " задан КПП реорганизованной организации.",
						"Титульный", "КППРеорганизованнойОрганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаполненРаздел(ИмяФормы,
						ДанныеМногоуровневыхРазделов.Раздел3,
						"Раздел3",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ДатаПодписи) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана дата подписи.",
				"Титульный", "ДатаПодписи");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Сведения о физическом лице, не являющемся индивидуальным предпринимателем.
	Если ПараметрыВыгрузки.ЭтоФизЛицоБезИНН Тогда
		
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ДатаРожд) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана дата рождения.",
				"ФизЛицо", "ДатаРождения");
			СтатусПроверки = Ложь;
		ИначеЕсли ПараметрыВыгрузки.ДатаРожд_Дата > ПараметрыВыгрузки.ДатаДок_Дата Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, задана дата рождения, превышающая текущую.",
				"ФизЛицо", "ДатаРождения");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.МестоРожд) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задано место рождения.",
				"ФизЛицо", "МестоРождения");
			СтатусПроверки = Ложь;
		КонецЕсли;
		ДлинаОКСМ = СтрДлина(ПараметрыВыгрузки.ОКСМ);
		Если ДлинаОКСМ <> 3 Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
				+ ?(ДлинаОКСМ = 0, "", "верно") + " задан код страны гражданства.",
				"ФизЛицо", "КодСтраныГражданства");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ДлинаКодВидДок = СтрДлина(ПараметрыВыгрузки.УдЛичнКодВидДок);
		Если ДлинаКодВидДок <> 2 Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
				+ ?(ДлинаКодВидДок = 0, "", "верно") + " задан код вида документа.",
				"ФизЛицо", "КодВидаДокумента");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнСерДок) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана серия документа.",
				"ФизЛицо", "СерияДокумента");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнНомДок) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задан номер документа.",
				"ФизЛицо", "НомерДокумента");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнСерДок)
			И ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнНомДок) Тогда
			УдЛичнСерНомДок = ПараметрыВыгрузки.УдЛичнСерДок + " " + ПараметрыВыгрузки.УдЛичнНомДок;
			Если СтрДлина(УдЛичнСерНомДок) > 25 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, заданы серия и номер документа, в совокупности состоящие более чем из 24 символов.",
					"ФизЛицо", "СерияДокумента");
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнВыдДок) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задано наименование органа, выдавшего документ.",
				"ФизЛицо", "КемВыданДокумент");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнДатаДок) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана дата выдачи документа.",
				"ФизЛицо", "ДатаВыдачи");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ДлинаКодРегион = СтрДлина(ПараметрыВыгрузки.КодРегион);
		Если ДлинаКодРегион <> 2 Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
				+ ?(ДлинаКодРегион = 0, "", "верно") + " задан код региона.", "ФизЛицо", "АдресКодРегиона");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ПарамПроверки = Новый Структура;
	ПарамПроверки.Вставить("ИмяФормы", ИмяФормы);
	
	// Раздел 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1;
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ЭтоПБОЮЛ", ПараметрыВыгрузки.ЭтоПБОЮЛ);
	Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
		ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
		ДопПараметры.Вставить("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1");
	КонецЕсли;
	ЗаполненРаздел1 = ЗаполненРаздел1(ИмяФормы,
									  ДанныеМногоуровневыхРазделов,
									  СтруктураРеквизитовФормы,
									  СтруктураМногоуровневыхРазделов,
									  ДопПараметры);
	Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") ИЛИ ЗаполненРаздел1 Тогда
		
		НомерСтраницы = 1;
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		
		Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240")
			И НЕ ЗаполненРаздел(ИмяФормы,
								ДеревоРаздела,
								"Раздел1",
								СтруктураРеквизитовФормы,
								СтруктураМногоуровневыхРазделов) Тогда
			
			ИмяПоказателя = ?(ЗначениеЗаполнено(СокрЛП(Данные["П000010001001"])),
			"П000010002001", "П000010001001");
			
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Раздел 1 не заполнен.", "Раздел1", ИмяПоказателя, НомерСтраницы);
			СтатусПроверки = Ложь;
			
		Иначе
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000010001001"]));
			Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
					+ " задан код по ОКТМО.",
					"Раздел1", "П000010001001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000010002001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел1", "П000010002001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000010003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010003101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010003201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010003301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000010004001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел1", "П000010004001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000010005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010005201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010005301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М1];
			ИмяПокКБК = "П00001М106001";
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107001"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107101"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107201"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107301"]) Тогда
					
					Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Раздел 1: в строке " + Инд + " группы строк 060-073 не"
							+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации.",
							"Раздел1", ИмяПокКБК + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
					
					ПроверитьПоказательНаНеотрицательность("П00001М107001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М107101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М107201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М107301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЕсли;
			КонецЦикла;
			
			ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М2];
			ИмяПокКБК = "П00001М208001";
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209001"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209101"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209201"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209301"]) Тогда
					
					Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Раздел 1: в строке " + Инд + " группы строк 080-093 не"
							+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации.",
							"Раздел1", ИмяПокКБК + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
					
					ПроверитьПоказательНаНеотрицательность("П00001М209001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М209101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М209201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М209301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЕсли;
			КонецЦикла;
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000010010001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 100 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел1", "П000010010001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные", Данные);
			
			ПроверитьПоказательНаНеотрицательность("П000010011001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010011101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010011201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010011301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000010012001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010012101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010012201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010012301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЕсли;
		
		// Приложение 1 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил1;
		Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
			
			Данные = СтраницаРаздела.Данные;
			НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
			
			КодТарифаДлина = СтрДлина(СокрЛП(Данные["П000110000101"]));
			Если НЕ КодТарифаДлина = 2 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
					+ ": в строке 001 не" + ?(КодТарифаДлина = 0, "", "верно")
					+ " задан код тарифа плательщика.",
					"Раздел1Прил1", "П000110000101", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			// Подразделы 1.1 и 1.2 приложения 1 к разделу 1.
			КоординатыПодраздела = НомерСтраницы + ",1,1";
			
			ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_1и1_2");
			ПарамПроверки.Вставить("Данные",               СтраницаРаздела.Строки[0].Строки[0].Данные);
			ПарамПроверки.Вставить("НомерСтраницы",        НомерСтраницы);
			ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
			
			// Подраздел 1.1 приложения 1 к разделу 1.
			ПроверитьПоказательНаНеотрицательность("П011110003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005105", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110006101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006105", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110006201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006202", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006205", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			// Подраздел 1.2 приложения 1 к разделу 1.
			ПроверитьПоказательНаНеотрицательность("П011120003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011120004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011120005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011120006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			// Подраздел 1.3.1 приложения 1 к разделу 1.
			ЗаполненПодраздел = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11131М1;
			ДанныеМнЧ = СтраницаРаздела.Строки[1].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ЗаполненПодраздел Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					КоординатыПодраздела = НомерСтраницы + ",2," + НомерСтроки;
					
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11131М100101"]);
					Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.1: в строке " + НомерСтроки
							+ " группы строк 001-050 не" + ?(ЗначениеПоказателя = "", "", "верно")
							+ " задан признак основания исчисления сумм страховых взносов по дополнительному тарифу.",
							"Раздел1Прил1Подр1_3_1", "П11131М100101_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_1");
					ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 1.3.2 приложения 1 к разделу 1.
			ЗаполненПодраздел = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11132М1;
			ДанныеМнЧ = СтраницаРаздела.Строки[2].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ЗаполненПодраздел Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					КоординатыПодраздела = НомерСтраницы + ",3," + НомерСтроки;
					
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100101"]);
					Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно") + " задан код основания исчисления.",
							"Раздел1Прил1Подр1_3_2", "П11132М100101_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100201"]);
					Если МассивСтрок1_3.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно") + " задано основание заполнения.",
							"Раздел1Прил1Подр1_3_2", "П11132М100201_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100301"]);
					Если МассивСтрок1_5.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно") + " задан код класса условий труда.",
							"Раздел1Прил1Подр1_3_2", "П11132М100301_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_2");
					ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 1.4 приложения 1 к разделу 1.
			ЗаполненПодраздел = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы1114М1;
			ДанныеМнЧ = СтраницаРаздела.Строки[3].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ЗаполненПодраздел Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					КоординатыПодраздела = НомерСтраницы + ",4," + НомерСтроки;
					
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П01114М100101"]);
					Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.4: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно")
							+ " задан код основания исчисления страховых взносов на дополнительное социальное обеспечение.",
							"Раздел1Прил1Подр1_4", "П01114М100101_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_4");
					ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		// Приложение 2 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил2;
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил2");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПризнакВыплат = СокрЛП(Данные["П000120000101"]);
		Если МассивСтрок1_2.Найти(ПризнакВыплат) = Неопределено Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 2 к Разделу 1: в строке 001 не"
				+ ?(ПризнакВыплат = "", "", "верно") + " задан признак выплат.",
				"Раздел1Прил2", "П000120000101", НомерСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ПроверитьПоказательНаНеотрицательность("П000120002001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005105", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005202", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005205", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005302", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005303", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005304", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005305", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005401", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005402", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005403", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005404", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005405", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120007001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120008001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		Для НомГрафы = 1 По 9 Цикл
			Признак = СокрЛП(Данные["П00012000900" + НомГрафы]);
			Если МассивСтрок1_2.Найти(Признак) = Неопределено Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 2 к Разделу 1: в графе " + НомГрафы
					+ " строки 090 не" + ?(Признак = "", "", "верно") + " задан признак.",
					"Раздел1Прил2", "П00012000900" + НомГрафы, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			НомГрафы = НомГрафы + 1;
		КонецЦикла;
		
		ПроверитьПоказательНаНеотрицательность("П000120009002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009006", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009008", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009010", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 3 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил3;
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоРаздела,
						"Раздел1Прил3",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил3");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000130001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130001103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130001104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130002103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130007003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130008003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130009003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130010003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130010004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130011003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130011004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 4 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил4;
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоРаздела,
						"Раздел1Прил4",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил4");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000140001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140002004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140009004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140010004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140011004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140012004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140013004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140014004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140015004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140016004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140017004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140018004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140019004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140020004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140021004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140022004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140023004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140024004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140025004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140026004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140027004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140028004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140029004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140030004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140031004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложения 5, 6 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил5_6;
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоРаздела,
						"Раздел1Прил5_6",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил5_6");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		Если НЕ ЗначениеЗаполнено(Данные["П000150005002"]) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 5 к Разделу 1: не задана дата записи в реестре аккредитованных организаций.",
				"Раздел1Прил5_6", "П000150005002", НомерСтраницы);
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000150005002"]) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 5 к Разделу 1: задана дата записи в реестре аккредитованных организаций, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
				"Раздел1Прил5_6", "П000150005002", НомерСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000150005003"])) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 5 к Разделу 1: не задан номер записи в реестре аккредитованных организаций.",
				"Раздел1Прил5_6", "П000150005003", НомерСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ПроверитьПоказательНаНеотрицательность("П000150002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000160006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000160007002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000160008002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 7 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил7;
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоРаздела,
						"Раздел1Прил7",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил7");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000170001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170002001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 8 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил8;
	Если ПараметрыВыгрузки.ЭтоПБОЮЛ И ЗаполненРаздел(ИмяФормы,
													 ДеревоРаздела,
													 "Раздел1Прил8",
										   			 СтруктураРеквизитовФормы,
										   			 СтруктураМногоуровневыхРазделов) Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил8");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000180001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
			НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00018М102001"])) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не задан номер патента.",
					"Раздел1Прил8", "П00018М102001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ВидДеятПатентДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные["П00018М103001"]));
			Если НЕ ВидДеятПатентДлина = 6 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не" + ?(ВидДеятПатентДлина = 0, "", "верно")
					+ " задан код вида предпринимательской деятельности, установленный законодательством субъекта Российской Федерации, указанный в заявлении на получение патента.",
					"Раздел1Прил8", "П00018М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М104001"]) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не задана дата начала действия.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00018М104001"]) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 задана дата начала действия, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М105001"]) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не задана дата окончания действия.",
					"Раздел1Прил8", "П00018М105001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00018М105001"]) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 задана дата окончания действия, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М104001"])
				И ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М105001"])
				И СтрокаМнЧ.Данные["П00018М104001"] > СтрокаМнЧ.Данные["П00018М105001"] Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 дата начала действия не должна быть больше даты окончания действия.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
			ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
			
			ПроверитьПоказательНаНеотрицательность("П00018М106001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Приложение 9 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил9;
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоРаздела,
						"Раздел1Прил9",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил9");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000190001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
			НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
			
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М102001"]);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 не задана фамилия иностранного гражданина (лица без гражданства).",
				"Раздел1Прил9", "П00019М102001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 неверно задана фамилия иностранного гражданина (лица без гражданства)."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
				"Раздел1Прил9", "П00019М102001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М103001"]);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 не задано имя иностранного гражданина (лица без гражданства).",
				"Раздел1Прил9", "П00019М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 неверно задано имя иностранного гражданина (лица без гражданства)."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
				"Раздел1Прил9", "П00019М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М104001"]);
			Если ЗначениеЗаполнено(РеквизитФИО)
				И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 неверно задано отчество иностранного гражданина (лица без гражданства)."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
				"Раздел1Прил9", "П00019М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ИННИностр = СокрЛП(СтрокаМнЧ.Данные["П00019М105001"]);
			Если ЗначениеЗаполнено(ИННИностр) Тогда
				ТекстСообщения = "";
				Если НЕ ИННФЛСоответствуетТребованиям(ИННИностр, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 неверно задан ИНН иностранного гражданина (лица без гражданства)."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил9", "П00019М105001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			ТекстСообщения = "";
			СНИЛС = СокрЛП(СтрокаМнЧ.Данные["П00019М106001"]);
			Если ЗначениеЗаполнено(СНИЛС) И НЕ СНИЛССоответствуетТребованиям(СНИЛС, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 неверно задан СНИЛС иностранного гражданина (лица без гражданства)."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
				"Раздел1Прил9", "П00019М106001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М107001"])) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 не задано гражданство (код страны) иностранного гражданина (лица без гражданства).",
					"Раздел1Прил9", "П00019М107001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
			ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
			
			ПроверитьПоказательНаНеотрицательность("П00019М108001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Приложение 10 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил10;
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоРаздела,
						"Раздел1Прил10",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил10");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П001100001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
		
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М1;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
			НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
			
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00110М103001"]);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
				+ НомерСтроки + " группы строк 020-140 не задана фамилия обучающегося.",
				"Раздел1Прил10", "П00110М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
				+ НомерСтроки + " группы строк 020-140 неверно задана фамилия обучающегося."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
				"Раздел1Прил10", "П00110М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00110М104001"]);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
				+ НомерСтроки + " группы строк 020-140 не задано имя обучающегося.",
				"Раздел1Прил10", "П00110М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
				+ НомерСтроки + " группы строк 020-140 неверно задано имя обучающегося."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
				"Раздел1Прил10", "П00110М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00110М105001"]);
			Если ЗначениеЗаполнено(РеквизитФИО)
				И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
				+ НомерСтроки + " группы строк 020-140 неверно задано отчество обучающегося."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
				"Раздел1Прил10", "П00110М105001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			СправкаСтудОтрядНомер = СокрЛП(СтрокаМнЧ.Данные["П00110М106001"]);
			СправкаСтудОтрядДата  = СтрокаМнЧ.Данные["П00110М107001"];
			СправкаОчноеОбучНомер = СокрЛП(СтрокаМнЧ.Данные["П00110М108001"]);
			СправкаОчноеОбучДата  = СтрокаМнЧ.Данные["П00110М109001"];
			Если (ЗначениеЗаполнено(СправкаСтудОтрядНомер)
				ИЛИ ЗначениеЗаполнено(СправкаСтудОтрядДата))
				И (ЗначениеЗаполнено(СправкаОчноеОбучНомер)
				ИЛИ ЗначениеЗаполнено(СправкаОчноеОбучДата)) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 одновременно заданы сведения из справки, подтверждающих членство в студенческом отряде, и сведения из справки, подтверждающих очную форму обучения.",
					"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли ЗначениеЗаполнено(СправкаСтудОтрядНомер)
				ИЛИ ЗначениеЗаполнено(СправкаСтудОтрядДата) Тогда
				Если НЕ ЗначениеЗаполнено(СправкаСтудОтрядНомер) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, не задан номер.",
						"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СправкаСтудОтрядДата) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, не задана дата.",
						"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СправкаСтудОтрядДата) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, задана дата, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
						"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(СправкаОчноеОбучНомер)
				ИЛИ ЗначениеЗаполнено(СправкаОчноеОбучДата) Тогда
				Если НЕ ЗначениеЗаполнено(СправкаОчноеОбучНомер) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, не задан номер.",
						"Раздел1Прил10", "П00110М108001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СправкаОчноеОбучДата) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, не задана дата.",
						"Раздел1Прил10", "П00110М109001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СправкаОчноеОбучДата) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, задана дата, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
						"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			Иначе
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 необходимо задать сведения из справки, подтверждающих членство в студенческом отряде, или сведения из справки, подтверждающих очную форму обучения.",
					"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
			ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
			
			ПроверитьПоказательНаНеотрицательность("П00110М110001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			Для Каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
				НомерПодчСтроки = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
				
				Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПодчМнЧ.Данные["П00110М212001"])) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1 -> Строка " + НомерСтроки
						+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задано наименование молодежного и детского объединения.",
						"Раздел1Прил10", "П00110М212001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СтрокаПодчМнЧ.Данные["П00110М213001"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1 -> Строка " + НомерСтроки
						+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задана дата записи в реестре.",
						"Раздел1Прил10", "П00110М213001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПодчМнЧ.Данные["П00110М214001"])) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1 -> Строка " + НомерСтроки
						+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задан номер записи в реестре.",
						"Раздел1Прил10", "П00110М214001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Раздел 2.
	ДеревоРаздела2 = ДанныеМногоуровневыхРазделов.Раздел2;
	Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
		
		НомерСтраницы = 1;
		
		Если НЕ ЗаполненРаздел(ИмяФормы,
							   ДеревоРаздела2,
							   "Раздел2",
							   СтруктураРеквизитовФормы,
							   СтруктураМногоуровневыхРазделов) Тогда
			
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Раздел 2 не заполнен.", "Раздел2", "П000020001001", НомерСтраницы);
			СтатусПроверки = Ложь;
			
		Иначе
			
			Данные = ДеревоРаздела2.Строки[0].Данные;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел2");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000020001001"]));
			Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 2: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
					+ " задан код по ОКТМО.",
					"Раздел2", "П000020001001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000020002001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 2: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел2", "П000020002001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000020003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000020004001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 2: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел2", "П000020004001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000020005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ДанныеМнЧ = ДеревоРаздела2.Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы21М1];
			
			ИмяПокФамилияФЛ = "П00021М101001";
			ИмяПокИмяФЛ     = "П00021М102001";
			ИмяПокОтчФЛ     = "П00021М103001";
			ИмяПокИННФЛ     = "П00021М104001";
			ИмяПокСНИЛС     = "П00021М105001";
			ИмяПокГодРожд   = "П00021М106001";
			ИмяПокДатаНач   = "П00021М107001";
			ИмяПокДатаКон   = "П00021М108001";
			
			Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				
				Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокФамилияФЛ]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не задана фамилия члена крестьянского (фермерского) хозяйства.",
					"Раздел2", ИмяПокФамилияФЛ + "_" + Инд);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 неверно задана фамилия члена крестьянского (фермерского) хозяйства."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел2", ИмяПокФамилияФЛ + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокИмяФЛ]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не задано имя члена крестьянского (фермерского) хозяйства.",
					"Раздел2", ИмяПокИмяФЛ + "_" + Инд);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 неверно задано имя члена крестьянского (фермерского) хозяйства."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел2", ИмяПокИмяФЛ + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокОтчФЛ]);
				Если ЗначениеЗаполнено(РеквизитФИО)
					И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 неверно задано отчество члена крестьянского (фермерского) хозяйства."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел2", ИмяПокОтчФЛ + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ИННФЛ = СокрЛП(СтрокаМнЧ.Данные[ИмяПокИННФЛ]);
				Если ЗначениеЗаполнено(ИННФЛ) Тогда
					ТекстСообщения = "";
					Если НЕ ИННФЛСоответствуетТребованиям(ИННФЛ, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 неверно задан ИНН члена крестьянского (фермерского) хозяйства."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел2", ИмяПокИННФЛ + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				ТекстСообщения = "";
				СНИЛС = СокрЛП(СтрокаМнЧ.Данные[ИмяПокСНИЛС]);
				Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не задан задан СНИЛС члена крестьянского (фермерского) хозяйства.",
					"Раздел2", ИмяПокСНИЛС + "_" + Инд);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ СНИЛССоответствуетТребованиям(СтрокаМнЧ.Данные[ИмяПокСНИЛС], ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 неверно задан задан СНИЛС члена крестьянского (фермерского) хозяйства."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел2", ИмяПокСНИЛС + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ГодРождДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокГодРожд]));
				Если НЕ ГодРождДлина = 4 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не" + ?(ГодРождДлина = 0, "", "верно")
						+ " задан год рождения члена крестьянского (фермерского) хозяйства.",
						"Раздел2", ИмяПокГодРожд + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не задана дата начала периода членства в крестьянском (фермерском) хозяйстве в расчетный период.",
						"Раздел2", ИмяПокДатаНач + "_" + Инд);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные[ИмяПокДатаНач],
					СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала,
					СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 задана дата начала периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода.",
						"Раздел2", ИмяПокДатаНач + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не задана дата окончания периода членства в крестьянском (фермерском) хозяйстве в расчетный период.",
						"Раздел2", ИмяПокДатаКон + "_" + Инд);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные[ИмяПокДатаКон],
					СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала,
					СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 задана дата окончания периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода.",
						"Раздел2", ИмяПокДатаКон + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач])
					И ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон])
					И СтрокаМнЧ.Данные[ИмяПокДатаНач] > СтрокаМнЧ.Данные[ИмяПокДатаКон] Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 дата начала периода членства в крестьянском (фермерском) хозяйстве не должна быть больше даты окончания.",
						"Раздел2", ИмяПокДатаКон + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
				ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
				
				ПроверитьПоказательНаНеотрицательность("П00021М109001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00021М109002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Раздел 3.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел3;
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоРаздела,
						"Раздел3",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами = Новый Массив;
		
		ТаблПорядковыхНомеров = Новый ТаблицаЗначений;
		ТаблПорядковыхНомеров.Колонки.Добавить("ПорядковыйНомер");
		ТаблПорядковыхНомеров.Колонки.Добавить("ИндексСтраницы");
		ТаблПорядковыхНомеров.Колонки.Добавить("СчетчикСтраниц");
		
		Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
			
			// Подраздел 3.1.
			Данные = СтраницаРаздела.Данные;
			НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
			
			СтруктПарам = Новый Структура;
			СтруктПарам.Вставить("ПроверкаВыгрузкиСтраницы");
			СтруктПарам.Вставить("Фам", Данные.П000310008001);
			СтруктПарам.Вставить("Имя", Данные.П000310009001);
			СтруктПарам.Вставить("Отч", Данные.П000310010001);
			СтруктПарам.Вставить("ДатаРожд", Данные.П000310011001);
			СтруктПарам.Вставить("НомерСтраницы", НомерСтраницы);
			ПредстСтраницы = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел3");
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПорядковыйНомер = СокрЛП(Данные["П000030004001"]);
			Если НЕ ЗначениеЗаполнено(ПорядковыйНомер) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 040 не задан номер.",
				"Раздел3", "П000030004001", НомерСтраницы);
				СтатусПроверки = Ложь;
			Иначе
				НоваяСтрокаТаблПорядковыхНомеров = ТаблПорядковыхНомеров.Добавить();
				НоваяСтрокаТаблПорядковыхНомеров.ПорядковыйНомер = ПорядковыйНомер;
				НоваяСтрокаТаблПорядковыхНомеров.ИндексСтраницы = ДеревоРаздела.Строки.Индекс(СтраницаРаздела);
				НоваяСтрокаТаблПорядковыхНомеров.СчетчикСтраниц = 1;
			КонецЕсли;
			ИННФЛ = СокрЛП(Данные["П000310006001"]);
			Если ЗначениеЗаполнено(ИННФЛ) Тогда
				ТекстСообщения = "";
				Если НЕ ИННФЛСоответствуетТребованиям(ИННФЛ, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 060 неверно задан ИНН физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310006001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			ТекстСообщения = "";
			СНИЛС = СокрЛП(Данные["П000310007001"]);
			Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 070 не задан СНИЛС физического лица.", "Раздел3", "П000310007001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ СНИЛССоответствуетТребованиям(Данные["П000310007001"], ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 070 неверно задан СНИЛС физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
				" " + ТекстСообщения, ""), "Раздел3", "П000310007001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;

			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(Данные["П000310008001"]);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 080 не задана фамилия физического лица.", "Раздел3", "П000310008001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 080 неверно задана фамилия физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
				" " + ТекстСообщения, ""), "Раздел3", "П000310008001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(Данные["П000310009001"]);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Раздел 3 -> " + ПредстСтраницы + ": в строке 090 не задано имя физического лица.",
				"Раздел3", "П000310009001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 090 неверно задано имя физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
				" " + ТекстСообщения, ""), "Раздел3", "П000310009001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(Данные["П000310010001"]);
			Если ЗначениеЗаполнено(РеквизитФИО)
				И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 100 неверно задано отчество физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
				" " + ТекстСообщения, ""), "Раздел3", "П000310010001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Данные["П000310011001"]) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 110 не задана дата рождения физического лица.", "Раздел3", "П000310011001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000310011001"], , ПараметрыВыгрузки.ДатаДок_Дата) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 110 задана дата рождения физического лица, выходящая за пределы периода с 01.01.1900 по "
				+ Формат(ПараметрыВыгрузки.ДатаДок_Дата, "ДФ=дд.ММ.гггг") + ".", "Раздел3", "П000310011001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310012001"])) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 120 не задано гражданство (код страны) физического лица.",
				"Раздел3", "П000310012001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310013001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 130 не"
				+ ?(ЗначениеПоказателя = "", "", "верно") + " задан пол.", "Раздел3", "П000310013001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			КодВидДокДлина = СтрДлина(СокрЛП(Данные["П000310014001"]));
			Если НЕ КодВидДокДлина = 2 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 140 не"
				+ ?(КодВидДокДлина = 0, "", "верно") + " задан код вида документа, удостоверяющего личность.",
				"Раздел3", "П000310014001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310015001"]))
				ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015002"]))) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 150 не заданы серия и номер документа, удостоверяющего личность.",
				"Раздел3", "П000310015001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(СокрЛП(Данные["П000310015001"]) + СокрЛП(Данные["П000310015002"])) > 24 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 150 общее количество символов в серии и номере документа, удостоверяющего личность, превышает 24.",
				"Раздел3", "П000310015001", НомерСтраницы);
				СтатусПроверки = Ложь;
			Иначе
				ТекстСообщения = "";
				Если НЕ СерияНомерДокументаСоответствуютТребованиям(
					Данные["П000310014001"], Данные["П000310015001"], Данные["П000310015002"], ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 150 неверно заданы серия и номер документа, удостоверяющего личность."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел3",
					?(ЗначениеЗаполнено(Данные["П000310015001"]), "П000310015001", "П000310015002"), НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310016001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 160 не" + ?(ЗначениеПоказателя = "", "", "верно")
				+ " задан признак застрахованного лица в системе обязательного пенсионного страхования.",
				"Раздел3", "П000310016001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310017001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 170 не" + ?(ЗначениеПоказателя = "", "", "верно")
				+ " задан признак застрахованного лица в системе обязательного медицинского страхования.",
				"Раздел3", "П000310017001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310018001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
				+ ": в строке 180 не" + ?(ЗначениеПоказателя = "", "", "верно")
				+ " задан признак застрахованного лица в системе обязательного социального страхования.",
				"Раздел3", "П000310018001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			// Проверка в подразделе 3.2.
			ЗаполненПодраздел321 = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы321М1;
			ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел321 = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			ЗаполненПодраздел322 = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы322М1;
			ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел322 = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			// Подраздел 3.2.1.
			Если ЗаполненПодраздел321 ИЛИ ЗаполненПодраздел322 Тогда
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00321М119001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
						+ " группы строк 190-240 не задан месяц.", "Раздел3", "П00321М119001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					КодКатегорииЗЛ = СокрЛП(СтрокаМнЧ.Данные["П00321М120001"]);
					Если НЕ ЗначениеЗаполнено(КодКатегорииЗЛ) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
						+ " группы строк 190-240 не задан код категории застрахованного лица.",
						"Раздел3", "П00321М120001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(КодКатегорииЗЛ) < 2 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
						+ " группы строк 190-240 задан код категории застрахованного лица, состоящий менее чем из 2 символов.",
						"Раздел3", "П00321М120001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П00321М121001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00321М122001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00321М123001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00321М124001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные", Данные);
			ПроверитьПоказательНаНеотрицательность("П003210025001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003210025002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003210025003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003210025004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			// Подраздел 3.2.2.
			Если ЗаполненПодраздел322 Тогда
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00322М126001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
						+ " группы строк 260-290 не задан месяц.", "Раздел3", "П00322М126001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					КодТарифа = СокрЛП(СтрокаМнЧ.Данные["П00322М127001"]);
					Если НЕ ЗначениеЗаполнено(КодТарифа) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
						+ " группы строк 260-290 не задан код тарифа.", "Раздел3", "П00322М127001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(КодТарифа) < 2 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
						+ " группы строк 260-290 задан код тарифа, не состоящий из 2 символов.",
						"Раздел3", "П00322М127001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П00322М128001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00322М129001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные", Данные);
			ПроверитьПоказательНаНеотрицательность("П003220030001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003220030002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЦикла;
		
		ТаблПорядНом = ТаблПорядковыхНомеров.Скопировать();
		ТаблПорядНом.Свернуть("ПорядковыйНомер", "СчетчикСтраниц");
		
		ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = Неопределено;
		
		Если ТаблПорядковыхНомеров.Количество() <> ТаблПорядНом.Количество() Тогда
			
			Для каждого СтрокаТаблПорядНом Из ТаблПорядНом Цикл
				
				Если СтрокаТаблПорядНом.СчетчикСтраниц > 1 Тогда
					
					СтрокиТаблПорядковыхНомеров = ТаблПорядковыхНомеров.НайтиСтроки(
					Новый Структура("ПорядковыйНомер", СтрокаТаблПорядНом.ПорядковыйНомер));
					
					Для каждого СтрокаТаблПорядковыхНомеров Из СтрокиТаблПорядковыхНомеров Цикл
						
						Данные = ДеревоРаздела.Строки[СтрокаТаблПорядковыхНомеров.ИндексСтраницы].Данные;
						
						СтруктПарам = Новый Структура;
						СтруктПарам.Вставить("Фам", Данные.П000310008001);
						СтруктПарам.Вставить("Имя", Данные.П000310009001);
						СтруктПарам.Вставить("Отч", Данные.П000310010001);
						СтруктПарам.Вставить("ДатаРожд", Данные.П000310011001);
						СтруктПарам.Вставить("НомерСтраницы", СтрокаТаблПорядковыхНомеров.ИндексСтраницы + 1);
						ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами.Добавить(
						"""" + РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам) + """");
						
						Если ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = Неопределено Тогда
							ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = СтрокаТаблПорядковыхНомеров.ИндексСтраницы;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами.Количество() > 0 Тогда
			
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Раздел 3: заданы неуникальные значения строки 040 на страницах "
				+ СтрСоединить(ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами, ", ") + ".",
				"Раздел3", "П000030004001", Формат(ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером + 1, "ЧГ="));
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтатусПроверки;
	
КонецФункции

Функция ИННФЛСоответствуетТребованиям(Знач ИНН, ТекстСообщения)
	
	Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, Ложь, ТекстСообщения) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Символы12 = Лев(ИНН, 2);
	
	Если Символы12 = "00"
		ИЛИ Символы12 = "90"
		ИЛИ Символы12 = "93"
		ИЛИ Символы12 = "94"
		ИЛИ Символы12 = "95"
		ИЛИ Символы12 = "96"
		ИЛИ Символы12 = "98" Тогда
		
		ТекстСообщения = НСтр(
		"ru = 'Не допустимы следующие значения в двух первых разрядах ИНН: ""00"", ""90"", ""93"", ""94"", ""95"", ""96"", ""98"".'");
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция СНИЛССоответствуетТребованиям(Знач СНИЛС, ТекстСообщения)
	
	ТекстСообщенияОбщий = НСтр(
	"ru='СНИЛС должен соответствовать одному из шаблонов: ""ХХХ-ХХХ-ХХХ-ХХ"", ""ХХХ-ХХХ-ХХХ ХХ"" (X - любая цифра).'");
	
	СНИЛС = СокрЛП(СНИЛС);
	
	Если СтрДлина(СНИЛС) <> 14 Тогда
		
		ТекстСообщения = ТекстСообщенияОбщий;
		
		Возврат Ложь;
		
	Иначе
		
		Для Ном = 1 По 14 Цикл
			
			ТекСимв = Сред(СНИЛС, Ном, 1);
			
			Если Ном = 4 ИЛИ Ном = 8 Тогда
				СНИЛССоответствуетТребованиям = ТекСимв = "-";
			ИначеЕсли Ном = 12 Тогда
				СНИЛССоответствуетТребованиям = (ТекСимв = " " ИЛИ ТекСимв = "-");
			Иначе
				СНИЛССоответствуетТребованиям = СтрНайти("1234567890", ТекСимв) > 0;
			КонецЕсли;
			
			Если НЕ СНИЛССоответствуетТребованиям Тогда
				
				ТекстСообщения = ТекстСообщенияОбщий;
				
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция СерияНомерДокументаСоответствуютТребованиям(Знач ВидДок, Знач СерияДок, Знач НомерДок, ТекстСообщения)
	
	ВидДок = СокрЛП(ВидДок);
	
	Если ВидДок <> "21" Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ТекстСообщенияОбщий = НСтр(
	"ru='Серия и номер паспорта гражданина Российской Федерации должны соответствовать шаблону: ""ХХ ХХ ХХХХХХ"" (X - любая цифра).'");
	
	СерияДок = СокрЛП(СерияДок);
	НомерДок = СокрЛП(НомерДок);
	
	СерияНомерДок = СокрЛП(СерияДок + " " + НомерДок);
	
	Если СтрДлина(СерияНомерДок) <> 12 Тогда
		
		ТекстСообщения = ТекстСообщенияОбщий;
		
		Возврат Ложь;
		
	Иначе
		
		Для Ном = 1 По 12 Цикл
			
			ТекСимв = Сред(СерияНомерДок, Ном, 1);
			
			Если Ном = 3 ИЛИ Ном = 6 Тогда
				СерияНомерСоответствуютТребованиям = ТекСимв = " ";
			Иначе
				СерияНомерСоответствуютТребованиям = СтрНайти("1234567890", ТекСимв) > 0;
			КонецЕсли;
			
			Если НЕ СерияНомерСоответствуютТребованиям Тогда
				
				ТекстСообщения = ТекстСообщенияОбщий;
				
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция РеквизитФИОСоответствуетТребованиям(Знач РеквизитФИО, ТипРеквизитаФИО, ТекстСообщения)
	
	Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если ТипРеквизитаФИО = 1 Тогда
		
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(РеквизитФИО, , " -.'IV") Тогда
			
			ТекстСообщения = НСтр(
			"ru = 'Фамилия должна быть заполнена прописными (большими) и строчными (маленькими) буквами русского алфавита; допускаются прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф), "" "" (пробел).'");
			
			Возврат Ложь;
			
		КонецЕсли;
		
		РеквизитФИОДлина = СтрДлина(РеквизитФИО);
		
		Если РеквизитФИОДлина = 1 Тогда
			
			Если СтрНайти("-.'IV", РеквизитФИО) > 0 Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве единственного символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф).'");
				
				Возврат Ложь;
				
			КонецЕсли;
			
		Иначе
			
			НедопустимыйПервыйСимвол    = СтрНайти("-.'IV", Лев(РеквизитФИО, 1)) > 0;
			НедопустимыйПоследнийСимвол = СтрНайти("-.'",  Прав(РеквизитФИО, 1)) > 0;
			
			Если НедопустимыйПервыйСимвол И НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф) и не должна содержать в качестве последнего символа ""."" (точку), ""-"" (дефис), "" ’ "" (апостроф).'");
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПервыйСимвол Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф).'");
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве последнего символа ""."" (точку), ""-"" (дефис), "" ’ "" (апостроф).'");
				
				Возврат Ложь;
				
			КонецЕсли;
			
			Для Ном = 1 По РеквизитФИОДлина Цикл
				
				ТекСимв = Сред(РеквизитФИО, Ном, 1);
				
				Если Ном < РеквизитФИОДлина Тогда
					
					Если СтрНайти("-.'", ТекСимв) > 0 Тогда
						
						Если СтрНайти("-.'", Сред(РеквизитФИО, Ном + 1, 1)) > 0 Тогда
							
							ТекстСообщения = НСтр(
							"ru = 'Фамилия не должна содержать сочетание (повторение) подряд двух и более символов ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф).'");
							
							Возврат Ложь;
							
						КонецЕсли;
						
					ИначеЕсли ТекСимв = " " Тогда
						
						Если Сред(РеквизитФИО, Ном + 1, 1) = " " Тогда
							
							ТекстСообщения = НСтр(
							"ru = 'Фамилия не должна содержать сочетание (повторение) подряд двух и более символов "" "" (пробел), если они не являются начальными или конечными.'");
							
							Возврат Ложь;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		ПредставлениеРеквизитаФИО = ?(ТипРеквизитаФИО = 2, "Имя ", "Отчество ");
		
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(РеквизитФИО, , " -.'IV") Тогда
			
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1должно быть заполнено прописными (большими) и строчными (маленькими) буквами русского алфавита; допускаются прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф), "" "" (пробел).'"),
			ПредставлениеРеквизитаФИО);
			
			Возврат Ложь;
			
		КонецЕсли;
		
		РеквизитФИОДлина = СтрДлина(РеквизитФИО);
		
		Если РеквизитФИОДлина = 1 Тогда
			
			Если СтрНайти("-.'IV", РеквизитФИО) > 0 Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве единственного символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф).'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			КонецЕсли;
			
		Иначе
			
			НедопустимыйПервыйСимвол    = СтрНайти("-.'IV", Лев(РеквизитФИО, 1)) > 0;
			НедопустимыйПоследнийСимвол = СтрНайти("-'",   Прав(РеквизитФИО, 1)) > 0;
			
			Если НедопустимыйПервыйСимвол И НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф) и не должно содержать в качестве последнего символа ""-"" (дефис), "" ’ "" (апостроф).'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПервыйСимвол Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф).'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве последнего символа ""-"" (дефис), "" ’ "" (апостроф).'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			КонецЕсли;
			
			Для Ном = 1 По РеквизитФИОДлина Цикл
				
				ТекСимв = Сред(РеквизитФИО, Ном, 1);
				
				Если Ном < РеквизитФИОДлина Тогда
					
					Если СтрНайти("-.'", ТекСимв) > 0 Тогда
						
						Если СтрНайти("-.'", Сред(РеквизитФИО, Ном + 1, 1)) > 0 Тогда
							
							ТекстСообщения = СтрШаблон(НСтр(
							"ru = '%1не должно содержать сочетание (повторение) подряд двух и более символов ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф).'"),
							ПредставлениеРеквизитаФИО);
							
							Возврат Ложь;
							
						КонецЕсли;
						
					ИначеЕсли ТекСимв = " " Тогда
						
						Если Сред(РеквизитФИО, Ном + 1, 1) = " " Тогда
							
							ТекстСообщения = СтрШаблон(НСтр(
							"ru = '%1не должно содержать сочетание (повторение) подряд двух и более символов "" "" (пробел), если они не являются начальными или конечными.'"),
							ПредставлениеРеквизитаФИО);
							
							Возврат Ложь;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПроверитьПоказательНаНеотрицательность(ИмяПоказателя, ПарамПроверки, РезультатВыгрузки, СтатусПроверки)
	
	Если ПарамПроверки.Данные[ИмяПоказателя] < 0 Тогда
		
		КодСтроки = Сред(ИмяПоказателя, 9, 3);
		
		Если ПарамПроверки.ИмяРаздела = "Раздел1" Тогда
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				НомерМнЧ = Сред(ИмяПоказателя, 8, 1);
				ТекстГруппаСтрок = "";
				Если НомерМнЧ = "1" Тогда
					ТекстГруппаСтрок = "060-073";
				ИначеЕсли НомерМнЧ = "2" Тогда
					ТекстГруппаСтрок = "080-093";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 1: в строке %1 группы строк %2 значение строки с кодом %3 не должно быть отрицательным.'"),
				ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 1: в строке %1 значение не должно быть отрицательным.'"), КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
			
			НомерПодраздела = Лев(ИмяПоказателя, 6);
			ТекстНомерПодраздела = "";
			Если НомерПодраздела = "П01111" Тогда
				ТекстНомерПодраздела = "1.1";
			ИначеЕсли НомерПодраздела = "П01112" Тогда
				ТекстНомерПодраздела = "1.2";
			КонецЕсли;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Приложение 1 к разделу 1 -> Страница %1 -> Подраздел %2: в графе %3 строки %4 значение не должно быть отрицательным.'"),
			ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, Прав(ИмяПоказателя, 1), КодСтроки);
			
			СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
			ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.КоординатыПодраздела);
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
			
			ТекстНомерПодраздела = "";
			Если ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
				ТекстНомерПодраздела = "1.3.1";
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
				ТекстНомерПодраздела = "1.3.2";
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
				ТекстНомерПодраздела = "1.4";
			КонецЕсли;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Приложение 1 к разделу 1 -> Страница %1 -> Подраздел %2: в строке %3 группы строк 001-050 в графе %4 строки %5 значение не должно быть отрицательным.'"),
			ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, ПарамПроверки.НомерСтрокиМнЧ, Сред(ИмяПоказателя, 13, 1),
			КодСтроки);
			
			СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения, ПарамПроверки.ИмяРаздела,
			ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.КоординатыПодраздела);
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил2"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил3"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил4"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил5_6"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил7" Тогда
			
			ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
			
			ТекстНомерГрафы = Прав(ИмяПоказателя, 1);
			ТекстНомерГрафы = ?(ТекстНомерГрафы = "0", Прав(ИмяПоказателя, 2), ТекстНомерГрафы);
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Приложение %1 к Разделу 1: в графе %2 строки %3 значение не должно быть отрицательным.'"),
			ТекстНомерПриложения, ТекстНомерГрафы, КодСтроки);
			
			СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
			ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил8"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил9"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил10" Тогда
			
			ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
			ТекстНомерПриложения = ?(ТекстНомерПриложения = "0", Сред(ИмяПоказателя, 5, 2), ТекстНомерПриложения);
			
			ТекстСуммаВыплат = "";
			НомерГрафы = Сред(ИмяПоказателя, 13, 1);
			Если НомерГрафы = "1" Тогда
				ТекстСуммаВыплат = "всего с начала расчетного периода";
			ИначеЕсли НомерГрафы = "2" Тогда
				ТекстСуммаВыплат = "всего за последние три месяца расчетного (отчетного) периода";
			ИначеЕсли НомерГрафы = "3" Тогда
				ТекстСуммаВыплат = "за первый из последних трех месяцев расчетного (отчетного) периода";
			ИначеЕсли НомерГрафы = "4" Тогда
				ТекстСуммаВыплат = "за второй из последних трех месяцев расчетного (отчетного) периода";
			ИначеЕсли НомерГрафы = "5" Тогда
				ТекстСуммаВыплат = "за третий из последних трех месяцев расчетного (отчетного) периода";
			КонецЕсли;
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				ТекстГруппаСтрок = "";
				Если ПарамПроверки.ИмяРаздела = "Раздел1Прил8" Тогда
					ТекстГруппаСтрок = "020-060";
				ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил9" Тогда
					ТекстГруппаСтрок = "020-080";
				ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил10" Тогда
					ТекстГруппаСтрок = "020-100";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение %1 к разделу 1: в строке %2 группы строк %3 сумма выплат %4 не должна быть отрицательной.'"),
				ТекстНомерПриложения, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, ТекстСуммаВыплат);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение %1 к разделу 1: итоговая сумма выплат %2 не должна быть отрицательной.'"),
				ТекстНомерПриложения, ТекстСуммаВыплат);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел2" Тогда
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				ТекстСуммаВыплат = "";
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				Если НомерГрафы = "1" Тогда
					ТекстСуммаВыплат = "пенсионное";
				ИначеЕсли НомерГрафы = "2" Тогда
					ТекстСуммаВыплат = "медицинское";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 1 к разделу 2: в строке %1 группы строк 010-090 сумма начисленных страховых взносов на обязательное %2 страхование не должна быть отрицательной.'"),
				ПарамПроверки.НомерСтрокиМнЧ, ТекстСуммаВыплат);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 2: в строке %1 значение не должно быть отрицательным.'"), КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел3" Тогда
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				МнЧ = Лев(ИмяПоказателя, 8);
				ТекстГруппаСтрок = "";
				Если МнЧ = "П00321М1" Тогда
					ТекстГруппаСтрок = "190-240";
				ИначеЕсли МнЧ = "П00322М1" Тогда
					ТекстГруппаСтрок = "260-290";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 3 -> Страница %1 -> в строке %2 группы строк %3 значение строки с кодом %4 не должно быть отрицательным.'"),
				ПарамПроверки.НомерСтраницы, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСуммаВыплат = "";
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				Если КодСтроки = "250" Тогда
					Если НомерГрафы = "1" Тогда
						ТекстСуммаВыплат = "сумма выплат и иных вознаграждений";
					ИначеЕсли НомерГрафы = "2" Тогда
						ТекстСуммаВыплат = "база для исчисления страховых взносов на обязательное пенсионное страхование в пределах предельной величины";
					ИначеЕсли НомерГрафы = "3" Тогда
						ТекстСуммаВыплат = "база для исчисления страховых взносов на обязательное пенсионное страхование в пределах предельной величины по гражданско-правовым договорам";
					ИначеЕсли НомерГрафы = "4" Тогда
						ТекстСуммаВыплат = "сумма исчисленных страховых взносов с базы исчисления страховых взносов, не превышающих предельную величину,";
					КонецЕсли;
				ИначеЕсли КодСтроки = "300" Тогда
					Если НомерГрафы = "1" Тогда
						ТекстСуммаВыплат = "сумма выплат и иных вознаграждений, на которые начислены страховые взносы,";
					ИначеЕсли НомерГрафы = "2" Тогда
						ТекстСуммаВыплат = "сумма исчисленных страховых взносов";
					КонецЕсли;
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 3 -> Страница %1 -> %2 всего за последние три месяца расчетного (отчетного) периода не должна быть отрицательной.'"),
				ПарамПроверки.НомерСтраницы, ТекстСуммаВыплат);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		КонецЕсли;
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьВТС(ИмяФормы, Владелец, Описание, Раздел, ИмяЯчейки, ФИО = "") Экспорт
	
	РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(Владелец, Описание, Раздел, ИмяЯчейки, ФИО);
		
КонецПроцедуры

Функция ЗаполненРаздел(ИмяФормы,
					   Знач ДеревоРаздела,
					   Знач ИмяРаздела,
					   СтруктураРеквизитовФормы,
					   СтруктураМногоуровневыхРазделов,
					   ДопПараметры = Неопределено) Экспорт
	
	Если ИмяРаздела = "Раздел1Прил8" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
			Если ДопПараметры.Свойство("ЭтоПБОЮЛ") И ДопПараметры.ЭтоПБОЮЛ Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПоказателиНеанализируемыеНаЗаполненность = Новый Массив;
	
	ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010001001");
	
	Если ИмяРаздела = "Раздел1" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
			Если ДопПараметры.Свойство("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1") Тогда
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010002001");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010004001");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010010001");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяРаздела = "Раздел1Прил2" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
			Если ДопПараметры.Свойство("НеПроверятьЗаполнениеПризнаковСтроки090") Тогда
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009001");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009003");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009005");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009007");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009009");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяРаздела = "Раздел1Прил5_6" Тогда
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160006002");
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160007002");
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160008002");
	КонецЕсли;
	
	ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00110М102001");
	ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00110М211001");
	
	Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
		
		Данные = СтраницаРаздела.Данные;
		Для каждого Пок Из Данные Цикл
			Если ЗначениеЗаполнено(Пок.Значение)
				И ПоказателиНеанализируемыеНаЗаполненность.Найти(Пок.Ключ) = Неопределено Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если СтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаГруппМнЧ") Тогда
			
			ИменаГруппМнЧ = СтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаГруппМнЧ"];
			Для каждого ИмяГруппы Из ИменаГруппМнЧ Цикл
				
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы])
							И ПоказателиНеанализируемыеНаЗаполненность.Найти(ИмяГрафы) = Неопределено Тогда
							Возврат Истина;
						КонецЕсли;
					КонецЦикла;
					
					ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
					Для каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
						
						ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяПодчГруппы];
						МассивИменПодчГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяПодчГруппы]["ИменаГраф"];
						Для Каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
							Для каждого ИмяПодчГрафы Из МассивИменПодчГраф Цикл
								Если ЗначениеЗаполнено(СтрокаПодчМнЧ.Данные[ИмяПодчГрафы])
									И ПоказателиНеанализируемыеНаЗаполненность.Найти(ИмяПодчГрафы) = Неопределено Тогда
									Возврат Истина;
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если СтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
			ИменаПодчРазделов = СтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
			Для ИндПодчРаздела = 0 По ИменаПодчРазделов.Количество() - 1 Цикл
				ДеревоПодчРаздела = СтраницаРаздела.Строки[ИндПодчРаздела];
				ИмяПодчРаздела = ИменаПодчРазделов[ИндПодчРаздела];
				Если ЗаполненРаздел(ИмяФормы,
									ДеревоПодчРаздела,
									ИмяПодчРаздела,
									СтруктураРеквизитовФормы,
									СтруктураМногоуровневыхРазделов) Тогда		
					
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ДатаВходитВРазрешенныйПериод(ИмяФормы,
									 ПровДата,
									 ЛеваяГраница = '19000101',
									 ПраваяГраница = '20991231') Экспорт
	
	Возврат ПровДата >= ЛеваяГраница И ПровДата <= ПраваяГраница;
	
КонецФункции

Процедура ЗаполнитьДанными(ИмяФормы,
						   ДанныеОтчета,
						   ПараметрыВыгрузки,
						   ДеревоВыгрузки,
						   РезультатВыгрузки,
						   СтруктураРеквизитовФормы,
						   СтруктураМногоуровневыхРазделов) Экспорт
	
	ОбработатьУсловныеЭлементы(ИмяФормы,
							   ДанныеОтчета,
							   ПараметрыВыгрузки,
							   ДеревоВыгрузки,
							   РезультатВыгрузки);
												  
	ЗаполнитьДаннымиУзел(ИмяФормы,
						 СтруктураРеквизитовФормы,
						 СтруктураМногоуровневыхРазделов,
						 ПараметрыВыгрузки,
						 ДеревоВыгрузки);
											
	ОтсечьНезаполненныеНеобязательныеУзлы(ИмяФормы, ДеревоВыгрузки);
	
КонецПроцедуры

Процедура ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(ИмяФормы,
															СписокСохранения,
															СтруктураРеквизитовФормы,
															СтруктураМногоуровневыхРазделов)
	
	ПрефиксТД = "ПолеТабличногоДокумента";
	ДанныеМногоуровневыхРазделов = Новый Структура;
	
	// Данные вариантов автозаполнения.
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения") Тогда
		СписокСохранения.Удалить("ДанныеВариантовАвтоЗаполнения");
	КонецЕсли;
	
	// Титульный лист.
	ДанныеТит = СписокСохранения.ПоказателиОтчета[ПрефиксТД + "Титульный"];
	Для Каждого Показатель Из ДанныеТит Цикл
		ИмяПоказателя = Показатель.Ключ;
		Если ИмяПоказателя = "ИНН1_1" Тогда
			ДанныеТит.Вставить("ИНН", "");
			Для Ном = 1 По 12 Цикл
				ДанныеТит.ИНН = ДанныеТит.ИНН + СокрЛП(ДанныеТит["ИНН1_" + Ном]);
				ДанныеТит.Удалить("ИНН1_" + Ном);
			КонецЦикла;
			Если Лев(ДанныеТит.ИНН, 2) = "00" Тогда
				ДанныеТит.ИНН = Сред(ДанныеТит.ИНН, 3);
			КонецЕсли;
			ДанныеТит.ИНН = СтрЗаменить(ДанныеТит.ИНН, "-", "");
		ИначеЕсли ИмяПоказателя = "КПП1_1" Тогда
			ДанныеТит.Вставить("КПП", "");
			Для Ном = 1 По 9 Цикл
				ДанныеТит.КПП = ДанныеТит.КПП + СокрЛП(ДанныеТит["КПП1_" + Ном]);
				ДанныеТит.Удалить("КПП1_" + Ном);
			КонецЦикла;
			ДанныеТит.КПП = СтрЗаменить(ДанныеТит.КПП, "-", "");
		ИначеЕсли ИмяПоказателя = "НалоговыйОрган1" Тогда
			ДанныеТит.Вставить("НалоговыйОрган", "");
			Для Ном = 1 По 4 Цикл
				ДанныеТит.НалоговыйОрган = ДанныеТит.НалоговыйОрган + СокрЛП(ДанныеТит["НалоговыйОрган" + Ном]);
				ДанныеТит.Удалить("НалоговыйОрган" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ДанныеТит.Вставить("НомерКорректировки", "");
			Для Ном = 1 По 3 Цикл
				ДанныеТит.НомерКорректировки = ДанныеТит.НомерКорректировки
				+ СтрЗаменить(СокрЛП(ДанныеТит["НомерКорректировки" + Ном]), "-", "");
				ДанныеТит.Удалить("НомерКорректировки" + Ном);
				Если НЕ ЗначениеЗаполнено(ДанныеТит.НомерКорректировки) Тогда
					ДанныеТит.НомерКорректировки = "0";
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Период1" Тогда
			ДанныеТит.Вставить("Период", "");
			Для Ном = 1 По 2 Цикл
				ДанныеТит.Период = ДанныеТит.Период + СокрЛП(ДанныеТит["Период" + Ном]);
				ДанныеТит.Удалить("Период" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ДанныеТит.Вставить("ОтчетГод", "");
			Для Ном = 1 По 4 Цикл
				ДанныеТит.ОтчетГод = ДанныеТит.ОтчетГод + СокрЛП(ДанныеТит["ОтчетГод" + Ном]);
				ДанныеТит.Удалить("ОтчетГод" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ПоМесту1" Тогда
			ДанныеТит.Вставить("ПоМесту", "");
			Для Ном = 1 По 3 Цикл
				ДанныеТит.ПоМесту = ДанныеТит.ПоМесту + СокрЛП(ДанныеТит["ПоМесту" + Ном]);
				ДанныеТит.Удалить("ПоМесту" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ДанныеТит.Вставить("Прил", "");
			Для Ном = 1 По 3 Цикл
				ДанныеТит.Прил = ДанныеТит.Прил + СокрЛП(ДанныеТит["Прил" + Ном]);
				ДанныеТит.Удалить("Прил" + Ном);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ДанныеТит.Вставить("ДатаПодписи", СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
	
	// Сохранение с последующим восстановлением номеров строк многоуровнего раздела.
	// (На случай выгрузки отчета, сохраненного в 2.0, без сохранения в 3.0.)
	СохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
	
	ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
										  СтруктураРеквизитовФормы,
										  СтруктураМногоуровневыхРазделов);
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = СохрНомераСтрокМногоуровнегоРаздела;
	
	// Раздел 1.
	ИмяРаздела = "Раздел1";
	ИмяГруппы1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
	ИмяГруппы2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 060-073.
	ИмяГруппы = ИмяГруппы1;
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	// Многострочные данные 080-093.
	ИмяГруппы = ИмяГруппы2;
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 1 к разделу 1.
	ИмяРаздела = "Раздел1Прил1";
	ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы11131М1;
	СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
	ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
	ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы11132М1;
	СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
	ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
	ИмяГруппы3    = СтруктураРеквизитовФормы.мИдГруппы1114М1;
	СтруктураМнЧ3 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы3];
	ИменаГраф3    = СтруктураМнЧ3.ИменаГраф;
	СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
		СтарСтраница = СтарТаблица[Инд];
		СтарДанные = СтарСтраница.Данные;
		Если Инд = 0 Тогда
			СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки[0];
			СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки[0].Строки[0];
			СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки[1].Строки[0];
			СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки[2].Строки[0];
			СтрокаПодраздела14 = СтрокаПриложения1КРазделу1.Строки[3].Строки[0];
		Иначе
			СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки.Добавить();
			СтрокаПриложения1КРазделу1.Данные = Новый Структура;
			СтрокаПриложения1КРазделу1.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела11_12.Данные = Новый Структура;
			СтрокаПодраздела11_12.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела131.Данные = Новый Структура;
			ДеревоДопСтрок1 = Новый ДеревоЗначений;
			ДеревоДопСтрок1.Колонки.Добавить("Данные");
			ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
			СтрокаПодраздела131.ДанныеМногострочныхЧастей = Новый Структура;
			СтрокаПодраздела131.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
			
			СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела132.Данные = Новый Структура;
			ДеревоДопСтрок2 = Новый ДеревоЗначений;
			ДеревоДопСтрок2.Колонки.Добавить("Данные");
			ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
			СтрокаПодраздела132.ДанныеМногострочныхЧастей = Новый Структура;
			СтрокаПодраздела132.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
			
			СтрокаПодраздела14 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела14.Данные = Новый Структура;
			ДеревоДопСтрок3 = Новый ДеревоЗначений;
			ДеревоДопСтрок3.Колонки.Добавить("Данные");
			ДеревоДопСтрок3.Колонки.Добавить("ДанныеМногострочныхЧастей");
			СтрокаПодраздела14.ДанныеМногострочныхЧастей = Новый Структура;
			СтрокаПодраздела14.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы3, ДеревоДопСтрок3);
		КонецЕсли;
		// Немногострочные данные приложения 1 к разделу 1(единственный показатель).
		СтрокаПриложения1КРазделу1.Данные.Вставить("П000110000101", СтарДанные["П000110000101"]);
		// Немногострочные данные подразделов 1.1, 1.2.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, "П01111") ИЛИ СтрНачинаетсяС(Пок.Ключ, "П01112") Тогда
				СтрокаПодраздела11_12.Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЕсли;
		КонецЦикла;
		// Многострочные данные подраздела 1.3.1.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
			Иначе
				СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф1 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные подраздела 1.3.2.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
			Иначе
				СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф2 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные подраздела 1.4.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф3[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = СтрокаПодраздела14.ДанныеМногострочныхЧастей[ИмяГруппы3].Строки[0];
			Иначе
				СтрокаМнЧ = СтрокаПодраздела14.ДанныеМногострочныхЧастей[ИмяГруппы3].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф3 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	
	// Приложение 2 к разделу 1.
	ИмяРаздела = "Раздел1Прил2";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 3 к разделу 1.
	ИмяРаздела = "Раздел1Прил3";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 4 к разделу 1.
	ИмяРаздела = "Раздел1Прил4";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложения 5,6 к разделу 1.
	ИмяРаздела = "Раздел1Прил5_6";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 7 к разделу 1.
	ИмяРаздела = "Раздел1Прил7";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	Если Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) <> 12 Тогда
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170001002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170002002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170003002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170004002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170005002", 0);
	КонецЕсли;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 8 к разделу 1.
	ИмяРаздела = "Раздел1Прил8";
	ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 020-060.
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 9 к разделу 1.
	ИмяРаздела = "Раздел1Прил9";
	ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 020-080.
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 10 к разделу 1.
	ИмяРаздела = "Раздел1Прил10";
	ИмяГруппы    = СтруктураРеквизитовФормы.мИдГруппы110М1;
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф    = СтруктураМнЧ.ИменаГраф;
	ИмяПодчГруппы    = СтруктураРеквизитовФормы.мИдГруппы110М2;
	СтруктураПодчМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяПодчГруппы];
	ИменаПодчГраф    = СтруктураПодчМнЧ.ИменаГраф;
	СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
		СтарСтраница = СтарТаблица[Инд];
		СтарДанные = СтарСтраница.Данные;
		// Немногострочные данные.
		Если Инд = 0 Тогда
			Для каждого Пок Из СтарДанные Цикл
				Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы)
					ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяПодчГруппы) Тогда
					Продолжить;
				КонецЕсли;
				ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЦикла;
		КонецЕсли;
		// Многострочные данные 020-100.
		Если Инд = 0 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			Если ИмяГрафы = "П00110М102001" Тогда
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы,
				СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтарДанные[ИмяГрафы], 3, "0"));
			Иначе
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы]);
			КонецЕсли;
		КонецЦикла;
		// Многострочные данные 110-140, подчиненные
		// строке многострочных данных 020-100.
		НомСтр = 1;
		_НомСтр = "_1";
		ДеревоПодчСтрок = Новый ДеревоЗначений;
		ДеревоПодчСтрок.Колонки.Добавить("Данные");
		ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
		Пока СтарДанные.Свойство(ИменаПодчГраф[0] + _НомСтр) Цикл
			СтрокаПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяПодчГруппы].Строки.Добавить();
			СтрокаПодчМнЧ.Данные = Новый Структура;
			СтрокаПодчМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяПодчГрафы Из ИменаПодчГраф Цикл
				Если ИмяПодчГрафы = "П00110М211001" Тогда
					СтрокаПодчМнЧ.Данные.Вставить(ИмяПодчГрафы,
					СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтарДанные[ИмяПодчГрафы + _НомСтр], 3, "0"));
				Иначе
					СтрокаПодчМнЧ.Данные.Вставить(ИмяПодчГрафы, СтарДанные[ИмяПодчГрафы + _НомСтр]);
				КонецЕсли;
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	
	// Раздел 2.
	ИмяРаздела = "Раздел2";
	ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 010-090.
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Раздел 3.
	ИмяРаздела = "Раздел3";
	ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы321М1;
	СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
	ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
	ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы322М1;
	СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
	ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
	СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
		СтарСтраница = СтарТаблица[Инд];
		СтарДанные = СтарСтраница.Данные;
		Если Инд > 0 Тогда
			ДеревоРаздела.Строки.Добавить();
			ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
			ДеревоДопСтрок1 = Новый ДеревоЗначений;
			ДеревоДопСтрок1.Колонки.Добавить("Данные");
			ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ДеревоДопСтрок2 = Новый ДеревоЗначений;
			ДеревоДопСтрок2.Колонки.Добавить("Данные");
			ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
			ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
			ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
		КонецЕсли;
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если Пок.Ключ = "П000030002001" ИЛИ Пок.Ключ = "П000030003001" ИЛИ Пок.Ключ = "П000030005001"
				ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 190-240.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф1 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные 260-290.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф2 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	
	СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
	
	СписокСохранения.Удалить("ДанныеМногострочныхРазделов");
	СписокСохранения.Удалить("ДанныеМногостраничныхРазделов");
	
КонецПроцедуры

Функция ИдентификаторФайлаВыгрузки(ИмяФормы, ПараметрыВыгрузки, ПрефиксИмени)
	
	Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
		ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг) + СокрЛП(ПараметрыВыгрузки.КПП);
	ИначеЕсли ПараметрыВыгрузки.ЭтоФизЛицоБезИНН Тогда
		ИННКПП = "000000000000";
	Иначе
		// Случай ПараметрыВыгрузки.ЭтоПБОЮЛ ИЛИ ПараметрыВыгрузки.ЭтоФизЛицоСИНН.
		ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг);
	КонецЕсли;
	
	ИдентификаторФайла = ПрефиксИмени
		+ "_" + ?(ЗначениеЗаполнено(ПараметрыВыгрузки.КодИФНСПосредника),
				ПараметрыВыгрузки.КодИФНСПосредника, ПараметрыВыгрузки.КодНО)
		+ "_" + ПараметрыВыгрузки.КодНО
		+ "_" + ИННКПП
		+ "_" + Формат(ТекущаяДатаСеанса(), "ДФ=ггггММдд")
		+ "_" + Строка(Новый УникальныйИдентификатор);
	
	Возврат ИдентификаторФайла;
	
КонецФункции

Функция ЗаполненРаздел1(ИмяФормы,
						ДанныеМногоуровневыхРазделов,
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов,
						ДопПараметры)
			
	Возврат ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1"],
		"Раздел1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил1"],
		"Раздел1Прил1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил2"],
		"Раздел1Прил2", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил3"],
		"Раздел1Прил3", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил4"],
		"Раздел1Прил4", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил5_6"],
		"Раздел1Прил5_6", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил7"],
		"Раздел1Прил7", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил8"],
		"Раздел1Прил8", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил9"],
		"Раздел1Прил9", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил10"],
		"Раздел1Прил10", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	
КонецФункции

Процедура ОбработатьУсловныеЭлементы(ИмяФормы,
									 ДанныеОтчета,
									 Знач ПараметрыВыгрузки,
									 Узел,
									 РезультатВыгрузки)
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если Узел.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
			Возврат;
		КонецЕсли;
		РегламентированнаяОтчетность.ДополнитьСтруктуруПараметров(ДанныеОтчета, ПараметрыВыгрузки, Узел);
	КонецЕсли;
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		ТекСтр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		Если НЕ ПустаяСтрока(ТекСтр.Условие) Тогда
			Если НЕ РегламентированнаяОтчетность.УсловиеВыполнено(РезультатВыгрузки, ПараметрыВыгрузки, ТекСтр.Условие) Тогда
				Узел.Строки.Удалить(ТекСтр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ОбработатьУсловныеЭлементы(ИмяФормы,
								   ДанныеОтчета,
								   ПараметрыВыгрузки,
								   ТекСтр,
								   РезультатВыгрузки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзел(ИмяФормы,
							   СтруктураРеквизитовФормы,
							   СтруктураМногоуровневыхРазделов,
							   ПараметрыВыгрузки,
							   Узел,
							   НомерСтроки = Неопределено)
	
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда // учет обоих вариантов: кириллицы и латиницы
			Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки,
																			 "ИмяКлючевогоУзлаСодержательнойЧасти")
			   И Стр.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
				ЗаполнитьСодержательнуюЧасть(ИмяФормы,
											 СтруктураРеквизитовФормы,
											 СтруктураМногоуровневыхРазделов,
											 Стр,
											 ПараметрыВыгрузки);
			ИначеЕсли Стр.Многострочность Тогда
				НомСтр = 1;
				ПодчиненныйЭлемент = ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(ИмяФормы, Стр);
				КлючПодчиненногоЭлемента = ПодчиненныйЭлемент.Ключ;
				Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки,
						КлючПодчиненногоЭлемента + "_" + Формат(НомСтр, "ЧГ=")) Цикл
					УзелСоответствующийСтроке = СкопироватьУзел(ИмяФормы, Узел, Стр);
					ЗаполнитьДаннымиУзел(ИмяФормы,
										 СтруктураРеквизитовФормы,
										 СтруктураМногоуровневыхРазделов,
										 ПараметрыВыгрузки,
										 УзелСоответствующийСтроке,
										 НомСтр);
					НомСтр = НомСтр + 1;
				КонецЦикла;
			Иначе
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 ПараметрыВыгрузки,
									 Стр,
									 НомерСтроки);
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
				Если НЕ ПустаяСтрока(Стр.Ключ) Тогда
					ПолныйКодПоказателя = Стр.Ключ + ?(ЗначениеЗаполнено(НомерСтроки), "_" + Формат(НомерСтроки, "ЧГ="), "");
					ЗначениеПоказателя = Неопределено;
					Если ПараметрыВыгрузки.Свойство(ПолныйКодПоказателя, ЗначениеПоказателя) Тогда
						ВывестиПоказательВXML(ИмяФормы,Стр, ЗначениеПоказателя);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Стр, "");
					КонецЕсли;
				Иначе
					Стр.Значение = "";
				КонецЕсли;
			ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
				ВывестиПоказательВXML(ИмяФормы, Стр, ПараметрыВыгрузки[Сред(Стр.ЗначениеПоУмолчанию, 2)]);
			Иначе
				Стр.Значение = Стр.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтсечьНезаполненныеНеобязательныеУзлы(ИмяФормы, Узел)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Стр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		ОтсечьНезаполненныеНеобязательныеУзлы(ИмяФормы, Стр);
	КонецЦикла;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если (СтрНайти(Узел.Обязательность, "Н") <> 0
		 ИЛИ СтрНайти(Узел.Обязательность, "H") <> 0)
		   И УзелПуст(ИмяФормы, Узел) Тогда // учтем оба варианта: кириллицу и латиницу
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		ИначеЕсли (СтрНайти(Узел.Обязательность, "М") <> 0 
			  ИЛИ СтрНайти(Узел.Обязательность, "M") <> 0) // учтем оба варианта: кириллицу и латиницу
				И УзелПуст(ИмяФормы, Узел)
				И ?(СтрНайти(Узел.Обязательность, "О") <> 0
			  ИЛИ СтрНайти(Узел.Обязательность, "O") <> 0,
			  	  РегламентированнаяОтчетность.ИмеютсяАналогичныеСоседниеУзлыКлюч(Узел), Истина) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСодержательнуюЧасть(ИмяФормы,
									   СтруктураРеквизитовФормы,
									   СтруктураМногоуровневыхРазделов,
									   УзелРодитель,
									   ПараметрыВыгрузки)
		
	ДанныеМногоуровневыхРазделов = Новый Структура;
	
	СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы,
											СтруктураРеквизитовФормы,
											СтруктураМногоуровневыхРазделов);
	Для Каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	ДеревоДанныхРаздел1        = ДанныеМногоуровневыхРазделов["Раздел1"];
	ДеревоДанныхРаздел1Прил1   = ДанныеМногоуровневыхРазделов["Раздел1Прил1"];
	ДеревоДанныхРаздел1Прил2   = ДанныеМногоуровневыхРазделов["Раздел1Прил2"];
	ДеревоДанныхРаздел1Прил3   = ДанныеМногоуровневыхРазделов["Раздел1Прил3"];
	ДеревоДанныхРаздел1Прил4   = ДанныеМногоуровневыхРазделов["Раздел1Прил4"];
	ДеревоДанныхРаздел1Прил5_6 = ДанныеМногоуровневыхРазделов["Раздел1Прил5_6"];
	ДеревоДанныхРаздел1Прил7   = ДанныеМногоуровневыхРазделов["Раздел1Прил7"];
	ДеревоДанныхРаздел1Прил8   = ДанныеМногоуровневыхРазделов["Раздел1Прил8"];
	ДеревоДанныхРаздел1Прил9   = ДанныеМногоуровневыхРазделов["Раздел1Прил9"];
	ДеревоДанныхРаздел1Прил10  = ДанныеМногоуровневыхРазделов["Раздел1Прил10"];
	ДеревоДанныхРаздел2        = ДанныеМногоуровневыхРазделов["Раздел2"];
	ДеревоДанныхРаздел3        = ДанныеМногоуровневыхРазделов["Раздел3"];
	
	// Раздел 1 (единственная страница, имеющая 2 многострочные части).
	Ветка1 = ДеревоДанныхРаздел1.Строки[0];
	ОбязПлатСВ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ");
	
	// Удаление Раздела 1 вместе с его приложениями из дерева выгрузки по условию.
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ЭтоПБОЮЛ", ПараметрыВыгрузки.ЭтоПБОЮЛ);
	ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
	ДопПараметры.Вставить("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1");
	Если (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240")
	   И НЕ ЗаполненРаздел1(ИмяФормы,
	   						ДанныеМногоуровневыхРазделов,
	   						СтруктураРеквизитовФормы,
	   						СтруктураМногоуровневыхРазделов,
	   						ДопПараметры) Тогда	   
	   		
		РегламентированнаяОтчетность.УдалитьУзел(ОбязПлатСВ);
		
	Иначе
		
		// Переопределение обязательности выгрузки Раздела 1.
		Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") Тогда
			ОбязПлатСВ.Обязательность = "О";
		КонецЕсли;
		// Немногострочные данные 010-053.
		Для каждого Эл Из ОбязПлатСВ.Строки Цикл
			Если Эл.Код = "ОКТМО" Тогда
				ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные[Эл.Ключ]);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 Ветка1.Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПС"));
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 Ветка1.Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОМС"));
		// Многострочная часть 060-073.
		УплПерОПСДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПСДоп");
		ДанныеМнЧ1 = Ветка1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
		Для каждого СтрокаМнЧ1 Из ДанныеМнЧ1.Строки Цикл
			ЗаполнитьДаннымиУзел(ИмяФормы, 
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 СтрокаМнЧ1.Данные,
								 СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерОПСДоп));
		КонецЦикла;
		// Многострочная часть 080-093.
		УплПерДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерДСО");
		ДанныеМнЧ2 = Ветка1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
		Для каждого СтрокаМнЧ2 Из ДанныеМнЧ2.Строки Цикл
			ЗаполнитьДаннымиУзел(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 СтрокаМнЧ2.Данные,
								 СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерДСО));
		КонецЦикла;
		// Немногострочные данные 100-123.
		УплПревОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПревОСС");
		Для каждого Эл Из УплПревОСС.Строки Цикл
			Если Эл.Код = "КБК" Тогда
				ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные[Эл.Ключ]);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		УплПерОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "УплПерОСС");
		// Специальная выгрузка строк 110-113.
		Для каждого Эл Из УплПерОСС.Строки Цикл
			Если Эл.Код = "СумСВУплПер" Тогда
				Если Ветка1.Данные["П000010011001"] = 0 И Ветка1.Данные["П000010012001"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(ИмяФормы, Эл, 0);
				Иначе
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011001"]);
				КонецЕсли;
			ИначеЕсли Эл.Код = "СумСВУпл1М" Тогда
				Если Ветка1.Данные["П000010011101"] = 0 И Ветка1.Данные["П000010012101"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(ИмяФормы, Эл, 0);
				Иначе
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011101"]);
				КонецЕсли;
			ИначеЕсли Эл.Код = "СумСВУпл2М" Тогда
				Если Ветка1.Данные["П000010011201"] = 0 И Ветка1.Данные["П000010012201"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(ИмяФормы, Эл, 0);
				Иначе
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011201"]);
				КонецЕсли;
			ИначеЕсли Эл.Код = "СумСВУпл3М" Тогда
				Если Ветка1.Данные["П000010011301"] = 0 И Ветка1.Данные["П000010012301"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(ИмяФормы, Эл, 0);
				Иначе
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011301"]);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 Ветка1.Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "ПревРасхОСС"));
		
		// Приложение 1 к Разделу 1 (иерархический раздел).
		РасчСВ_ОПС_ОМС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОПС_ОМС");
		Для каждого ВеткаРазд1Пр1 Из ДеревоДанныхРаздел1Прил1.Строки Цикл
			ЭкзРасчСВ_ОПС_ОМС = СкопироватьУзел(ИмяФормы, ОбязПлатСВ, РасчСВ_ОПС_ОМС);
			Для каждого Эл Из ЭкзРасчСВ_ОПС_ОМС.Строки Цикл
				Если Эл.Код = "ТарифПлат" Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, ВеткаРазд1Пр1.Данные[Эл.Ключ]);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			ВеткаРазд1Пр1Подр11_12 = ВеткаРазд1Пр1.Строки[0].Строки[0];
			ВеткаРазд1Пр1Подр131   = ВеткаРазд1Пр1.Строки[1].Строки[0];
			ВеткаРазд1Пр1Подр132   = ВеткаРазд1Пр1.Строки[2].Строки[0];
			ВеткаРазд1Пр1Подр14    = ВеткаРазд1Пр1.Строки[3].Строки[0];
			
			// Подразделы 1.1 и 1.2 (единственная страница, нет многострочной части).
			ЗаполнитьДаннымиУзел(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 ВеткаРазд1Пр1Подр11_12.Данные,
								 ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС"));
			ЗаполнитьДаннымиУзел(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 ВеткаРазд1Пр1Подр11_12.Данные,
								 ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОМС"));
			
			РасчСВ_ОПС428 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС428");
			
			// Подраздел 1.3.1 (единственная страница, имеющая 1 многострочную часть).
			РасчСВ_428_1_2 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.1-2");
			ДанныеМнЧ131 = ВеткаРазд1Пр1Подр131.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
			Для каждого СтрокаМнЧ131 Из ДанныеМнЧ131.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 СтрокаМнЧ131.Данные,
									 СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_1_2));
			КонецЦикла;
			
			// Подраздел 1.3.2 (единственная страница, имеющая 1 многострочную часть).
			РасчСВ_428_3 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.3");
			ДанныеМнЧ132 = ВеткаРазд1Пр1Подр132.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
			Для каждого СтрокаМнЧ132 Из ДанныеМнЧ132.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 СтрокаМнЧ132.Данные,
									 СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_3));
			КонецЦикла;
			
			// Подраздел 1.4 (единственная страница, имеющая 1 многострочную часть).
			РасчСВ_ДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ДСО");
			ДанныеМнЧ14 = ВеткаРазд1Пр1Подр14.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1114М1];
			Для каждого СтрокаМнЧ14 Из ДанныеМнЧ14.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 СтрокаМнЧ14.Данные,
									 СкопироватьУзел(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, РасчСВ_ДСО));
			КонецЦикла;
		КонецЦикла;
		
		// Приложение 2 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ДеревоДанныхРаздел1Прил2.Строки[0].Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОСС.ВНМ"));
		
		// Приложение 3 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ДеревоДанныхРаздел1Прил3.Строки[0].Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасхОССЗак"));
		
		// Приложение 4 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ДеревоДанныхРаздел1Прил4.Строки[0].Данные,
						     ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ВыплФинФБ"));
		
		// Приложения 5-6 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ДеревоДанныхРаздел1Прил5_6.Строки[0].Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф3.1.427"));
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ДеревоДанныхРаздел1Прил5_6.Строки[0].Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф5.1.427"));
		
		// Приложения 7 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ДеревоДанныхРаздел1Прил7.Строки[0].Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф7.1.427"));
		
		Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
			// Приложение 8 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			ВеткаРазд1Пр8 = ДеревоДанныхРаздел1Прил8.Строки[0];
			СвПримТариф9_1_427 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф9.1.427");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 ВеткаРазд1Пр8.Данные,
								 ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф9_1_427, "ВыплатИт"));
			// Многострочные данные.
			СведПатент = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф9_1_427, "СведПатент");
			ДанныеМнЧ18 = ВеткаРазд1Пр8.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
			Для каждого СтрокаМнЧ18 Из ДанныеМнЧ18.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 СтрокаМнЧ18.Данные,
									 СкопироватьУзел(ИмяФормы, СвПримТариф9_1_427, СведПатент));
			КонецЦикла;
		КонецЕсли;
		
		// Приложение 9 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
		ВеткаРазд1Пр9 = ДеревоДанныхРаздел1Прил9.Строки[0];
		СвПримТариф2_2_425 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф2.2.425");
		// Немногострочные данные.
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ВеткаРазд1Пр9.Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "ВыплатИт"));
		// Многострочные данные.
		СвИноГражд = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "СвИноГражд");
		ДанныеМнЧ19 = ВеткаРазд1Пр9.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
		Для каждого СтрокаМнЧ19 Из ДанныеМнЧ19.Строки Цикл
			ЗаполнитьДаннымиУзел(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 СтрокаМнЧ19.Данные,
								 СкопироватьУзел(ИмяФормы, СвПримТариф2_2_425, СвИноГражд));
		КонецЦикла;
		
		// Приложение 10 к Разделу 1 (единственная страница,
		// имеющая одну иерархическую (2 уровня) многострочную часть).
		ВеткаРазд1Пр10 = ДеревоДанныхРаздел1Прил10.Строки[0];
		СвПримТариф1_3_422 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф1.3.422");
		// Немногострочные данные.
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 ВеткаРазд1Пр10.Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "ВыплатИт"));
		// Многострочные данные.
		СведОбуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "СведОбуч");
		ДанныеМнЧ110М1 = ВеткаРазд1Пр10.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
		Для каждого СтрокаМнЧ110М1 Из ДанныеМнЧ110М1.Строки Цикл
			ЭкзСведОбуч = СкопироватьУзел(ИмяФормы, СвПримТариф1_3_422, СведОбуч);
			// Многострочные данные первого уровня.
			Для каждого Эл Из ЭкзСведОбуч.Строки Цикл
				Если Эл.Код = "УникНомер" Тогда
					// Генерирование "уникальных номеров".
					ВывестиПоказательВXML(
						ИмяФормы, Эл, Формат(ДанныеМнЧ110М1.Строки.Индекс(СтрокаМнЧ110М1) + 1, "ЧГ="));
				ИначеЕсли Эл.Строки.Количество() > 0 И Эл.Код <> "СвРеестрМДО" Тогда
					ЗаполнитьДаннымиУзел(ИмяФормы,
										 СтруктураРеквизитовФормы,
									 	 СтруктураМногоуровневыхРазделов,
										 СтрокаМнЧ110М1.Данные,
										 ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзСведОбуч, Эл.Код));
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные второго (подчиненного первому) уровня.
			СвРеестрМДО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзСведОбуч, "СвРеестрМДО");
			ДанныеМнЧ110М2 = СтрокаМнЧ110М1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			Для каждого СтрокаМнЧ110М2 Из ДанныеМнЧ110М2.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 СтрокаМнЧ110М2.Данные,
									 СкопироватьУзел(ИмяФормы, ЭкзСведОбуч, СвРеестрМДО));
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	// Раздел 2 (единственная страница, имеющая 1 многострочную часть)
	// выгружается по условию.
	Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
		Ветка2 = ДеревоДанныхРаздел2.Строки[0];
		ОбязПлатСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ_КФХ");
		// Переопределение обязательности выгрузки Раздела 2.
		ОбязПлатСВ_КФХ.Обязательность = "О";
		Для каждого Эл Из ОбязПлатСВ_КФХ.Строки Цикл
			Если Эл.Код = "ОКТМО" Тогда
				ВывестиПоказательВXML(ИмяФормы, Эл, Ветка2.Данные[Эл.Ключ]);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 Ветка2.Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОПС"));
		ЗаполнитьДаннымиУзел(ИмяФормы,
							 СтруктураРеквизитовФормы,
							 СтруктураМногоуровневыхРазделов,
							 Ветка2.Данные,
							 ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОМС"));
		// Многострочные данные (Приложение 1 к Разделу 2).
		РасчСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "РасчСВ_КФХ");
		СведЧлКФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_КФХ, "СведЧлКФХ");
		ДанныеМнЧ21 = Ветка2.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
		Для каждого СтрокаМнЧ21 Из ДанныеМнЧ21.Строки Цикл
			ЗаполнитьДаннымиУзел(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 СтрокаМнЧ21.Данные,
								 СкопироватьУзел(ИмяФормы, РасчСВ_КФХ, СведЧлКФХ));
		КонецЦикла;
	КонецЕсли;
	
	// Раздел 3 (многостраничный раздел, на каждой странице есть 2 многострочные части).
	ПерсСвСтрахЛиц = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ПерсСвСтрахЛиц");
	Если ЗаполненРаздел(ИмяФормы,
						ДеревоДанныхРаздел3,
		 				"Раздел3",
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов) Тогда
		
		Для каждого Ветка3 Из ДеревоДанныхРаздел3.Строки Цикл
			
			ЭкзПерсСвСтрахЛиц = СкопироватьУзел(ИмяФормы,
				УзелРодитель, ПерсСвСтрахЛиц, УзелРодитель.Строки.Количество() - 1);
			
			// Немногострочные данные.
			Для каждого Эл Из ЭкзПерсСвСтрахЛиц.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					Если Эл.Код = "Период" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, ПараметрыВыгрузки.Период);
					ИначеЕсли Эл.Код = "ОтчетГод" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, ПараметрыВыгрузки.ОтчетГод);
					ИначеЕсли Эл.Код = "Номер" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл,
							?(ЗначениеЗаполнено(Ветка3.Данные[Эл.Ключ]),
						Число(Ветка3.Данные[Эл.Ключ]), 0));
					ИначеЕсли Эл.Код = "Дата" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл,
							СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ДанФЛПолуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "ДанФЛПолуч");
			Для каждого Эл Из ДанФЛПолуч.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					Если Эл.Код = "СерНомДок" Тогда
						// Особая обработка при выгрузке стр. 150 ("Серия и номер").
						ВывестиПоказательВXML(ИмяФормы, Эл,
							Ветка3.Данные["П000310015001"] + " " + Ветка3.Данные["П000310015002"]);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
					КонецЕсли;
				Иначе
					ЗаполнитьДаннымиУзел(ИмяФормы,
										 СтруктураРеквизитовФормы,
										 СтруктураМногоуровневыхРазделов,
										 Ветка3.Данные, Эл);
				КонецЕсли;
			КонецЦикла;
			
			СвВыплСВОПС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "СвВыплСВОПС");
			// Немногострочные данные Подраздела 3.2.1.
			СвВыпл = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "СвВыпл");
			Для каждого Эл Из СвВыпл.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные Подраздела 3.2.1.
			СвВыплМК = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыпл, "СвВыплМК");
			ДанныеМнЧ321 = Ветка3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
			Для каждого СтрокаМнЧ321 Из ДанныеМнЧ321.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 СтрокаМнЧ321.Данные,
									 СкопироватьУзел(ИмяФормы, СвВыпл, СвВыплМК, СвВыпл.Строки.Количество() - 1));
			КонецЦикла;
			// Немногострочные данные Подраздела 3.2.2.
			ВыплСВДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "ВыплСВДоп");
			Для каждого Эл Из ВыплСВДоп.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные Подраздела 3.2.2.
			ВыплСВДопМТ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ВыплСВДоп, "ВыплСВДопМТ");
			ДанныеМнЧ322 = Ветка3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
			Для каждого СтрокаМнЧ322 Из ДанныеМнЧ322.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 СтрокаМнЧ322.Данные,
									 СкопироватьУзел(ИмяФормы, ВыплСВДоп, ВыплСВДопМТ, ВыплСВДоп.Строки.Количество() - 1));
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(ИмяФормы, Родитель)
	
	Для Каждого Стр из Родитель.Строки Цикл
		Если ЗначениеЗаполнено(Стр.Ключ) Тогда
			Возврат Стр;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

Функция СкопироватьУзел(ИмяФормы, Родитель, Узел, Знач МаксИндекс = Неопределено)
	
	// Нахождение узла с максимальным индексом и с тем же кодом,
	// что и у копируемого, и добавление нового сразу после найденного.
	Если МаксИндекс = Неопределено Тогда
		СтрокиСТемЖеКодом = Родитель.Строки.НайтиСтроки(Новый Структура("Код", Узел.Код), Ложь);
		МаксИндекс = - 1;
		КолСтрокСТемЖеКодом = СтрокиСТемЖеКодом.Количество();
		Если КолСтрокСТемЖеКодом > 0 Тогда
			МаксИндекс = Родитель.Строки.Индекс(СтрокиСТемЖеКодом[КолСтрокСТемЖеКодом - 1]);
		КонецЕсли;
	КонецЕсли;
	
	ИндексСоздаваемогоУзла = МаксИндекс + 1;
	Если ИндексСоздаваемогоУзла >= Родитель.Строки.Количество() ИЛИ ИндексСоздаваемогоУзла = 0 Тогда
		// Аналогичный узел не найден или найденный узел - последний.
		НовыйУзел = Родитель.Строки.Добавить();
	Иначе
		НовыйУзел = Родитель.Строки.Вставить(ИндексСоздаваемогоУзла);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйУзел, Узел, , "Родитель, Строки");
	
	Для Каждого Стр из Узел.Строки Цикл
		СкопироватьУзел(ИмяФормы, НовыйУзел, Стр, Узел.Строки.Количество() - 1);
	КонецЦикла;
	
	Возврат НовыйУзел;
	
КонецФункции

Функция ВывестиПоказательВXML(ИмяФормы, Узел, ЗначениеПоказателя)
	
	МинШирина = Узел.МинРазмерность;
	МаксШирина = Узел.МаксРазмерность;
	
	Если Узел.Формат = "T" ИЛИ Узел.Формат = "Т" Тогда // учтем оба варианта: кириллицу и латиницу
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			ЗначениеПоказателяСтр = Формат(ЗначениеПоказателя, "ДФ=dd.MM.yyyy");
		Иначе
			ЗначениеПоказателяСтр = СокрЛП(ЗначениеПоказателя);
		КонецЕсли;
		Узел.Значение = ?(МаксШирина < СтрДлина(ЗначениеПоказателяСтр),
						  СокрЛП(Лев(ЗначениеПоказателяСтр, МаксШирина)),
						  ЗначениеПоказателяСтр);
	ИначеЕсли Узел.Формат = "N" Тогда
		СтрокаФормата = "ЧРД=.;ЧН=0;ЧГ=;";
		Если Узел.МаксРазмерность <> 0 И Узел.МаксРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧЦ=" + Формат(Узел.МаксРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Если Узел.МинРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧДЦ=" + Формат(Узел.МинРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, СтрокаФормата));
	КонецЕсли;
	
КонецФункции

Функция УзелПуст(ИмяФормы, Узел)
	
	Для Каждого Стр из Узел.Строки Цикл
		Если НЕ УзелПуст(ИмяФормы, Стр) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если Узел.Формат = "S" Тогда
		Возврат Истина;
		
	ИначеЕсли Узел.Формат = "N" Тогда
		Возврат Узел.Значение = "0" ИЛИ (НЕ ЗначениеЗаполнено(Узел.Значение));
		
	Иначе
		
		Если Узел.Код = "УникНомер" Тогда
			// Специальная обработка уникального номера (в необязательном разделе
			// "Приложение 10 к Разделу 1"), которое задается автоматически.
			Возврат Истина;
		Иначе
			Возврат НЕ ЗначениеЗаполнено(Узел.Значение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПодчиненныйЭлемент(ИмяФормы, Узел, КодЭлемента)
	
	ЧислоВместоКодаЭлемента = (ТипЗнч(КодЭлемента) = Тип("Число"));
	Если ТипЗнч(КодЭлемента) = Тип("Число") Тогда
		Если Узел.Строки.Количество() > КодЭлемента Тогда
			Возврат Узел.Строки.Получить(КодЭлемента);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Для Каждого Стр Из Узел.Строки Цикл
			Если Стр.Код = КодЭлемента Тогда
				Возврат Стр;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Функция ВыгрузитьДеревоВXML(ИмяФормы, ДеревоВыгрузки, ПараметрыВыгрузки, КодировкаФайлаВыгрузки)
	
	ПотокXML = РегламентированнаяОтчетность.СоздатьНовыйПотокXML(КодировкаФайлаВыгрузки);
	ЗаписатьУзелДереваВXML(ИмяФормы, ДеревоВыгрузки, ПотокXML, ПараметрыВыгрузки);
	ТекстДляЗаписи = ПотокXML.Закрыть();
	
	Возврат ТекстДляЗаписи;
	
КонецФункции

Функция ЗаписатьУзелДереваВXML(ИмяФормы, СтрокаДерева, ПотокXML, ПараметрыВыгрузки)
	
	Если ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
		ПотокXML.ЗаписатьНачалоЭлемента("Файл");
		ПотокXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		Для каждого Стр Из СтрокаДерева.Строки Цикл
			ЗаписатьУзелДереваВXML(ИмяФормы, Стр, ПотокXML, ПараметрыВыгрузки);
		КонецЦикла;
		ПотокXML.ЗаписатьКонецЭлемента();
	Иначе
		Если СтрокаДерева.Тип = "А" ИЛИ СтрокаДерева.Тип = "A" Тогда
			ПотокXML.ЗаписатьАтрибут(СтрокаДерева.Код, Строка(СтрокаДерева.Значение));
		Иначе
			ПотокXML.ЗаписатьНачалоЭлемента(СтрокаДерева.Код);
			Для каждого Лист из СтрокаДерева.Строки Цикл
				ЗаписатьУзелДереваВXML(ИмяФормы, Лист, ПотокXML, ПараметрыВыгрузки);
			КонецЦикла;
			ПотокXML.ЗаписатьТекст(Строка(СтрокаДерева.Значение));
			ПотокXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ФормированиеПечатногоБланка

Функция ПечатныйБланк(ПараметрыПечати) Экспорт
	
	Перем СтруктураРеквизитовФормы;
	Перем СтруктураМногоуровневыхРазделов;
	Перем ДанныеРазделов;
	Перем ВидПечати;
	Перем ДеревоВыбранныхСтраниц;
	Перем ДанныеМногоуровневыхРазделов;
	
	ИмяФормы = ПараметрыПечати.ВыбраннаяФорма;
					
	ПечатныйБланкФормируетсяВФорматеPDF = Ложь;
	
	Если НЕ ПараметрыПечати.Свойство("СтруктураРеквизитовФормы", СтруктураРеквизитовФормы) Тогда
		СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы);
		ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы);
		ПараметрыПечати.Свойство("СохраненныйОтчет", СтруктураРеквизитовФормы.мСохраненныйДок);
		СтруктураРеквизитовФормы.ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(
														ПараметрыПечати.СохраненныйОтчет.Организация);
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("СтруктураМногоуровневыхРазделов", СтруктураМногоуровневыхРазделов) Тогда
		ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
									      	  СтруктураРеквизитовФормы,
										  	  СтруктураМногоуровневыхРазделов);
	КонецЕсли;										  
	
	Если НЕ ПараметрыПечати.Свойство("ДеревоВыбранныхСтраниц", ДеревоВыбранныхСтраниц) Тогда
		ДеревоВыбранныхСтраниц = ПараметрыПечати.СохраненныйОтчет.ДеревоНастройкиСтраниц.Получить();
		ПечатныйБланкФормируетсяВФорматеPDF = Истина;
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ВидПечати", ВидПечати) Тогда
		ВидПечати = "";
	КонецЕсли;
				
	Если НЕ ПараметрыПечати.Свойство("ДанныеРазделов", ДанныеРазделов) Тогда
		
		ДанныеРазделов = Новый Структура;
		
		СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы,
												СтруктураРеквизитовФормы,
												СтруктураМногоуровневыхРазделов);
		
		ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
		
		Для Каждого Раздел Из ПоказателиОтчета Цикл
			
			ДанныеРазделов.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
				РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
			
		КонецЦикла;
			       			
		Если СохрСтруктура.Свойство("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов) Тогда
			
			Для Каждого ЭлементСтруктуры Из ДанныеМногоуровневыхРазделов Цикл
			
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ]
					= ПоместитьВоВременноеХранилище(ЭлементСтруктуры.Значение, Новый УникальныйИдентификатор);
					
			КонецЦикла;
				
		КонецЕсли;	
								
	КонецЕсли;	
			
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы,
																	СтруктураРеквизитовФормы,
																	ДанныеРазделов.Титульный);
																	
	Если ВидПечати = "ПоказатьБланкСтраницыРаздела3" Тогда

		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  "Раздел 3");
		СтруктураПараметров.Вставить("ОриентацияЛиста",    "Портрет");
		СтруктураПараметров.Вставить("ИмяСтраницы",        "Раздел3");
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", "");
		СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
		
		ПараметрыПечатиРаздела3 = Новый Структура;
		ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
		ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
		
		ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ЭтотОбъект.ПолучитьМакет(
		Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
		
		ПараметрыПечатиРаздела3.Вставить("ИндексТекущейСтраницыРаздела3",
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1);
						
		ПечатьРаздела3(ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов, ПараметрыПечатиРаздела3);
		
	Иначе	
		
		Для Каждого СтраницаОтчета Из ДеревоВыбранныхСтраниц.Строки Цикл
			
			Если СтраницаОтчета.ВыводНаПечать = 0 Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаименованиеЛиста",  СтраницаОтчета.Представление);
			СтруктураПараметров.Вставить("ОриентацияЛиста",    СтраницаОтчета.ОриентацияСтраницы);
			СтруктураПараметров.Вставить("ИмяСтраницы",        СтраницаОтчета.ИмяСтраницы);
			Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтраницаОтчета.ИмяОбластиТабличногоПоля);
			Структурапараметров.Вставить("ВидПечати",		   ВидПечати);
			
			Если СтруктураМногоуровневыхРазделов.Свойство(СтраницаОтчета.ИмяСтраницы) Тогда
				
				ВывестиНаПечатьДанныеМногоуровневогоРаздела(ИмяФормы,
				СтруктураПараметров,
				ОбщиеРеквизитыРазделов,
				СтруктураРеквизитовФормы,
				ДанныеРазделов);
				
			Иначе
				
				ВывестиНаПечатьЛист(ИмяФормы,
				СтруктураПараметров,
				ОбщиеРеквизитыРазделов,
				СтруктураРеквизитовФормы,
				ДанныеРазделов);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(СтруктураРеквизитовФормы, ,
												СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
												
	Если НЕ ПечатныйБланкФормируетсяВФорматеPDF Тогда
		Возврат "";
	КонецЕсли;
												
	ПакетОтображаемыхДокументов = Новый ПакетОтображаемыхДокументов;
						
	Для Каждого Лист Из СтруктураРеквизитовФормы.СписокПечатаемыхЛистов Цикл
		    		
		ПакетОтображаемыхДокументов.Состав.Добавить(Лист.Значение[0]);
		
	КонецЦикла;
		
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
	
	ПакетОтображаемыхДокументов.ЗаписатьФайлДляПечати(ИмяВременногоФайла);
	
	ФайлПечатногоБланка = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлПечатногоБланка, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	ИмяФайлаПечатногоБланка = СтруктураРеквизитовФормы.НаименованиеОтчета
							+ НСтр("ru=' за '")
							+ ПредставлениеПериода(
								НачалоДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала),
							 	КонецДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания),
							 	"ФП = Истина")
							+ " (" + СтруктураРеквизитовФормы.мСохраненныйДок.Организация + ").pdf";
	
	ПечатныйБланк = Новый Структура;
	ПечатныйБланк.Вставить("АдресПечатногоБланка",    АдресВоВременномХранилище);
	ПечатныйБланк.Вставить("ИмяФайлаПечатногоБланка", ИмяФайлаПечатногоБланка);
	
	Возврат ПечатныйБланк;
	
КонецФункции

Функция ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати(ПараметрыПечати) Экспорт
	
	ИмяФормы = ПараметрыПечати.ИмяФормыОтчета;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ИмяРаздела = "Раздел3";
		
		ПараметрыПечати.Вставить("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати");
		Если НЕ ПараметрыПечати.Свойство("ДатаНачалаПериодаОтчета") Тогда
			ПараметрыПечати.Вставить("ДатаНачалаПериодаОтчета", НачалоГода(ПараметрыПечати.ДатаКонцаПериодаОтчета));
		КонецЕсли;
		ПараметрыПечати.Вставить("ДатаНачала",    ПараметрыПечати.ДатаНачалаПериодаОтчета);
		ПараметрыПечати.Вставить("ДатаОкончания", ПараметрыПечати.ДатаКонцаПериодаОтчета);
		КорректирующийОтчет = (ПараметрыПечати.Свойство("НомерКорректировки") И ПараметрыПечати.НомерКорректировки > 0);
		
		ПодготовленныйРеглОтчет = ПодготовленныйРеглОтчет(ИмяФормы, ПараметрыПечати, КорректирующийОтчет);
		
		РазделыОтчета       = ПодготовленныйРеглОтчет.РазделыОтчета;
		ДанныеРеглОтчета    = ПодготовленныйРеглОтчет.ДанныеРеглОтчета;
		ДеревоСтраницОтчета = ПодготовленныйРеглОтчет.ДеревоСтраницОтчета;
		
		// Формирование печатного бланка.
		//
		ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы,
		ДанныеРеглОтчета.СтруктураРеквизитовФормы, РазделыОтчета.Титульный);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  "Раздел 3");
		СтруктураПараметров.Вставить("ОриентацияЛиста",    "Портрет");
		СтруктураПараметров.Вставить("ИмяСтраницы",        "Раздел3");
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", "");
		СтруктураПараметров.Вставить("ВидПечати",          "");
		
		ПараметрыПечатиРаздела3 = Новый Структура;
		ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
		ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
		
		ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ЭтотОбъект.ПолучитьМакет(
		Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
		
		ПечатныеБланки = Новый Соответствие;
		
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		ДанныеРеглОтчета.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		
		Для каждого Ветка Из ДеревоРаздела.Строки Цикл
			
			ДанныеРеглОтчета.СтруктураРеквизитовФормы.мПечатныеформы.Очистить();
			
			ПараметрыПечатиРаздела3.Вставить("Ветка", Ветка);
			ПараметрыПечатиРаздела3.Вставить("ИндексТекущейСтраницыРаздела3", 0);
			
			ПечатьТекущейСтраницыРаздела3(ИмяФормы,
			ДанныеРеглОтчета.СтруктураРеквизитовФормы, РазделыОтчета, ПараметрыПечатиРаздела3);
			
			ФизЛицо = Неопределено;
			Ветка.Данные.Свойство("ФизическоеЛицо", ФизЛицо);
			
			ФизЛицо_ПечатныеБланки = ДанныеРеглОтчета.СтруктураРеквизитовФормы.мПечатныеформы.ВыгрузитьЗначения();
			
			Для Инд = 0 По ФизЛицо_ПечатныеБланки.Количество() - 1 Цикл
				ФизЛицо_ПечатныйБланк = ФизЛицо_ПечатныеБланки[Инд];
				НомерСтраницы = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(Инд + 1, "ЧГ="), 3, "0");
				Для НомПоз = 1 По 3 Цикл
					ТекОбл = ФизЛицо_ПечатныйБланк.Области.Найти("НомСтр_" + Формат(НомПоз, "ЧГ="));
					Если ТекОбл <> Неопределено Тогда
						ТекОбл.Значение = Сред(НомерСтраницы, НомПоз, 1);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ПечатныеБланки.Вставить(?(ФизЛицо = Неопределено, Новый УникальныйИдентификатор, ФизЛицо), ФизЛицо_ПечатныеБланки);
			
		КонецЦикла;
		
		Возврат ПечатныеБланки;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы, СтруктураРеквизитовФормы, СтруктураДанныхТитульный)
	
	МассивИНН         = Новый Массив(12);
	МассивКПП         = Новый Массив(9);
	МассивДатаПодписи = Новый Массив(8);
	
	СтрИНН = "";
	
	Если СтруктураДанныхТитульный.Свойство("ИНН", СтрИНН) Тогда
		
		Если СтрДлина(СтрИНН) = 10 Тогда
			
			СтрИНН = СтрИНН + "--";
			
		КонецЕсли;
		
		Для Ном = 1 По СтрДлина(СтрИНН) Цикл
			
			МассивИНН[Ном - 1] = Сред(СтрИНН, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтрКПП = "";
	
	Если СтруктураДанныхТитульный.Свойство("КПП", СтрКПП) Тогда
						
		Для Ном = 1 По СтрДлина(СтрКПП) Цикл
			
			МассивКПП[Ном - 1] = Сред(СтрКПП, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДатаПодписи = "";
	
	Если СтруктураДанныхТитульный.Свойство("ДатаПодписи", ДатаПодписи) Тогда	
		
		Если ТипЗнч(ДатаПодписи) = Тип("Строка") Тогда 
			
			СтрДатаПодписи = Лев(СтрЗаменить(ДатаПодписи, ".", ""), 8);
			
		ИначеЕсли ТипЗнч(ДатаПодписи) = Тип("Дата") Тогда 
			
			Если ЗначениеЗаполнено(ДатаПодписи) Тогда 
				
				СтрДатаПодписи = Лев(СтрЗаменить(Формат(ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
				
			Иначе
				
				СтрДатаПодписи = "        ";
				
			КонецЕсли;
			
		КонецЕсли;
		
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	
	НаимОрг = "";
	
	Если СтруктураРеквизитовФормы.ИП
	   И СтруктураДанныхТитульный.Свойство("НаимОрг", НаимОрг) Тогда
		
		ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(НаимОрг);
			
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоФамилия",         ФИОИП.Фамилия);
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоИмяИнициал",      Лев(ФИОИП.Имя, 1));
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоОтчествоИнициал", Лев(ФИОИП.Отчество, 1));
		
	Иначе
		
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоФамилия",         "-");
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоИмяИнициал",      "-");
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоОтчествоИнициал", "-");
		
	КонецЕсли;
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

Процедура ВывестиНаПечатьЛист(ИмяФормы,
							  СтруктураПараметров,
							  ОбщиеРеквизитыРазделов,
							  СтруктураРеквизитовФормы,
							  ДанныеРазделов,
							  ТабличныйДокумент = Неопределено)
	
	ПрефиксИменМакетов = "ПечатныйБланк" + Прав(СокрЛП(ИмяФормы), 7) + "_";
	
	ИмяМЧБ = ПрефиксИменМакетов + СтруктураПараметров.ИмяСтраницы;
	
	МакетПечатнойФормы = ЭтотОбъект.ПолучитьМакет(ИмяМЧБ);
	МакетПечатнойФормы.ПолеСверху = 5;
	МакетПечатнойФормы.ПолеСправа = 5;
	МакетПечатнойФормы.ПолеСнизу  = 5;
	МакетПечатнойФормы.ПолеСлева  = 5;
		
	ЗаполнитьПечатнуюФорму(ИмяФормы,
					  	   СтруктураПараметров,
					  	   МакетПечатнойФормы,
					  	   ОбщиеРеквизитыРазделов,
					  	   ДанныеРазделов,
						   ТабличныйДокумент);
					  
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(МакетПечатнойФормы);
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетПечатнойФормы, СтрПоля, "Макет");
			
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая("",
														  СтруктураПараметров,
														  ТабличныйДокумент,
														  СтруктураРеквизитовФормы.мПечатныеФормы);
	
КонецПроцедуры

Процедура ВывестиНаПечатьДанныеМногоуровневогоРаздела(ИмяФормы,
													  СтруктураПараметров,
													  ОбщиеРеквизитыРазделов,
													  СтруктураРеквизитовФормы,
													  ДанныеРазделов)
	
	ИмяТекРаздела = СтруктураПараметров.ИмяСтраницы;
	
	ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяТекРаздела]);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
			
	Если ИмяТекРаздела = "Раздел1" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1");
		
		ДанныеМнЧ1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
		ДанныеМнЧ2 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
		
		СтрокМнЧ1НаЛисте = 1;
		СтрокМнЧ2НаЛисте = 1;
		
		// Определение количества листов.
		КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
		ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
		ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
		КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
		
		КолСтрокМнЧ2 = ДанныеМнЧ2.Строки.Количество();
		ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
		ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
		КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
		
		КолЛистовРаздела1 = Макс(КолЛистов1, КолЛистов2);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧ1ДляПечати = Новый Массив;
		ИмяП00001М106001 = "П00001М106001";
		ИмяП00001М107001 = "П00001М107001";
		ИмяП00001М107101 = "П00001М107101";
		ИмяП00001М107201 = "П00001М107201";
		ИмяП00001М107301 = "П00001М107301";
		
		МассивДанныхМнЧ2ДляПечати = Новый Массив;
		ИмяП00001М208001 = "П00001М208001";
		ИмяП00001М209001 = "П00001М209001";
		ИмяП00001М209101 = "П00001М209101";
		ИмяП00001М209201 = "П00001М209201";
		ИмяП00001М209301 = "П00001М209301";
		
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
			ДанныеМнЧ1ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
				
				НовИмяП00001М106001 = ИмяП00001М106001 + _ИндСтрокиМнЧ;
				НовИмяП00001М107001 = ИмяП00001М107001 + _ИндСтрокиМнЧ;
				НовИмяП00001М107101 = ИмяП00001М107101 + _ИндСтрокиМнЧ;
				НовИмяП00001М107201 = ИмяП00001М107201 + _ИндСтрокиМнЧ;
				НовИмяП00001М107301 = ИмяП00001М107301 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301, 0);
				
				Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М106001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107101]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107201]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107301]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
			
			Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
			ДанныеМнЧ2ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
				
				НовИмяП00001М208001 = ИмяП00001М208001 + _ИндСтрокиМнЧ;
				НовИмяП00001М209001 = ИмяП00001М209001 + _ИндСтрокиМнЧ;
				НовИмяП00001М209101 = ИмяП00001М209101 + _ИндСтрокиМнЧ;
				НовИмяП00001М209201 = ИмяП00001М209201 + _ИндСтрокиМнЧ;
				НовИмяП00001М209301 = ИмяП00001М209301 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001, "");
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301, 0);
				
				Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М208001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209101]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209201]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209301]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы1М1
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						          ТабличныйДокумент,
						  		  СтруктураРеквизитовФормы.мИдГруппы1М1,
								  ИмяОбластиПреемника);

			КонецЦикла;
			
			Для Ном = 1 По СтрокМнЧ2НаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы1М2
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						          ТабличныйДокумент,
						  		  СтруктураРеквизитовФормы.мИдГруппы1М2,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для Каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
			Для Каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
			Для Каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист1");
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
			Если НомЛиста = КолЛистовРаздела1 Тогда
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для Каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист2");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил1" Тогда
		
		МакетРаздел1Прил1 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
			+ "_" + "Раздел1Прил1");
		
		МакетРаздел1Прил1Подр1_1и1_2 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
			+ "_" + "Раздел1Прил1Подр1_1и1_2");
		
		МакетРаздел1Прил1Подр1_3_1 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
			+ "_" + "Раздел1Прил1Подр1_3_1");
		
		МакетРаздел1Прил1Подр1_3_2 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
			+ "_" + "Раздел1Прил1Подр1_3_2");
		
		МакетРаздел1Прил1Подр1_4 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
			+ "_" + "Раздел1Прил1Подр1_4");
		
		Для Каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			// Подразделы 1.1, 1.2.
			НемногострочныеДанные = Ветка.Строки[0].Строки[0].Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_1и1_2);
			
			Для Каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			Обл = ТабличныйДокумент.Области.Найти("П000110000101");
			Обл.Имя = "";
			ТабличныйДокумент.Вывести(МакетРаздел1Прил1);
			Обл = ТабличныйДокумент.Области.Найти("П000110000101");
			Обл.Значение = Ветка.Данные.П000110000101;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_1и1_2");
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
			// Подраздел 1.3.1.
			МногострочныеДанные131
				= Ветка.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
			Для каждого Строка131 Из МногострочныеДанные131.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_1);
				
				Для каждого Пок Из Строка131.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_1");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
			// Подраздел 1.3.2.
			МногострочныеДанные132
			= Ветка.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
			Для каждого Строка132 Из МногострочныеДанные132.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_2);
				
				Для каждого Пок Из Строка132.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_2");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
			// Подраздел 1.4.
			МногострочныеДанные14
			= Ветка.Строки[3].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1114М1];
			Для каждого Строка14 Из МногострочныеДанные14.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_4);
				
				Для каждого Пок Из Строка14.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_4");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил2" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил2");
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			НемногострочныеДанные = Ветка.Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил2");
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил3"
		ИЛИ ИмяТекРаздела = "Раздел1Прил4"
		ИЛИ ИмяТекРаздела = "Раздел1Прил5_6"
		ИЛИ ИмяТекРаздела = "Раздел1Прил7" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(МакетРаздела);
		
		Для каждого Пок Из НемногострочныеДанные Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
		СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
		ВывестиНаПечатьЛист(ИмяФормы,
							СтруктураПараметровРаздела,
							ОбщиеРеквизитыРазделов,
							СтруктураРеквизитовФормы,
							ДанныеРазделов,
							ТабличныйДокумент);
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил8" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
		
		СтрокМнЧНаЛисте = 3;
		
		// Определение количества листов.
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00018М102001 = "П00018М102001";
		ИмяП00018М103001 = "П00018М103001";
		ИмяП00018М104001 = "П00018М104001";
		ИмяП00018М105001 = "П00018М105001";
		ИмяП00018М106001 = "П00018М106001";
		ИмяП00018М106002 = "П00018М106002";
		ИмяП00018М106003 = "П00018М106003";
		ИмяП00018М106004 = "П00018М106004";
		ИмяП00018М106005 = "П00018М106005";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00018М102001 = ИмяП00018М102001 + _ИндСтрокиМнЧ;
				НовИмяП00018М103001 = ИмяП00018М103001 + _ИндСтрокиМнЧ;
				НовИмяП00018М104001 = ИмяП00018М104001 + _ИндСтрокиМнЧ;
				НовИмяП00018М105001 = ИмяП00018М105001 + _ИндСтрокиМнЧ;
				НовИмяП00018М106001 = ИмяП00018М106001 + _ИндСтрокиМнЧ;
				НовИмяП00018М106002 = ИмяП00018М106002 + _ИндСтрокиМнЧ;
				НовИмяП00018М106003 = ИмяП00018М106003 + _ИндСтрокиМнЧ;
				НовИмяП00018М106004 = ИмяП00018М106004 + _ИндСтрокиМнЧ;
				НовИмяП00018М106005 = ИмяП00018М106005 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106002, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106003, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106004, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106005, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106003,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106003]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106004,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106004]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106005,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106005]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы18М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						          ТабличныйДокумент,
						  		  СтруктураРеквизитовФормы.мИдГруппы18М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил9" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
		
		СтрокМнЧНаЛисте = 2;
		
		// Определение количества листов.
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00019М102001 = "П00019М102001";
		ИмяП00019М103001 = "П00019М103001";
		ИмяП00019М104001 = "П00019М104001";
		ИмяП00019М105001 = "П00019М105001";
		ИмяП00019М106001 = "П00019М106001";
		ИмяП00019М107001 = "П00019М107001";
		ИмяП00019М107002 = "П00019М107002";
		ИмяП00019М108001 = "П00019М108001";
		ИмяП00019М108002 = "П00019М108002";
		ИмяП00019М108003 = "П00019М108003";
		ИмяП00019М108004 = "П00019М108004";
		ИмяП00019М108005 = "П00019М108005";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00019М102001 = ИмяП00019М102001 + _ИндСтрокиМнЧ;
				НовИмяП00019М103001 = ИмяП00019М103001 + _ИндСтрокиМнЧ;
				НовИмяП00019М104001 = ИмяП00019М104001 + _ИндСтрокиМнЧ;
				НовИмяП00019М105001 = ИмяП00019М105001 + _ИндСтрокиМнЧ;
				НовИмяП00019М106001 = ИмяП00019М106001 + _ИндСтрокиМнЧ;
				НовИмяП00019М107001 = ИмяП00019М107001 + _ИндСтрокиМнЧ;
				НовИмяП00019М107002 = ИмяП00019М107002 + _ИндСтрокиМнЧ;
				НовИмяП00019М108001 = ИмяП00019М108001 + _ИндСтрокиМнЧ;
				НовИмяП00019М108002 = ИмяП00019М108002 + _ИндСтрокиМнЧ;
				НовИмяП00019М108003 = ИмяП00019М108003 + _ИндСтрокиМнЧ;
				НовИмяП00019М108004 = ИмяП00019М108004 + _ИндСтрокиМнЧ;
				НовИмяП00019М108005 = ИмяП00019М108005 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107002, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108005, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М107001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М107002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108003]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108004]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108005,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108005]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы19М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						          ТабличныйДокумент,
						  		  СтруктураРеквизитовФормы.мИдГруппы19М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил10" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
		
		СтрокМнЧНаЛисте = 2;
		
		// Определение количества листов (строки 020-100).
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных (строки 020-100).
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00110М102001 = "П00110М102001";
		ИмяП00110М103001 = "П00110М103001";
		ИмяП00110М104001 = "П00110М104001";
		ИмяП00110М105001 = "П00110М105001";
		ИмяП00110М106001 = "П00110М106001";
		ИмяП00110М107001 = "П00110М107001";
		ИмяП00110М108001 = "П00110М108001";
		ИмяП00110М109001 = "П00110М109001";
		ИмяП00110М110001 = "П00110М110001";
		ИмяП00110М110002 = "П00110М110002";
		ИмяП00110М110003 = "П00110М110003";
		ИмяП00110М110004 = "П00110М110004";
		ИмяП00110М110005 = "П00110М110005";
		
		ДеревоДанныхПодчМнЧ = Новый ДеревоЗначений;
		ДеревоДанныхПодчМнЧ.Колонки.Добавить("Данные");
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00110М102001 = ИмяП00110М102001 + _ИндСтрокиМнЧ;
				НовИмяП00110М103001 = ИмяП00110М103001 + _ИндСтрокиМнЧ;
				НовИмяП00110М104001 = ИмяП00110М104001 + _ИндСтрокиМнЧ;
				НовИмяП00110М105001 = ИмяП00110М105001 + _ИндСтрокиМнЧ;
				НовИмяП00110М106001 = ИмяП00110М106001 + _ИндСтрокиМнЧ;
				НовИмяП00110М107001 = ИмяП00110М107001 + _ИндСтрокиМнЧ;
				НовИмяП00110М108001 = ИмяП00110М108001 + _ИндСтрокиМнЧ;
				НовИмяП00110М109001 = ИмяП00110М109001 + _ИндСтрокиМнЧ;
				НовИмяП00110М110001 = ИмяП00110М110001 + _ИндСтрокиМнЧ;
				НовИмяП00110М110002 = ИмяП00110М110002 + _ИндСтрокиМнЧ;
				НовИмяП00110М110003 = ИмяП00110М110003 + _ИндСтрокиМнЧ;
				НовИмяП00110М110004 = ИмяП00110М110004 + _ИндСтрокиМнЧ;
				НовИмяП00110М110005 = ИмяП00110М110005 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М104001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М105001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М106001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М107001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М108001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М109001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110002, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110003, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110004, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110005, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М107001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М107001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М108001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М108001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М109001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М109001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110003,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110003]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110004,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110004]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110005,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110005]);
					
					// Заполнение временного дерева многострочных данных (строки 110-140).
					ДанныеПодчМнЧ = ДанныеМнЧ.Строки[ИндСПриращением - 1].ДанныеМногострочныхЧастей[
					СтруктураРеквизитовФормы.мИдГруппы110М2];
					Для каждого СтрокаДанныхПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
						ПодчиненнаяСтрока = ДеревоДанныхПодчМнЧ.Строки.Добавить();
						ПодчиненнаяСтрока.Данные
						= ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтрокаДанныхПодчМнЧ.Данные);
					КонецЦикла;
					
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов (строки 020-100).
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы110М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						          ТабличныйДокумент,
						  		  СтруктураРеквизитовФормы.мИдГруппы110М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист1");
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
		СтрокМнЧНаЛисте = 3;
	
		// Определение количества листов (строки 110-140).
		КолСтрокМнЧ = ДеревоДанныхПодчМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных (строки 110-140).
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00110М211001 = "П00110М211001";
		ИмяП00110М212001 = "П00110М212001";
		ИмяП00110М213001 = "П00110М213001";
		ИмяП00110М214001 = "П00110М214001";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00110М211001 = ИмяП00110М211001 + _ИндСтрокиМнЧ;
				НовИмяП00110М212001 = ИмяП00110М212001 + _ИндСтрокиМнЧ;
				НовИмяП00110М213001 = ИмяП00110М213001 + _ИндСтрокиМнЧ;
				НовИмяП00110М214001 = ИмяП00110М214001 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М211001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М212001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М213001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М214001, "");
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М211001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М211001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М212001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М212001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М213001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М213001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М214001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М214001]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
	
		// Вывод листов (строки 185-200).
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы110М2 + "_1"
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						          ТабличныйДокумент,
						  		  СтруктураРеквизитовФормы.мИдГруппы110М2,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы110М2]["ИменаГраф"];
			Для Ном = 1 По СтрокМнЧНаЛисте Цикл
				Для каждого ИмяПок Из МассивИменГраф Цикл
					Обл = ТабличныйДокумент.Области.Найти(ИмяПок + "_1"
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном));
					Если Обл <> Неопределено Тогда
						Обл.Имя = ИмяПок + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист2");
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел2" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		// Вывод Раздела 2.
		НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(МакетРаздела);
		
		Для каждого Пок Из НемногострочныеДанные Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
		СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
		ВывестиНаПечатьЛист(ИмяФормы,
							СтруктураПараметровРаздела,
							ОбщиеРеквизитыРазделов,
							СтруктураРеквизитовФормы,
							ДанныеРазделов,
							ТабличныйДокумент);
		
		// Вывод Приложений 1 к Разделу 2.
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
		
		СтрокМнЧНаЛисте = 2;
		
		// Определение количества листов.
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00021М101001 = "П00021М101001";
		ИмяП00021М102001 = "П00021М102001";
		ИмяП00021М103001 = "П00021М103001";
		ИмяП00021М104001 = "П00021М104001";
		ИмяП00021М105001 = "П00021М105001";
		ИмяП00021М106001 = "П00021М106001";
		ИмяП00021М107001 = "П00021М107001";
		ИмяП00021М108001 = "П00021М108001";
		ИмяП00021М109001 = "П00021М109001";
		ИмяП00021М109002 = "П00021М109002";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00021М101001 = ИмяП00021М101001 + _ИндСтрокиМнЧ;
				НовИмяП00021М102001 = ИмяП00021М102001 + _ИндСтрокиМнЧ;
				НовИмяП00021М103001 = ИмяП00021М103001 + _ИндСтрокиМнЧ;
				НовИмяП00021М104001 = ИмяП00021М104001 + _ИндСтрокиМнЧ;
				НовИмяП00021М105001 = ИмяП00021М105001 + _ИндСтрокиМнЧ;
				НовИмяП00021М106001 = ИмяП00021М106001 + _ИндСтрокиМнЧ;
				НовИмяП00021М107001 = ИмяП00021М107001 + _ИндСтрокиМнЧ;
				НовИмяП00021М108001 = ИмяП00021М108001 + _ИндСтрокиМнЧ;
				НовИмяП00021М109001 = ИмяП00021М109001 + _ИндСтрокиМнЧ;
				НовИмяП00021М109002 = ИмяП00021М109002 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М101001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М107001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М108001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109002]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы21М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						          ТабличныйДокумент,
						  		  СтруктураРеквизитовФормы.мИдГруппы21М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел2Прил1");
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел3" Тогда
		
		ПараметрыПечатиРаздела3 = Новый Структура;
		ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
		ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
		ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ЭтотОбъект.ПолучитьМакет(
			Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
		
		ПечатьРаздела3(ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов, ПараметрыПечатиРаздела3);
		
	КонецЕсли;
	
	ДеревоДанныхРаздела = Неопределено;
	
КонецПроцедуры

Процедура ПечатьРаздела3(ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов, ПараметрыПечатиРаздела3)
	
	ДеревоДанныхРаздела
	= ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	Если ПараметрыПечатиРаздела3.Свойство("ИндексТекущейСтраницыРаздела3") Тогда
		
		ПараметрыПечатиРаздела3.Вставить("Ветка",
		ДеревоДанныхРаздела.Строки[ПараметрыПечатиРаздела3.ИндексТекущейСтраницыРаздела3]);
		
		ПечатьТекущейСтраницыРаздела3(ИмяФормы, СтруктураРеквизитовФормы,
			ДанныеРазделов, ПараметрыПечатиРаздела3);
		
	Иначе
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			ПараметрыПечатиРаздела3.Вставить("Ветка", Ветка);
			ПараметрыПечатиРаздела3.Вставить("ИндексТекущейСтраницыРаздела3", ДеревоДанныхРаздела.Строки.Индекс(Ветка));
			
			ПечатьТекущейСтраницыРаздела3(ИмяФормы, СтруктураРеквизитовФормы,
				ДанныеРазделов, ПараметрыПечатиРаздела3);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьТекущейСтраницыРаздела3(ИмяФормы,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
									 	ПараметрыПечатиРаздела3)
	
	Ветка                  = ПараметрыПечатиРаздела3.Ветка;
	МакетРаздела           = ПараметрыПечатиРаздела3.МакетРаздела;
	СтруктураПараметров    = ПараметрыПечатиРаздела3.СтруктураПараметров;
	ОбщиеРеквизитыРазделов = ПараметрыПечатиРаздела3.ОбщиеРеквизитыРазделов;
	НомерТекущейСтраницы   = ПараметрыПечатиРаздела3.ИндексТекущейСтраницыРаздела3 + 1;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
		
	ТабличныйДокумент.Вывести(МакетРаздела);
	
	НемногострочныеДанные = Ветка.Данные;
	Для каждого Пок Из НемногострочныеДанные Цикл
		Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
		Если Обл <> Неопределено Тогда
			Обл.Значение = Пок.Значение;
		КонецЕсли;
	КонецЦикла;
	Обл = ТабличныйДокумент.Области.Найти("П000030002001");
	Если Обл <> Неопределено Тогда
		Обл.Текст = СокрЛП(ДанныеРазделов.Титульный.Период);
	КонецЕсли;
	Обл = ТабличныйДокумент.Области.Найти("П000030003001");
	Если Обл <> Неопределено Тогда
		Обл.Текст = СокрЛП(ДанныеРазделов.Титульный.ОтчетГод);
	КонецЕсли;
	Обл = ТабличныйДокумент.Области.Найти("П000030005001");
	Если Обл <> Неопределено Тогда
		Обл.Текст = ?(ЗначениеЗаполнено(ДанныеРазделов.Титульный.ДатаПодписи),
		Формат(ДанныеРазделов.Титульный.ДатаПодписи, "ДФ=""ддММгггг"""), "--------");
	КонецЕсли;
	
	СтруктПарам = Новый Структура;
	СтруктПарам.Вставить("Фам", НемногострочныеДанные.П000310008001);
	СтруктПарам.Вставить("Имя", НемногострочныеДанные.П000310009001);
	СтруктПарам.Вставить("Отч", НемногострочныеДанные.П000310010001);
	СтруктПарам.Вставить("ДатаРожд", НемногострочныеДанные.П000310011001);
	СтруктПарам.Вставить("НомерСтраницы", Формат(НомерТекущейСтраницы, "ЧГ="));
	ПредстСтраницы = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
	
	СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
	СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3_Лист1");
	СтруктураПараметровРаздела.Вставить("НаименованиеЛиста", "Раздел 3. " + ПредстСтраницы);
	ВывестиНаПечатьЛист(ИмяФормы,
						СтруктураПараметровРаздела,
						ОбщиеРеквизитыРазделов,
						СтруктураРеквизитовФормы,
						ДанныеРазделов,
						ТабличныйДокумент);
	
	ДанныеМнЧ1 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
	ДанныеМнЧ2 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
	
	СтрокМнЧ1НаЛисте = 3;
	СтрокМнЧ2НаЛисте = 3;
	
	// Определение количества листов.
	КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
	ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
	ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
	КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
	
	КолСтрокМнЧ2 = ДанныеМнЧ2.Строки.Количество();
	ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
	ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
	КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
	
	КолЛистовРаздела1 = Макс(КолЛистов1, КолЛистов2);
	
	// Подготовка многострочных данных для заполнения листов.
	МассивДанныхМнЧ1ДляПечати = Новый Массив;
	ИмяП00321М119001 = "П00321М119001";
	ИмяП00321М120001 = "П00321М120001";
	ИмяП00321М121001 = "П00321М121001";
	ИмяП00321М122001 = "П00321М122001";
	ИмяП00321М123001 = "П00321М123001";
	ИмяП00321М124001 = "П00321М124001";
	
	МассивДанныхМнЧ2ДляПечати = Новый Массив;
	ИмяП00322М126001 = "П00322М126001";
	ИмяП00322М127001 = "П00322М127001";
	ИмяП00322М128001 = "П00322М128001";
	ИмяП00322М129001 = "П00322М129001";
	
	Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
		
		Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
		ДанныеМнЧ1ДляПечати = Новый Структура;
		Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
			_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
			ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
			
			НовИмяП00321М119001 = ИмяП00321М119001 + _ИндСтрокиМнЧ;
			НовИмяП00321М120001 = ИмяП00321М120001 + _ИндСтрокиМнЧ;
			НовИмяП00321М121001 = ИмяП00321М121001 + _ИндСтрокиМнЧ;
			НовИмяП00321М122001 = ИмяП00321М122001 + _ИндСтрокиМнЧ;
			НовИмяП00321М123001 = ИмяП00321М123001 + _ИндСтрокиМнЧ;
			НовИмяП00321М124001 = ИмяП00321М124001 + _ИндСтрокиМнЧ;
			
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М119001, "");
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М120001, "");
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М121001, 0);
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М122001, 0);
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М123001, 0);
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М124001, 0);
			
			Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М119001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М119001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М120001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М120001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М121001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М121001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М122001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М122001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М123001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М123001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М124001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М124001]);
			КонецЕсли;
		КонецЦикла;
		МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
		
		Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
		ДанныеМнЧ2ДляПечати = Новый Структура;
		Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
			_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
			ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
			
			НовИмяП00322М126001 = ИмяП00322М126001 + _ИндСтрокиМнЧ;
			НовИмяП00322М127001 = ИмяП00322М127001 + _ИндСтрокиМнЧ;
			НовИмяП00322М128001 = ИмяП00322М128001 + _ИндСтрокиМнЧ;
			НовИмяП00322М129001 = ИмяП00322М129001 + _ИндСтрокиМнЧ;
			
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М126001, "");
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М127001, "");
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М128001, 0);
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М129001, 0);
			
			Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М126001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М126001]);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М127001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М127001]);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М128001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М128001]);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М129001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М129001]);
			КонецЕсли;
		КонецЦикла;
		МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
		
	КонецЦикла;
	
	// Вывод листов.
	Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(МакетРаздела);
		
		Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
			ИмяОбластиПреемника = "ДобавлениеСтроки"
			+ СтруктураРеквизитовФормы.мИдГруппы321М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
			ВставитьДопСтроку(ИмяФормы,
		  	  			   	  СтруктураРеквизитовФормы,
						      ТабличныйДокумент,
						  	  СтруктураРеквизитовФормы.мИдГруппы321М1,
							  ИмяОбластиПреемника);
		КонецЦикла;
		
		Для Ном = 1 По СтрокМнЧ2НаЛисте - 1 Цикл
			ИмяОбластиПреемника = "ДобавлениеСтроки"
			+ СтруктураРеквизитовФормы.мИдГруппы322М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
			ВставитьДопСтроку(ИмяФормы,
						  	  СтруктураРеквизитовФормы,
		      			   	  ТабличныйДокумент,
						  	  СтруктураРеквизитовФормы.мИдГруппы322М1,
							  ИмяОбластиПреемника);
		КонецЦикла;
		
		Если НомЛиста = 1 Тогда
			НемногострочныеДанные = Ветка.Данные;
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
		Для каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
		Для каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
		СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3_Лист2");
		СтруктураПараметровРаздела.Вставить("НаименованиеЛиста", "Раздел 3. " + ПредстСтраницы);
		ВывестиНаПечатьЛист(ИмяФормы,
							СтруктураПараметровРаздела,
							ОбщиеРеквизитыРазделов,
							СтруктураРеквизитовФормы,
							ДанныеРазделов,
							ТабличныйДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВставитьДопСтроку(ИмяФормы,
							СтруктураРеквизитовФормы,
							ТабличныйДокумент,
							Знач ИмяГруппы,
							Знач ИмяОбластиПреемника,
							ЭтоАвтоВставкаПодчиненнойМнЧ = Ложь) Экспорт
	
	НачИндекс = "_1";
	
	Если СтрНайти(ИмяОбластиПреемника, "ДобавлениеСтроки" + ИмяГруппы) > 0 Тогда
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти("МногострочнаяЧасть" + ИмяГруппы);
		
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТаблДок.Область(ИскомаяОбласть.Имя);
		ВставляемаяОбласть.Имя = "";
		
		НовКоординаты = РегламентированнаяОтчетностьКлиентСервер.СтрокаСКоординатамиПоказателя(ИмяОбластиПреемника);
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординаты, "_");
		НачКоординаты = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординаты = НачКоординаты + НачИндекс;
		КонецЦикла;
		
		ПреИндекс_Число = РегламентированнаяОтчетностьКлиентСервер.ИндексПоказателя(ИмяОбластиПреемника);
		НовИндекс_Число = ?(ЭтоАвтоВставкаПодчиненнойМнЧ, 1, ПреИндекс_Число + 1);
		
		ПреИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ПреИндекс_Число);
		НовИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		НачПостфикс = ИмяГруппы + НачКоординаты + НачИндекс;
		ПреПостфикс = ИмяГруппы + НовКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + НовКоординаты + НовИндекс;
		
		МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
		
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			
			НачИмяОбл = ИмяГрафы + НачКоординаты + НачИндекс;
			НовИмяОбл = ИмяГрафы + НовКоординаты + НовИндекс;
			
			ОбластьЯчейки = ВремТаблДок.Области[НачИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
			
			Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
				ОбластьЯчейки.Очистить();
			КонецЕсли;
			
		КонецЦикла;
		
		Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НачПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		КонецЕсли;
		
		Если ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Ложь;
				Обл.Текст = "";
			КонецЕсли;
		Иначе
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Истина;
				Обл.Текст = "х";
				Если НовИндекс_Число = 2 Тогда
					Если Обл <> Неопределено Тогда
						Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
						Обл.Гиперссылка = Истина;
						Обл.Текст = "х";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		КонецЕсли;
		
		ОблПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемника);
		ОблПреемник.Имя = "ДобавлениеСтроки" + НовПостфикс;
		
		// Изменения в оформлении ячеек: установка значения "НетЛинии"/"Сплошная" для
		// свойства "ГраницаСнизу" (в случае задания номеров специальных колонок):
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
			"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для каждого НомКолонки Из НомераСпецКолонок Цикл
				// Удаление линии в определенных колонках последней (до добавления) строки.
				Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
					Обл = ТабличныйДокумент.Область(
						ОблПреемник.Верх - 1, НомКолонки, ОблПреемник.Верх - 1, НомКолонки);
					Если Обл <> Неопределено Тогда
						Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					КонецЕсли;
				КонецЕсли;
				// Установка линии в определенных колонках добавляемой строки.
				Обл = ВремТаблДок.Область(
					ВставляемаяОбласть.Низ, НомКолонки, ВставляемаяОбласть.Низ, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ОблПреемник_ = ТабличныйДокумент.Область(
			ОблПреемник.Верх, , ОблПреемник.Верх + ИскомаяОбласть.Низ - ИскомаяОбласть.Верх, );
		ТабличныйДокумент.ВставитьОбласть(
			ВставляемаяОбласть, ОблПреемник_, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			// Установка текущей области после добавления строки.
			НовИмяТекОбл = МассивИменГраф[0] + НовКоординаты + НовИндекс;
			НовТекОбл = ТабличныйДокумент.Области[НовИмяТекОбл];
			ТабличныйДокумент.ТекущаяОбласть = НовТекОбл;
		КонецЕсли;
		
	КонецЕсли;
	
	ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		ИмяГруппы]["ИменаПодчиненныхГрупп"];
	Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
		НовКоординатыДляПодчОбласти = НовКоординаты + НовИндекс;
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординатыДляПодчОбласти, "_");
		НачКоординатыДляПодчОбласти = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординатыДляПодчОбласти = НачКоординатыДляПодчОбласти + НачИндекс;
		КонецЦикла;
		
		НачИндВставляемойОбласти = НачИндекс;
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
			"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		
		Если ИскомаяОбласть = Неопределено Тогда
			НачИндВставляемойОбласти = 1;
			Пока ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ИмяПодчГруппы
				+ НачКоординатыДляПодчОбласти + "_" + Формат(НачИндВставляемойОбласти, "ЧГ=")) = Неопределено Цикл
				НачИндВставляемойОбласти = НачИндВставляемойОбласти + 1;
			КонецЦикла;
			НачИндВставляемойОбласти = "_" + Формат(НачИндВставляемойОбласти, "ЧГ=");
			ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
				"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		КонецЕсли;
		
		ВремТабличныйДокумент = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТабличныйДокумент.Область(ИскомаяОбласть.Имя);
		Для каждого ОбластьЯчейки Из ВремТабличныйДокумент.Области Цикл
			ОбластьЯчейки.Имя = СтрЗаменить(ОбластьЯчейки.Имя,
				ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти,
				ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс);
		КонецЦикла;
		ИмяОбластиПреемникаДляПодчОбласти = СтрЗаменить(ИмяОбластиПреемника, ПреПостфикс, НовПостфикс);
		ОбластьПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемникаДляПодчОбласти);
		
		ТабличныйДокумент.ВставитьОбласть(ВставляемаяОбласть, ОбластьПреемник, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		ИмяОбластиПреемникаДляПодчОбласти = "ДобавлениеСтроки" + ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс;
		
		ВставитьДопСтроку(ИмяФормы,
						  СтруктураРеквизитовФормы,
						  ТабличныйДокумент,
						  ИмяПодчГруппы,
						  ИмяОбластиПреемникаДляПодчОбласти,
						  Истина);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПечатнуюФорму(ИмяФормы,
								 ПараметрыПечати,
								 МакетПечатнойФормы,
								 ОбщиеРеквизитыРазделов,
								 ДанныеРазделов,
								 ТабличныйДокумент)
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("Имя");
	Показатели.Колонки.Добавить("Значение");
	Показатели.Колонки.Добавить("ЗначениеМЧБ");
	
	Показатели.Индексы.Добавить("Имя");
	
	ИменаСуммовыхПоказателейПодраздела3_2 = Новый Массив;
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М121001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М122001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М123001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М124001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025002");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025003");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025004");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М128001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М129001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003220030001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003220030002");
	
	МакетФормыОтчета = ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_"
					 + СтрЗаменить(СтрЗаменить(СтрЗаменить(ПараметрыПечати.ИмяСтраницы,
					 			   "_Лист2", ""), "_Лист1", ""), "Раздел2Прил1", "Раздел2"));
					 
	Если ПараметрыПечати.ИмяСтраницы = "Титульный"
	 ИЛИ ПараметрыПечати.ИмяСтраницы = "ФизЛицо" Тогда
		 
		Для Каждого Показатель Из ДанныеРазделов[ПараметрыПечати.ИмяСтраницы] Цикл
			 
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = Показатель.Ключ;
					 
			НовСтр.Значение = Показатель.Значение;
			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета);
			 
	 	КонецЦикла;
		 
	Иначе
		
		ИсходныйМакет = ТабличныйДокумент;
		Для Каждого Область Из ИсходныйМакет.Области Цикл
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение = Истина Тогда
				
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = Область.Имя;
				
				Если ДанныеРазделов.Титульный.НомерКорректировки > 0
				   И ПараметрыПечати.ИмяСтраницы = "Раздел3_Лист2" И Область.Значение = 0
				   И ИменаСуммовыхПоказателейПодраздела3_2.Найти(Лев(Область.Имя, 13)) <> Неопределено Тогда
					НовСтр.Значение = "0";
					НовСтр.ЗначениеМЧБ = "0--------.00";
				Иначе
					НовСтр.Значение = Область.Значение;
					НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Область, МакетФормыОтчета);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		Область = ИсходныйМакет.Области.Найти("П000030002001");
		Если Область <> Неопределено Тогда
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И Область.СодержитЗначение = Ложь Тогда
				Если ЗначениеЗаполнено(Область.Текст) Тогда
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = Область.Имя;
					НовСтр.Значение = Область.Текст;
					НовСтр.ЗначениеМЧБ = Область.Текст;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Область = ИсходныйМакет.Области.Найти("П000030003001");
		Если Область <> Неопределено Тогда
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И Область.СодержитЗначение = Ложь Тогда
				Если ЗначениеЗаполнено(Область.Текст) Тогда
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = Область.Имя;
					НовСтр.Значение = Область.Текст;
					НовСтр.ЗначениеМЧБ = Область.Текст;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		НайденноеЗначение = Показатели.Найти("П000030004001", "Имя");
		Если НЕ НайденноеЗначение = Неопределено Тогда
			Показатели.Удалить(НайденноеЗначение);
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "П000030004001";
			ПорядковыйНомер = СокрЛП(ИсходныйМакет.Области.Найти("П000030004001").Значение);
			НовСтр.Значение = ?(ЗначениеЗаполнено(ПорядковыйНомер), Число(ПорядковыйНомер), 0);
			НовСтр.ЗначениеМЧБ = ПорядковыйНомер;
		КонецЕсли;
		
		Область = ИсходныйМакет.Области.Найти("П000030005001");
		Если Область <> Неопределено Тогда
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И Область.СодержитЗначение = Ложь Тогда
				Если ЗначениеЗаполнено(Область.Текст) Тогда
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = Область.Имя;
					НовСтр.Значение = Область.Текст;
					НовСтр.ЗначениеМЧБ = Область.Текст;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Серия и номер документа (строка 150 раздела 3).
		НайденноеЗначение = Показатели.Найти("П000310015001", "Имя");
		Если НЕ НайденноеЗначение = Неопределено Тогда
			Показатели.Удалить(НайденноеЗначение);
			СерияНомер
			= СокрЛП(ИсходныйМакет.Области.Найти("П000310015001").Значение) + " "
			+ СокрЛП(ИсходныйМакет.Области.Найти("П000310015002").Значение);
			СерияНомер = СокрЛП(СерияНомер); // обработка случая заполнения только серии или только номера
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "П000310015001";
			НовСтр.Значение = СерияНомер;
			НовСтр.ЗначениеМЧБ = СерияНомер;
		КонецЕсли;
		 
	КонецЕсли;
			         	
	НайденноеЗначение = Показатели.Найти("ИНН", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ИНН = "";
	Для Ном = 0 По 11 Цикл
		ИНН = ИНН + ОбщиеРеквизитыРазделов.ИНН[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН1";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	
	НайденноеЗначение = Показатели.Найти("КПП", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	КПП = "";
	Для Ном = 0 По 8 Цикл
		КПП = КПП + ОбщиеРеквизитыРазделов.КПП[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП1";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	
	НайденноеЗначение = Показатели.Найти("ДатаПодписи", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ДатаПодписиСтр = "";
	Для Ном = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписи";
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписиПолная";
	Если СокрЛП(ДатаПодписиСтр) <> "" Тогда
		НовСтр.Значение = Формат(Дата(Прав(ДатаПодписиСтр, 4)
									+ Сред(ДатаПодписиСтр, 3, 2)
									+ Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг""");
		НовСтр.ЗначениеМЧБ = СокрЛП(Формат(Дата(Прав(ДатаПодписиСтр, 4)
											  + Сред(ДатаПодписиСтр, 3, 2)
											  + Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг"""));
	КонецЕсли;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоФамилия";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоИмяИнициал";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоОтчествоИнициал";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоФамилия1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоИмяИнициал1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоОтчествоИнициал1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	
	Если ПараметрыПечати.ИмяСтраницы = "ФизЛицо" Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "СерияНомерДокумента";
		НовСтр.Значение	= ДанныеРазделов[ПараметрыПечати.ИмяСтраницы].СерияДокумента
						+ " "
						+ ДанныеРазделов[ПараметрыПечати.ИмяСтраницы].НомерДокумента;
		НовСтр.ЗначениеМЧБ = НовСтр.Значение;
	КонецЕсли;
	
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		Если ПокПодписант <> Неопределено Тогда
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
		КонецЕсли;
	КонецЕсли;
	
	ИНН = Новый Массив(12);
	Для Инд = 1 По 9 Цикл
		Для Знакоместо = 0 По 11 Цикл
			ИНН[Знакоместо] = Показатели.Найти("ИНН" + Инд + "_" + (Знакоместо + 1), "Имя");
		КонецЦикла;
		Если ИНН[0] = Неопределено ИЛИ ИНН[1] = Неопределено ИЛИ ИНН[10] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Показатель Из Показатели Цикл
		
		Если Показатель.Имя = "П000010001001" Тогда
			Показатель.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
				СокрЛП(Показатель.Значение), 11, "-", 1);
		КонецЕсли;
		
	КонецЦикла;
	
	ИндексТочкиПоКорню = Новый Структура;
	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		Если Область.Текст = "." Тогда
			ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область);
			Корень = ТекАдресЗначенияОбласти.Корень;
			ИндексТочкиЧислаНаМЧБ = ТекАдресЗначенияОбласти.ИндексЗнакоместа;
			ИндексТочкиПоКорню.Вставить(Корень,ИндексТочкиЧислаНаМЧБ);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			ИмяОбласти = Область.Имя;
			
			Если СтрЧислоВхождений(ИмяОбласти, "НомСтр") > 0
			 ИЛИ СтрЧислоВхождений(ИмяОбласти, "СоставленаНа") > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			РезультатПоиска = Показатели.Найти(ИмяОбласти, "Имя");
			Если РезультатПоиска = Неопределено Тогда
				ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область);
				ЗначениеВыведено = Ложь;
				Если ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда
					РезультатПоиска = Показатели.Найти(ТекАдресЗначенияОбласти.Корень, "Имя");
					Если РезультатПоиска <> Неопределено Тогда
						Если ТипЗнч(РезультатПоиска.Значение)=Тип("Число") Тогда
							// Разделение числа на 2 части.
							ЦелаяЧасть = Цел(РезультатПоиска.Значение);
							СтрЦелаяЧасть = СтрЗаменить(Строка(Формат(Цел(РезультатПоиска.Значение), "ЧРГ=';'")), ";", "");
							Если РезультатПоиска.Значение < 0 И СтрНайти(РезультатПоиска.ЗначениеМЧБ, ".") > 0 Тогда
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),4);
							Иначе
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),3);
							КонецЕсли;
							Если СтрЦелаяЧасть <> "" ИЛИ СтрДробнаяЧасть <> "" Тогда
								СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "", "0", СтрЦелаяЧасть);
								Если РезультатПоиска.Значение < 0 Тогда
									СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "0", "-0", СтрЦелаяЧасть);
								КонецЕсли;
								СтрДробнаяЧасть = ?(СтрДробнаяЧасть = "", "0", СтрДробнаяЧасть);
							КонецЕсли;
							// Разделение областей показателя на 2 части.
							ИндексТочкиЧислаНаМЧБ = Неопределено;
							Если ИндексТочкиПоКорню.Свойство(ТекАдресЗначенияОбласти.Корень,ИндексТочкиЧислаНаМЧБ) = Ложь Тогда
								// На МЧБ нет разделения на целую и дробную части.
								ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
														 ТекАдресЗначенияОбласти.ИндексЗнакоместа);
								ЗначениеВыведено = Истина;
							Иначе
								// Определяем какая часть выводится (Целая, дробная или точка).
								Если ТекАдресЗначенияОбласти.ИндексЗнакоместа < ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится целая часть.
									ПрисвоитьЗначениеОбласти(ИмяФормы, Область,
										?(РезультатПоиска.ЗначениеМЧБ = "-", "-", СтрЦелаяЧасть),
										ТекАдресЗначенияОбласти.ИндексЗнакоместа);
									ЗначениеВыведено = Истина;
								ИначеЕсли ТекАдресЗначенияОбласти.ИндексЗнакоместа > ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится дробная часть.
									ПрисвоитьЗначениеОбластиДробнойЧастиПриРазделенииНаМЧБНаЦелуюИДробнуюЧасть(
										ИмяФормы, Область, СтрДробнаяЧасть,
										ТекАдресЗначенияОбласти.ИндексЗнакоместа - ИндексТочкиЧислаНаМЧБ);
									ЗначениеВыведено = Истина;
								Иначе
									// Выводится точка.
									// Присваивать ничего не будем, но считаем, что область заполненяется корректно.
									ЗначениеВыведено = Истина;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
													 ТекАдресЗначенияОбласти.ИндексЗнакоместа,
													 ТипЗнч(РезультатПоиска.Значение) <> Тип("Строка")
													 ИЛИ НЕ ЗначениеЗаполнено(РезультатПоиска.Значение));
							ЗначениеВыведено = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеВыведено
					  И ИмяОбласти <> "ОпределениеВысотыСтрокиМногострочнойЧасти" Тогда // Служебное поле.
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Не удалось заполнить область ""%1""!'"), ИмяОбласти);
					Сообщение.Сообщить();
					
				КонецЕсли;
			Иначе
				ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета)
	
	ФорматОбласти = "";
			
	Область = МакетФормыОтчета.Области.Найти(?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), 
		Показатель.Ключ, Показатель.Имя));
	
	Если НЕ Область = Неопределено Тогда
		
		ФорматОбласти = Область.Формат;
		
	КонецЕсли;
			
	ТипЗначения = ТипЗнч(Показатель.Значение);
	
	Если ТипЗначения = Тип("Число") Тогда
					
		СоотвСтрокаФормата = РазобратьСтрокуФормата(ИмяФормы, ФорматОбласти);
		
		СоотвСтрокаФормата.Вставить("ЧРД", ".");
		СоотвСтрокаФормата.Вставить("ЧГ", "");
		
		Результат = Формат(Показатель.Значение, СобратьСтрокуФормата(ИмяФормы, СоотвСтрокаФормата));
		
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		
		Результат = СокрЛП(Показатель.Значение);
		
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
						
		Результат = Формат(Показатель.Значение, ?(ПустаяСтрока(ФорматОбласти), "ДФ=ddMMyyyy", ФорматОбласти));
		
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		
		Результат = Формат(Показатель.Значение, ФорматОбласти);
		
	КонецЕсли;
	
	Возврат СокрЛП(Результат);
	
КонецФункции

Функция АдресЗначенияОбласти(ИмяФормы, Область)
	
	Имя = Область.Имя;
	КореньИмениОбласти = Неопределено;
	СтрИндексЗнакоместа = "";
	ИндексЗнакоместа = 0;
	ДлинаИмени = СтрДлина(Имя);
	
	Для ИндексВхождения = 1 По ДлинаИмени Цикл
		СтрИндексЗнакоместа = Сред(Имя, ДлинаИмени - ИндексВхождения + 1);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
			КореньИмениОбласти = Лев(Имя, ДлинаИмени - ИндексВхождения);
			ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Прав(КореньИмениОбласти, 1) = "_" Тогда
		КореньИмениОбласти = Лев(КореньИмениОбласти, СтрДлина(КореньИмениОбласти) - 1);
	КонецЕсли;
		
	Возврат Новый Структура("Корень, ИндексЗнакоместа", КореньИмениОбласти, ИндексЗнакоместа);
	
КонецФункции

Процедура ПрисвоитьЗначениеОбласти(ИмяФормы, Область, Знач Значение, ИндексЗнакоместа = 0, ДополнятьСправа_ = Истина)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(Значение) >= ИндексЗнакоместа Тогда
			Значение = Сред(Значение, ИндексЗнакоместа, 1);
		Иначе
			Значение = ?(ДополнятьСправа_, "-", "");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = "-";
	КонецЕсли;
	
	// Специальная обработка для вывода в Приложении 3 к Разделу 1 значений
	// из графы 1 - длиной более 4-х символов и из графы 2 - длиной более 3-х символов.
	Если Область.ГраницаСверху.ТипЛинии <> ТипЛинииЯчейкиТабличногоДокумента.Точечная
		И Значение = "-" И СтрНачинаетсяС(Область.Имя, "П00013") Тогда
		Значение = "";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(Значение);
	Иначе
		Область.Текст = ВРЕГ(Значение);
	КонецЕсли;
	
КонецПроцедуры

Функция РазобратьСтрокуФормата(ИмяФормы, Знач СтрокаФормата)
	
	ЗначенияПараметров = Новый Соответствие;
	
	Пока СтрНайти(СтрокаФормата, ";") <> 0 Цикл
		
		ВхождениеРазделителя = СтрНайти(СтрокаФормата, ";");
		
		ДоРазделителя = Лев(СтрокаФормата, ВхождениеРазделителя - 1);
		
		ВхождениеРавно = СтрНайти(ДоРазделителя, "=");
		
		Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
			
			ЗначенияПараметров.Вставить(Лев(ДоРазделителя, ВхождениеРавно - 1), Сред(ДоРазделителя, ВхождениеРавно + 1));
			
		КонецЕсли;
		
		СтрокаФормата = Сред(СтрокаФормата, ВхождениеРазделителя + 1);
		
	КонецЦикла;
	
	ВхождениеРавно = СтрНайти(СтрокаФормата, "=");
	
	Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
		
		ЗначенияПараметров.Вставить(Лев(СтрокаФормата, ВхождениеРавно - 1), Сред(СтрокаФормата, ВхождениеРавно + 1));
		
	КонецЕсли;
	
	Возврат ЗначенияПараметров;
	
КонецФункции

Функция СобратьСтрокуФормата(ИмяФормы, ПараметрыФормата)
	
	СтрокаФормата = "";
	
	Для Каждого Параметр Из ПараметрыФормата Цикл
		
		СтрокаФормата = СтрокаФормата + "; " + Параметр.Ключ + "=" + Параметр.Значение;
		
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(СтрокаФормата) Тогда
		
		СтрокаФормата = Сред(СтрокаФормата, 3);
		
	КонецЕсли;
	
	Возврат СтрокаФормата;
	
КонецФункции

Процедура ПрисвоитьЗначениеОбластиДробнойЧастиПриРазделенииНаМЧБНаЦелуюИДробнуюЧасть(ИмяФормы,
																					 Область,
																					 Знач ДробнаяЧасть,
																					 ИндексЗнакоместа = 0)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(ДробнаяЧасть) >= ИндексЗнакоместа Тогда
			ДробнаяЧасть = Сред(ДробнаяЧасть, ИндексЗнакоместа, 1);
		Иначе
			ДробнаяЧасть = ?(ЗначениеЗаполнено(ДробнаяЧасть), "0", "-");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(ДробнаяЧасть) Тогда
		ДробнаяЧасть = "-";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(ДробнаяЧасть);
	Иначе
		Область.Текст = ВРЕГ(ДробнаяЧасть);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольныеСоотношения

#Область КонтрольныеСоотношения_Управление

Функция ПроверитьКонтрольныеСоотношенияДлительнаяОперация(СтруктураПараметров) Экспорт
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", 0);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", 0);
	СтруктураРезультата.Вставить("СтруктураОшибок", Новый Структура);
	
	СчетчикФормулДляРасшифровок		= 0;
	СписокРасшифровкиПоказателей	= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиПоказателей();
	СписокРасшифровкиформулы		= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиформулы();
	ПараметрыКС						= СтруктураПараметров;
	СтруктураРеквизитовФормы		= СтруктураПараметров.СтруктураРеквизитовФормы;
	мДанныеОтчетаПРП				= Неопределено;
	мДанныеОтчетаПРП1				= Неопределено;
	мДанныеОтчетаПРП2				= Неопределено;
	
	СформироватьСтруктуруПоказателейДляКС(СтруктураПараметров.мВыбраннаяФорма, мДанныеОтчета, СтруктураРеквизитовФормы, 
		СтруктураПараметров.мСтруктураМногоуровневыхРазделов);
	мДанныеОтчета.Вставить("ДатаОкончания", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	мДанныеОтчета.Вставить("Вид", ПараметрыКС.СтруктураДанныхТитульный.НомерКорректировки);
	мДанныеОтчета.Вставить("ДанныеКС", Новый Структура);
	ЗаполнитьТаблицуНСИ(мДанныеОтчета.ДатаОкончания);
	СоздатьСтруктуруДанныхКС();
	ЗаполнитьДанныеКС();
	ЗаполнитьДанныеПРП();
	ДополнитьДанныеКС(мДанныеОтчета);
	ЗаполнитьМВТпоДаннымКС();
	ПроверитьКонтрольныеСоотношенияВОтчете(СтруктураРезультата);
	
	Если СписокРасшифровкиформулы.Количество() = 0 Тогда
		Возврат СтруктураРезультата;
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(СписокРасшифровкиформулы		, СтруктураПараметров.АдресФормул);
	ПоместитьВоВременноеХранилище(СписокРасшифровкиПоказателей	, СтруктураПараметров.АдресПоказателей);
	СтруктураРезультата.Вставить("СписокРасшифровкиформулы"		, СтруктураПараметров.АдресФормул);
	СтруктураРезультата.Вставить("СписокРасшифровкиПоказателей"	, СтруктураПараметров.АдресПоказателей);
	
	Возврат СтруктураРезультата;
	
КонецФункции

Процедура ПроверитьКонтрольныеСоотношенияВОтчете(СтруктураРезультата)
	
	ГодОтчета = Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	ЭтоКорректировка	= НЕ СтруктураРеквизитовФормы.мСохраненныйДок.Вид = 0;
	
	Приложен1Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил1);
	Приложен11Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил1	, "Подраздел11");
	Приложен12Заполнено = РазделЗаполнен(мДанныеОтчета.Раздел1Прил1	, "Подраздел12");
	Приложен131Заполнено= РазделЗаполнен(мДанныеОтчета.Раздел1Прил1	, "Подраздел131");
	Приложен132Заполнено= РазделЗаполнен(мДанныеОтчета.Раздел1Прил1	, "Подраздел132");
	Приложен14Заполнено = РазделЗаполнен(мДанныеОтчета.Раздел1Прил1	, "Подраздел14");
	Приложен2Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил2);
	Приложен3Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил3);
	Приложен4Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил4);
	Приложен5Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил5_6, "Приложение5");
	Приложен6Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил5_6, "Приложение6");
	Приложен7Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил7);
	Приложен8Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил8);
	Приложен9Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил9);
	Приложен10Заполнено	= РазделЗаполнен(мДанныеОтчета.Раздел1Прил10);
	Раздел2Заполнен		= РазделЗаполнен(мДанныеОтчета.Раздел2);
	Раздел3Заполнен		= РазделЗаполнен(мДанныеОтчета.Раздел3);
	Раздел321Заполнен	= РазделЗаполнен(мДанныеОтчета.Раздел3		, "Подраздел321");
	Раздел322Заполнен	= РазделЗаполнен(мДанныеОтчета.Раздел3		, "Подраздел322");
	
	// КС 2018
	Если Раздел321Заполнен Тогда
		ПроверитьКС_0_1а(СтруктураРезультата);
		ПроверитьКС_0_1б(СтруктураРезультата);
		ПроверитьКС_0_1в(СтруктураРезультата);
		ПроверитьКС_0_1г(СтруктураРезультата);
		ПроверитьКС_0_1д(СтруктураРезультата);
		ПроверитьКС_0_1е(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен11Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_1ж(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_0_1з(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_0_1и(СтруктураРезультата); // нерегламентное КС
	КонецЕсли;
		
	Если Раздел321Заполнен Тогда
		ПроверитьКС_0_2(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен11Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_3а(СтруктураРезультата);
		ПроверитьКС_0_3б(СтруктураРезультата);
		ПроверитьКС_0_3в(СтруктураРезультата);
		ПроверитьКС_0_4(СтруктураРезультата);
		ПроверитьКС_0_5(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел322Заполнен Тогда
		ПроверитьКС_0_6а(СтруктураРезультата);
		ПроверитьКС_0_6б(СтруктураРезультата);
		ПроверитьКС_0_6в(СтруктураРезультата);
	КонецЕсли;
		
	Если (Приложен131Заполнено ИЛИ Приложен132Заполнено) И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_6г(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_0_6д(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_0_6е(СтруктураРезультата); // нерегламентное КС
	КонецЕсли;
	
	Если Раздел322Заполнен Тогда
		ПроверитьКС_0_7(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен131Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_8а(СтруктураРезультата);
		ПроверитьКС_0_8б(СтруктураРезультата);
		ПроверитьКС_0_8в(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен132Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_8г(СтруктураРезультата);
		ПроверитьКС_0_8д(СтруктураРезультата);
		ПроверитьКС_0_8е(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен131Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_9а(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен132Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_9б(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен131Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_10а(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен132Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_10б(СтруктураРезультата);
	КонецЕсли;
		
	Если Раздел321Заполнен И ГодОтчета = 2017 Тогда
		ПроверитьКС_0_11а(СтруктураРезультата);
		ПроверитьКС_0_12а(СтруктураРезультата);
	КонецЕсли;
		
	Если Раздел321Заполнен И ГодОтчета = 2018 Тогда
		ПроверитьКС_0_11б(СтруктураРезультата);
		ПроверитьКС_0_12б(СтруктураРезультата);
	КонецЕсли;
		
	Если Раздел321Заполнен И ГодОтчета = 2019 Тогда
		ПроверитьКС_0_11в(СтруктураРезультата);
		ПроверитьКС_0_12в(СтруктураРезультата);
	КонецЕсли;
		
	Если Раздел321Заполнен Тогда
		ПроверитьКС_0_13(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен11Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_14а(СтруктураРезультата);
		ПроверитьКС_0_14б(СтруктураРезультата);
		ПроверитьКС_0_14в(СтруктураРезультата);
		ПроверитьКС_0_15(СтруктураРезультата);
		ПроверитьКС_0_16(СтруктураРезультата);
	КонецЕсли;
		
	Если Раздел321Заполнен Тогда
		ПроверитьКС_0_17(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен11Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_18а(СтруктураРезультата);
		ПроверитьКС_0_18б(СтруктураРезультата);
		ПроверитьКС_0_18в(СтруктураРезультата);
		ПроверитьКС_0_19(СтруктураРезультата);
		ПроверитьКС_0_20(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел322Заполнен Тогда
		ПроверитьКС_0_21(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен131Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_22а(СтруктураРезультата);
		ПроверитьКС_0_22б(СтруктураРезультата);
		ПроверитьКС_0_22в(СтруктураРезультата);
	КонецЕсли;
	
	Если Приложен132Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_22г(СтруктураРезультата);
		ПроверитьКС_0_22д(СтруктураРезультата);
		ПроверитьКС_0_22е(СтруктураРезультата);
	КонецЕсли;
	
	Если Приложен131Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_23а(СтруктураРезультата);
	КонецЕсли;
	
	Если Приложен132Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_23б(СтруктураРезультата);
	КонецЕсли;
	
	Если Приложен131Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_24а(СтруктураРезультата);
	КонецЕсли;
	
	Если Приложен132Заполнено И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_0_24б(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел3Заполнен И Не ЭтоКорректировка Тогда
		ПроверитьКС_0_25(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел3Заполнен Тогда
		ПроверитьКС_0_26(СтруктураРезультата);
		ПроверитьКС_0_27а(СтруктураРезультата);
	КонецЕсли;
	
	ПроверитьКС_0_27б(СтруктураРезультата);
	
	Если Раздел3Заполнен Тогда
		ПроверитьКС_0_29а(СтруктураРезультата);
		ПроверитьКС_0_29б(СтруктураРезультата);
		ПроверитьКС_0_29в(СтруктураРезультата);
		ПроверитьКС_0_29г(СтруктураРезультата);
		ПроверитьКС_0_30а(СтруктураРезультата);
	КонецЕсли;
	
	Если Приложен11Заполнено Тогда
		ПроверитьКС_0_30б(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен131Заполнено Тогда
		ПроверитьКС_0_30в(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен132Заполнено Тогда
		ПроверитьКС_0_30г(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел3Заполнен Тогда
		ПроверитьКС_0_31а_доп(СтруктураРезультата);
		ПроверитьКС_0_31б_доп(СтруктураРезультата);
		ПроверитьКС_0_31в_доп(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел3Заполнен И НЕ ЭтоКорректировка Тогда
		ПроверитьКС_0_32(СтруктураРезультата);
		ПроверитьКС_0_33_доп(СтруктураРезультата);
	КонецЕсли;
	
	// Основные КС.
	Если РазделЗаполнен(мДанныеОтчета.Раздел1) Тогда
		
		ПроверитьКС_1_1(СтруктураРезультата);
		ПроверитьКС_1_2(СтруктураРезультата);
		ПроверитьКС_1_3а(СтруктураРезультата);
		ПроверитьКС_1_3б(СтруктураРезультата);
		ПроверитьКС_1_3в(СтруктураРезультата);
		ПроверитьКС_1_3г(СтруктураРезультата);
		ПроверитьКС_1_4а(СтруктураРезультата);
		ПроверитьКС_1_4б(СтруктураРезультата);
		ПроверитьКС_1_5(СтруктураРезультата);
		ПроверитьКС_1_6(СтруктураРезультата);
		ПроверитьКС_1_7(СтруктураРезультата);
		ПроверитьКС_1_8(СтруктураРезультата);
		ПроверитьКС_1_9(СтруктураРезультата);
		ПроверитьКС_1_10(СтруктураРезультата);
		ПроверитьКС_1_11(СтруктураРезультата);
		ПроверитьКС_1_12(СтруктураРезультата);
		ПроверитьКС_1_13(СтруктураРезультата);
		ПроверитьКС_1_14а(СтруктураРезультата);
		ПроверитьКС_1_14б(СтруктураРезультата);
		ПроверитьКС_1_15а(СтруктураРезультата);
		ПроверитьКС_1_15б(СтруктураРезультата);
		ПроверитьКС_1_16а(СтруктураРезультата);
		ПроверитьКС_1_16б(СтруктураРезультата);
		ПроверитьКС_1_17а(СтруктураРезультата);
		ПроверитьКС_1_17б(СтруктураРезультата);
		ПроверитьКС_1_18а(СтруктураРезультата);
		ПроверитьКС_1_18б(СтруктураРезультата);
		ПроверитьКС_1_19а(СтруктураРезультата);
		ПроверитьКС_1_19б(СтруктураРезультата);
		ПроверитьКС_1_20а(СтруктураРезультата);
		ПроверитьКС_1_20б(СтруктураРезультата);
		ПроверитьКС_1_21а(СтруктураРезультата);
		ПроверитьКС_1_21б(СтруктураРезультата);
		ПроверитьКС_1_22(СтруктураРезультата);
		ПроверитьКС_1_23(СтруктураРезультата);
		ПроверитьКС_1_24(СтруктураРезультата);
		ПроверитьКС_1_25(СтруктураРезультата);
		ПроверитьКС_1_26(СтруктураРезультата);
		ПроверитьКС_1_27(СтруктураРезультата);
		ПроверитьКС_1_28(СтруктураРезультата);
		ПроверитьКС_1_29(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен11Заполнено Тогда
		
		ПроверитьКС_1_30(СтруктураРезультата);
		ПроверитьКС_1_31(СтруктураРезультата);
		ПроверитьКС_1_32(СтруктураРезультата);
		ПроверитьКС_1_33(СтруктураРезультата);
		ПроверитьКС_1_34(СтруктураРезультата);
		ПроверитьКС_1_35(СтруктураРезультата);
		ПроверитьКС_1_36(СтруктураРезультата);
		ПроверитьКС_1_37(СтруктураРезультата);
		ПроверитьКС_1_38(СтруктураРезультата);
		ПроверитьКС_1_39(СтруктураРезультата);
		ПроверитьКС_1_40(СтруктураРезультата);
		ПроверитьКС_1_41(СтруктураРезультата);
		ПроверитьКС_1_42(СтруктураРезультата);
		ПроверитьКС_1_43(СтруктураРезультата);
		ПроверитьКС_1_44(СтруктураРезультата);
		ПроверитьКС_1_45(СтруктураРезультата);
		ПроверитьКС_1_46(СтруктураРезультата);
		ПроверитьКС_1_47(СтруктураРезультата);
		ПроверитьКС_1_48(СтруктураРезультата);
		ПроверитьКС_1_49(СтруктураРезультата);
		ПроверитьКС_1_50(СтруктураРезультата);
		ПроверитьКС_1_51(СтруктураРезультата);
		ПроверитьКС_1_52(СтруктураРезультата);
		ПроверитьКС_1_53(СтруктураРезультата);
		ПроверитьКС_1_54(СтруктураРезультата);
		ПроверитьКС_1_55(СтруктураРезультата);
		ПроверитьКС_1_56(СтруктураРезультата);
		ПроверитьКС_1_57(СтруктураРезультата);
		ПроверитьКС_1_58(СтруктураРезультата);
		ПроверитьКС_1_59(СтруктураРезультата);
		ПроверитьКС_1_60(СтруктураРезультата);
		ПроверитьКС_1_61(СтруктураРезультата);
		ПроверитьКС_1_62(СтруктураРезультата);
		ПроверитьКС_1_63(СтруктураРезультата);
		ПроверитьКС_1_64(СтруктураРезультата);
		ПроверитьКС_1_65(СтруктураРезультата);
		ПроверитьКС_1_66(СтруктураРезультата);
		ПроверитьКС_1_67(СтруктураРезультата);
		ПроверитьКС_1_68(СтруктураРезультата);
		ПроверитьКС_1_69(СтруктураРезультата);
		ПроверитьКС_1_70(СтруктураРезультата);
		ПроверитьКС_1_71(СтруктураРезультата);
		ПроверитьКС_1_72(СтруктураРезультата);
		ПроверитьКС_1_73(СтруктураРезультата);
		ПроверитьКС_1_74(СтруктураРезультата);
		ПроверитьКС_1_75(СтруктураРезультата);
		ПроверитьКС_1_76(СтруктураРезультата);
		ПроверитьКС_1_77(СтруктураРезультата);
		ПроверитьКС_1_78(СтруктураРезультата);
		ПроверитьКС_1_79(СтруктураРезультата);
		ПроверитьКС_1_80(СтруктураРезультата);
		ПроверитьКС_1_81(СтруктураРезультата);
		ПроверитьКС_1_82(СтруктураРезультата);
		ПроверитьКС_1_83(СтруктураРезультата);
		ПроверитьКС_1_84(СтруктураРезультата);
		ПроверитьКС_1_85(СтруктураРезультата);
		ПроверитьКС_1_86(СтруктураРезультата);
		ПроверитьКС_1_87(СтруктураРезультата);
		ПроверитьКС_1_88(СтруктураРезультата);
		ПроверитьКС_1_89(СтруктураРезультата);
		ПроверитьКС_1_90(СтруктураРезультата);
		ПроверитьКС_1_91(СтруктураРезультата);
		ПроверитьКС_1_92(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен12Заполнено Тогда
		
		ПроверитьКС_1_93(СтруктураРезультата);
		ПроверитьКС_1_94(СтруктураРезультата);
		ПроверитьКС_1_95(СтруктураРезультата);
		ПроверитьКС_1_96(СтруктураРезультата);
		ПроверитьКС_1_97(СтруктураРезультата);
		ПроверитьКС_1_98(СтруктураРезультата);
		ПроверитьКС_1_99(СтруктураРезультата);
		ПроверитьКС_1_100(СтруктураРезультата);
		ПроверитьКС_1_101(СтруктураРезультата);
		ПроверитьКС_1_102(СтруктураРезультата);
		ПроверитьКС_1_103(СтруктураРезультата);
		ПроверитьКС_1_104(СтруктураРезультата);
		ПроверитьКС_1_105(СтруктураРезультата);
		ПроверитьКС_1_106(СтруктураРезультата);
		ПроверитьКС_1_107(СтруктураРезультата);
		ПроверитьКС_1_108(СтруктураРезультата);
		ПроверитьКС_1_109(СтруктураРезультата);
		ПроверитьКС_1_110(СтруктураРезультата);
		ПроверитьКС_1_111(СтруктураРезультата);
		ПроверитьКС_1_112(СтруктураРезультата);
		ПроверитьКС_1_113(СтруктураРезультата);
		ПроверитьКС_1_114(СтруктураРезультата);
		ПроверитьКС_1_115(СтруктураРезультата);
		ПроверитьКС_1_116(СтруктураРезультата);
		ПроверитьКС_1_117(СтруктураРезультата);
		ПроверитьКС_1_118(СтруктураРезультата);
		ПроверитьКС_1_119(СтруктураРезультата);
		ПроверитьКС_1_120(СтруктураРезультата);
		ПроверитьКС_1_121(СтруктураРезультата);
		ПроверитьКС_1_122(СтруктураРезультата);
		ПроверитьКС_1_123(СтруктураРезультата);
		ПроверитьКС_1_124(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен131Заполнено Тогда
		
		ПроверитьКС_1_125(СтруктураРезультата);
		ПроверитьКС_1_126(СтруктураРезультата);
		ПроверитьКС_1_127(СтруктураРезультата);
		ПроверитьКС_1_128(СтруктураРезультата);
		ПроверитьКС_1_129(СтруктураРезультата);
		ПроверитьКС_1_130(СтруктураРезультата);
		ПроверитьКС_1_131(СтруктураРезультата);
		ПроверитьКС_1_132(СтруктураРезультата);
		ПроверитьКС_1_133(СтруктураРезультата);
		ПроверитьКС_1_134(СтруктураРезультата);
		ПроверитьКС_1_135(СтруктураРезультата);
		ПроверитьКС_1_136(СтруктураРезультата);
		ПроверитьКС_1_137(СтруктураРезультата);
		ПроверитьКС_1_138(СтруктураРезультата);
		ПроверитьКС_1_139(СтруктураРезультата);
		ПроверитьКС_1_140(СтруктураРезультата);
		ПроверитьКС_1_141(СтруктураРезультата);
		ПроверитьКС_1_142(СтруктураРезультата);
		ПроверитьКС_1_143(СтруктураРезультата);
		ПроверитьКС_1_144(СтруктураРезультата);
		ПроверитьКС_1_145(СтруктураРезультата);
		ПроверитьКС_1_146(СтруктураРезультата);
		ПроверитьКС_1_147(СтруктураРезультата);
		ПроверитьКС_1_148(СтруктураРезультата);
		ПроверитьКС_1_149(СтруктураРезультата);
		ПроверитьКС_1_150(СтруктураРезультата);
		ПроверитьКС_1_151(СтруктураРезультата);
		
	Конецесли;
	
	Если Приложен132Заполнено Тогда
		
		ПроверитьКС_1_152(СтруктураРезультата);
		ПроверитьКС_1_153(СтруктураРезультата);
		ПроверитьКС_1_154(СтруктураРезультата);
		ПроверитьКС_1_155(СтруктураРезультата);
		ПроверитьКС_1_156(СтруктураРезультата);
		ПроверитьКС_1_157(СтруктураРезультата);
		ПроверитьКС_1_158(СтруктураРезультата);
		ПроверитьКС_1_159(СтруктураРезультата);
		ПроверитьКС_1_160(СтруктураРезультата);
		ПроверитьКС_1_161(СтруктураРезультата);
		ПроверитьКС_1_162(СтруктураРезультата);
		ПроверитьКС_1_163(СтруктураРезультата);
		ПроверитьКС_1_164(СтруктураРезультата);
		ПроверитьКС_1_165(СтруктураРезультата);
		ПроверитьКС_1_166(СтруктураРезультата);
		ПроверитьКС_1_167(СтруктураРезультата);
		ПроверитьКС_1_168(СтруктураРезультата);
		ПроверитьКС_1_169(СтруктураРезультата);
		ПроверитьКС_1_170(СтруктураРезультата);
		ПроверитьКС_1_171(СтруктураРезультата);
		ПроверитьКС_1_172(СтруктураРезультата);
		ПроверитьКС_1_173(СтруктураРезультата);
		ПроверитьКС_1_174(СтруктураРезультата);
		ПроверитьКС_1_175(СтруктураРезультата);
		ПроверитьКС_1_176(СтруктураРезультата);
		ПроверитьКС_1_177(СтруктураРезультата);
		ПроверитьКС_1_178(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен14Заполнено Тогда
	
		ПроверитьКС_1_179(СтруктураРезультата);
		ПроверитьКС_1_180(СтруктураРезультата);
		ПроверитьКС_1_181(СтруктураРезультата);
		ПроверитьКС_1_182(СтруктураРезультата);
		ПроверитьКС_1_183(СтруктураРезультата);
		ПроверитьКС_1_184(СтруктураРезультата);
		ПроверитьКС_1_185(СтруктураРезультата);
		ПроверитьКС_1_186(СтруктураРезультата);
		ПроверитьКС_1_187(СтруктураРезультата);
		ПроверитьКС_1_188(СтруктураРезультата);
		ПроверитьКС_1_189(СтруктураРезультата);
		ПроверитьКС_1_190(СтруктураРезультата);
		ПроверитьКС_1_191(СтруктураРезультата);
		ПроверитьКС_1_192(СтруктураРезультата);
		ПроверитьКС_1_193(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен2Заполнено Тогда
		
		ПроверитьКС_1_194(СтруктураРезультата);
		ПроверитьКС_1_195(СтруктураРезультата);
		ПроверитьКС_1_196(СтруктураРезультата);
		ПроверитьКС_1_197(СтруктураРезультата);
		ПроверитьКС_1_198(СтруктураРезультата);
		ПроверитьКС_1_199(СтруктураРезультата);
		ПроверитьКС_1_200(СтруктураРезультата);
		ПроверитьКС_1_201(СтруктураРезультата);
		ПроверитьКС_1_202(СтруктураРезультата);
		ПроверитьКС_1_203(СтруктураРезультата);
		ПроверитьКС_1_204(СтруктураРезультата);
		ПроверитьКС_1_205(СтруктураРезультата);
		ПроверитьКС_1_206(СтруктураРезультата);
		ПроверитьКС_1_207(СтруктураРезультата);
		ПроверитьКС_1_208(СтруктураРезультата);
		ПроверитьКС_1_209(СтруктураРезультата);
		ПроверитьКС_1_210(СтруктураРезультата);
		ПроверитьКС_1_211(СтруктураРезультата);
		ПроверитьКС_1_212(СтруктураРезультата);
		ПроверитьКС_1_213(СтруктураРезультата);
		ПроверитьКС_1_214(СтруктураРезультата);
		ПроверитьКС_1_215(СтруктураРезультата);
		ПроверитьКС_1_216(СтруктураРезультата);
		ПроверитьКС_1_217(СтруктураРезультата);
		ПроверитьКС_1_218(СтруктураРезультата);
		ПроверитьКС_1_219(СтруктураРезультата);
		ПроверитьКС_1_220(СтруктураРезультата);
		ПроверитьКС_1_221(СтруктураРезультата);
		ПроверитьКС_1_222(СтруктураРезультата);
		ПроверитьКС_1_223(СтруктураРезультата);
		ПроверитьКС_1_224(СтруктураРезультата);
		ПроверитьКС_1_225(СтруктураРезультата);
		ПроверитьКС_1_226(СтруктураРезультата);
		ПроверитьКС_1_227(СтруктураРезультата);
		ПроверитьКС_1_228(СтруктураРезультата);
		ПроверитьКС_1_229(СтруктураРезультата);
		ПроверитьКС_1_230(СтруктураРезультата);
		ПроверитьКС_1_231(СтруктураРезультата);
		ПроверитьКС_1_232(СтруктураРезультата);
		ПроверитьКС_1_233(СтруктураРезультата);
		ПроверитьКС_1_234(СтруктураРезультата);
		ПроверитьКС_1_235(СтруктураРезультата);
		ПроверитьКС_1_236(СтруктураРезультата);
		ПроверитьКС_1_237(СтруктураРезультата);
		ПроверитьКС_1_238(СтруктураРезультата);
		ПроверитьКС_1_239(СтруктураРезультата);
		ПроверитьКС_1_240(СтруктураРезультата);
		ПроверитьКС_1_241(СтруктураРезультата);
		ПроверитьКС_1_242(СтруктураРезультата);
		ПроверитьКС_1_243(СтруктураРезультата);
		ПроверитьКС_1_244(СтруктураРезультата);
		ПроверитьКС_1_245(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен5Заполнено Тогда
		
		ПроверитьКС_1_246(СтруктураРезультата);
		ПроверитьКС_1_247(СтруктураРезультата);
		ПроверитьКС_1_248(СтруктураРезультата);
		ПроверитьКС_1_249(СтруктураРезультата);
		ПроверитьКС_1_250(СтруктураРезультата);
		ПроверитьКС_1_251(СтруктураРезультата);
		ПроверитьКС_1_252(СтруктураРезультата);
		ПроверитьКС_1_253(СтруктураРезультата);
		
	КонецЕсли;
	
	Если НЕ ГодОтчета >= 2019 
		И Приложен6Заполнено Тогда
		
		ПроверитьКС_1_254(СтруктураРезультата);
		ПроверитьКС_1_255(СтруктураРезультата);
		ПроверитьКС_1_256(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен7Заполнено Тогда
		
		ПроверитьКС_1_257(СтруктураРезультата);
		ПроверитьКС_1_258(СтруктураРезультата);
		ПроверитьКС_1_259(СтруктураРезультата);
		ПроверитьКС_1_260(СтруктураРезультата);
		ПроверитьКС_1_261(СтруктураРезультата);
		ПроверитьКС_1_262(СтруктураРезультата);
		
	КонецЕсли;
	
	Если НЕ ГодОтчета >= 2019 
		И Приложен8Заполнено Тогда
		
		ПроверитьКС_1_263(СтруктураРезультата);
		ПроверитьКС_1_264(СтруктураРезультата);
		ПроверитьКС_1_265(СтруктураРезультата);
		ПроверитьКС_1_266(СтруктураРезультата);
		ПроверитьКС_1_267(СтруктураРезультата);
		ПроверитьКС_1_268(СтруктураРезультата);
		ПроверитьКС_1_269(СтруктураРезультата);
		ПроверитьКС_1_270(СтруктураРезультата);
		ПроверитьКС_1_271(СтруктураРезультата);
		ПроверитьКС_1_272(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен9Заполнено Тогда
		
		ПроверитьКС_1_273(СтруктураРезультата);
		ПроверитьКС_1_274(СтруктураРезультата);
		ПроверитьКС_1_275(СтруктураРезультата);
		ПроверитьКС_1_276(СтруктураРезультата);
		ПроверитьКС_1_277(СтруктураРезультата);
		ПроверитьКС_1_278(СтруктураРезультата);
		ПроверитьКС_1_279(СтруктураРезультата);
		ПроверитьКС_1_280(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Приложен10Заполнено Тогда
	
		ПроверитьКС_1_281(СтруктураРезультата);
		ПроверитьКС_1_282(СтруктураРезультата);
		ПроверитьКС_1_283(СтруктураРезультата);
		ПроверитьКС_1_284(СтруктураРезультата);
		ПроверитьКС_1_285(СтруктураРезультата);
		ПроверитьКС_1_286(СтруктураРезультата);
		ПроверитьКС_1_287(СтруктураРезультата);
		ПроверитьКС_1_288(СтруктураРезультата);
		
	КонецЕсли;
	
	Если Раздел2Заполнен Тогда
		ПроверитьКС_1_289(СтруктураРезультата);
		ПроверитьКС_1_290(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел321Заполнен И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_291(СтруктураРезультата);
	КонецЕсли;
	
	Если (Приложен11Заполнено ИЛИ Раздел321Заполнен) И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_1_292(СтруктураРезультата);
		ПроверитьКС_1_293(СтруктураРезультата);
		ПроверитьКС_1_294(СтруктураРезультата);
	КонецЕсли;
	
	Если (Приложен131Заполнено ИЛИ Приложен132Заполнено ИЛИ Раздел322Заполнен) 
		И (Не ЭтоКорректировка ИЛИ УчитыватьКорректировки) Тогда
		ПроверитьКС_1_295(СтруктураРезультата);
		ПроверитьКС_1_296(СтруктураРезультата);
		ПроверитьКС_1_297(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел3Заполнен Тогда
		ПроверитьКС_1_298(СтруктураРезультата); // приостановлено
		ПроверитьКС_1_299(СтруктураРезультата); // приостановлено
		ПроверитьКС_1_300(СтруктураРезультата);
		ПроверитьКС_1_301(СтруктураРезультата); // приостановлено
		ПроверитьКС_1_302(СтруктураРезультата); // приостановлено
		ПроверитьКС_1_303(СтруктураРезультата); // приостановлено
		ПроверитьКС_1_304(СтруктураРезультата); // приостановлено
	КонецЕсли;
	
	Если (Приложен11Заполнено ИЛИ Раздел3Заполнен) И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_305(СтруктураРезультата);
	КонецЕсли;
	
	Если (Приложен12Заполнено ИЛИ Раздел3Заполнен) И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_306(СтруктураРезультата);
	КонецЕсли;
	
	Если (Приложен2Заполнено ИЛИ Раздел3Заполнен) И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_307(СтруктураРезультата);
	КонецЕсли;
	
	Если (Приложен11Заполнено ИЛИ Раздел3Заполнен) И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_308(СтруктураРезультата);
	КонецЕсли;
	
	Если (Приложен12Заполнено ИЛИ Раздел3Заполнен) И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_309(СтруктураРезультата);
	КонецЕсли;
	
	Если (Приложен2Заполнено ИЛИ Раздел3Заполнен) И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_310(СтруктураРезультата);
	КонецЕсли;
	
	Если Раздел3Заполнен И Не ЭтоКорректировка Тогда
		ПроверитьКС_1_311(СтруктураРезультата); // приостановлено
	КонецЕсли;
	
	ПроверитьКС_2_1(СтруктураРезультата);
		
	Если Приложен11Заполнено Тогда
		ПроверитьКС_2_2(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен2Заполнено Тогда
		ПроверитьКС_2_3(СтруктураРезультата);
		ПроверитьКС_2_4(СтруктураРезультата);
		ПроверитьКС_2_5(СтруктураРезультата);
	КонецЕсли;
		
	Если Раздел321Заполнен И Не ЭтоКорректировка Тогда
		ПроверитьКС_Д_1(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_Д_2(СтруктураРезультата); // приостановлено
		ПроверитьКС_Д_3(СтруктураРезультата); // нерегламентное КС
	КонецЕсли;
		
	Если Раздел322Заполнен И Не ЭтоКорректировка Тогда
		ПроверитьКС_Д_4(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_Д_5(СтруктураРезультата); // нерегламентное КС
	КонецЕсли;
		
	Если Раздел3Заполнен Тогда
		ПроверитьКС_Д_13(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_Д_14(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_Д_20(СтруктураРезультата); // нерегламентное КС
		ПроверитьКС_Д_21(СтруктураРезультата); // нерегламентное КС
	КонецЕсли;
		
	Если Приложен1Заполнено Тогда
		ПроверитьКС_Д_22(СтруктураРезультата); // нерегламентное КС
	КонецЕсли;
	
	ПроверитьКС_Д_23(СтруктураРезультата); // нерегламентное КС
	
	// Проверки ФСС.
	Если Приложен2Заполнено Тогда
		ПроверитьКС_1(СтруктураРезультата);
	КонецЕсли;
		
	Если Приложен3Заполнено Тогда
		
		ПроверитьКС_2(СтруктураРезультата);
		ПроверитьКС_3(СтруктураРезультата);
		ПроверитьКС_4(СтруктураРезультата);
		ПроверитьКС_5(СтруктураРезультата);
		ПроверитьКС_6(СтруктураРезультата);
		ПроверитьКС_7(СтруктураРезультата);
		ПроверитьКС_8(СтруктураРезультата);
		ПроверитьКС_9(СтруктураРезультата);
		ПроверитьКС_10(СтруктураРезультата);
		ПроверитьКС_11(СтруктураРезультата);
		ПроверитьКС_12(СтруктураРезультата);
		ПроверитьКС_13(СтруктураРезультата);
		ПроверитьКС_14(СтруктураРезультата);
		ПроверитьКС_15(СтруктураРезультата);
		ПроверитьКС_16(СтруктураРезультата);
		ПроверитьКС_17(СтруктураРезультата);
		ПроверитьКС_18(СтруктураРезультата);
		ПроверитьКС_19(СтруктураРезультата);
		ПроверитьКС_20(СтруктураРезультата);
		ПроверитьКС_21(СтруктураРезультата);
		ПроверитьКС_22(СтруктураРезультата);
		ПроверитьКС_23(СтруктураРезультата);
		ПроверитьКС_24(СтруктураРезультата);
		ПроверитьКС_25(СтруктураРезультата);
		ПроверитьКС_26(СтруктураРезультата);
		ПроверитьКС_27(СтруктураРезультата);
		ПроверитьКС_28(СтруктураРезультата);
		ПроверитьКС_29(СтруктураРезультата);
		
	КонецЕсли;
		
	Если Приложен4Заполнено Тогда
		
		ПроверитьКС_30(СтруктураРезультата);
		ПроверитьКС_31(СтруктураРезультата);
		ПроверитьКС_32(СтруктураРезультата);
		ПроверитьКС_33(СтруктураРезультата);
		ПроверитьКС_34(СтруктураРезультата);
		ПроверитьКС_35(СтруктураРезультата);
		ПроверитьКС_36(СтруктураРезультата);
		ПроверитьКС_37(СтруктураРезультата);
		ПроверитьКС_38(СтруктураРезультата);
		ПроверитьКС_39(СтруктураРезультата);
		ПроверитьКС_40(СтруктураРезультата);
		ПроверитьКС_41(СтруктураРезультата);
		ПроверитьКС_42(СтруктураРезультата);
		ПроверитьКС_43(СтруктураРезультата);
		ПроверитьКС_44(СтруктураРезультата);
		ПроверитьКС_45(СтруктураРезультата);
		ПроверитьКС_46(СтруктураРезультата);
		ПроверитьКС_47(СтруктураРезультата);
		ПроверитьКС_48(СтруктураРезультата);
		ПроверитьКС_49(СтруктураРезультата);
		ПроверитьКС_50(СтруктураРезультата);
		ПроверитьКС_51(СтруктураРезультата);
		ПроверитьКС_52(СтруктураРезультата);
		ПроверитьКС_53(СтруктураРезультата);
		ПроверитьКС_54(СтруктураРезультата);
		ПроверитьКС_55(СтруктураРезультата);
		ПроверитьКС_56(СтруктураРезультата);
		ПроверитьКС_57(СтруктураРезультата);
		ПроверитьКС_58(СтруктураРезультата);
		ПроверитьКС_59(СтруктураРезультата);
		ПроверитьКС_60(СтруктураРезультата);
		ПроверитьКС_61(СтруктураРезультата);
		ПроверитьКС_62(СтруктураРезультата);
		ПроверитьКС_63(СтруктураРезультата);
		ПроверитьКС_64(СтруктураРезультата);
		ПроверитьКС_65(СтруктураРезультата);
		ПроверитьКС_66(СтруктураРезультата);
		ПроверитьКС_67(СтруктураРезультата);
		ПроверитьКС_68(СтруктураРезультата);
		ПроверитьКС_69(СтруктураРезультата);
		ПроверитьКС_70(СтруктураРезультата);
		ПроверитьКС_71(СтруктураРезультата);
		ПроверитьКС_72(СтруктураРезультата);
		ПроверитьКС_73(СтруктураРезультата);
		ПроверитьКС_74(СтруктураРезультата);
		ПроверитьКС_75(СтруктураРезультата);
		ПроверитьКС_76(СтруктураРезультата);
		ПроверитьКС_77(СтруктураРезультата);
		ПроверитьКС_78(СтруктураРезультата);
		ПроверитьКС_79(СтруктураРезультата);
		ПроверитьКС_80(СтруктураРезультата);
		ПроверитьКС_81(СтруктураРезультата);
		ПроверитьКС_82(СтруктураРезультата);
		ПроверитьКС_83(СтруктураРезультата);
		ПроверитьКС_84(СтруктураРезультата);
		ПроверитьКС_85(СтруктураРезультата);
		ПроверитьКС_86(СтруктураРезультата);
		ПроверитьКС_87(СтруктураРезультата);
		ПроверитьКС_88(СтруктураРезультата);
		ПроверитьКС_89(СтруктураРезультата);
		ПроверитьКС_90(СтруктураРезультата);
		ПроверитьКС_91(СтруктураРезультата);
		ПроверитьКС_92(СтруктураРезультата);
		ПроверитьКС_93(СтруктураРезультата);
		
	КонецЕсли;
		
	Если Приложен3Заполнено Тогда
		
		ПроверитьКС_94а(СтруктураРезультата);
		ПроверитьКС_94б(СтруктураРезультата);
		ПроверитьКС_95а(СтруктураРезультата);
		ПроверитьКС_95б(СтруктураРезультата);
		ПроверитьКС_96а(СтруктураРезультата);
		ПроверитьКС_96б(СтруктураРезультата);
		ПроверитьКС_97а(СтруктураРезультата);
		ПроверитьКС_97б(СтруктураРезультата);
		ПроверитьКС_98а(СтруктураРезультата);
		ПроверитьКС_98б(СтруктураРезультата);
		ПроверитьКС_99а(СтруктураРезультата);
		ПроверитьКС_99б(СтруктураРезультата);
		ПроверитьКС_100(СтруктураРезультата);
		ПроверитьКС_101(СтруктураРезультата);
		ПроверитьКС_102(СтруктураРезультата);
		ПроверитьКС_103(СтруктураРезультата);
		ПроверитьКС_104(СтруктураРезультата);
		ПроверитьКС_105(СтруктураРезультата);
		ПроверитьКС_106(СтруктураРезультата);
		ПроверитьКС_107(СтруктураРезультата);
		ПроверитьКС_108(СтруктураРезультата);
		ПроверитьКС_109(СтруктураРезультата);
		ПроверитьКС_110(СтруктураРезультата);
		ПроверитьКС_111(СтруктураРезультата);
		ПроверитьКС_112(СтруктураРезультата);
		ПроверитьКС_113(СтруктураРезультата);
		ПроверитьКС_114а(СтруктураРезультата);
		ПроверитьКС_114б(СтруктураРезультата);
		ПроверитьКС_115а(СтруктураРезультата);
		ПроверитьКС_115б(СтруктураРезультата);
		ПроверитьКС_116а(СтруктураРезультата);
		ПроверитьКС_116б(СтруктураРезультата);
		ПроверитьКС_117а(СтруктураРезультата);
		ПроверитьКС_117б(СтруктураРезультата);
		ПроверитьКС_118а(СтруктураРезультата);
		ПроверитьКС_118б(СтруктураРезультата);
		ПроверитьКС_119а(СтруктураРезультата);
		ПроверитьКС_119б(СтруктураРезультата);
		ПроверитьКС_120а(СтруктураРезультата);
		ПроверитьКС_120б(СтруктураРезультата);
		ПроверитьКС_121а(СтруктураРезультата);
		ПроверитьКС_121б(СтруктураРезультата);
		ПроверитьКС_122а(СтруктураРезультата);
		ПроверитьКС_122б(СтруктураРезультата);
		ПроверитьКС_123(СтруктураРезультата);
		ПроверитьКС_124(СтруктураРезультата);
		ПроверитьКС_125а(СтруктураРезультата);
		ПроверитьКС_125б(СтруктураРезультата);
		ПроверитьКС_126(СтруктураРезультата);
		ПроверитьКС_127(СтруктураРезультата);
		
	КонецЕсли;
		
	Если Приложен4Заполнено Тогда
		
		ПроверитьКС_128(СтруктураРезультата);
		ПроверитьКС_129(СтруктураРезультата);
		ПроверитьКС_130(СтруктураРезультата);
		ПроверитьКС_131(СтруктураРезультата);
		ПроверитьКС_132а(СтруктураРезультата);
		ПроверитьКС_132б(СтруктураРезультата);
		ПроверитьКС_133(СтруктураРезультата);
		ПроверитьКС_134(СтруктураРезультата);
		ПроверитьКС_135а(СтруктураРезультата);
		ПроверитьКС_135б(СтруктураРезультата);
		ПроверитьКС_136(СтруктураРезультата);
		ПроверитьКС_137(СтруктураРезультата);
		ПроверитьКС_138а(СтруктураРезультата);
		ПроверитьКС_138б(СтруктураРезультата);
		ПроверитьКС_139(СтруктураРезультата);
		ПроверитьКС_140(СтруктураРезультата);
		ПроверитьКС_141(СтруктураРезультата);
		ПроверитьКС_142(СтруктураРезультата);
		ПроверитьКС_143(СтруктураРезультата);
		ПроверитьКС_144(СтруктураРезультата);
		ПроверитьКС_145а(СтруктураРезультата);
		ПроверитьКС_145б(СтруктураРезультата);
		ПроверитьКС_146(СтруктураРезультата);
		ПроверитьКС_147(СтруктураРезультата);
		ПроверитьКС_148а(СтруктураРезультата);
		ПроверитьКС_148б(СтруктураРезультата);
		ПроверитьКС_149(СтруктураРезультата);
		ПроверитьКС_150(СтруктураРезультата);
		ПроверитьКС_151а(СтруктураРезультата);
		ПроверитьКС_151б(СтруктураРезультата);
		ПроверитьКС_152(СтруктураРезультата);
		ПроверитьКС_153(СтруктураРезультата);
		ПроверитьКС_154(СтруктураРезультата);
		ПроверитьКС_155(СтруктураРезультата);
		ПроверитьКС_156(СтруктураРезультата);
		ПроверитьКС_157(СтруктураРезультата);
		ПроверитьКС_158(СтруктураРезультата);
		ПроверитьКС_159(СтруктураРезультата);
		ПроверитьКС_160а(СтруктураРезультата);
		ПроверитьКС_160б(СтруктураРезультата);
		ПроверитьКС_161(СтруктураРезультата);
		ПроверитьКС_162(СтруктураРезультата);
		ПроверитьКС_163а(СтруктураРезультата);
		ПроверитьКС_163б(СтруктураРезультата);
		ПроверитьКС_164(СтруктураРезультата);
		ПроверитьКС_165(СтруктураРезультата);
		ПроверитьКС_166а(СтруктураРезультата);
		ПроверитьКС_166б(СтруктураРезультата);
		ПроверитьКС_167(СтруктураРезультата);
		ПроверитьКС_168(СтруктураРезультата);
		ПроверитьКС_169(СтруктураРезультата);
		ПроверитьКС_170(СтруктураРезультата);
		ПроверитьКС_171(СтруктураРезультата);
		ПроверитьКС_172(СтруктураРезультата);
		ПроверитьКС_173(СтруктураРезультата);
		ПроверитьКС_174(СтруктураРезультата);
		ПроверитьКС_175(СтруктураРезультата);
		ПроверитьКС_176а(СтруктураРезультата);
		ПроверитьКС_176б(СтруктураРезультата);
		ПроверитьКС_177(СтруктураРезультата);
		ПроверитьКС_178(СтруктураРезультата);
		ПроверитьКС_179а(СтруктураРезультата);
		ПроверитьКС_179б(СтруктураРезультата);
		ПроверитьКС_180(СтруктураРезультата);
		ПроверитьКС_181(СтруктураРезультата);
		ПроверитьКС_182а(СтруктураРезультата);
		ПроверитьКС_182б(СтруктураРезультата);
		ПроверитьКС_183(СтруктураРезультата);
		ПроверитьКС_184(СтруктураРезультата);
		ПроверитьКС_185(СтруктураРезультата);
		ПроверитьКС_186(СтруктураРезультата);
		
	КонецЕсли;
		
КонецПроцедуры	

#КонецОбласти

#Область КонтрольныеСоотношения_Проверки

#Область Проверки_Раздела_3_с_2018

Процедура ПроверитьКС_0_1а(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 = Пд321СтМ1220Гр01 * СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01),
	//                     когда Пд321СтМ1190Гр01 = "01"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 кв. отчетного (расчетного) периода (первый отчетный (расчетный) период при начале "
		+ "осуществления плательщиком деятельности в течении года): ст. 240 (1 месяц ОП) подр. 3.2.1 Р 3 = ст. 220 (1 "
		+ "месяц ОП) х соответствующий значению ст. 200 подр. 3.2.1. Р. 3 тариф страховых взносов'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ по месяцу, указанная в сведениях по застрахованному лицу ≠ база для "
		+ "исчисления страховых взносов умноженная на тариф, соответствующий коду категории застрахованного лица'"));
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если НЕ ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 2);
	ПроверитьКС_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1б(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 = (Пд321СтМ1220Гр01_1мес + Пд321СтМ1220Гр01)
	//                   * СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01) - Пд321СтМ1240Гр01_1мес
	//                   , когда Пд321СтМ1190Гр01 = "02"'.
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 кв. отчетного (расчетного) периода (первый отчетный (расчетный) период при начале "
		+ "осуществления плательщиком деятельности в течении года): ст. 240 (2 месяц ОП) подр. 3.2.1 Р 3 = ((ст. 220 (1 "
		+ "месяц ОП) + ст. 220 (2 месяц ОП)) х соответствующий значению ст. 200 подр. 3.2.1. Р. 3 тариф страховых "
		+ "взносов) - ст. 240 (1 месяц ОП)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ по месяцу, указанная в сведениях по застрахованному лицу ≠ база для "
		+ "исчисления страховых взносов умноженная на тариф, соответствующий коду категории застрахованного лица'"));
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если НЕ ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 1);
	ПроверитьКС_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1в(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 = (Пд321СтМ1220Гр01_1мес + Пд321СтМ1220Гр01_2мес + Пд321СтМ1220Гр01)
	//                   * СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01) - Пд321СтМ1240Гр01_1мес - Пд321СтМ1240Гр01_2мес
	//                   , когда Пд321СтМ1190Гр01 = "03".
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 кв. отчетного (расчетного) периода (первый отчетный (расчетный) период при начале "
		+ "осуществления плательщиком деятельности в течении года): ст. 240 (3 месяц ОП) подр. 3.2.1 Р 3 = ((ст. 220 (1 "
		+ "месяц ОП) + ст. 220 (2 месяц ОП) + ст. 220 (3 месяц ОП)) х соответствующий значению ст. 200 подр. 3.2.1. "
		+ "Р. 3 тариф страховых взносов) - (ст. 240 (1 месяц ОП) + ст. 240 (2 месяц ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ по месяцу, указанная в сведениях по застрахованному лицу ≠ база для "
		+ "исчисления страховых взносов умноженная на тариф, соответствующий коду категории застрахованного лица'"));
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если НЕ ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц);
	ПроверитьКС_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1г(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 = (Пд321СтМ1220Гр01ПРП + Пд321СтМ1220Гр01)
	//                   * СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01) - Пд321СтМ1240Гр01ПРП
	//                   , когда Пд321СтМ1190Гр01 = "04,07,10".
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные (расчетные) периоды.(2, 3, 4 кварталы): ст. 240 (1 месяц квартала "
		+ "ОП) подр. 3.2.1 Р. 3 = (ст. 220 ПОП (с начала расчетного периода) + ст. 220 (1 месяц квартала ОП)) х "
		+ "соответствующий значению ст. 200 подр. 3.2.1. Р. 3 тариф страховых взносов)) -  ст. 240 ПОП (с начала "
		+ "расчетного периода)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ по месяцу, указанная в сведениях по застрахованному лицу ≠ база для "
		+ "исчисления страховых взносов умноженная на тариф, соответствующий коду категории застрахованного лица'"));
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 2);
	ПроверитьКС_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1д(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 = (Пд321СтМ1220Гр01ПРП +  Пд321СтМ1220Гр01_1мес + Пд321СтМ1220Гр01)
	//                   * СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01) - (Пд321СтМ1240Гр01ПРП + Пд321СтМ1240Гр01_1мес)
	//                   , когда Пд321СтМ1190Гр01 = "05,08,11".
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные (расчетные) периоды.(2, 3, 4 кварталы): ст. 240 (2 месяц квартала "
		+ "ОП) подр. 3.2.1 Р. 3 = (ст. 220 ПОП (с начала расчетного периода) + (ст. 220 (1 месяц квартала ОП) + ст. 220 "
		+ "(2 месяц квартала ОП)) х соответствующий значению ст. 200 подр. 3.2.1. Р. 3 тариф страховых взносов"")) – "
		+ "( ст. 240 ПОП (с начала расчетного периода) + ст. 240 (1 месяц квартала ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ по месяцу, указанная в сведениях по застрахованному лицу ≠ база для "
		+ "исчисления страховых взносов умноженная на тариф, соответствующий коду категории застрахованного лица'"));
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 1);
	ПроверитьКС_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1е(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 = (Пд321СтМ1220Гр01ПРП + Пд321СтМ1220Гр01_1мес
	//                  +  Пд321СтМ1220Гр01_2мес + Пд321СтМ1220Гр01) * СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01)
	//                  - (Пд321СтМ1240Гр01ПРП + Пд321СтМ1240Гр01_1мес + Пд321СтМ1240Гр01_2мес)
	//                  ,  когда Пд321СтМ1190Гр01 = "06,09,12".
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные (расчетные) периоды.(2, 3, 4 кварталы): ст. 240 (3 месяц квартала "
		+ "ОП) подр. 3.2.1 Р. 3 = (ст. 220 ПОП (с начала расчетного периода) + (ст. 220 (1 месяц квартала ОП) + ст. 220 "
		+ "(2 месяц квартала ОП) + ст. 220 (3 месяц квартала ОП))  * соответствующий значению ст. 200 подр. 3.2.1. Р. "
		+ "3 тариф страховых взносов)) – ( ст. 240 ПОП (с начала расчетного периода) + ст. 240 (1 месяц квартала ОП) "
		+ "+ ст. 240 (2 месяц квартала ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ по месяцу, указанная в сведениях по застрахованному лицу ≠ база для "
		+ "исчисления страховых взносов умноженная на тариф, соответствующий коду категории застрахованного лица'"));
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц);
	ПроверитьКС_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1_код(Настройки)
	
	Снилс		= ПоказательПоСтроке("Пд31Ст70Гр01");
	Фамилия		= ПоказательПоСтроке("Пд31Ст80Гр01");
	База		= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Взнос		= ПоказательПоСтроке("Пд321СтМ1240Гр01");
	БазаПРП		= ПоказательПоСтроке("Пд321СтМ1220Гр01ПРП");
	ВзносПРП	= ПоказательПоСтроке("Пд321СтМ1240Гр01ПРП");
	МесяцОтчета	= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	Настройки.ОписаниеКС = ?(Настройки.Погрешность, 
		Настройки.ОписаниеКС + НСтр("ru=', с учетом погрешности 1 коп.'"), Настройки.ОписаниеКС);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Категория КАК Категория
	|ПОМЕСТИТЬ ВТ_ДанныеПериода
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Месяц_ = &НомерМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Раздел321.Фамилия + ВТ_Раздел321.Снилс + 
	|	ВТ_Раздел321.ГруппаТарифов + ВТ_Раздел321.Категория КАК Ключ,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Ставка КАК Ставка,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.П220 КАК П220,
	|	ВТ_Раздел321.П240 КАК П240
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеПериода КАК ВТ_ДП
	|		ПО ВТ_Раздел321.Снилс = ВТ_ДП.Снилс
	|			И ВТ_Раздел321.Категория = ВТ_ДП.Категория
	|ГДЕ
	|	ВТ_Раздел321.Месяц_ <= &НомерМесяца
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	МИНИМУМ(Ставка),
	|	СУММА(П220)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ДанныеПериода";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ		= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФ.Следующий() Цикл
		
		Погрешность		= 0.01;
		Счетчик			= 0;
		Сумма240Лев		= 0;
		Сумма240Прав	= 0;
		Сумма240ПравСтр	= "";
		Сумма220Стр		= "";
		Выборка		= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
	
			Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
			ПоказательВзноса = ?(МесяцОтчета <> Выборка.РасчПериод, ВзносПРП, Взнос);
			ПоказательБазы = ?(МесяцОтчета <> Выборка.РасчПериод, БазаПРП, База);
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательБазы, Выборка.НомерСтроки, "П220");
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательВзноса, Выборка.НомерСтроки, "П240");
			Сумма220Стр = Сумма220Стр + ПоказательБазы.ЗначениеСтр + " + ";
			Если Счетчик = 0 Тогда
				Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Выборка.Фамилия, Выборка.Снилс));
				ЗарегистрироватьФормулу(Настройки);
				ВставитьЗначениеПоказателя(Выборка, Фамилия	, "Фамилия");
				ВставитьЗначениеПоказателя(Выборка, Снилс	, "Снилс");
				ВнестиПоказательВРасшифровку(Фамилия, "Раздел3", Выборка.НомерСтраницы, Отчет);
				ВнестиПоказательВРасшифровку(Снилс	, "Раздел3", Выборка.НомерСтраницы, Отчет);
				Сумма240Лев = Сумма240Лев + ПоказательВзноса.Значение;
			Иначе
				Сумма240Прав = Сумма240Прав + ПоказательВзноса.Значение;
				Сумма240ПравСтр = Сумма240ПравСтр + ПоказательВзноса.ЗначениеСтр + " - ";
			КонецЕсли;
			Дополнение = Выборка.ПериодСтр + " месяц, категория " + Выборка.Категория + ", ставка " + Выборка.Ставка;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательБазы, Дополнение);
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательВзноса, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательБазы, "Раздел3", Выборка.НомерСтраницы, Отчет);
			ВнестиПоказательВРасшифровку(ПоказательВзноса, "Раздел3", Выборка.НомерСтраницы, Отчет);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		Если Настройки.Погрешность Тогда
			РасчетнаяСумма		= ВыборкаФ.П220 * ВыборкаФ.Ставка - Сумма240Прав;
			РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
			РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
			Настройки.ЭтоОшибка	= Сумма240Лев < РасчетнаяСуммаМин ИЛИ Сумма240Лев > РасчетнаяСуммаМак;
		Иначе
			РасчетнаяСумма = Окр(ВыборкаФ.П220 * ВыборкаФ.Ставка, 2) - Сумма240Прав;
			Настройки.ЭтоОшибка = НЕ Сумма240Лев = РасчетнаяСумма;
		КонецЕсли;
		
		ПогрешностьСтр	= ?(Настройки.Погрешность, " (± " + Погрешность + " )", "");
		Сумма220Стр		= ?(Настройки.НомерМесяца = 1, РасшифровкаВСтр(Сумма220Стр), "(" + РасшифровкаВСтр(Сумма220Стр) + ")");
		Сумма240ПравСтр	= ?(Настройки.НомерМесяца = 1, "", " - " + РасшифровкаВСтр(Сумма240ПравСтр));
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Сумма240Лев, Сумма220Стр, ВыборкаФ.Ставка, Сумма240ПравСтр, РасчетнаяСумма, ПогрешностьСтр);
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_2(СтруктураРезультата)
	
	// Формула КС: Пд321Ст250Гр04 = Пд321СтМ1240Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.2)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов с базы исчисления страховых взносов, не превышающих "
		+ "предельную величину за последние три месяца (гр. 4 ст. 250 р. 3) = ∑ ст. 240 р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Страховые взносы на ОПС с базы, не превыш.пред.величину, в разрезе каждого физического "
		+ "лица за 3 последних месяца отчетного периода ≠ сумме страховых взносов на ОПС с базы, не превышающей "
		+ "предельную величину, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПоказательСуммы"	, "Пд321СтМ1240Гр01");
	Настройки.Вставить("ПоказательИтога"	, "Пд321Ст250Гр04");
	ПроверитьКС_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_3а(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст61Гр03 = Пд321СтМ1240Гр01, когда Пд321СтМ1190Гр01 = "01","04","07","10"
	//                  И (Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.3а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 3 ст. 061 подразд. 1.1 прил. 1 (1 месяц ОП) по значению поля 001 прил. 1 Р. 1 "
		+ "соответствующему значению ст. 200 подр. 3.2.1 Р. 3 = ∑ст. 240 (1 месяц ОП) подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС за каждый месяц с базы, не превышающей предельной "
		+ "величины, в целом по плательщику не равна сумме исчисленных СВ на ОПС за соответствующий месяц с базы, не "
		+ "превышающей предельной величины, по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_0_3_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_3б(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст61Гр04 = Пд321СтМ1240Гр01, когда Пд321СтМ1190Гр01 = "02","05","08","11"
	//                  И (Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.3б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 4 ст. 061 подразд. 1.1 прил. 1 (2 месяц ОП) по значению поля 001 прил. 1 Р. 1 "
		+ "соответствующему значению ст. 200 подр. 3.2.1 Р. 3 = ∑ ст. 240 (2 месяц ОП) подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС за каждый месяц с базы, не превышающей предельной "
		+ "величины, в целом по плательщику не равна сумме исчисленных СВ на ОПС за соответствующий месяц с базы, не "
		+ "превышающей предельной величины, по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_0_3_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_3в(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст61Гр05 = Пд321СтМ1240Гр01, когда Пд321СтМ1190Гр01 = "03","06","09","12"
	//                  И (Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.3в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 5 ст. 061 подразд. 1.1 прил. 1 (3 месяц ОП) по значению поля 001 прил. 1 Р. 1 "
		+ "соответствующему значению ст. 200 подр. 3.2.1 Р. 3 = ∑ст. 240 (3 месяц ОП) подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС за каждый месяц с базы, не превышающей предельной "
		+ "величины, в целом по плательщику не равна сумме исчисленных СВ на ОПС за соответствующий месяц с базы, не "
		+ "превышающей предельной величины, по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_0_3_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_3_код(Настройки)
	
	ПоказательР1_1		= ПоказательПоСтроке("Пд11Пр1Ст61Гр0" + Настройки.ГрафаР1);
	ПоказательР1_2		= ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	ПоказательР3_1		= ПоказательПоСтроке("Пд321СтМ1240Гр01");
	ПоказательР3_1ПРП	= ПоказательПоСтроке("Пд321СтМ1240Гр01ПРП");
	МесяцОтчета			= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.ГрафаР3);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.ГруппаТарифов КАК ГруппаТарифов,
	|	ВТ_Раздел321.Фамилия + 
	|	ВТ_Раздел321.Снилс + ВТ_Раздел321.Категория КАК Ключ,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.П240 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Квартал_ В (&Квартал)
	|	И ВТ_Раздел321.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	ГруппаТарифов";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого Элемент Из мДанныеОтчета.ДанныеКС.ДеревоТарифов111.Строки Цикл
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Т", Элемент.ГруппаТарифов));
		ЗарегистрироватьФормулу(Настройки);
		
		СуммаР1_1		= 0;
		СуммаР1_2		= 0;
		СуммаР3_1		= 0;
		СуммаР1_1Стр	= "";
		СуммаР3_1Стр	= "";
		
		Для Каждого Подэлемент Из Элемент.Строки Цикл
			ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_1);
			Дополнение = "тариф " + Подэлемент.ГруппаТарифов;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_1, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательР1_1, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
			СуммаР1_1 = СуммаР1_1 + ПоказательР1_1.Значение;
			СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_1.Значение + " + ";
			Если Настройки.ГрафаР1 = 1 Тогда
				ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_2);
				Дополнение = "тариф " + Подэлемент.ГруппаТарифов;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_2, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР1_2, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
				СуммаР1_2 = СуммаР1_2 + ПоказательР1_2.Значение;
				СуммаР3_1Стр = СуммаР3_1Стр + ПоказательР1_2.Значение + " + ";
			КонецЕсли;
		КонецЦикла;
		
		Счетчик = 1;
		Если ВыборкаТ.НайтиСледующий(Новый Структура("ГруппаТарифов", Элемент.ГруппаТарифов)) Тогда
			СуммаР3_1	= ВыборкаТ.ПоказательР3_1;
			Выборка		= ВыборкаТ.Выбрать();
			Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
				Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
				ПоказательР3_1 = ?(МесяцОтчета <> Выборка.РасчПериод, ПоказательР3_1ПРП, ПоказательР3_1);
				ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
				Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					Дополнение = Выборка.ПериодСтр + " мес., кат. " + Выборка.Категория + " => тариф " 
						+ Выборка.ГруппаТарифов + ", " + Выборка.Фамилия;
					ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
					ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
					Счетчик = Счетчик + 1;
				КонецЕсли;
				Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаР3_1), "<...>", "0"), 
						ПоказательР3_1.Значение) + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Настройки.ЭтоОшибка = НЕ СуммаР1_1 = СуммаР3_1 + СуммаР1_2;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			РасшифровкаВСтр(СуммаР1_1Стр), СуммаР1_1, РасшифровкаВСтр(СуммаР3_1Стр), СуммаР3_1 + СуммаР1_2, 
			Элемент.ГруппаТарифов);
		ВыборкаТ.Сбросить();
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_4(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст61Гр02 = Пд321СтМ1240Гр01_1мес + Пд321СтМ1240Гр01_2мес + Пд321СтМ1240Гр01_3мес
	//                   , когда Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 2 ст. 061 подразд. 1.1 прил. 1  по значению поля 001 прил. 1 Р. 1 соответствующему "
		+ "значению ст. 200 подр. 3.2.1 Р. 3 = ∑ (ст. 240 (1 месяц .ОП) + ст. 240 (2 месяц ОП) + ст. 240 (3 месяц ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС за последние три месяца ОП с базы, не превышающей "
		+ "предельной величины, в целом по плательщику не равна сумме исчисленных СВ на ОПС за последние три  месяца ОП "
		+ "по каждому физическому лицу с базы, не превышающей предельной величины'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 2);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_3_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_5(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст61Гр01 = Пд11Пр1Ст61Гр02 + (Пд321СтМ1240Гр01ПРП_1мес + Пд321СтМ1240Гр01ПРП_2мес
	//                   + Пд321СтМ1240Гр01ПРП_3мес), когда Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.5)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 1 ст. 061 подразд. 1.1 прил. 1 по значению поля 001 прил. 1 Р. 1 соответствующему "
		+ "значению ст. 200 подр. 3.2.1 Р. 3 = гр. 2 ст. 061 + ∑ ((ст. 240 (1 месяц ПОП) + ст. 240 (2 месяц ПОП) + ст. "
		+ "240 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС с начала расчетного периода с базы, не превышающей "
		+ "предельной величины, в целом по плательщику не равна сумме исчисленных СВ на ОПС с начала расчетного периода "
		+ "по каждому физическому лицу за соответствующий месяц с базы, не превышающей предельной величины'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", 
		мДанныеОтчета.ДанныеКС.УсловиеКварталов.Получить(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания)));
	Настройки.Вставить("ГрафаР1", 1);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_3_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6а(СтруктураРезультата)
	
	// Формула КС: Пд322Ст290Гр01 = Пд322Ст280Гр01 * СтавкаДопТарифаПоКоду(Пд322Ст270Гр01)
	//                   , когда Пд322Ст260Гр01 = "01","04","07","10"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 0.6а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Ст. 290 (1 месяц ОП) подр. 3.2.2 Р. 3 = ст. 280 (1 месяц ОП) * соответствующий значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 Итог [%4]%5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='СВ на ОПС за каждый месяц по дополнительному тарифу, указанные в сведениях по "
		+ "застрахованному лицу не равны базе для исчисления страховых взносов по дополнительному тарифу умноженной на "
		+ "соответствующий тариф'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 2);
	ПроверитьКС_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6б(СтруктураРезультата)
	
	// Формула КС: Пд322Ст290Гр01 = Пд322Ст280Гр01 * СтавкаДопТарифаПоКоду(Пд322Ст270Гр01)
	//                   , когда Пд322Ст260Гр01 = "02","05","08","11"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 0.6б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Ст. 290 (2 месяц ОП) подр. 3.2.2 Р. 3 = ст. 280 (2 месяц ОП) * соответствующий значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 Итог [%4]%5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='СВ на ОПС за каждый месяц по дополнительному тарифу, указанные в сведениях по "
		+ "застрахованному лицу не равны базе для исчисления страховых взносов по дополнительному тарифу умноженной на "
		+ "соответствующий тариф'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 1);
	ПроверитьКС_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6в(СтруктураРезультата)
	
	// Формула КС: Пд322Ст290Гр01 = Пд322Ст280Гр01 * СтавкаДопТарифаПоКоду(Пд322Ст270Гр01)
	//                   , когда Пд322Ст260Гр01 = "03","06","09","12"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 0.6в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Ст. 290 (3 месяц ОП) подр. 3.2.2 Р. 3 = ст. 280 (3 месяц ОП) * соответствующий значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 Итог [%4]%5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='СВ на ОПС за каждый месяц по дополнительному тарифу, указанные в сведениях по "
		+ "застрахованному лицу не равны базе для исчисления страховых взносов по дополнительному тарифу умноженной на "
		+ "соответствующий тариф'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц);
	ПроверитьКС_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6_код(Настройки)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел322.Фамилия + 
	|	ВТ_Раздел322.Снилс + ВТ_Раздел322.Категория КАК Ключ,
	|	ВТ_Раздел322.Категория КАК Категория,
	|	ВТ_Раздел322.Ставка КАК Ставка,
	|	ВТ_Раздел322.Фамилия КАК Фамилия,
	|	ВТ_Раздел322.Снилс КАК Снилс,
	|	ВТ_Раздел322.Месяц_ КАК Период,
	|	ВТ_Раздел322.Отчет КАК Отчет,
	|	ВТ_Раздел322.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел322.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел322.П280 КАК П280,
	|	ВТ_Раздел322.П290 КАК П290
	|ИЗ
	|	ВТ_Раздел322 КАК ВТ_Раздел322
	|ГДЕ
	|	ВТ_Раздел322.Месяц_ = &НомерМесяца
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пд31Ст70Гр01	= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01	= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд322Ст280Гр01	= ПоказательПоСтроке("Пд322Ст280Гр01");
	Пд322Ст290Гр01	= ПоказательПоСтроке("Пд322Ст290Гр01");
	
	Погрешность = 0.005;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Выборка.Фамилия, Выборка.Снилс));
		ЗарегистрироватьФормулу(Настройки);
		Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
		Пд322Ст270Гр01	= ПоказательПоСтроке("Пд322Ст270Гр01");
		ВставитьЗначениеМногострочногоПоказателя(Выборка, Пд322Ст270Гр01, Выборка.НомерСтроки, "Категория");
		Пд322Ст270Гр01.Вставить("Значение", Пд322Ст270Гр01.ЗначениеСтр + ", Ставка " + Выборка.Ставка);
		ВставитьЗначениеПоказателя(Выборка, Пд31Ст80Гр01, "Фамилия");
		ВставитьЗначениеПоказателя(Выборка, Пд31Ст70Гр01, "Снилс");
		ВнестиПоказательВРасшифровку(Пд322Ст270Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		ВнестиПоказательВРасшифровку(Пд31Ст80Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		ВнестиПоказательВРасшифровку(Пд31Ст70Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		Пд322Ст260Гр01	= ПоказательПоСтроке("Пд322Ст260Гр01");
		ВставитьЗначениеМногострочногоПоказателя(Выборка, Пд322Ст260Гр01, Выборка.НомерСтроки, "Период");
		Пд322Ст260Гр01.Вставить("Значение", Пд322Ст260Гр01.ЗначениеСтр + " месяц");
		ВставитьЗначениеМногострочногоПоказателя(Выборка, Пд322Ст280Гр01, Выборка.НомерСтроки, "П280");
		ВставитьЗначениеМногострочногоПоказателя(Выборка, Пд322Ст290Гр01, Выборка.НомерСтроки, "П290");
		ВнестиПоказательВРасшифровку(Пд322Ст260Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		ВнестиПоказательВРасшифровку(Пд322Ст290Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		РасчетнаяСумма		= Выборка.П280 * Выборка.Ставка;
		РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
		РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
		ПогрешностьСтр		= " (± " + Погрешность + " )";
		Настройки.ЭтоОшибка	= Выборка.П290 < РасчетнаяСуммаМин ИЛИ Выборка.П290 > РасчетнаяСуммаМак;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Выборка.П290, Выборка.П280, Выборка.Ставка, РасчетнаяСумма, ПогрешностьСтр);
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_7(СтруктураРезультата)
	
	// Формула КС: Пд322Ст300Гр02 = Пд322Ст290Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.7)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов за последние три месяца (гр. 2 ст. 300 р. 3) = ∑ ст. "
		+ "290 р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Страховые взносы на ОПС по доп.тарифу, в разрезе каждого физического лица за 3 последних "
		+ "месяца отчетного периода ≠ сумме страховых взносов на ОПС по дополнительному тарифу, в разрезе каждого "
		+ "физического лица за каждый из 3-х последних месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПоказательСуммы"	, "Пд322Ст290Гр01");
	Настройки.Вставить("ПоказательИтога"	, "Пд322Ст300Гр02");
	ПроверитьКС_0_21_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_8а(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст50Гр03 = Пд322Ст290Гр01, когда Пд322Ст260Гр01 = "01","04","07","10"
	//                  И (Пд131Пр1Ст1Гр01 = Пд322Ст270Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.8а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 3 ст. 050 подразд. 1.3.1 (1 месяц ОП) по значению поля 001 соответствующему значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 =  ∑ ст. 290 (1 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ на ОПС по дополнительному тарифу за каждый месяц в целом по "
		+ "плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за соответствующий месяц по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_8б(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст50Гр04 = Пд322Ст290Гр01, когда Пд322Ст260Гр01 = "02","05","08","11"
	//                  И (Пд131Пр1Ст1Гр01 = Пд322Ст270Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.8б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 4 ст. 050 подразд. 1.3.1  (2 месяц ОП) по значению поля 001 соответствующему значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 290 (2 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ на ОПС по дополнительному тарифу за каждый месяц в целом по "
		+ "плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за соответствующий месяц по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_8в(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст50Гр05 = Пд322Ст290Гр01, когда Пд322Ст260Гр01 = "03","06","09","12"
	//                  И (Пд131Пр1Ст1Гр01 = Пд322Ст270Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.8в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 5 ст. 050 подразд. 1.3.1  (3 месяц ОП) по значению поля 001 соответствующему значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 290 (3 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ на ОПС по дополнительному тарифу за каждый месяц в целом по "
		+ "плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за соответствующий месяц по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_8г(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст50Гр03 = Пд322Ст290Гр01, когда Пд322Ст260Гр01 = "01","04","07","10"
	//                  И (Пд132Пр1Ст3Гр01 = Пд322Ст270Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.8г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 3 ст. 050 подразд. 1.3.2  (1 месяц ОП) по значению поля 003 соответствующему значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 290 (1 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ на ОПС по дополнительному тарифу за каждый месяц в целом по "
		+ "плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за соответствующий месяц по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_8д(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст50Гр04 = Пд322Ст290Гр01, когда Пд322Ст260Гр01 = "02","05","08","11"
	//                  И (Пд132Пр1Ст3Гр01 = Пд322Ст270Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.8д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 4 ст. 050 подразд. 1.3.2 (2 месяц ОП) по значению поля 003 соответствующему значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 290 (2 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ на ОПС по дополнительному тарифу за каждый месяц в целом по "
		+ "плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за соответствующий месяц по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_8е(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст50Гр05 = Пд322Ст290Гр01, когда Пд322Ст260Гр01 = "03","06","09","12"
	//                  И (Пд132Пр1Ст3Гр01 = Пд322Ст270Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.8е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 5 ст. 050 подразд. 1.3.2 (3 месяц ОП) по значению поля 003 соответствующему значению "
		+ "ст. 270 подр. 3.2.2 Р. 3 = ∑  ст. 290 (3 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма исчисленных СВ на ОПС по дополнительному тарифу за каждый месяц в целом по "
		+ "плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за соответствующий месяц по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_8_код(Настройки)
	
	ПоказательР1_1	= ПоказательПоСтроке(Настройки.ПоказательТарифа + Настройки.ГрафаР1);
	ПоказательР1_2	= ПоказательПоСтроке(Настройки.ПоказательТарифа + "2");
	ПоказательР3_1		= ПоказательПоСтроке("Пд322Ст290Гр01");
	ПоказательР3_1ПРП	= ПоказательПоСтроке("Пд322Ст290Гр01ПРП");
	СимволП		= ?(Настройки.Раздел1 = "ДеревоТарифов131", "1", "3");
	ИмяРаздела	= ?(Настройки.Раздел1 = "ДеревоТарифов131", "Раздел1Прил1Подр1_3_1", "Раздел1Прил1Подр1_3_2");
	МесяцОтчета	= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.ГрафаР3);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел322.Категория КАК Категория,
	|	ВТ_Раздел322.Фамилия + ВТ_Раздел322.Снилс КАК Ключ,
	|	ВТ_Раздел322.Фамилия КАК Фамилия,
	|	ВТ_Раздел322.Снилс КАК Снилс,
	|	ВТ_Раздел322.Месяц_ КАК Период,
	|	ВТ_Раздел322.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел322.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел322.Отчет КАК Отчет,
	|	ВТ_Раздел322.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел322.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел322.П290 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел322 КАК ВТ_Раздел322
	|ГДЕ
	|	ВТ_Раздел322.Квартал_ В (&Квартал)
	|	И ВТ_Раздел322.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	Категория";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого Элемент Из мДанныеОтчета.ДанныеКС[Настройки.Раздел1].Строки Цикл
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Т", Элемент.КодТарифа));
		ЗарегистрироватьФормулу(Настройки);
		СуммаПоказательР1_1		= 0;
		СуммаПоказательР1_2		= 0;
		СуммаПоказательР3_1		= 0;
		СуммаПоказательР1_1Стр	= "";
		СуммаПоказательР3_1Стр	= "";
		
		Для Каждого Подэлемент Из Элемент.Строки Цикл
			ВставитьЗначениеМногострочногоПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_1, 
				Подэлемент.НомерСтроки);
			Дополнение = "значение поля 00" + СимволП + ": " + Подэлемент.Основание + " => код тарифа " + Подэлемент.КодТарифа;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_1, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательР1_1, ИмяРаздела, Подэлемент.НомерСтраницы);
			СуммаПоказательР1_1 = СуммаПоказательР1_1 + ПоказательР1_1.Значение;
			СуммаПоказательР1_1Стр = СуммаПоказательР1_1Стр + ПоказательР1_1.Значение + " + ";
			Если Настройки.ГрафаР1 = 1 Тогда
				ВставитьЗначениеМногострочногоПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_2, 
					Подэлемент.НомерСтроки);
				Дополнение = "значение поля 00" + СимволП + ": " + Подэлемент.Основание + " => код тарифа " + Подэлемент.КодТарифа;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_2, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР1_2, ИмяРаздела, Подэлемент.НомерСтраницы);
				СуммаПоказательР1_2 = СуммаПоказательР1_2 + ПоказательР1_2.Значение;
				СуммаПоказательР3_1Стр = СуммаПоказательР3_1Стр + ПоказательР1_2.Значение + " + ";
			КонецЕсли;
		КонецЦикла;
		
		Счетчик = 1;
		Если ВыборкаТ.НайтиСледующий(Новый Структура("Категория", Элемент.КодТарифа)) Тогда
			СуммаПоказательР3_1	= ВыборкаТ.ПоказательР3_1;
			Выборка		= ВыборкаТ.Выбрать();
			Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
				Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
				ПоказательР3_1 = ?(МесяцОтчета <> Выборка.РасчПериод, ПоказательР3_1ПРП, ПоказательР3_1);
				ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
				Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					Дополнение = Выборка.ПериодСтр + " месяц, код тарифа " + Выборка.Категория + ", " + Выборка.Фамилия;
					ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
					ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
					Счетчик = Счетчик + 1;
				КонецЕсли;
				Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					СуммаПоказательР3_1Стр = СуммаПоказательР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаПоказательР3_1Стр), 
						"<...>", "0"), ПоказательР3_1.Значение) + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
			
		Настройки.ЭтоОшибка = НЕ СуммаПоказательР1_1 = СуммаПоказательР3_1 + СуммаПоказательР1_2;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			РасшифровкаВСтр(СуммаПоказательР1_1Стр), СуммаПоказательР1_1, РасшифровкаВСтр(СуммаПоказательР3_1Стр), 
			СуммаПоказательР3_1 + СуммаПоказательР1_2, Элемент.КодТарифа);
		ВыборкаТ.Сбросить();
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_9а(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст50Гр02 = Пд322Ст290Гр01_1мес + Пд322Ст290Гр01_2мес + Пд322Ст290Гр01_3мес
	//             , когда Пд131Пр1Ст1Гр01 = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.9а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 2 ст. 050 подразд. 1.3.1  по значению поля 001 соответствующему значению ст. 270 "
		+ "подр. 3.2.2 Р. 3 = ∑ (ст. 290 (1 месяц ОП) + ст. 290 (2 месяц ОП) + ст. 290 (3 месяц ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС по дополнительному тарифу за последние три месяца ОП в "
		+ "целом по плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за последние три  месяца "
		+ "ОП по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 2);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_9б(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст50Гр02 = Пд322Ст290Гр01_1мес + Пд322Ст290Гр01_2мес + Пд322Ст290Гр01_3мес
	//             , когда Пд132Пр1Ст3Гр01 = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.9б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 2 ст. 050 подразд. 1.3.2 по значению поля 003 соответствующему значению ст. 270 "
		+ "подр. 3.2.2 Р. 3 = ∑ (ст. 290 (1 месяц ОП) + ст. 290 (2 месяц ОП) + ст. 290 (3 месяц ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС по дополнительному тарифу за последние три месяца ОП в "
		+ "целом по плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу за последние три  месяца "
		+ "ОП по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 2);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_10а(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст50Гр01 = Пд131Пр1Ст50Гр02 + (Пд322Ст290Гр01ПРП_1мес + Пд322Ст290Гр01ПРП_2мес
	//                   + Пд322Ст290Гр01ПРП_3мес), когда Пд131Пр1Ст1Гр01 = Пд322Ст260Гр01ПРП
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.10а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 1 ст. 050 подразд. 1.3.1  по значению поля 001 соответствующему значению ст. 270 "
		+ "подр. 3.2.2 Р. 3 = гр. 2 ст. 050 по значению поля 001 + ∑ ((ст. 290 (1 месяц ПОП) + ст. 290 (2 месяц ПОП) + "
		+ "ст. 290 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС по дополнительному тарифу с начала расчетного периода, "
		+ "в целом по плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу с начала расчетного "
		+ "периода по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", 
		мДанныеОтчета.ДанныеКС.УсловиеКварталов.Получить(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания)));
	Настройки.Вставить("ГрафаР1", 1);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_10б(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст50Гр01 = Пд132Пр1Ст50Гр02 + (Пд322Ст290Гр01ПРП_1мес + Пд322Ст290Гр01ПРП_2мес
	//                   + Пд322Ст290Гр01ПРП_3мес), когда Пд132Пр1Ст3Гр01 = Пд322Ст270Гр01ПРП
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.10б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 1 ст. 050 подразд. 1.3.2  по значению поля 003 соответствующему значению ст. 270 "
		+ "подр. 3.2.2 Р. 3 = гр. 2 ст. 050 подразд. 1.3.2  по значению поля 003 + ∑ ((ст. 290 (1 месяц ПОП) + ст. 290 "
		+ "(2 месяц ПОП) + ст. 290 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных СВ на ОПС по дополнительному тарифу с начала расчетного периода, "
		+ "в целом по плательщику не равна сумме исчисленных СВ на ОПС по дополнительному тарифу с начала расчетного "
		+ "периода по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст50Гр0");
	Настройки.Вставить("Квартал", 
		мДанныеОтчета.ДанныеКС.УсловиеКварталов.Получить(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания)));
	Настройки.Вставить("ГрафаР1", 1);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_8_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_11а(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1220Гр01 + Пд321СтМ1220Гр01ПРП <= 876 000
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.11а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов за каждый месяц (∑ ст. 220 р 3) по всем "
		+ "используемым тарифам с начала расчетного периода (за 2017 год) <= 876 000'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 876 000'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма базы по страховым взносам на ОПС, не превышающей предельную величину, в разрезе "
		+ "каждого физического лица за расчетный период > предельной величины 876 000'"));
	
	Если НЕ Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2017 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПредельнаяВеличина", 876000);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	ПроверитьКС_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_11б(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1220Гр01 + Пд321СтМ1220Гр01ПРП <= 1 021 000
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.11б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов за каждый месяц (∑ ст. 220 р 3) по всем "
		+ "используемым тарифам с начала расчетного периода (за 2018 год) <= 1 021 000'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 1 021 000'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма базы по страховым взносам на ОПС, не превышающей предельную величину, в разрезе "
		+ "каждого физического лица за расчетный период > предельной величины 1 021 000'"));
	
	Если НЕ Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2018 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПредельнаяВеличина", 1021000);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	ПроверитьКС_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_11в(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1220Гр01 + Пд321СтМ1220Гр01ПРП <= 1 021 000
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.11в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов за каждый месяц (∑ ст. 220 р 3) по всем "
		+ "используемым тарифам с начала расчетного периода (за 2019 год) <= 1 150 000'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 1 150 000'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма базы по страховым взносам на ОПС, не превышающей предельную величину, в разрезе "
		+ "каждого физического лица за расчетный период > предельной величины 1 150 000'"));
	
	Если НЕ Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2019 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПредельнаяВеличина", 1150000);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	ПроверитьКС_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_11_код(Настройки)
	
	Пд31Ст70Гр01		= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01		= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд321СтМ1220Гр01	= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1220Гр01ПРП = ПоказательПоСтроке("Пд321СтМ1220Гр01ПРП");
	МесяцОтчета			= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.Фамилия + ВТ_Раздел321.Снилс КАК Ключ,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.П220 КАК П220
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Квартал_ <= &Квартал
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(П220)
	|ПО
	|	Ключ";
	
	РезультатЗапроса= Запрос.Выполнить();
	ВыборкаФ		= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Счетчик 	= 1;
		Сумма220Стр	= "";
		Выборка		= ВыборкаФ.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
			Если Счетчик = 1 Тогда
				Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Выборка.Фамилия, Выборка.Снилс));
				ЗарегистрироватьФормулу(Настройки);
				ВставитьЗначениеПоказателя(Выборка, Пд31Ст80Гр01, "Фамилия");
				ВставитьЗначениеПоказателя(Выборка, Пд31Ст70Гр01, "Снилс");
				ВнестиПоказательВРасшифровку(Пд31Ст80Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
				ВнестиПоказательВРасшифровку(Пд31Ст70Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
			КонецЕсли;
			ПоказательП220 = ?(МесяцОтчета <> Выборка.РасчПериод, Пд321СтМ1220Гр01ПРП, Пд321СтМ1220Гр01);
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательП220, Выборка.НомерСтроки, "П220");
			Дополнение = Выборка.ПериодСтр + " месяц, категория " + Выборка.Категория;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательП220, Дополнение);
			Сумма220Стр = Сумма220Стр + ПоказательП220.ЗначениеСтр + " + ";
			ВнестиПоказательВРасшифровку(ПоказательП220, "Раздел3", Выборка.НомерСтраницы, Отчет);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		Настройки.ЭтоОшибка = НЕ ВыборкаФ.П220 <= Настройки.ПредельнаяВеличина;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			РасшифровкаВСтр(Сумма220Стр), ВыборкаФ.П220);
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_12а(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 / СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01) * 0.22 <= 192720
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.12а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма (ст. 240 подр. 3.2.1 Р. 3 / соответствующий значению ст. 200 подр. 3.2.1 Р. 3 "
		+ "тариф страховых взносов х 22%) с начала расчетного периода (за 2017 год) должна быть меньше или равна 192 720"
		+ ", с учетом погрешности в 1 коп. на каждый применяемый тариф'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 192 720 + %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма начисленных страховых взносов (нарастающим итогом с начала расчетного периода) по "
		+ "застрахованному лицу превышает максимально допустимую'"));
	
	Если НЕ Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2017 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПредельнаяВеличина", 192720);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	ПроверитьКС_0_12_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_12б(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 / СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01) * 0.22 <= 224620
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.12б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма (ст. 240 подр. 3.2.1 Р. 3 / соответствующий значению ст. 200 подр. 3.2.1 Р. 3 "
		+ "тариф страховых взносов х 22%) с начала расчетного периода (за 2018 год) должна быть меньше или равна 224 620"
		+ ", с учетом погрешности в 1 коп. на каждый применяемый тариф'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 224 620 + %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма начисленных страховых взносов (нарастающим итогом с начала расчетного периода) по "
		+ "застрахованному лицу превышает максимально допустимую'"));
	
	Если НЕ Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2018 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПредельнаяВеличина", 224620);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	ПроверитьКС_0_12_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_12в(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1240Гр01 / СтавкаТарифаПоКатегории(Пд321СтМ1200Гр01) * 0.22 <= 224620
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.12в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма (ст. 240 подр. 3.2.1 Р. 3 / соответствующий значению ст. 200 подр. 3.2.1 Р. 3 "
		+ "тариф страховых взносов х 22%) с начала расчетного периода (за 2019 год) должна быть меньше или равна 253 000"
		+ ", с учетом погрешности в 1 коп. на каждый применяемый тариф'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 253 000 + %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма начисленных страховых взносов (нарастающим итогом с начала расчетного периода) по "
		+ "застрахованному лицу превышает максимально допустимую'"));
	
	Если НЕ Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2019 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПредельнаяВеличина", 253000);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	ПроверитьКС_0_12_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_12_код(Настройки)
	
	Пд31Ст70Гр01		= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01		= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд321СтМ1240Гр01	= ПоказательПоСтроке("Пд321СтМ1240Гр01");
	Пд321СтМ1240Гр01ПРП = ПоказательПоСтроке("Пд321СтМ1240Гр01ПРП");
	МесяцОтчета			= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.Фамилия + ВТ_Раздел321.Снилс КАК Ключ,
	|	ВТ_Раздел321.Ставка КАК Ставка,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.П240 КАК П240
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Квартал_ <= &Квартал И
	|	ВТ_Раздел321.Ставка > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Ставка УБЫВ,
	|	Период УБЫВ,
	|	Категория
	|ИТОГИ
	|	СУММА(П240)
	|ПО
	|	Ключ,
	|	Ставка";
	
	РезультатЗапроса= Запрос.Выполнить();
	ВыборкаФ		= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Счетчик 		= 1;
		РасчетнаяСумма	= 0;
		Погрешность		= 0;
		МассивСтрок		= Новый Массив;
		ВыборкаС		= ВыборкаФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаС.Следующий() Цикл
			Сумма240Стр	= "";
			Выборка = ВыборкаС.Выбрать();
			Пока Выборка.Следующий() Цикл
				Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
				Если Счетчик = 1 Тогда
					Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Выборка.Фамилия, Выборка.Снилс));
					ЗарегистрироватьФормулу(Настройки);
					ВставитьЗначениеПоказателя(Выборка, Пд31Ст80Гр01, "Фамилия");
					ВставитьЗначениеПоказателя(Выборка, Пд31Ст70Гр01, "Снилс");
					ВнестиПоказательВРасшифровку(Пд31Ст80Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
					ВнестиПоказательВРасшифровку(Пд31Ст70Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
				КонецЕсли;
				ПоказательП240 = ?(МесяцОтчета <> Выборка.РасчПериод, Пд321СтМ1240Гр01ПРП, Пд321СтМ1240Гр01);
				ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательП240, Выборка.НомерСтроки, "П240");
				Дополнение = Выборка.ПериодСтр + " месяц, категория " + Выборка.Категория + ", ставка " + Выборка.Ставка;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательП240, Дополнение);
				Сумма240Стр = Сумма240Стр + ПоказательП240.ЗначениеСтр + " + ";
				ВнестиПоказательВРасшифровку(ПоказательП240, "Раздел3", Выборка.НомерСтраницы, Отчет);
				Счетчик = Счетчик + 1;
			КонецЦикла;
			МассивСтрок.Добавить("((" + РасшифровкаВСтр(Сумма240Стр) + ") / " + ВыборкаС.Ставка + ") х 0,22 + ");
			РасчетнаяСумма = РасчетнаяСумма + Окр(((ВыборкаС.П240 / ВыборкаС.Ставка) * 0.22), 2);
			Погрешность = Погрешность + 0.01;
		КонецЦикла;
		
		Настройки.ЭтоОшибка = НЕ РасчетнаяСумма <= Настройки.ПредельнаяВеличина + Погрешность;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			РасшифровкаВСтр(СтрСоединить(МассивСтрок)), РасчетнаяСумма, Погрешность);
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_13(СтруктураРезультата)
	
	// Формула КС: Пд321Ст250Гр01 = Пд321СтМ1210Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.13)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Суммы выплат и иных вознаграждение за последние три месяца (гр. 1 ст. 250 р. 3) = ∑ ст. "
		+ "210 р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат по страховым взносам на ОПС в разрезе каждого физического лица за 3 "
		+ "последних месяца отчетного периода ≠ сумме выплат по страховым взносам на ОПС в разрезе каждого физического "
		+ "лица за каждый из 3-х последних месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПоказательСуммы"	, "Пд321СтМ1210Гр01");
	Настройки.Вставить("ПоказательИтога"	, "Пд321Ст250Гр01");
	ПроверитьКС_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_14а(СтруктураРезультата) 
	
	// Формула КС: Пд11Пр1Ст30Гр03 = Пд321СтМ1210Гр01 + Пр10Ст10Гр03, когда Пд321СтМ1190Гр01 = "01","04","07","10"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 3 ст. 030 подр. 1.1 прил. 1 (1 месяц ОП) по всем значениям поля 001 = "
		+ "∑ ст. 210 (1 месяц ОП) подр. 3.2.1 Р. 3 + гр. 3 ст. 010 (1 месяц ОП) приложения 10 к Разделу 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма выплат и иных вознаграждений, начисленных в пользу физических лиц в целом по "
		+ "плательщику за каждый месяц квартала отчетного (расчетного) периода не равна сумме выплат и иных "
		+ "вознаграждений по застрахованным лицам за  соответствующий месяц  квартала отчетного (расчетного) периода по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	
	МассивДокументовП10 = Новый Массив;
	МассивДокументовП10.Добавить(мДанныеОтчета);
	
	МассивПоказателейП10 = Новый Массив;
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр03"));
	
	Настройки.Вставить("ДокументыП10", МассивДокументовП10);
	Настройки.Вставить("ПоказателиП10", МассивПоказателейП10);
	
	ПроверитьКС_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_14б(СтруктураРезультата) 
	
	// Формула КС: Пд11Пр1Ст30Гр04 = Пд321СтМ1210Гр01 + Пр10Ст10Гр04, когда Пд321СтМ1190Гр01 = "02","05","08","11"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 4 ст. 030 подр. 1.1 прил. 1 (2 месяц ОП) по всем значениям поля 001 = "
		+ "∑ ст. 210 (2 месяц ОП) подр. 3.2.1 Р. 3 + гр. 4 ст. 010 (2 месяц ОП) приложения 10 к Разделу 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма выплат и иных вознаграждений, начисленных в пользу физических лиц в целом по "
		+ "плательщику за каждый месяц квартала отчетного (расчетного) периода не равна сумме выплат и иных "
		+ "вознаграждений по застрахованным лицам за соответствующий месяц  квартала отчетного (расчетного) периода по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	
	МассивДокументовП10 = Новый Массив;
	МассивДокументовП10.Добавить(мДанныеОтчета);
	
	МассивПоказателейП10 = Новый Массив;
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр04"));
	
	Настройки.Вставить("ДокументыП10", МассивДокументовП10);
	Настройки.Вставить("ПоказателиП10", МассивПоказателейП10);
	
	ПроверитьКС_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_14в(СтруктураРезультата) 
	
	// Формула КС: Пд11Пр1Ст30Гр05 = Пд321СтМ1210Гр01 + Пр10Ст10Гр05, когда Пд321СтМ1190Гр01 = "03","06","09","12"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 5 ст. 030 подр. 1.1 прил. 1 (3 месяц ОП) по всем значениям поля 001 = "
		+ "∑ ст. 210 (3 месяц ОП) подр. 3.2.1 Р. 3 + гр. 5 ст. 010 (3 месяц ОП) приложения 10 к Разделу 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма выплат и иных вознаграждений, начисленных в пользу физических лиц в целом по "
		+ "плательщику за каждый месяц квартала отчетного (расчетного) периода не равна сумме выплат и иных "
		+ "вознаграждений по застрахованным лицам за соответствующий месяц  квартала отчетного (расчетного) периода по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	
	МассивДокументовП10 = Новый Массив;
	МассивДокументовП10.Добавить(мДанныеОтчета);
	
	МассивПоказателейП10 = Новый Массив;
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр05"));
	
	Настройки.Вставить("ДокументыП10", МассивДокументовП10);
	Настройки.Вставить("ПоказателиП10", МассивПоказателейП10);
	
	ПроверитьКС_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_14_код(Настройки)
	
	Если мДанныеОтчета.ДанныеКС.ДеревоТарифов111.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПоказательР1_1		= ПоказательПоСтроке("Пд11Пр1Ст30Гр0" + Настройки.ГрафаР1);
	ПоказательР1_2		= ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	ПоказательР3_1		= ПоказательПоСтроке("Пд321СтМ1210Гр01");
	ПоказательР3_1ПРП	= ПоказательПоСтроке("Пд321СтМ1210Гр01ПРП");
	МесяцОтчета			= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.ГрафаР3);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.Фамилия + ВТ_Раздел321.Снилс КАК Ключ,
	|	ВТ_Раздел321.ГруппаТарифов КАК ГруппаТарифов,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.П210 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Квартал_ В (&Квартал)
	|	И ВТ_Раздел321.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу(Настройки);
	СуммаР1_1		= 0;
	СуммаР1_2		= 0;
	СуммаР3_1		= 0;
	СуммаР1_1Стр	= "";
	СуммаР3_1Стр	= "";
		
	Для Каждого Элемент Из мДанныеОтчета.ДанныеКС.ДеревоТарифов111.Строки Цикл
		Для Каждого Подэлемент Из Элемент.Строки Цикл
			ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_1);
			Дополнение = "тариф " + Подэлемент.ГруппаТарифов;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_1, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательР1_1, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
			СуммаР1_1 = СуммаР1_1 + ПоказательР1_1.Значение;
			СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_1.Значение + " + ";
			Если Настройки.ГрафаР1 = 1 Тогда
				ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_2);
				Дополнение = "тариф " + Подэлемент.ГруппаТарифов;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_2, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР1_2, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
				СуммаР1_2 = СуммаР1_2 + ПоказательР1_2.Значение;
				СуммаР3_1Стр = СуммаР3_1Стр + ПоказательР1_2.Значение + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Счетчик = 0;
	Если ВыборкаТ.Следующий() Тогда
		СуммаР3_1	= ВыборкаТ.ПоказательР3_1;
		Выборка		= ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
			ПоказательР3_1 = ?(МесяцОтчета <> Выборка.РасчПериод, ПоказательР3_1ПРП, ПоказательР3_1);
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
			Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаР3_1), "<...>", "0"), 
					ПоказательР3_1.Значение) + " + ";
			КонецЕсли;
			Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				Дополнение = Выборка.ПериодСтр + " мес., кат. " + Выборка.Категория + " => тариф " 
					+ Выборка.ГруппаТарифов + ", " + Выборка.Фамилия;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
				Счетчик = Счетчик + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Счетчик = 0;
	СуммаП10 = 0;
	Для каждого ЭлементПРП Из Настройки.ДокументыП10 Цикл
		Если ЭлементПРП = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Отчет = ?(Настройки.ГрафаР1 = 1, ЭлементПРП.СохраненныйДокументОтчета, Неопределено);
		Для Каждого СтраницаРаздела Из ЭлементПРП.Раздел1Прил10 Цикл
			Для каждого Элемент Из Настройки.ПоказателиП10 Цикл
				НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
				ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Элемент);
				Если Счетчик <= 3 И ЗначениеЗаполнено(Элемент.Значение) Тогда
					СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 3, ?(ЗначениеЗаполнено(СуммаП10), "<...>", "0"), 
						Элемент.ЗначениеСтр) + " + ";
				КонецЕсли;
				Если ЗначениеЗаполнено(Элемент.Значение) Тогда
					ВнестиПоказательВРасшифровку(Элемент, "Раздел1Прил10", НомерСтраницыСтр, Отчет);
					Счетчик = Счетчик + 1;
				КонецЕсли;
				СуммаП10 = СуммаП10 + Элемент.Значение;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка = НЕ СуммаР1_1 = СуммаР3_1 + СуммаР1_2 + СуммаП10;
	Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
		РасшифровкаВСтр(СуммаР1_1Стр), СуммаР1_1, РасшифровкаВСтр(СуммаР3_1Стр), СуммаР3_1 + СуммаР1_2 + СуммаП10);
	ДополнитьСтруктуруОшибок(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС_0_15(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.15)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 2 ст. 030 подр. 1.1 прил. 1 по всем значениям поля 001 = '")
		+ НСтр("ru='∑ (ст. 210 (1 месяц ОП) подр. 3.2.1 Р. 3 + гр. 3 ст. 010 (1 месяц ОП) приложения 10 к Разделу 1) + '")
		+ НСтр("ru='(ст. 210 (2 месяц ОП) подр. 3.2.1 Р. 3 + гр. 4 ст. 010 (2 месяц ОП) приложения 10 к Разделу 1) + '")
		+ НСтр("ru='(ст. 210 (3 месяц ОП) подр. 3.2.1 Р. 3 + гр. 5 ст. 010 (3 месяц ОП) приложения 10 к Разделу 1)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма выплат и иных вознаграждений, начисленных в пользу физических лиц в целом по "
		+ "плательщику за отчетный период не равна сумме выплат и иных "
		+ "вознаграждений по застрахованным лицам за отчетный период по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 2);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	
	МассивДокументовП10 = Новый Массив;
	МассивДокументовП10.Добавить(мДанныеОтчета);
	
	МассивПоказателейП10 = Новый Массив;
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр03"));
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр04"));
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр05"));
	
	Настройки.Вставить("ДокументыП10", МассивДокументовП10);
	Настройки.Вставить("ПоказателиП10", МассивПоказателейП10);
	
	ПроверитьКС_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_16(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.16)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 1 ст. 030 подр. 1.1 прил. 1 по всем значениям поля 001 = '")
		+ НСтр("ru='∑ гр. 2 ст. 030 подр. 1.1 прил. 1 + '")
		+ НСтр("ru='(ст. 210 (1 месяц ПОП) подр. 3.2.1 Р. 3 + гр. 3 ст. 010 (1 месяц ПОП) приложения 10 к Разделу 1) + '")
		+ НСтр("ru='(ст. 210 (2 месяц ПОП) подр. 3.2.1 Р. 3 + гр. 4 ст. 010 (2 месяц ПОП) приложения 10 к Разделу 1) + '")
		+ НСтр("ru='(ст. 210 (3 месяц ПОП) подр. 3.2.1 Р. 3 + гр. 5 ст. 010 (3 месяц ПОП) приложения 10 к Разделу 1)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма выплат и иных вознаграждений, начисленных в пользу физических лиц в целом по "
		+ "плательщику за отчетный и предыдущие отчетные периоды не равна сумме выплат и иных "
		+ "вознаграждений по застрахованным лицам за отчетный и предыдущие отчетные периоды по "
		+ "каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", 
		мДанныеОтчета.ДанныеКС.УсловиеКварталов.Получить(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания)));
	Настройки.Вставить("ГрафаР1", 1);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	
	МассивДокументовП10 = Новый Массив;
	МассивДокументовП10.Добавить(мДанныеОтчетаПРП);
	МассивДокументовП10.Добавить(мДанныеОтчетаПРП1);
	МассивДокументовП10.Добавить(мДанныеОтчетаПРП2);
	
	МассивПоказателейП10 = Новый Массив;
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр03ПРП"));
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр04ПРП"));
	МассивПоказателейП10.Добавить(ПоказательПоСтроке("Р1Прил10Ст10Гр05ПРП"));
	
	Настройки.Вставить("ДокументыП10", МассивДокументовП10);
	Настройки.Вставить("ПоказателиП10", МассивПоказателейП10);
	
	ПроверитьКС_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_17(СтруктураРезультата)
	
	// Формула КС: Пд321Ст250Гр02 = Пд321СтМ1220Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.17)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для исчисления страховых взносов на обязательное пенсионное страхование в пределах "
		+ "предельной величины за последние три месяца (гр. 2 ст. 250 р. 3) = ∑ ст. 220 р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База по страховым взносам на ОПС, не превышающая предельную величину, в разрезе каждого "
		+ "физического лица за 3 последних месяца отчетного периода ≠ сумме баз по страховым взносам на ОПС, не "
		+ "превыш.пред.величину, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПоказательСуммы"	, "Пд321СтМ1220Гр01");
	Настройки.Вставить("ПоказательИтога"	, "Пд321Ст250Гр02");
	ПроверитьКС_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_17_код(Настройки)
	
	Пд31Ст70Гр01		= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01		= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд321СтМ1190Гр01	= ПоказательПоСтроке("Пд321СтМ1190Гр01");
	Пд321СтМ1200Гр01	= ПоказательПоСтроке("Пд321СтМ1200Гр01");
	ПоказательСуммы		= ПоказательПоСтроке(Настройки.ПоказательСуммы);
	ПоказательИтога		= ПоказательПоСтроке(Настройки.ПоказательИтога);
	
	Раздел3 = мДанныеОтчета.Раздел3;
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		КолвоСтрок = КоличествоСтрок(ДанныеСтраницы, ПоказательСуммы.Имя);
		
		Если КолвоСтрок = 1 Тогда
			ВставитьЗначениеПоказателя(ДанныеСтраницы, ПоказательИтога);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, ПоказательСуммы, 1);
			Если НЕ ЗначениеЗаполнено(ПоказательИтога.Значение) И НЕ ЗначениеЗаполнено(ПоказательСуммы.Значение) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст80Гр01);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст70Гр01);
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Пд31Ст80Гр01.Значение, Пд31Ст70Гр01.Значение));
		ЗарегистрироватьФормулу(Настройки);
		ВнестиПоказательВРасшифровку(Пд31Ст80Гр01, "Раздел3", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд31Ст70Гр01, "Раздел3", НомерСтраницыСтр);
		СуммаПоказательСуммы = 0;
		СуммаПоказательСуммыСтр = "";
		
		Пока КолвоСтрок > 0 Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, КолвоСтрок);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1200Гр01, КолвоСтрок);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, ПоказательСуммы, КолвоСтрок);
			Дополнение = Пд321СтМ1190Гр01.ЗначениеСтр + " месяц, категория " + Пд321СтМ1200Гр01.Значение;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательСуммы, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательСуммы, "Раздел3", НомерСтраницыСтр);
			СуммаПоказательСуммы = СуммаПоказательСуммы + ПоказательСуммы.Значение;
			СуммаПоказательСуммыСтр = СуммаПоказательСуммыСтр + ПоказательСуммы.ЗначениеСтр + " + ";
			КолвоСтрок = КолвоСтрок - 1;
		КонецЦикла;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, ПоказательИтога);
		ВнестиПоказательВРасшифровку(ПоказательИтога, "Раздел3", НомерСтраницыСтр);
		КС = ПоказателиКС(ПоказательИтога.Значение, СуммаПоказательСуммы);
		Настройки.ЭтоОшибка = НЕ КС.ЛеваяЧасть = КС.ПраваяЧасть;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			КС.ЛеваяЧасть, РасшифровкаВСтр(СуммаПоказательСуммыСтр), КС.ПраваяЧасть);
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_18а(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст50Гр03 - Пд11Пр1Ст51Гр03 = Пд321СтМ1220Гр01, когда Пд321СтМ1190Гр01 = "01","04","07","10"
	//                  И (Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.18а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1 СВ - гр. 3 ст. 051 подр. 1.1 прил. 1 р. 1 СВ по "
		+ "значению поля 001 прил. 1 Р. 1 соответствующему значению ст. 200 подр. 3.2.1 Р. 3 = ∑ ст. 220 (1 месяц ОП) "
		+ "подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База по СВ на ОПС в размере не превышающем предельную величину за каждый из последних "
		+ "трех месяцев отчетного периода в целом по плательщику не равна сумме баз по СВ на ОПС в размере не "
		+ "превышающем предельную величину по каждому физическому лицу за каждый из последних трех месяцев отчетного "
		+ "периода по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_0_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_18б(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст50Гр04 - Пд11Пр1Ст51Гр04 = Пд321СтМ1220Гр01, когда Пд321СтМ1190Гр01 = "02","05","08","11"
	///                 И (Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.18б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1 СВ - гр. 4 ст. 051 подр. 1.1 прил. 1 р. 1 СВ по "
		+ "значению поля 001 прил. 1 Р. 1 соответствующему значению ст. 200 подр. 3.2.1 Р. 3 = ∑ ст. 220 (2 месяц ОП) "
		+ "подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База по СВ на ОПС в размере не превышающем предельную величину за каждый из последних "
		+ "трех месяцев отчетного периода в целом по плательщику не равна сумме баз по СВ на ОПС в размере не "
		+ "превышающем предельную величину по каждому физическому лицу за каждый из последних трех месяцев отчетного "
		+ "периода по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_0_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_18в(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст50Гр05 - Пд11Пр1Ст51Гр05 = Пд321СтМ1220Гр01, когда Пд321СтМ1190Гр01 = "03","06","09","12"
	//                  И (Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.18в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1 СВ - гр. 5 ст. 051 подр. 1.1 прил. 1 р. 1 СВ по "
		+ "значению поля 001 прил. 1 Р. 1 соответствующий значению ст. 200 подр. 3.2.1 Р. 3 = ∑ ст. 220 (3 месяц ОП) "
		+ "подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База по СВ на ОПС в размере не превышающем предельную величину за каждый из последних "
		+ "трех месяцев отчетного периода в целом по плательщику не равна сумме баз по СВ на ОПС в размере не "
		+ "превышающем предельную величину по каждому физическому лицу за каждый из последних трех месяцев отчетного "
		+ "периода по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_0_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_18_код(Настройки)
	
	ПоказательР1_1		= ПоказательПоСтроке("Пд11Пр1Ст50Гр0" + Настройки.ГрафаР1);
	ПоказательР1_2		= ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	ПоказательР1_3		= ПоказательПоСтроке("Пд11Пр1Ст51Гр0" + Настройки.ГрафаР1);
	ПоказательР1_4		= ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	ПоказательР3_1		= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	ПоказательР3_1ПРП	= ПоказательПоСтроке("Пд321СтМ1220Гр01ПРП");
	МесяцОтчета			= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.ГрафаР3);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.ГруппаТарифов КАК ГруппаТарифов,
	|	ВТ_Раздел321.Фамилия +
	|	ВТ_Раздел321.Снилс + ВТ_Раздел321.Категория КАК Ключ,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.П220 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Квартал_ В (&Квартал)
	|	И ВТ_Раздел321.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	ГруппаТарифов";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого Элемент Из мДанныеОтчета.ДанныеКС.ДеревоТарифов111.Строки Цикл
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Т", Элемент.ГруппаТарифов));
		ЗарегистрироватьФормулу(Настройки);
		
		СуммаР1_1		= 0;
		СуммаР1_2		= 0;
		СуммаР3_1		= 0;
		СуммаР1_1Стр	= "";
		СуммаР3_1Стр	= "";
		
		Для Каждого Подэлемент Из Элемент.Строки Цикл
			ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_1);
			ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_3);
			Дополнение = "тариф " + Подэлемент.ГруппаТарифов;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_1, Дополнение);
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_3, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательР1_1, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
			ВнестиПоказательВРасшифровку(ПоказательР1_3, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
			СуммаР1_1 = СуммаР1_1 + ПоказательР1_1.Значение - ПоказательР1_3.Значение;
			СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_1.Значение + " - " + ПоказательР1_3.Значение + " + ";
			Если Настройки.ГрафаР1 = 1 Тогда
				ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_2);
				ВставитьЗначениеПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_4);
				Дополнение = "тариф " + Подэлемент.ГруппаТарифов;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_2, Дополнение);
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_4, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР1_2, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
				ВнестиПоказательВРасшифровку(ПоказательР1_4, "Раздел1Прил1Подр1_1и1_2", Подэлемент.НомерСтраницы);
				СуммаР1_2 = СуммаР1_2 + ПоказательР1_2.Значение - ПоказательР1_4.Значение;
				СуммаР3_1Стр = СуммаР3_1Стр + ПоказательР1_2.Значение + " - " + ПоказательР1_4.Значение + " + ";
			КонецЕсли;
		КонецЦикла;
		
		Счетчик = 1;
		Если ВыборкаТ.НайтиСледующий(Новый Структура("ГруппаТарифов", Элемент.ГруппаТарифов)) Тогда
			СуммаР3_1	= ВыборкаТ.ПоказательР3_1;
			Выборка		= ВыборкаТ.Выбрать();
			Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
				Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
				ПоказательР3_1 = ?(МесяцОтчета <> Выборка.РасчПериод, ПоказательР3_1ПРП, ПоказательР3_1);
				ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
				Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					Дополнение = Выборка.ПериодСтр + " мес., кат. " + Выборка.Категория + " => тариф " 
						+ Выборка.ГруппаТарифов + ", " + Выборка.Фамилия;
					ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
					ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
					Счетчик = Счетчик + 1;
				КонецЕсли;
				Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаР3_1), "<...>", "0"), 
						ПоказательР3_1.Значение) + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Настройки.ЭтоОшибка = НЕ СуммаР1_1 = СуммаР3_1 + СуммаР1_2;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			РасшифровкаВСтр(СуммаР1_1Стр), СуммаР1_1, РасшифровкаВСтр(СуммаР3_1Стр), СуммаР3_1 + СуммаР1_2, 
			Элемент.ГруппаТарифов);
		ВыборкаТ.Сбросить();
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_19(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст50Гр02 - Пд11Пр1Ст51Гр02 = Пд321СтМ1220Гр01_1мес + Пд321СтМ1220Гр01_2мес
	//                   + Пд321СтМ1220Гр01_3мес, когда Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.19)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 2 ст. 050 подр. 1.1 прил. 1 р. 1 СВ - гр. 2 ст. 051 подр. 1.1 прил. 1 р. 1 СВ по "
		+ "значению поля 001 прил. 1 Р. 1 = ∑ (ст. 220 (1 месяц ОП) + ст. 220 (2 месяц ОП) + ст. 220 (3 месяц ОП)) по "
		+ "соответствующему значению ст. 200 подр. 3.2.1. Р. 3 тарифу страховых взносов'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База по СВ на ОПС в размере не превышающем предельную величину за последние три месяца "
		+ "отчетного периода в целом по плательщику не равна сумме баз по СВ на ОПС в размере не превыш. пред. велич. "
		+ "по каждому физическому лицу за последние три месяца отчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 2);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_20(СтруктураРезультата)
	
	// Формула КС: Пд11Пр1Ст50Гр01 - Пд11Пр1Ст51Гр01 = Пд11Пр1Ст50Гр02 - Пд11Пр1Ст51Гр02
	//                  + (Пд321СтМ1220Гр01ПРП_1мес + Пд321СтМ1220Гр01ПРП_2мес + Пд321СтМ1220Гр01ПРП_3мес)
	//                  , когда Р1Пр1Ст1Гр01 = Пд321СтМ1200Гр01ПРП
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.20)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1 СВ - гр. 1 ст. 051 подр. 1.1 прил. 1 р. 1 СВ по "
		+ "значению поля 001 соответствующему значению ст. 200 подр. 3.2.1 Р. 3 = гр. 2 ст. 050 подр. 1.1 прил. 1 р. 1 "
		+ "СВ - гр.2 ст. 051 подр. 1.1 прил. 1 р. 1 СВ + ∑ ((ст. 220 (1 месяц ПОП) + ст. 220 (2 месяц ПОП) + ст. 220 (3 "
		+ "месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База по СВ на ОПС в размере не превышающем предельную величину с начала расчетного "
		+ "периода в целом по плательщику не равна сумме баз по СВ на ОПС в размере не превышающем предельную величину "
		+ "с начала расчетного периода по каждому физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Квартал", 
		мДанныеОтчета.ДанныеКС.УсловиеКварталов.Получить(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания)));
	Настройки.Вставить("ГрафаР1", 1);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_21(СтруктураРезультата)
	
	// Формула КС: Пд322Ст300Гр01 = Пд322Ст280Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которые начислены страховые взносы за последние "
		+ "три месяца (гр. 1 ст. 300 р. 3) = ∑ ст. 280 р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат по страховым взносам на ОПС по дополнительному тарифу, в разрезе каждого физического "
		+ "лица за 3 последних месяца отчетного периода ≠ сумме выплат по страховым взносам на ОПС по дополнительному "
		+ "тарифу, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("ПоказательСуммы"	, "Пд322Ст280Гр01");
	Настройки.Вставить("ПоказательИтога"	, "Пд322Ст300Гр01");
	ПроверитьКС_0_21_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_21_код(Настройки)
	
	Пд31Ст70Гр01		= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01		= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд322Ст260Гр01		= ПоказательПоСтроке("Пд322Ст260Гр01");
	Пд322Ст270Гр01		= ПоказательПоСтроке("Пд322Ст270Гр01");
	ПоказательСуммы		= ПоказательПоСтроке(Настройки.ПоказательСуммы);
	ПоказательИтога		= ПоказательПоСтроке(Настройки.ПоказательИтога);
	
	Раздел3 = мДанныеОтчета.Раздел3;
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, ПоказательСуммы.Имя);
		
		Если КолвоСтрокВМногострочнойЧасти = 1 Тогда
			ВставитьЗначениеПоказателя(ДанныеСтраницы, ПоказательИтога);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, ПоказательСуммы, 1);
			Если НЕ ЗначениеЗаполнено(ПоказательИтога.Значение) И НЕ ЗначениеЗаполнено(ПоказательСуммы.Значение) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст80Гр01);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст70Гр01);
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Пд31Ст80Гр01.Значение, Пд31Ст70Гр01.Значение));
		ЗарегистрироватьФормулу(Настройки);
		ВнестиПоказательВРасшифровку(Пд31Ст80Гр01, "Раздел3", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд31Ст70Гр01, "Раздел3", НомерСтраницыСтр);
		СуммаПоказательСуммы = 0;
		СуммаПоказательСуммыСтр = "";
		
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст260Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст270Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, ПоказательСуммы, Инд);
			Дополнение = Пд322Ст260Гр01.ЗначениеСтр + " месяц, код тарифа " + Пд322Ст270Гр01.Значение;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательСуммы, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательСуммы, "Раздел3", НомерСтраницыСтр);
			СуммаПоказательСуммы = СуммаПоказательСуммы + ПоказательСуммы.Значение;
			СуммаПоказательСуммыСтр = СуммаПоказательСуммыСтр + ПоказательСуммы.ЗначениеСтр + " + ";
		КонецЦикла;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, ПоказательИтога);
		ВнестиПоказательВРасшифровку(ПоказательИтога, "Раздел3", НомерСтраницыСтр);
		КС = ПоказателиКС(ПоказательИтога.Значение, СуммаПоказательСуммы);
		Настройки.ЭтоОшибка = НЕ КС.ЛеваяЧасть = КС.ПраваяЧасть;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			КС.ЛеваяЧасть, РасшифровкаВСтр(СуммаПоказательСуммыСтр), КС.ПраваяЧасть);
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_22а(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст40Гр03 = Пд322Ст280Гр01, когда Пд322Ст260Гр01 = "01","04","07","10"
	//                   И Пд131Пр1Ст1Гр01  = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.22а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 3 ст. 040 подр. 1.3.1 прил. 1 р. 1 СВ (1 месяц ОП) по значению поля 001 "
		+ "соответствующему значению ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 280 (1 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за каждый из последних трех месяцев отчетного периода в целом по плательщику не равна сумме выплат и "
		+ "иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу "
		+ "за каждый из последних трех месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_22б(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст40Гр04  = Пд322Ст280Гр01, когда Пд322Ст260Гр01 = "02","05","08","11"
	//                   И Пд131Пр1Ст1Гр01  = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.22б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 4 ст. 040 подр. 1.3.1 прил. 1 р. 1 СВ (2 месяц ОП) по значению поля 001 "
		+ "соответствующему значению ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 280 (2 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за каждый из последних трех месяцев отчетного периода в целом по плательщику не равна сумме выплат и "
		+ "иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу "
		+ "за каждый из последних трех месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_22в(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст40Гр05 = Пд322Ст280Гр01, когда Пд322Ст260Гр01 = "03","06","09","12"
	//                   И Пд131Пр1Ст1Гр01  = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.22в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 5 ст. 040 подр. 1.3.1 прил. 1 р. 1 СВ (3 месяц ОП) по значению поля 001 "
		+ "соответствующему значению ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 280 (3 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за каждый из последних трех месяцев отчетного периода в целом по плательщику не равна сумме выплат и "
		+ "иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу "
		+ "за каждый из последних трех месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_22г(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст40Гр03 = Пд322Ст280Гр01, когда Пд322Ст260Гр01 = "01","04","07","10"
	//                   И Пд132Пр1Ст3Гр01  = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.22г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 3 ст. 040 подр. 1.3.2 прил. 1 р. 1 СВ (1 месяц ОП) по значению поля 003 "
		+ "соответствующему значению ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 280 (1 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за каждый из последних трех месяцев отчетного периода в целом по плательщику не равна сумме выплат и "
		+ "иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу "
		+ "за каждый из последних трех месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_22д(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст40Гр04 = Пд322Ст280Гр01, когда Пд322Ст260Гр01 = "02","05","08","11"
	//                   И Пд132Пр1Ст3Гр01  = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.22д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 4 ст. 040 подр. 1.3.2 прил. 1 р. 1 СВ (2 месяц ОП) по значению поля 003 "
		+ "соответствующему значению ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 280 (2 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за каждый из последних трех месяцев отчетного периода в целом по плательщику не равна сумме выплат и "
		+ "иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу "
		+ "за каждый из последних трех месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_22е(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст40Гр05 = Пд322Ст280Гр01, когда Пд322Ст260Гр01 = "03","06","09","12"
	//                   И Пд132Пр1Ст3Гр01  = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.22е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 5 ст. 040 подр. 1.3.2 прил. 1 р. 1 СВ (3 месяц ОП) по значению поля 003 "
		+ "соответствующему значению ст. 270 подр. 3.2.2 Р. 3 = ∑ ст. 280 (3 месяц ОП) подр. 3.2.2 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за каждый из последних трех месяцев отчетного периода в целом по плательщику не равна сумме выплат и "
		+ "иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу "
		+ "за каждый из последних трех месяцев отчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_22_код(Настройки)
	
	ПоказательР1_1	= ПоказательПоСтроке(Настройки.ПоказательТарифа + Настройки.ГрафаР1);
	ПоказательР1_2	= ПоказательПоСтроке(Настройки.ПоказательТарифа + "2");
	ПоказательР3_1		= ПоказательПоСтроке("Пд322Ст280Гр01");
	ПоказательР3_1ПРП	= ПоказательПоСтроке("Пд322Ст280Гр01ПРП");
	СимволП		= ?(Настройки.Раздел1 = "ДеревоТарифов131", "1", "3");
	ИмяРаздела	= ?(Настройки.Раздел1 = "ДеревоТарифов131", "Раздел1Прил1Подр1_3_1", "Раздел1Прил1Подр1_3_2");
	МесяцОтчета	= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.ГрафаР3);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел322.Категория КАК Категория,
	|	ВТ_Раздел322.Фамилия + ВТ_Раздел322.Снилс КАК Ключ,
	|	ВТ_Раздел322.Фамилия КАК Фамилия,
	|	ВТ_Раздел322.Снилс КАК Снилс,
	|	ВТ_Раздел322.Месяц_ КАК Период,
	|	ВТ_Раздел322.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел322.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел322.Отчет КАК Отчет,
	|	ВТ_Раздел322.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел322.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел322.П280 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел322 КАК ВТ_Раздел322
	|ГДЕ
	|	ВТ_Раздел322.Квартал_ В (&Квартал)
	|	И ВТ_Раздел322.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	Категория";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого Элемент Из мДанныеОтчета.ДанныеКС[Настройки.Раздел1].Строки Цикл
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Т", Элемент.КодТарифа));
		ЗарегистрироватьФормулу(Настройки);
		СуммаПоказательР1_1		= 0;
		СуммаПоказательР1_2		= 0;
		СуммаПоказательР3_1		= 0;
		СуммаПоказательР1_1Стр	= "";
		СуммаПоказательР3_1Стр	= "";
		
		Для Каждого Подэлемент Из Элемент.Строки Цикл
			ВставитьЗначениеМногострочногоПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_1, 
				Подэлемент.НомерСтроки);
			Дополнение = "значение поля 00" + СимволП + ": " + Подэлемент.Основание + " => код тарифа " + Подэлемент.КодТарифа;
			ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_1, Дополнение);
			ВнестиПоказательВРасшифровку(ПоказательР1_1, ИмяРаздела, Подэлемент.НомерСтраницы);
			СуммаПоказательР1_1 = СуммаПоказательР1_1 + ПоказательР1_1.Значение;
			СуммаПоказательР1_1Стр = СуммаПоказательР1_1Стр + ПоказательР1_1.Значение + " + ";
			Если Настройки.ГрафаР1 = 1 Тогда
				ВставитьЗначениеМногострочногоПоказателя(мДанныеОтчета.Раздел1Прил1[Подэлемент.Индекс].Данные, ПоказательР1_2, 
					Подэлемент.НомерСтроки);
				Дополнение = "значение поля 00" + СимволП + ": " + Подэлемент.Основание + " => код тарифа " + Подэлемент.КодТарифа;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_2, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР1_2, ИмяРаздела, Подэлемент.НомерСтраницы);
				СуммаПоказательР1_2 = СуммаПоказательР1_2 + ПоказательР1_2.Значение;
				СуммаПоказательР3_1Стр = СуммаПоказательР3_1Стр + ПоказательР1_2.Значение + " + ";
			КонецЕсли;
		КонецЦикла;
		
		Счетчик = 1;
		Если ВыборкаТ.НайтиСледующий(Новый Структура("Категория", Элемент.КодТарифа)) Тогда
			СуммаПоказательР3_1	= ВыборкаТ.ПоказательР3_1;
			Выборка		= ВыборкаТ.Выбрать();
			Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
				Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
				ПоказательР3_1 = ?(МесяцОтчета <> Выборка.РасчПериод, ПоказательР3_1ПРП, ПоказательР3_1);
				ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
				Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					Дополнение = Выборка.ПериодСтр + " месяц, код тарифа " + Выборка.Категория + ", " + Выборка.Фамилия;
					ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
					ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
					Счетчик = Счетчик + 1;
				КонецЕсли;
				Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
					СуммаПоказательР3_1Стр = СуммаПоказательР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаПоказательР3_1Стр), 
						"<...>", "0"), ПоказательР3_1.Значение) + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
			
		Настройки.ЭтоОшибка = НЕ СуммаПоказательР1_1 = СуммаПоказательР3_1 + СуммаПоказательР1_2;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			РасшифровкаВСтр(СуммаПоказательР1_1Стр), СуммаПоказательР1_1, РасшифровкаВСтр(СуммаПоказательР3_1Стр), 
			СуммаПоказательР3_1 + СуммаПоказательР1_2, Элемент.КодТарифа);
		ВыборкаТ.Сбросить();
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_23а(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст40Гр02 = Пд322Ст280Гр01_1мес + Пд322Ст280Гр01_2мес + Пд322Ст280Гр01_3мес
	//             , когда Пд131Пр1Ст1Гр01 = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.23а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 2 ст. 040 подразд. 1.3.1 по значению поля 001 соответствующему значению ст. 270 подр. "
		+ "3.2.2 Р. 3 = ∑ (ст. 280 (1 месяц ОП) + ст. 280 (2 месяц ОП) + ст. 280 (3 месяц ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за последние три месяца  отчетного периода в целом по плательщику не равна сумме выплат и иных "
		+ "вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу за "
		+ "последние три месяца  отчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 2);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_23б(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст40Гр02 = Пд322Ст280Гр01_1мес + Пд322Ст280Гр01_2мес + Пд322Ст280Гр01_3мес
	//             , когда Пд132Пр1Ст3Гр01 = Пд322Ст270Гр01
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.23б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 2 ст. 040 подразд. 1.3.2 по значению поля 003 соответствующему значению ст. 270 подр. "
		+ "3.2.2 Р. 3 = ∑ ст. 280 (1 месяц ОП) + ст. 280 (2 месяц ОП) + ст. 280 (3 месяц ОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу за последние три месяца  отчетного периода в целом по плательщику не равна сумме выплат и иных "
		+ "вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу за "
		+ "последние три месяца  отчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 2);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_24а(СтруктураРезультата)
	
	// Формула КС: Пд131Пр1Ст40Гр01 = Пд131Пр1Ст40Гр02 + (Пд322Ст280Гр01ПРП_1мес + Пд322Ст280Гр01ПРП_2мес
	//                   + Пд322Ст280Гр01ПРП_3мес), когда Пд131Пр1Ст1Гр01 = Пд322Ст270Гр01ПРП
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.24а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 1 ст. 040 подразд. 1.3.1 по значению поля 001 соответствующему значению ст. 270 подр. "
		+ "3.2.2 Р. 3 = гр. 2 ст. 040 по значению поля 001 + ∑ (ст. 280 (1 месяц ПОП) + ст. 280 (2 месяц ПОП) + ст. 280 "
		+ "(3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному тарифу "
		+ "с начала расчетного периода в целом по плательщику не равна сумме выплат и иных вознаграждений, на которую "
		+ "начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу с начала расчетного периода'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов131");
	Настройки.Вставить("ПоказательТарифа", "Пд131Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", 
		мДанныеОтчета.ДанныеКС.УсловиеКварталов.Получить(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания)));
	Настройки.Вставить("ГрафаР1", 1);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_24б(СтруктураРезультата)
	
	// Формула КС: Пд132Пр1Ст40Гр01 = Пд132Пр1Ст40Гр02 + (Пд322Ст280Гр01ПРП_1мес + Пд322Ст280Гр01ПРП_2мес
	//                   + Пд322Ст280Гр01ПРП_3мес), когда Пд132Пр1Ст3Гр01 = Пд322Ст270Гр01ПРП
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.24б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр. 1 ст. 040 подразд. 1.3.2 по значению поля 003 соответствующему значению ст. 270 подр. "
		+ "3.2.2 Р. 3 = гр. 2 ст. 040 по значению поля 003 + ∑ ((ст. 280 (1 месяц ПОП) + ст. 280 (2 месяц ПОП) + ст. "
		+ "280 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, 
		НСтр("ru='%1 Итог [%2] = %3 Итог [%4], по коду тарифа плательщика ""%5""'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены по СВ на ОПС по дополнительному "
		+ "тарифу с начала расчетного периода в целом по плательщику не равна сумме выплат и иных вознаграждений, на "
		+ "которую начислены по СВ на ОПС по дополнительному тарифу по каждому физическому лицу с начала расчетного периода'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	Настройки.Вставить("Раздел1", "ДеревоТарифов132");
	Настройки.Вставить("ПоказательТарифа", "Пд132Пр1Ст40Гр0");
	Настройки.Вставить("Квартал", 
		мДанныеОтчета.ДанныеКС.УсловиеКварталов.Получить(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания)));
	Настройки.Вставить("ГрафаР1", 1);
	Настройки.Вставить("ГрафаР3", мДанныеОтчета.ДанныеКС.МассивГраф);
	ПроверитьКС_0_22_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_25(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 3.1 Раздела 3 (КС 0.25)'");
	ОписаниеКС     = НСтр("ru='В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более "
		+ "застрахованных лиц с идентичным набором показателей (СНИЛС+ФИО+код застрахованного лица)'");
	ОписаниеОшибки = НСтр("ru='Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в "
		+ "разделе 3 расчета'");
	
	// Формула КС кратко: 'Пд31Ст70Гр01 + Пд31Ст80Гр01 + Пд31Ст90Гр01 + Пд31Ст100Гр01 + Пд31Ст60Гр01 не должны повторяться'.
	
	Пд31Ст60Гр01  = ПоказательПоСтроке("Пд31Ст60Гр01");
	Пд31Ст70Гр01  = ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01  = ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд31Ст90Гр01  = ПоказательПоСтроке("Пд31Ст90Гр01");
	Пд31Ст100Гр01 = ПоказательПоСтроке("Пд31Ст100Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	НаборыПоказателей = Новый Соответствие;
	
	НайденыДубли = Ложь;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст70Гр01);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст80Гр01);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст90Гр01);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст100Гр01);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст60Гр01);
		
		НаборПоказателей = Пд31Ст70Гр01.ЗначениеСтр + Пд31Ст80Гр01.ЗначениеСтр
			+ Пд31Ст90Гр01.ЗначениеСтр + Пд31Ст100Гр01.ЗначениеСтр + Пд31Ст60Гр01.ЗначениеСтр;
		
		НомерСоответствующейСтраницыСтр = НаборыПоказателей[НаборПоказателей];
		
		Если НомерСоответствующейСтраницыСтр = Неопределено Тогда
			НаборыПоказателей.Вставить(НаборПоказателей, НомерСтраницыСтр);
			Продолжить;
		КонецЕсли;
		
		НайденыДубли = Истина;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Пд31Ст60Гр01,  "Раздел3", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд31Ст70Гр01,  "Раздел3", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд31Ст80Гр01,  "Раздел3", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд31Ст90Гр01,  "Раздел3", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд31Ст100Гр01, "Раздел3", НомерСтраницыСтр);
		
		Расшифровка = "Идентичные наборы показателей на страницах " + НомерСоответствующейСтраницыСтр + " и " + НомерСтраницыСтр;
		
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
	Если НЕ НайденыДубли Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		Расшифровка = НСтр("ru='Раздел 3 не содержит 2-х и более застрахованных лиц с идентичным набором показателей'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_0_26(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 0.26)'");
	ОписаниеКС     = НСтр("ru='Значение поля ""Расчетный (отчетный) период (код)"" в титульном листе = значению поля 020 "
		+ "р. 3'");
	ОписаниеОшибки = НСтр("ru='Несоответствие значения  расчетного (отчетного) периода в титульном листе значению "
		+ "расчетного (отчетного) периода в Разделе 3'");
	
	// Формула КС кратко: 'ТитульныйКодРП = Р3Ст20Гр01'.
	
	ТитульныйКодРП = ПоказательПоСтроке("ТитульныйКодРП");
	Р3Ст20Гр01 = ПоказательПоСтроке("Р3Ст20Гр01");
	
	Титульный = мДанныеОтчета.Титульный;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйКодРП);
	ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
	
	ЗначР3Ст20Гр01 = ТитульныйКодРП.Значение;
	ЗначР3Ст20Гр01Стр = ТитульныйКодРП.ЗначениеСтр;
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р3Ст20Гр01);
		Если Р3Ст20Гр01.Значение = 0 ИЛИ Р3Ст20Гр01.Значение = ТитульныйКодРП.Значение Тогда
			Продолжить;
		КонецЕсли;
		ВнестиПоказательВРасшифровку(Р3Ст20Гр01, "Раздел3", НомерСтраницыСтр);
		ЗначР3Ст20Гр01 = Р3Ст20Гр01.Значение;
		ЗначР3Ст20Гр01Стр = Р3Ст20Гр01.ЗначениеСтр;
		Прервать;
	КонецЦикла;
	
	КС = ПоказателиКС(ТитульныйКодРП.Значение, ЗначР3Ст20Гр01);
	Расшифровка = """" + КС.ЛеваяЧастьСтр + """ = """ + КС.ПраваяЧастьСтр + """";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_0_27а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Титульного листа (КС 0.27а)'");
	ОписаниеКС     = НСтр("ru='Значение поля ""Календарный год"" титульного листа = значению поля 030 Р. 3'");
	ОписаниеОшибки = НСтр("ru='Несоответствие значения календарного года в титульном листе значению календарного года в "
		+ "разделе 3'");
	
	ТитульныйОтчетГод = ПоказательПоСтроке("ТитульныйОтчетГод");
	
	Титульный = мДанныеОтчета.Титульный;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйОтчетГод);
	ВнестиПоказательВРасшифровку(ТитульныйОтчетГод, "Титульный");
	
	// В реализованном отчете условие всегда будет выполняться.
	КС = ПоказателиКС(ТитульныйОтчетГод.Значение, ТитульныйОтчетГод.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_0_27б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Титульного листа (КС 0.27б)'");
	ОписаниеКС     = НСтр("ru='2017 ≤ Значение поля ""Календарный год"" титульного листа ≤ значения текущего "
		+ "календарного года'");
	ОписаниеОшибки = НСтр("ru='Значение календарного года должно быть больше или равно значению ""2017"" и меньше или "
		+ "равно значению текущего календарного года'");
	
	// Формула КС кратко: '2017 <= ТитульныйОтчетГод <= ЗначениеТекущегоКалендарногоГода'.
	
	ТитульныйОтчетГод = ПоказательПоСтроке("ТитульныйОтчетГод");
	
	Титульный = мДанныеОтчета.Титульный;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйОтчетГод);
	ВнестиПоказательВРасшифровку(ТитульныйОтчетГод, "Титульный");
	
	ТитульныйЗначениеГодаОтчета = Число(" " + ТитульныйОтчетГод.Значение);
	ТекущийКалендарныйГодОтчета = Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
	
	УсловиеВыполнено = (2017 <= ТитульныйЗначениеГодаОтчета) И (ТитульныйЗначениеГодаОтчета <= ТекущийКалендарныйГодОтчета);
	Расшифровка = "2017 <= " + ТитульныйОтчетГод.ЗначениеСтр + " <= " + Формат(ТекущийКалендарныйГодОтчета, "ЧН=; ЧГ=");
	
	Если УсловиеВыполнено Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_0_29а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 3.2.1 Раздела 3 (КС 0.29а)'");
	ОписаниеКС     = НСтр("ru='При заполнении поля ""Расчетный (отчетный) период (код)"" в титульном листе и поля 020 р. "
		+ "3 = 21 (51) порядковый номер месяца в календарном году в графах 190 за первый, второй и третий месяц из "
		+ "последних трех месяцев расчетного (отчетного) периода соответственно = 01, 02, 03'");
	ОписаниеОшибки = НСтр("ru='Несоответствие значения расчетного (отчетного) периода и порядкового номера месяца в "
		+ "указанном расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3)'");
	
	// Формула КС кратко: 'Пд321СтМ1190Гр01 может быть равен 01 или 02 или 03'.
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если МесяцПредставленияОтчета <> 3 Тогда
		Возврат;
	КонецЕсли;
	
	ТитульныйКодРП = ПоказательПоСтроке("ТитульныйКодРП");
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	Титульный = мДанныеОтчета.Титульный;
	
	ЕстьОшибки = Ложь;
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйКодРП);
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если ЗначениеЗаполнено(Пд321СтМ1190Гр01.Значение) Тогда
				Если КодНайден(Пд321СтМ1190Гр01.Значение, "01,02,03") Тогда
					Продолжить;
				КонецЕсли;
				
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
				ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = Пд321СтМ1190Гр01.ЗначениеСтр + " = ""01"" ИЛИ "
					+ Пд321СтМ1190Гр01.ЗначениеСтр + " = ""02"" ИЛИ " + Пд321СтМ1190Гр01.ЗначениеСтр + " = ""03""";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если НЕ ЕстьОшибки Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
		
		Расшифровка = НСтр("ru='Все значения порядковых номеров месяцев в расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3) "
			+ "соответствуют указанному расчетному (отчетному) периоду - """ + СтруктураРеквизитовФормы.СтрПериодОтчета + """'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_0_29б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 3.2.1 Раздела 3 (КС 0.29б)'");
	ОписаниеКС     = НСтр("ru='При заполнении поля ""Расчетный (отчетный) период (код)"" в титульном листе и поля 020 р. "
		+ "3 = 31 (52) порядковый номер месяца в календарном году в графах 190 за первый, второй и третий месяц из "
		+ "последних трех месяцев расчетного (отчетного) периода соответственно = 04, 05, 06'");
	ОписаниеОшибки = НСтр("ru='Несоответствие значения расчетного (отчетного) периода и порядкового номера месяца в "
		+ "указанном расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3)'");
	
	// Формула КС кратко: 'Пд321СтМ1190Гр01 может быть равен 04 или 05 или 06'.
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если МесяцПредставленияОтчета <> 6 Тогда
		Возврат;
	КонецЕсли;
	
	ТитульныйКодРП = ПоказательПоСтроке("ТитульныйКодРП");
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	Титульный = мДанныеОтчета.Титульный;
	
	ЕстьОшибки = Ложь;
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйКодРП);
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если ЗначениеЗаполнено(Пд321СтМ1190Гр01.Значение) Тогда
				Если КодНайден(Пд321СтМ1190Гр01.Значение, "04,05,06") Тогда
					Продолжить;
				КонецЕсли;
				
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
				ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = Пд321СтМ1190Гр01.ЗначениеСтр + " = ""04"" ИЛИ "
					+ Пд321СтМ1190Гр01.ЗначениеСтр + " = ""05"" ИЛИ " + Пд321СтМ1190Гр01.ЗначениеСтр + " = ""06""";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если НЕ ЕстьОшибки Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
		
		Расшифровка = НСтр("ru='Все значения порядковых номеров месяцев в расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3) "
			+ "соответствуют указанному расчетному (отчетному) периоду - """ + СтруктураРеквизитовФормы.СтрПериодОтчета + """'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_0_29в(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 3.2.1 Раздела 3 (КС 0.29в)'");
	ОписаниеКС     = НСтр("ru='При заполнении поля ""Расчетный (отчетный) период (код)"" в титульном листе и поля 020 р. "
		+ "3 = 33 (53) порядковый номер месяца в календарном году в графах 190 за первый, второй и третий месяц из "
		+ "последних трех месяцев расчетного (отчетного) периода соответственно = 07,08,09'");
	ОписаниеОшибки = НСтр("ru='Несоответствие значения расчетного (отчетного) периода и порядкового номера месяца в "
		+ "указанном расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3)'");
	
	// Формула КС кратко: 'Пд321СтМ1190Гр01 может быть равен 07 или 08 или 09'.
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если МесяцПредставленияОтчета <> 9 Тогда
		Возврат;
	КонецЕсли;
	
	ТитульныйКодРП = ПоказательПоСтроке("ТитульныйКодРП");
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	Титульный = мДанныеОтчета.Титульный;
	
	ЕстьОшибки = Ложь;
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйКодРП);
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если ЗначениеЗаполнено(Пд321СтМ1190Гр01.Значение) Тогда
				Если КодНайден(Пд321СтМ1190Гр01.Значение, "07,08,09") Тогда
					Продолжить;
				КонецЕсли;
				
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
				ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = Пд321СтМ1190Гр01.ЗначениеСтр + " = ""07"" ИЛИ "
					+ Пд321СтМ1190Гр01.ЗначениеСтр + " = ""08"" ИЛИ " + Пд321СтМ1190Гр01.ЗначениеСтр + " = ""09""";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если НЕ ЕстьОшибки Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
		
		Расшифровка = НСтр("ru='Все значения порядковых номеров месяцев в расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3) "
			+ "соответствуют указанному расчетному (отчетному) периоду - """ + СтруктураРеквизитовФормы.СтрПериодОтчета + """'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_0_29г(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 3.2.1 Раздела 3 (КС 0.29г)'");
	ОписаниеКС     = НСтр("ru='При заполнении поля ""Расчетный (отчетный) период (код)"" в титульном листе и поля 020 р. "
		+ "3 = 34 (90) порядковый номер месяца в календарном году в графах 190 за первый, второй и третий месяц из "
		+ "последних трех месяцев расчетного (отчетного) периода = 10,11,12 соответственно'");
	ОписаниеОшибки = НСтр("ru='Несоответствие значения расчетного (отчетного) периода и порядкового номера месяца в "
		+ "указанном расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3)'");
	
	// Формула КС кратко: 'Пд321СтМ1190Гр01 может быть равен 10 или 11 или 12'.
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Если МесяцПредставленияОтчета <> 12 Тогда
		Возврат;
	КонецЕсли;
	
	ТитульныйКодРП = ПоказательПоСтроке("ТитульныйКодРП");
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	Титульный = мДанныеОтчета.Титульный;
	
	ЕстьОшибки = Ложь;
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйКодРП);
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если ЗначениеЗаполнено(Пд321СтМ1190Гр01.Значение) Тогда
				Если КодНайден(Пд321СтМ1190Гр01.Значение, "10,11,12") Тогда
					Продолжить;
				КонецЕсли;
				
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
				ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = Пд321СтМ1190Гр01.ЗначениеСтр + " = ""10"" ИЛИ "
					+ Пд321СтМ1190Гр01.ЗначениеСтр + " = ""11"" ИЛИ " + Пд321СтМ1190Гр01.ЗначениеСтр + " = ""12""";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если НЕ ЕстьОшибки Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
		
		Расшифровка = НСтр("ru='Все значения порядковых номеров месяцев в расчетном (отчетном) периоде (строка 190 подраздела 3.2.1 Раздела 3) "
			+ "соответствуют указанному расчетному (отчетному) периоду - """ + СтруктураРеквизитовФормы.СтрПериодОтчета + """'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_0_30а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 3.2 Раздела 3 (КС 0.30а)'");
	ОписаниеКС     = НСтр("ru='Сведения по застрахованному лицу не содержат отрицательных значений в данных о сумме "
		+ "страховых взносов, не превышающих предельную величину и (или) начисленных страховых взносах'");
	ОписаниеОшибки = НСтр("ru='Сведения по застрахованному лицу содержат данные о сумме страховых взносов, не "
		+ "превышающих предельную величину и (или) начисленных страховых взносах, содержащих отрицательные значения'");
	
	// Формула КС кратко: 'Пд321СтМ1210Гр01 >= 0 И Пд321СтМ1220Гр01 >= 0 И Пд321СтМ1230Гр01 >= 0 И Пд321СтМ1240Гр01 >= 0
	//                   И Пд322Ст280Гр01 >= 0 И Пд322Ст290Гр01 >= 0'.
	
	Пд321СтМ1210Гр01 = ПоказательПоСтроке("Пд321СтМ1210Гр01");
	Пд321СтМ1220Гр01 = ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1230Гр01 = ПоказательПоСтроке("Пд321СтМ1230Гр01");
	Пд321СтМ1240Гр01 = ПоказательПоСтроке("Пд321СтМ1240Гр01");
	
	Пд322Ст280Гр01   = ПоказательПоСтроке("Пд322Ст280Гр01");
	Пд322Ст290Гр01   = ПоказательПоСтроке("Пд322Ст290Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	НайденыОтрицательныеЗначения = Ложь;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1210Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1210Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1220Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1230Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1240Гр01, Инд);
			
			Если Пд321СтМ1210Гр01.Значение < 0
			 ИЛИ Пд321СтМ1220Гр01.Значение < 0
			 ИЛИ Пд321СтМ1230Гр01.Значение < 0
			 ИЛИ Пд321СтМ1240Гр01.Значение < 0 Тогда
				НайденыОтрицательныеЗначения = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(Пд321СтМ1210Гр01, "Раздел3", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд321СтМ1220Гр01, "Раздел3", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд321СтМ1230Гр01, "Раздел3", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд321СтМ1240Гр01, "Раздел3", НомерСтраницыСтр);
				
				Расшифровка = Пд321СтМ1210Гр01.ЗначениеСтр + " >= 0 И " + Пд321СтМ1220Гр01.ЗначениеСтр + " >= 0 И "
							+ Пд321СтМ1230Гр01.ЗначениеСтр + " >= 0 И " + Пд321СтМ1240Гр01.ЗначениеСтр + " >= 0";
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
				
			КонецЕсли;
			
		КонецЦикла;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст280Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст280Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст290Гр01, Инд);
			
			Если Пд322Ст280Гр01.Значение < 0 ИЛИ Пд322Ст290Гр01.Значение < 0 Тогда
				НайденыОтрицательныеЗначения = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд322Ст290Гр01, "Раздел3", НомерСтраницыСтр);
				
				Расшифровка = Пд322Ст280Гр01.ЗначениеСтр + " >= 0 И " + Пд322Ст290Гр01.ЗначениеСтр + " >= 0";
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если НЕ НайденыОтрицательныеЗначения Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		Расшифровка = НСтр("ru='Раздел 3 не содержит отрицательных значений в данных о суммах "
			+ "страховых взносов, не превышающих предельную величину, и (или) начисленных страховых взносов'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_0_30б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подр. 1.1 приложения 1 к Разделу 1 (КС 0.30б)'");
	ОписаниеКС     = НСтр("ru='(ст. 050 – ст. 051), ст. 061 подр. 1.1 прил. 1 Р. 1 по всем значениям граф ≥ 0'");
	ОписаниеОшибки = НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых "
		+ "взносах содержат отрицательные значения'");
	
	// Формула КС кратко: '(Пд11Пр1Ст50Гр01 - Пд11Пр1Ст51Гр01 >= 0) И (Пд11Пр1Ст50Гр02 - Пд11Пр1Ст51Гр02 >= 0)
	//                   И (Пд11Пр1Ст50Гр03 - Пд11Пр1Ст51Гр03 >= 0) И (Пд11Пр1Ст50Гр04 - Пд11Пр1Ст51Гр04 >= 0)
	//                   И (Пд11Пр1Ст50Гр05 - Пд11Пр1Ст51Гр05 >= 0) И  Пд11Пр1Ст61Гр01 >= 0
	//                   И  Пд11Пр1Ст61Гр02 >= 0 И Пд11Пр1Ст61Гр03 >= 0 И Пд11Пр1Ст61Гр04 >= 0 И Пд11Пр1Ст61Гр05 >= 0'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Пд11Пр1Ст51Гр01 = ПоказательПоСтроке("Пд11Пр1Ст51Гр01");
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Пд11Пр1Ст51Гр03 = ПоказательПоСтроке("Пд11Пр1Ст51Гр03");
	Пд11Пр1Ст51Гр04 = ПоказательПоСтроке("Пд11Пр1Ст51Гр04");
	Пд11Пр1Ст51Гр05 = ПоказательПоСтроке("Пд11Пр1Ст51Гр05");
	Пд11Пр1Ст61Гр01 = ПоказательПоСтроке("Пд11Пр1Ст61Гр01");
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Пд11Пр1Ст61Гр03 = ПоказательПоСтроке("Пд11Пр1Ст61Гр03");
	Пд11Пр1Ст61Гр04 = ПоказательПоСтроке("Пд11Пр1Ст61Гр04");
	Пд11Пр1Ст61Гр05 = ПоказательПоСтроке("Пд11Пр1Ст61Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		УсловиеВыполнено = (Пд11Пр1Ст50Гр01.Значение - Пд11Пр1Ст51Гр01.Значение >= 0)
						 И (Пд11Пр1Ст50Гр02.Значение - Пд11Пр1Ст51Гр02.Значение >= 0)
						 И (Пд11Пр1Ст50Гр03.Значение - Пд11Пр1Ст51Гр03.Значение >= 0)
						 И (Пд11Пр1Ст50Гр04.Значение - Пд11Пр1Ст51Гр04.Значение >= 0)
						 И (Пд11Пр1Ст50Гр05.Значение - Пд11Пр1Ст51Гр05.Значение >= 0)
						 И  Пд11Пр1Ст61Гр01.Значение >= 0 И Пд11Пр1Ст61Гр02.Значение >= 0 И Пд11Пр1Ст61Гр03.Значение >= 0
						 И  Пд11Пр1Ст61Гр04.Значение >= 0 И Пд11Пр1Ст61Гр05.Значение >= 0;
		Расшифровка = "(" + Пд11Пр1Ст50Гр01.ЗначениеСтр + " - " + Пд11Пр1Ст51Гр01.ЗначениеСтр + " >= 0" + ") И ("
						  + Пд11Пр1Ст50Гр02.ЗначениеСтр + " - " + Пд11Пр1Ст51Гр02.ЗначениеСтр + " >= 0" + ") И ("
						  + Пд11Пр1Ст50Гр03.ЗначениеСтр + " - " + Пд11Пр1Ст51Гр03.ЗначениеСтр + " >= 0" + ") И ("
						  + Пд11Пр1Ст50Гр04.ЗначениеСтр + " - " + Пд11Пр1Ст51Гр04.ЗначениеСтр + " >= 0" + ") И ("
						  + Пд11Пр1Ст50Гр05.ЗначениеСтр + " - " + Пд11Пр1Ст51Гр05.ЗначениеСтр + " >= 0" + ") И "
						  + Пд11Пр1Ст61Гр01.ЗначениеСтр + " >= 0 И " + Пд11Пр1Ст61Гр02.ЗначениеСтр + " >= 0 И "
						  + Пд11Пр1Ст61Гр03.ЗначениеСтр + " >= 0 И " + Пд11Пр1Ст61Гр04.ЗначениеСтр + " >= 0 И "
						  + Пд11Пр1Ст61Гр05.ЗначениеСтр + " >= 0";
		
		Если УсловиеВыполнено Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_30в(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подр. 1.3.1 приложения 1 к Разделу 1 (КС 0.30в)'");
	ОписаниеКС     = НСтр("ru='ст. 040, ст. 050 подр.1.3.1 прил. 1 Р. 1 по всем значения граф  ≥ 0'");
	ОписаниеОшибки = НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых "
		+ "взносах содержат отрицательные значения'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр01 >= 0 И Пд131Пр1Ст40Гр02 >= 0 И Пд131Пр1Ст40Гр03 >= 0 И Пд131Пр1Ст40Гр04 >= 0
	//                   И Пд131Пр1Ст40Гр05 >= 0 И Пд131Пр1Ст50Гр01 >= 0 И Пд131Пр1Ст50Гр02 >= 0 И Пд131Пр1Ст50Гр03 >= 0
	//                   И Пд131Пр1Ст50Гр04 >= 0 И Пд131Пр1Ст50Гр05 >= 0'.
	
	Пд131Пр1Ст40Гр01 = ПоказательПоСтроке("Пд131Пр1Ст40Гр01");
	Пд131Пр1Ст40Гр02 = ПоказательПоСтроке("Пд131Пр1Ст40Гр02");
	Пд131Пр1Ст40Гр03 = ПоказательПоСтроке("Пд131Пр1Ст40Гр03");
	Пд131Пр1Ст40Гр04 = ПоказательПоСтроке("Пд131Пр1Ст40Гр04");
	Пд131Пр1Ст40Гр05 = ПоказательПоСтроке("Пд131Пр1Ст40Гр05");
	Пд131Пр1Ст50Гр01 = ПоказательПоСтроке("Пд131Пр1Ст50Гр01");
	Пд131Пр1Ст50Гр02 = ПоказательПоСтроке("Пд131Пр1Ст50Гр02");
	Пд131Пр1Ст50Гр03 = ПоказательПоСтроке("Пд131Пр1Ст50Гр03");
	Пд131Пр1Ст50Гр04 = ПоказательПоСтроке("Пд131Пр1Ст50Гр04");
	Пд131Пр1Ст50Гр05 = ПоказательПоСтроке("Пд131Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			УсловиеВыполнено = Пд131Пр1Ст40Гр01.Значение >= 0 И Пд131Пр1Ст40Гр02.Значение >= 0 И Пд131Пр1Ст40Гр03.Значение >= 0
							 И Пд131Пр1Ст40Гр04.Значение >= 0 И Пд131Пр1Ст40Гр05.Значение >= 0 И Пд131Пр1Ст50Гр01.Значение >= 0
							 И Пд131Пр1Ст50Гр02.Значение >= 0 И Пд131Пр1Ст50Гр03.Значение >= 0 И Пд131Пр1Ст50Гр04.Значение >= 0
							 И Пд131Пр1Ст50Гр05.Значение >= 0;
			Расшифровка = Пд131Пр1Ст40Гр01.ЗначениеСтр + " >= 0 И " + Пд131Пр1Ст40Гр02.ЗначениеСтр + " >= 0 И "
						+ Пд131Пр1Ст40Гр03.ЗначениеСтр + " >= 0 И " + Пд131Пр1Ст40Гр04.ЗначениеСтр + " >= 0 И "
						+ Пд131Пр1Ст40Гр05.ЗначениеСтр + " >= 0 И " + Пд131Пр1Ст50Гр01.ЗначениеСтр + " >= 0 И "
						+ Пд131Пр1Ст50Гр02.ЗначениеСтр + " >= 0 И " + Пд131Пр1Ст50Гр03.ЗначениеСтр + " >= 0 И "
						+ Пд131Пр1Ст50Гр04.ЗначениеСтр + " >= 0 И " + Пд131Пр1Ст50Гр05.ЗначениеСтр + " >= 0";
			
			Если УсловиеВыполнено Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_30г(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подр. 1.3.2 приложения 1 к Разделу 1 (КС 0.30г)'");
	ОписаниеКС     = НСтр("ru='ст. 040, ст. 050 подр.1.3.2 прил. 1 Р. 1 по всем значения граф  ≥ 0'");
	ОписаниеОшибки = НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых "
		+ "взносах содержат отрицательные значения'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр01 >= 0 И Пд132Пр1Ст40Гр02 >= 0 И Пд132Пр1Ст40Гр03 >= 0 И Пд132Пр1Ст40Гр04 >= 0
	//                   И Пд132Пр1Ст40Гр05 >= 0 И Пд132Пр1Ст50Гр01 >= 0 И Пд132Пр1Ст50Гр02 >= 0 И Пд132Пр1Ст50Гр03 >= 0
	//                   И Пд132Пр1Ст50Гр04 >= 0 И Пд132Пр1Ст50Гр05 >= 0'.
	
	Пд132Пр1Ст40Гр01 = ПоказательПоСтроке("Пд132Пр1Ст40Гр01");
	Пд132Пр1Ст40Гр02 = ПоказательПоСтроке("Пд132Пр1Ст40Гр02");
	Пд132Пр1Ст40Гр03 = ПоказательПоСтроке("Пд132Пр1Ст40Гр03");
	Пд132Пр1Ст40Гр04 = ПоказательПоСтроке("Пд132Пр1Ст40Гр04");
	Пд132Пр1Ст40Гр05 = ПоказательПоСтроке("Пд132Пр1Ст40Гр05");
	Пд132Пр1Ст50Гр01 = ПоказательПоСтроке("Пд132Пр1Ст50Гр01");
	Пд132Пр1Ст50Гр02 = ПоказательПоСтроке("Пд132Пр1Ст50Гр02");
	Пд132Пр1Ст50Гр03 = ПоказательПоСтроке("Пд132Пр1Ст50Гр03");
	Пд132Пр1Ст50Гр04 = ПоказательПоСтроке("Пд132Пр1Ст50Гр04");
	Пд132Пр1Ст50Гр05 = ПоказательПоСтроке("Пд132Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			УсловиеВыполнено = Пд132Пр1Ст40Гр01.Значение >= 0 И Пд132Пр1Ст40Гр02.Значение >= 0 И Пд132Пр1Ст40Гр03.Значение >= 0
							 И Пд132Пр1Ст40Гр04.Значение >= 0 И Пд132Пр1Ст40Гр05.Значение >= 0 И Пд132Пр1Ст50Гр01.Значение >= 0
							 И Пд132Пр1Ст50Гр02.Значение >= 0 И Пд132Пр1Ст50Гр03.Значение >= 0 И Пд132Пр1Ст50Гр04.Значение >= 0
							 И Пд132Пр1Ст50Гр05.Значение >= 0;
			Расшифровка = Пд132Пр1Ст40Гр01.ЗначениеСтр + " >= 0 И " + Пд132Пр1Ст40Гр02.ЗначениеСтр + " >= 0 И "
						+ Пд132Пр1Ст40Гр03.ЗначениеСтр + " >= 0 И " + Пд132Пр1Ст40Гр04.ЗначениеСтр + " >= 0 И "
						+ Пд132Пр1Ст40Гр05.ЗначениеСтр + " >= 0 И " + Пд132Пр1Ст50Гр01.ЗначениеСтр + " >= 0 И "
						+ Пд132Пр1Ст50Гр02.ЗначениеСтр + " >= 0 И " + Пд132Пр1Ст50Гр03.ЗначениеСтр + " >= 0 И "
						+ Пд132Пр1Ст50Гр04.ЗначениеСтр + " >= 0 И " + Пд132Пр1Ст50Гр05.ЗначениеСтр + " >= 0";
			
			Если УсловиеВыполнено Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_0_31а_доп(СтруктураРезультата)
	
	// Формула КС: Пд321Ст220Гр01 = Пд321Ст210Гр01, когда Пд321Ст190Гр01 = "01","04","07","10"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.31а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Ст. 220 (1 месяц ОП) подр. 3.2.1 Р. 3 <= ст. 210 (1 месяц ОП) подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База для исчисления СВ на ОПС в пределах предельной величины за 1 месяц отчетного периода "
		+ "превышает сумму выплат и иных вознаграждений'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 2);
	ПроверитьКС_0_31_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_31б_доп(СтруктураРезультата)
	
	// Формула КС: Пд321Ст220Гр01 = Пд321Ст210Гр01, когда Пд321Ст190Гр01 = "02","05","07","11"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.31б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Ст. 220 (2 месяц ОП) подр. 3.2.1 Р. 3 <= ст. 210 (2 месяц ОП) подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База для исчисления СВ на ОПС в пределах предельной величины за 2 месяц отчетного периода "
		+ "превышает сумму выплат и иных вознаграждений'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц - 1);
	ПроверитьКС_0_31_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_31в_доп(СтруктураРезультата)
	
	// Формула КС: Пд321Ст220Гр01 = Пд321Ст210Гр01, когда Пд321Ст190Гр01 = "03","06","08","12"
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.31в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Ст. 220 (3 месяц ОП) подр. 3.2.1 Р. 3 <= ст. 210 (3 месяц ОП) подр. 3.2.1 Р. 3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База для исчисления СВ на ОПС в пределах предельной величины за 3 месяц отчетного периода "
		+ "превышает сумму выплат и иных вознаграждений'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	ОтчетныйМесяц = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	Настройки.Вставить("НомерМесяца", ОтчетныйМесяц);
	ПроверитьКС_0_31_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_31_код(Настройки)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.Фамилия + ВТ_Раздел321.Снилс + 
	|	ВТ_Раздел321.ГруппаТарифов + ВТ_Раздел321.Категория КАК Ключ,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.П210 КАК П210,
	|	ВТ_Раздел321.П220 КАК П220
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Месяц_ = &НомерМесяца
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пд31Ст70Гр01	= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01	= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд321СтМ1210Гр01	= ПоказательПоСтроке("Пд321СтМ1210Гр01");
	Пд321СтМ1220Гр01	= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Выборка.Фамилия, Выборка.Снилс));
		ЗарегистрироватьФормулу(Настройки);
		Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
		ВставитьЗначениеПоказателя(Выборка, Пд31Ст80Гр01, "Фамилия");
		ВставитьЗначениеПоказателя(Выборка, Пд31Ст70Гр01, "Снилс");
		ВнестиПоказательВРасшифровку(Пд31Ст80Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		ВнестиПоказательВРасшифровку(Пд31Ст70Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		Пд321СтМ1190Гр01	= ПоказательПоСтроке("Пд321СтМ1190Гр01");
		ВставитьЗначениеМногострочногоПоказателя(Выборка, Пд321СтМ1190Гр01, Выборка.НомерСтроки, "Период");
		Пд321СтМ1190Гр01.Вставить("Значение", Пд321СтМ1190Гр01.ЗначениеСтр + " месяц");
		ВставитьЗначениеМногострочногоПоказателя(Выборка, Пд321СтМ1210Гр01, Выборка.НомерСтроки, "П210");
		ВставитьЗначениеМногострочногоПоказателя(Выборка, Пд321СтМ1220Гр01, Выборка.НомерСтроки, "П220");
		ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		ВнестиПоказательВРасшифровку(Пд321СтМ1210Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		ВнестиПоказательВРасшифровку(Пд321СтМ1220Гр01, "Раздел3", Выборка.НомерСтраницы, Отчет);
		Настройки.ЭтоОшибка	= Выборка.П220 > Выборка.П210;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Выборка.П220, Выборка.П210);
		ДополнитьСтруктуруОшибок(Настройки);
	КонецЦикла;
	
КонецПроцедуры

// Основные КС с измененной нумерацией.

Процедура ПроверитьКС_0_1ж(СтруктураРезультата) // до 2018 года КС 0.1а
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.1ж)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр. 3 ст. 061 подразд. 1.1 прил. 1) = "
		+ "∑ стр. 240 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4] (±%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц с базы, не "
		+ "превышающей предельной величины, в целом по плательщику ≠ сумме исчисленных страховых взносов на "
		+ "ОПС за соответствующий месяц с базы, не превышающей предельной величины, по каждому физическому лицу'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 431 НК РФ'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("Графа"	, 3);
	ПроверитьКС_0_1_доп(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1з(СтруктураРезультата) // до 2018 года КС 0.1б
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.1з)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр. 4 ст. 061 подразд. 1.1 прил. 1) = "
		+ "∑ стр. 240 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4] (±%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц с базы, не "
		+ "превышающей предельной величины, в целом по плательщику ≠ сумме исчисленных страховых взносов на "
		+ "ОПС за соответствующий месяц с базы, не превышающей предельной величины, по каждому физическому лицу'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 431 НК РФ'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("Графа"	, 4);
	ПроверитьКС_0_1_доп(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1и(СтруктураРезультата) // до 2018 года КС 0.1в
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.1и)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр. 5 ст. 061 подразд. 1.1 прил. 1) = "
		+ "∑ стр. 240 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4] (±%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц с базы, не "
		+ "превышающей предельной величины, в целом по плательщику ≠ сумме исчисленных страховых взносов на "
		+ "ОПС за соответствующий месяц с базы, не превышающей предельной величины, по каждому физическому лицу'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 431 НК РФ'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("Графа"	, 5);
	ПроверитьКС_0_1_доп(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_1_доп(Настройки)
	
	ПоказательР1_1		= ПоказательПоСтроке("Пд11Пр1Ст61Гр0" + Настройки.Графа);
	ПоказательР1_2		= ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	ПоказательР3_1		= ПоказательПоСтроке("Пд321СтМ1240Гр01");
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.Графа);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.ГруппаТарифов КАК ГруппаТарифов,
	|	ВТ_Раздел321.Фамилия + ВТ_Раздел321.Имя + ВТ_Раздел321.Отчество + 
	|	ВТ_Раздел321.Снилс + ВТ_Раздел321.Инн + ВТ_Раздел321.Категория КАК Ключ,
	|	ВТ_Раздел321.Фамилия + ВТ_Раздел321.Имя + ВТ_Раздел321.Отчество + 
	|	ВТ_Раздел321.Снилс + ВТ_Раздел321.Инн КАК КлючФизлица,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.П240 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Квартал_ В (&Квартал)
	|	И ВТ_Раздел321.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу(Настройки);
	
	СуммаР1_1		= 0;
	СуммаР1_1Стр	= "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, ПоказательР1_1);
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, ПоказательР1_2);
		Дополнение = "тариф " + ПоказательР1_2.Значение;
		ДобавитьИнфоКПредставлениюПоказателя(ПоказательР1_1, Дополнение);
		ВнестиПоказательВРасшифровку(ПоказательР1_1, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаР1_1 = СуммаР1_1 + ПоказательР1_1.Значение;
		СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_1.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаР3_1		= 0;
	СуммаР3_1Стр	= "";
	Счетчик			= 1;
	Физлица			= Новый Соответствие;
	Если ВыборкаТ.Следующий() Тогда
		СуммаР3_1	= ВыборкаТ.ПоказательР3_1;
		Выборка		= ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
			Физлица.Вставить(Выборка.КлючФизлица);
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
			Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				Дополнение = Выборка.ПериодСтр + " мес., кат. " + Выборка.Категория + " => тариф " 
					+ Выборка.ГруппаТарифов + ", " + Выборка.Фамилия;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
				Счетчик = Счетчик + 1;
			КонецЕсли;
			Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаР3_1), "<...>", "0"), 
					ПоказательР3_1.Значение) + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Погрешность = 0.005 * Физлица.Количество();
	Настройки.ЭтоОшибка = НЕ КССучетомОтклонения(СуммаР1_1, СуммаР3_1, Погрешность);
	Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
		РасшифровкаВСтр(СуммаР1_1Стр), СуммаР1_1, РасшифровкаВСтр(СуммаР3_1Стр), СуммаР3_1, Погрешность);
	ДополнитьСтруктуруОшибок(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6г(СтруктураРезультата) // до 2018 года КС 0.1г
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.6г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу "
		+ "(гр. 3 ст. 050 подразд. 1.3.1 прил. 1 + гр. 3 ст. 050 подразд. 1.3.2) = ∑ стр. 290 "
		+ "(1 месяц) подразд. 3.2.2 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4] (±%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц "
		+ "по дополнительному тарифу в целом по плательщику ≠ сумме страховых взносов на ОПС за "
		+ "каждый месяц по дополнительному тарифу по каждому физическому лицу'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 431 НК РФ'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("Графа"	, 3);
	ПроверитьКС_0_6_доп(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6д(СтруктураРезультата) // до 2018 года КС 0.1д
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.6д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу "
		+ "(гр. 4 ст. 050 подразд. 1.3.1 прил. 1 + гр. 4 ст. 050 подразд. 1.3.2) = ∑ стр. 290 "
		+ "(2 месяц) подразд. 3.2.2 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4] (±%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц "
		+ "по дополнительному тарифу в целом по плательщику ≠ сумме страховых взносов на ОПС за "
		+ "каждый месяц по дополнительному тарифу по каждому физическому лицу'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 431 НК РФ'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("Графа"	, 4);
	ПроверитьКС_0_6_доп(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6е(СтруктураРезультата) // до 2018 года КС 0.1е
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.6е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу "
		+ "(гр. 5 ст. 050 подразд. 1.3.1 прил. 1 + гр. 5 ст. 050 подразд. 1.3.2) = ∑ стр. 290 "
		+ "(3 месяц) подразд. 3.2.2 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4] (±%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц "
		+ "по дополнительному тарифу в целом по плательщику ≠ сумме страховых взносов на ОПС за "
		+ "каждый месяц по дополнительному тарифу по каждому физическому лицу'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 431 НК РФ'"));
		
	Настройки = ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("Графа"	, 5);
	ПроверитьКС_0_6_доп(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_0_6_доп(Настройки)
	
	ПоказательР1_1	= ПоказательПоСтроке("Пд131Пр1Ст50Гр0" + Настройки.Графа);
	ПоказательР1_2	= ПоказательПоСтроке("Пд132Пр1Ст50Гр0" + Настройки.Графа);
	ПоказательР3_1	= ПоказательПоСтроке("Пд322Ст290Гр01");
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.Графа);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел322.Категория КАК Категория,
	|	ВТ_Раздел322.Фамилия + ВТ_Раздел322.Имя + ВТ_Раздел322.Отчество +
	|	ВТ_Раздел322.Снилс + ВТ_Раздел322.Инн КАК Ключ,
	|	ВТ_Раздел322.Фамилия КАК Фамилия,
	|	ВТ_Раздел322.Снилс КАК Снилс,
	|	ВТ_Раздел322.Месяц_ КАК Период,
	|	ВТ_Раздел322.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел322.Отчет КАК Отчет,
	|	ВТ_Раздел322.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел322.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел322.П290 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел322 КАК ВТ_Раздел322
	|ГДЕ
	|	ВТ_Раздел322.Квартал_ В (&Квартал)
	|	И ВТ_Раздел322.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу(Настройки);
	
	СуммаР1_1		= 0;
	СуммаР1_1Стр	= "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрок = КоличествоСтрок(СтраницаРаздела.Данные, ПоказательР1_1.Имя);
		Для Инд = 1 По КолвоСтрок Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, ПоказательР1_1, Инд);
			ВнестиПоказательВРасшифровку(ПоказательР1_1, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаР1_1 = СуммаР1_1 + ПоказательР1_1.Значение;
			СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_1.ЗначениеСтр + " + ";
		КонецЦикла;
		КолвоСтрок = КоличествоСтрок(СтраницаРаздела.Данные, ПоказательР1_2.Имя);
		Для Инд = 1 По КолвоСтрок Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, ПоказательР1_2, Инд);
			ВнестиПоказательВРасшифровку(ПоказательР1_2, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаР1_1 = СуммаР1_1 + ПоказательР1_2.Значение;
			СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_2.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаР3_1		= 0;
	СуммаР3_1Стр	= "";
	Счетчик			= 1;
	Физлица			= Новый Соответствие;
	Если ВыборкаТ.Следующий() Тогда
		СуммаР3_1	= ВыборкаТ.ПоказательР3_1;
		Выборка		= ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
			Физлица.Вставить(Выборка.Ключ);
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
			Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				Дополнение = Выборка.ПериодСтр + " месяц, код тарифа " + Выборка.Категория + ", " + Выборка.Фамилия;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
				Счетчик = Счетчик + 1;
			КонецЕсли;
			Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаР3_1), "<...>", "0"), 
					ПоказательР3_1.Значение) + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Погрешность = 0.005 * Физлица.Количество();
	Настройки.ЭтоОшибка = НЕ КССучетомОтклонения(СуммаР1_1, СуммаР3_1, Погрешность);
	Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
		РасшифровкаВСтр(СуммаР1_1Стр), СуммаР1_1, РасшифровкаВСтр(СуммаР3_1Стр), СуммаР3_1, Погрешность);
	ДополнитьСтруктуруОшибок(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС_0_32(СтруктураРезультата)  // до 2018 года КС 1.0
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Титульного листа (КС 0.32)'");
	ОписаниеКС     = НСтр("ru='Титульный лист (ст. 001) ""Дата представления Расчета"" должна быть раньше или равна "
		+ "установленному ст. 431 НК РФ сроку представления Расчета, если ""Номер корректировки"" ""0--""'");
	ОписаниеОшибки = НСтр("ru='Возможное нарушение срока представления первичного Расчета'");
	Нарушение      = НСтр("ru='Пункт 1 статьи 119 НК РФ'");
	
	ТитульныйСт001 = ПоказательПоСтроке("ТитульныйСт001");
	
	Титульный = мДанныеОтчета.Титульный;
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйСт001);
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВнестиПоказательВРасшифровку(ТитульныйСт001, "Титульный");
	
	ВариантОтчета = СтруктураРеквизитовФормы.мСохраненныйДок.Вид;
	ВариантОтчетаСтр = """" + Лев(Формат(ВариантОтчета, "ЧН=") + "---", 3) + """";
	
	ДатаМесяцаПредставленияРасчета = ДобавитьМесяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания, 1);
	ПредельнаяДатаМесяцаПредставленияРасчета = Дата(Год(ДатаМесяцаПредставленияРасчета), Месяц(ДатаМесяцаПредставленияРасчета), 30, 23, 59, 59);
	ПредельнаяДатаМесяцаПредставленияРасчетаСтр = Формат(ПредельнаяДатаМесяцаПредставленияРасчета, "ДЛФ=D");
	
	Расшифровка = ТитульныйСт001.ЗначениеСтр + " <= " + ПредельнаяДатаМесяцаПредставленияРасчетаСтр + ", когда ""Номер корректировки"" = " + ВариантОтчетаСтр;
	
	УсловиеВыполнено = (ВариантОтчета = 0 И Месяц(ДатаМесяцаПредставленияРасчета) <> 12);
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И ТитульныйСт001.Значение <= ПредельнаяДатаМесяцаПредставленияРасчета) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_0_33_доп(СтруктураРезультата)
	
	// Действие КС 0.33.доп приостановлено в связи с исключением проверки снилс
	Возврат;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.1 Раздела 3 (КС 0.33.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Проверка значения СНИЛС ст. 070 подразд. 3.1: контрольное число страхового номера должно "
		+ "совпадать с рассчитанным'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Указанное значение (%1)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
		
	Настройки		= ОбработатьНастройки(		, Заголовки, СтруктураРезультата);
	Пд31Ст70Гр01	= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01	= ПоказательПоСтроке("Пд31Ст80Гр01");
	Раздел3			= мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ТекстСообщения	= "";
		СнилсПроверен	= Истина;
		Снилс			= СтраницаРаздела.Данные.П000310007001;
		
		Если ЗначениеЗаполнено(Снилс) Тогда
			СнилсПроверен 
				= РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(Снилс, ТекстСообщения);
		КонецЕсли;
		
		Если СнилсПроверен Тогда
			Продолжить;
		КонецЕсли; 
		
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст80Гр01);
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст70Гр01);
		Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Пд31Ст80Гр01.Значение, Пд31Ст70Гр01.Значение));
		ЗарегистрироватьФормулу(Настройки);
		ВнестиПоказательВРасшифровку(Пд31Ст80Гр01, "Раздел3", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд31Ст70Гр01, "Раздел3", НомерСтраницыСтр);
			
		Настройки.ЭтоОшибка			= НЕ СнилсПроверен;
		Настройки.ОписаниеОшибки	= ТекстСообщения;
		Настройки.Расшифровка		= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Пд31Ст70Гр01.Значение);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_1

// Основные КС.

Процедура ПроверитьКС_1_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.1)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОПС "
		+ "(ст. 030 р. 1) = ст. 030 р. 1 предыдущего отчетного периода + ст. 031 р. 1 отчетного периода + ст. 032 р. 1"
		+ " отчетного периода + ст. 033 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС за отчетный период ≠ сумме страховых взносов на ОПС за "
		+ "предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	Р1Ст30Гр01    = ПоказательПоСтроке("Р1Ст30Гр01");
	Р1Ст31Гр01    = ПоказательПоСтроке("Р1Ст31Гр01");
	Р1Ст32Гр01    = ПоказательПоСтроке("Р1Ст32Гр01");
	Р1Ст33Гр01    = ПоказательПоСтроке("Р1Ст33Гр01");
	Р1Ст30Гр01ПРП = ПоказательПоСтроке("Р1Ст30Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст30Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст31Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст32Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст33Гр01);
	Если ПроверятьКС Тогда
		Если МесяцПредставленияОтчета = 3 Тогда
			ВставитьЗначениеПоказателя(Новый Структура(), Р1Ст30Гр01ПРП); // вставляем нулевое значение
		Иначе
			ВставитьЗначениеПоказателя(Раздел1ПРП, Р1Ст30Гр01ПРП);
		КонецЕсли;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВнестиПоказательВРасшифровку(Р1Ст30Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст31Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст32Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст33Гр01, "Раздел1");
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст30Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	
	КС = ПоказателиКС(Р1Ст30Гр01.Значение, ?(ПроверятьКС, Р1Ст30Гр01ПРП.Значение, 0) + Р1Ст31Гр01.Значение + Р1Ст32Гр01.Значение + Р1Ст33Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + ?(ПроверятьКС И МесяцПредставленияОтчета <> 3, Р1Ст30Гр01ПРП.ЗначениеСтр + " + ", "")
		+ Р1Ст31Гр01.ЗначениеСтр + " + " + Р1Ст32Гр01.ЗначениеСтр + " + " + Р1Ст33Гр01.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "]" + ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.2)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОМС "
		+ "(ст. 050 р. 1) = ст. 050 р. 1 предыдущего отчетного периода + ст. 051 р. 1 отчетного периода + ст. 052 р. 1 "
		+ "отчетного периода + ст. 053 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС за отчетный период ≠ сумме страховых взносов на ОМС за "
		+ "предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	Р1Ст50Гр01    = ПоказательПоСтроке("Р1Ст50Гр01");
	Р1Ст51Гр01    = ПоказательПоСтроке("Р1Ст51Гр01");
	Р1Ст52Гр01    = ПоказательПоСтроке("Р1Ст52Гр01");
	Р1Ст53Гр01    = ПоказательПоСтроке("Р1Ст53Гр01");
	Р1Ст50Гр01ПРП = ПоказательПоСтроке("Р1Ст50Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст50Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст51Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст52Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст53Гр01);
	Если ПроверятьКС Тогда
		Если МесяцПредставленияОтчета = 3 Тогда
			ВставитьЗначениеПоказателя(Новый Структура(), Р1Ст50Гр01ПРП); // вставляем нулевое значение
		Иначе
			ВставитьЗначениеПоказателя(Раздел1ПРП, Р1Ст50Гр01ПРП);
		КонецЕсли;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВнестиПоказательВРасшифровку(Р1Ст50Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст51Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст52Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст53Гр01, "Раздел1");
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст50Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	
	КС = ПоказателиКС(Р1Ст50Гр01.Значение, ?(ПроверятьКС, Р1Ст50Гр01ПРП.Значение, 0) + Р1Ст51Гр01.Значение + Р1Ст52Гр01.Значение + Р1Ст53Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + ?(ПроверятьКС И МесяцПредставленияОтчета <> 3, Р1Ст50Гр01ПРП.ЗначениеСтр + " + ", "")
		+ Р1Ст51Гр01.ЗначениеСтр + " + " + Р1Ст52Гр01.ЗначениеСтр + " + " + Р1Ст53Гр01.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "]" + ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_3а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02131 06 1010 160 (ст. 060 р.1) = "
		+ "ст. 070 р. 1 предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 "
		+ "отчетного периода + ст. 073 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202131061010160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр 
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_3б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОПС "
		+ "по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02131 06 1020 160 (ст. 060 р.1) = ст. 070 р. 1 "
		+ "предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 отчетного периода + ст. 073 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";

	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202131061020160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр 
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_3в(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3в)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02132 06 1010 160 (ст. 060 р.1) = ст. 070 р. 1 "
		+ "предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 отчетного периода + ст. 073 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202132061010160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;	
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_3г(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3г)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02132 06 1020 160 (ст. 060 р.1) = ст. 070 р. 1 "
		+ "предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 отчетного периода + ст. 073 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";

	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202132061020160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр 
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр)	+ " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_4а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.4а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на дополнительное социальное обеспечение (ст. 090 р. 1) "
		+ "для КБК 182 102 02080 06 1000 160 (стр.080 р1.) = ст. 090 р. 1 предыдущего отчетного периода + ст. 091 р. 1 "
		+ "отчетного периода + ст. 092 р. 1 отчетного периода + ст. 093 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ДСО за отчетный период ≠ сумме страховых взносов на ДСО "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ2080Гр01ПРП = ПоказательПоСтроке("Р1СтМ2080Гр01ПРП");
	Р1СтМ2090Гр01ПРП = ПоказательПоСтроке("Р1СтМ2090Гр01ПРП");
	Р1СтМ2080Гр01 = ПоказательПоСтроке("Р1СтМ2080Гр01");
	Р1СтМ2090Гр01 = ПоказательПоСтроке("Р1СтМ2090Гр01");
	Р1СтМ2091Гр01 = ПоказательПоСтроке("Р1СтМ2091Гр01");
	Р1СтМ2092Гр01 = ПоказательПоСтроке("Р1СтМ2092Гр01");
	Р1СтМ2093Гр01 = ПоказательПоСтроке("Р1СтМ2093Гр01");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ2090Гр01ПРП = 0;
	СуммаР1СтМ2090Гр01ПРПСтр = "";
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ2080Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2080Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ2080Гр01ПРП.Значение, "18210202080061000160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2090Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ2090Гр01ПРП = СуммаР1СтМ2090Гр01ПРП + Р1СтМ2090Гр01ПРП.Значение;
				СуммаР1СтМ2090Гр01ПРПСтр = СуммаР1СтМ2090Гр01ПРПСтр + Р1СтМ2090Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ2090Гр01 = 0;
	СуммаР1СтМ2090Гр01Стр = "";
	СуммаР1СтМ209хГр01 = 0;
	СуммаР1СтМ209хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ2080Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2080Гр01, Инд);
		Если КодНайден(Р1СтМ2080Гр01.Значение, "18210202080061000160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2090Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01, "Раздел1");
			
			СуммаР1СтМ2090Гр01 = СуммаР1СтМ2090Гр01 + Р1СтМ2090Гр01.Значение;
			СуммаР1СтМ2090Гр01Стр = СуммаР1СтМ2090Гр01Стр + Р1СтМ2090Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2091Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2091Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2092Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2092Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2093Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2093Гр01, "Раздел1");
			
			СуммаР1СтМ209хГр01 = СуммаР1СтМ209хГр01 + Р1СтМ2091Гр01.Значение + Р1СтМ2092Гр01.Значение + Р1СтМ2093Гр01.Значение;
			СуммаР1СтМ209хГр01Стр = СуммаР1СтМ209хГр01Стр 
				+ Р1СтМ2091Гр01.ЗначениеСтр + " + " + Р1СтМ2092Гр01.ЗначениеСтр + " + " + Р1СтМ2093Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ2090Гр01, СуммаР1СтМ2090Гр01ПРП + СуммаР1СтМ209хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ2090Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ2090Гр01ПРПСтр + СуммаР1СтМ209хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ " (для КБК 182 102 02080 06 1000 160), когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_4б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.4б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на дополнительное социальное обеспечение (ст. 090 р. 1) "
		+ "для КБК 182 102 02120 06 1000 160 (стр.080 р1.) = ст. 090 р. 1 предыдущего отчетного периода + ст. 091 р. 1 "
		+ "отчетного периода + ст. 092 р. 1 отчетного периода + ст. 093 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ДСО за отчетный период ≠ сумме страховых взносов на ДСО "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ2080Гр01ПРП = ПоказательПоСтроке("Р1СтМ2080Гр01ПРП");
	Р1СтМ2090Гр01ПРП = ПоказательПоСтроке("Р1СтМ2090Гр01ПРП");
	Р1СтМ2080Гр01 = ПоказательПоСтроке("Р1СтМ2080Гр01");
	Р1СтМ2090Гр01 = ПоказательПоСтроке("Р1СтМ2090Гр01");
	Р1СтМ2091Гр01 = ПоказательПоСтроке("Р1СтМ2091Гр01");
	Р1СтМ2092Гр01 = ПоказательПоСтроке("Р1СтМ2092Гр01");
	Р1СтМ2093Гр01 = ПоказательПоСтроке("Р1СтМ2093Гр01");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ2090Гр01ПРП = 0;
	СуммаР1СтМ2090Гр01ПРПСтр = "";

	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ2080Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2080Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ2080Гр01ПРП.Значение, "18210202120061000160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2090Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ2090Гр01ПРП = СуммаР1СтМ2090Гр01ПРП + Р1СтМ2090Гр01ПРП.Значение;
				СуммаР1СтМ2090Гр01ПРПСтр = СуммаР1СтМ2090Гр01ПРПСтр + Р1СтМ2090Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ2090Гр01 = 0;
	СуммаР1СтМ2090Гр01Стр = "";
	СуммаР1СтМ209хГр01 = 0;
	СуммаР1СтМ209хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ2080Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2080Гр01, Инд);
		Если КодНайден(Р1СтМ2080Гр01.Значение, "18210202120061000160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2090Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01, "Раздел1");
			
			СуммаР1СтМ2090Гр01 = СуммаР1СтМ2090Гр01 + Р1СтМ2090Гр01.Значение;
			СуммаР1СтМ2090Гр01Стр = СуммаР1СтМ2090Гр01Стр + Р1СтМ2090Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2091Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2091Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2092Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2092Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2093Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2093Гр01, "Раздел1");
			
			СуммаР1СтМ209хГр01 = СуммаР1СтМ209хГр01 + Р1СтМ2091Гр01.Значение + Р1СтМ2092Гр01.Значение + Р1СтМ2093Гр01.Значение;
			СуммаР1СтМ209хГр01Стр = СуммаР1СтМ209хГр01Стр 
				+ Р1СтМ2091Гр01.ЗначениеСтр + " + " + Р1СтМ2092Гр01.ЗначениеСтр + " + " + Р1СтМ2093Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ2090Гр01, СуммаР1СтМ2090Гр01ПРП + СуммаР1СтМ209хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ2090Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ2090Гр01ПРПСтр + СуммаР1СтМ209хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ " (для КБК 182 102 02120 06 1000 160), когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.5)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на социальное страхование к уплате (ст. 110 р. 1) - "
		+ "сумма превышения расходов над взносами (ст. 120 р. 1) = ст. 110 р. 1 предыдущего отчетного периода + "
		+ "ст. 111 р. 1 отчетного периода + ст. 112 р. 1 отчетного периода + ст. 113 р. 1 отчетного периода - ("
		+ "ст. 120 р. 1 предыдущего отчетного периода + ст. 121 р. 1 отчетного периода + ст. 122 р. 1 "
		+ "отчетного периода + ст. 123 р. 1 отчетного периода)'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС за вычетом суммы превышения расходов над "
		+ "страховыми взносами ОСС за отчетный период ≠ сумме страховых взносов на ОСС за предыдущий отчетный период и "
		+ "за последние три месяца отчетного периода за минусом суммы превышения расходов над страховыми взносами ОСС за "
		+ "предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	Р1Ст110Гр01 = ПоказательПоСтроке("Р1Ст110Гр01");
	Р1Ст120Гр01 = ПоказательПоСтроке("Р1Ст120Гр01");
	Р1Ст110Гр01ПРП = ПоказательПоСтроке("Р1Ст110Гр01ПРП");
	Р1Ст111Гр01 = ПоказательПоСтроке("Р1Ст111Гр01");
	Р1Ст112Гр01 = ПоказательПоСтроке("Р1Ст112Гр01");
	Р1Ст113Гр01 = ПоказательПоСтроке("Р1Ст113Гр01");
	Р1Ст120Гр01ПРП = ПоказательПоСтроке("Р1Ст120Гр01ПРП");
	Р1Ст121Гр01 = ПоказательПоСтроке("Р1Ст121Гр01");
	Р1Ст122Гр01 = ПоказательПоСтроке("Р1Ст122Гр01");
	Р1Ст123Гр01 = ПоказательПоСтроке("Р1Ст123Гр01");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП = Новый Структура();
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст110Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст110Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст120Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст120Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(?(МесяцПредставленияОтчета <> 3, Раздел1ПРП, Новый Структура()), Р1Ст110Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст110Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст111Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст111Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст112Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст112Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст113Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст113Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(?(МесяцПредставленияОтчета <> 3, Раздел1ПРП, Новый Структура()), Р1Ст120Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст120Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст121Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст121Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст122Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст122Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст123Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст123Гр01, "Раздел1");
	
	КС = ПоказателиКС(Р1Ст110Гр01.Значение - Р1Ст120Гр01.Значение,
		Р1Ст110Гр01ПРП.Значение + Р1Ст111Гр01.Значение + Р1Ст112Гр01.Значение + Р1Ст113Гр01.Значение - (
		Р1Ст120Гр01ПРП.Значение + Р1Ст121Гр01.Значение + Р1Ст122Гр01.Значение + Р1Ст123Гр01.Значение));
	Расшифровка = Р1Ст110Гр01.ЗначениеСтр + " - " + Р1Ст120Гр01.ЗначениеСтр + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
				+ ?(МесяцПредставленияОтчета <> 3, Р1Ст110Гр01ПРП.ЗначениеСтр + " + ", "")
				+ Р1Ст111Гр01.ЗначениеСтр + " + " + Р1Ст112Гр01.ЗначениеСтр + " + " + Р1Ст113Гр01.ЗначениеСтр + " - ("
				+ ?(МесяцПредставленияОтчета <> 3, Р1Ст120Гр01ПРП.ЗначениеСтр + " + ", "")
				+ Р1Ст121Гр01.ЗначениеСтр + " + " + Р1Ст122Гр01.ЗначениеСтр + " + " + Р1Ст123Гр01.ЗначениеСтр
				+ ") Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_6(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.6)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС (ст. 030 р. 1) = ∑ всех гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за отчетный период ≠ сумме исчисленных "
		+ "страховых взносов на ОПС за отчетный период по каждому виду тарифа'");
	
	Р1Ст30Гр01      = ПоказательПоСтроке("Р1Ст30Гр01");
	Пд11Пр1Ст60Гр01 = ПоказательПоСтроке("Пд11Пр1Ст60Гр01");
	
	Раздел1      = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст30Гр01, "Раздел1");
	
	СуммаПд11Пр1Ст60Гр01 = 0;
	СуммаПд11Пр1Ст60Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд11Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр01 = СуммаПд11Пр1Ст60Гр01 + Пд11Пр1Ст60Гр01.Значение;
		СуммаПд11Пр1Ст60Гр01Стр = СуммаПд11Пр1Ст60Гр01Стр + Пд11Пр1Ст60Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст30Гр01.Значение, СуммаПд11Пр1Ст60Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_7(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.7)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 1 месяц (ст. 031 р. 1 СВ) = ∑ всех гр. 3 "
		+ "ст. 060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за отчетный период ≠ сумме исчисленных страховых "
		+ "взносов на ОПС за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст31Гр01 = Пд11Пр1Ст60Гр03'.
	
	Р1Ст31Гр01 = ПоказательПоСтроке("Р1Ст31Гр01");
	Пд11Пр1Ст60Гр03 = ПоказательПоСтроке("Пд11Пр1Ст60Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст31Гр01, "Раздел1");
	СуммаПд11Пр1Ст60Гр03 = 0;
	СуммаПд11Пр1Ст60Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр03 = СуммаПд11Пр1Ст60Гр03 + Пд11Пр1Ст60Гр03.Значение;
		СуммаПд11Пр1Ст60Гр03Стр = СуммаПд11Пр1Ст60Гр03Стр + Пд11Пр1Ст60Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст31Гр01.Значение, СуммаПд11Пр1Ст60Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_8(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.8)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 2 месяц (ст. 032 р. 1) = ∑ всех гр. 4 ст. "
		+ "060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за 2 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОПС за 2 месяц отчетного периодапо каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст32Гр01 = Пд11Пр1Ст60Гр04'.
	
	Р1Ст32Гр01 = ПоказательПоСтроке("Р1Ст32Гр01");
	Пд11Пр1Ст60Гр04 = ПоказательПоСтроке("Пд11Пр1Ст60Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст32Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст32Гр01, "Раздел1");
	СуммаПд11Пр1Ст60Гр04 = 0;
	СуммаПд11Пр1Ст60Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр04 = СуммаПд11Пр1Ст60Гр04 + Пд11Пр1Ст60Гр04.Значение;
		СуммаПд11Пр1Ст60Гр04Стр = СуммаПд11Пр1Ст60Гр04Стр + Пд11Пр1Ст60Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст32Гр01.Значение, СуммаПд11Пр1Ст60Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_9(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.9)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 3 месяц (ст. 033 р. 1) = ∑ всех гр. 5 ст. "
		+ "060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за 3 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОПС за 3 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст33Гр01 = Пд11Пр1Ст60Гр05'.
	
	Р1Ст33Гр01 = ПоказательПоСтроке("Р1Ст33Гр01");
	Пд11Пр1Ст60Гр05 = ПоказательПоСтроке("Пд11Пр1Ст60Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст33Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст33Гр01, "Раздел1");
	СуммаПд11Пр1Ст60Гр05 = 0;
	СуммаПд11Пр1Ст60Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр05 = СуммаПд11Пр1Ст60Гр05 + Пд11Пр1Ст60Гр05.Значение;
		СуммаПд11Пр1Ст60Гр05Стр = СуммаПд11Пр1Ст60Гр05Стр + Пд11Пр1Ст60Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст33Гр01.Значение, СуммаПд11Пр1Ст60Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_10(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.10)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОМС (ст. 050 "
		+ "р. 1) = ∑ всех гр. 1 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за отчетный период ≠ сумме страховых взносов на "
		+ "ОМС за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст50Гр01 = Пд12Пр1Ст60Гр01'.
	
	Р1Ст50Гр01 = ПоказательПоСтроке("Р1Ст50Гр01");
	Пд12Пр1Ст60Гр01 = ПоказательПоСтроке("Пд12Пр1Ст60Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст50Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр01 = 0;
	СуммаПд12Пр1Ст60Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр01 = СуммаПд12Пр1Ст60Гр01 + Пд12Пр1Ст60Гр01.Значение;
		СуммаПд12Пр1Ст60Гр01Стр = СуммаПд12Пр1Ст60Гр01Стр + Пд12Пр1Ст60Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст50Гр01.Значение, СуммаПд12Пр1Ст60Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_11(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.11)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 1 месяц на ОМС (ст. 051 р. 1) = ∑ всех гр. "
		+ "3 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за 1 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОМС за 1 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст51Гр01 = Пд12Пр1Ст60Гр03'.
	
	Р1Ст51Гр01 = ПоказательПоСтроке("Р1Ст51Гр01");
	Пд12Пр1Ст60Гр03 = ПоказательПоСтроке("Пд12Пр1Ст60Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст51Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст51Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр03 = 0;
	СуммаПд12Пр1Ст60Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр03 = СуммаПд12Пр1Ст60Гр03 + Пд12Пр1Ст60Гр03.Значение;
		СуммаПд12Пр1Ст60Гр03Стр = СуммаПд12Пр1Ст60Гр03Стр + Пд12Пр1Ст60Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст51Гр01.Значение, СуммаПд12Пр1Ст60Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_12(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.12)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 2 месяц на ОМС (ст. 052 р. 1) = ∑ всех гр. "
		+ "4 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за 2 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОМС за 2 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст52Гр01 = Пд12Пр1Ст60Гр04'.
	
	Р1Ст52Гр01 = ПоказательПоСтроке("Р1Ст52Гр01");
	Пд12Пр1Ст60Гр04 = ПоказательПоСтроке("Пд12Пр1Ст60Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст52Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст52Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр04 = 0;
	СуммаПд12Пр1Ст60Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр04 = СуммаПд12Пр1Ст60Гр04 + Пд12Пр1Ст60Гр04.Значение;
		СуммаПд12Пр1Ст60Гр04Стр = СуммаПд12Пр1Ст60Гр04Стр + Пд12Пр1Ст60Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст52Гр01.Значение, СуммаПд12Пр1Ст60Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_13(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.13)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 3 месяц на ОМС (ст. 053 р. 1) = ∑ всех гр. "
		+ "5 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за 3 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОМС за 3 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст53Гр01 = Пд12Пр1Ст60Гр05'.
	
	Р1Ст53Гр01 = ПоказательПоСтроке("Р1Ст53Гр01");
	Пд12Пр1Ст60Гр05 = ПоказательПоСтроке("Пд12Пр1Ст60Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст53Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст53Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр05 = 0;
	СуммаПд12Пр1Ст60Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр05 = СуммаПд12Пр1Ст60Гр05 + Пд12Пр1Ст60Гр05.Значение;
		СуммаПд12Пр1Ст60Гр05Стр = СуммаПд12Пр1Ст60Гр05Стр + Пд12Пр1Ст60Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст53Гр01.Значение, СуммаПд12Пр1Ст60Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_14а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.14а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.1 прил. 1 "
		+ "р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за отчетный период по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за отчетный период по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными категориями плательщиков "
		+ "(п.3 ст.428 НК РФ) по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд131Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр01 = ПоказательПоСтроке("Пд131Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр01 = 0;
	СуммаПд131Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр01 = СуммаПд131Пр1Ст50Гр01 + Пд131Пр1Ст50Гр01.Значение;
				СуммаПд131Пр1Ст50Гр01Стр = СуммаПд131Пр1Ст50Гр01Стр + Пд131Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд131Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_14б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.14б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.2 прил. 1 "
		+ "р. 1 СВ при ст. 001 подр. 1.3.2 прил. 1 р. 1 СВ = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за отчетный период по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за отчетный период по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными категориями плательщиков "
		+ "(п.3 ст.428 НК РФ) по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд132Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр01 = ПоказательПоСтроке("Пд132Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр01 = 0;
	СуммаПд132Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр01 = СуммаПд132Пр1Ст50Гр01 + Пд132Пр1Ст50Гр01.Значение;
				СуммаПд132Пр1Ст50Гр01Стр = СуммаПд132Пр1Ст50Гр01Стр + Пд132Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд132Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_15а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.15а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст.060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 1-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд131Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр03 = ПоказательПоСтроке("Пд131Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр03 = 0;
	СуммаПд131Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр03 = СуммаПд131Пр1Ст50Гр03 + Пд131Пр1Ст50Гр03.Значение;
				СуммаПд131Пр1Ст50Гр03Стр = СуммаПд131Пр1Ст50Гр03Стр + Пд131Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд131Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст.060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_15б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.15б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 1-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд132Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр03 = ПоказательПоСтроке("Пд132Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр03 = 0;
	СуммаПд132Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр03 = СуммаПд132Пр1Ст50Гр03 + Пд132Пр1Ст50Гр03.Значение;
				СуммаПд132Пр1Ст50Гр03Стр = СуммаПд132Пр1Ст50Гр03Стр + Пд132Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд132Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_16а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.16а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, "
		+ "установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд131Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр04 = ПоказательПоСтроке("Пд131Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр04 = 0;
	СуммаПд131Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр04 = СуммаПд131Пр1Ст50Гр04 + Пд131Пр1Ст50Гр04.Значение;
				СуммаПд131Пр1Ст50Гр04Стр = СуммаПд131Пр1Ст50Гр04Стр + Пд131Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд131Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_16б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.16б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, "
		+ "установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд132Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр04 = ПоказательПоСтроке("Пд132Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр04 = 0;
	СуммаПд132Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр04 = СуммаПд132Пр1Ст50Гр04 + Пд132Пр1Ст50Гр04.Значение;
				СуммаПд132Пр1Ст50Гр04Стр = СуммаПд132Пр1Ст50Гр04Стр + Пд132Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд132Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_17а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.17а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 3-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд131Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр05 = ПоказательПоСтроке("Пд131Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр05 = 0;
	СуммаПд131Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр05 = СуммаПд131Пр1Ст50Гр05 + Пд131Пр1Ст50Гр05.Значение;
				СуммаПд131Пр1Ст50Гр05Стр = СуммаПд131Пр1Ст50Гр05Стр + Пд131Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд131Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_17б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.17б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 3-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд132Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр05 = ПоказательПоСтроке("Пд132Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр05 = 0;
	СуммаПд132Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр05 = СуммаПд132Пр1Ст50Гр05 + Пд132Пр1Ст50Гр05.Значение;
				СуммаПд132Пр1Ст50Гр05Стр = СуммаПд132Пр1Ст50Гр05Стр + Пд132Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд132Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_18а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.18а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.1 прил. 1 "
		+ "р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за отчетный период по "
		+ "КБК ОПС дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме "
		+ "всех исчисленных страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными "
		+ "категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд131Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр01 = ПоказательПоСтроке("Пд131Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр01 = 0;
	СуммаПд131Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр01 = СуммаПд131Пр1Ст50Гр01 + Пд131Пр1Ст50Гр01.Значение;
				СуммаПд131Пр1Ст50Гр01Стр = СуммаПд131Пр1Ст50Гр01Стр + Пд131Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд131Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_18б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.18б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.2 прил. 1 "
		+ "р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за отчетный период по "
		+ "КБК ОПС дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме "
		+ "всех исчисленных страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными "
		+ "категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд132Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр01 = ПоказательПоСтроке("Пд132Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр01 = 0;
	СуммаПд132Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр01 = СуммаПд132Пр1Ст50Гр01 + Пд132Пр1Ст50Гр01.Значение;
				СуммаПд132Пр1Ст50Гр01Стр = СуммаПд132Пр1Ст50Гр01Стр + Пд132Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд132Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_19а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.19а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд131Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр03 = ПоказательПоСтроке("Пд131Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр03 = 0;
	СуммаПд131Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр03 = СуммаПд131Пр1Ст50Гр03 + Пд131Пр1Ст50Гр03.Значение;
				СуммаПд131Пр1Ст50Гр03Стр = СуммаПд131Пр1Ст50Гр03Стр + Пд131Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд131Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_19б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.19б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд132Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр03 = ПоказательПоСтроке("Пд132Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр03 = 0;
	СуммаПд132Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр03 = СуммаПд132Пр1Ст50Гр03 + Пд132Пр1Ст50Гр03.Значение;
				СуммаПд132Пр1Ст50Гр03Стр = СуммаПд132Пр1Ст50Гр03Стр + Пд132Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд132Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_20а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.20а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 2-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд131Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр04 = ПоказательПоСтроке("Пд131Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр04 = 0;
	СуммаПд131Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр04 = СуммаПд131Пр1Ст50Гр04 + Пд131Пр1Ст50Гр04.Значение;
				СуммаПд131Пр1Ст50Гр04Стр = СуммаПд131Пр1Ст50Гр04Стр + Пд131Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд131Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_20б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.20б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 2-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд132Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр04 = ПоказательПоСтроке("Пд132Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр04 = 0;
	СуммаПд132Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр04 = СуммаПд132Пр1Ст50Гр04 + Пд132Пр1Ст50Гр04.Значение;
				СуммаПд132Пр1Ст50Гр04Стр = СуммаПд132Пр1Ст50Гр04Стр + Пд132Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд132Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_21а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.21а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносах на "
		+ "ОПС по дополнительному тарифу за 3-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносах на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд131Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр05 = ПоказательПоСтроке("Пд131Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр05 = 0;
	СуммаПд131Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр05 = СуммаПд131Пр1Ст50Гр05 + Пд131Пр1Ст50Гр05.Значение;
				СуммаПд131Пр1Ст50Гр05Стр = СуммаПд131Пр1Ст50Гр05Стр + Пд131Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд131Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_21б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.21б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносах на "
		+ "ОПС по дополнительному тарифу за 3-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносах на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд132Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр05 = ПоказательПоСтроке("Пд132Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр05 = 0;
	СуммаПд132Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр05 = СуммаПд132Пр1Ст50Гр05 + Пд132Пр1Ст50Гр05.Значение;
				СуммаПд132Пр1Ст50Гр05Стр = СуммаПд132Пр1Ст50Гр05Стр + Пд132Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд132Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_22(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.22)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на социальное страхование (ст. 110 р. 1) = гр. 2 ст. 090 прил. 2 "
		+ "р. 1 если гр. 1 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за отчетный период (раздел 1) ≠ сумме страховых "
		+ "взносов на ОСС к уплате за отчетный период (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена "
		+ "к уплате за отчетный период и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст110Гр01 = Р1Прил2Ст90Гр02, когда Р1Прил2Ст90Гр01 = 1'.
	
	Р1Ст110Гр01 = ПоказательПоСтроке("Р1Ст110Гр01");
	Р1Прил2Ст90Гр02 = ПоказательПоСтроке("Р1Прил2Ст90Гр02");
	Р1Прил2Ст90Гр01 = ПоказательПоСтроке("Р1Прил2Ст90Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст110Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст110Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст110Гр01.Значение, Р1Прил2Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр01.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр01.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_23(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.23)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов к уплате за 1 месяц (ст. 111 р. 1) = гр. 6 ст. 090 прил. 2 р. 1, "
		+ "если гр. 5 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за 1-й месяц (раздел 1) ≠ сумме страховых взносов "
		+ "на ОСС к уплате за 1-й месяц (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена к уплате за "
		+ "1-й месяц и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст111Гр01 = Р1Прил2Ст90Гр06, когда Р1Прил2Ст90Гр05 = 1'.
	
	Р1Ст111Гр01 = ПоказательПоСтроке("Р1Ст111Гр01");
	Р1Прил2Ст90Гр06 = ПоказательПоСтроке("Р1Прил2Ст90Гр06");
	Р1Прил2Ст90Гр05 = ПоказательПоСтроке("Р1Прил2Ст90Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст111Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст111Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр06);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр06, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст111Гр01.Значение, Р1Прил2Ст90Гр06.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр05.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр05.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_24(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.24)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов к уплате за 2 месяц (ст. 112 р. 1) = гр. 8 ст. 090 прил. 2 р. 1 "
		+ "если гр. 7 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за 2-й месяц (раздел 1) ≠ сумме страховых взносов "
		+ "на ОСС к уплате за 2-й месяц (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена к уплате за "
		+ "2-й месяц и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст112Гр01 = Р1Прил2Ст90Гр08, когда Р1Прил2Ст90Гр07 = 1'.
	
	Р1Ст112Гр01 = ПоказательПоСтроке("Р1Ст112Гр01");
	Р1Прил2Ст90Гр08 = ПоказательПоСтроке("Р1Прил2Ст90Гр08");
	Р1Прил2Ст90Гр07 = ПоказательПоСтроке("Р1Прил2Ст90Гр07");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст112Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст112Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр07);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр07, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр08);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр08, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст112Гр01.Значение, Р1Прил2Ст90Гр08.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр07.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр07.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_25(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.25)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов к уплате за 3 месяц (ст. 113 р. 1) = гр. 10 ст. 090 прил. 2 р. 1 "
		+ "если гр. 9 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за 3-й месяц (раздел 1) ≠ сумме страховых взносов "
		+ "на ОСС к уплате за 3-й месяц (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена к уплате за "
		+ "3-й месяц и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст113Гр01 = Р1Прил2Ст90Гр10, когда Р1Прил2Ст90Гр09 = 1'.
	
	Р1Ст113Гр01 = ПоказательПоСтроке("Р1Ст113Гр01");
	Р1Прил2Ст90Гр10 = ПоказательПоСтроке("Р1Прил2Ст90Гр10");
	Р1Прил2Ст90Гр09 = ПоказательПоСтроке("Р1Прил2Ст90Гр09");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст113Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст113Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр09);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр09, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр10);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр10, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст113Гр01.Значение, Р1Прил2Ст90Гр10.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр09.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр09.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_26(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.26)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за отчетный период (ст. 120 р. 1) = гр. 2 ст. 090 "
		+ "прил. 2 р. 1 если гр. 1 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховых взносов на ОСС за "
		+ "отчетный период (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на "
		+ "ОСС за отчетный период (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС "
		+ "и указан признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст120Гр01 = Р1Прил2Ст90Гр02, когда Р1Прил2Ст90Гр01 = 2'.
	
	Р1Ст120Гр01 = ПоказательПоСтроке("Р1Ст120Гр01");
	Р1Прил2Ст90Гр02 = ПоказательПоСтроке("Р1Прил2Ст90Гр02");
	Р1Прил2Ст90Гр01 = ПоказательПоСтроке("Р1Прил2Ст90Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст120Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст120Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст120Гр01.Значение, Р1Прил2Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр01.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр01.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_27(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.27)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за 1 месяц (ст. 121 р. 1) = гр. 6 ст. 090 прил. 2 "
		+ "р. 1 если гр. 5 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховых взносов на ОСС за 1-й "
		+ "месяц (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на ОСС за "
		+ "1-й месяц (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС и указан "
		+ "признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст121Гр01 = Р1Прил2Ст90Гр06, когда Р1Прил2Ст90Гр05 = 2'.
	
	Р1Ст121Гр01 = ПоказательПоСтроке("Р1Ст121Гр01");
	Р1Прил2Ст90Гр06 = ПоказательПоСтроке("Р1Прил2Ст90Гр06");
	Р1Прил2Ст90Гр05 = ПоказательПоСтроке("Р1Прил2Ст90Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст121Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст121Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр06);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр06, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст121Гр01.Значение, Р1Прил2Ст90Гр06.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр05.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр05.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_28(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.28)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за 2 месяц (ст. 122 р. 1) = гр. 8 ст. 090 прил. 2 "
		+ "р. 1 если гр. 7 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховыми взносами на ОСС за "
		+ "2-й месяц (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на ОСС "
		+ "за 2-й месяц (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС и указан "
		+ "признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст122Гр01 = Р1Прил2Ст90Гр08, когда Р1Прил2Ст90Гр07 = 2'.
	
	Р1Ст122Гр01 = ПоказательПоСтроке("Р1Ст122Гр01");
	Р1Прил2Ст90Гр08 = ПоказательПоСтроке("Р1Прил2Ст90Гр08");
	Р1Прил2Ст90Гр07 = ПоказательПоСтроке("Р1Прил2Ст90Гр07");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст122Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст122Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр07);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр07, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр08);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр08, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст122Гр01.Значение, Р1Прил2Ст90Гр08.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр07.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр07.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_29(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.29)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за 3 месяц (ст. 123 р. 1) = гр.10 ст. 090 прил. 2 "
		+ "р. 1 если гр. 9 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховыми взносами на ОСС за "
		+ "3-й месяц (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на ОСС "
		+ "за 3-й месяц (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС и указан "
		+ "признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст123Гр01 = Р1Прил2Ст90Гр10, когда Р1Прил2Ст90Гр09 = 2'.
	
	Р1Ст123Гр01 = ПоказательПоСтроке("Р1Ст123Гр01");
	Р1Прил2Ст90Гр10 = ПоказательПоСтроке("Р1Прил2Ст90Гр10");
	Р1Прил2Ст90Гр09 = ПоказательПоСтроке("Р1Прил2Ст90Гр09");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст123Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст123Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр09);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр09, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр10);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр10, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст123Гр01.Значение, Р1Прил2Ст90Гр10.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр09.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр09.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_30(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.30)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц с начала периода (гр. 1 ст. 010 подр. 1.1 прил. 1 р. 1) "
		+ "должно быть больше или равно значению в гр. 1 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за отчетный период меньше "
		+ "количества физ. лиц, с выплат которым начислены страховые взносы на ОПС, за отчетный период в разрезе "
		+ "каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 >= Пд11Пр1Ст20Гр01'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр01.Значение, Пд11Пр1Ст20Гр01.Значение);
		Расшифровка = Пд11Пр1Ст10Гр01.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр01.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_31(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.31)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно значению в гр. 2 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 посл. месяца меньше "
		+ "количества физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 3 посл. месяца в разрезе каждого "
		+ "вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст20Гр02'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст20Гр02 = ПоказательПоСтроке("Пд11Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст20Гр02.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр02.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_32(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.32)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 1 месяц (гр. 3 ст. 010 подр. 1.1 прил. 1 р. 1) должно "
		+ "быть больше или равно значению в гр. 3 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 1-й месяц меньше количества "
		+ "физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 1-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр03 >= Пд11Пр1Ст20Гр03'.
	
	Пд11Пр1Ст10Гр03 = ПоказательПоСтроке("Пд11Пр1Ст10Гр03");
	Пд11Пр1Ст20Гр03 = ПоказательПоСтроке("Пд11Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр03.Значение, Пд11Пр1Ст20Гр03.Значение);
		Расшифровка = Пд11Пр1Ст10Гр03.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр03.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_33(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.33)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 2 месяц (гр. 4 ст. 010 подр. 1.1 прил. 1 р. 1) должно "
		+ "быть больше или равно значению в гр. 4 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 2-й месяц меньше количества "
		+ "физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 2-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр04 >= Пд11Пр1Ст20Гр04'.
	
	Пд11Пр1Ст10Гр04 = ПоказательПоСтроке("Пд11Пр1Ст10Гр04");
	Пд11Пр1Ст20Гр04 = ПоказательПоСтроке("Пд11Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр04.Значение, Пд11Пр1Ст20Гр04.Значение);
		Расшифровка = Пд11Пр1Ст10Гр04.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр04.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_34(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.34)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 3 месяц (гр. 5 ст. 010 подр. 1.1 прил. 1 р. 1) должно "
		+ "быть больше или равно значению в гр. 5 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3-й месяц меньше количества "
		+ "физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 3-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр05 >= Пд11Пр1Ст20Гр05'.
	
	Пд11Пр1Ст10Гр05 = ПоказательПоСтроке("Пд11Пр1Ст10Гр05");
	Пд11Пр1Ст20Гр05 = ПоказательПоСтроке("Пд11Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр05.Значение, Пд11Пр1Ст20Гр05.Значение);
		Расшифровка = Пд11Пр1Ст10Гр05.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр05.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_35(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.35)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц с начала периода (гр. 1 ст. 010 подр. 1.1 прил. 1 р. 1 оп) "
		+ "должно быть больше или равно значению в гр. 1 ст. 010 подр. 1.1 прил. 1 р. 1 предыдущего отчетного периода "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за предыдущий отчётный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 >= Пд11Пр1Ст10Гр01ПРП'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд11Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст10Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст10Гр01ПРП = 0;
		СуммаПд11Пр1Ст10Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст10Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст10Гр01ПРП = СуммаПд11Пр1Ст10Гр01ПРП + Пд11Пр1Ст10Гр01ПРП.Значение;
					СуммаПд11Пр1Ст10Гр01ПРПСтр = СуммаПд11Пр1Ст10Гр01ПРПСтр + Пд11Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр01.Значение, СуммаПд11Пр1Ст10Гр01ПРП);
		Расшифровка = Пд11Пр1Ст10Гр01.ЗначениеСтр + " >= " + РасшифровкаВСтр(СуммаПд11Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_36(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.36)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр.1 ст. 010 подр. 1.1 прил. 1 р. 1) должно быть "
		+ "больше или равно количеству застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 >= Пд11Пр1Ст10Гр02'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр01.Значение, Пд11Пр1Ст10Гр02.Значение);
		Расшифровка = Пд11Пр1Ст10Гр01.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр02.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_37(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.37)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц в 1 месяце (гр. 3 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст10Гр03'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст10Гр03 = ПоказательПоСтроке("Пд11Пр1Ст10Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст10Гр03.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр03.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_38(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.38)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц в 2 месяце (гр. 4 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст10Гр04'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст10Гр04 = ПоказательПоСтроке("Пд11Пр1Ст10Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст10Гр04.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр04.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_39(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.39)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц в 3 месяце (гр. 5 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст10Гр05'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст10Гр05 = ПоказательПоСтроке("Пд11Пр1Ст10Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст10Гр05.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр05.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_40(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.40)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей предельной "
		+ "величиной базы, всего (гр. 1 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика "
		+ "(ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физическим лицам, которым начислены страховые взносы на ОПС за отчетный период "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр01 >= Пд11Пр1Ст21Гр01'.
	
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр01.Значение, Пд11Пр1Ст21Гр01.Значение);
		Расшифровка = Пд11Пр1Ст20Гр01.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр01.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_41(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.41)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с "
		+ "превышающей предельной величиной базы за последние три месяца (гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) по "
		+ "каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС за 3 посл.месяца "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр02 >= Пд11Пр1Ст21Гр02'.
	
	Пд11Пр1Ст20Гр02 = ПоказательПоСтроке("Пд11Пр1Ст20Гр02");
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр02.Значение, Пд11Пр1Ст21Гр02.Значение);
		Расшифровка = Пд11Пр1Ст20Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр02.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_42(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.42)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 1 месяц (гр. 3 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1) '");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС за 1-й посл.месяц "
		+ "меньше количества физических лиц, которым начислили страховых взносов на ОПС с выплат, превыш. пред.величину "
		+ "за 1-й посл.месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр03 >= Пд11Пр1Ст21Гр03'.
	
	Пд11Пр1Ст20Гр03 = ПоказательПоСтроке("Пд11Пр1Ст20Гр03");
	Пд11Пр1Ст21Гр03 = ПоказательПоСтроке("Пд11Пр1Ст21Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр03.Значение, Пд11Пр1Ст21Гр03.Значение);
		Расшифровка = Пд11Пр1Ст20Гр03.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр03.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_43(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.43)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 2 месяц (гр. 4 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислено страховых взносов на ОПС за 2-й посл.месяц "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за 2-й посл.месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр04 >= Пд11Пр1Ст21Гр04'.
	
	Пд11Пр1Ст20Гр04 = ПоказательПоСтроке("Пд11Пр1Ст20Гр04");
	Пд11Пр1Ст21Гр04 = ПоказательПоСтроке("Пд11Пр1Ст21Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр04.Значение, Пд11Пр1Ст21Гр04.Значение);
		Расшифровка = Пд11Пр1Ст20Гр04.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр04.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_44(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.44)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 3 месяц (гр. 5 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС за 3-й посл.месяц "
		+ "меньше количества физических лиц, которым начислили страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за 3-й посл.месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр05 >= Пд11Пр1Ст21Гр05'.
	
	Пд11Пр1Ст20Гр05 = ПоказательПоСтроке("Пд11Пр1Ст20Гр05");
	Пд11Пр1Ст21Гр05 = ПоказательПоСтроке("Пд11Пр1Ст21Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр05.Значение, Пд11Пр1Ст21Гр05.Значение);
		Расшифровка = Пд11Пр1Ст20Гр05.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр05.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_45(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.45)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.1 прил. 1 р. 1 отчетного периода) должно быть больше или равно количеству физических лиц, с "
		+ "выплат которым начислены страховые взносы, всего (гр. 1 ст. 020 подр. 1.1 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС за отчетный период "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС за предыдущий отчетный период по "
		+ "каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр01 >= Пд11Пр1Ст20Гр01ПРП'.
	
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Пд11Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст20Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст20Гр01ПРП = 0;
		СуммаПд11Пр1Ст20Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст20Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст20Гр01ПРП = СуммаПд11Пр1Ст20Гр01ПРП + Пд11Пр1Ст20Гр01ПРП.Значение;
					СуммаПд11Пр1Ст20Гр01ПРПСтр = СуммаПд11Пр1Ст20Гр01ПРПСтр + Пд11Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр01.Значение, СуммаПд11Пр1Ст20Гр01ПРП);
		Расшифровка = Пд11Пр1Ст20Гр01.ЗначениеСтр + " >= " + РасшифровкаВСтр(СуммаПд11Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_46(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.46)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. 020 подр. 1.1 "
		+ "прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) '");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за отчетный период при наличии физических "
		+ "лиц, с выплат которым начислены страховые взносы на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр01 > 0, когда Пд11Пр1Ст20Гр01 > 0'.
	
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр01.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр01.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр01.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_47(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.47)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. "
		+ "1 р. 1) > 0, если количество физических лиц, с выплат которым начислены страховые взносы за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 "
		+ "прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 3 последних месяца при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр02 > 0, когда Пд11Пр1Ст20Гр02 > 0'.
	
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст20Гр02 = ПоказательПоСтроке("Пд11Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр02.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр02.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр02.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_48(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.48)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы за 1 месяц (гр. 3 ст. 020 подр. "
		+ "1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 1-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр03 > 0, когда Пд11Пр1Ст20Гр03 > 0'.
	
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст20Гр03 = ПоказательПоСтроке("Пд11Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр03.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр03.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр03.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_49(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.49)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы за 2 месяц (гр. 4 ст. 020 подр. "
		+ "1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 2-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр04 > 0, когда Пд11Пр1Ст20Гр04 > 0'.
	
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст20Гр04 = ПоказательПоСтроке("Пд11Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр04.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр04.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр04.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_50(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.50)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы за 3 месяц (гр. 5 ст. 020 подр. "
		+ "1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 3-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр05 > 0, когда Пд11Пр1Ст20Гр05 > 0'.
	
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Пд11Пр1Ст20Гр05 = ПоказательПоСтроке("Пд11Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр05.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр05.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр05.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_51(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.51)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы, всего (гр. 1 ст. 021 "
		+ "подр. 1.1 прил. 1 р. 1 отчетного периода) должно быть больше или равно количеству физических лиц с "
		+ "превышающей предельной величиной базы, всего (гр. 1 ст. 021 подр. 1.1 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) '");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за отчетный период меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающим предельную величину, за предыдущий отчетный период по каждому "
		+ "виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр01 >= Пд11Пр1Ст21Гр01ПРП'.
	
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Пд11Пр1Ст21Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст21Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст21Гр01ПРП = 0;
		СуммаПд11Пр1Ст21Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст21Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст21Гр01ПРП = СуммаПд11Пр1Ст21Гр01ПРП + Пд11Пр1Ст21Гр01ПРП.Значение;
					СуммаПд11Пр1Ст21Гр01ПРПСтр = СуммаПд11Пр1Ст21Гр01ПРПСтр + Пд11Пр1Ст21Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр01.Значение, СуммаПд11Пр1Ст21Гр01ПРП);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + РасшифровкаВСтр(СуммаПд11Пр1Ст21Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_52(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.52)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы, всего (гр. 1 ст. 021 "
		+ "подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей предельной "
		+ "величиной базы за последние три месяца (гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Коду "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за отчетный период меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превыш. предельную величину, за три последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр01 >= Пд11Пр1Ст21Гр02'.
	
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр01.Значение, Пд11Пр1Ст21Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_53(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.53)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы за последние три месяца "
		+ "(гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 1 месяц (гр. 3 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физичексих лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за три последних месяца меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающих предельную величину, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр02 >= Пд11Пр1Ст21Гр03'.
	
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Пд11Пр1Ст21Гр03 = ПоказательПоСтроке("Пд11Пр1Ст21Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр02.Значение, Пд11Пр1Ст21Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_54(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.54)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы за последние три месяца "
		+ "(гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 2 месяц (гр. 4 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за три последних месяца меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающих предельную величину, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр02 >= Пд11Пр1Ст21Гр04'.
	
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Пд11Пр1Ст21Гр04 = ПоказательПоСтроке("Пд11Пр1Ст21Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр02.Значение, Пд11Пр1Ст21Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_55(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.55)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы за последние три месяца "
		+ "(гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 3 месяц (гр. 5 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за три последних месяца меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающих предельную величину, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр02 >= Пд11Пр1Ст21Гр05'.
	
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Пд11Пр1Ст21Гр05 = ПоказательПоСтроке("Пд11Пр1Ст21Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр02.Значение, Пд11Пр1Ст21Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_56(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.56)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1 отчетного "
		+ "периода) = Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1 предыдущего "
		+ "отчетного периода) + Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 "
		+ "прил. 1 р. 1 СВ отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за отчетный период ≠ сумме выплат по страховым "
		+ "взносам на ОПС за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр01 = Пд11Пр1Ст30Гр01ПРП + Пд11Пр1Ст30Гр02'.
	
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст30Гр01ПРП");
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст30Гр01ПРП = 0;
		СуммаПд11Пр1Ст30Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст30Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст30Гр01ПРП = СуммаПд11Пр1Ст30Гр01ПРП + Пд11Пр1Ст30Гр01ПРП.Значение;
					СуммаПд11Пр1Ст30Гр01ПРПСтр = СуммаПд11Пр1Ст30Гр01ПРПСтр + Пд11Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр01.Значение, СуммаПд11Пр1Ст30Гр01ПРП + Пд11Пр1Ст30Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст30Гр01ПРПСтр) + " + " + Пд11Пр1Ст30Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_57(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.57)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. "
		+ "1 р. 1) = Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) + Сумма "
		+ "выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) + Сумма выплат и иных "
		+ "вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика "
		+ "(ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 3 последних месяца ≠ сумме выплат по "
		+ "страховым взносам на ОПС за каждый из последних месяцев по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр02 = Пд11Пр1Ст30Гр03 + Пд11Пр1Ст30Гр04 + Пд11Пр1Ст30Гр05'.
	
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр02.Значение, Пд11Пр1Ст30Гр03.Значение + Пд11Пр1Ст30Гр04.Значение + Пд11Пр1Ст30Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст30Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_58(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.58)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1) должна "
		+ "быть больше или равна сумме, не подлежащей обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.1 "
		+ "прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за отчетный период меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр01 >= Пд11Пр1Ст40Гр01'.
	
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст40Гр01 = ПоказательПоСтроке("Пд11Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр01.Значение, Пд11Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_59(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.59)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. "
		+ "1 р. 1) должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за последние три "
		+ "месяца (гр. 2 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 3 последних месяца меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр02 >= Пд11Пр1Ст40Гр02'.
	
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр02.Значение, Пд11Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_60(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.60)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за 1 месяц (гр. 3 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Коду тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 1-й последний месяц меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр03 >= Пд11Пр1Ст40Гр03'.
	
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст40Гр03 = ПоказательПоСтроке("Пд11Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр03.Значение, Пд11Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_61(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.61)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за 2 месяц (гр. 4 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Коду тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 2-й последний месяц меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр04 >= Пд11Пр1Ст40Гр04'.
	
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст40Гр04 = ПоказательПоСтроке("Пд11Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр04.Значение, Пд11Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_62(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.62)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за 3 месяц (гр. 5 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Коду тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 3-й последний месяц меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр05 >= Пд11Пр1Ст40Гр05'.
	
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Пд11Пр1Ст40Гр05 = ПоказательПоСтроке("Пд11Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр05.Значение, Пд11Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_63(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.63)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.1 прил. "
		+ "1 р. 1 отчетного периода) = Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 040 подр. "
		+ "1.1 прил. 1 р. 1 предыдущего отчетного периода) + Сумма, не подлежащая обложению страховыми взносами за "
		+ "последние три месяца (гр. 2 ст. 040 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащая обложению страховыми взносами на ОПС за отчетный период ≠ "
		+ "сумме выплат, не подлежащей обложению страховыми взносами на ОПС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст40Гр01 = Пд11Пр1Ст40Гр01ПРП + Пд11Пр1Ст40Гр02'.
	
	Пд11Пр1Ст40Гр01 = ПоказательПоСтроке("Пд11Пр1Ст40Гр01");
	Пд11Пр1Ст40Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст40Гр01ПРП");
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст40Гр01ПРП = 0;
		СуммаПд11Пр1Ст40Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст40Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст40Гр01ПРП = СуммаПд11Пр1Ст40Гр01ПРП + Пд11Пр1Ст40Гр01ПРП.Значение;
					СуммаПд11Пр1Ст40Гр01ПРПСтр = СуммаПд11Пр1Ст40Гр01ПРПСтр + Пд11Пр1Ст40Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст40Гр01.Значение, СуммаПд11Пр1Ст40Гр01ПРП + Пд11Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст40Гр01ПРПСтр) + " + " + Пд11Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_64(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.64)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) = Сумма, не подлежащая обложению страховыми взносами за 1 месяц (гр. 3 ст. 040 подр. "
		+ "1.1 прил. 1 р. 1) + Сумма, не подлежащая обложению страховыми взносами за 2 месяц (гр. 4 ст. 040 подр. 1.1 "
		+ "прил. 1 р. 1) + Сумма, не подлежащая обложению страховыми взносами за 3 месяц (гр. 5 ст. 040 подр. 1.1 прил. "
		+ "1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащая обложению страховыми взносами на ОПС за последние три месяца "
		+ "отчетного периода ≠ сумме выплат, не подлежащей обложению страховыми взносами на ОПС за предыдущий отчетный "
		+ "период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст40Гр02 = Пд11Пр1Ст40Гр03 + Пд11Пр1Ст40Гр04 + Пд11Пр1Ст40Гр05'.
	
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Пд11Пр1Ст40Гр03 = ПоказательПоСтроке("Пд11Пр1Ст40Гр03");
	Пд11Пр1Ст40Гр04 = ПоказательПоСтроке("Пд11Пр1Ст40Гр04");
	Пд11Пр1Ст40Гр05 = ПоказательПоСтроке("Пд11Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст40Гр02.Значение, Пд11Пр1Ст40Гр03.Значение + Пд11Пр1Ст40Гр04.Значение + Пд11Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст40Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст40Гр04.ЗначениеСтр + " + " + Пд11Пр1Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_65(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.65)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховым взносов на ОПС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлежащих обложению страховыми взносами на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр01 = Пд11Пр1Ст30Гр01 - Пд11Пр1Ст40Гр01'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст40Гр01 = ПоказательПоСтроке("Пд11Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр01.Значение, Пд11Пр1Ст30Гр01.Значение - Пд11Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр01.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр01.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_66(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.66)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.1 "
		+ "прил. 1 р. 1) = Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. 1 "
		+ "р. 1) - Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 040 подр. 1.1 "
		+ "прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3 последних месяца ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 = Пд11Пр1Ст30Гр02 - Пд11Пр1Ст40Гр02'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр02.Значение, Пд11Пр1Ст30Гр02.Значение - Пд11Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр02.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_67(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.67)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами за 1 месяц (гр. 3 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 1-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр03 = Пд11Пр1Ст30Гр03 - Пд11Пр1Ст40Гр03'.
	
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст40Гр03 = ПоказательПоСтроке("Пд11Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр03.Значение, Пд11Пр1Ст30Гр03.Значение - Пд11Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр03.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_68(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.68)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами за 2 месяц (гр. 4 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 2-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр04 = Пд11Пр1Ст30Гр04 - Пд11Пр1Ст40Гр04'.
	
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст40Гр04 = ПоказательПоСтроке("Пд11Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр04.Значение, Пд11Пр1Ст30Гр04.Значение - Пд11Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр04.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр04.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_69(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.69)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами за 3 месяц (гр. 5 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр05 = Пд11Пр1Ст30Гр05 - Пд11Пр1Ст40Гр05'.
	
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Пд11Пр1Ст40Гр05 = ПоказательПоСтроке("Пд11Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр05.Значение, Пд11Пр1Ст30Гр05.Значение - Пд11Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр05.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр05.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_70(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.70)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы, всего (гр. 1 "
		+ "ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей предельной величиной базы, "
		+ "всего (гр. 1 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. "
		+ "1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за отчетный период при наличии физических лиц, с выплат, превышающих предельнную величину, которым начислены "
		+ "страховые взносы на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр01 > 0, когда Пд11Пр1Ст21Гр01 > 0'.
	
	Пд11Пр1Ст51Гр01 = ПоказательПоСтроке("Пд11Пр1Ст51Гр01");
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр01.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр01.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр01.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_71(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.71)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за последние "
		+ "три месяца (гр. 2 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей "
		+ "предельной величиной базы за последние три месяца (гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому "
		+ "значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 3 последних месяца при наличии физических лиц, с выплат, превышающих предельную величину, которым "
		+ "начислены страховые взносы на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр02 > 0, когда Пд11Пр1Ст21Гр02 > 0'.
	
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр02.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр02.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр02.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_72(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.72)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за 1 месяц "
		+ "(гр. 3 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей предельной "
		+ "величиной базы за 1 месяц (гр. 3 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 1-й последний месяц при наличии ф.л., с выплат, превышающих предельную величину, которым начислены СВ на "
		+ "ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр03 > 0, когда Пд11Пр1Ст21Гр03 > 0'.
	
	Пд11Пр1Ст51Гр03 = ПоказательПоСтроке("Пд11Пр1Ст51Гр03");
	Пд11Пр1Ст21Гр03 = ПоказательПоСтроке("Пд11Пр1Ст21Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр03.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр03.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр03.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_73(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.73)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за 2 месяц "
		+ "(гр. 4 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей предельной "
		+ "величиной базы за 2 месяц (гр. 4 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 2-й последний месяц при наличии физических лиц, с выплат, превышающих предельную величину, которым "
		+ "начислены страховые взносы на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр04 > 0, когда Пд11Пр1Ст21Гр04 > 0'.
	
	Пд11Пр1Ст51Гр04 = ПоказательПоСтроке("Пд11Пр1Ст51Гр04");
	Пд11Пр1Ст21Гр04 = ПоказательПоСтроке("Пд11Пр1Ст21Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр04.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр04.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр04.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_74(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.74)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за 3 месяц "
		+ "(гр. 5 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если Количество физических лиц с превышающей предельной "
		+ "величиной базы за 3 месяц (гр. 5 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 3-й последний месяц при наличии физических лиц, с выплат, превышающих предельную величину, которым "
		+ "начислены страховые взносы на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр05 > 0, когда Пд11Пр1Ст21Гр05 > 0'.
	
	Пд11Пр1Ст51Гр05 = ПоказательПоСтроке("Пд11Пр1Ст51Гр05");
	Пд11Пр1Ст21Гр05 = ПоказательПоСтроке("Пд11Пр1Ст21Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр05.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр05.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр05.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_75(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.75)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна базе для исчисления страховых взносов, превышающей предельную величину базы, "
		+ "всего (гр. 1 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за отчетный период меньше, превыш.пред.величину по "
		+ "страховым взносам на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр01 >= Пд11Пр1Ст51Гр01'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Пд11Пр1Ст51Гр01 = ПоказательПоСтроке("Пд11Пр1Ст51Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр01.Значение, Пд11Пр1Ст51Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_76(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.76)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.1 "
		+ "прил. 1 р. 1) должна быть больше или равна базе для исчисления страховых взносов, превышающей предельную величину базы "
		+ "за последние три месяца (гр. 2 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 "
		+ "прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для СВ на ОПС за 3 последних месяца не больше базы, превыш.пред.величину по СВ на "
		+ "ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 >= Пд11Пр1Ст51Гр02'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр02.Значение, Пд11Пр1Ст51Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_77(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.77)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна базе для исчисления страховых взносов, превышающей предельную величину базы за 1 месяц "
		+ "(гр. 3 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 1-й последний месяц не больше базы, "
		+ "превыш.пред.величину по страховым взносам на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр03 >= Пд11Пр1Ст51Гр03'.
	
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст51Гр03 = ПоказательПоСтроке("Пд11Пр1Ст51Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр03.Значение, Пд11Пр1Ст51Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_78(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.78)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна базе для исчисления страховых взносов, превышающей предельную величину базы за 2 месяц "
		+ "(гр. 4 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 2-й последний месяц не больше базы, превышающей "
		+ "предельную величину по страховым взносам на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр04 >= Пд11Пр1Ст51Гр04'.
	
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст51Гр04 = ПоказательПоСтроке("Пд11Пр1Ст51Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр04.Значение, Пд11Пр1Ст51Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_79(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.79)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна базе для исчисления страховых взносов, превышающей предельную величину базы за 3 месяц "
		+ "(гр. 5 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3-й последний месяц не больше базы, превышающей "
		+ "предельную величину по страховым взносам на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр05 >= Пд11Пр1Ст51Гр05'.
	
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Пд11Пр1Ст51Гр05 = ПоказательПоСтроке("Пд11Пр1Ст51Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр05.Значение, Пд11Пр1Ст51Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_80(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.80)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1 "
		+ "отчетного периода) = База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1 "
		+ "предыдущего отчетного периода) + База для исчисления страховых взносов за последние три месяца (гр. 2 ст. "
		+ "050 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за отчетный период ≠ сумме баз для страховых взносов на "
		+ "ОПС за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр01 = Пд11Пр1Ст50Гр01ПРП + Пд11Пр1Ст50Гр02'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Пд11Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст50Гр01ПРП");
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст50Гр01ПРП = 0;
		СуммаПд11Пр1Ст50Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст50Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст50Гр01ПРП = СуммаПд11Пр1Ст50Гр01ПРП + Пд11Пр1Ст50Гр01ПРП.Значение;
					СуммаПд11Пр1Ст50Гр01ПРПСтр = СуммаПд11Пр1Ст50Гр01ПРПСтр + Пд11Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр01.Значение, СуммаПд11Пр1Ст50Гр01ПРП + Пд11Пр1Ст50Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр01ПРПСтр) + " + " + Пд11Пр1Ст50Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_81(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.81)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.1 "
		+ "прил. 1 р. 1) = База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1) + "
		+ "База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1) + База для "
		+ "исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3 последних месяца ≠ сумме баз для страховых взносов "
		+ "на ОПС за каждый из 3-х последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 = Пд11Пр1Ст50Гр03 + Пд11Пр1Ст50Гр04 + Пд11Пр1Ст50Гр05'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр02.Значение, Пд11Пр1Ст50Гр03.Значение + Пд11Пр1Ст50Гр04.Значение + Пд11Пр1Ст50Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст50Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_82(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.82)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы, всего (гр. 1 ст. 061 подр. 1.1 прил. 1 р. "
		+ "1) + Исчислено страховых взносов с базы, превышающей предельную величину базы, всего (гр. 1 ст. 062 подр. "
		+ "1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за отчетный период ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за отчетный "
		+ "период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр01 = Пд11Пр1Ст61Гр01 + Пд11Пр1Ст62Гр01'.
	
	Пд11Пр1Ст60Гр01 = ПоказательПоСтроке("Пд11Пр1Ст60Гр01");
	Пд11Пр1Ст61Гр01 = ПоказательПоСтроке("Пд11Пр1Ст61Гр01");
	Пд11Пр1Ст62Гр01 = ПоказательПоСтроке("Пд11Пр1Ст62Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр01.Значение, Пд11Пр1Ст61Гр01.Значение + Пд11Пр1Ст62Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр01.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр01.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_83(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.83)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.1 прил. 1 р. "
		+ "1) = Исчислено страховых взносов с базы, не превышающей предельную величину базы за последние три месяца "
		+ "(гр. 2 ст. 061 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину "
		+ "базы за последние три месяца (гр. 2 ст. 062 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 3 последних месяца ≠ сумме страховые взносы на ОПС с базы не "
		+ "превышающей предельную величину и страховые взнос на ОПС с базы превышающей предельную величину за 3 "
		+ "последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр02 = Пд11Пр1Ст61Гр02 + Пд11Пр1Ст62Гр02'.
	
	Пд11Пр1Ст60Гр02 = ПоказательПоСтроке("Пд11Пр1Ст60Гр02");
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Пд11Пр1Ст62Гр02 = ПоказательПоСтроке("Пд11Пр1Ст62Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр02.Значение, Пд11Пр1Ст61Гр02.Значение + Пд11Пр1Ст62Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр02.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_84(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.84)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за 1 месяц (гр. 3 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 1 месяц (гр. 3 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину базы за 1 месяц (гр. 3 ст. 062 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 1-й последний месяц ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за 1-й "
		+ "последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр03 = Пд11Пр1Ст61Гр03 + Пд11Пр1Ст62Гр03'.
	
	Пд11Пр1Ст60Гр03 = ПоказательПоСтроке("Пд11Пр1Ст60Гр03");
	Пд11Пр1Ст61Гр03 = ПоказательПоСтроке("Пд11Пр1Ст61Гр03");
	Пд11Пр1Ст62Гр03 = ПоказательПоСтроке("Пд11Пр1Ст62Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр03.Значение, Пд11Пр1Ст61Гр03.Значение + Пд11Пр1Ст62Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр03.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_85(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.85)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за 2 месяц (гр. 4 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 2 месяц (гр. 4 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину базы за 2 месяц (гр. 4 ст. 062 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 2-й последний месяц ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за 2-й "
		+ "последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр04 = Пд11Пр1Ст61Гр04 + Пд11Пр1Ст62Гр04'.
	
	Пд11Пр1Ст60Гр04 = ПоказательПоСтроке("Пд11Пр1Ст60Гр04");
	Пд11Пр1Ст61Гр04 = ПоказательПоСтроке("Пд11Пр1Ст61Гр04");
	Пд11Пр1Ст62Гр04 = ПоказательПоСтроке("Пд11Пр1Ст62Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр04.Значение, Пд11Пр1Ст61Гр04.Значение + Пд11Пр1Ст62Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр04.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр04.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_86(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.86)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за 3 месяц (гр. 5 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 3 месяц (гр. 5 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину базы за 3 месяц (гр. 5 ст. 062 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 3-й последний месяц ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за 3-й "
		+ "последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр05 = Пд11Пр1Ст61Гр05 + Пд11Пр1Ст62Гр05'.
	
	Пд11Пр1Ст60Гр05 = ПоказательПоСтроке("Пд11Пр1Ст60Гр05");
	Пд11Пр1Ст61Гр05 = ПоказательПоСтроке("Пд11Пр1Ст61Гр05");
	Пд11Пр1Ст62Гр05 = ПоказательПоСтроке("Пд11Пр1Ст62Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр05.Значение, Пд11Пр1Ст61Гр05.Значение + Пд11Пр1Ст62Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр05.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр05.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_87(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.87)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1 отчетного "
		+ "периода) = Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) + Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.1 прил. 1 р. 1 "
		+ "отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за отчетный период ≠ сумме страховых взносов на ОПС за предыдущий "
		+ "отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр01 = Пд11Пр1Ст60Гр01ПРП + Пд11Пр1Ст60Гр02'.
	
	Пд11Пр1Ст60Гр01 = ПоказательПоСтроке("Пд11Пр1Ст60Гр01");
	Пд11Пр1Ст60Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст60Гр01ПРП");
	Пд11Пр1Ст60Гр02 = ПоказательПоСтроке("Пд11Пр1Ст60Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст60Гр01ПРП = 0;
		СуммаПд11Пр1Ст60Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст60Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст60Гр01ПРП = СуммаПд11Пр1Ст60Гр01ПРП + Пд11Пр1Ст60Гр01ПРП.Значение;
					СуммаПд11Пр1Ст60Гр01ПРПСтр = СуммаПд11Пр1Ст60Гр01ПРПСтр + Пд11Пр1Ст60Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр01.Значение, СуммаПд11Пр1Ст60Гр01ПРП + Пд11Пр1Ст60Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр01ПРПСтр) + " + " + Пд11Пр1Ст60Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_88(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.88)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.1 прил. 1 р. "
		+ "1) = Исчислено страховых взносов за 1 месяц (гр. 3 ст. 060 подр. 1.1 прил. 1 р. 1) + Исчислено страховых "
		+ "взносов за 2 месяц (гр. 4 ст. 060 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов за 3 месяц (гр. 5 "
		+ "ст. 060 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за три последних месяца отчетного периода ≠ сумме страховых "
		+ "взносов на ОПС за каждый из трех последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр02 = Пд11Пр1Ст60Гр03 + Пд11Пр1Ст60Гр04 + Пд11Пр1Ст60Гр05'.
	
	Пд11Пр1Ст60Гр02 = ПоказательПоСтроке("Пд11Пр1Ст60Гр02");
	Пд11Пр1Ст60Гр03 = ПоказательПоСтроке("Пд11Пр1Ст60Гр03");
	Пд11Пр1Ст60Гр04 = ПоказательПоСтроке("Пд11Пр1Ст60Гр04");
	Пд11Пр1Ст60Гр05 = ПоказательПоСтроке("Пд11Пр1Ст60Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр02.Значение, Пд11Пр1Ст60Гр03.Значение + Пд11Пр1Ст60Гр04.Значение + Пд11Пр1Ст60Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст60Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст60Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_89(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.89)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, не превышающей предельную величину базы, всего (гр. 1 "
		+ "ст. 061 подр. 1.1 прил. 1 р. 1 отчетного периода) = Исчислено страховых взносов с базы, не превышающей "
		+ "предельную величину базы, всего (гр. 1 ст. 061 подр. 1.1 прил. 1 р. 1 предыдущего отчетного периода) + "
		+ "Исчислено страховых взносов с базы, не превышающей предельную величину базы за последние три месяца (гр. 2 "
		+ "ст. 061 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. "
		+ "1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, не превышающей предельную величину, за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС с базы, не превышающей предельную величину, за предыдущий отчетный период и "
		+ "за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст61Гр01 = Пд11Пр1Ст61Гр01ПРП + Пд11Пр1Ст61Гр02'.
	
	Пд11Пр1Ст61Гр01 = ПоказательПоСтроке("Пд11Пр1Ст61Гр01");
	Пд11Пр1Ст61Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст61Гр01ПРП");
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст61Гр01ПРП = 0;
		СуммаПд11Пр1Ст61Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст61Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст61Гр01ПРП = СуммаПд11Пр1Ст61Гр01ПРП + Пд11Пр1Ст61Гр01ПРП.Значение;
					СуммаПд11Пр1Ст61Гр01ПРПСтр = СуммаПд11Пр1Ст61Гр01ПРПСтр + Пд11Пр1Ст61Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст61Гр01.Значение, СуммаПд11Пр1Ст61Гр01ПРП + Пд11Пр1Ст61Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст61Гр01ПРПСтр) + " + " + Пд11Пр1Ст61Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_90(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.90)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, не превышающей предельную величину базы за последние "
		+ "три месяца (гр. 2 ст. 061 подр. 1.1 прил. 1 р. 1) = Исчислено страховых взносов с базы, не превышающей "
		+ "предельную величину базы за 1 месяц (гр. 3 ст. 061 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов с "
		+ "базы, не превышающей предельную величину базы за 2 месяц (гр. 4 ст. 061 подр. 1.1 прил. 1 р. 1) + Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 3 месяц (гр. 5 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, не превышающей предельную величину, за последние три "
		+ "месяца отчетного периода ≠ сумме страховых взносов на ОПС с базы, не превышающей предельную величину, за "
		+ "каждый из трех последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст61Гр02 = Пд11Пр1Ст61Гр03 + Пд11Пр1Ст61Гр04 + Пд11Пр1Ст61Гр05'.
	
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Пд11Пр1Ст61Гр03 = ПоказательПоСтроке("Пд11Пр1Ст61Гр03");
	Пд11Пр1Ст61Гр04 = ПоказательПоСтроке("Пд11Пр1Ст61Гр04");
	Пд11Пр1Ст61Гр05 = ПоказательПоСтроке("Пд11Пр1Ст61Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст61Гр02.Значение, Пд11Пр1Ст61Гр03.Значение + Пд11Пр1Ст61Гр04.Значение + Пд11Пр1Ст61Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст61Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст61Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_91(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.91)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, превышающей предельную величину базы, всего (гр. 1 "
		+ "ст. 062 подр. 1.1 прил. 1 р. 1 отчетного перида) = Исчислено страховых взносов с базы, превышающей "
		+ "предельную величину базы, всего (гр. 1 ст. 062 подр. 1.1 прил. 1 р. 1 предыдущего отчетного периода) + "
		+ "Исчислено страховых взносов с базы, превышающей предельную величину базы за послежние три месяца (гр. 2 ст. "
		+ "062 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, превышающей предельную величину, за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС с базы, превышающей предельную величину, за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст62Гр01 = Пд11Пр1Ст62Гр01ПРП + Пд11Пр1Ст62Гр02'.
	
	Пд11Пр1Ст62Гр01 = ПоказательПоСтроке("Пд11Пр1Ст62Гр01");
	Пд11Пр1Ст62Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст62Гр01ПРП");
	Пд11Пр1Ст62Гр02 = ПоказательПоСтроке("Пд11Пр1Ст62Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст62Гр01ПРП = 0;
		СуммаПд11Пр1Ст62Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст62Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст62Гр01ПРП = СуммаПд11Пр1Ст62Гр01ПРП + Пд11Пр1Ст62Гр01ПРП.Значение;
					СуммаПд11Пр1Ст62Гр01ПРПСтр = СуммаПд11Пр1Ст62Гр01ПРПСтр + Пд11Пр1Ст62Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст62Гр01.Значение, СуммаПд11Пр1Ст62Гр01ПРП + Пд11Пр1Ст62Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст62Гр01ПРПСтр) + " + " + Пд11Пр1Ст62Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_92(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.92)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, превышающей предельную величину базы за последние три "
		+ "месяца (гр. 2 ст. 062 подр. 1.1 прил. 1 р. 1) = Исчислено страховых взносов с базы, превышающей предельную "
		+ "величину базы за 1 месяц (гр. 3 ст. 062 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов с базы, "
		+ "превышающей предельную величину базы за 2 месяц (гр. 4 ст. 062 подр. 1.1 прил. 1 р. 1) + Исчислено страховых "
		+ "взносов с базы, превышающей предельную величину базы за 3 месяц (гр. 5 ст. 062 подр. 1.1 прил. 1 р. 1) по "
		+ "каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='СВ на ОПС с базы, превыш.пред.величину, за последние три месяца отчетного периода ≠ сумме "
		+ "СВ на ОПС с базы, превыш.пред.величину, за каждый из трех последних месяцев отчетного периода по каждому "
		+ "виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст62Гр02 = Пд11Пр1Ст62Гр03 + Пд11Пр1Ст62Гр04 + Пд11Пр1Ст62Гр05'.
	
	Пд11Пр1Ст62Гр02 = ПоказательПоСтроке("Пд11Пр1Ст62Гр02");
	Пд11Пр1Ст62Гр03 = ПоказательПоСтроке("Пд11Пр1Ст62Гр03");
	Пд11Пр1Ст62Гр04 = ПоказательПоСтроке("Пд11Пр1Ст62Гр04");
	Пд11Пр1Ст62Гр05 = ПоказательПоСтроке("Пд11Пр1Ст62Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст62Гр02.Значение, Пд11Пр1Ст62Гр03.Значение + Пд11Пр1Ст62Гр04.Значение + Пд11Пр1Ст62Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст62Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст62Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_93(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.93)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 р. 1) должно быть "
		+ "больше или равно количеству физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за отчетный период меньше "
		+ "количества физических лиц, с выплат которым начислены страховые взносы на ОМС, за отчетный период в разрезе "
		+ "каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 >= Пд12Пр1Ст20Гр01'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд12Пр1Ст20Гр01 = ПоказательПоСтроке("Пд12Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр01.Значение, Пд12Пр1Ст20Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_94(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.94)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за "
		+ "последние три месяца (гр. 2 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. "
		+ "001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 посл. месяца меньше "
		+ "количества физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3 последние месяца в "
		+ "разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст20Гр02'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст20Гр02 = ПоказательПоСтроке("Пд12Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст20Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_95(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.95)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 1 месяц (гр. 3 ст. 010 подр. 1.2 прил. 1 р. 1) должно "
		+ "быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за 1 месяц (гр. "
		+ "3 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 1-й месяц меньше количества "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 1-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр03 >= Пд12Пр1Ст20Гр03'.
	
	Пд12Пр1Ст10Гр03 = ПоказательПоСтроке("Пд12Пр1Ст10Гр03");
	Пд12Пр1Ст20Гр03 = ПоказательПоСтроке("Пд12Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр03.Значение, Пд12Пр1Ст20Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_96(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.96)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 2 месяц (гр. 4 ст. 010 подр. 1.2 прил. 1 р. 1) должно "
		+ "быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за 2 месяц (гр. "
		+ "4 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 2-й месяц меньше количества "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 2-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр04 >= Пд12Пр1Ст20Гр04'.
	
	Пд12Пр1Ст10Гр04 = ПоказательПоСтроке("Пд12Пр1Ст10Гр04");
	Пд12Пр1Ст20Гр04 = ПоказательПоСтроке("Пд12Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр04.Значение, Пд12Пр1Ст20Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_97(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.97)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 3 месяц (гр. 5 ст. 010 подр. 1.2 прил. 1 р. 1) должно "
		+ "быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за 3 месяц (гр. "
		+ "5 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3-й месяц меньше количества "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр05 >= Пд12Пр1Ст20Гр05'.
	
	Пд12Пр1Ст10Гр05 = ПоказательПоСтроке("Пд12Пр1Ст10Гр05");
	Пд12Пр1Ст20Гр05 = ПоказательПоСтроке("Пд12Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр05.Значение, Пд12Пр1Ст20Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_98(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.98)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 р. 1 отчетного "
		+ "периода) должно быть больше или равно количеству застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 "
		+ "р. 1 предыдущего отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за предыдущий отчётный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 >= Пд12Пр1Ст10Гр01ПРП'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд12Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст10Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст10Гр01ПРП = 0;
		СуммаПд12Пр1Ст10Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст10Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст10Гр01ПРП = СуммаПд12Пр1Ст10Гр01ПРП + Пд12Пр1Ст10Гр01ПРП.Значение;
					СуммаПд12Пр1Ст10Гр01ПРПСтр = СуммаПд12Пр1Ст10Гр01ПРПСтр + Пд12Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр01.Значение, СуммаПд12Пр1Ст10Гр01ПРП);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + РасшифровкаВСтр(СуммаПд12Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_99(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.99)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 р. 1) должно быть "
		+ "больше или равно количеству застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 >= Пд12Пр1Ст10Гр02'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр01.Значение, Пд12Пр1Ст10Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_100(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.100)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц за 1 месяц (гр. 3 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст10Гр03'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст10Гр03 = ПоказательПоСтроке("Пд12Пр1Ст10Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст10Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_101(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.101)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц за 2 месяц (гр. 4 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст10Гр04'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст10Гр04 = ПоказательПоСтроке("Пд12Пр1Ст10Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст10Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_102(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.102)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц за 3 месяц (гр. 5 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст10Гр05'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст10Гр05 = ПоказательПоСтроке("Пд12Пр1Ст10Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст10Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_103(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.103)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.2 прил. 1 р. 1 отчетного периода) должно быть больше или равно количеству физических лиц, с "
		+ "выплат которым начислены страховые взносы, всего (гр. 1 ст. 020 подр. 1.2 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОМС за отчетный период "
		+ "меньше количества физических лиц., которым начислены страховые взносы на ОМС за предыдущий отчетный период "
		+ "по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст20Гр01 >= Пд12Пр1Ст20Гр01ПРП'.
	
	Пд12Пр1Ст20Гр01 = ПоказательПоСтроке("Пд12Пр1Ст20Гр01");
	Пд12Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст20Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст20Гр01ПРП = 0;
		СуммаПд12Пр1Ст20Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст20Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст20Гр01ПРП = СуммаПд12Пр1Ст20Гр01ПРП + Пд12Пр1Ст20Гр01ПРП.Значение;
					СуммаПд12Пр1Ст20Гр01ПРПСтр = СуммаПд12Пр1Ст20Гр01ПРПСтр + Пд12Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд12Пр1Ст20Гр01.Значение, СуммаПд12Пр1Ст20Гр01ПРП);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + РасшифровкаВСтр(СуммаПд12Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_104(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.104)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц (гр. 1 ст. 030 "
		+ "подр. 1.2 прил. 1 р. 1) > 0 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 1 "
		+ "ст. 020 подр. 1.2 прил. 1 р. 1 СВ > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за отчетный период при наличии физических "
		+ "лиц, с выплат которым начислены страховые взносы на ОМС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр01 > 0, когда Пд12Пр1Ст20Гр01 > 0'.
	
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст20Гр01 = ПоказательПоСтроке("Пд12Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр01.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр01.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр01.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_105(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.105)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 по каждому значению Кода тарифа плательщика (ст. 001 прил. "
		+ "1 р. 1) если гр. 2 ст. 020 подр. 1.2 прил. 1 р. 1 СВ > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 3 последних месяца при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр02 > 0, когда Пд12Пр1Ст20Гр02 > 0'.
	
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст20Гр02 = ПоказательПоСтроке("Пд12Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр02.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр02.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр02.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_106(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.106)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 3 ст. 020 подр. 1.2 прил. 1 р. 1 "
		+ "> 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 1-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр03 > 0, когда Пд12Пр1Ст20Гр03 > 0'.
	
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст20Гр03 = ПоказательПоСтроке("Пд12Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр03.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр03.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр03.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_107(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.107)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 4 ст. 020 подр. 1.2 прил. 1 р. 1 "
		+ "> 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 2-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр04 > 0, когда Пд12Пр1Ст20Гр04 > 0'.
	
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст20Гр04 = ПоказательПоСтроке("Пд12Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр04.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр04.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр04.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_108(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.108)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 5 ст. 020 подр. 1.2 прил. 1 р. 1 "
		+ "> 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 3-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр05 > 0, когда Пд12Пр1Ст20Гр05 > 0'.
	
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Пд12Пр1Ст20Гр05 = ПоказательПоСтроке("Пд12Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр05.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр05.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр05.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_109(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.109)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.2 прил. 1 р. 1 отчетного "
		+ "периода) = гр. 1 ст. 030 подр. 1.2 прил. 1 р. 1 предыдущего отчетного периода + гр. 2 ст. 030 подр. 1.2 "
		+ "прил. 1 р. 1 отчетного периода по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за отчетный период ≠ сумме выплат по страховым "
		+ "взносам на ОМС за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр01 = Пд12Пр1Ст30Гр01ПРП + Пд12Пр1Ст30Гр02'.
	
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст30Гр01ПРП");
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст30Гр01ПРП = 0;
		СуммаПд12Пр1Ст30Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст30Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст30Гр01ПРП = СуммаПд12Пр1Ст30Гр01ПРП + Пд12Пр1Ст30Гр01ПРП.Значение;
					СуммаПд12Пр1Ст30Гр01ПРПСтр = СуммаПд12Пр1Ст30Гр01ПРПСтр + Пд12Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр01.Значение, СуммаПд12Пр1Ст30Гр01ПРП + Пд12Пр1Ст30Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст30Гр01ПРПСтр) + " + " + Пд12Пр1Ст30Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_110(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.110)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.2 прил. "
		+ "1 р. 1) = гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1 + гр. 5 ст. 030 подр. "
		+ "1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 3 последних месяца ≠ сумме выплат по "
		+ "страховым взносам на ОМС за каждый из последних месяцев по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр02 = Пд12Пр1Ст30Гр03 + Пд12Пр1Ст30Гр04 + Пд12Пр1Ст30Гр05'.
	
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр02.Значение, Пд12Пр1Ст30Гр03.Значение + Пд12Пр1Ст30Гр04.Значение + Пд12Пр1Ст30Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд12Пр1Ст30Гр04.ЗначениеСтр + " + "
			+ Пд12Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_111(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.111)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.2 прил. 1 р. 1) >= гр. 1 "
		+ "ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за отчетный период меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОМС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр01 >= Пд12Пр1Ст40Гр01'.
	
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст40Гр01 = ПоказательПоСтроке("Пд12Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр01.Значение, Пд12Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_112(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.112)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.2 прил. "
		+ "1 р. 1) >= гр. 2 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 3 последних месяца меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОМС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр02 >= Пд12Пр1Ст40Гр02'.
	
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр02.Значение, Пд12Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_113(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.113)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1) >= "
		+ "гр. 3 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 1-й последний месяц меньше суммы выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр03 >= Пд12Пр1Ст40Гр03'.
	
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст40Гр03 = ПоказательПоСтроке("Пд12Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр03.Значение, Пд12Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_114(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.114)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1) >= "
		+ "гр. 4 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 2-й последний месяц меньше суммы выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр04 >= Пд12Пр1Ст40Гр04'.
	
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст40Гр04 = ПоказательПоСтроке("Пд12Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр04.Значение, Пд12Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_115(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.115)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.2 прил. 1 р. 1) >= "
		+ "гр. 5 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 3-й последний месяц меньше суммы выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр05 >= Пд12Пр1Ст40Гр05'.
	
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Пд12Пр1Ст40Гр05 = ПоказательПоСтроке("Пд12Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр05.Значение, Пд12Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_116(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.116)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.2 прил. "
		+ "1 р. 1 отчетного периода) = гр. 1 ст. 040 подр. 1.2 прил. 1 р. 1 предыдущего отчетого периода + гр. 2 ст. "
		+ "040 подр. 1.2 прил. 1 р. 1 СВ отчетного периода по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОМС за отчетный период ≠ "
		+ "сумме выплат, не подлежащих обложению страховыми взносами на ОМС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст40Гр01 = Пд12Пр1Ст40Гр01ПРП + Пд12Пр1Ст40Гр02'.
	
	Пд12Пр1Ст40Гр01 = ПоказательПоСтроке("Пд12Пр1Ст40Гр01");
	Пд12Пр1Ст40Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст40Гр01ПРП");
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст40Гр01ПРП = 0;
		СуммаПд12Пр1Ст40Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст40Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст40Гр01ПРП = СуммаПд12Пр1Ст40Гр01ПРП + Пд12Пр1Ст40Гр01ПРП.Значение;
					СуммаПд12Пр1Ст40Гр01ПРПСтр = СуммаПд12Пр1Ст40Гр01ПРПСтр + Пд12Пр1Ст40Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст40Гр01.Значение, СуммаПд12Пр1Ст40Гр01ПРП + Пд12Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст40Гр01ПРПСтр) + " + " + Пд12Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_117(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.117)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 040 "
		+ "подр. 1.2 прил. 1 р. 1) = гр. 3 ст. 040 подр. 1.2 прил. 1 р. 1 + гр. 4 ст. 040 подр. 1.2 прил. 1 р. 1 + гр. "
		+ "5 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОМС за последние три месяца "
		+ "отчетного периода ≠ сумме выплат, не подлежащих обложению страховыми взносами на ОМС за предыдущий отчетный "
		+ "период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст40Гр02 = Пд12Пр1Ст40Гр03 + Пд12Пр1Ст40Гр04 + Пд12Пр1Ст40Гр05'.
	
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Пд12Пр1Ст40Гр03 = ПоказательПоСтроке("Пд12Пр1Ст40Гр03");
	Пд12Пр1Ст40Гр04 = ПоказательПоСтроке("Пд12Пр1Ст40Гр04");
	Пд12Пр1Ст40Гр05 = ПоказательПоСтроке("Пд12Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст40Гр02.Значение, Пд12Пр1Ст40Гр03.Значение + Пд12Пр1Ст40Гр04.Значение + Пд12Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст40Гр03.ЗначениеСтр + " + " + Пд12Пр1Ст40Гр04.ЗначениеСтр + " + "
			+ Пд12Пр1Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_118(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.118)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.2 прил. 1 р. 1) = гр. "
		+ "1 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 1 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр01 = Пд12Пр1Ст30Гр01 - Пд12Пр1Ст40Гр01'.
	
	Пд12Пр1Ст50Гр01 = ПоказательПоСтроке("Пд12Пр1Ст50Гр01");
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст40Гр01 = ПоказательПоСтроке("Пд12Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр01.Значение, Пд12Пр1Ст30Гр01.Значение - Пд12Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр01.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_119(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.119)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.2 "
		+ "прил. 1 р. 1) = гр. 2 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 2 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому "
		+ "значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 3 последних месяца ≠ разнице всех выплат и выплат, "
		+ "не подлежих обложению страховыми взносами на ОМС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр02 = Пд12Пр1Ст30Гр02 - Пд12Пр1Ст40Гр02'.
	
	Пд12Пр1Ст50Гр02 = ПоказательПоСтроке("Пд12Пр1Ст50Гр02");
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр02.Значение, Пд12Пр1Ст30Гр02.Значение - Пд12Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр02.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_120(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.120)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.2 прил. 1 р. 1) = "
		+ "гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 3 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 1-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОМС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр03 = Пд12Пр1Ст30Гр03 - Пд12Пр1Ст40Гр03'.
	
	Пд12Пр1Ст50Гр03 = ПоказательПоСтроке("Пд12Пр1Ст50Гр03");
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст40Гр03 = ПоказательПоСтроке("Пд12Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр03.Значение, Пд12Пр1Ст30Гр03.Значение - Пд12Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр03.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр03.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_121(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.121)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.2 прил. 1 р. 1) = "
		+ "гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 4 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 2-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОМС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр04 = Пд12Пр1Ст30Гр04 - Пд12Пр1Ст40Гр04'.
	
	Пд12Пр1Ст50Гр04 = ПоказательПоСтроке("Пд12Пр1Ст50Гр04");
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст40Гр04 = ПоказательПоСтроке("Пд12Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр04.Значение, Пд12Пр1Ст30Гр04.Значение - Пд12Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр04.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр04.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_122(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.122)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.2 прил. 1 р. 1) = "
		+ "гр. 5 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 5 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 3-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОМС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр05 = Пд12Пр1Ст30Гр05 - Пд12Пр1Ст40Гр05'.
	
	Пд12Пр1Ст50Гр05 = ПоказательПоСтроке("Пд12Пр1Ст50Гр05");
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Пд12Пр1Ст40Гр05 = ПоказательПоСтроке("Пд12Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр05.Значение, Пд12Пр1Ст30Гр05.Значение - Пд12Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр05.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр05.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_123(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.123)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.2 прил. 1 р. 1 отчетного "
		+ "периода) = гр. 1 ст. 060 подр. 1.2 прил. 1 р. 1 предыдущего отчетного периода + гр. 2 ст. 060 подр. 1.2 "
		+ "прил. 1 р. 1 отчетного периода по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОМС за отчетный период ≠ сумме страховых взносов на ОМС за предыдущий "
		+ "отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст60Гр01 = Пд12Пр1Ст60Гр01ПРП + Пд12Пр1Ст60Гр02'.
	
	Пд12Пр1Ст60Гр01 = ПоказательПоСтроке("Пд12Пр1Ст60Гр01");
	Пд12Пр1Ст60Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст60Гр01ПРП");
	Пд12Пр1Ст60Гр02 = ПоказательПоСтроке("Пд12Пр1Ст60Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст60Гр01ПРП = 0;
		СуммаПд12Пр1Ст60Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст60Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст60Гр01ПРП = СуммаПд12Пр1Ст60Гр01ПРП + Пд12Пр1Ст60Гр01ПРП.Значение;
					СуммаПд12Пр1Ст60Гр01ПРПСтр = СуммаПд12Пр1Ст60Гр01ПРПСтр + Пд12Пр1Ст60Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст60Гр01.Значение, СуммаПд12Пр1Ст60Гр01ПРП + Пд12Пр1Ст60Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр01ПРПСтр) + " + " + Пд12Пр1Ст60Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_124(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.124)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.2 прил. 1 р. "
		+ "1) = гр. 3 ст. 060 подр. 1.2 прил. 1 р. 1 + гр. 4 ст. 060 подр. 1.2 прил. 1 р. 1 + гр. 5 ст. 060 подр. 1.2 "
		+ "прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОМС за три последних месяца отчетного периода ≠ сумме страховых "
		+ "взносов на ОМС за каждый из трех последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст60Гр02 = Пд12Пр1Ст60Гр03 + Пд12Пр1Ст60Гр04 + Пд12Пр1Ст60Гр05'.
	
	Пд12Пр1Ст60Гр02 = ПоказательПоСтроке("Пд12Пр1Ст60Гр02");
	Пд12Пр1Ст60Гр03 = ПоказательПоСтроке("Пд12Пр1Ст60Гр03");
	Пд12Пр1Ст60Гр04 = ПоказательПоСтроке("Пд12Пр1Ст60Гр04");
	Пд12Пр1Ст60Гр05 = ПоказательПоСтроке("Пд12Пр1Ст60Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст60Гр02.Значение, Пд12Пр1Ст60Гр03.Значение + Пд12Пр1Ст60Гр04.Значение + Пд12Пр1Ст60Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст60Гр03.ЗначениеСтр + " + " + Пд12Пр1Ст60Гр04.ЗначениеСтр + " + "
			+ Пд12Пр1Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_125(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.125)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр. 1 ст. 010 подр. 1.3.1 прил. 1 р. 1 отчетного периода) >= гр. 1 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1 предыдущего отчетного периода по каждому соответствующему значению ст. 001 "
		+ "подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за отчетный период меньше кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за предыдущий отчетный период по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр01 >= Пд131Пр1Ст10Гр01ПРП'.
	
	Пд131Пр1Ст10Гр01 = ПоказательПоСтроке("Пд131Пр1Ст10Гр01");
	Пд131Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст10Гр01ПРП");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст10Гр01,СуммаПд131Пр1Ст10Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст10Гр01 = Группа.СуммаПд131Пр1Ст10Гр01 + Пд131Пр1Ст10Гр01.Значение;
			Группа.СуммаПд131Пр1Ст10Гр01Стр = Группа.СуммаПд131Пр1Ст10Гр01Стр + Пд131Пр1Ст10Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст10Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст10Гр01ПРП = Группа.СуммаПд131Пр1Ст10Гр01ПРП + Пд131Пр1Ст10Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст10Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст10Гр01ПРПСтр + Пд131Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст10Гр01, Группа.СуммаПд131Пр1Ст10Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_126(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.126)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр.1 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 2 ст. 010 подр. 1.3.1 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за отчетный период меньше кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за 3 последних месяца отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр01 >= Пд131Пр1Ст10Гр02'.
	
	Пд131Пр1Ст10Гр01 = ПоказательПоСтроке("Пд131Пр1Ст10Гр01");
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр01.Имя);
		
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр01.Значение, Пд131Пр1Ст10Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_127(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.127)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр.2 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 3 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за 3 последних месяца отчетного периода меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 1-й из последних месяцев отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр02 >= Пд131Пр1Ст10Гр03'.
	
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	Пд131Пр1Ст10Гр03 = ПоказательПоСтроке("Пд131Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр02.Значение, Пд131Пр1Ст10Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_128(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.128)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр.2 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 4 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за 3 последних месяца отчетного периода меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 2-й из последних месяцев отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр02 >= Пд131Пр1Ст10Гр04'.
	
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	Пд131Пр1Ст10Гр04 = ПоказательПоСтроке("Пд131Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр02.Значение, Пд131Пр1Ст10Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_129(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.129)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр.2 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 5 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за 3 последних месяца отчетного периода меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 3-й из последних месяцев отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр02 >= Пд131Пр1Ст10Гр05'.
	
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	Пд131Пр1Ст10Гр05 = ПоказательПоСтроке("Пд131Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр02.Значение, Пд131Пр1Ст10Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_130(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.130)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1 отчетного периода) >= гр. 1 ст. 020 подр. 1.3.1 прил. 1 р. 1 предыдущего "
		+ "отчетного периода по каждому соответствующему значению ст. 001 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за отчетный период меньше суммы выплат по доп.тарифу на "
		+ "ОПС за предыдущий отчетный период по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 >= Пд131Пр1Ст20Гр01ПРП'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст20Гр01ПРП");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст20Гр01,СуммаПд131Пр1Ст20Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст20Гр01 = Группа.СуммаПд131Пр1Ст20Гр01 + Пд131Пр1Ст20Гр01.Значение;
			Группа.СуммаПд131Пр1Ст20Гр01Стр = Группа.СуммаПд131Пр1Ст20Гр01Стр + Пд131Пр1Ст20Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст20Гр01ПРП = Группа.СуммаПд131Пр1Ст20Гр01ПРП + Пд131Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр + Пд131Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст20Гр01, Группа.СуммаПд131Пр1Ст20Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_131(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.131)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 1 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за отчетный период при наличии кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за отчетный период'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 > 0, когда Пд131Пр1Ст10Гр01 > 0'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст10Гр01 = ПоказательПоСтроке("Пд131Пр1Ст10Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр01.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр01.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр01.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_132(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.132)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 2 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 3 посл.месяца при наличии кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за 3 посл.месяца'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр02 > 0, когда Пд131Пр1Ст10Гр02 > 0'.
	
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр02.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр02.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр02.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_133(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.133)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 3 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 1-й из 3-х посл.месяцев при наличии кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 1-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр03 > 0, когда Пд131Пр1Ст10Гр03 > 0'.
	
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст10Гр03 = ПоказательПоСтроке("Пд131Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр03.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр03.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр03.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_134(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.134)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 4 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 2-й из 3-х посл.месяцев при наличии кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 2-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр04 > 0, когда Пд131Пр1Ст10Гр04 > 0'.
	
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст10Гр04 = ПоказательПоСтроке("Пд131Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр04.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр04.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр04.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_135(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.135)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 5 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 3-й из 3-х посл.месяцев при наличии кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 3-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр05 > 0, когда Пд131Пр1Ст10Гр05 > 0'.
	
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	Пд131Пр1Ст10Гр05 = ПоказательПоСтроке("Пд131Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр05.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр05.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр05.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_136(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.136)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1 отчетного периода) = гр. 1 ст. 020 подр. 1.3.1 прил. 1 р. 1 СВ предыдущего "
		+ "отчетного периода + гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1 отчетного периода по каждому соответствующему "
		+ "значению ст. 001 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за отчетный период ≠ сумме выплат по доп.тарифу на ОПС "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду доп.тарифа на ОПС'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 = Пд131Пр1Ст20Гр01ПРП + Пд131Пр1Ст20Гр02'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст20Гр01ПРП");
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст20Гр01,СуммаПд131Пр1Ст20Гр01ПРП,СуммаПд131Пр1Ст20Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст20Гр01 = Группа.СуммаПд131Пр1Ст20Гр01 + Пд131Пр1Ст20Гр01.Значение;
			Группа.СуммаПд131Пр1Ст20Гр02 = Группа.СуммаПд131Пр1Ст20Гр02 + Пд131Пр1Ст20Гр02.Значение;
			Группа.СуммаПд131Пр1Ст20Гр01Стр = Группа.СуммаПд131Пр1Ст20Гр01Стр + Пд131Пр1Ст20Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд131Пр1Ст20Гр02Стр = Группа.СуммаПд131Пр1Ст20Гр02Стр + Пд131Пр1Ст20Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст20Гр01ПРП = Группа.СуммаПд131Пр1Ст20Гр01ПРП + Пд131Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр + Пд131Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст20Гр01, Группа.СуммаПд131Пр1Ст20Гр01ПРП + Группа.СуммаПд131Пр1Ст20Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр + Группа.СуммаПд131Пр1Ст20Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_137(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.137)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.1 прил. 1 р. 1 + гр. 4 ст. 020 "
		+ "подр. 1.3.1 прил. 1 р. 1 + гр. 5 ст. 020 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за последние три месяца отчетного периода ≠ сумме "
		+ "выплат по доп.тарифу на ОПС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр02 = Пд131Пр1Ст20Гр03 + Пд131Пр1Ст20Гр04 + Пд131Пр1Ст20Гр05'.
	
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр02.Значение, Пд131Пр1Ст20Гр03.Значение + Пд131Пр1Ст20Гр04.Значение + Пд131Пр1Ст20Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр03.ЗначениеСтр + " + " + Пд131Пр1Ст20Гр04.ЗначениеСтр + " + " + Пд131Пр1Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_138(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.138)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1) >= гр. 1 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за отчетный период меньше суммы выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за отчетный период'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 >= Пд131Пр1Ст30Гр01'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст30Гр01 = ПоказательПоСтроке("Пд131Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр01.Значение, Пд131Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_139(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.139)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 2 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за последние три месяца отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр02 >= Пд131Пр1Ст30Гр02'.
	
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр02.Значение, Пд131Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_140(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.140)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 3 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за 1-й последний месяц отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за 1-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр03 >= Пд131Пр1Ст30Гр03'.
	
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст30Гр03 = ПоказательПоСтроке("Пд131Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр03.Значение, Пд131Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_141(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.141)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 4 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за 2-й последний месяц отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за 2-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр04 >= Пд131Пр1Ст30Гр04'.
	
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст30Гр04 = ПоказательПоСтроке("Пд131Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр04.Значение, Пд131Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_142(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.142)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 5 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за 3-й последний месяц отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за 3-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр05 >= Пд131Пр1Ст30Гр05'.
	
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	Пд131Пр1Ст30Гр05 = ПоказательПоСтроке("Пд131Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр05.Значение, Пд131Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_143(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.143)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 подр. 1.3.1 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 030 подр. 1.3.1 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 030 подр. 1.3.1 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. 001 подр. "
		+ "1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж. облож. по доп. тарифу на ОПС за отчетный период ≠ сумме выплат, "
		+ "не подлеж. облож. по доп.тарифу на ОПС за предыдущий отчетный период и за последние три месяца отчетного "
		+ "периода по каждому виду доп. тарифа на ОПС'");
	
	// Формула КС кратко: 'Пд131Пр1Ст30Гр01 = Пд131Пр1Ст30Гр01ПРП + Пд131Пр1Ст30Гр02'.
	
	Пд131Пр1Ст30Гр01 = ПоказательПоСтроке("Пд131Пр1Ст30Гр01");
	Пд131Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст30Гр01ПРП");
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст30Гр01,СуммаПд131Пр1Ст30Гр01ПРП,СуммаПд131Пр1Ст30Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст30Гр01 = Группа.СуммаПд131Пр1Ст30Гр01 + Пд131Пр1Ст30Гр01.Значение;
			Группа.СуммаПд131Пр1Ст30Гр02 = Группа.СуммаПд131Пр1Ст30Гр02 + Пд131Пр1Ст30Гр02.Значение;
			Группа.СуммаПд131Пр1Ст30Гр01Стр = Группа.СуммаПд131Пр1Ст30Гр01Стр + Пд131Пр1Ст30Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд131Пр1Ст30Гр02Стр = Группа.СуммаПд131Пр1Ст30Гр02Стр + Пд131Пр1Ст30Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст30Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст30Гр01ПРП = Группа.СуммаПд131Пр1Ст30Гр01ПРП + Пд131Пр1Ст30Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст30Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст30Гр01ПРПСтр + Пд131Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст30Гр01, Группа.СуммаПд131Пр1Ст30Гр01ПРП + Группа.СуммаПд131Пр1Ст30Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст30Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст30Гр01ПРПСтр + Группа.СуммаПд131Пр1Ст30Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_144(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.144)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 030 подр. 1.3.1 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.3.1 прил. 1 р. 1 "
		+ "+ гр. 5 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж. облож по доп. тарифу на ОПС за последние три месяца отчетного "
		+ "периода ≠ сумме выплат, не подлеж облож. по доп. тарифу на ОПС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст30Гр02 = Пд131Пр1Ст30Гр03 + Пд131Пр1Ст30Гр04 + Пд131Пр1Ст30Гр05'.
	
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	Пд131Пр1Ст30Гр03 = ПоказательПоСтроке("Пд131Пр1Ст30Гр03");
	Пд131Пр1Ст30Гр04 = ПоказательПоСтроке("Пд131Пр1Ст30Гр04");
	Пд131Пр1Ст30Гр05 = ПоказательПоСтроке("Пд131Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст30Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст30Гр02.Значение, Пд131Пр1Ст30Гр03.Значение + Пд131Пр1Ст30Гр04.Значение + Пд131Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд131Пр1Ст30Гр04.ЗначениеСтр + " + "
				+ Пд131Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_145(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.145)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 1 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 1 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за отчетный период'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр01 = Пд131Пр1Ст20Гр01 - Пд131Пр1Ст30Гр01'.
	
	Пд131Пр1Ст40Гр01 = ПоказательПоСтроке("Пд131Пр1Ст40Гр01");
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст30Гр01 = ПоказательПоСтроке("Пд131Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр01.Значение, Пд131Пр1Ст20Гр01.Значение - Пд131Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр01.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_146(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.146)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за последние три месяца "
		+ "(гр. 2 ст. 040 подр. 1.3.1 прил. 1 р. 1) = гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 2 ст. 030 подр. "
		+ "1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 3 последних месяца ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож.по доп.тарифу на ОПС, за 3 последних месяца'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр02 = Пд131Пр1Ст20Гр02 - Пд131Пр1Ст30Гр02'.
	
	Пд131Пр1Ст40Гр02 = ПоказательПоСтроке("Пд131Пр1Ст40Гр02");
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр02.Значение, Пд131Пр1Ст20Гр02.Значение - Пд131Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр02.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_147(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.147)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 1 месяц (гр. 3 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 3 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 1-й последний месяц ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за 1-й последний месяц'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр03 = Пд131Пр1Ст20Гр03 - Пд131Пр1Ст30Гр03'.
	
	Пд131Пр1Ст40Гр03 = ПоказательПоСтроке("Пд131Пр1Ст40Гр03");
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст30Гр03 = ПоказательПоСтроке("Пд131Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр03.Значение, Пд131Пр1Ст20Гр03.Значение - Пд131Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр03.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр03.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_148(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.148)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 2 месяц (гр. 4 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 4 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 4 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 2-й последний месяц ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за 2-й последний месяц'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр04 = Пд131Пр1Ст20Гр04 - Пд131Пр1Ст30Гр04'.
	
	Пд131Пр1Ст40Гр04 = ПоказательПоСтроке("Пд131Пр1Ст40Гр04");
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст30Гр04 = ПоказательПоСтроке("Пд131Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр04.Значение, Пд131Пр1Ст20Гр04.Значение - Пд131Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр04.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр04.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_149(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.149)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 3 месяц (гр. 5 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 5 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 5 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 3-й последний месяц ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за 3-й последний месяц'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр05 = Пд131Пр1Ст20Гр05 - Пд131Пр1Ст30Гр05'.
	
	Пд131Пр1Ст40Гр05 = ПоказательПоСтроке("Пд131Пр1Ст40Гр05");
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	Пд131Пр1Ст30Гр05 = ПоказательПоСтроке("Пд131Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр05.Значение, Пд131Пр1Ст20Гр05.Значение - Пд131Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр05.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_150(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.150)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 050 подр. 1.3.1 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 050 подр. 1.3.1 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. 001 подр. "
		+ "1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за отчетный период ≠ сумме страховых взносов по доп.тарифу на ОПС "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду доп.тарифа на ОПС'");
	
	// Формула КС кратко: 'Пд131Пр1Ст50Гр01 = Пд131Пр1Ст50Гр01ПРП + Пд131Пр1Ст50Гр02'.
	
	Пд131Пр1Ст50Гр01 = ПоказательПоСтроке("Пд131Пр1Ст50Гр01");
	Пд131Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст50Гр01ПРП");
	Пд131Пр1Ст50Гр02 = ПоказательПоСтроке("Пд131Пр1Ст50Гр02");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст50Гр01,СуммаПд131Пр1Ст50Гр01ПРП,СуммаПд131Пр1Ст50Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст50Гр01 = Группа.СуммаПд131Пр1Ст50Гр01 + Пд131Пр1Ст50Гр01.Значение;
			Группа.СуммаПд131Пр1Ст50Гр02 = Группа.СуммаПд131Пр1Ст50Гр02 + Пд131Пр1Ст50Гр02.Значение;
			Группа.СуммаПд131Пр1Ст50Гр01Стр = Группа.СуммаПд131Пр1Ст50Гр01Стр + Пд131Пр1Ст50Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд131Пр1Ст50Гр02Стр = Группа.СуммаПд131Пр1Ст50Гр02Стр + Пд131Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст50Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст50Гр01ПРП = Группа.СуммаПд131Пр1Ст50Гр01ПРП + Пд131Пр1Ст50Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст50Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст50Гр01ПРПСтр + Пд131Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст50Гр01, Группа.СуммаПд131Пр1Ст50Гр01ПРП + Группа.СуммаПд131Пр1Ст50Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст50Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст50Гр01ПРПСтр + Группа.СуммаПд131Пр1Ст50Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_151(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.151)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу за последние три месяца (гр. 2 ст. "
		+ "050 подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 050 подр. 1.3.1 прил. 1 р. 1 + гр. 4 ст. 050 подр. 1.3.1 прил. 1 "
		+ "р. 1 + гр. 5 ст. 050 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы по доп.тарифу на ОПС за последние три месяца отчетного периода ≠ "
		+ "страховым взносам по доп.тарифу на ОПС за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст50Гр02 = Пд131Пр1Ст50Гр03 + Пд131Пр1Ст50Гр04 + Пд131Пр1Ст50Гр05'.
	
	Пд131Пр1Ст50Гр02 = ПоказательПоСтроке("Пд131Пр1Ст50Гр02");
	Пд131Пр1Ст50Гр03 = ПоказательПоСтроке("Пд131Пр1Ст50Гр03");
	Пд131Пр1Ст50Гр04 = ПоказательПоСтроке("Пд131Пр1Ст50Гр04");
	Пд131Пр1Ст50Гр05 = ПоказательПоСтроке("Пд131Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст50Гр02.Значение, Пд131Пр1Ст50Гр03.Значение + Пд131Пр1Ст50Гр04.Значение + Пд131Пр1Ст50Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд131Пр1Ст50Гр04.ЗначениеСтр + " + "
				+ Пд131Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_152(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.152)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр. 1 ст. 010 подр. 1.3.2 прил. 1 р. 1 отчетного периода) >= гр. 1 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1 предыдущего отчетного периода по каждой соответствующей комбинации значений "
		+ "ст. 001, ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ..лиц по доп. тарифу на ОПС по п.3 ст.248 НК РФ за отчетный период меньше "
		+ "кол-ва физ..лиц по доп.тарифу на ОПС по п.3.ст. 248 НК РФ за предыдущий отчетный период по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр01 >= Пд132Пр1Ст10Гр01ПРП'.
	
	Пд132Пр1Ст10Гр01 = ПоказательПоСтроке("Пд132Пр1Ст10Гр01");
	Пд132Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст10Гр01ПРП");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст10Гр01,СуммаПд132Пр1Ст10Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст10Гр01 = Группа.СуммаПд132Пр1Ст10Гр01 + Пд132Пр1Ст10Гр01.Значение;
			Группа.СуммаПд132Пр1Ст10Гр01Стр = Группа.СуммаПд132Пр1Ст10Гр01Стр + Пд132Пр1Ст10Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст10Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст10Гр01ПРП = Группа.СуммаПд132Пр1Ст10Гр01ПРП + Пд132Пр1Ст10Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст10Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст10Гр01ПРПСтр + Пд132Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст10Гр01, Группа.СуммаПд132Пр1Ст10Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_153(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.153)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр.1 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 2 ст. 010 подр. 1.3.2 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за отчетный период меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр01 >= Пд132Пр1Ст10Гр02'.
	
	Пд132Пр1Ст10Гр01 = ПоказательПоСтроке("Пд132Пр1Ст10Гр01");
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр01.Значение, Пд132Пр1Ст10Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_154(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.154)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 3 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного "
		+ "периода меньше кол-ва физ.лиц по доп.тарифу на ОПСпо п.3 ст.248 НК РФ за 1-й из последних месяцев отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр02 >= Пд132Пр1Ст10Гр03'.
	
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	Пд132Пр1Ст10Гр03 = ПоказательПоСтроке("Пд132Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр02.Значение, Пд132Пр1Ст10Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_155(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.155)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 4 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного "
		+ "периода меньше кол-ва физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 2-й из последних месяцев отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр02 >= Пд132Пр1Ст10Гр04'.
	
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	Пд132Пр1Ст10Гр04 = ПоказательПоСтроке("Пд132Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр02.Значение, Пд132Пр1Ст10Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_156(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.156)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 5 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного "
		+ "периода меньше кол-ва физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3-й из последних месяцев отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр02 >= Пд132Пр1Ст10Гр05'.
	
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	Пд132Пр1Ст10Гр05 = ПоказательПоСтроке("Пд132Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр02.Значение, Пд132Пр1Ст10Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_157(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.157)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1 отчетного периода) >= гр. 1 ст. 020 подр. 1.3.2 прил. 1 р. 1 предыдущего "
		+ "отчетного периода по каждой соответствующей комбинации значений ст. 001, ст. 002, ст. 003 подр. 1.3.2 прил. "
		+ "1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по доп.тарифу на ОПС по п.3 ст.248 НК РФ за отчетный период меньше выплат по "
		+ "доп.тарифу на ОПС по п.3.ст.248 НК РФ за предыдущий отчетный период по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 >= Пд132Пр1Ст20Гр01ПРП'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст20Гр01ПРП");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст20Гр01,СуммаПд132Пр1Ст20Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст20Гр01 = Группа.СуммаПд132Пр1Ст20Гр01 + Пд132Пр1Ст20Гр01.Значение;
			Группа.СуммаПд132Пр1Ст20Гр01Стр = Группа.СуммаПд132Пр1Ст20Гр01Стр + Пд132Пр1Ст20Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст20Гр01ПРП = Группа.СуммаПд132Пр1Ст20Гр01ПРП + Пд132Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр + Пд132Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст20Гр01, Группа.СуммаПд132Пр1Ст20Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_158(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.158)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 1 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период при "
		+ "наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 > 0, когда Пд132Пр1Ст10Гр01 > 0'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст10Гр01 = ПоказательПоСтроке("Пд132Пр1Ст10Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр01.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр01.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр01.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_159(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.159)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3 посл.месяца при наличии "
		+ "кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3 посл.месяца'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр02 > 0, когда Пд132Пр1Ст10Гр02 > 0'.
	
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр02.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр02.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр02.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_160(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.160)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 3 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й из 3-х посл.месяцев "
		+ "при наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр03 > 0, когда Пд132Пр1Ст10Гр03 > 0'.
	
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст10Гр03 = ПоказательПоСтроке("Пд132Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр03.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр03.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр03.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_161(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.161)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 4 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й из 3-х посл.месяцев "
		+ "при наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр04 > 0, когда Пд132Пр1Ст10Гр04 > 0'.
	
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст10Гр04 = ПоказательПоСтроке("Пд132Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр04.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр04.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр04.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_162(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.162)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 5 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й из 3-х посл.месяцев "
		+ "при наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр05 > 0, когда Пд132Пр1Ст10Гр05 > 0'.
	
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	Пд132Пр1Ст10Гр05 = ПоказательПоСтроке("Пд132Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр05.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр05.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр05.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_163(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.163)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1 отчетного периода) = гр. 1 ст. 020 подр. 1.3.2 прил. 1 р. 1 предыдущего "
		+ "отчетного периода + гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1 отчетного периода по каждой соответствующей "
		+ "комбинации значений ст. 001, ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период ≠ сумме выплат "
		+ "по доп.тарифу на ОПС по п.3.ст.248 НК РФ за предыдущий отчетный период и за последние три месяца отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 = Пд132Пр1Ст20Гр01ПРП + Пд132Пр1Ст20Гр02'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст20Гр01ПРП");
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст20Гр01,СуммаПд132Пр1Ст20Гр01ПРП,СуммаПд132Пр1Ст20Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст20Гр01 = Группа.СуммаПд132Пр1Ст20Гр01 + Пд132Пр1Ст20Гр01.Значение;
			Группа.СуммаПд132Пр1Ст20Гр02 = Группа.СуммаПд132Пр1Ст20Гр02 + Пд132Пр1Ст20Гр02.Значение;
			Группа.СуммаПд132Пр1Ст20Гр01Стр = Группа.СуммаПд132Пр1Ст20Гр01Стр + Пд132Пр1Ст20Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд132Пр1Ст20Гр02Стр = Группа.СуммаПд132Пр1Ст20Гр02Стр + Пд132Пр1Ст20Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст20Гр01ПРП = Группа.СуммаПд132Пр1Ст20Гр01ПРП + Пд132Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр + Пд132Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст20Гр01, Группа.СуммаПд132Пр1Ст20Гр01ПРП + Группа.СуммаПд132Пр1Ст20Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр + Группа.СуммаПд132Пр1Ст20Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_164(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.164)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.2 прил. 1 р. 1 + гр. 4 ст. 020 "
		+ "подр. 1.3.2 прил. 1 р. 1 + гр. 5 ст. 020 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три месяца отчетного "
		+ "периода ≠ сумме выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр02 = Пд132Пр1Ст20Гр03 + Пд132Пр1Ст20Гр04 + Пд132Пр1Ст20Гр05'.
	
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр02.Значение, Пд132Пр1Ст20Гр03.Значение + Пд132Пр1Ст20Гр04.Значение + Пд132Пр1Ст20Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр03.ЗначениеСтр + " + " + Пд132Пр1Ст20Гр04.ЗначениеСтр + " + "
				+ Пд132Пр1Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_165(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.165)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1) >= гр. 1 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за отчетный период'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 >= Пд132Пр1Ст30Гр01'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст30Гр01 = ПоказательПоСтроке("Пд132Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр01.Значение, Пд132Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_166(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.166)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 2 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три месяца отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за последние три "
		+ "месяца отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр02 >= Пд132Пр1Ст30Гр02'.
	
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр02.Значение, Пд132Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_167(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.167)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 3 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й последний месяц отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 1-й последний "
		+ "месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр03 >= Пд132Пр1Ст30Гр03'.
	
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст30Гр03 = ПоказательПоСтроке("Пд132Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр03.Значение, Пд132Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_168(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.168)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 4 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й последний месяц отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 2-й последний "
		+ "месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр04 >= Пд132Пр1Ст30Гр04'.
	
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст30Гр04 = ПоказательПоСтроке("Пд132Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр04.Значение, Пд132Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_169(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.169)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 5 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й последний месяц отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 3-й последний "
		+ "месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр05 >= Пд132Пр1Ст30Гр05'.
	
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	Пд132Пр1Ст30Гр05 = ПоказательПоСтроке("Пд132Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр05.Значение, Пд132Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_170(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.170)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 подр. 1.3.2 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 030 подр. 1.3.2 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 030 подр. 1.3.2 прил. 1 р. 1 отчетного периода по каждой соответствующей комбинации значений ст. 001, "
		+ "ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж. облож. по доп. тарифу на ОПС по п.3.ст.248 НК РФ за отчетный "
		+ "период ≠ сумме выплат, не подлеж. облож. по доп. тарифу на ОПС по п. 3.ст. 248 НК РФ за предыдущий отчетный "
		+ "период и за последние три месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст30Гр01 = Пд132Пр1Ст30Гр01ПРП + Пд132Пр1Ст30Гр02'.
	
	Пд132Пр1Ст30Гр01 = ПоказательПоСтроке("Пд132Пр1Ст30Гр01");
	Пд132Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст30Гр01ПРП");
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст30Гр01,СуммаПд132Пр1Ст30Гр01ПРП,СуммаПд132Пр1Ст30Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст30Гр01 = Группа.СуммаПд132Пр1Ст30Гр01 + Пд132Пр1Ст30Гр01.Значение;
			Группа.СуммаПд132Пр1Ст30Гр02 = Группа.СуммаПд132Пр1Ст30Гр02 + Пд132Пр1Ст30Гр02.Значение;
			Группа.СуммаПд132Пр1Ст30Гр01Стр = Группа.СуммаПд132Пр1Ст30Гр01Стр + Пд132Пр1Ст30Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд132Пр1Ст30Гр02Стр = Группа.СуммаПд132Пр1Ст30Гр02Стр + Пд132Пр1Ст30Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст30Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст30Гр01ПРП = Группа.СуммаПд132Пр1Ст30Гр01ПРП + Пд132Пр1Ст30Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст30Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст30Гр01ПРПСтр + Пд132Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст30Гр01, Группа.СуммаПд132Пр1Ст30Гр01ПРП + Группа.СуммаПд132Пр1Ст30Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст30Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст30Гр01ПРПСтр + Группа.СуммаПд132Пр1Ст30Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_171(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.171)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 3 ст. 030 подр. 1.3.2 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.3.2 прил. 1 р. 1 "
		+ "+ гр. 5 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж.облож по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три "
		+ "месяца отчетного периода ≠ сумме выплат, не подлеж. облож. по доп. тарифу на ОПС по п. 3.ст. 248 НК РФ за "
		+ "каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст30Гр02 = Пд132Пр1Ст30Гр03 + Пд132Пр1Ст30Гр04 + Пд132Пр1Ст30Гр05'.
	
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	Пд132Пр1Ст30Гр03 = ПоказательПоСтроке("Пд132Пр1Ст30Гр03");
	Пд132Пр1Ст30Гр04 = ПоказательПоСтроке("Пд132Пр1Ст30Гр04");
	Пд132Пр1Ст30Гр05 = ПоказательПоСтроке("Пд132Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст30Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст30Гр02.Значение, Пд132Пр1Ст30Гр03.Значение + Пд132Пр1Ст30Гр04.Значение + Пд132Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд132Пр1Ст30Гр04.ЗначениеСтр + " + "
				+ Пд132Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_172(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.172)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 1 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 1 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период ≠ разнице всех выплат и "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за отчетный период'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр01 = Пд132Пр1Ст20Гр01 - Пд132Пр1Ст30Гр01'.
	
	Пд132Пр1Ст40Гр01 = ПоказательПоСтроке("Пд132Пр1Ст40Гр01");
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст30Гр01 = ПоказательПоСтроке("Пд132Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр01.Значение, Пд132Пр1Ст20Гр01.Значение - Пд132Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр01.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр01.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_173(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.173)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за последние три месяца "
		+ "(гр. 2 ст. 040 подр. 1.3.2 прил. 1 р. 1) = гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 2 ст. 030 подр. "
		+ "1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФза 3 последних месяца ≠ разнице всех выплат "
		+ "и выплат, не подлеж.облож.по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 3 последних месяца'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр02 = Пд132Пр1Ст20Гр02 - Пд132Пр1Ст30Гр02'.
	
	Пд132Пр1Ст40Гр02 = ПоказательПоСтроке("Пд132Пр1Ст40Гр02");
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр02.Значение, Пд132Пр1Ст20Гр02.Значение - Пд132Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр02.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр02.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_174(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.174)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 1 месяц (гр. 3 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 3 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й последний месяц ≠ разнице всех "
		+ "выплат и выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 1-й последний месяц'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр03 = Пд132Пр1Ст20Гр03 - Пд132Пр1Ст30Гр03'.
	
	Пд132Пр1Ст40Гр03 = ПоказательПоСтроке("Пд132Пр1Ст40Гр03");
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст30Гр03 = ПоказательПоСтроке("Пд132Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр03.Значение, Пд132Пр1Ст20Гр03.Значение - Пд132Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр03.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр03.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_175(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.175)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 2 месяц (гр. 4 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 4 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 4 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й последний месяц ≠ разнице всех "
		+ "выплат и выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 2-й последний месяц'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр04 = Пд132Пр1Ст20Гр04 - Пд132Пр1Ст30Гр04'.
	
	Пд132Пр1Ст40Гр04 = ПоказательПоСтроке("Пд132Пр1Ст40Гр04");
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст30Гр04 = ПоказательПоСтроке("Пд132Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр04.Значение, Пд132Пр1Ст20Гр04.Значение - Пд132Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр04.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр04.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_176(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.176)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 3 месяц (гр. 5 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 5 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 5 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й последний месяц ≠ разнице всех "
		+ "выплат и выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 3-й последний месяц'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр05 = Пд132Пр1Ст20Гр05 - Пд132Пр1Ст30Гр05'.
	
	Пд132Пр1Ст40Гр05 = ПоказательПоСтроке("Пд132Пр1Ст40Гр05");
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	Пд132Пр1Ст30Гр05 = ПоказательПоСтроке("Пд132Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр05.Значение, Пд132Пр1Ст20Гр05.Значение - Пд132Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр05.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр05.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_177(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.177)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 050 подр. 1.3.2 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 050 подр. 1.3.2 прил. 1 р. 1 отчетного периода по каждой соответствующей комбинации значений ст. 001, "
		+ "ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период ≠ сумме "
		+ "страховых взносов по доп.тарифу на ОПС по п.3.ст.248 НК РФ за предыдущий отчетный период и за последние три "
		+ "месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст50Гр01 = Пд132Пр1Ст50Гр01ПРП + Пд132Пр1Ст50Гр02'.
	
	Пд132Пр1Ст50Гр01 = ПоказательПоСтроке("Пд132Пр1Ст50Гр01");
	Пд132Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст50Гр01ПРП");
	Пд132Пр1Ст50Гр02 = ПоказательПоСтроке("Пд132Пр1Ст50Гр02");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст50Гр01,СуммаПд132Пр1Ст50Гр01ПРП,СуммаПд132Пр1Ст50Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст50Гр01 = Группа.СуммаПд132Пр1Ст50Гр01 + Пд132Пр1Ст50Гр01.Значение;
			Группа.СуммаПд132Пр1Ст50Гр02 = Группа.СуммаПд132Пр1Ст50Гр02 + Пд132Пр1Ст50Гр02.Значение;
			Группа.СуммаПд132Пр1Ст50Гр01Стр = Группа.СуммаПд132Пр1Ст50Гр01Стр + Пд132Пр1Ст50Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд132Пр1Ст50Гр02Стр = Группа.СуммаПд132Пр1Ст50Гр02Стр + Пд132Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст50Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст50Гр01ПРП = Группа.СуммаПд132Пр1Ст50Гр01ПРП + Пд132Пр1Ст50Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст50Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст50Гр01ПРПСтр + Пд132Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст50Гр01, Группа.СуммаПд132Пр1Ст50Гр01ПРП + Группа.СуммаПд132Пр1Ст50Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст50Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст50Гр01ПРПСтр + Группа.СуммаПд132Пр1Ст50Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_178(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.178)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу за последние три месяца (гр. 2 ст. "
		+ "050 подр. 1.3.2 прил. 1 р. 1 СВ) = гр. 3 ст. 050 подр. 1.3.2 прил. 1 р. 1 + гр. 4 ст. 050 подр. 1.3.2 прил. "
		+ "1 р. 1 + гр. 5 ст. 050 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три месяца "
		+ "отчетного периода ≠ страховым взносам по доп.тарифу на ОПС по п.3.ст.248 НК РФ за каждый из трех последних "
		+ "месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст50Гр02 = Пд132Пр1Ст50Гр03 + Пд132Пр1Ст50Гр04 + Пд132Пр1Ст50Гр05'.
	
	Пд132Пр1Ст50Гр02 = ПоказательПоСтроке("Пд132Пр1Ст50Гр02");
	Пд132Пр1Ст50Гр03 = ПоказательПоСтроке("Пд132Пр1Ст50Гр03");
	Пд132Пр1Ст50Гр04 = ПоказательПоСтроке("Пд132Пр1Ст50Гр04");
	Пд132Пр1Ст50Гр05 = ПоказательПоСтроке("Пд132Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст50Гр02.Значение, Пд132Пр1Ст50Гр03.Значение + Пд132Пр1Ст50Гр04.Значение + Пд132Пр1Ст50Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд132Пр1Ст50Гр04.ЗначениеСтр + " + "
				+ Пд132Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_179(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.179)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.4 прил. 1 р. 1 + гр. 4 ст. 020 подр. "
		+ "1.4 прил. 1 р. 1 + гр. 5 ст. 020 подр. 1.4 прил. 1 р. 1 по каждому соответствующему значению ст. 001 подр. "
		+ "1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за последние три месяца "
		+ "отчетного периода ≠ сумме выплат по страховым взносам на ДСО членов летных экипажей за каждый из трех "
		+ "последних месяцев отчетного периода, по каждому основанию'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр02 = Пд14Пр1Ст20Гр03 + Пд14Пр1Ст20Гр04 + Пд14Пр1Ст20Гр05'.
	
	Пд14Пр1Ст20Гр02 = ПоказательПоСтроке("Пд14Пр1Ст20Гр02");
	Пд14Пр1Ст20Гр03 = ПоказательПоСтроке("Пд14Пр1Ст20Гр03");
	Пд14Пр1Ст20Гр04 = ПоказательПоСтроке("Пд14Пр1Ст20Гр04");
	Пд14Пр1Ст20Гр05 = ПоказательПоСтроке("Пд14Пр1Ст20Гр05");
	Пд14Пр1Ст1Гр01 = ПоказательПоСтроке("Пд14Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст1Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр02.Значение, Пд14Пр1Ст20Гр03.Значение + Пд14Пр1Ст20Гр04.Значение + Пд14Пр1Ст20Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр03.ЗначениеСтр + " + " + Пд14Пр1Ст20Гр04.ЗначениеСтр + " + " + Пд14Пр1Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_180(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.180)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.4 прил. 1 р. 1) >= гр. 1 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за отчетный период меньше "
		+ "выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей за отчетный период'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр01 >= Пд14Пр1Ст30Гр01'.
	
	Пд14Пр1Ст20Гр01 = ПоказательПоСтроке("Пд14Пр1Ст20Гр01");
	Пд14Пр1Ст30Гр01 = ПоказательПоСтроке("Пд14Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр01.Значение, Пд14Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_181(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.181)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 2 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за 3 последних месяца "
		+ "отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей "
		+ "за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр02 >= Пд14Пр1Ст30Гр02'.
	
	Пд14Пр1Ст20Гр02 = ПоказательПоСтроке("Пд14Пр1Ст20Гр02");
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр02.Значение, Пд14Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_182(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.182)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 3 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взнсоам на ДСО членов летных экипажей за 1-й месяц из 3-х последних "
		+ "месяцев отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных "
		+ "экипажей за 1-й месяц из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр03 >= Пд14Пр1Ст30Гр03'.
	
	Пд14Пр1Ст20Гр03 = ПоказательПоСтроке("Пд14Пр1Ст20Гр03");
	Пд14Пр1Ст30Гр03 = ПоказательПоСтроке("Пд14Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр03.Значение, Пд14Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_183(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.183)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 4 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взнсоам на ДСО членов летных экипажей за 2-й месяц из 3-х последних "
		+ "месяцев отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных "
		+ "экипажей за 2-й месяц из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр04 >= Пд14Пр1Ст30Гр04'.
	
	Пд14Пр1Ст20Гр04 = ПоказательПоСтроке("Пд14Пр1Ст20Гр04");
	Пд14Пр1Ст30Гр04 = ПоказательПоСтроке("Пд14Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр04.Значение, Пд14Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_184(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.184)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 5 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за 3-й месяц из 3-х последних "
		+ "месяцев отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных "
		+ "экипажей за 3-й месяц из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр05 >= Пд14Пр1Ст30Гр05'.
	
	Пд14Пр1Ст20Гр05 = ПоказательПоСтроке("Пд14Пр1Ст20Гр05");
	Пд14Пр1Ст30Гр05 = ПоказательПоСтроке("Пд14Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр05.Значение, Пд14Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_185(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.185)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 подр. 1.4 прил. "
		+ "1 р. 1 отчетного периода) = гр. 1 ст. 030 подр. 1.4 прил. 1 р. 1 предыдущего отчетного периода + гр. 2 ст. "
		+ "030 подр. 1.4 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. 001 подр. 1.4 прил. 1 "
		+ "р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Выплаты, не подлежащие обложению страховыми взносами на ДСО членов летных экипажей за "
		+ "отчетный период ≠ сумме выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд14Пр1Ст30Гр01 = Пд14Пр1Ст30Гр01ПРП + Пд14Пр1Ст30Гр02'.
	
	Пд14Пр1Ст30Гр01 = ПоказательПоСтроке("Пд14Пр1Ст30Гр01");
	Пд14Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст30Гр01ПРП");
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	Пд14Пр1Ст1Гр01 = ПоказательПоСтроке("Пд14Пр1Ст1Гр01");
	Пд14Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд14Пр1Ст30Гр01,СуммаПд14Пр1Ст30Гр01ПРП,СуммаПд14Пр1Ст30Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст1Гр01, Инд);
			
			Ключ = Пд14Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд14Пр1Ст30Гр01 = Группа.СуммаПд14Пр1Ст30Гр01 + Пд14Пр1Ст30Гр01.Значение;
			Группа.СуммаПд14Пр1Ст30Гр02 = Группа.СуммаПд14Пр1Ст30Гр02 + Пд14Пр1Ст30Гр02.Значение;
			Группа.СуммаПд14Пр1Ст30Гр01Стр = Группа.СуммаПд14Пр1Ст30Гр01Стр + Пд14Пр1Ст30Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд14Пр1Ст30Гр02Стр = Группа.СуммаПд14Пр1Ст30Гр02Стр + Пд14Пр1Ст30Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст30Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд14Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд14Пр1Ст30Гр01ПРП = Группа.СуммаПд14Пр1Ст30Гр01ПРП + Пд14Пр1Ст30Гр01ПРП.Значение;
				Группа.СуммаПд14Пр1Ст30Гр01ПРПСтр = Группа.СуммаПд14Пр1Ст30Гр01ПРПСтр + Пд14Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд14Пр1Ст30Гр01, Группа.СуммаПд14Пр1Ст30Гр01ПРП + Группа.СуммаПд14Пр1Ст30Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст30Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст30Гр01ПРПСтр + Группа.СуммаПд14Пр1Ст30Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_186(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.186)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 030 подр. 1.4 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.4 прил. 1 р. 1 + гр. "
		+ "5 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, не подлежащие обложению страховыми взносами на ДСО членов летных экипажей за "
		+ "последние три месяца отчетного периода ≠ сумме выплат, не подлежащих обложению страховыми взносами на ДСО "
		+ "членов летных экипажей, за каждый из трех последних месяцев отчетного периода.'");
	
	// Формула КС кратко: 'Пд14Пр1Ст30Гр02 = Пд14Пр1Ст30Гр03 + Пд14Пр1Ст30Гр04 + Пд14Пр1Ст30Гр05'.
	
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	Пд14Пр1Ст30Гр03 = ПоказательПоСтроке("Пд14Пр1Ст30Гр03");
	Пд14Пр1Ст30Гр04 = ПоказательПоСтроке("Пд14Пр1Ст30Гр04");
	Пд14Пр1Ст30Гр05 = ПоказательПоСтроке("Пд14Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст30Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст30Гр02.Значение, Пд14Пр1Ст30Гр03.Значение + Пд14Пр1Ст30Гр04.Значение + Пд14Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд14Пр1Ст30Гр04.ЗначениеСтр + " + "
				+ Пд14Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_187(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.187)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение, всего "
		+ "(гр. 1 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 1 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 1 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за отчетный период ≠ разнице всех "
		+ "выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за отчетный период'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр01 = Пд14Пр1Ст20Гр01 - Пд14Пр1Ст30Гр01'.
	
	Пд14Пр1Ст40Гр01 = ПоказательПоСтроке("Пд14Пр1Ст40Гр01");
	Пд14Пр1Ст20Гр01 = ПоказательПоСтроке("Пд14Пр1Ст20Гр01");
	Пд14Пр1Ст30Гр01 = ПоказательПоСтроке("Пд14Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр01.Значение, Пд14Пр1Ст20Гр01.Значение - Пд14Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр01.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр01.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_188(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.188)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за "
		+ "последние три месяца (гр. 2 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 2 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 2 "
		+ "ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 3 последних месяца ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за 3 "
		+ "последних месяца'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр02 = Пд14Пр1Ст20Гр02 - Пд14Пр1Ст30Гр02'.
	
	Пд14Пр1Ст40Гр02 = ПоказательПоСтроке("Пд14Пр1Ст40Гр02");
	Пд14Пр1Ст20Гр02 = ПоказательПоСтроке("Пд14Пр1Ст20Гр02");
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр02.Значение, Пд14Пр1Ст20Гр02.Значение - Пд14Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр02.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр02.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_189(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.189)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за 1 месяц "
		+ "(гр. 3 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 3 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 1-й последний месяц ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за 1-й "
		+ "последний месяц'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр03 = Пд14Пр1Ст20Гр03 - Пд14Пр1Ст30Гр03'.
	
	Пд14Пр1Ст40Гр03 = ПоказательПоСтроке("Пд14Пр1Ст40Гр03");
	Пд14Пр1Ст20Гр03 = ПоказательПоСтроке("Пд14Пр1Ст20Гр03");
	Пд14Пр1Ст30Гр03 = ПоказательПоСтроке("Пд14Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр03.Значение, Пд14Пр1Ст20Гр03.Значение - Пд14Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр03.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр03.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_190(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.190)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за 2 месяц "
		+ "(гр. 4 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 4 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 4 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 2-й последний месяц ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за 2-й "
		+ "последний месяц'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр04 = Пд14Пр1Ст20Гр04 - Пд14Пр1Ст30Гр04'.
	
	Пд14Пр1Ст40Гр04 = ПоказательПоСтроке("Пд14Пр1Ст40Гр04");
	Пд14Пр1Ст20Гр04 = ПоказательПоСтроке("Пд14Пр1Ст20Гр04");
	Пд14Пр1Ст30Гр04 = ПоказательПоСтроке("Пд14Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр04.Значение, Пд14Пр1Ст20Гр04.Значение - Пд14Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр04.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр04.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_191(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.191)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за 3 месяц "
		+ "(гр. 5 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 5 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 5 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 3-й последний месяц ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей за 3-й "
		+ "последний месяц'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр05 = Пд14Пр1Ст20Гр05 - Пд14Пр1Ст30Гр05'.
	
	Пд14Пр1Ст40Гр05 = ПоказательПоСтроке("Пд14Пр1Ст40Гр05");
	Пд14Пр1Ст20Гр05 = ПоказательПоСтроке("Пд14Пр1Ст20Гр05");
	Пд14Пр1Ст30Гр05 = ПоказательПоСтроке("Пд14Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр05.Значение, Пд14Пр1Ст20Гр05.Значение - Пд14Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр05.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр05.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_192(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.192)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов на дополнительное социальное обеспечение, всего (гр. 1 ст. "
		+ "050 подр. 1.4 прил. 1 р. 1 отчетного периода) = гр. 1 ст. 050 подр. 1.4 прил. 1 р. 1 предыдущего отчетного "
		+ "периода + гр. 2 ст. 050 подр. 1.4 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. "
		+ "001 подр. 1.4 прил. 1 р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ДСО членов летных экипажей за отчетный период ≠ сумме страховых "
		+ "взносов на ДСО членов летных экипажей за предыдущий отчетный период и за последние три месяца отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд14Пр1Ст50Гр01 = Пд14Пр1Ст50Гр01ПРП + Пд14Пр1Ст50Гр02'.
	
	Пд14Пр1Ст50Гр01 = ПоказательПоСтроке("Пд14Пр1Ст50Гр01");
	Пд14Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст50Гр01ПРП");
	Пд14Пр1Ст50Гр02 = ПоказательПоСтроке("Пд14Пр1Ст50Гр02");
	Пд14Пр1Ст1Гр01 = ПоказательПоСтроке("Пд14Пр1Ст1Гр01");
	Пд14Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд14Пр1Ст50Гр01,СуммаПд14Пр1Ст50Гр01ПРП,СуммаПд14Пр1Ст50Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст1Гр01, Инд);
			
			Ключ = Пд14Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд14Пр1Ст50Гр01 = Группа.СуммаПд14Пр1Ст50Гр01 + Пд14Пр1Ст50Гр01.Значение;
			Группа.СуммаПд14Пр1Ст50Гр02 = Группа.СуммаПд14Пр1Ст50Гр02 + Пд14Пр1Ст50Гр02.Значение;
			Группа.СуммаПд14Пр1Ст50Гр01Стр = Группа.СуммаПд14Пр1Ст50Гр01Стр + Пд14Пр1Ст50Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд14Пр1Ст50Гр02Стр = Группа.СуммаПд14Пр1Ст50Гр02Стр + Пд14Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст50Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд14Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд14Пр1Ст50Гр01ПРП = Группа.СуммаПд14Пр1Ст50Гр01ПРП + Пд14Пр1Ст50Гр01ПРП.Значение;
				Группа.СуммаПд14Пр1Ст50Гр01ПРПСтр = Группа.СуммаПд14Пр1Ст50Гр01ПРПСтр + Пд14Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд14Пр1Ст50Гр01, Группа.СуммаПд14Пр1Ст50Гр01ПРП + Группа.СуммаПд14Пр1Ст50Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст50Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст50Гр01ПРПСтр + Группа.СуммаПд14Пр1Ст50Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_193(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.193)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов на дополнительное социальное обеспечение за последние три "
		+ "месяца (гр. 2 ст. 050 подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 050 подр. 1.4 прил. 1 р. 1 + гр. 4 ст. 050 подр. "
		+ "1.4 прил. 1 р. 1 + гр. 5 ст. 050 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ДСО членов летных экипажей за последние три месяца отчетного периода "
		+ "≠ страховые взносы на ДСО членов летных экипажей за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст50Гр02 = Пд14Пр1Ст50Гр03 + Пд14Пр1Ст50Гр04 + Пд14Пр1Ст50Гр05'.
	
	Пд14Пр1Ст50Гр02 = ПоказательПоСтроке("Пд14Пр1Ст50Гр02");
	Пд14Пр1Ст50Гр03 = ПоказательПоСтроке("Пд14Пр1Ст50Гр03");
	Пд14Пр1Ст50Гр04 = ПоказательПоСтроке("Пд14Пр1Ст50Гр04");
	Пд14Пр1Ст50Гр05 = ПоказательПоСтроке("Пд14Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст50Гр02.Значение, Пд14Пр1Ст50Гр03.Значение + Пд14Пр1Ст50Гр04.Значение + Пд14Пр1Ст50Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд14Пр1Ст50Гр04.ЗначениеСтр + " + "
				+ Пд14Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_194(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.194)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 прил. 2 р. 1 отчетного периода) >= "
		+ "гр. 1 ст. 010 прил. 2 р. 1 предыдущего отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за отчетный период меньше кол-ва физ.лиц по "
		+ "страховым взносам на ОСС за предыдущий отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр01 >= Р1Прил2Ст10Гр01ПРП'.
	
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	Р1Прил2Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст10Гр01ПРП");
	Р1Прил2Ст1Гр01 = ПоказательПоСтроке("Р1Прил2Ст1Гр01");
	Р1Прил2Ст1Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст1Гр01ПРП");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст1Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст1Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст1Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст1Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр01.Значение, Р1Прил2Ст10Гр01ПРП.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр + ", когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_195(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.195)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр.1 ст. 010 прил. 2 р. 1) >= гр. 2 ст. 010 прил. 2 "
		+ "р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за отчетный период меньше кол-ва физ.лиц по "
		+ "страховым взносам на ОСС за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр01 >= Р1Прил2Ст10Гр02'.
	
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр01.Значение, Р1Прил2Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_196(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.196)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр.2 ст. 010 прил. 2 р. 1) >= гр. "
		+ "3 ст. 010 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за 3 последних месяца отчетного периода меньше "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 1-й из последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 >= Р1Прил2Ст10Гр03'.
	
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Р1Прил2Ст10Гр03 = ПоказательПоСтроке("Р1Прил2Ст10Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, Р1Прил2Ст10Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_197(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.197)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр.2 ст. 010 прил. 2 р. 1) >= гр. "
		+ "4 ст. 010 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взнсоам на ОСС за 3 последних месяца отчетного периода меньше "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 2-й из последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 >= Р1Прил2Ст10Гр04'.
	
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Р1Прил2Ст10Гр04 = ПоказательПоСтроке("Р1Прил2Ст10Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, Р1Прил2Ст10Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_198(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.198)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр.2 ст. 010 прил. 2 р. 1) >= гр. "
		+ "5 ст. 010 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за 3 последних месяца отчетного периода меньше "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 3-й из последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 >= Р1Прил2Ст10Гр05'.
	
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Р1Прил2Ст10Гр05 = ПоказательПоСтроке("Р1Прил2Ст10Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, Р1Прил2Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_199(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.199)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1) > 0 если гр. 1 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за отчетный период при наличии кол-ва "
		+ "физ.лиц по страховым взносам на ОСС за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 > 0, когда Р1Прил2Ст10Гр01 > 0'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_200(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.200)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) > 0 если гр. 2 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 3 посл.месяца при наличии кол-ва "
		+ "физ.лиц по страховым взносам на ОСС за 3 посл.месяца'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 > 0, когда Р1Прил2Ст10Гр02 > 0'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_201(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.201)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 прил. 2 р. 1) > 0 если гр. 3 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 1-й из 3-х посл.месяцев при наличии "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 1-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр03 > 0, когда Р1Прил2Ст10Гр03 > 0'.
	
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст10Гр03 = ПоказательПоСтроке("Р1Прил2Ст10Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_202(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.202)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 прил. 2 р. 1) > 0 если гр. 4 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 2-й из 3-х посл.месяцев при наличии "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 2-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр04 > 0, когда Р1Прил2Ст10Гр04 > 0'.
	
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст10Гр04 = ПоказательПоСтроке("Р1Прил2Ст10Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_203(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.203)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 прил. 2 р. 1) > 0 если гр. 5 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 3-й из 3-х посл.месяцев при наличии "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 3-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр05 > 0, когда Р1Прил2Ст10Гр05 > 0'.
	
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст10Гр05 = ПоказательПоСтроке("Р1Прил2Ст10Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр05.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр05.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр05.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_204(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.204)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1 отчетного периода) = гр. 1 ст. 020 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. "
		+ "020 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за отчетный период ≠ сумме выплат по страховым "
		+ "взносам на ОСС за предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 = Р1Прил2Ст20Гр01ПРП + Р1Прил2Ст20Гр02'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст20Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст20Гр01ПРП");
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст20Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, Р1Прил2Ст20Гр01ПРП.Значение + Р1Прил2Ст20Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст20Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_205(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.205)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) = гр. 3 ст. 020 прил. 2 р. 1 + гр. 4 ст. 020 прил. 2 р. 1 + гр. 5 ст. "
		+ "020 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за последние три месяца отчетного периода ≠ "
		+ "сумме выплат по страховым взносам на ОСС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 = Р1Прил2Ст20Гр03 + Р1Прил2Ст20Гр04 + Р1Прил2Ст20Гр05'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, Р1Прил2Ст20Гр03.Значение + Р1Прил2Ст20Гр04.Значение + Р1Прил2Ст20Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр03.ЗначениеСтр + " + " + Р1Прил2Ст20Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_206(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.206)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1) >= гр. 1 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за отчетный период меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 >= Р1Прил2Ст30Гр01'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст30Гр01 = ПоказательПоСтроке("Р1Прил2Ст30Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, Р1Прил2Ст30Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_207(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.207)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) >= гр. 2 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за последние три месяца отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению страховыми взносами на ОСС, за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 >= Р1Прил2Ст30Гр02'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, Р1Прил2Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_208(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.208)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 3 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 1-й последний месяц отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению по страховым взносам на ОСС, за 1-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр03 >= Р1Прил2Ст30Гр03'.
	
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст30Гр03 = ПоказательПоСтроке("Р1Прил2Ст30Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр03.Значение, Р1Прил2Ст30Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_209(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.209)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 4 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 2-й последний месяц отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению страховыми взносами на ОСС, за 2-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр04 >= Р1Прил2Ст30Гр04'.
	
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст30Гр04 = ПоказательПоСтроке("Р1Прил2Ст30Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр04.Значение, Р1Прил2Ст30Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_210(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.210)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 5 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 3-й последний месяц отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению страховыми взносами на ОСС, за 3-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр05 >= Р1Прил2Ст30Гр05'.
	
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст30Гр05 = ПоказательПоСтроке("Р1Прил2Ст30Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр05.Значение, Р1Прил2Ст30Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_211(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.211)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1) >= гр. 1 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за отчетный период меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 >= Р1Прил2Ст40Гр01'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст40Гр01 = ПоказательПоСтроке("Р1Прил2Ст40Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, Р1Прил2Ст40Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_212(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.212)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) >= гр. 2 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 3 последних месяца меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 3 последних месяца'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 >= Р1Прил2Ст40Гр02'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, Р1Прил2Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_213(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.213)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 3 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 1-й последний месяц меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр03 >= Р1Прил2Ст40Гр03'.
	
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст40Гр03 = ПоказательПоСтроке("Р1Прил2Ст40Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр03.Значение, Р1Прил2Ст40Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_214(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.214)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 4 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 2-й последний месяц меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр04 >= Р1Прил2Ст40Гр04'.
	
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст40Гр04 = ПоказательПоСтроке("Р1Прил2Ст40Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр04.Значение, Р1Прил2Ст40Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_215(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.215)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 5 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 3-й последний месяц меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр05 >= Р1Прил2Ст40Гр05'.
	
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст40Гр05 = ПоказательПоСтроке("Р1Прил2Ст40Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр05.Значение, Р1Прил2Ст40Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_216(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.216)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 прил. 2 р. 1 "
		+ "отчетного периода) = гр. 1 ст. 030 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 030 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОСС за отчетный период ≠ "
		+ "сумме выплат, не подлежащих обложению страховыми взносами на ОСС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст30Гр01 = Р1Прил2Ст30Гр01ПРП + Р1Прил2Ст30Гр02'.
	
	Р1Прил2Ст30Гр01 = ПоказательПоСтроке("Р1Прил2Ст30Гр01");
	Р1Прил2Ст30Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст30Гр01ПРП");
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст30Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст30Гр01.Значение, Р1Прил2Ст30Гр01ПРП.Значение + Р1Прил2Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст30Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст30Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_217(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.217)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "прил. 2 р. 1) = гр. 3 ст. 030 прил. 2 р. 1 + гр. 4 ст. 030 прил. 2 р. 1 + гр. 5 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОСС за последние три месяца "
		+ "отчетного периода ≠ сумме выплат, не подлежащих обложению страховыми взносами на ОСС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст30Гр02 = Р1Прил2Ст30Гр03 + Р1Прил2Ст30Гр04 + Р1Прил2Ст30Гр05'.
	
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	Р1Прил2Ст30Гр03 = ПоказательПоСтроке("Р1Прил2Ст30Гр03");
	Р1Прил2Ст30Гр04 = ПоказательПоСтроке("Р1Прил2Ст30Гр04");
	Р1Прил2Ст30Гр05 = ПоказательПоСтроке("Р1Прил2Ст30Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст30Гр02.Значение, Р1Прил2Ст30Гр03.Значение + Р1Прил2Ст30Гр04.Значение + Р1Прил2Ст30Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст30Гр03.ЗначениеСтр + " + " + Р1Прил2Ст30Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_218(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.218)'");
	ОписаниеКС     = НСтр("ru='Сумма, превышающая предельную величину базы для исчисления страховых взносов, всего (гр. "
		+ "1 ст. 040 прил. 2 р. 1 СВ отчетного периода) = гр. 1 ст. 040 прил. 2 р. 1 предыдущего отчетного периода + "
		+ "гр. 2 ст. 040 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, превышающих предельную базу по страховым взносам на ОСС за отчетный период "
		+ "≠ сумме выплат, превышающих предельную базу по страховым взносам на ОСС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст40Гр01 = Р1Прил2Ст40Гр01ПРП + Р1Прил2Ст40Гр02'.
	
	Р1Прил2Ст40Гр01 = ПоказательПоСтроке("Р1Прил2Ст40Гр01");
	Р1Прил2Ст40Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст40Гр01ПРП");
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст40Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст40Гр01.Значение, Р1Прил2Ст40Гр01ПРП.Значение + Р1Прил2Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст40Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст40Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_219(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.219)'");
	ОписаниеКС     = НСтр("ru='Сумма, превышающая предельную величину базы для исчисления страховых взносов за последние "
		+ "три месяца (гр. 2 ст. 040 прил. 2 р. 1) = гр. 3 ст. 040 прил. 2 р. 1 + гр. 4 ст. 040 прил. 2 р. 1 + гр. 5 "
		+ "ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, превышающих предельную базу по страховым взносам на ОСС за последние три "
		+ "месяца отчетного периода ≠ сумме выплат, превышающих предельную базу по страховым взносам на ОСС за каждый "
		+ "из трех месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст40Гр02 = Р1Прил2Ст40Гр03 + Р1Прил2Ст40Гр04 + Р1Прил2Ст40Гр05'.
	
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	Р1Прил2Ст40Гр03 = ПоказательПоСтроке("Р1Прил2Ст40Гр03");
	Р1Прил2Ст40Гр04 = ПоказательПоСтроке("Р1Прил2Ст40Гр04");
	Р1Прил2Ст40Гр05 = ПоказательПоСтроке("Р1Прил2Ст40Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст40Гр02.Значение, Р1Прил2Ст40Гр03.Значение + Р1Прил2Ст40Гр04.Значение + Р1Прил2Ст40Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст40Гр03.ЗначениеСтр + " + " + Р1Прил2Ст40Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_220(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.220)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 прил. 2 р. 1 СВ отчетного "
		+ "периода) = гр. 1 ст. 050 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 050 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за отчетный период ≠ сумме баз по страховым взносам на "
		+ "ОСС за предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр01 = Р1Прил2Ст50Гр01ПРП + Р1Прил2Ст50Гр02'.
	
	Р1Прил2Ст50Гр01 = ПоказательПоСтроке("Р1Прил2Ст50Гр01");
	Р1Прил2Ст50Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст50Гр01ПРП");
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст50Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр01.Значение, Р1Прил2Ст50Гр01ПРП.Значение + Р1Прил2Ст50Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст50Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст50Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_221(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.221)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 прил. 2 р. 1) = гр. 1 ст. 020 "
		+ "прил. 2 р. 1 - гр. 1 ст. 030 прил. 2 р. 1 - гр. 1 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы по страховым "
		+ "взносам на ОСС, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр01 = Р1Прил2Ст20Гр01 - Р1Прил2Ст30Гр01 - Р1Прил2Ст40Гр01'.
	
	Р1Прил2Ст50Гр01 = ПоказательПоСтроке("Р1Прил2Ст50Гр01");
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст30Гр01 = ПоказательПоСтроке("Р1Прил2Ст30Гр01");
	Р1Прил2Ст40Гр01 = ПоказательПоСтроке("Р1Прил2Ст40Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр01.Значение, Р1Прил2Ст20Гр01.Значение - Р1Прил2Ст30Гр01.Значение - Р1Прил2Ст40Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр01.ЗначениеСтр + " - " + Р1Прил2Ст30Гр01.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_222(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.222)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 прил. 2 р. "
		+ "1) = гр. 2 ст. 020 прил. 2 р. 1 - гр. 2 ст. 030 прил. 2 р. 1 - гр. 2 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3 последних месяца ≠ разнице всех выплат и выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы по страховым "
		+ "взносам на ОСС, за 3 последних месяца'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр02 = Р1Прил2Ст20Гр02 - Р1Прил2Ст30Гр02 - Р1Прил2Ст40Гр02'.
	
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр02.Значение, Р1Прил2Ст20Гр02.Значение - Р1Прил2Ст30Гр02.Значение - Р1Прил2Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр02.ЗначениеСтр + " - " + Р1Прил2Ст30Гр02.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_223(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.223)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 прил. 2 р. 1) = гр. 3 ст. "
		+ "020 прил. 2 р. 1 - гр. 3 ст. 030 прил. 2 р. 1 - гр. 3 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 1-й из 3 последних месяцев ≠ разнице всех выплат и "
		+ "выплат, не подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы "
		+ "по страховым взносам на ОСС, за 1-й из 3 последних месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр03 = Р1Прил2Ст20Гр03 - Р1Прил2Ст30Гр03 - Р1Прил2Ст40Гр03'.
	
	Р1Прил2Ст50Гр03 = ПоказательПоСтроке("Р1Прил2Ст50Гр03");
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст30Гр03 = ПоказательПоСтроке("Р1Прил2Ст30Гр03");
	Р1Прил2Ст40Гр03 = ПоказательПоСтроке("Р1Прил2Ст40Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр03.Значение, Р1Прил2Ст20Гр03.Значение - Р1Прил2Ст30Гр03.Значение - Р1Прил2Ст40Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр03.ЗначениеСтр + " - " + Р1Прил2Ст30Гр03.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_224(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.224)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 прил. 2 р. 1) = гр. 4 ст. "
		+ "020 прил. 2 р. 1 - гр. 4 ст. 030 прил. 2 р. 1 - гр. 4 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 2-й из 3 последних месяцев ≠ разнице всех выплат и "
		+ "выплат, не подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы "
		+ "по страховым взносам на ОСС, за 2-й из 3 последних месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр04 = Р1Прил2Ст20Гр04 - Р1Прил2Ст30Гр04 - Р1Прил2Ст40Гр04'.
	
	Р1Прил2Ст50Гр04 = ПоказательПоСтроке("Р1Прил2Ст50Гр04");
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст30Гр04 = ПоказательПоСтроке("Р1Прил2Ст30Гр04");
	Р1Прил2Ст40Гр04 = ПоказательПоСтроке("Р1Прил2Ст40Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр04.Значение, Р1Прил2Ст20Гр04.Значение - Р1Прил2Ст30Гр04.Значение - Р1Прил2Ст40Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр04.ЗначениеСтр + " - " + Р1Прил2Ст30Гр04.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_225(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.225)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 прил. 2 р. 1) = гр. 5 ст. "
		+ "020 прил. 2 р. 1 - гр. 5 ст. 030 прил. 2 р. 1 - гр. 5 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3-й из 3 последних месяцев ≠ разнице всех выплат и "
		+ "выплат, не подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы "
		+ "по страховым взносам на ОСС, за 3-й из 3 последних месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр05 = Р1Прил2Ст20Гр05 - Р1Прил2Ст30Гр05 - Р1Прил2Ст40Гр05'.
	
	Р1Прил2Ст50Гр05 = ПоказательПоСтроке("Р1Прил2Ст50Гр05");
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст30Гр05 = ПоказательПоСтроке("Р1Прил2Ст30Гр05");
	Р1Прил2Ст40Гр05 = ПоказательПоСтроке("Р1Прил2Ст40Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр05.Значение, Р1Прил2Ст20Гр05.Значение - Р1Прил2Ст30Гр05.Значение - Р1Прил2Ст40Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр05.ЗначениеСтр + " - " + Р1Прил2Ст30Гр05.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_226(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.226)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 прил. 2 р. 1) >= гр. 1 ст. "
		+ "051 прил. 2 р. 1 + гр. 1 ст. 052 прил. 2 р. 1 + гр. 1 ст. 053 прил. 2 р. 1 + гр. 1 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за отчетный период меньше суммы всех выплат по строкам "
		+ "051, 052, 053, 054 за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр01 >= Р1Прил2Ст51Гр01 + Р1Прил2Ст52Гр01 + Р1Прил2Ст53Гр01 + Р1Прил2Ст54Гр01'.
	
	Р1Прил2Ст50Гр01 = ПоказательПоСтроке("Р1Прил2Ст50Гр01");
	Р1Прил2Ст51Гр01 = ПоказательПоСтроке("Р1Прил2Ст51Гр01");
	Р1Прил2Ст52Гр01 = ПоказательПоСтроке("Р1Прил2Ст52Гр01");
	Р1Прил2Ст53Гр01 = ПоказательПоСтроке("Р1Прил2Ст53Гр01");
	Р1Прил2Ст54Гр01 = ПоказательПоСтроке("Р1Прил2Ст54Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр01.Значение, Р1Прил2Ст51Гр01.Значение + Р1Прил2Ст52Гр01.Значение
		+ Р1Прил2Ст53Гр01.Значение + Р1Прил2Ст54Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр01.ЗначениеСтр + " + " + Р1Прил2Ст52Гр01.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр01.ЗначениеСтр + " + " + Р1Прил2Ст54Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_227(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.227)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 прил. 2 р. "
		+ "1) >= гр. 2 ст. 051 прил. 2 р. 1 + гр. 2 ст. 052 прил. 2 р. 1 + гр. 2 ст. 053 прил. 2 р. 1 + гр. 2 ст. 054 "
		+ "прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3 последних месяца отчетного периода меньше суммы "
		+ "всех выплат по строкам 051, 052, 053, 054 за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр02 >= Р1Прил2Ст51Гр02 + Р1Прил2Ст52Гр02 + Р1Прил2Ст53Гр02 + Р1Прил2Ст54Гр02'.
	
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	Р1Прил2Ст51Гр02 = ПоказательПоСтроке("Р1Прил2Ст51Гр02");
	Р1Прил2Ст52Гр02 = ПоказательПоСтроке("Р1Прил2Ст52Гр02");
	Р1Прил2Ст53Гр02 = ПоказательПоСтроке("Р1Прил2Ст53Гр02");
	Р1Прил2Ст54Гр02 = ПоказательПоСтроке("Р1Прил2Ст54Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр02.Значение, Р1Прил2Ст51Гр02.Значение + Р1Прил2Ст52Гр02.Значение
		+ Р1Прил2Ст53Гр02.Значение + Р1Прил2Ст54Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр02.ЗначениеСтр + " + " + Р1Прил2Ст52Гр02.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр02.ЗначениеСтр + " + " + Р1Прил2Ст54Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_228(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.228)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 прил. 2 р. 1) >= гр. 3 "
		+ "ст. 051 прил. 2 р. 1 + гр. 3 ст. 052 прил. 2 р. 1 + гр. 3 ст. 053 прил. 2 р. 1 + гр. 3 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 1-й из 3-х последних месяцев отчетного периода меньше "
		+ "суммы всех выплат по строкам 051, 052, 053, 054 за 1-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр03 >= Р1Прил2Ст51Гр03 + Р1Прил2Ст52Гр03 + Р1Прил2Ст53Гр03 + Р1Прил2Ст54Гр03'.
	
	Р1Прил2Ст50Гр03 = ПоказательПоСтроке("Р1Прил2Ст50Гр03");
	Р1Прил2Ст51Гр03 = ПоказательПоСтроке("Р1Прил2Ст51Гр03");
	Р1Прил2Ст52Гр03 = ПоказательПоСтроке("Р1Прил2Ст52Гр03");
	Р1Прил2Ст53Гр03 = ПоказательПоСтроке("Р1Прил2Ст53Гр03");
	Р1Прил2Ст54Гр03 = ПоказательПоСтроке("Р1Прил2Ст54Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр03.Значение, Р1Прил2Ст51Гр03.Значение + Р1Прил2Ст52Гр03.Значение
		+ Р1Прил2Ст53Гр03.Значение + Р1Прил2Ст54Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр03.ЗначениеСтр + " + " + Р1Прил2Ст52Гр03.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр03.ЗначениеСтр + " + " + Р1Прил2Ст54Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_229(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.229)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 прил. 2 р. 1) >= гр. 4 "
		+ "ст. 051 прил. 2 р. 1 + гр. 4 ст. 052 прил. 2 р. 1 + гр. 4 ст. 053 прил. 2 р. 1 + гр. 4 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 2-й из 3-х последних месяцев отчетного периода меньше "
		+ "суммы всех выплат по строкам 051, 052, 053, 054 за 2-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр04 >= Р1Прил2Ст51Гр04 + Р1Прил2Ст52Гр04 + Р1Прил2Ст53Гр04 + Р1Прил2Ст54Гр04'.
	
	Р1Прил2Ст50Гр04 = ПоказательПоСтроке("Р1Прил2Ст50Гр04");
	Р1Прил2Ст51Гр04 = ПоказательПоСтроке("Р1Прил2Ст51Гр04");
	Р1Прил2Ст52Гр04 = ПоказательПоСтроке("Р1Прил2Ст52Гр04");
	Р1Прил2Ст53Гр04 = ПоказательПоСтроке("Р1Прил2Ст53Гр04");
	Р1Прил2Ст54Гр04 = ПоказательПоСтроке("Р1Прил2Ст54Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр04.Значение, Р1Прил2Ст51Гр04.Значение + Р1Прил2Ст52Гр04.Значение
		+ Р1Прил2Ст53Гр04.Значение + Р1Прил2Ст54Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр04.ЗначениеСтр + " + " + Р1Прил2Ст52Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр04.ЗначениеСтр + " + " + Р1Прил2Ст54Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_230(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.230)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 прил. 2 р. 1) >= гр. 5 "
		+ "ст. 051 прил. 2 р. 1 + гр. 5 ст. 052 прил. 2 р. 1 + гр. 5 ст. 053 прил. 2 р. 1 + гр. 5 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3-й из 3-х последних месяцев отчетного периода меньше "
		+ "суммы всех выплат по строкам 051, 052, 053, 054 за 3-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр05 >= Р1Прил2Ст51Гр05 + Р1Прил2Ст52Гр05 + Р1Прил2Ст53Гр05 + Р1Прил2Ст54Гр05'.
	
	Р1Прил2Ст50Гр05 = ПоказательПоСтроке("Р1Прил2Ст50Гр05");
	Р1Прил2Ст51Гр05 = ПоказательПоСтроке("Р1Прил2Ст51Гр05");
	Р1Прил2Ст52Гр05 = ПоказательПоСтроке("Р1Прил2Ст52Гр05");
	Р1Прил2Ст53Гр05 = ПоказательПоСтроке("Р1Прил2Ст53Гр05");
	Р1Прил2Ст54Гр05 = ПоказательПоСтроке("Р1Прил2Ст54Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр05.Значение, Р1Прил2Ст51Гр05.Значение + Р1Прил2Ст52Гр05.Значение
		+ Р1Прил2Ст53Гр05.Значение + Р1Прил2Ст54Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр05.ЗначениеСтр + " + " + Р1Прил2Ст52Гр05.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр05.ЗначениеСтр + " + " + Р1Прил2Ст54Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_231(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.231)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 прил. 2 р. "
		+ "1) = гр. 3 ст. 050 прил. 2 р. 1 + гр. 4 ст. 050 прил. 2 р. 1 + гр. 5 ст. 050 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за последние три месяца отчетного периода ≠ база по "
		+ "страховым взносам на ОСС за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр02 = Р1Прил2Ст50Гр03 + Р1Прил2Ст50Гр04 + Р1Прил2Ст50Гр05'.
	
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	Р1Прил2Ст50Гр03 = ПоказательПоСтроке("Р1Прил2Ст50Гр03");
	Р1Прил2Ст50Гр04 = ПоказательПоСтроке("Р1Прил2Ст50Гр04");
	Р1Прил2Ст50Гр05 = ПоказательПоСтроке("Р1Прил2Ст50Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр02.Значение, Р1Прил2Ст50Гр03.Значение + Р1Прил2Ст50Гр04.Значение + Р1Прил2Ст50Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст50Гр03.ЗначениеСтр + " + " + Р1Прил2Ст50Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_232(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.232)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, производимых аптечными организациями и "
		+ "индивидуальными предпринимателями, имеющиими лицензию на фармацевтическую деятельность, всего ( гр. 1 ст. "
		+ "051 прил. 2 р. 1 отчетного периода) = гр. 1 ст. 051 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. "
		+ "051 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат работодателями, осуществляющими "
		+ "фармацевтическую деятельность, за отчетный период ≠ сумме баз по страховым взносам на ОСС в части выплат "
		+ "работодателями, осуществляющими фармацевтическую деятельность, за предыдущий отчетный период и за три "
		+ "последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст51Гр01 = Р1Прил2Ст51Гр01ПРП + Р1Прил2Ст51Гр02'.
	
	Р1Прил2Ст51Гр01 = ПоказательПоСтроке("Р1Прил2Ст51Гр01");
	Р1Прил2Ст51Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст51Гр01ПРП");
	Р1Прил2Ст51Гр02 = ПоказательПоСтроке("Р1Прил2Ст51Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст51Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст51Гр01.Значение, Р1Прил2Ст51Гр01ПРП.Значение + Р1Прил2Ст51Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст51Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст51Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_233(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.233)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, производимых аптечными организациями и "
		+ "индивидуальными предпринимателями, имеющиими лицензию на фармацевтическую деятельность за последние три "
		+ "месяца (гр. 2 ст. 051 прил. 2 р. 1) = гр. 3 ст. 051 прил. 2 р. 1 + гр. 4 ст. 051 прил. 2 р. 1 + гр. 5 ст. "
		+ "051 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат работодателями, осуществляющими "
		+ "фармацевтическую деятельность, за последние три месяца отчетного периода ≠ сумме баз по СВ на ОСС в части "
		+ "выплат работодателями, осуществляющими фармацевтическую деятельность, за каждый из трех последних месяцев "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст51Гр02 = Р1Прил2Ст51Гр03 + Р1Прил2Ст51Гр04 + Р1Прил2Ст51Гр05'.
	
	Р1Прил2Ст51Гр02 = ПоказательПоСтроке("Р1Прил2Ст51Гр02");
	Р1Прил2Ст51Гр03 = ПоказательПоСтроке("Р1Прил2Ст51Гр03");
	Р1Прил2Ст51Гр04 = ПоказательПоСтроке("Р1Прил2Ст51Гр04");
	Р1Прил2Ст51Гр05 = ПоказательПоСтроке("Р1Прил2Ст51Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст51Гр02.Значение, Р1Прил2Ст51Гр03.Значение + Р1Прил2Ст51Гр04.Значение + Р1Прил2Ст51Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст51Гр03.ЗначениеСтр + " + " + Р1Прил2Ст51Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст51Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_234(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.234)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений членам экипажей судов, всего (гр. 1 ст. 052 прил. 2 р. "
		+ "1 отчетного периода) = гр. 1 ст. 052 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 052 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат членам экипажей судов, за отчетный период "
		+ "≠ сумме баз по страховым взносам на ОСС в части выплат членам экипажей судов, за предыдущий отчетный период "
		+ "и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст52Гр01 = Р1Прил2Ст52Гр01ПРП + Р1Прил2Ст52Гр02'.
	
	Р1Прил2Ст52Гр01 = ПоказательПоСтроке("Р1Прил2Ст52Гр01");
	Р1Прил2Ст52Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст52Гр01ПРП");
	Р1Прил2Ст52Гр02 = ПоказательПоСтроке("Р1Прил2Ст52Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст52Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст52Гр01.Значение, Р1Прил2Ст52Гр01ПРП.Значение + Р1Прил2Ст52Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст52Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст52Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_235(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.235)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений членам экипажей судов за последние три месяца (гр. 2 "
		+ "ст. 052 прил. 2 р. 1) = гр. 3 ст. 052 прил. 2 р. 1 + гр. 4 ст. 052 прил. 2 р. 1 + гр. 5 ст. 052 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат членам экипажей судов, за последние три "
		+ "месяца отчетного периода ≠ сумме баз по страховым взносам на ОСС в части выплат членам экипажей судов, за "
		+ "каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст52Гр02 = Р1Прил2Ст52Гр03 + Р1Прил2Ст52Гр04 + Р1Прил2Ст52Гр05'.
	
	Р1Прил2Ст52Гр02 = ПоказательПоСтроке("Р1Прил2Ст52Гр02");
	Р1Прил2Ст52Гр03 = ПоказательПоСтроке("Р1Прил2Ст52Гр03");
	Р1Прил2Ст52Гр04 = ПоказательПоСтроке("Р1Прил2Ст52Гр04");
	Р1Прил2Ст52Гр05 = ПоказательПоСтроке("Р1Прил2Ст52Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст52Гр02.Значение, Р1Прил2Ст52Гр03.Значение + Р1Прил2Ст52Гр04.Значение + Р1Прил2Ст52Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст52Гр03.ЗначениеСтр + " + " + Р1Прил2Ст52Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст52Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_236(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.236)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, занятых в виде "
		+ "экономической деятельности, указанном в патенте, всего (гр. 1 ст. 053 прил. 2 р. 1 отчетного периода) = гр. "
		+ "1 ст. 053 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 053 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат по видам деятельности, указанным в "
		+ "патенте, за отчетный период ≠ сумме баз по страховым взносам на ОСС в части выплат по видам деятельности, "
		+ "указанным в патенте, за предыдущий отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст53Гр01 = Р1Прил2Ст53Гр01ПРП + Р1Прил2Ст53Гр02'.
	
	Р1Прил2Ст53Гр01 = ПоказательПоСтроке("Р1Прил2Ст53Гр01");
	Р1Прил2Ст53Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст53Гр01ПРП");
	Р1Прил2Ст53Гр02 = ПоказательПоСтроке("Р1Прил2Ст53Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст53Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст53Гр01.Значение, Р1Прил2Ст53Гр01ПРП.Значение + Р1Прил2Ст53Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст53Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст53Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_237(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.237)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, занятых в виде "
		+ "экономической деятельности, указанном в патенте за последние три месяца (гр. 2 ст. 053 прил. 2 р. 1) = гр. 3 "
		+ "ст. 053 прил. 2 р. 1 + гр. 4 ст. 053 прил. 2 р. 1 + гр. 5 ст. 053 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат по видам деятельности, указанным в "
		+ "патенте, за последние три месяца отчетного периода ≠ сумме баз по страховым взносам на ОСС в части выплат по "
		+ "видам деятельности, указанным в патенте, за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст53Гр02 = Р1Прил2Ст53Гр03 + Р1Прил2Ст53Гр04 + Р1Прил2Ст53Гр05'.
	
	Р1Прил2Ст53Гр02 = ПоказательПоСтроке("Р1Прил2Ст53Гр02");
	Р1Прил2Ст53Гр03 = ПоказательПоСтроке("Р1Прил2Ст53Гр03");
	Р1Прил2Ст53Гр04 = ПоказательПоСтроке("Р1Прил2Ст53Гр04");
	Р1Прил2Ст53Гр05 = ПоказательПоСтроке("Р1Прил2Ст53Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст53Гр02.Значение, Р1Прил2Ст53Гр03.Значение + Р1Прил2Ст53Гр04.Значение + Р1Прил2Ст53Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст53Гр03.ЗначениеСтр + " + " + Р1Прил2Ст53Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_238(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.238)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу иностранных граждан и лиц без "
		+ "гражданства, всего (гр. 1 ст. 054 прил. 2 р. 1 отчетного периода) = гр. 1 ст. 054 прил. 2 р. 1 предыдущего "
		+ "отчетного периода + гр. 2 ст. 054 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат в пользу временно пребывающих иностранных "
		+ "граждан, за отчетный период ≠ сумме баз по страховым взносам на ОСС в части выплат в пользу временно "
		+ "пребывающих иностранных граждан, за предыдущий отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст54Гр01 = Р1Прил2Ст54Гр01ПРП + Р1Прил2Ст54Гр02'.
	
	Р1Прил2Ст54Гр01 = ПоказательПоСтроке("Р1Прил2Ст54Гр01");
	Р1Прил2Ст54Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст54Гр01ПРП");
	Р1Прил2Ст54Гр02 = ПоказательПоСтроке("Р1Прил2Ст54Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст54Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст54Гр01.Значение, Р1Прил2Ст54Гр01ПРП.Значение + Р1Прил2Ст54Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст54Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст54Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_239(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.239)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу иностранных граждан и лиц без "
		+ "гражданства за последние три месяца (гр. 2 ст. 054 прил. 2 р. 1) = гр. 3 ст. 054 прил. 2 р. 1 + гр. 4 ст. "
		+ "054 прил. 2 р. 1 + гр. 5 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат в пользу временно пребывающих иностранных "
		+ "граждан, за последние три месяца отчетного периода ≠ сумме баз по страховым взносам на ОСС в части выплат в "
		+ "пользу временно пребывающих иностранных граждан, за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст54Гр02 = Р1Прил2Ст54Гр03 + Р1Прил2Ст54Гр04 + Р1Прил2Ст54Гр05'.
	
	Р1Прил2Ст54Гр02 = ПоказательПоСтроке("Р1Прил2Ст54Гр02");
	Р1Прил2Ст54Гр03 = ПоказательПоСтроке("Р1Прил2Ст54Гр03");
	Р1Прил2Ст54Гр04 = ПоказательПоСтроке("Р1Прил2Ст54Гр04");
	Р1Прил2Ст54Гр05 = ПоказательПоСтроке("Р1Прил2Ст54Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст54Гр02.Значение, Р1Прил2Ст54Гр03.Значение + Р1Прил2Ст54Гр04.Значение + Р1Прил2Ст54Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст54Гр03.ЗначениеСтр + " + " + Р1Прил2Ст54Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст54Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_240(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.240)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 прил. 2 р. 1 отчетного периода) = гр. 1 "
		+ "ст. 060 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 060 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОСС за отчетный период ≠ сумме страховых взносов на ОСС за предыдущий "
		+ "отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст60Гр01 = Р1Прил2Ст60Гр01ПРП + Р1Прил2Ст60Гр02'.
	
	Р1Прил2Ст60Гр01 = ПоказательПоСтроке("Р1Прил2Ст60Гр01");
	Р1Прил2Ст60Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст60Гр01ПРП");
	Р1Прил2Ст60Гр02 = ПоказательПоСтроке("Р1Прил2Ст60Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст60Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст60Гр01.Значение, Р1Прил2Ст60Гр01ПРП.Значение + Р1Прил2Ст60Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст60Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст60Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_241(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.241)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 прил. 2 р. 1) = гр. 3 "
		+ "ст. 060 прил. 2 р. 1 + гр. 4 ст. 060 прил. 2 р. 1 + гр. 5 ст. 060 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОСС за последние три месяца отчетного периода ≠ сумме страховых "
		+ "взносов на ОСС за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст60Гр02 = Р1Прил2Ст60Гр03 + Р1Прил2Ст60Гр04 + Р1Прил2Ст60Гр05'.
	
	Р1Прил2Ст60Гр02 = ПоказательПоСтроке("Р1Прил2Ст60Гр02");
	Р1Прил2Ст60Гр03 = ПоказательПоСтроке("Р1Прил2Ст60Гр03");
	Р1Прил2Ст60Гр04 = ПоказательПоСтроке("Р1Прил2Ст60Гр04");
	Р1Прил2Ст60Гр05 = ПоказательПоСтроке("Р1Прил2Ст60Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст60Гр02.Значение, Р1Прил2Ст60Гр03.Значение + Р1Прил2Ст60Гр04.Значение + Р1Прил2Ст60Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст60Гр03.ЗначениеСтр + " + " + Р1Прил2Ст60Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_242(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.242)'");
	ОписаниеКС     = НСтр("ru='Произведено расходов на выплату страхового обеспечения, всего (гр. 1 ст. 070 прил. 2 р. 1 "
		+ "отчетного периода) = гр. 1 ст. 070 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 070 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Расходы на выплату СО за отчетный период ≠ сумме расходов на выплату СО за предыдущий "
		+ "отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст70Гр01 = Р1Прил2Ст70Гр01ПРП + Р1Прил2Ст70Гр02'.
	
	Р1Прил2Ст70Гр01 = ПоказательПоСтроке("Р1Прил2Ст70Гр01");
	Р1Прил2Ст70Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст70Гр01ПРП");
	Р1Прил2Ст70Гр02 = ПоказательПоСтроке("Р1Прил2Ст70Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст70Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст70Гр01.Значение, Р1Прил2Ст70Гр01ПРП.Значение + Р1Прил2Ст70Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст70Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст70Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_243(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.243)'");
	ОписаниеКС     = НСтр("ru='Произведено расходов на выплату страхового обеспечения за последние три месяца (гр. 2 ст. "
		+ "070 прил. 2 р. 1) = гр. 3 ст. 070 прил. 2 р. 1 + гр. 4 ст. 070 прил. 2 р. 1 + гр. 5 ст. 070 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Расходы на выплату СО за последние три месяца отчетного периода ≠ сумме расходов на "
		+ "выплату СО за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст70Гр02 = Р1Прил2Ст70Гр03 + Р1Прил2Ст70Гр04 + Р1Прил2Ст70Гр05'.
	
	Р1Прил2Ст70Гр02 = ПоказательПоСтроке("Р1Прил2Ст70Гр02");
	Р1Прил2Ст70Гр03 = ПоказательПоСтроке("Р1Прил2Ст70Гр03");
	Р1Прил2Ст70Гр04 = ПоказательПоСтроке("Р1Прил2Ст70Гр04");
	Р1Прил2Ст70Гр05 = ПоказательПоСтроке("Р1Прил2Ст70Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст70Гр02.Значение, Р1Прил2Ст70Гр03.Значение + Р1Прил2Ст70Гр04.Значение + Р1Прил2Ст70Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст70Гр03.ЗначениеСтр + " + " + Р1Прил2Ст70Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст70Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_244(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.244)'");
	ОписаниеКС     = НСтр("ru='Возмещено ФСС расходов на выплату страхового обеспечения, всего (гр. 1 ст. 080 прил. 2 р. "
		+ "1 отчетного периода) = гр. 1 ст. 080 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 080 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных ФСС расходов на выплату СО за отчетный период ≠ сумме возмещенных ФСС "
		+ "расходов на выплату СО за предыдущий отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр01 = Р1Прил2Ст80Гр01ПРП + Р1Прил2Ст80Гр02'.
	
	Р1Прил2Ст80Гр01 = ПоказательПоСтроке("Р1Прил2Ст80Гр01");
	Р1Прил2Ст80Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст80Гр01ПРП");
	Р1Прил2Ст80Гр02 = ПоказательПоСтроке("Р1Прил2Ст80Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст80Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр01.Значение, Р1Прил2Ст80Гр01ПРП.Значение + Р1Прил2Ст80Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст80Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст80Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_245(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.245)'");
	ОписаниеКС     = НСтр("ru='Возмещено ФСС расходов на выплату страхового обеспечения за последние три месяца (гр. 2 "
		+ "ст. 080 прил. 2 р. 1) = гр. 3 ст. 080 прил. 2 р. 1 + гр. 4 ст. 080 прил. 2 р. 1 + гр. 5 ст. 080 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных ФСС расходов на выплату СО за последние три месяца отчетного периода ≠ "
		+ "сумме возмещенных ФСС расходов на выплату СО за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр02 = Р1Прил2Ст80Гр03 + Р1Прил2Ст80Гр04 + Р1Прил2Ст80Гр05'.
	
	Р1Прил2Ст80Гр02 = ПоказательПоСтроке("Р1Прил2Ст80Гр02");
	Р1Прил2Ст80Гр03 = ПоказательПоСтроке("Р1Прил2Ст80Гр03");
	Р1Прил2Ст80Гр04 = ПоказательПоСтроке("Р1Прил2Ст80Гр04");
	Р1Прил2Ст80Гр05 = ПоказательПоСтроке("Р1Прил2Ст80Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр02.Значение, Р1Прил2Ст80Гр03.Значение + Р1Прил2Ст80Гр04.Значение + Р1Прил2Ст80Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст80Гр03.ЗначениеСтр + " + " + Р1Прил2Ст80Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст80Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_246(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.246)'");
	ОписаниеКС     = НСтр("ru='Средняя численность работников / среднесписочная численность работников в гр. 2 ст. 010 "
		+ "прил. 5 р. 1 >= 7'");
	ОписаниеОшибки = НСтр("ru='Средняя численность работников плательщиков, применяющих пониженный тариф (пп.3 п.1 "
		+ "ст.427 НК РФ), по итогам 9 месяцев предыдущего года меньше 7'");
	
	// Формула КС кратко: 'Р1Прил5Ст10Гр02 >= 7'.
	
	Р1Прил5Ст10Гр02 = ПоказательПоСтроке("Р1Прил5Ст10Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст10Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст10Гр02.Значение, 7);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_247(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.247)'");
	ОписаниеКС     = НСтр("ru='Средняя численность работников / среднесписочная численность работников в гр. 3 ст. 010 "
		+ "прил. 5 р. 1 >= 7'");
	ОписаниеОшибки = НСтр("ru='Среднесписочная численность работников плательщиков, применяющих пониженный тариф (пп.3 "
		+ "п.1 ст.427 НК РФ), по итогам отчетного периода меньше 7'");
	
	// Формула КС кратко: 'Р1Прил5Ст10Гр03 >= 7'.
	
	Р1Прил5Ст10Гр03 = ПоказательПоСтроке("Р1Прил5Ст10Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст10Гр03, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст10Гр03.Значение, 7);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_248(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.248)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов, определяемая исходя из критериев, указанных в п.5 ст.427 НК РФ в гр. 2 ст. "
		+ "020 прил. 5 р. 1 >= гр. 2 ст. 030 прил. 5 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. "
		+ "по ст.248, за 9 месяцев предыдущего года меньше суммы доходов плательщиков, применяющих пониженный тариф "
		+ "(пп.3 п.1 ст.427 НК РФ), опред. по п.5 ст.427, за 9 месяцев предыдущего года'");
	
	// Формула КС кратко: 'Р1Прил5Ст20Гр02 >= Р1Прил5Ст30Гр02'.
	
	Р1Прил5Ст20Гр02 = ПоказательПоСтроке("Р1Прил5Ст20Гр02");
	Р1Прил5Ст30Гр02 = ПоказательПоСтроке("Р1Прил5Ст30Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст20Гр02.Значение, Р1Прил5Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_249(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.249)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов, определяемая исходя из критериев, указанных в п.5 ст.427 НК РФ в гр. 3 ст. "
		+ "020 прил. 5 р. 1 >= гр. 3 ст. 030 прил. 5 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. "
		+ "по ст.248, за отчетный период меньше суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 "
		+ "ст.427 НК РФ), опред. по п.5 ст.427, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил5Ст20Гр03 >= Р1Прил5Ст30Гр03'.
	
	Р1Прил5Ст20Гр03 = ПоказательПоСтроке("Р1Прил5Ст20Гр03");
	Р1Прил5Ст30Гр03 = ПоказательПоСтроке("Р1Прил5Ст30Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр03, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр03, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст20Гр03.Значение, Р1Прил5Ст30Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_250(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.250)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 2 ст. 040 прил. 5 "
		+ "р. 1 = гр. 2 ст. 030 прил. 5 р. 1 / гр. 2 ст. 020 прил. 5 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за 9 месяцев предыдущего "
		+ "года ≠ частному от суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. "
		+ "по п.5 ст.427 НК РФ, и суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), "
		+ "опред. по ст.248 НК РФ, за 9 месяцев предыдущего года, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр02 = Р1Прил5Ст30Гр02 / Р1Прил5Ст20Гр02 * 100, когда Р1Прил5Ст20Гр02 > 0'.
	
	Р1Прил5Ст40Гр02 = ПоказательПоСтроке("Р1Прил5Ст40Гр02");
	Р1Прил5Ст30Гр02 = ПоказательПоСтроке("Р1Прил5Ст30Гр02");
	Р1Прил5Ст20Гр02 = ПоказательПоСтроке("Р1Прил5Ст20Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр02, "Раздел1Прил5_6");
	
	УсловиеВыполнено = Р1Прил5Ст20Гр02.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр02.Значение,
		?(УсловиеВыполнено, Окр(Р1Прил5Ст30Гр02.Значение / Р1Прил5Ст20Гр02.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил5Ст30Гр02.ЗначениеСтр + " / " + Р1Прил5Ст20Гр02.ЗначениеСтр
		+ " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда " + Р1Прил5Ст20Гр02.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_251(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.251)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 3 ст. 040 прил. 5 "
		+ "р. 1 = гр. 3 ст. 030 прил. 5 р. 1 / гр. 3 ст. 020 прил. 5 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за отчетный период ≠ "
		+ "частному от суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427), опред. по п.5 ст.427 "
		+ "НК РФ, и суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. по ст.248, "
		+ "за отчетный период, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр03 = Р1Прил5Ст30Гр03 / Р1Прил5Ст20Гр03 * 100, когда Р1Прил5Ст20Гр03 > 0'.
	
	Р1Прил5Ст40Гр03 = ПоказательПоСтроке("Р1Прил5Ст40Гр03");
	Р1Прил5Ст30Гр03 = ПоказательПоСтроке("Р1Прил5Ст30Гр03");
	Р1Прил5Ст20Гр03 = ПоказательПоСтроке("Р1Прил5Ст20Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр03, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр03, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр03, "Раздел1Прил5_6");
	
	УсловиеВыполнено = Р1Прил5Ст20Гр03.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр03.Значение,
		?(УсловиеВыполнено, Окр(Р1Прил5Ст30Гр03.Значение / Р1Прил5Ст20Гр03.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил5Ст30Гр03.ЗначениеСтр + " / " + Р1Прил5Ст20Гр03.ЗначениеСтр
		+ " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда " + Р1Прил5Ст20Гр03.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_252(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.252)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 2 ст. 040 прил. 5 "
		+ "р. 1 >= 90'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за 9 месяцев предыдущего "
		+ "года меньше 90'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр02 >= 90'.
	
	Р1Прил5Ст40Гр02 = ПоказательПоСтроке("Р1Прил5Ст40Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр02.Значение, 90);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_253(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.253)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 3 ст. 040 прил. 5 "
		+ "р. 1 >= 90'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за отчетный период меньше 90'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр03 >= 90'.
	
	Р1Прил5Ст40Гр03 = ПоказательПоСтроке("Р1Прил5Ст40Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр03, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр03.Значение, 90);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_254(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.254)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов в ст. 060 прил. 6 р. 1 >= Суммы доходов в ст. 070 прил. 6 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп.5 п.1 ст.427 НК РФ), опред. "
		+ "по ст.346.15 НК РФ, за отчетный период меньше суммы доходов плательщиков, применяющих пониженный тариф (пп.5 "
		+ "п.1 ст.427 НК РФ), опред. по п.6 ст.427 НК РФ, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил5Ст60Гр02 >= Р1Прил5Ст70Гр02'.
	
	Р1Прил5Ст60Гр02 = ПоказательПоСтроке("Р1Прил5Ст60Гр02");
	Р1Прил5Ст70Гр02 = ПоказательПоСтроке("Р1Прил5Ст70Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст60Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст70Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст60Гр02.Значение, Р1Прил5Ст70Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_255(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.255)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст. 427 НК РФ в ст. 080 прил. 6 р. 1 = "
		+ "ст. 070 прил. 6 р. 1 / ст. 060 прил. 6 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст.427 НК РФ, за отчетный период ≠ "
		+ "частному от суммы доходов плательщиков, применяющих пониженный тариф (пп.5 п.1 ст.427 НК РФ), опред. по п.6 "
		+ "ст.427 НК РФ, и суммы доходов плательщиков, применяющих пониженный тариф (пп.5 п.1 ст.427 НК РФ), опред. по "
		+ "ст.346.15 НК РФ, за отчетный период, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил5Ст80Гр02 = Р1Прил5Ст70Гр02 / Р1Прил5Ст60Гр02 * 100, когда Р1Прил5Ст60Гр02 > 0'.
	
	Р1Прил5Ст80Гр02 = ПоказательПоСтроке("Р1Прил5Ст80Гр02");
	Р1Прил5Ст70Гр02 = ПоказательПоСтроке("Р1Прил5Ст70Гр02");
	Р1Прил5Ст60Гр02 = ПоказательПоСтроке("Р1Прил5Ст60Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст80Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст70Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст60Гр02, "Раздел1Прил5_6");
	
	УсловиеВыполнено = Р1Прил5Ст60Гр02.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил5Ст80Гр02.Значение,
		?(УсловиеВыполнено, Окр(Р1Прил5Ст70Гр02.Значение / Р1Прил5Ст60Гр02.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил5Ст70Гр02.ЗначениеСтр + " / " + Р1Прил5Ст60Гр02.ЗначениеСтр
		+ " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда " + Р1Прил5Ст60Гр02.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_256(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.256)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст. 427 НК РФ в ст. 080 прил. 6 р. 1 СВ "
		+ ">= 70'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст.427 НК РФ, за отчетный период меньше 70'");
	
	// Формула КС кратко: 'Р1Прил5Ст80Гр02 >= 70'.
	
	Р1Прил5Ст80Гр02 = ПоказательПоСтроке("Р1Прил5Ст80Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст80Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст80Гр02.Значение, 70);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_257(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.257)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов в гр. 1 ст. 010 прил. 7 р. 1 >= гр. 1 ст. 020 прил. 7 р. 1 + гр. 1 ст. 030 "
		+ "прил. 7 р. 1 + гр. 1 ст. 040 прил. 7 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп. 7 п. 1 ст. 427 НК РФ) за "
		+ "предыдущий год меньше суммы доходов по ст. 020, 030, 040 за предыдущий год'");
	
	// Формула КС кратко: 'Р1Прил7Ст10Гр01 >= Р1Прил7Ст20Гр01 + Р1Прил7Ст30Гр01 + Р1Прил7Ст40Гр01'.
	
	Р1Прил7Ст10Гр01 = ПоказательПоСтроке("Р1Прил7Ст10Гр01");
	Р1Прил7Ст20Гр01 = ПоказательПоСтроке("Р1Прил7Ст20Гр01");
	Р1Прил7Ст30Гр01 = ПоказательПоСтроке("Р1Прил7Ст30Гр01");
	Р1Прил7Ст40Гр01 = ПоказательПоСтроке("Р1Прил7Ст40Гр01");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр01, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст10Гр01.Значение, Р1Прил7Ст20Гр01.Значение
		+ Р1Прил7Ст30Гр01.Значение + Р1Прил7Ст40Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил7Ст20Гр01.ЗначениеСтр + " + " + Р1Прил7Ст30Гр01.ЗначениеСтр
		+ " + " + Р1Прил7Ст40Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_258(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.258)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов в гр. 2 ст. 010 прил. 7 р. 1 >= гр. 2 ст. 020 прил. 7 р. 1 + гр. 2 ст. 030 "
		+ "прил. 7 р. 1 + гр. 2 ст. 040 прил. 7 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп. 7 п. 1 ст. 427 НК РФ) за "
		+ "отчетный период меньше суммы доходов по ст. 020, 030, 040 за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил7Ст10Гр02 >= Р1Прил7Ст20Гр02 + Р1Прил7Ст30Гр02 + Р1Прил7Ст40Гр02'.
	
	Р1Прил7Ст10Гр02 = ПоказательПоСтроке("Р1Прил7Ст10Гр02");
	Р1Прил7Ст20Гр02 = ПоказательПоСтроке("Р1Прил7Ст20Гр02");
	Р1Прил7Ст30Гр02 = ПоказательПоСтроке("Р1Прил7Ст30Гр02");
	Р1Прил7Ст40Гр02 = ПоказательПоСтроке("Р1Прил7Ст40Гр02");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр02, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст10Гр02.Значение, Р1Прил7Ст20Гр02.Значение
		+ Р1Прил7Ст30Гр02.Значение + Р1Прил7Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил7Ст20Гр02.ЗначениеСтр + " + " + Р1Прил7Ст30Гр02.ЗначениеСтр
		+ " + " + Р1Прил7Ст40Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_259(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.259)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 1 ст. 050 прил. 7 "
		+ "р. 1 = (гр. 1 ст. 020 прил. 7 р. 1 + гр. 1 ст. 030 прил. 7 р. 1 + гр. 1 ст. 040 прил. 7 р. 1) / гр. 1 ст. "
		+ "010 прил. 7 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст.427 НК РФ за предыдущий год ≠ "
		+ "частному от суммы доходов по ст. 020, 030, 040 и сумма доходов плательщиков, применяющих пониженный тариф "
		+ "(пп.7 п.1 ст.427 НК РФ), за предыдущий год, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр01 = (Р1Прил7Ст20Гр01 + Р1Прил7Ст30Гр01 + Р1Прил7Ст40Гр01) / Р1Прил7Ст10Гр01 * 100, когда Р1Прил7Ст10Гр01 > 0'.
	
	Р1Прил7Ст50Гр01 = ПоказательПоСтроке("Р1Прил7Ст50Гр01");
	Р1Прил7Ст20Гр01 = ПоказательПоСтроке("Р1Прил7Ст20Гр01");
	Р1Прил7Ст30Гр01 = ПоказательПоСтроке("Р1Прил7Ст30Гр01");
	Р1Прил7Ст40Гр01 = ПоказательПоСтроке("Р1Прил7Ст40Гр01");
	Р1Прил7Ст10Гр01 = ПоказательПоСтроке("Р1Прил7Ст10Гр01");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр01, "Раздел1Прил7");
	
	УсловиеВыполнено = Р1Прил7Ст10Гр01.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр01.Значение, ?(УсловиеВыполнено, Окр(
		(Р1Прил7Ст20Гр01.Значение + Р1Прил7Ст30Гр01.Значение + Р1Прил7Ст40Гр01.Значение) / Р1Прил7Ст10Гр01.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + "(" + Р1Прил7Ст20Гр01.ЗначениеСтр + " + " + Р1Прил7Ст30Гр01.ЗначениеСтр + " + "
		+ Р1Прил7Ст40Гр01.ЗначениеСтр + ") / " + Р1Прил7Ст10Гр01.ЗначениеСтр + " * 100 Итог [" + КС.ПраваяЧастьСтр
		+ "], когда " + Р1Прил7Ст10Гр01.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_260(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.260)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 2 ст. 050 прил. 7 "
		+ "р. 1 = (гр. 2 ст. 020 прил. 7 р. 1 + гр. 2 ст. 030 прил. 7 р. 1 + гр. 2 ст. 040 прил. 7 р. 1) / гр. 2 ст. "
		+ "010 прил. 7 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст.427 НК РФ за отчетный период ≠ "
		+ "частному от суммы доходов по ст. 020, 030, 040 и сумма доходов плательщиков, применяющих пониженный тариф "
		+ "(пп.7 п.1 ст.427 НК РФ), за отчетный период, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр02 = (Р1Прил7Ст20Гр02 + Р1Прил7Ст30Гр02 + Р1Прил7Ст40Гр02) / Р1Прил7Ст10Гр02 * 100, когда Р1Прил7Ст10Гр02 > 0'.
	
	Р1Прил7Ст50Гр02 = ПоказательПоСтроке("Р1Прил7Ст50Гр02");
	Р1Прил7Ст20Гр02 = ПоказательПоСтроке("Р1Прил7Ст20Гр02");
	Р1Прил7Ст30Гр02 = ПоказательПоСтроке("Р1Прил7Ст30Гр02");
	Р1Прил7Ст40Гр02 = ПоказательПоСтроке("Р1Прил7Ст40Гр02");
	Р1Прил7Ст10Гр02 = ПоказательПоСтроке("Р1Прил7Ст10Гр02");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр02, "Раздел1Прил7");
	
	УсловиеВыполнено = Р1Прил7Ст10Гр02.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр02.Значение, ?(УсловиеВыполнено, Окр(
		(Р1Прил7Ст20Гр02.Значение + Р1Прил7Ст30Гр02.Значение + Р1Прил7Ст40Гр02.Значение) / Р1Прил7Ст10Гр02.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + "(" + Р1Прил7Ст20Гр02.ЗначениеСтр + " + " + Р1Прил7Ст30Гр02.ЗначениеСтр + " + "
		+ Р1Прил7Ст40Гр02.ЗначениеСтр + ") / " + Р1Прил7Ст10Гр02.ЗначениеСтр + " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда "
		+ Р1Прил7Ст10Гр02.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_261(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.261)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 1 ст. 050 прил. 7 "
		+ "р. 1 СВ >= 70'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст.427 НК РФ за предыдущий год меньше 70'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр01 >= 70'.
	
	Р1Прил7Ст50Гр01 = ПоказательПоСтроке("Р1Прил7Ст50Гр01");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр01, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр01.Значение, 70, Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_262(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.262)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 2 ст. 050 прил. 7 "
		+ "р. 1 СВ >= 70, при условии - ""код отчетного периода"" = 34'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п. 7 ст. 427 НК РФ за расчетный период "
		+ "меньше 70'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр02 >= 70, когда ТитульныйКодРП = "34"'.
	
	Р1Прил7Ст50Гр02 = ПоказательПоСтроке("Р1Прил7Ст50Гр02");
	ТитульныйКодРП = ПоказательПоСтроке("ТитульныйКодРП");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	Титульный = мДанныеОтчета.Титульный;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйКодРП);
	ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр02, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр02.Значение, 70, Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр + ", когда " + ТитульныйКодРП.ЗначениеСтр + " = 34";
	
	УсловиеВыполнено = ТитульныйКодРП.Значение = "34";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_263(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.263)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 8 р. 1) = ∑ всех гр. 1 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за отчетный период ≠ сумме выплат по каждому виду патента за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр01 = Р1Прил8Ст60Гр01'.
	
	Р1Прил8Ст10Гр01 = ПоказательПоСтроке("Р1Прил8Ст10Гр01");
	Р1Прил8Ст60Гр01 = ПоказательПоСтроке("Р1Прил8Ст60Гр01");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр01.Имя);
	СуммаР1Прил8Ст60Гр01 = 0;
	СуммаР1Прил8Ст60Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр01, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр01 = СуммаР1Прил8Ст60Гр01 + Р1Прил8Ст60Гр01.Значение;
		СуммаР1Прил8Ст60Гр01Стр = СуммаР1Прил8Ст60Гр01Стр + Р1Прил8Ст60Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр01.Значение, СуммаР1Прил8Ст60Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_264(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.264)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 8 р. 1) = ∑ всех гр. 2 ст. 060 "
		+ "прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 3 последних месяца отчетного периода ≠ сумме выплат по каждому виду патента за 3 последних месяца "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр02 = Р1Прил8Ст60Гр02'.
	
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	Р1Прил8Ст60Гр02 = ПоказательПоСтроке("Р1Прил8Ст60Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр02.Имя);
	СуммаР1Прил8Ст60Гр02 = 0;
	СуммаР1Прил8Ст60Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр02, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр02 = СуммаР1Прил8Ст60Гр02 + Р1Прил8Ст60Гр02.Значение;
		СуммаР1Прил8Ст60Гр02Стр = СуммаР1Прил8Ст60Гр02Стр + Р1Прил8Ст60Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр02.Значение, СуммаР1Прил8Ст60Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_265(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.265)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 1 месяц (гр. 3 ст. 010 прил. 8 р. 1) = ∑ всех гр. 3 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 1-й из трех последних месяцев отчетного периода ≠ сумме выплат по каждому виду патента за 1-й из трех "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр03 = Р1Прил8Ст60Гр03'.
	
	Р1Прил8Ст10Гр03 = ПоказательПоСтроке("Р1Прил8Ст10Гр03");
	Р1Прил8Ст60Гр03 = ПоказательПоСтроке("Р1Прил8Ст60Гр03");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр03, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр03.Имя);
	СуммаР1Прил8Ст60Гр03 = 0;
	СуммаР1Прил8Ст60Гр03Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр03, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр03 = СуммаР1Прил8Ст60Гр03 + Р1Прил8Ст60Гр03.Значение;
		СуммаР1Прил8Ст60Гр03Стр = СуммаР1Прил8Ст60Гр03Стр + Р1Прил8Ст60Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр03.Значение, СуммаР1Прил8Ст60Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_266(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.266)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 2 месяц (гр. 4 ст. 010 прил. 8 р. 1) = ∑ всех гр. 4 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 2-й из трех последних месяцев отчетного периода ≠ сумме выплат по каждому виду патента за 2-й из трех "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр04 = Р1Прил8Ст60Гр04'.
	
	Р1Прил8Ст10Гр04 = ПоказательПоСтроке("Р1Прил8Ст10Гр04");
	Р1Прил8Ст60Гр04 = ПоказательПоСтроке("Р1Прил8Ст60Гр04");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр04, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр04.Имя);
	СуммаР1Прил8Ст60Гр04 = 0;
	СуммаР1Прил8Ст60Гр04Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр04, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр04 = СуммаР1Прил8Ст60Гр04 + Р1Прил8Ст60Гр04.Значение;
		СуммаР1Прил8Ст60Гр04Стр = СуммаР1Прил8Ст60Гр04Стр + Р1Прил8Ст60Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр04.Значение, СуммаР1Прил8Ст60Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_267(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.267)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 3 месяц (гр. 5 ст. 010 прил. 8 р. 1) = ∑ всех гр. 5 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 3-й из трех последних месяцев отчетного периода ≠ сумме выплат по каждому виду патента за 3-й из трех "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр05 = Р1Прил8Ст60Гр05'.
	
	Р1Прил8Ст10Гр05 = ПоказательПоСтроке("Р1Прил8Ст10Гр05");
	Р1Прил8Ст60Гр05 = ПоказательПоСтроке("Р1Прил8Ст60Гр05");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр05, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр05.Имя);
	СуммаР1Прил8Ст60Гр05 = 0;
	СуммаР1Прил8Ст60Гр05Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр05, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр05 = СуммаР1Прил8Ст60Гр05 + Р1Прил8Ст60Гр05.Значение;
		СуммаР1Прил8Ст60Гр05Стр = СуммаР1Прил8Ст60Гр05Стр + Р1Прил8Ст60Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр05.Значение, СуммаР1Прил8Ст60Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_268(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.268)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 8 р. 1) >= гр. 2 ст. 010 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за отчетный период меньше аналогичных выплат за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр01 >= Р1Прил8Ст10Гр02'.
	
	Р1Прил8Ст10Гр01 = ПоказательПоСтроке("Р1Прил8Ст10Гр01");
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр01.Значение, Р1Прил8Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_269(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.269)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 8 р. 1 отчетного периода) = гр. 1 ст. 010 прил. "
		+ "8 р. 1 предыдущего отчетного периода + гр. 2 ст. 010 прил. 8 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп. 9 п. 1 ст. 427 НК "
		+ "РФ) за отчетный период ≠ сумме аналогичных выплат за предыдущий отчетный период и за 3 последних месяца "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр01 = Р1Прил8Ст10Гр01ПРП + Р1Прил8Ст10Гр02'.
	
	Р1Прил8Ст10Гр01 = ПоказательПоСтроке("Р1Прил8Ст10Гр01");
	Р1Прил8Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил8Ст10Гр01ПРП");
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил8ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил8ПРП = мДанныеОтчетаПРП.Раздел1Прил8[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8ПРП, Р1Прил8Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01ПРП, "Раздел1Прил8", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр01.Значение, Р1Прил8Ст10Гр01ПРП.Значение + Р1Прил8Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил8Ст10Гр01ПРП.ЗначениеСтр + " + " + Р1Прил8Ст10Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_270(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.270)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 8 р. 1) = гр. 3 ст. 010 прил. 8 "
		+ "р. 1 + гр. 4 ст. 010 прил. 8 р. 1 + гр. 5 ст. 010 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 3 последних месяца отчетного периода ≠ сумме аналогичных выплат за каждый из 3-х последних месяцев "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр02 = Р1Прил8Ст10Гр03 + Р1Прил8Ст10Гр04 + Р1Прил8Ст10Гр05'.
	
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	Р1Прил8Ст10Гр03 = ПоказательПоСтроке("Р1Прил8Ст10Гр03");
	Р1Прил8Ст10Гр04 = ПоказательПоСтроке("Р1Прил8Ст10Гр04");
	Р1Прил8Ст10Гр05 = ПоказательПоСтроке("Р1Прил8Ст10Гр05");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр03, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр04, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр05, "Раздел1Прил8");
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр02.Значение, Р1Прил8Ст10Гр03.Значение + Р1Прил8Ст10Гр04.Значение + Р1Прил8Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил8Ст10Гр03.ЗначениеСтр + " + " + Р1Прил8Ст10Гр04.ЗначениеСтр + " + "
		+ Р1Прил8Ст10Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_271(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.271)'");
	ОписаниеКС     = НСтр("ru='Сведения о суммах выплат за последние три месяца (гр. 2 ст. 060 прил. 8 р. 1) = гр. 3 ст. "
		+ "060 прил. 8 р. 1 + гр. 4 ст. 060 прил. 8 р. 1 + гр. 5 ст. 060 прил. 8 р. 1 по каждой ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) в разрезе каждого вида патента за 3 последних месяца отчетного периода ≠ сумме аналогичных выплат в "
		+ "разрезе каждого вида патента за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст60Гр02 = Р1Прил8Ст60Гр03 + Р1Прил8Ст60Гр04 + Р1Прил8Ст60Гр05'.
	
	Р1Прил8Ст60Гр02 = ПоказательПоСтроке("Р1Прил8Ст60Гр02");
	Р1Прил8Ст60Гр03 = ПоказательПоСтроке("Р1Прил8Ст60Гр03");
	Р1Прил8Ст60Гр04 = ПоказательПоСтроке("Р1Прил8Ст60Гр04");
	Р1Прил8Ст60Гр05 = ПоказательПоСтроке("Р1Прил8Ст60Гр05");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр02.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр02, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр03, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр04, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр05, "Раздел1Прил8");
		
		КС = ПоказателиКС(Р1Прил8Ст60Гр02.Значение, Р1Прил8Ст60Гр03.Значение + Р1Прил8Ст60Гр04.Значение + Р1Прил8Ст60Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил8Ст60Гр03.ЗначениеСтр + " + " + Р1Прил8Ст60Гр04.ЗначениеСтр + " + "
			+ Р1Прил8Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_272(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.272)'");
	ОписаниеКС     = НСтр("ru='Сведения о суммах выплат, всего (гр. 1 ст. 060 прил. 8 р. 1) >= гр. 2 ст. 060 прил. 8 р. "
		+ "1 по каждой ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) в разрезе каждого вида патента за отчетный период меньше аналогичных выплат в разрезе каждого вида "
		+ "патента за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст60Гр01 >= Р1Прил8Ст60Гр02'.
	
	Р1Прил8Ст60Гр01 = ПоказательПоСтроке("Р1Прил8Ст60Гр01");
	Р1Прил8Ст60Гр02 = ПоказательПоСтроке("Р1Прил8Ст60Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр01, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр02, "Раздел1Прил8");
		
		КС = ПоказателиКС(Р1Прил8Ст60Гр01.Значение, Р1Прил8Ст60Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_273(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.273)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 9 р. 1) = ∑ всех гр. 1 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за отчетный период ≠ сумме всех выплат по каждому "
		+ "иностранному гражданину за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр01 = Р1Прил9Ст80Гр01'.
	
	Р1Прил9Ст10Гр01 = ПоказательПоСтроке("Р1Прил9Ст10Гр01");
	Р1Прил9Ст80Гр01 = ПоказательПоСтроке("Р1Прил9Ст80Гр01");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр01, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр01.Имя);
	СуммаР1Прил9Ст80Гр01 = 0;
	СуммаР1Прил9Ст80Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр01, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр01 = СуммаР1Прил9Ст80Гр01 + Р1Прил9Ст80Гр01.Значение;
		СуммаР1Прил9Ст80Гр01Стр = СуммаР1Прил9Ст80Гр01Стр + Р1Прил9Ст80Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр01.Значение, СуммаР1Прил9Ст80Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_274(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.274)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 9 р. 1) = ∑ всех гр. 2 ст. 080 "
		+ "прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 3 последних месяца отчетного периода ≠ сумме всех "
		+ "выплат по каждому иностранному гражданину за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр02 = Р1Прил9Ст80Гр02'.
	
	Р1Прил9Ст10Гр02 = ПоказательПоСтроке("Р1Прил9Ст10Гр02");
	Р1Прил9Ст80Гр02 = ПоказательПоСтроке("Р1Прил9Ст80Гр02");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр02, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр02.Имя);
	СуммаР1Прил9Ст80Гр02 = 0;
	СуммаР1Прил9Ст80Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр02, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр02 = СуммаР1Прил9Ст80Гр02 + Р1Прил9Ст80Гр02.Значение;
		СуммаР1Прил9Ст80Гр02Стр = СуммаР1Прил9Ст80Гр02Стр + Р1Прил9Ст80Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр02.Значение, СуммаР1Прил9Ст80Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_275(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.275)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 1 месяц (гр. 3 ст. 010 прил. 9 р. 1) = ∑ всех гр. 3 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. НК РФ 425 и абз.2 пп.2 ст.426 НК РФ) за 1-й из 3-х последних месяцев отчетного периода ≠ сумме "
		+ "всех выплат по каждому иностранному гражданину за 1-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр03 = Р1Прил9Ст80Гр03'.
	
	Р1Прил9Ст10Гр03 = ПоказательПоСтроке("Р1Прил9Ст10Гр03");
	Р1Прил9Ст80Гр03 = ПоказательПоСтроке("Р1Прил9Ст80Гр03");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр03, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр03.Имя);
	СуммаР1Прил9Ст80Гр03 = 0;
	СуммаР1Прил9Ст80Гр03Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр03, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр03 = СуммаР1Прил9Ст80Гр03 + Р1Прил9Ст80Гр03.Значение;
		СуммаР1Прил9Ст80Гр03Стр = СуммаР1Прил9Ст80Гр03Стр + Р1Прил9Ст80Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр03.Значение, СуммаР1Прил9Ст80Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_276(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.276)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 2 месяц гр. (4 ст. 010 прил. 9 р. 1) = ∑ всех гр. 4 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 2-й из 3-х последних месяцев отчетного периода ≠ сумме "
		+ "всех выплат по каждому иностранному гражданину за 2-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр04 = Р1Прил9Ст80Гр04'.
	
	Р1Прил9Ст10Гр04 = ПоказательПоСтроке("Р1Прил9Ст10Гр04");
	Р1Прил9Ст80Гр04 = ПоказательПоСтроке("Р1Прил9Ст80Гр04");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр04, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр04.Имя);
	СуммаР1Прил9Ст80Гр04 = 0;
	СуммаР1Прил9Ст80Гр04Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр04, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр04 = СуммаР1Прил9Ст80Гр04 + Р1Прил9Ст80Гр04.Значение;
		СуммаР1Прил9Ст80Гр04Стр = СуммаР1Прил9Ст80Гр04Стр + Р1Прил9Ст80Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр04.Значение, СуммаР1Прил9Ст80Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_277(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.277)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 3 месяц (гр. 5 ст. 010 прил. 9 р. 1) = ∑ всех гр. 5 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 3-й из 3-х последних месяцев отчетного периода ≠ сумме "
		+ "всех выплат по каждому иностранному гражданину за 3-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр05 = Р1Прил9Ст80Гр05'.
	
	Р1Прил9Ст10Гр05 = ПоказательПоСтроке("Р1Прил9Ст10Гр05");
	Р1Прил9Ст80Гр05 = ПоказательПоСтроке("Р1Прил9Ст80Гр05");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр05, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр05.Имя);
	СуммаР1Прил9Ст80Гр05 = 0;
	СуммаР1Прил9Ст80Гр05Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр05, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр05 = СуммаР1Прил9Ст80Гр05 + Р1Прил9Ст80Гр05.Значение;
		СуммаР1Прил9Ст80Гр05Стр = СуммаР1Прил9Ст80Гр05Стр + Р1Прил9Ст80Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр05.Значение, СуммаР1Прил9Ст80Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_278(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.278)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 9 р. 1 отчетного периода) = гр. 1 ст. 010 прил. "
		+ "9 р. 1 предыдущего отчетного периода + гр. 2 ст. 010 прил. 9 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за отчетный период ≠ сумме аналогичных выплат за "
		+ "предыдущий отчетный период и за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр01 = Р1Прил9Ст10Гр01ПРП + Р1Прил9Ст10Гр02'.
	
	Р1Прил9Ст10Гр01 = ПоказательПоСтроке("Р1Прил9Ст10Гр01");
	Р1Прил9Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил9Ст10Гр01ПРП");
	Р1Прил9Ст10Гр02 = ПоказательПоСтроке("Р1Прил9Ст10Гр02");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил9ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил9ПРП = мДанныеОтчетаПРП.Раздел1Прил9[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр01, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9ПРП, Р1Прил9Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр01ПРП, "Раздел1Прил9", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр02, "Раздел1Прил9");
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр01.Значение, Р1Прил9Ст10Гр01ПРП.Значение + Р1Прил9Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил9Ст10Гр01ПРП.ЗначениеСтр + " + " + Р1Прил9Ст10Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_279(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.279)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 9 р. 1) = гр. 3 ст. 010 прил. 9 "
		+ "р. 1 + гр. 4 ст. 010 прил. 9 р. 1 + гр. 5 ст. 010 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 3 последних месяца отчетного периода ≠ сумме "
		+ "аналогичных выплат за каждый из 3 последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр02 = Р1Прил9Ст10Гр03 + Р1Прил9Ст10Гр04 + Р1Прил9Ст10Гр05'.
	
	Р1Прил9Ст10Гр02 = ПоказательПоСтроке("Р1Прил9Ст10Гр02");
	Р1Прил9Ст10Гр03 = ПоказательПоСтроке("Р1Прил9Ст10Гр03");
	Р1Прил9Ст10Гр04 = ПоказательПоСтроке("Р1Прил9Ст10Гр04");
	Р1Прил9Ст10Гр05 = ПоказательПоСтроке("Р1Прил9Ст10Гр05");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр02, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр03, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр04, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр05, "Раздел1Прил9");
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр02.Значение, Р1Прил9Ст10Гр03.Значение + Р1Прил9Ст10Гр04.Значение + Р1Прил9Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил9Ст10Гр03.ЗначениеСтр + " + " + Р1Прил9Ст10Гр04.ЗначениеСтр + " + "
		+ Р1Прил9Ст10Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_280(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.280)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат, всего с начала расчетного периода (гр. 2 ст. 080 прил. 9 р. 1) = гр. 3 ст. "
		+ "080 прил. 9 р. 1 + гр. 4 ст. 080 прил. 9 р. 1 + гр. 5 ст. 080 прил. 9 р. 1 по каждой ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) в разрезе каждого иностранного гражданина за 3 последних "
		+ "месяца отчетного периода ≠ сумме аналогичных выплат по каждому иностранному гражданину за каждый из 3 "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст80Гр02 = Р1Прил9Ст80Гр03 + Р1Прил9Ст80Гр04 + Р1Прил9Ст80Гр05'.
	
	Р1Прил9Ст80Гр02 = ПоказательПоСтроке("Р1Прил9Ст80Гр02");
	Р1Прил9Ст80Гр03 = ПоказательПоСтроке("Р1Прил9Ст80Гр03");
	Р1Прил9Ст80Гр04 = ПоказательПоСтроке("Р1Прил9Ст80Гр04");
	Р1Прил9Ст80Гр05 = ПоказательПоСтроке("Р1Прил9Ст80Гр05");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр02.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр02, "Раздел1Прил9");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр03, "Раздел1Прил9");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр04, "Раздел1Прил9");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр05, "Раздел1Прил9");
		
		КС = ПоказателиКС(Р1Прил9Ст80Гр02.Значение, Р1Прил9Ст80Гр03.Значение + Р1Прил9Ст80Гр04.Значение + Р1Прил9Ст80Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил9Ст80Гр03.ЗначениеСтр + " + " + Р1Прил9Ст80Гр04.ЗначениеСтр + " + "
			+ Р1Прил9Ст80Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_281(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.281)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего с начала расчетного периода (гр. 1 ст. 010 прил. 10 р. 1) = ∑ всех "
		+ "гр. 1 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за отчетный период ≠ сумме выплат "
		+ "каждому обучающемуся за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр01 = Р1Прил10Ст100Гр01'.
	
	Р1Прил10Ст10Гр01 = ПоказательПоСтроке("Р1Прил10Ст10Гр01");
	Р1Прил10Ст100Гр01 = ПоказательПоСтроке("Р1Прил10Ст100Гр01");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр01, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр01.Имя);
	СуммаР1Прил10Ст100Гр01 = 0;
	СуммаР1Прил10Ст100Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр01, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр01 = СуммаР1Прил10Ст100Гр01 + Р1Прил10Ст100Гр01.Значение;
		СуммаР1Прил10Ст100Гр01Стр = СуммаР1Прил10Ст100Гр01Стр + Р1Прил10Ст100Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр01.Значение, СуммаР1Прил10Ст100Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_282(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.282)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 10 р. 1) = ∑ всех гр. 2 ст. 100 "
		+ "прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 3 последних месяца отчетного "
		+ "периода ≠ сумме выплат каждому обучающемуся за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр02 = Р1Прил10Ст100Гр02'.
	
	Р1Прил10Ст10Гр02 = ПоказательПоСтроке("Р1Прил10Ст10Гр02");
	Р1Прил10Ст100Гр02 = ПоказательПоСтроке("Р1Прил10Ст100Гр02");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр02, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр02.Имя);
	СуммаР1Прил10Ст100Гр02 = 0;
	СуммаР1Прил10Ст100Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр02, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр02 = СуммаР1Прил10Ст100Гр02 + Р1Прил10Ст100Гр02.Значение;
		СуммаР1Прил10Ст100Гр02Стр = СуммаР1Прил10Ст100Гр02Стр + Р1Прил10Ст100Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр02.Значение, СуммаР1Прил10Ст100Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_283(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.283)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 1 месяц (гр. 3 ст. 010 прил. 10 р. 1) = ∑ всех гр. 3 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 1-й из трех последних месяцев "
		+ "отчетного периода ≠ сумме выплат каждому обучающемуся за 1-й из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр03 = Р1Прил10Ст100Гр03'.
	
	Р1Прил10Ст10Гр03 = ПоказательПоСтроке("Р1Прил10Ст10Гр03");
	Р1Прил10Ст100Гр03 = ПоказательПоСтроке("Р1Прил10Ст100Гр03");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр03, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр03.Имя);
	СуммаР1Прил10Ст100Гр03 = 0;
	СуммаР1Прил10Ст100Гр03Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр03, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр03 = СуммаР1Прил10Ст100Гр03 + Р1Прил10Ст100Гр03.Значение;
		СуммаР1Прил10Ст100Гр03Стр = СуммаР1Прил10Ст100Гр03Стр + Р1Прил10Ст100Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр03.Значение, СуммаР1Прил10Ст100Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_284(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.284)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 2 месяц (гр. 4 ст. 010 прил. 10 р. 1) = ∑ всех гр. 4 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 2-й из трех последних месяцев "
		+ "отчетного периода ≠ сумме выплат по каждому виду патента за 2-й из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр04 = Р1Прил10Ст100Гр04'.
	
	Р1Прил10Ст10Гр04 = ПоказательПоСтроке("Р1Прил10Ст10Гр04");
	Р1Прил10Ст100Гр04 = ПоказательПоСтроке("Р1Прил10Ст100Гр04");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр04, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр04.Имя);
	СуммаР1Прил10Ст100Гр04 = 0;
	СуммаР1Прил10Ст100Гр04Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр04, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр04 = СуммаР1Прил10Ст100Гр04 + Р1Прил10Ст100Гр04.Значение;
		СуммаР1Прил10Ст100Гр04Стр = СуммаР1Прил10Ст100Гр04Стр + Р1Прил10Ст100Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр04.Значение, СуммаР1Прил10Ст100Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_285(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.285)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 3 месяц (гр. 5 ст. 010 прил. 10 р. 1) = ∑ всех гр. 5 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 3-й из трех последних месяцев "
		+ "отчетного периода ≠ сумме выплат каждому обучающемуся за 3-й из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр05 = Р1Прил10Ст100Гр05'.
	
	Р1Прил10Ст10Гр05 = ПоказательПоСтроке("Р1Прил10Ст10Гр05");
	Р1Прил10Ст100Гр05 = ПоказательПоСтроке("Р1Прил10Ст100Гр05");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр05, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр05.Имя);
	СуммаР1Прил10Ст100Гр05 = 0;
	СуммаР1Прил10Ст100Гр05Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр05, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр05 = СуммаР1Прил10Ст100Гр05 + Р1Прил10Ст100Гр05.Значение;
		СуммаР1Прил10Ст100Гр05Стр = СуммаР1Прил10Ст100Гр05Стр + Р1Прил10Ст100Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр05.Значение, СуммаР1Прил10Ст100Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_286(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.286)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего с начала расчетного периода (гр. 1 ст. 010 прил. 10 р. 1 отчетного "
		+ "периода) = гр. 1 ст. 010 прил. 10 р. 1 СВ предыдущего отчетного периода + гр. 2 ст. 010 прил. 10 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за отчетный период ≠ сумме "
		+ "аналогичных выплат за предыдущий налоговый период и за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр01 = Р1Прил10Ст10Гр01ПРП + Р1Прил10Ст10Гр02'.
	
	Р1Прил10Ст10Гр01 = ПоказательПоСтроке("Р1Прил10Ст10Гр01");
	Р1Прил10Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил10Ст10Гр01ПРП");
	Р1Прил10Ст10Гр02 = ПоказательПоСтроке("Р1Прил10Ст10Гр02");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил10ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил10ПРП = мДанныеОтчетаПРП.Раздел1Прил10[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр01, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10ПРП, Р1Прил10Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр01ПРП, "Раздел1Прил10", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр02, "Раздел1Прил10");
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр01.Значение, Р1Прил10Ст10Гр01ПРП.Значение + Р1Прил10Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил10Ст10Гр01ПРП.ЗначениеСтр + " + " + Р1Прил10Ст10Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_287(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.287)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 10 р. 1) = гр. 3 ст. 010 прил. "
		+ "10 р. 1 + гр. 4 ст. 010 прил. 10 р. 1 + гр. 5 ст. 010 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 3 последних месяца отчетного "
		+ "периода ≠ сумме аналогичных выплат за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр02 = Р1Прил10Ст10Гр03 + Р1Прил10Ст10Гр04 + Р1Прил10Ст10Гр05'.
	
	Р1Прил10Ст10Гр02 = ПоказательПоСтроке("Р1Прил10Ст10Гр02");
	Р1Прил10Ст10Гр03 = ПоказательПоСтроке("Р1Прил10Ст10Гр03");
	Р1Прил10Ст10Гр04 = ПоказательПоСтроке("Р1Прил10Ст10Гр04");
	Р1Прил10Ст10Гр05 = ПоказательПоСтроке("Р1Прил10Ст10Гр05");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр02, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр03, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр04, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр05, "Раздел1Прил10");
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр02.Значение, Р1Прил10Ст10Гр03.Значение + Р1Прил10Ст10Гр04.Значение + Р1Прил10Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил10Ст10Гр03.ЗначениеСтр + " + " + Р1Прил10Ст10Гр04.ЗначениеСтр + " + "
		+ Р1Прил10Ст10Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_288(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.288)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат за последние три месяца (гр. 2 ст. 100 прил. 10 р. 1) = гр. 3 ст. 100 прил. "
		+ "10 р. 1 + гр. 4 ст. 100 прил. 10 р. 1 + гр. 5 ст. 100 прил. 10 р. 1 по каждой ст. 100 прил. 10 р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) в разрезе каждого обучающегося за 3 "
		+ "последних месяца отчетного периода ≠ сумме аналогичных выплат в разрезе каждого обучающегося за каждый из "
		+ "3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст100Гр02 = Р1Прил10Ст100Гр03 + Р1Прил10Ст100Гр04 + Р1Прил10Ст100Гр05'.
	
	Р1Прил10Ст100Гр02 = ПоказательПоСтроке("Р1Прил10Ст100Гр02");
	Р1Прил10Ст100Гр03 = ПоказательПоСтроке("Р1Прил10Ст100Гр03");
	Р1Прил10Ст100Гр04 = ПоказательПоСтроке("Р1Прил10Ст100Гр04");
	Р1Прил10Ст100Гр05 = ПоказательПоСтроке("Р1Прил10Ст100Гр05");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр02.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр02, "Раздел1Прил10");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр03, "Раздел1Прил10");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр04, "Раздел1Прил10");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр05, "Раздел1Прил10");
		
		КС = ПоказателиКС(Р1Прил10Ст100Гр02.Значение, Р1Прил10Ст100Гр03.Значение + Р1Прил10Ст100Гр04.Значение + Р1Прил10Ст100Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил10Ст100Гр03.ЗначениеСтр + " + " + Р1Прил10Ст100Гр04.ЗначениеСтр + " + "
			+ Р1Прил10Ст100Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_2

Процедура ПроверитьКС_1_289(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 2 (КС 1.289)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный период (ст. 030 р. 2) = ∑ всех "
		+ "гр. 1 ст. 090 прил. 1 р. 2'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС глав КФХ к уплате за отчетный период ≠ сумме всех страховых "
		+ "взносов на ОПС по каждому члену КФХ за отчетный период'");
	
	// Формула КС кратко: 'Р2Ст30Гр01 = Р2Пр1Ст90Гр01'.
	
	Р2Ст30Гр01 = ПоказательПоСтроке("Р2Ст30Гр01");
	Р2Пр1Ст90Гр01 = ПоказательПоСтроке("Р2Пр1Ст90Гр01");
	
	Раздел2 = мДанныеОтчета.Раздел2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел2, Р2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р2Ст30Гр01, "Раздел2");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел2, Р2Пр1Ст90Гр01.Имя);
	СуммаР2Пр1Ст90Гр01 = 0;
	СуммаР2Пр1Ст90Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел2, Р2Пр1Ст90Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р2Пр1Ст90Гр01, "Раздел2");
		СуммаР2Пр1Ст90Гр01 = СуммаР2Пр1Ст90Гр01 + Р2Пр1Ст90Гр01.Значение;
		СуммаР2Пр1Ст90Гр01Стр = СуммаР2Пр1Ст90Гр01Стр + Р2Пр1Ст90Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р2Ст30Гр01.Значение, СуммаР2Пр1Ст90Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР2Пр1Ст90Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_290(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 2 (КС 1.290)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный период (ст. 050 р. 2) = ∑ всех "
		+ "гр. 2 ст. 090 прил. 1 р. 2'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОМС глав КФХ к уплате за отчетный период ≠ сумме всех страховых "
		+ "взносов на ОМС по каждому члену КФХ за отчетный период'");
	
	// Формула КС кратко: 'Р2Ст50Гр01 = Р2Пр1Ст90Гр02'.
	
	Р2Ст50Гр01 = ПоказательПоСтроке("Р2Ст50Гр01");
	Р2Пр1Ст90Гр02 = ПоказательПоСтроке("Р2Пр1Ст90Гр02");
	
	Раздел2 = мДанныеОтчета.Раздел2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел2, Р2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р2Ст50Гр01, "Раздел2");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел2, Р2Пр1Ст90Гр02.Имя);
	СуммаР2Пр1Ст90Гр02 = 0;
	СуммаР2Пр1Ст90Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел2, Р2Пр1Ст90Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р2Пр1Ст90Гр02, "Раздел2");
		СуммаР2Пр1Ст90Гр02 = СуммаР2Пр1Ст90Гр02 + Р2Пр1Ст90Гр02.Значение;
		СуммаР2Пр1Ст90Гр02Стр = СуммаР2Пр1Ст90Гр02Стр + Р2Пр1Ст90Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р2Ст50Гр01.Значение, СуммаР2Пр1Ст90Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР2Пр1Ст90Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_3

Процедура ПроверитьКС_1_291(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.291)'");
	ОписаниеКС     = НСтр("ru='Сумма баз по страховым взносам на ОПС в размере, не превыш. пред. велич. за последние три "
		+ "месяца отчетного (расчетного) периода по всем видам тарифа (∑ (гр. 2 ст. 050 подр. 1.1 р.1 СВ - гр. 2 ст. "
		+ "051 подр. 1.1 р. 1 СВ) по всем значениям поля 001 прил. 1 р. 1 СВ) = ∑ гр. 2 ст. 250 р. 3 СВ'");
	ОписаниеОшибки = НСтр("ru='Сумма баз по страховым взносам на ОПС в размере, не превыш. пред. велич. за последние три "
		+ "месяца отчетного (расчетного) периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш. пред. велич. по физическим лицам за последние три месяца отчетного (расчетного) периода'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 - Пд11Пр1Ст51Гр02 = Пд321Ст250Гр02'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Пд321Ст250Гр02 = ПоказательПоСтроке("Пд321Ст250Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст50Гр02 = 0;
	СуммаПд11Пр1Ст50Гр02Стр = "";
	СуммаПд11Пр1Ст51Гр02 = 0;
	СуммаПд11Пр1Ст51Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст50Гр02 = СуммаПд11Пр1Ст50Гр02 + Пд11Пр1Ст50Гр02.Значение;
		СуммаПд11Пр1Ст50Гр02Стр = СуммаПд11Пр1Ст50Гр02Стр + Пд11Пр1Ст50Гр02.ЗначениеСтр + " + ";
		СуммаПд11Пр1Ст51Гр02 = СуммаПд11Пр1Ст51Гр02 + Пд11Пр1Ст51Гр02.Значение;
		СуммаПд11Пр1Ст51Гр02Стр = СуммаПд11Пр1Ст51Гр02Стр + Пд11Пр1Ст51Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321Ст250Гр02 = 0;
	СуммаПд321Ст250Гр02Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр02);
		Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд321Ст250Гр02, "Раздел3", НомерСтраницыСтр);
			СуммаПд321Ст250Гр02Стр = СуммаПд321Ст250Гр02Стр + Пд321Ст250Гр02.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд321Ст250Гр02Стр = СуммаПд321Ст250Гр02Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд321Ст250Гр02 = СуммаПд321Ст250Гр02 + Пд321Ст250Гр02.Значение;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст50Гр02 - СуммаПд11Пр1Ст51Гр02, СуммаПд321Ст250Гр02);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр02Стр) + " - (" + РасшифровкаВСтр(СуммаПд11Пр1Ст51Гр02Стр)
		+ ") Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд321Ст250Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_292(СтруктураРезультата)
	
	// Формула КС: 'Пд11Пр1Ст50Гр03 - Пд11Пр1Ст51Гр03 = Пд321СтМ1220Гр01'.
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 1.292)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1 - гр. 3 ст. 051 подр. 1.1 прил. 1 р. 1 ) по всем "
		+ "значениям поля 001 прил. 1 р. 1 = ∑ ст. 220 р. 3 при условии соответствия значения ст. 190 р. 3 первому "
		+ "месяцу отчетного (расчетного) периода по всем р. 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма баз по страховым взносам на ОПС в размере не превыш.пред.велич. за 1-й из 3-х "
		+ "последних месяцев отчетного периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш.пред.велич. по каждому физическому лицу за 1-й из 3-х последних месяцев отчетного периода при "
		+ "условии соответствия значения месяца 1-му месяцу отчетного периода по каждому физическому лицу.'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_1_294_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_1_293(СтруктураРезультата)
	
	// Формула КС: 'Пд11Пр1Ст50Гр04 - Пд11Пр1Ст51Гр04 = Пд321СтМ1220Гр01'.
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 1.293)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1 - гр. 4 ст. 051 подр. 1.1 прил. 1 р. 1 ) по всем "
		+ "значениям поля 001 прил. 1 р. 1 = ∑ ст. 220 р. 3 при условии соответствия значения ст. 190 р. 3 второму "
		+ "месяцу отчетного (расчетного) периода по всем р. 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма баз по страховым взносам на ОПС в размере не превыш.пред.велич. за 2-й из 3-х "
		+ "последних месяцев отчетного периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш.пред.велич. по каждому физическому лицу за 2-й из 3-х последних месяцев отчетного периода при "
		+ "условии соответствия значения месяца 2-му месяцу отчетного периода по каждому физическому лицу.'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_1_294_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_1_294(СтруктураРезультата)
	
	// Формула КС: 'Пд11Пр1Ст50Гр05 - Пд11Пр1Ст51Гр05 = Пд321СтМ1220Гр01'.
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 1.294)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1 - гр. 5 ст. 051 подр. 1.1 прил. 1 р. 1 ) по всем "
		+ "значениям поля 001 прил. 1 р. 1 = ∑ ст. 220 р. 3 при условии соответствия значения ст. 190 р. 3 третьему "
		+ "месяцу отчетного (расчетного) периода по всем р. 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сумма баз по страховым взносам на ОПС в размере не превыш.пред.велич. за 3-й из 3-х "
		+ "последних месяцев отчетного периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш.пред.велич. по каждому физическому лицу за 3-й из 3-х последних месяцев отчетного периода при "
		+ "условии соответствия значения месяца 3-му месяцу отчетного периода по каждому физическому лицу.'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_1_294_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_1_294_код(Настройки)
	
	ЗарегистрироватьФормулу(Настройки);
	
	ПоказательР1_1		= ПоказательПоСтроке("Пд11Пр1Ст50Гр0" + Настройки.ГрафаР1);
	ПоказательР1_3		= ПоказательПоСтроке("Пд11Пр1Ст51Гр0" + Настройки.ГрафаР1);
	ПоказательР3_1		= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	ПоказательР3_1ПРП	= ПоказательПоСтроке("Пд321СтМ1220Гр01ПРП");
	МесяцОтчета			= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	СуммаР1_1		= 0;
	СуммаР1_1Стр	= "";
	Для Каждого СтраницаР1 Из мДанныеОтчета.Раздел1Прил1 Цикл
		ВставитьЗначениеПоказателя(СтраницаР1.Данные, ПоказательР1_1);
		ВставитьЗначениеПоказателя(СтраницаР1.Данные, ПоказательР1_3);
		ВнестиПоказательВРасшифровку(ПоказательР1_1, "Раздел1Прил1Подр1_1и1_2", СтраницаР1.НомерСтраницы);
		ВнестиПоказательВРасшифровку(ПоказательР1_3, "Раздел1Прил1Подр1_1и1_2", СтраницаР1.НомерСтраницы);
		СуммаР1_1 = СуммаР1_1 + ПоказательР1_1.Значение - ПоказательР1_3.Значение;
		СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_1.ЗначениеСтр + " - " + ПоказательР1_3.ЗначениеСтр + " + ";
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.ГрафаР3);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел321.ГруппаТарифов КАК ГруппаТарифов,
	|	ВТ_Раздел321.Фамилия +
	|	ВТ_Раздел321.Снилс + ВТ_Раздел321.Категория КАК Ключ,
	|	ВТ_Раздел321.Категория КАК Категория,
	|	ВТ_Раздел321.Фамилия КАК Фамилия,
	|	ВТ_Раздел321.Снилс КАК Снилс,
	|	ВТ_Раздел321.Месяц_ КАК Период,
	|	ВТ_Раздел321.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел321.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел321.Отчет КАК Отчет,
	|	ВТ_Раздел321.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел321.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел321.П220 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел321 КАК ВТ_Раздел321
	|ГДЕ
	|	ВТ_Раздел321.Квартал_ В (&Квартал)
	|	И ВТ_Раздел321.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СуммаР3_1		= 0;
	СуммаР3_1Стр	= "";
	Счетчик = 1;
	Если ВыборкаТ.Следующий() Тогда
		СуммаР3_1	= ВыборкаТ.ПоказательР3_1;
		Выборка		= ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
			ПоказательР3_1 = ?(МесяцОтчета <> Выборка.РасчПериод, ПоказательР3_1ПРП, ПоказательР3_1);
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
			Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				Дополнение = Выборка.ПериодСтр + " мес., кат. " + Выборка.Категория + " => тариф " 
					+ Выборка.ГруппаТарифов + ", " + Выборка.Фамилия + ", " + Выборка.Снилс;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
				Счетчик = Счетчик + 1;
			КонецЕсли;
			Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаР3_1), "<...>", "0"), 
					ПоказательР3_1.Значение) + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка = НЕ СуммаР1_1 = СуммаР3_1;
	Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
		РасшифровкаВСтр(СуммаР1_1Стр), СуммаР1_1, РасшифровкаВСтр(СуммаР3_1Стр), СуммаР3_1);
	ДополнитьСтруктуруОшибок(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС_1_295(СтруктураРезультата)
	
	// Формула КС: 'Пд131Пр1Ст40Гр03 + Пд132Пр1Ст40Гр03 = Пд322Ст280Гр01'.
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 1.295)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ всех гр. 3 ст. 040 подр. 1.3.1 прил. 1 р. 1 по всем значениям ст. 001 подр. 1.3.1 прил. "
		+ "1 р. 1 + ∑ всех гр. 3 ст. 040 подр. 1.3.2 прил. 1 р. 1 по всем комбинациям значений полей 001, 002, 003 "
		+ "подр. 1.3.2 прил. 1 р. 1 = ∑ ст. 280 р. 3 при условии соответствия значения ст. 260 р. 3 первому месяцу "
		+ "отчетного (расчетного) периода по всем р. 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База для начисления страховых взносов на ОПС по доп. тарифу (п. 1 и п. 2 ст. 428) по всем "
		+ "основаниям для исчисления доп. тарифа и база для начисления страховых взносов на ОПС по доп. тарифу (п. 3 "
		+ "ст. 428) по всем комбинациям 001, 002 и 003 за 1-й из 3-х последних месяцев отчетного периода ≠ сумме выплат "
		+ "по страховым взносам на ОПС по доп. тарифу по каждому физическому лицу за 1-й из 3-х последних месяцев "
		+ "отчетного периода при условии соответствия значения месяца 1-му месяцу отчетного периода по каждому "
		+ "физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 3);
	Настройки.Вставить("ГрафаР3", 3);
	ПроверитьКС_1_297_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_1_296(СтруктураРезультата)
	
	// Формула КС: 'Пд131Пр1Ст40Гр04 + Пд132Пр1Ст40Гр04 = Пд322Ст280Гр01'.
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 1.296)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ всех гр. 4 ст. 040 подр. 1.3.1 прил. 1 р. 1 по всем значениям ст. 001 подр. 1.3.1 прил. "
		+ "1 р. 1 + ∑ всех гр. 4 ст. 040 подр. 1.3.2 прил. 1 р. 1 по всем комбинациям значений полей 001, 002, 003 "
		+ "подр. 1.3.2 прил. 1 р. 1 = ∑ ст. 280 р. 3 при условии соответствия значения ст. 260 р. 3 второму месяцу "
		+ "отчетного (расчетного) периода по всем р. 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База для начисления страховых взносов на ОПС по доп. тарифу (п. 1 и п. 2 ст. 428) по всем "
		+ "основаниям для исчисления доп. тарифа и база для начисления страховых взносов на ОПС по доп. тарифу (п. 3 "
		+ "ст. 428) по всем комбинациям 001, 002 и 003 за 2-й из 3-х последних месяцев отчетного периода ≠ сумме выплат "
		+ "по страховым взносам на ОПС по доп. тарифу по каждому физическому лицу за 2-й из 3-х последних месяцев "
		+ "отчетного периода при условии соответствия значения месяца 2-му месяцу отчетного периода по каждому "
		+ "физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 4);
	Настройки.Вставить("ГрафаР3", 4);
	ПроверитьКС_1_297_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_1_297(СтруктураРезультата)
	
	// Формула КС: 'Пд131Пр1Ст40Гр05 + Пд132Пр1Ст40Гр05 = Пд322Ст280Гр01'.
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 1.297)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ всех гр. 5 ст. 040 подр. 1.3.1 прил. 1 р. 1 по всем значениям ст. 001 подр. 1.3.1 прил. "
		+ "1 р. 1 + ∑ всех гр. 5 ст. 040 подр. 1.3.2 прил. 1 р. 1 по всем комбинациям значений полей 001, 002, 003 "
		+ "подр. 1.3.2 прил. 1 р. 1 = ∑ ст. 280 р. 3 при условии соответствия значения ст. 260 р. 3 третьему месяцу "
		+ "отчетного (расчетного) периода по всем р. 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='База для начисления страховых взносов на ОПС по доп. тарифу (п. 1 и п. 2 ст. 428) по всем "
		+ "основаниям для исчисления доп. тарифа и база для начисления страховых взносов на ОПС по доп. тарифу (п. 3 "
		+ "ст. 428) по всем комбинациям 001, 002 и 003 за 3-й из 3-х последних месяцев отчетного периода ≠ сумме выплат "
		+ "по страховым взносам на ОПС по доп. тарифу по каждому физическому лицу за 3-й из 3-х последних месяцев "
		+ "отчетного периода при условии соответствия значения месяца 3-му месяцу отчетного периода по каждому "
		+ "физическому лицу'"));
		
	Настройки = ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("Квартал", Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	Настройки.Вставить("ГрафаР1", 5);
	Настройки.Вставить("ГрафаР3", 5);
	ПроверитьКС_1_297_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_1_297_код(Настройки)
	
	ЗарегистрироватьФормулу(Настройки);
	
	ПоказательР1_1	= ПоказательПоСтроке("Пд131Пр1Ст40Гр0" + Настройки.ГрафаР1);
	ПоказательР1_3	= ПоказательПоСтроке("Пд132Пр1Ст40Гр0" + Настройки.ГрафаР1);
	ПоказательР3_1		= ПоказательПоСтроке("Пд322Ст280Гр01");
	ПоказательР3_1ПРП	= ПоказательПоСтроке("Пд322Ст280Гр01ПРП");
	МесяцОтчета			= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
	СуммаР1_1		= 0;
	СуммаР1_1Стр	= "";
	Для Каждого СтраницаР1 Из мДанныеОтчета.Раздел1Прил1 Цикл
		КолвоСтрок = КоличествоСтрок(СтраницаР1.Данные, ПоказательР1_1.Имя);
		Для Инд = 1 По КолвоСтрок Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаР1.Данные, ПоказательР1_1, Инд);
			ВнестиПоказательВРасшифровку(ПоказательР1_1, "Раздел1Прил1Подр1_3_1", СтраницаР1.НомерСтраницы);
			СуммаР1_1 = СуммаР1_1 + ПоказательР1_1.Значение;
			СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_1.ЗначениеСтр + " + ";
		КонецЦикла;
		КолвоСтрок = КоличествоСтрок(СтраницаР1.Данные, ПоказательР1_3.Имя);
		Для Инд = 1 По КолвоСтрок Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаР1.Данные, ПоказательР1_3, Инд);
			ВнестиПоказательВРасшифровку(ПоказательР1_3, "Раздел1Прил1Подр1_3_2", СтраницаР1.НомерСтраницы);
			СуммаР1_1 = СуммаР1_1 + ПоказательР1_3.Значение;
			СуммаР1_1Стр = СуммаР1_1Стр + ПоказательР1_3.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мДанныеОтчета.ДанныеКС.ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Квартал"	, Настройки.Квартал);
	Запрос.УстановитьПараметр("Графа"	, Настройки.ГрафаР3);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_Раздел322.Категория КАК Категория,
	|	ВТ_Раздел322.Фамилия + ВТ_Раздел322.Снилс КАК Ключ,
	|	ВТ_Раздел322.Фамилия КАК Фамилия,
	|	ВТ_Раздел322.Снилс КАК Снилс,
	|	ВТ_Раздел322.Месяц_ КАК Период,
	|	ВТ_Раздел322.МесяцСтр КАК ПериодСтр,
	|	ВТ_Раздел322.Квартал_ КАК РасчПериод,
	|	ВТ_Раздел322.Отчет КАК Отчет,
	|	ВТ_Раздел322.НомерСтроки КАК НомерСтроки,
	|	ВТ_Раздел322.НомерСтраницы КАК НомерСтраницы,
	|	ВТ_Раздел322.П280 КАК ПоказательР3_1
	|ИЗ
	|	ВТ_Раздел322 КАК ВТ_Раздел322
	|ГДЕ
	|	ВТ_Раздел322.Квартал_ В (&Квартал)
	|	И ВТ_Раздел322.Графа В (&Графа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Период УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3_1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СуммаР3_1		= 0;
	СуммаР3_1Стр	= "";
	Счетчик = 1;
	Если ВыборкаТ.Следующий() Тогда
		СуммаР3_1	= ВыборкаТ.ПоказательР3_1;
		Выборка		= ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Отчет = ?(ЗначениеЗаполнено(Выборка.Отчет), Выборка.Отчет, Неопределено);
			ПоказательР3_1 = ?(МесяцОтчета <> Выборка.РасчПериод, ПоказательР3_1ПРП, ПоказательР3_1);
			ВставитьЗначениеМногострочногоПоказателя(Выборка, ПоказательР3_1, Выборка.НомерСтроки, "ПоказательР3_1");
			Если ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				Дополнение = Выборка.ПериодСтр + " месяц, код тарифа " + Выборка.Категория + ", " + 
					Выборка.Фамилия + ", " + Выборка.Снилс;
				ДобавитьИнфоКПредставлениюПоказателя(ПоказательР3_1, Дополнение);
				ВнестиПоказательВРасшифровку(ПоказательР3_1, "Раздел3", Выборка.НомерСтраницы, Отчет);
				Счетчик = Счетчик + 1;
			КонецЕсли;
			Если Счетчик <= 6 И ЗначениеЗаполнено(Выборка.ПоказательР3_1) Тогда
				СуммаР3_1Стр = СуммаР3_1Стр + ?(Счетчик = 6, ?(ЗначениеЗаполнено(СуммаР3_1), "<...>", "0"), 
					ПоказательР3_1.Значение) + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка = НЕ СуммаР1_1 = СуммаР3_1;
	Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
		РасшифровкаВСтр(СуммаР1_1Стр), СуммаР1_1, РасшифровкаВСтр(СуммаР3_1Стр), СуммаР3_1);
	ДополнитьСтруктуруОшибок(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС_1_298(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.298)'");
	ОписаниеКС     = НСтр("ru='Суммы выплат и иных вознаграждение за последние три месяца (гр. 1 ст. 250 р. 3) = ∑ ст. "
		+ "210 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС в разрезе каждого физического лица за 3 "
		+ "последних месяца отчетного периода ≠ сумме выплат по страховым взносам на ОПС в разрезе каждого физического "
		+ "лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр01 = Пд321СтМ1210Гр01'.
	
	// Действие КС 1.298 приостановлено в связи с дублированием КС 0.13
	Возврат;
	
	Пд321Ст250Гр01 = ПоказательПоСтроке("Пд321Ст250Гр01");
	Пд321СтМ1210Гр01 = ПоказательПоСтроке("Пд321СтМ1210Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр01);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр01, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1210Гр01 = 0;
		СуммаПд321СтМ1210Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1210Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1210Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1210Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1210Гр01 = СуммаПд321СтМ1210Гр01 + Пд321СтМ1210Гр01.Значение;
			СуммаПд321СтМ1210Гр01Стр = СуммаПд321СтМ1210Гр01Стр + Пд321СтМ1210Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр01.Значение, СуммаПд321СтМ1210Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_299(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.299)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на обязательное пенсионное страхование в пределах "
		+ "предельной величины за последние три месяца (гр. 2 ст. 250 р. 3) = ∑ ст. 220 р. 3'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОПС, не превышающая предельную величину, в разрезе каждого "
		+ "физического лица за 3 последних месяца отчетного периода ≠ сумме баз по страховым взносам на ОПС, не "
		+ "превыш.пред.величину, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр02 = Пд321СтМ1220Гр01'.
	
	// Действие КС 1.299 приостановлено в связи с дублированием КС 0.17
	Возврат;
	
	Пд321Ст250Гр02 = ПоказательПоСтроке("Пд321Ст250Гр02");
	Пд321СтМ1220Гр01 = ПоказательПоСтроке("Пд321СтМ1220Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр02);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр02, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1220Гр01 = 0;
		СуммаПд321СтМ1220Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1220Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1220Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1220Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1220Гр01 = СуммаПд321СтМ1220Гр01 + Пд321СтМ1220Гр01.Значение;
			СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + Пд321СтМ1220Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр02.Значение, СуммаПд321СтМ1220Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_300(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.300)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на обязательное пенсионное страхование по "
		+ "гражданско-правовым договорам за последние три месяца (гр. 3 ст. 250 р. 3) = ∑ ст. 230 р. 3'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОПС, не превышающая предельную величину по ГПД, в разрезе "
		+ "каждого физического лица за 3 последних месяца отчетного периода ≠ сумме баз по страховым взносам на ОПС, не "
		+ "превыш.пред.величину по ГПД, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр03 = Пд321СтМ1230Гр01'.
	
	Пд321Ст250Гр03 = ПоказательПоСтроке("Пд321Ст250Гр03");
	Пд321СтМ1230Гр01 = ПоказательПоСтроке("Пд321СтМ1230Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр03);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр03, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1230Гр01 = 0;
		СуммаПд321СтМ1230Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1230Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1230Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1230Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1230Гр01 = СуммаПд321СтМ1230Гр01 + Пд321СтМ1230Гр01.Значение;
			СуммаПд321СтМ1230Гр01Стр = СуммаПд321СтМ1230Гр01Стр + Пд321СтМ1230Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр03.Значение, СуммаПд321СтМ1230Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_301(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.301)'");
	ОписаниеКС     = НСтр("ru='Сумма исчисленных страховых взносов с базы исчисления страховых взносов, не превышающих "
		+ "предельную величину за последние три месяца (гр. 4 ст. 250 р. 3) = ∑ ст. 240 р. 3'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, не превыш.пред.величину, в разрезе каждого физического "
		+ "лица за 3 последних месяца отчетного периода ≠ сумме страховых взносов на ОПС с базы, не превышающей "
		+ "предельную величину, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр04 = Пд321СтМ1240Гр01'.
	
	// Действие КС 1.301 приостановлено в связи с дублированием КС 0.2
	Возврат;
	
	Пд321Ст250Гр04 = ПоказательПоСтроке("Пд321Ст250Гр04");
	Пд321СтМ1240Гр01 = ПоказательПоСтроке("Пд321СтМ1240Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр04);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр04, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1240Гр01 = 0;
		СуммаПд321СтМ1240Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1240Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1240Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1240Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1240Гр01 = СуммаПд321СтМ1240Гр01 + Пд321СтМ1240Гр01.Значение;
			СуммаПд321СтМ1240Гр01Стр = СуммаПд321СтМ1240Гр01Стр + Пд321СтМ1240Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр04.Значение, СуммаПд321СтМ1240Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_302(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.302)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, на которые начислены страховые взносы за последние "
		+ "три месяца (гр. 1 ст. 300 р. 3) = ∑ ст. 280 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС по дополнительному тарифу, в разрезе каждого "
		+ "физического лица за 3 последних месяца отчетного периода ≠ сумме выплат по страховым взносам на ОПС по "
		+ "дополнительному тарифу, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд322Ст300Гр01 = Пд322Ст280Гр01'.
	
	// Действие КС 1.302 приостановлено в связи с дублированием КС 0.21
	Возврат;
	
	Пд322Ст300Гр01 = ПоказательПоСтроке("Пд322Ст300Гр01");
	Пд322Ст280Гр01 = ПоказательПоСтроке("Пд322Ст280Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд322Ст300Гр01);
		ВнестиПоказательВРасшифровку(Пд322Ст300Гр01, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд322Ст280Гр01 = 0;
		СуммаПд322Ст280Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст280Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст280Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд322Ст280Гр01 = СуммаПд322Ст280Гр01 + Пд322Ст280Гр01.Значение;
			СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + Пд322Ст280Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд322Ст300Гр01.Значение, СуммаПд322Ст280Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_303(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.303)'");
	ОписаниеКС     = НСтр("ru='Сумма исчисленных страховых взносов за последние три месяца (гр. 2 ст. 300 р. 3) = ∑ ст. "
		+ "290 р. 3'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС по доп.тарифу, в разрезе каждого физического лица за 3 последних "
		+ "месяца отчетного периода ≠ сумме страховых взносов на ОПС по дополнительному тарифу, в разрезе каждого "
		+ "физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд322Ст300Гр02 = Пд322Ст290Гр01'.
	
	// Действие КС 1.303 приостановлено в связи с дублированием КС 0.7
	Возврат;
	
	Пд322Ст300Гр02 = ПоказательПоСтроке("Пд322Ст300Гр02");
	Пд322Ст290Гр01 = ПоказательПоСтроке("Пд322Ст290Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд322Ст300Гр02);
		ВнестиПоказательВРасшифровку(Пд322Ст300Гр02, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд322Ст290Гр01 = 0;
		СуммаПд322Ст290Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст290Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст290Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд322Ст290Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд322Ст290Гр01 = СуммаПд322Ст290Гр01 + Пд322Ст290Гр01.Значение;
			СуммаПд322Ст290Гр01Стр = СуммаПд322Ст290Гр01Стр + Пд322Ст290Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд322Ст300Гр02.Значение, СуммаПд322Ст290Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_304(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.304)'");
	ОписаниеКС     = НСтр("ru='Сумма базы по страховым взносам (гр. 2 ст. 250 р. 3 СВ оп + гр. 2 ст. 250 р. 3 СВ "
		+ "предыдущего отчетного периода (в пределах расчетного периода)) <= 876 000'");
	ОписаниеОшибки = НСтр("ru='Сумма базы по страховым взносам на ОПС, не превышающей предельную величину, в разрезе "
		+ "каждого физического лица за 3 последних месяца отчетного периода и суммы аналогичных баз за все предыдущие "
		+ "периоды в пределах отчетного периода больше предельной величины 876000'");
	
	// Формула КС кратко: 'Пд321Ст250Гр02 + Пд321Ст250Гр02ПРП <= 876000'.
	
	// Действие КС 1.304 приостановлено в связи с дублированием КС 0.11а
	Возврат;
	
	Пд321Ст250Гр02 = ПоказательПоСтроке("Пд321Ст250Гр02");
	Пд321Ст250Гр02ПРП = ПоказательПоСтроке("Пд321Ст250Гр02ПРП");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел3ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел3ПРП = мДанныеОтчетаПРП.Раздел3;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	КоличествоПроверенныхСтраниц = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КоличествоПроверенныхСтраниц = КоличествоПроверенныхСтраниц + 1;
		
		ИННФЛ = Неопределено;
		ДанныеСтраницы.Свойство("П000310006001", ИННФЛ);
		СНИЛС = Неопределено;
		ДанныеСтраницы.Свойство("П000310007001", СНИЛС);
		Если НЕ ЗначениеЗаполнено(ИННФЛ) И НЕ ЗначениеЗаполнено(СНИЛС) Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр02);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр02, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321Ст250Гр02ПРП = 0;
		СуммаПд321Ст250Гр02ПРПСтр = "";
		
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел3ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				
				ИННФЛ_ПРП = Неопределено;
				ДанныеСтраницыПРП.Свойство("П000310006001", ИННФЛ_ПРП);
				СНИЛС_ПРП = Неопределено;
				ДанныеСтраницыПРП.Свойство("П000310007001", СНИЛС_ПРП);
				Если НЕ ЗначениеЗаполнено(ИННФЛ_ПРП) И НЕ ЗначениеЗаполнено(СНИЛС_ПРП) Тогда
					Продолжить;
				КонецЕсли;
				
				Если (ИННФЛ = ИННФЛ_ПРП) И (СНИЛС = СНИЛС_ПРП) Тогда
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд321Ст250Гр02ПРП);
					ВнестиПоказательВРасшифровку(Пд321Ст250Гр02ПРП, "Раздел3", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд321Ст250Гр02ПРП = СуммаПд321Ст250Гр02ПРП + Пд321Ст250Гр02ПРП.Значение;
					СуммаПд321Ст250Гр02ПРПСтр = СуммаПд321Ст250Гр02ПРПСтр + Пд321Ст250Гр02ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд321Ст250Гр02.Значение + СуммаПд321Ст250Гр02ПРП, 876000);
		Расшифровка = Пд321Ст250Гр02.ЗначениеСтр + " + " + РасшифровкаВСтр(СуммаПд321Ст250Гр02ПРПСтр)
			+ " Итог [" + КС.ЛеваяЧастьСтр + "]" + " <= " + КС.ПраваяЧастьСтр + ", когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть <= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		Если КоличествоПроверенныхСтраниц >= 1000 Тогда
			Расшифровка = Расшифровка + Символы.ПС + Символы.ПС + НСтр("ru='Последняя проверка для этого КС (проверяется не более 1000 ФЛ)'");
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
		Если КоличествоПроверенныхСтраниц >= 1000 Тогда // Для этого КС установлено ограничение - 1000 проверок
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС_1_305(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.305)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОПС с начала расчетного периода (гр. 1 ст. 010 "
		+ "подразд.1.1 р. 1 СВ) > 0 при ст. 160 р. 3 СВ = 1'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОПС с начала расчетного периода <= 0 при ст. 160 р. 3 СВ "
		+ "= 1'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 > 0, когда Пд31Ст160Гр01 = "1"'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд31Ст160Гр01 = ПоказательПоСтроке("Пд31Ст160Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд31Ст160Гр01Стр = "0";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст160Гр01);
		Если Пд31Ст160Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст160Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд31Ст160Гр01Стр = "1";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд11Пр1Ст10Гр01 = 0;
	СуммаПд11Пр1Ст10Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст10Гр01 = СуммаПд11Пр1Ст10Гр01 + Пд11Пр1Ст10Гр01.Значение;
		СуммаПд11Пр1Ст10Гр01Стр = СуммаПд11Пр1Ст10Гр01Стр + Пд11Пр1Ст10Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст10Гр01, 0);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " > "
		+ КС.ПраваяЧастьСтр + ", при " + СуммаПд31Ст160Гр01Стр + " = 1";
	
	УсловиеВыполнено = СуммаПд31Ст160Гр01Стр = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_306(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.306)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОМС с начала расчетного периода (гр. 1 ст. 010 подразд. "
		+ "1.2 р. 1 СВ) > 0 при ст. 170 р. 3 СВ = 1'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОМС с начала расчетного периода <= 0 при ст. 170 р. 3 СВ "
		+ "= 1'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 > 0, когда Пд31Ст170Гр01 = "1"'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд31Ст170Гр01 = ПоказательПоСтроке("Пд31Ст170Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд31Ст170Гр01Стр = "0";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст170Гр01);
		Если Пд31Ст170Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст170Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд31Ст170Гр01Стр = "1";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд12Пр1Ст10Гр01 = 0;
	СуммаПд12Пр1Ст10Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст10Гр01 = СуммаПд12Пр1Ст10Гр01 + Пд12Пр1Ст10Гр01.Значение;
		СуммаПд12Пр1Ст10Гр01Стр = СуммаПд12Пр1Ст10Гр01Стр + Пд12Пр1Ст10Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд12Пр1Ст10Гр01, 0);
	Расшифровка = РасшифровкаВСтр(СуммаПд12Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " > "
		+ КС.ПраваяЧастьСтр + ", при " + СуммаПд31Ст170Гр01Стр + " = 1";
	
	УсловиеВыполнено = СуммаПд31Ст170Гр01Стр = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_307(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.307)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОСС с начала расчетного периода (гр. 1 ст. 010 прилож. 2 "
		+ "р. 1 СВ) > 0 при ст. 180 р. 3 СВ = 1'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОСС с начала расчетного периода <= 0 при ст. 180 р. 3 СВ "
		+ "= 1'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр01 > 0, когда Пд31Ст180Гр01 = "1"'.
	
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	Пд31Ст180Гр01 = ПоказательПоСтроке("Пд31Ст180Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд31Ст180Гр01Стр = "0";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст180Гр01);
		Если Пд31Ст180Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст180Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд31Ст180Гр01Стр = "1";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", при " + СуммаПд31Ст180Гр01Стр + " = 1";
	
	УсловиеВыполнено = СуммаПд31Ст180Гр01Стр = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_308(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.308)'");
	ОписаниеКС     = НСтр("ru=' Количество застрахованных лиц на ОПС (гр. 2 ст. 010 подразд. 1.1 прилож. 1 р. 1 СВ) = "
		+ "количеству лиц застрахованных в системе ОПС (∑ стр. 160 р. 3 СВ = 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОПС, указанных в расчете сумм страховых взносов ≠ "
		+ "количеству лиц застрахованных в системе ОПС, указанных в составе персонифицированных сведений'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 = СтрПд31Ст160Гр01ОПС, когда Пд31Ст160Гр01 = "1"'.
	
	Если мДанныеОтчета.ДанныеКС.ИспользуетсяНесколькоТарифов Тогда
		Возврат;
	КонецЕсли;
	
	Пд11Пр1Ст10Гр02	= ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд31Ст160Гр01	= ПоказательПоСтроке("Пд31Ст160Гр01");
	Пд31Ст70Гр01	= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01	= ПоказательПоСтроке("Пд31Ст80Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СтрПд31Ст160Гр01ОПС = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст160Гр01);
		Если Пд31Ст160Гр01.Значение = "1" Тогда
			ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст70Гр01);
			ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст80Гр01);
			Дополнение = Пд31Ст80Гр01.Значение + ", " + Пд31Ст70Гр01.Значение;
			ДобавитьИнфоКПредставлениюПоказателя(Пд31Ст160Гр01, Дополнение);
			ВнестиПоказательВРасшифровку(Пд31Ст160Гр01, "Раздел3", НомерСтраницыСтр);
			СтрПд31Ст160Гр01ОПС = СтрПд31Ст160Гр01ОПС + 1;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд11Пр1Ст10Гр02 = 0;
	СуммаПд11Пр1Ст10Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст10Гр02 = СуммаПд11Пр1Ст10Гр02 + Пд11Пр1Ст10Гр02.Значение;
		СуммаПд11Пр1Ст10Гр02Стр = СуммаПд11Пр1Ст10Гр02Стр + Пд11Пр1Ст10Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст10Гр02, СтрПд31Ст160Гр01ОПС);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст10Гр02Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + КС.ПраваяЧастьСтр + ", когда стр. 160 р. 3 СВ = 1";
	
	УсловиеВыполнено = СтрПд31Ст160Гр01ОПС > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_309(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.309)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОМС (гр. 2 ст. 010 подразд. 1.2 прилож. 1 р. 1 СВ) = "
		+ "количеству лиц застрахованных в системе ОМС (∑ стр. 170 р. 3 СВ = 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОМС указанных в расчете сумм страховых взносов ≠ "
		+ "количеству лиц застрахованных в системе ОМС, указанных в составе персонифицированных сведений'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 = СтрПд31Ст170Гр01ОМС, когда Пд31Ст170Гр01 = "1"'.
	
	Если мДанныеОтчета.ДанныеКС.ИспользуетсяНесколькоТарифов Тогда
		Возврат;
	КонецЕсли;
	
	Пд12Пр1Ст10Гр02	= ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд31Ст170Гр01	= ПоказательПоСтроке("Пд31Ст170Гр01");
	Пд31Ст70Гр01	= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01	= ПоказательПоСтроке("Пд31Ст80Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СтрПд31Ст170Гр01ОМС = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст170Гр01);
		Если Пд31Ст170Гр01.Значение = "1" Тогда
			ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст70Гр01);
			ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст80Гр01);
			Дополнение = Пд31Ст80Гр01.Значение + ", " + Пд31Ст70Гр01.Значение;
			ДобавитьИнфоКПредставлениюПоказателя(Пд31Ст170Гр01, Дополнение);
			ВнестиПоказательВРасшифровку(Пд31Ст170Гр01, "Раздел3", НомерСтраницыСтр);
			СтрПд31Ст170Гр01ОМС = СтрПд31Ст170Гр01ОМС + 1;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд12Пр1Ст10Гр02 = 0;
	СуммаПд12Пр1Ст10Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст10Гр02 = СуммаПд12Пр1Ст10Гр02 + Пд12Пр1Ст10Гр02.Значение;
		СуммаПд12Пр1Ст10Гр02Стр = СуммаПд12Пр1Ст10Гр02Стр + Пд12Пр1Ст10Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд12Пр1Ст10Гр02, СтрПд31Ст170Гр01ОМС);
	Расшифровка = РасшифровкаВСтр(СуммаПд12Пр1Ст10Гр02Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + КС.ПраваяЧастьСтр + ", когда стр. 170 р. 3 СВ = 1";
	
	УсловиеВыполнено = СтрПд31Ст170Гр01ОМС > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_310(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.310)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОСС (гр. 2 ст. 010 прилож. 2 р. 1 СВ) = количеству лиц "
		+ "застрахованных в системе ОСС (∑ стр. 180 р. 3 СВ = 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОСС указанных в расчете сумм страховых взносов ≠ "
		+ "количеству лиц застрахованных в системе ОСС, указанных в составе персонифицированных сведений'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 = СтрПд31Ст180Гр01ОСС, когда Пд31Ст180Гр01 = "1"'.
	
	Р1Прил2Ст10Гр02	= ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Пд31Ст180Гр01	= ПоказательПоСтроке("Пд31Ст180Гр01");
	Пд31Ст70Гр01	= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01	= ПоказательПоСтроке("Пд31Ст80Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СтрПд31Ст180Гр01ОСС = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст180Гр01);
		Если Пд31Ст180Гр01.Значение = "1" Тогда
			ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст70Гр01);
			ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст80Гр01);
			Дополнение = Пд31Ст80Гр01.Значение + ", " + Пд31Ст70Гр01.Значение;
			ДобавитьИнфоКПредставлениюПоказателя(Пд31Ст180Гр01, Дополнение);
			ВнестиПоказательВРасшифровку(Пд31Ст180Гр01, "Раздел3", НомерСтраницыСтр);
			СтрПд31Ст180Гр01ОСС = СтрПд31Ст180Гр01ОСС + 1;
		КонецЕсли;
	КонецЦикла;
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, СтрПд31Ст180Гр01ОСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда стр. 180 р. 3 СВ = 1";
	
	УсловиеВыполнено = СтрПд31Ст180Гр01ОСС > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_1_311(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.311)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений по застрахованным лицам за последние три месяца "
		+ "отчетного (расчетного периода) (∑ гр. 1 ст. 250 р. 3 СВ) = сумме выплат и иных вознаграждений, начисленных в "
		+ "пользу физических лиц в целом по плательщику за последние три месяца отчетного (расчетного периода) (гр. 2 "
		+ "ст. 030  по всем значениям поля 001 прил.1 р. 1 подр. 1.1 р. 1 СВ)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат и иных вознаграждений по застрахованным лицам за последние три месяца "
		+ "отчетного (расчетного периода) ≠ сумме выплат и иных вознаграждений, начисленных в пользу физических лиц в "
		+ "целом по плательщику за последние три месяца отчетного (расчетного периода)'");
	
	// Формула КС кратко: 'Пд321Ст250Гр01 = Пд11Пр1Ст30Гр02'.
	
	// В связи с внесением изменений в КС 0.14, 0.15, 0.16 по письму ГД-4-11/2121@ от 05.02.2018
	// действие КС 1.311 приостановлено
	Возврат;
	
	Пд321Ст250Гр01 = ПоказательПоСтроке("Пд321Ст250Гр01");
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд321Ст250Гр01 = 0;
	СуммаПд321Ст250Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр01);
		Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд321Ст250Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321Ст250Гр01Стр = СуммаПд321Ст250Гр01Стр + Пд321Ст250Гр01.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд321Ст250Гр01Стр = СуммаПд321Ст250Гр01Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд321Ст250Гр01 = СуммаПд321Ст250Гр01 + Пд321Ст250Гр01.Значение;
	КонецЦикла;
	
	СуммаПд11Пр1Ст30Гр02 = 0;
	СуммаПд11Пр1Ст30Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст30Гр02 = СуммаПд11Пр1Ст30Гр02 + Пд11Пр1Ст30Гр02.Значение;
		СуммаПд11Пр1Ст30Гр02Стр = СуммаПд11Пр1Ст30Гр02Стр + Пд11Пр1Ст30Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд321Ст250Гр01, СуммаПд11Пр1Ст30Гр02);
	Расшифровка = РасшифровкаВСтр(СуммаПд321Ст250Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст30Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_2_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.1)'");
	ОписаниеКС     = НСтр("ru='Обязательность представления Расчета страховых взносов в случае представления 6НДФЛ'");
	ОписаниеОшибки = НСтр("ru=''");
	
	// Организация является обособленным подразделением.
	Если РегламентированнаяОтчетность.ГоловнаяОрганизация(
			СтруктураРеквизитовФормы.мСохраненныйДок.Организация) <> СтруктураРеквизитовФормы.мСохраненныйДок.Организация Тогда
		Возврат;
	КонецЕсли;
	
	Отчет6НДФЛ = РегламентированнаяОтчетность.ПолучитьДокументМДКС(СтруктураРеквизитовФормы.мСохраненныйДок, "РегламентированныйОтчет6НДФЛ");
	Если Отчет6НДФЛ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	Расшифровка = "Расчет страховых взносов должен быть обязательно представлен, т.к. существует отчет 6НДФЛ за отчетный период";
	
	ЭтоОшибка = Ложь;
	ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_2_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.2)'");
	ОписаниеКС     = НСтр("ru='Сумма начисленного дохода (ст. 020 р. 1 6НДФЛ) - Сумма начисленного дохода в виде "
		+ "дивидендов (ст. 025 р.1 6НДФЛ) >= Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, "
		+ "всего с начала расчетного периода (ст. 050 гр. 1 подр. 1.1 р. 1)(применяется в отношении плательщиков, "
		+ "не имеющих обособленных подразделений и не распространяется на индивидуальных предпринимателей, применяющих "
		+ "патентную систему налогообложения и индивидуальных предпринимателей, уплачивающих единый налог на вмененный доход)'");
	ОписаниеОшибки = НСтр("ru='Сумма начисленного дохода налогоплательщика, за исключением сумм начисленного дохода на "
		+ "дивиденды < база для начисления страховых взносов'");
	Коммент	   = НСтр("ru='Контрольное соотношение отключено по причине возможного несовпадения сумм начислений в "
		+ "Расчете по страховым взносам и Форме 6-НДФЛ. Возможное несовпадение сумм начислений обусловлено разным подходом "
		+ "к формированию налоговой базы для страховых взносов и налога на доходы физических лиц.'");
	
	// Формула КС кратко: 'Р1Ст20Гр01 - Р1Ст25Гр01 >= Пд11Пр1Ст50Гр01'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Р1Ст20Гр01_6НДФЛ = ПоказательПоСтроке("Р1Ст20Гр01_6НДФЛ");
	Р1Ст25Гр01_6НДФЛ = ПоказательПоСтроке("Р1Ст25Гр01_6НДФЛ");
	
	// Организация является обособленным подразделением или имеет обособленные подразделения.
	Если СтрНачинаетсяС(мДанныеОтчета.Титульный.ПоМесту, "222")
	 ИЛИ СтрНачинаетсяС(мДанныеОтчета.Титульный.ПоМесту, "335")
	 ИЛИ ЭтоОрганизацияСОбособленнымиПодразделениями(СтруктураРеквизитовФормы.мСохраненныйДок.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Отчет6НДФЛ = РегламентированнаяОтчетность.ПолучитьДокументМДКС(СтруктураРеквизитовФормы.мСохраненныйДок, "РегламентированныйОтчет6НДФЛ");
	Если Отчет6НДФЛ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Раздел1_6НДФЛ = Неопределено;
	
	Данные6НДФЛ = РегламентированнаяОтчетность.ПолучитьДанныеСохрРегОтчета(Отчет6НДФЛ);
	Данные6НДФЛ.ДанныеРазделовРеглОтчета.Свойство("Раздел1", Раздел1_6НДФЛ);
	Если Раздел1_6НДФЛ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1_6НДФЛ, Р1Ст20Гр01_6НДФЛ.Имя);
	СуммаР1Ст20_25Гр01 = 0;
	СуммаР1Ст20_25Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1_6НДФЛ, Р1Ст20Гр01_6НДФЛ, Инд);
		ВнестиПоказательВРасшифровку(Р1Ст20Гр01_6НДФЛ, "Раздел1", , Отчет6НДФЛ);
		ВставитьЗначениеМногострочногоПоказателя(Раздел1_6НДФЛ, Р1Ст25Гр01_6НДФЛ, Инд);
		ВнестиПоказательВРасшифровку(Р1Ст25Гр01_6НДФЛ, "Раздел1", , Отчет6НДФЛ);
		СуммаР1Ст20_25Гр01 = СуммаР1Ст20_25Гр01 + Р1Ст20Гр01_6НДФЛ.Значение - Р1Ст25Гр01_6НДФЛ.Значение;
		СуммаР1Ст20_25Гр01Стр = СуммаР1Ст20_25Гр01Стр + Р1Ст20Гр01_6НДФЛ.ЗначениеСтр + " - " + Р1Ст25Гр01_6НДФЛ.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд11Пр1Ст50Гр01 = 0;
	СуммаПд11Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст50Гр01 = СуммаПд11Пр1Ст50Гр01 + Пд11Пр1Ст50Гр01.Значение;
		СуммаПд11Пр1Ст50Гр01Стр = СуммаПд11Пр1Ст50Гр01Стр + Пд11Пр1Ст50Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1Ст20_25Гр01, СуммаПд11Пр1Ст50Гр01);
	
	// Если КС отрабатывает без ошибки, результаты выводятся в обычном режиме
	// Если КС отрабатывает с ошибкой, выводится комментарий, что КС отключено, т.к. признано противоречивым
	ЭтоОшибка = КС.ЛеваяЧасть < КС.ПраваяЧасть;
	ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Расшифровка = РасшифровкаВСтр(СуммаР1Ст20_25Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " >= "
		+ РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	Коммент = ?(ЭтоОшибка, Коммент, "");
	ЭтоОшибка = Ложь;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки,, Коммент);
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_2_3(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.3)'");
	ОписаниеКС     = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 1-ом  месяце отчетного "
		+ "периода (гр. 3 ст. 80 прилож. 2 р. 1 СВ) = сумме выделенных ФСС России средств на осуществление (возмещение) "
		+ "расходов  на выплату страхового обеспечения в 1-ом месяце отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 1-ом  месяце отчетного "
		+ "периода > суммы выделенных ФСС России средств на осуществление (возмещение) расходов  на выплату страхового обеспечения'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр03 = СуммаВыдСредствФСС'.
	
	Р1Прил2Ст80Гр03 = ПоказательПоСтроке("Р1Прил2Ст80Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр03, "Раздел1Прил2");
	
	СуммаВыдСредствФСС = Р1Прил2Ст80Гр03.Значение;
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр03.Значение, СуммаВыдСредствФСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_2_4(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.4)'");
	ОписаниеКС     = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения во 2-ом месяце отчетного "
		+ "периода (гр. 4 ст. 80 прилож. 2 р. 1 СВ) = сумме выделенных ФСС России средств на осуществление (возмещение) "
		+ "расходов  на выплату страхового обеспечения во 2-ом месяце отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения во 2-ом месяце отчетного "
		+ "периода > суммы выделенных ФСС России средств на осуществление (возмещение) расходов  на выплату страхового обеспечения'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр04 = СуммаВыдСредствФСС'.
	
	Р1Прил2Ст80Гр04 = ПоказательПоСтроке("Р1Прил2Ст80Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр04, "Раздел1Прил2");
	
	СуммаВыдСредствФСС = Р1Прил2Ст80Гр04.Значение;
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр04.Значение, СуммаВыдСредствФСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_2_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.5)'");
	ОписаниеКС     = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 3-ем месяце отчетного "
		+ "периода (гр. 5 ст. 80 прилож. 2 р. 1 СВ) = сумме выделенных ФСС России средств на осуществление (возмещение) "
		+ "расходов  на выплату страхового обеспечения в 3-ем месяце отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 3-ем месяце отчетного "
		+ "периода > суммы выделенных ФСС России средств на осуществление (возмещение) расходов  на выплату страхового обеспечения'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр05 = СуммаВыдСредствФСС'.
	
	Р1Прил2Ст80Гр05 = ПоказательПоСтроке("Р1Прил2Ст80Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр05, "Раздел1Прил2");
	
	СуммаВыдСредствФСС = Р1Прил2Ст80Гр05.Значение;
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр05.Значение, СуммаВыдСредствФСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

// Дополнительные контрольные соотношения.

Процедура ПроверитьКС_Д_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Дополнительная проверка подраздела 1.1 приложения 1 к Разделу 1 (КС Д.1)'");
	ОписаниеКС     = НСтр("ru='Сумма всех гр. 2 ст. 61 подр. 1.1 прил.1 р. 1 = сумме гр. 4 ст. 250 подр. 3.2.1 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма начисленных страховых взносов на обязательное пенсионное страхование за квартал, в "
		+ "целом по плательщику  (графа 2 строка 061 подраздела 1.1 Раздела 1) не соответствует сумме начисленных "
		+ "страховых взносов по застрахованным лицам (графа 4 строка 250 подраздела 3.2.1 Раздела 3)'");
	
	// Формула КС кратко: 'Пд11Пр1Ст61Гр02 = Пд321Ст250Гр04'.
	
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Пд321Ст250Гр04  = ПоказательПоСтроке("Пд321Ст250Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст61Гр02 = 0;
	СуммаПд11Пр1Ст61Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст61Гр02 = СуммаПд11Пр1Ст61Гр02 + Пд11Пр1Ст61Гр02.Значение;
		СуммаПд11Пр1Ст61Гр02Стр = СуммаПд11Пр1Ст61Гр02Стр + Пд11Пр1Ст61Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321Ст250Гр04 = 0;
	СуммаПд321Ст250Гр04Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр04);
		Если ЗначениеЗаполнено(ПредставлениеПродолжения) И Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд321Ст250Гр04, "Раздел3", НомерСтраницыСтр);
			СуммаПд321Ст250Гр04Стр = СуммаПд321Ст250Гр04Стр + Пд321Ст250Гр04.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд321Ст250Гр04Стр = СуммаПд321Ст250Гр04Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд321Ст250Гр04 = СуммаПд321Ст250Гр04 + Пд321Ст250Гр04.Значение;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст61Гр02, СуммаПд321Ст250Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст61Гр02Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]"
		+ " = " + РасшифровкаВСтр(СуммаПд321Ст250Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Дополнительная проверка подраздела 1.1 приложения 1 к Разделу 1 (КС Д.2)'");
	ОписаниеКС     = НСтр("ru='Сумма всех гр. 2 ст. 30 подр. 1.1 прил.1 р. 1 = сумме гр. 1 ст. 250 подр. 3.2.1 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за квартал в "
		+ "целом по плательщику (графа 2 строка 030 подраздела 1.1 приложения 1 Раздела 1) не соответствует сумме "
		+ "аналогичных данных по застрахованным лицам (графа 1 строка 250 подраздела 3.2.1 Раздела 3)'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр02 = Пд321Ст250Гр01'.
	
	// В связи с внесением изменений в КС 0.14, 0.15, 0.16 по письму ГД-4-11/2121@ от 05.02.2018
	// действие КС Д_2 приостановлено
	Возврат;
	
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд321Ст250Гр01  = ПоказательПоСтроке("Пд321Ст250Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст30Гр02 = 0;
	СуммаПд11Пр1Ст30Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст30Гр02 = СуммаПд11Пр1Ст30Гр02 + Пд11Пр1Ст30Гр02.Значение;
		СуммаПд11Пр1Ст30Гр02Стр = СуммаПд11Пр1Ст30Гр02Стр + Пд11Пр1Ст30Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321Ст250Гр01 = 0;
	СуммаПд321Ст250Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр01);
		Если ЗначениеЗаполнено(ПредставлениеПродолжения) И Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд321Ст250Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321Ст250Гр01Стр = СуммаПд321Ст250Гр01Стр + Пд321Ст250Гр01.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд321Ст250Гр01Стр = СуммаПд321Ст250Гр01Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд321Ст250Гр01 = СуммаПд321Ст250Гр01 + Пд321Ст250Гр01.Значение;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст30Гр02, СуммаПд321Ст250Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст30Гр02Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]"
		+ " = " + РасшифровкаВСтр(СуммаПд321Ст250Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_3(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Дополнительная проверка подраздела 1.1 приложения 1 к Разделу 1 (КС Д.3)'");
	ОписаниеКС     = НСтр("ru='Сумма (гр. 2 ст. 050 подр. 1.1 прил. 1 р.1 СВ - гр.2 ст. 051 подр. 1.1 прил. 1 р.1 СВ) по "
		+ "всем значениям поля 001 прил.1 р. 1 СВ  =  сумме гр. 2 ст. 250 подр. 3.2.1 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат и иных вознаграждений, входящих в базу для исчисления страховых взносов, не "
		+ "превышающая предельную, на которую начислены страховые взносы за квартал в целом по плательщику (графа 2 "
		+ "строка 050 подраздела 1.1 приложения 1 Раздела 1 за минусом значения в графе 2 строки 051 подраздела 1.1 "
		+ "приложения 1 Раздела 1 по всем значениям поля 001 приложения 1 Раздела 1) не соответствует сумме страховых "
		+ "взносов, не превышающей предельную, на которую начислены страховые взносы по застрахованным лицам (сумма "
		+ "значений по всем графам 2 строки 250 подраздела 3.2.1 Раздела 3)'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 - Пд11Пр1Ст51Гр02 = Пд321Ст250Гр02'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Пд321Ст250Гр02  = ПоказательПоСтроке("Пд321Ст250Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст5хГр02 = 0;
	СуммаПд11Пр1Ст5хГр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст5хГр02 = СуммаПд11Пр1Ст5хГр02 + Пд11Пр1Ст50Гр02.Значение - Пд11Пр1Ст51Гр02.Значение;
		СуммаПд11Пр1Ст5хГр02Стр = СуммаПд11Пр1Ст5хГр02Стр + Пд11Пр1Ст50Гр02.ЗначениеСтр + " - " + Пд11Пр1Ст51Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321Ст250Гр02 = 0;
	СуммаПд321Ст250Гр02Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр02);
		Если ЗначениеЗаполнено(ПредставлениеПродолжения) И Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд321Ст250Гр02, "Раздел3", НомерСтраницыСтр);
			СуммаПд321Ст250Гр02Стр = СуммаПд321Ст250Гр02Стр + Пд321Ст250Гр02.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд321Ст250Гр02Стр = СуммаПд321Ст250Гр02Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд321Ст250Гр02 = СуммаПд321Ст250Гр02 + Пд321Ст250Гр02.Значение;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст5хГр02, СуммаПд321Ст250Гр02);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст5хГр02Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]"
		+ " = " + РасшифровкаВСтр(СуммаПд321Ст250Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_4(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Дополнительная проверка подраздела 1.3 приложения 1 к Разделу 1 (КС Д.4)'");
	ОписаниеКС     = НСтр("ru='Сумма всех гр. 2 ст. 40 подр. 1.3.1 прил. 1 р. 1 + сумма всех гр. 2 ст. 40 подр. 1.3.2 "
		+ "прил. 1  р. 1 = сумма гр. 1 ст. 300 подр. 3.2.2 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат и иных вознаграждений, на которую начислены страховые взносы по "
		+ "дополнительному тарифу в целом по плательщику (сумма значений графы 2 строки 040 подраздела 1.3.1 приложения "
		+ "1 к Разделу 1 и графы 2 строки 040 подраздела 1.3.2 приложения 1 к Разделу 1)  не соответствует сумме выплат "
		+ "и иных вознаграждений, на которую начислены страховые взносы по дополнительному тарифу по застрахованным "
		+ "лицам (сумма значение по всем графам 1 строки 300 подраздела 3.2.2 Раздела 3)'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр02 + Пд132Пр1Ст40Гр02 = Пд322Ст300Гр01'.
	
	Пд131Пр1Ст40Гр02 = ПоказательПоСтроке("Пд131Пр1Ст40Гр02");
	Пд132Пр1Ст40Гр02 = ПоказательПоСтроке("Пд132Пр1Ст40Гр02");
	Пд322Ст300Гр01   = ПоказательПоСтроке("Пд322Ст300Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд131Пр1Ст40Гр02 = 0;
	СуммаПд131Пр1Ст40Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаПд131Пр1Ст40Гр02 = СуммаПд131Пр1Ст40Гр02 + Пд131Пр1Ст40Гр02.Значение;
			СуммаПд131Пр1Ст40Гр02Стр = СуммаПд131Пр1Ст40Гр02Стр + Пд131Пр1Ст40Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	СуммаПд132Пр1Ст40Гр02 = 0;
	СуммаПд132Пр1Ст40Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаПд132Пр1Ст40Гр02 = СуммаПд132Пр1Ст40Гр02 + Пд132Пр1Ст40Гр02.Значение;
			СуммаПд132Пр1Ст40Гр02Стр = СуммаПд132Пр1Ст40Гр02Стр + Пд132Пр1Ст40Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд322Ст300Гр01 = 0;
	СуммаПд322Ст300Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд322Ст300Гр01);
		Если ЗначениеЗаполнено(ПредставлениеПродолжения) И Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд322Ст300Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд322Ст300Гр01Стр = СуммаПд322Ст300Гр01Стр + Пд322Ст300Гр01.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд322Ст300Гр01Стр = СуммаПд322Ст300Гр01Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд322Ст300Гр01 = СуммаПд322Ст300Гр01 + Пд322Ст300Гр01.Значение;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд131Пр1Ст40Гр02 + СуммаПд132Пр1Ст40Гр02, СуммаПд322Ст300Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд131Пр1Ст40Гр02Стр) + " + " + РасшифровкаВСтр(СуммаПд132Пр1Ст40Гр02Стр)
		+ " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд322Ст300Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Дополнительная проверка подраздела 1.3 приложения 1 к Разделу 1 (КС Д.5)'");
	ОписаниеКС     = НСтр("ru='Сумма всех гр. 2 ст. 50 подр. 1.3.1 прил. 1 р. 1 + сумма всех гр. 2 ст. 50 подр. 1.3.2 "
		+ "прил. 1  р. 1 = сумма гр. 2 ст. 300 подр. 3.2.2 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов по дополнительному тарифу в целом по плательщику (сумма значений "
		+ "графы 2 строки 050 подраздела 1.3.1 и графы 2 строки 050 подраздела 1.3.2 приложения 1 к Разделу 1 не "
		+ "соответствует сумме страховые взносов по дополнительному тарифу по застрахованным лицам (значение графы 2 "
		+ "строки 300 подраздела 3.2.2 Раздела 3)'");
	
	// Формула КС кратко: 'Пд131Пр1Ст50Гр02 + Пд132Пр1Ст50Гр02 = Пд322Ст300Гр02'.
	
	Пд131Пр1Ст50Гр02 = ПоказательПоСтроке("Пд131Пр1Ст50Гр02");
	Пд132Пр1Ст50Гр02 = ПоказательПоСтроке("Пд132Пр1Ст50Гр02");
	Пд322Ст300Гр02 = ПоказательПоСтроке("Пд322Ст300Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд131Пр1Ст50Гр02 = 0;
	СуммаПд131Пр1Ст50Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаПд131Пр1Ст50Гр02 = СуммаПд131Пр1Ст50Гр02 + Пд131Пр1Ст50Гр02.Значение;
			СуммаПд131Пр1Ст50Гр02Стр = СуммаПд131Пр1Ст50Гр02Стр + Пд131Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	СуммаПд132Пр1Ст50Гр02 = 0;
	СуммаПд132Пр1Ст50Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаПд132Пр1Ст50Гр02 = СуммаПд132Пр1Ст50Гр02 + Пд132Пр1Ст50Гр02.Значение;
			СуммаПд132Пр1Ст50Гр02Стр = СуммаПд132Пр1Ст50Гр02Стр + Пд132Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд322Ст300Гр02 = 0;
	СуммаПд322Ст300Гр02Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд322Ст300Гр02);
		Если ЗначениеЗаполнено(ПредставлениеПродолжения) И Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд322Ст300Гр02, "Раздел3", НомерСтраницыСтр);
			СуммаПд322Ст300Гр02Стр = СуммаПд322Ст300Гр02Стр + Пд322Ст300Гр02.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд322Ст300Гр02Стр = СуммаПд322Ст300Гр02Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд322Ст300Гр02 = СуммаПд322Ст300Гр02 + Пд322Ст300Гр02.Значение;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд131Пр1Ст50Гр02 + СуммаПд132Пр1Ст50Гр02, СуммаПд322Ст300Гр02);
	Расшифровка = РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр02Стр) + " + " + РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр02Стр)
		+ " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд322Ст300Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_13(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Дополнительная проверка подраздела 3.2 Раздела 3 (КС Д.13)'");
	ОписаниеКС     = НСтр("ru='Номер месяца должен следовать в порядке возрастания и не должен повторяться в пределах "
		+ "одного блока и одной категории застрахованного лица'");
	ОписаниеОшибки = НСтр("ru='Некорректное заполнение значения порядкового номера месяца в Разделе 3 расчета'");
	
	// Формула КС кратко: 'Пд321СтМ1190Гр01 в порядке возрастания; Пд322Ст260Гр01 в порядке возрастания'.
	
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	Пд321СтМ1200Гр01 = ПоказательПоСтроке("Пд321СтМ1200Гр01");
	
	Пд322Ст260Гр01   = ПоказательПоСтроке("Пд322Ст260Гр01");
	Пд322Ст270Гр01   = ПоказательПоСтроке("Пд322Ст270Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	ЕстьОшибки = Ложь;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		ПредПд321СтМ1190Гр01 = 0;
		СписокНомеров321 = Новый СписокЗначений;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если НЕ ЗначениеЗаполнено(Пд321СтМ1190Гр01.Значение) Тогда
				Продолжить;
			КонецЕсли;
			
			ЧислоПд321СтМ1190Гр01 = Число(" " + Пд321СтМ1190Гр01.Значение);
			Если ПредПд321СтМ1190Гр01 > ЧислоПд321СтМ1190Гр01 Тогда // проверка сортировки
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = "Нарушен порядок возрастания в строке " + Формат(Инд, "ЧГ=") + " подраздела 3.2.1 Раздела 3";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			КонецЕсли;
			
			ПредПд321СтМ1190Гр01 = ЧислоПд321СтМ1190Гр01;
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1200Гр01, Инд);
			Если СписокНомеров321.НайтиПоЗначению(Пд321СтМ1190Гр01.Значение + Пд321СтМ1200Гр01.Значение) <> Неопределено Тогда // проверка дублей
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд321СтМ1200Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = "Номер месяца и категория повторяется в строке " + Формат(Инд, "ЧГ=") + " подраздела 3.2.1 Раздела 3";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
				
				Продолжить;
			КонецЕсли;
			
			СписокНомеров321.Добавить(Пд321СтМ1190Гр01.Значение + Пд321СтМ1200Гр01.Значение, Формат(Инд, "ЧГ="));
		КонецЦикла;
		
		ПредПд322Ст260Гр01 = 0;
		СписокНомеров322 = Новый СписокЗначений;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст260Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст260Гр01, Инд);
			Если НЕ ЗначениеЗаполнено(Пд322Ст260Гр01.Значение) Тогда
				Продолжить;
			КонецЕсли;
			
			ЧислоПд322Ст260Гр01 = Число(" " + Пд322Ст260Гр01.Значение);
			Если ПредПд322Ст260Гр01 > ЧислоПд322Ст260Гр01 Тогда // проверка сортировки
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(Пд322Ст260Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = "Нарушен порядок возрастания в строке " + Формат(Инд, "ЧГ=") + " подраздела 3.2.2 Раздела 3";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			КонецЕсли;
			
			ПредПд322Ст260Гр01 = ЧислоПд322Ст260Гр01;
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст270Гр01, Инд);
			Если СписокНомеров322.НайтиПоЗначению(Пд322Ст260Гр01.Значение + Пд322Ст270Гр01.Значение) <> Неопределено Тогда // проверка дублей
				ЕстьОшибки = Истина;
				
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				
				ВнестиПоказательВРасшифровку(Пд322Ст260Гр01, "Раздел3", НомерСтраницыСтр);
				
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
				
				Расшифровка = "Номер месяца повторяется в строке " + Формат(Инд, "ЧГ=") + " подраздела 3.2.2 Раздела 3";
				
				ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
					Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
				
				СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
				СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
				
				Продолжить;
			КонецЕсли;
			
			СписокНомеров322.Добавить(Пд322Ст260Гр01.Значение + Пд322Ст270Гр01.Значение, Формат(Инд, "ЧГ="));
		КонецЦикла;
		
	КонецЦикла;
	
	Если НЕ ЕстьОшибки Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		Расшифровка = НСтр("ru='Номера месяцев в Разделе 3 следуют в порядке возрастания и не повторяются в пределах каждого подраздела'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_Д_14(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Дополнительная проверка подраздела 3.2.2 Раздела 3 (КС Д.14)'");
	ОписаниеКС     = НСтр("ru='При значении показателей в графах 280 или 290 подр.3.2.2 р. 3 > 0,соответствующая графа "
		+ "260 подр. 3.2.2 р. 3 обязательна к заполнению и ≠ ""00""'");
	ОписаниеОшибки = НСтр("ru='Некорректное заполнение значения порядкового номера месяца в подразделе 3.2.2 Раздела 3 "
		+ "при наличии заполненных значений о сумме выплат и иных вознаграждений, начисленных в пользу физического "
		+ "лица, на которые исчислены страховые взносы по дополнительному тарифу'");
	
	// Формула КС кратко: 'Пд322Ст260Гр01 <> "00", когда Пд322Ст280Гр01 + Пд322Ст290Гр01 > 0'.
	
	Пд322Ст260Гр01 = ПоказательПоСтроке("Пд322Ст260Гр01");
	Пд322Ст280Гр01 = ПоказательПоСтроке("Пд322Ст280Гр01");
	Пд322Ст290Гр01 = ПоказательПоСтроке("Пд322Ст290Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	ЕстьОшибки = Ложь;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст280Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст280Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст290Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст260Гр01, Инд);
			
			Если Пд322Ст280Гр01.Значение + Пд322Ст290Гр01.Значение <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Пд322Ст260Гр01.Значение) И Пд322Ст260Гр01.Значение <> "00" Тогда
				Продолжить;
			КонецЕсли;
			
			ЕстьОшибки = Истина;
			
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд322Ст290Гр01, "Раздел3", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд322Ст260Гр01, "Раздел3", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд322Ст260Гр01.Значение, "00");
			Расшифровка = """" + КС.ЛеваяЧастьСтр + """ <> """ + КС.ПраваяЧастьСтр + """, когда " + Пд322Ст280Гр01.ЗначениеСтр + " + " + Пд322Ст290Гр01.ЗначениеСтр + " > 0";
			
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если НЕ ЕстьОшибки Тогда
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		Расшифровка = НСтр("ru='Все обязательные к заполнению показатели в графах 260 подр. 3.2.2 р. 3 корректно заполнены'");
		
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС_Д_20(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1190Гр01 обязателен к заполнению и соответствию
	// значениям из списка: 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Дополнительная проверка подраздела 3.2.1 Раздела 3 (КС Д.20)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Номер месяца в строке 190 подраздела 3.2.1 Раздела 3 обязателен к заполнению и должен принимать одно из "
		+ "значений: 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, если заполнены суммовые показатели в строках "
		+ "210, 220, 240 подраздела 3.2.1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Значение месяца (%1) в списке допустимых'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Номер месяца в строке 190 подраздела 3.2.1 Раздела 3 не заполнен или имеет недопустимое значение'"));
		
	Настройки			= ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	МассивЗначений		= Новый Массив;
	Пд31Ст70Гр01		= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01		= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд321СтМ1190Гр01	= ПоказательПоСтроке("Пд321СтМ1190Гр01");
	Пд321СтМ1210Гр01	= ПоказательПоСтроке("Пд321СтМ1210Гр01");
	Пд321СтМ1220Гр01	= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1240Гр01	= ПоказательПоСтроке("Пд321СтМ1240Гр01");
	
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		
		ФормулаЗарегистрирована = Ложь;
		КолвоСтрок = КоличествоСтрок(СтраницаРаздела.Данные, Пд321СтМ1190Гр01.Имя);
		МассивЗначений.Очистить();
		Для Инд = 1 По КолвоСтрок Цикл
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1210Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1220Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1240Гр01, Инд);
			Если Пд321СтМ1210Гр01.Значение + Пд321СтМ1220Гр01.Значение + Пд321СтМ1240Гр01.Значение = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1190Гр01, Инд);
			Если ЗначениеЗаполнено(Пд321СтМ1190Гр01.Значение)
				И НЕ мДанныеОтчета.ДанныеКС.МассивКодовМесяцев.Найти(СокрЛП(Пд321СтМ1190Гр01.Значение)) = Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			
			Если НЕ ФормулаЗарегистрирована Тогда
				ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст70Гр01);
				ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст80Гр01);
				Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Пд31Ст80Гр01.Значение, Пд31Ст70Гр01.Значение));
				ЗарегистрироватьФормулу(Настройки);
				ФормулаЗарегистрирована = Истина;
			КонецЕсли;
			
			Дополнение = Пд31Ст80Гр01.Значение;
			ДобавитьИнфоКПредставлениюПоказателя(Пд321СтМ1190Гр01, Дополнение);
			ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", СтраницаРаздела.НомерСтраницы);
			МассивЗначений.Добавить(?(ЗначениеЗаполнено(Пд321СтМ1190Гр01.Значение), Пд321СтМ1190Гр01.Значение, "..."));
		КонецЦикла;
		
		Если ФормулаЗарегистрирована Тогда
			Настройки.ЭтоОшибка = Истина;
			Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки, "%1",
				СтрСоединить(МассивЗначений, ", "));
			ДополнитьСтруктуруОшибок(Настройки);
		КонецЕсли;	
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_21(СтруктураРезультата)
	
	// Формула КС: Пд321СтМ1200Гр01 обязателен к заполнению и соответствию
	// значениям из списка категорий
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Дополнительная проверка подраздела 3.2.1 Раздела 3 (КС Д.21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Категория застрахованного лица в строке 200 подраздела 3.2.1 Раздела 3 обязателена к заполнению и должна "
		+ "принимать одно из значений: '") + СтрСоединить(мДанныеОтчета.ДанныеКС.МассивКодовКатегорийЗЛ, ", ")
		+ НСтр("ru=', если заполнены суммовые показатели в строках 210, 220, 240 подраздела 3.2.1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Значение категории (%1) в списке допустимых'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Категория застрахованного лица в строке 200 подраздела 3.2.1 Раздела 3 не заполнена или имеет "
		+ "недопустимое значение'"));
		
	Настройки			= ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ДопСведенияВОписаниеКС"	, Истина);
	МассивЗначений		= Новый Массив;
	Пд31Ст70Гр01		= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01		= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд321СтМ1200Гр01	= ПоказательПоСтроке("Пд321СтМ1200Гр01");
	Пд321СтМ1210Гр01	= ПоказательПоСтроке("Пд321СтМ1210Гр01");
	Пд321СтМ1220Гр01	= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1240Гр01	= ПоказательПоСтроке("Пд321СтМ1240Гр01");
	
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		
		ФормулаЗарегистрирована = Ложь;
		КолвоСтрок = КоличествоСтрок(СтраницаРаздела.Данные, Пд321СтМ1200Гр01.Имя);
		МассивЗначений.Очистить();
		Для Инд = 1 По КолвоСтрок Цикл
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1210Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1220Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1240Гр01, Инд);
			Если Пд321СтМ1210Гр01.Значение + Пд321СтМ1220Гр01.Значение + Пд321СтМ1240Гр01.Значение = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1200Гр01, Инд);
			Если ЗначениеЗаполнено(Пд321СтМ1200Гр01.Значение)
				И НЕ мДанныеОтчета.ДанныеКС.МассивКодовКатегорийЗЛ.Найти(СокрЛП(Пд321СтМ1200Гр01.Значение)) = Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			
			Если НЕ ФормулаЗарегистрирована Тогда
				ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст70Гр01);
				ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст80Гр01);
				Настройки.Вставить("ДопСведенияПараметры", Новый Структура("Ф,С", Пд31Ст80Гр01.Значение, Пд31Ст70Гр01.Значение));
				ЗарегистрироватьФормулу(Настройки);
				ФормулаЗарегистрирована = Истина;
			КонецЕсли;
			
			Дополнение = Пд31Ст80Гр01.Значение;
			ДобавитьИнфоКПредставлениюПоказателя(Пд321СтМ1200Гр01, Дополнение);
			ВнестиПоказательВРасшифровку(Пд321СтМ1200Гр01, "Раздел3", СтраницаРаздела.НомерСтраницы);
			МассивЗначений.Добавить(?(ЗначениеЗаполнено(Пд321СтМ1200Гр01.Значение), Пд321СтМ1200Гр01.Значение, "..."));
		КонецЦикла;
		
		Если ФормулаЗарегистрирована Тогда
			Настройки.ЭтоОшибка = Истина;
			Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки, "%1",
				СтрСоединить(МассивЗначений, ", "));
			ДополнитьСтруктуруОшибок(Настройки);
		КонецЕсли;	
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_22(СтруктураРезультата)
	
	// Формула КС: Р1Пр1Ст1Гр01 обязателен к заполнению и соответствию
	// значениям из списка кодов тарифов
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Дополнительная проверка Приложения 1 Раздела 1 (КС Д.22)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Код тарифа в Приложении 1 к Разделу 1 обязателен к заполнению и должен "
		+ "принимать одно из значений: '") + СтрСоединить(мДанныеОтчета.ДанныеКС.МассивКодовТарифов, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Значение тарифа (%1) в списке допустимых'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Код тарифа в Приложении 1 к Разделу 1 не заполнен или имеет недопустимое значение'"));
		
	Настройки			= ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Р1Пр1Ст1Гр01		= ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		
		ЗарегистрироватьФормулу(Настройки);
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1", СтраницаРаздела.НомерСтраницы);
		
		Настройки.ЭтоОшибка = НЕ ЗначениеЗаполнено(Р1Пр1Ст1Гр01.Значение)
			ИЛИ мДанныеОтчета.ДанныеКС.МассивКодовТарифов.Найти(СокрЛП(Р1Пр1Ст1Гр01.Значение)) = Неопределено;
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки, "%1",
			?(ЗначениеЗаполнено(Р1Пр1Ст1Гр01.Значение), Р1Пр1Ст1Гр01.Значение, "..."));
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС_Д_23(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Дополнительная проверка Приложения 7 Раздела 1 (КС Д.23)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в отчете указан код тарифа плательщика 10, то Приложение 7 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Приложение 7 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Необоснованное применение кода тарифа плательщика 10'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 427 НК РФ'"));
		
	Настройки			= ОбработатьНастройки(, Заголовки, СтруктураРезультата);
	Р1Пр1Ст1Гр01		= ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	ЗарегистрироватьФормулу(Настройки);
	Код10Указан = Ложь;
	
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Р1Пр1Ст1Гр01);
		Если Р1Пр1Ст1Гр01.Значение = "10" Тогда
			ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1", СтраницаРаздела.НомерСтраницы);
			Код10Указан = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.ЭтоОшибка = Код10Указан И НЕ РазделЗаполнен(мДанныеОтчета.Раздел1Прил7);
	Настройки.Расшифровка = Настройки.ШаблонРасшифровки;
	ДополнитьСтруктуруОшибок(Настройки);
	
	СтруктураРезультата = ОбработатьРезультат(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_ФСС

// Контрольные соотношения ФСС.

Процедура ПроверитьКС_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 2 к Разделу 1 (КС 1)'");
	ОписаниеКС     = НСтр("ru='Сумма произведенных расходов на выплату страхового обеспечения (строка 070 графа 1 "
		+ "Приложения 2) должна быть равна итоговой сумме расходов по строке 100 графы 3 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил2Ст70Гр01 = Р1Прил3Ст100Гр03'.
	
	Р1Прил2Ст70Гр01 = ПоказательПоСтроке("Р1Прил2Ст70Гр01");
	Р1Прил3Ст100Гр03 = ПоказательПоСтроке("Р1Прил3Ст100Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил2Ст70Гр01.Значение, Р1Прил3Ст100Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 2)'");
	ОписаниеКС     = НСтр("ru='Общее число получателей пособий по временной нетрудоспособности (строка 010 графа 1 "
		+ "Приложения 3) должно быть больше или равно числу получателей пособий по временной нетрудоспособности по "
		+ "внешнему совместительству (строка 011 графа 1 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр01 >= Р1Прил3Ст11Гр01'.
	
	Р1Прил3Ст10Гр01 = ПоказательПоСтроке("Р1Прил3Ст10Гр01");
	Р1Прил3Ст11Гр01 = ПоказательПоСтроке("Р1Прил3Ст11Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр01.Значение, Р1Прил3Ст11Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_3(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 3)'");
	ОписаниеКС     = НСтр("ru='Общее количество дней, выплат, пособий (строка 010 графа 2 Приложения 3) должно быть "
		+ "больше или равно количеству дней, выплат, пособий по внешнему совместительству (строка 011 графа 2 "
		+ "Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр02 >= Р1Прил3Ст11Гр02'.
	
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр02.Значение, Р1Прил3Ст11Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_4(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 4)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности, всего (строка 010 графа 3 "
		+ "Приложения 3) должна быть больше или равны сумме расходов на пособия по временной нетрудоспособности по "
		+ "внешнему совместительству (строка 011 графа 3 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр03 >= Р1Прил3Ст11Гр03'.
	
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр03.Значение, Р1Прил3Ст11Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 5)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности за счет средств, финансируемых "
		+ "из федерального бюджета (строка 010 графа 4 Приложения 3) должна быть больше или равна сумме расходов на "
		+ "пособия по временной нетрудоспособности по внешнему совместительству (строка 011 графа 4 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр04 >= Р1Прил3Ст11Гр04'.
	
	Р1Прил3Ст10Гр04 = ПоказательПоСтроке("Р1Прил3Ст10Гр04");
	Р1Прил3Ст11Гр04 = ПоказательПоСтроке("Р1Прил3Ст11Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр04.Значение, Р1Прил3Ст11Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_6(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 6)'");
	ОписаниеКС     = НСтр("ru='Общее число получателей пособий по временной нетрудоспособности работающим иностранным "
		+ "гражданам и лицам без гражданства (строка 020 графа 1 Приложения 3) должно быть больше или равно числу "
		+ "получателей пособий по временной нетрудоспособности по внешнему совместительству иностранным гражданам и "
		+ "лицам без гражданства (строка 021 графа 1 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр01 >= Р1Прил3Ст21Гр01'.
	
	Р1Прил3Ст20Гр01 = ПоказательПоСтроке("Р1Прил3Ст20Гр01");
	Р1Прил3Ст21Гр01 = ПоказательПоСтроке("Р1Прил3Ст21Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр01.Значение, Р1Прил3Ст21Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_7(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 7)'");
	ОписаниеКС     = НСтр("ru='Общее количество дней, выплат, пособий (строка 020 графа 2 Приложения 3) должно быть "
		+ "больше или равно количеству дней, выплат, пособий по внешнему совместительству (строка 021 графа 2 "
		+ "Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр02 >= Р1Прил3Ст21Гр02'.
	
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр02.Значение, Р1Прил3Ст21Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_8(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 8)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности работающим иностранным "
		+ "гражданам и лицам без гражданства, всего (строка 020 графа 3 Приложения 3) должна быть больше или равны "
		+ "сумме расходов на пособия по временной нетрудоспособности работающим иностранным гражданам и лицам без "
		+ "гражданства по внешнему совместительству (строка 021 графа 3 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр03 >= Р1Прил3Ст21Гр03'.
	
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр03.Значение, Р1Прил3Ст21Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_9(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 9)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по беременности и родам (строка 030 графа 1 Приложения 3) "
		+ "должно быть больше или равно числу получателей пособий по беременности и родам по внешнему совместительству "
		+ "(строка 031 графа 1 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр01 >= Р1Прил3Ст31Гр01'.
	
	Р1Прил3Ст30Гр01 = ПоказательПоСтроке("Р1Прил3Ст30Гр01");
	Р1Прил3Ст31Гр01 = ПоказательПоСтроке("Р1Прил3Ст31Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр01.Значение, Р1Прил3Ст31Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_10(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 10)'");
	ОписаниеКС     = НСтр("ru='Общее количество дней, выплат, пособий по беременности и родам (строка 030 графа 2 "
		+ "Приложения 3) должно быть больше или равно количеству дней, выплат, пособий по внешнему совместительству "
		+ "(строка 031 графа 2 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр02 >= Р1Прил3Ст31Гр02'.
	
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр02.Значение, Р1Прил3Ст31Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_11(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 11)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по беременности и родам, всего (строка 030 графа 3 Приложения "
		+ "3) должна быть больше или равны сумме расходов на пособия по беременности и родам по внешнему "
		+ "совместительству (строка 031 графа 3 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр03 >= Р1Прил3Ст31Гр03'.
	
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр03.Значение, Р1Прил3Ст31Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_12(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 12)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по беременности и родам за счет средств, финансируемых из "
		+ "федерального бюджета (строка 030 графа 4 Приложения 3) должна быть больше или равна сумме расходов на "
		+ "пособия по беременности и родам по внешнему совместительству (строка 031 графа 4 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр04 >= Р1Прил3Ст31Гр04'.
	
	Р1Прил3Ст30Гр04 = ПоказательПоСтроке("Р1Прил3Ст30Гр04");
	Р1Прил3Ст31Гр04 = ПоказательПоСтроке("Р1Прил3Ст31Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр04.Значение, Р1Прил3Ст31Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_13(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 13)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком (строка 060 графа 1 Приложение 3) должно "
		+ "быть больше или равно числу получателей пособий по уходу за первым ребенком (строка 061 графа 1 Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 >= Р1Прил3Ст61Гр01'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, Р1Прил3Ст61Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_14(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 14)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком (строка 060 графа 1 Приложение 3) должно "
		+ "быть больше или равно числу получателей пособий по уходу за вторым и последующими детьми (строка 062 графа 1 "
		+ "Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 >= Р1Прил3Ст62Гр01'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, Р1Прил3Ст62Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_15(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 15)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат, пособий по уходу за ребенком (строка 060 графа 2 Приложение 3) "
		+ "должно быть равно сумме показателей строк 061 и 062 графы 2 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр02 = Р1Прил3Ст61Гр02 + Р1Прил3Ст62Гр02'.
	
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр02.Значение, Р1Прил3Ст61Гр02.Значение + Р1Прил3Ст62Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст61Гр02.ЗначениеСтр + " + " + Р1Прил3Ст62Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_16(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 16)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за ребенком, всего (строка 060 графа 3 Приложение 3) "
		+ "должна быть равна сумме показателей строк 061 и 062 графы 3 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр03 = Р1Прил3Ст61Гр03 + Р1Прил3Ст62Гр03'.
	
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр03.Значение, Р1Прил3Ст61Гр03.Значение + Р1Прил3Ст62Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст61Гр03.ЗначениеСтр + " + " + Р1Прил3Ст62Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_17(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 17)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за ребенком, финансируемых из федерального бюджета "
		+ "(строка 060 графа 4 Приложение 3) должна быть равна сумме показателей строк 061 и 062 графы 4 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр04 = Р1Прил3Ст61Гр04 + Р1Прил3Ст62Гр04'.
	
	Р1Прил3Ст60Гр04 = ПоказательПоСтроке("Р1Прил3Ст60Гр04");
	Р1Прил3Ст61Гр04 = ПоказательПоСтроке("Р1Прил3Ст61Гр04");
	Р1Прил3Ст62Гр04 = ПоказательПоСтроке("Р1Прил3Ст62Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр04.Значение, Р1Прил3Ст61Гр04.Значение + Р1Прил3Ст62Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст61Гр04.ЗначениеСтр + " + " + Р1Прил3Ст62Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_18(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 18)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на оплату дополнительных выходных дней для ухода за детьми-инвалидами, "
		+ "всего (строка 070 графа 3 Приложение 3) должна быть равна сумме расходов, финансируемых из федерального "
		+ "бюджета (строка 070 графа 4 Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр03 = Р1Прил3Ст70Гр04'.
	
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	Р1Прил3Ст70Гр04 = ПоказательПоСтроке("Р1Прил3Ст70Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр03.Значение, Р1Прил3Ст70Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_19(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 19)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по страховым взносам, исчисленных на оплату дополнительных выходных дней "
		+ "для ухода за детьми-инвалидами, всего (строка 080 графа 3 Приложение 3) должна быть равна сумме расходов по "
		+ "страховым взносам, исчисленных на оплату дополнительных выходных дней для ухода за детьми-инвалидами, "
		+ "финансируемых из федерального бюджета (строка 080 графа 4 Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст80Гр03 = Р1Прил3Ст80Гр04'.
	
	Р1Прил3Ст80Гр03 = ПоказательПоСтроке("Р1Прил3Ст80Гр03");
	Р1Прил3Ст80Гр04 = ПоказательПоСтроке("Р1Прил3Ст80Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст80Гр03.Значение, Р1Прил3Ст80Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_20(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 20)'");
	ОписаниеКС     = НСтр("ru='Итоговая сумма расходов по строке 100 графы 3 Приложения 3 должна быть равна сумме строк "
		+ "010, 020, 030, 040, 050, 060, 070, 080 и 090 графы 3 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст100Гр03 = Р1Прил3Ст10Гр03 + Р1Прил3Ст20Гр03 + Р1Прил3Ст30Гр03 + Р1Прил3Ст40Гр03 + Р1Прил3Ст50Гр03 + Р1Прил3Ст60Гр03 + Р1Прил3Ст70Гр03 + Р1Прил3Ст80Гр03 + Р1Прил3Ст90Гр03'.
	
	Р1Прил3Ст100Гр03 = ПоказательПоСтроке("Р1Прил3Ст100Гр03");
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	Р1Прил3Ст40Гр03 = ПоказательПоСтроке("Р1Прил3Ст40Гр03");
	Р1Прил3Ст50Гр03 = ПоказательПоСтроке("Р1Прил3Ст50Гр03");
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	Р1Прил3Ст80Гр03 = ПоказательПоСтроке("Р1Прил3Ст80Гр03");
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст40Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст50Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст100Гр03.Значение, Р1Прил3Ст10Гр03.Значение + Р1Прил3Ст20Гр03.Значение + Р1Прил3Ст30Гр03.Значение + Р1Прил3Ст40Гр03.Значение + Р1Прил3Ст50Гр03.Значение + Р1Прил3Ст60Гр03.Значение + Р1Прил3Ст70Гр03.Значение + Р1Прил3Ст80Гр03.Значение + Р1Прил3Ст90Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст10Гр03.ЗначениеСтр + " + " + Р1Прил3Ст20Гр03.ЗначениеСтр + " + " + Р1Прил3Ст30Гр03.ЗначениеСтр + " + " + Р1Прил3Ст40Гр03.ЗначениеСтр + " + " + Р1Прил3Ст50Гр03.ЗначениеСтр + " + " + Р1Прил3Ст60Гр03.ЗначениеСтр + " + " + Р1Прил3Ст70Гр03.ЗначениеСтр + " + " + Р1Прил3Ст80Гр03.ЗначениеСтр + " + " + Р1Прил3Ст90Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_21(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 21)'");
	ОписаниеКС     = НСтр("ru='Итоговая сумма расходов, финансируемых из федерального бюджета (строка 100 графа 4 "
		+ "Приложение 3) должна быть равна сумме строк 010, 030, 060, 070, 080 графы 4 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст100Гр04 = Р1Прил3Ст10Гр04 + Р1Прил3Ст30Гр04 + Р1Прил3Ст60Гр04 + Р1Прил3Ст70Гр04 + Р1Прил3Ст80Гр04'.
	
	Р1Прил3Ст100Гр04 = ПоказательПоСтроке("Р1Прил3Ст100Гр04");
	Р1Прил3Ст10Гр04 = ПоказательПоСтроке("Р1Прил3Ст10Гр04");
	Р1Прил3Ст30Гр04 = ПоказательПоСтроке("Р1Прил3Ст30Гр04");
	Р1Прил3Ст60Гр04 = ПоказательПоСтроке("Р1Прил3Ст60Гр04");
	Р1Прил3Ст70Гр04 = ПоказательПоСтроке("Р1Прил3Ст70Гр04");
	Р1Прил3Ст80Гр04 = ПоказательПоСтроке("Р1Прил3Ст80Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст100Гр04.Значение, Р1Прил3Ст10Гр04.Значение + Р1Прил3Ст30Гр04.Значение + Р1Прил3Ст60Гр04.Значение + Р1Прил3Ст70Гр04.Значение + Р1Прил3Ст80Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст10Гр04.ЗначениеСтр + " + " + Р1Прил3Ст30Гр04.ЗначениеСтр + " + " + Р1Прил3Ст60Гр04.ЗначениеСтр + " + " + Р1Прил3Ст70Гр04.ЗначениеСтр + " + " + Р1Прил3Ст80Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_22(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 22)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности за счет средств, финансируемых "
		+ "из федерального бюджета (строка 010 графа 4 Приложения 3) должна быть равна значению показателя строки 250 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр04 = Р1Прил4Ст250Гр04'.
	
	Р1Прил3Ст10Гр04 = ПоказательПоСтроке("Р1Прил3Ст10Гр04");
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр04.Значение, Р1Прил4Ст250Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_23(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 23)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по беременности и родам за счет средств, финансируемых из "
		+ "федерального бюджета (строка 030 графа 4 Приложения 3) должна быть равна значению показателя строки 260 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр04 = Р1Прил4Ст260Гр04'.
	
	Р1Прил3Ст30Гр04 = ПоказательПоСтроке("Р1Прил3Ст30Гр04");
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр04.Значение, Р1Прил4Ст260Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_24(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 24)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за ребенком, финансируемых из федерального бюджета "
		+ "(строка 060 графа 4 Приложение 3) должна быть равна значению показателя строки 270 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр04 = Р1Прил4Ст270Гр04'.
	
	Р1Прил3Ст60Гр04 = ПоказательПоСтроке("Р1Прил3Ст60Гр04");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр04.Значение, Р1Прил4Ст270Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_25(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 25)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за первым ребенком, финансируемых из федерального "
		+ "бюджета (строка 061 графа 4 Приложение 3) должна быть равна значению показателя строки 280 графы 4 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр04 = Р1Прил4Ст280Гр04'.
	
	Р1Прил3Ст61Гр04 = ПоказательПоСтроке("Р1Прил3Ст61Гр04");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр04.Значение, Р1Прил4Ст280Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_26(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 26)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за вторым и последующими детьми, финансируемых из "
		+ "федерального бюджета (строка 062 графа 4 Приложение 3) должна быть равна значению показателя строки 290 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр04 = Р1Прил4Ст290Гр04'.
	
	Р1Прил3Ст62Гр04 = ПоказательПоСтроке("Р1Прил3Ст62Гр04");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр04.Значение, Р1Прил4Ст290Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_27(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 27)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на оплату дополнительных выходных дней для ухода за детьми-инвалидами, "
		+ "финансируемых из федерального бюджета (строка 070 графа 4 Приложение 3) должна быть равна значению "
		+ "показателя строки 300 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр04 = Р1Прил4Ст300Гр04'.
	
	Р1Прил3Ст70Гр04 = ПоказательПоСтроке("Р1Прил3Ст70Гр04");
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр04.Значение, Р1Прил4Ст300Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_28(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 28)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по страховым взносам, исчисленных на оплату дополнительных выходных дней "
		+ "для ухода за детьми-инвалидами, финансируемых из федерального бюджета (строка 080 графа 4 Приложение 3) "
		+ "должна быть равна значению показателя строки 310 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст80Гр04 = Р1Прил4Ст310Гр04'.
	
	Р1Прил3Ст80Гр04 = ПоказательПоСтроке("Р1Прил3Ст80Гр04");
	Р1Прил4Ст310Гр04 = ПоказательПоСтроке("Р1Прил4Ст310Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст310Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст310Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст80Гр04.Значение, Р1Прил4Ст310Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_29(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 29)'");
	ОписаниеКС     = НСтр("ru='Итоговая сумма расходов, финансируемых из федерального бюджета (строка 100 графа 4 "
		+ "Приложение 3) должна быть равна значению показателя строки 240 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст100Гр04 = Р1Прил4Ст240Гр04'.
	
	Р1Прил3Ст100Гр04 = ПоказательПоСтроке("Р1Прил3Ст100Гр04");
	Р1Прил4Ст240Гр04 = ПоказательПоСтроке("Р1Прил4Ст240Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст100Гр04.Значение, Р1Прил4Ст240Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_30(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 30)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 020 графы 2 Приложения 4 '");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр02 >= Р1Прил4Ст20Гр02'.
	
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	Р1Прил4Ст20Гр02 = ПоказательПоСтроке("Р1Прил4Ст20Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр02.Значение, Р1Прил4Ст20Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_31(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 31)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 030 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр02 >= Р1Прил4Ст30Гр02'.
	
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	Р1Прил4Ст30Гр02 = ПоказательПоСтроке("Р1Прил4Ст30Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр02.Значение, Р1Прил4Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_32(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 32)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 040 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр02 >= Р1Прил4Ст40Гр02'.
	
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр02.Значение, Р1Прил4Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_33(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 33)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 050 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр02 >= Р1Прил4Ст50Гр02'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр02.Значение, Р1Прил4Ст50Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_34(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 34)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 060 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр02 >= Р1Прил4Ст60Гр02'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр02.Значение, Р1Прил4Ст60Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_35(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 35)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 3 Приложения 4) должно быть равно сумме значений строк 050 и 060 графы 3 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр03 = Р1Прил4Ст50Гр03 + Р1Прил4Ст60Гр03'.
	
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр03.Значение, Р1Прил4Ст50Гр03.Значение + Р1Прил4Ст60Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст50Гр03.ЗначениеСтр + " + " + Р1Прил4Ст60Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_36(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 36)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 4 Приложения 4) должна быть "
		+ "равна сумме значений строк 020, 030 и 040 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр04 = Р1Прил4Ст20Гр04 + Р1Прил4Ст30Гр04 + Р1Прил4Ст40Гр04'.
	
	Р1Прил4Ст10Гр04 = ПоказательПоСтроке("Р1Прил4Ст10Гр04");
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр04.Значение, Р1Прил4Ст20Гр04.Значение + Р1Прил4Ст30Гр04.Значение + Р1Прил4Ст40Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст20Гр04.ЗначениеСтр + " + " + Р1Прил4Ст30Гр04.ЗначениеСтр + " + " + Р1Прил4Ст40Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_37(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 37)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 4 Приложения 4) должна быть равна сумме значений строк 050 и 060 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр04 = Р1Прил4Ст50Гр04 + Р1Прил4Ст60Гр04'.
	
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр04.Значение, Р1Прил4Ст50Гр04.Значение + Р1Прил4Ст60Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст50Гр04.ЗначениеСтр + " + " + Р1Прил4Ст60Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_38(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 38)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 080 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр02 >= Р1Прил4Ст80Гр02'.
	
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	Р1Прил4Ст80Гр02 = ПоказательПоСтроке("Р1Прил4Ст80Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр02.Значение, Р1Прил4Ст80Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_39(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 39)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 090 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр02 >= Р1Прил4Ст90Гр02'.
	
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	Р1Прил4Ст90Гр02 = ПоказательПоСтроке("Р1Прил4Ст90Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр02.Значение, Р1Прил4Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_40(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 40)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 100 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр02 >= Р1Прил4Ст100Гр02'.
	
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр02.Значение, Р1Прил4Ст100Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_41(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 41)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 110 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр02 >= Р1Прил4Ст110Гр02'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр02.Значение, Р1Прил4Ст110Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_42(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 42)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 120 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр02 >= Р1Прил4Ст120Гр02'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр02.Значение, Р1Прил4Ст120Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_43(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 43)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 3 Приложения 4) должно быть равно сумме показателей строк 110 и 120 графы 3 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр03 = Р1Прил4Ст110Гр03 + Р1Прил4Ст120Гр03'.
	
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр03.Значение, Р1Прил4Ст110Гр03.Значение + Р1Прил4Ст120Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст110Гр03.ЗначениеСтр + " + " + Р1Прил4Ст120Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_44(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 44)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 4 "
		+ "Приложения 4) должна быть равна сумме показателей строк 080,  090, 100 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр04 = Р1Прил4Ст80Гр04 + Р1Прил4Ст90Гр04 + Р1Прил4Ст100Гр04'.
	
	Р1Прил4Ст70Гр04 = ПоказательПоСтроке("Р1Прил4Ст70Гр04");
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр04.Значение, Р1Прил4Ст80Гр04.Значение + Р1Прил4Ст90Гр04.Значение + Р1Прил4Ст100Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст80Гр04.ЗначениеСтр + " + " + Р1Прил4Ст90Гр04.ЗначениеСтр + " + " + Р1Прил4Ст100Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_45(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 45)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 4 Приложения 4) должна быть равна сумме показателей строк 110 и 120 графы 4 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр04 = Р1Прил4Ст110Гр04 + Р1Прил4Ст120Гр04'.
	
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр04.Значение, Р1Прил4Ст110Гр04.Значение + Р1Прил4Ст120Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст110Гр04.ЗначениеСтр + " + " + Р1Прил4Ст120Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_46(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 46)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие ядерных испытаний на Семипалатинском полигоне, всего (строка 130 графа 2 Приложения "
		+ "4) должно быть равно значению показателя строки 140 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст130Гр02 = Р1Прил4Ст140Гр02'.
	
	Р1Прил4Ст130Гр02 = ПоказательПоСтроке("Р1Прил4Ст130Гр02");
	Р1Прил4Ст140Гр02 = ПоказательПоСтроке("Р1Прил4Ст140Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст130Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст130Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст130Гр02.Значение, Р1Прил4Ст140Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_47(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 47)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие ядерных испытаний на Семипалатинском полигоне, всего (строка 130 графа 4 Приложения "
		+ "4) должно быть равно значению показателя строки 140 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст130Гр04 = Р1Прил4Ст140Гр04'.
	
	Р1Прил4Ст130Гр04 = ПоказательПоСтроке("Р1Прил4Ст130Гр04");
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст130Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст130Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст130Гр04.Значение, Р1Прил4Ст140Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_48(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 48)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 160 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр02 >= Р1Прил4Ст160Гр02'.
	
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	Р1Прил4Ст160Гр02 = ПоказательПоСтроке("Р1Прил4Ст160Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр02.Значение, Р1Прил4Ст160Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_49(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 49)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 170 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр02 >= Р1Прил4Ст170Гр02'.
	
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	Р1Прил4Ст170Гр02 = ПоказательПоСтроке("Р1Прил4Ст170Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр02.Значение, Р1Прил4Ст170Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_50(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 50)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 180 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр02 >= Р1Прил4Ст180Гр02'.
	
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр02.Значение, Р1Прил4Ст180Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_51(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 51)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 190 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр02 >= Р1Прил4Ст190Гр02'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр02.Значение, Р1Прил4Ст190Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_52(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 52)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 200 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр02 >= Р1Прил4Ст200Гр02'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр02.Значение, Р1Прил4Ст200Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_53(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 53)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 3 "
		+ "Приложения 4) должно быть равно сумме показателей строк 190 и 200 графы 3 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр03 = Р1Прил4Ст190Гр03 + Р1Прил4Ст200Гр03'.
	
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр03.Значение, Р1Прил4Ст190Гр03.Значение + Р1Прил4Ст200Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст190Гр03.ЗначениеСтр + " + " + Р1Прил4Ст200Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_54(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 54)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемым за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 4 Приложения 4) должна быть "
		+ "равна сумме показателей строк 160, 170, 180 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр04 = Р1Прил4Ст160Гр04 + Р1Прил4Ст170Гр04 + Р1Прил4Ст180Гр04'.
	
	Р1Прил4Ст150Гр04 = ПоказательПоСтроке("Р1Прил4Ст150Гр04");
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр04.Значение, Р1Прил4Ст160Гр04.Значение + Р1Прил4Ст170Гр04.Значение + Р1Прил4Ст180Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст160Гр04.ЗначениеСтр + " + " + Р1Прил4Ст170Гр04.ЗначениеСтр + " + " + Р1Прил4Ст180Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_55(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 55)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 4 "
		+ "Приложения 4) должна быть равна сумме показателей строк 190 и 200 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр04 = Р1Прил4Ст190Гр04 + Р1Прил4Ст200Гр04'.
	
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр04.Значение, Р1Прил4Ст190Гр04.Значение + Р1Прил4Ст200Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст190Гр04.ЗначениеСтр + " + " + Р1Прил4Ст200Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_56(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 56)'");
	ОписаниеКС     = НСтр("ru='Число получателей дополнительных выплат, финансируемых из федерального бюджета, всего "
		+ "(строка 210 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 220 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст210Гр02 >= Р1Прил4Ст220Гр02'.
	
	Р1Прил4Ст210Гр02 = ПоказательПоСтроке("Р1Прил4Ст210Гр02");
	Р1Прил4Ст220Гр02 = ПоказательПоСтроке("Р1Прил4Ст220Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст210Гр02.Значение, Р1Прил4Ст220Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_57(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 57)'");
	ОписаниеКС     = НСтр("ru='Число получателей дополнительных выплат, финансируемых из федерального бюджета, всего "
		+ "(строка 210 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 230 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст210Гр02 >= Р1Прил4Ст230Гр02'.
	
	Р1Прил4Ст210Гр02 = ПоказательПоСтроке("Р1Прил4Ст210Гр02");
	Р1Прил4Ст230Гр02 = ПоказательПоСтроке("Р1Прил4Ст230Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст210Гр02.Значение, Р1Прил4Ст230Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_58(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 58)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по дополнительным выплатам, финансируемых из федерального бюджета, всего "
		+ "(строка 210 графа 4 Приложения 4) должна быть равна сумме показателей строк 22 и 230 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст210Гр04 = Р1Прил4Ст220Гр04 + Р1Прил4Ст230Гр04'.
	
	Р1Прил4Ст210Гр04 = ПоказательПоСтроке("Р1Прил4Ст210Гр04");
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	Р1Прил4Ст230Гр04 = ПоказательПоСтроке("Р1Прил4Ст230Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст210Гр04.Значение, Р1Прил4Ст220Гр04.Значение + Р1Прил4Ст230Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст220Гр04.ЗначениеСтр + " + " + Р1Прил4Ст230Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_59(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 59)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 010 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст10Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_60(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 60)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 070 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст70Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст70Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_61(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 61)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 130 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст130Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст130Гр02 = ПоказательПоСтроке("Р1Прил4Ст130Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст130Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст130Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст130Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_62(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 62)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 150 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст150Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст150Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_63(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 63)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 210 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст210Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст210Гр02 = ПоказательПоСтроке("Р1Прил4Ст210Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст210Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_64(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 64)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 250 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст250Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст250Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_65(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 65)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 260 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст260Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст260Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_66(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 66)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 270 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст270Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст270Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_67(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 67)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 020 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст20Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст20Гр02 = ПоказательПоСтроке("Р1Прил4Ст20Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст20Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_68(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 68)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 080 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст80Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст80Гр02 = ПоказательПоСтроке("Р1Прил4Ст80Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст80Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_69(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 69)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 140 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст140Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст140Гр02 = ПоказательПоСтроке("Р1Прил4Ст140Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст140Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_70(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 70)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 160 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст160Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст160Гр02 = ПоказательПоСтроке("Р1Прил4Ст160Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст160Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_71(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 71)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 220 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст220Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст220Гр02 = ПоказательПоСтроке("Р1Прил4Ст220Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст220Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_72(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 72)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 030 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст30Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст30Гр02 = ПоказательПоСтроке("Р1Прил4Ст30Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_73(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 73)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 090 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст90Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст90Гр02 = ПоказательПоСтроке("Р1Прил4Ст90Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_74(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 74)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 170 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст170Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст170Гр02 = ПоказательПоСтроке("Р1Прил4Ст170Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст170Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_75(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 75)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 230 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст230Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст230Гр02 = ПоказательПоСтроке("Р1Прил4Ст230Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст230Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_76(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 76)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 040 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст40Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_77(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 77)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 100 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст100Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст100Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_78(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 78)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 180 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст180Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст180Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_79(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 79)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 280 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст280Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст280Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_80(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 80)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 290 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст290Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст290Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_81(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 81)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 050 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр02 >= Р1Прил4Ст50Гр02'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр02.Значение, Р1Прил4Ст50Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_82(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 82)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 110 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр02 >= Р1Прил4Ст110Гр02'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр02.Значение, Р1Прил4Ст110Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_83(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 83)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 190 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр02 >= Р1Прил4Ст190Гр02'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр02.Значение, Р1Прил4Ст190Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_84(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 84)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за вторым и последующими детьми, финансируемых "
		+ "из федерального бюджета (строка 290 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 060 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр02 >= Р1Прил4Ст60Гр02'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр02.Значение, Р1Прил4Ст60Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_85(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 85)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за вторым и последующими детьми, финансируемых "
		+ "из федерального бюджета (строка 290 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 120 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр02 >= Р1Прил4Ст120Гр02'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр02.Значение, Р1Прил4Ст120Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_86(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 86)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за вторым и последующими детьми, финансируемых "
		+ "из федерального бюджета (строка 290 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 200 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр02 >= Р1Прил4Ст200Гр02'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр02.Значение, Р1Прил4Ст200Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_87(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 87)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Количество дней, выплат пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 3 Приложения 4) должно быть равно сумме показателей строк 280 и 290 "
		+ "графы 3 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр03 = Р1Прил4Ст280Гр03 + Р1Прил4Ст290Гр03'.
	
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр03.Значение, Р1Прил4Ст280Гр03.Значение + Р1Прил4Ст290Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст280Гр03.ЗначениеСтр + " + " + Р1Прил4Ст290Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_88(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 88)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам, финансируемым из федерального бюджета, всего (строка "
		+ "240 графа 4 Приложения 4) должна быть равна сумме показателей строк 250, 260, 270, 300, 310 графы 4 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр04 = Р1Прил4Ст250Гр04 + Р1Прил4Ст260Гр04 + Р1Прил4Ст270Гр04 + Р1Прил4Ст300Гр04 + Р1Прил4Ст310Гр04'.
	
	Р1Прил4Ст240Гр04 = ПоказательПоСтроке("Р1Прил4Ст240Гр04");
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	Р1Прил4Ст310Гр04 = ПоказательПоСтроке("Р1Прил4Ст310Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст310Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст310Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр04.Значение, Р1Прил4Ст250Гр04.Значение + Р1Прил4Ст260Гр04.Значение + Р1Прил4Ст270Гр04.Значение + Р1Прил4Ст300Гр04.Значение + Р1Прил4Ст310Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст250Гр04.ЗначениеСтр + " + " + Р1Прил4Ст260Гр04.ЗначениеСтр + " + " + Р1Прил4Ст270Гр04.ЗначениеСтр + " + " + Р1Прил4Ст300Гр04.ЗначениеСтр + " + " + Р1Прил4Ст310Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_89(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 89)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по временной нетрудоспособности, финансируемых "
		+ "из федерального бюджета (строка 250 графа 4 Приложения 4) должна быть равна сумме показателей строк 020, "
		+ "080, 140, 160, 220 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр04 = Р1Прил4Ст20Гр04 + Р1Прил4Ст80Гр04 + Р1Прил4Ст140Гр04 + Р1Прил4Ст160Гр04 + Р1Прил4Ст220Гр04'.
	
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр04.Значение, Р1Прил4Ст20Гр04.Значение + Р1Прил4Ст80Гр04.Значение + Р1Прил4Ст140Гр04.Значение + Р1Прил4Ст160Гр04.Значение + Р1Прил4Ст220Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст20Гр04.ЗначениеСтр + " + " + Р1Прил4Ст80Гр04.ЗначениеСтр + " + " + Р1Прил4Ст140Гр04.ЗначениеСтр + " + " + Р1Прил4Ст160Гр04.ЗначениеСтр + " + " + Р1Прил4Ст220Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_90(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 90)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по беременности и родам, финансируемых из "
		+ "федерального бюджета (строка 260 графа 4 Приложения 4) должна быть равна сумме показателей строк 030, 090, "
		+ "170, 230 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр04 = Р1Прил4Ст30Гр04 + Р1Прил4Ст90Гр04 + Р1Прил4Ст170Гр04 + Р1Прил4Ст230Гр04'.
	
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	Р1Прил4Ст230Гр04 = ПоказательПоСтроке("Р1Прил4Ст230Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр04.Значение, Р1Прил4Ст30Гр04.Значение + Р1Прил4Ст90Гр04.Значение + Р1Прил4Ст170Гр04.Значение + Р1Прил4Ст230Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст30Гр04.ЗначениеСтр + " + " + Р1Прил4Ст90Гр04.ЗначениеСтр + " + " + Р1Прил4Ст170Гр04.ЗначениеСтр + " + " + Р1Прил4Ст230Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_91(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 91)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должна быть равна сумме показателе строк 280 и 290 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр04 = Р1Прил4Ст280Гр04 + Р1Прил4Ст290Гр04'.
	
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр04.Значение, Р1Прил4Ст280Гр04.Значение + Р1Прил4Ст290Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст280Гр04.ЗначениеСтр + " + " + Р1Прил4Ст290Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_92(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 92)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 4 Приложения 4) должна быть равна сумме показателей строк 050, 110 и "
		+ "190 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр04 = Р1Прил4Ст50Гр04 + Р1Прил4Ст110Гр04 + Р1Прил4Ст190Гр04'.
	
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр04.Значение, Р1Прил4Ст50Гр04.Значение + Р1Прил4Ст110Гр04.Значение + Р1Прил4Ст190Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст50Гр04.ЗначениеСтр + " + " + Р1Прил4Ст110Гр04.ЗначениеСтр + " + " + Р1Прил4Ст190Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_93(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 93)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по уходу за вторым и последующими детьми, "
		+ "финансируемых из федерального бюджета (строка 290 графа 4 Приложения 4) должна быть равна сумме показателей "
		+ "строк 060, 120 и 200 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр04 = Р1Прил4Ст60Гр04 + Р1Прил4Ст120Гр04 + Р1Прил4Ст200Гр04'.
	
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр04.Значение, Р1Прил4Ст60Гр04.Значение + Р1Прил4Ст120Гр04.Значение + Р1Прил4Ст200Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст60Гр04.ЗначениеСтр + " + " + Р1Прил4Ст120Гр04.ЗначениеСтр + " + " + Р1Прил4Ст200Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_94а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 94а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 010 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр02 > 0, когда Р1Прил3Ст10Гр01 > 0'.
	
	Р1Прил3Ст10Гр01 = ПоказательПоСтроке("Р1Прил3Ст10Гр01");
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_94б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 94б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 010 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр03 > 0, когда Р1Прил3Ст10Гр01 > 0'.
	
	Р1Прил3Ст10Гр01 = ПоказательПоСтроке("Р1Прил3Ст10Гр01");
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_95а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 95а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 011 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр02 > 0, когда Р1Прил3Ст11Гр01 > 0'.
	
	Р1Прил3Ст11Гр01 = ПоказательПоСтроке("Р1Прил3Ст11Гр01");
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_95б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 95б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 011 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр03 > 0, когда Р1Прил3Ст11Гр01 > 0'.
	
	Р1Прил3Ст11Гр01 = ПоказательПоСтроке("Р1Прил3Ст11Гр01");
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_96а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 96а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 020 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр02 > 0, когда Р1Прил3Ст20Гр01 > 0'.
	
	Р1Прил3Ст20Гр01 = ПоказательПоСтроке("Р1Прил3Ст20Гр01");
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_96б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 96б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 020 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр03 > 0, когда Р1Прил3Ст20Гр01 > 0'.
	
	Р1Прил3Ст20Гр01 = ПоказательПоСтроке("Р1Прил3Ст20Гр01");
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_97а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 97а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 021 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр02 > 0, когда Р1Прил3Ст21Гр01 > 0'.
	
	Р1Прил3Ст21Гр01 = ПоказательПоСтроке("Р1Прил3Ст21Гр01");
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_97б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 97б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 021 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр03 > 0, когда Р1Прил3Ст21Гр01 > 0'.
	
	Р1Прил3Ст21Гр01 = ПоказательПоСтроке("Р1Прил3Ст21Гр01");
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_98а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 98а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 030 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр02 > 0, когда Р1Прил3Ст30Гр01 > 0'.
	
	Р1Прил3Ст30Гр01 = ПоказательПоСтроке("Р1Прил3Ст30Гр01");
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_98б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 98б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 030 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр03 > 0, когда Р1Прил3Ст30Гр01 > 0'.
	
	Р1Прил3Ст30Гр01 = ПоказательПоСтроке("Р1Прил3Ст30Гр01");
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_99а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 99а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 031 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр02 > 0, когда Р1Прил3Ст31Гр01 > 0'.
	
	Р1Прил3Ст31Гр01 = ПоказательПоСтроке("Р1Прил3Ст31Гр01");
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_99б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 99б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 031 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр03 > 0, когда Р1Прил3Ст31Гр01 > 0'.
	
	Р1Прил3Ст31Гр01 = ПоказательПоСтроке("Р1Прил3Ст31Гр01");
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_100(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 100)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 010 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр03 > 0, когда Р1Прил3Ст10Гр02 > 0'.
	
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_101(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 101)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 011 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр03 > 0, когда Р1Прил3Ст11Гр02 > 0'.
	
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_102(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 102)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 020 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр03 > 0, когда Р1Прил3Ст20Гр02 > 0'.
	
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_103(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 103)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 021 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр03 > 0, когда Р1Прил3Ст21Гр02 > 0'.
	
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_104(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 104)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 030 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр03 > 0, когда Р1Прил3Ст30Гр02 > 0'.
	
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_105(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 105)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 031 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр03 > 0, когда Р1Прил3Ст31Гр02 > 0'.
	
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_106(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 106)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 040 Приложения 3 должно быть больше нуля, если значение графы2 "
		+ "строки 040 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст40Гр03 > 0, когда Р1Прил3Ст40Гр02 > 0'.
	
	Р1Прил3Ст40Гр02 = ПоказательПоСтроке("Р1Прил3Ст40Гр02");
	Р1Прил3Ст40Гр03 = ПоказательПоСтроке("Р1Прил3Ст40Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст40Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст40Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст40Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст40Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст40Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_107(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 107)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 050 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 050 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст50Гр03 > 0, когда Р1Прил3Ст50Гр02 > 0'.
	
	Р1Прил3Ст50Гр02 = ПоказательПоСтроке("Р1Прил3Ст50Гр02");
	Р1Прил3Ст50Гр03 = ПоказательПоСтроке("Р1Прил3Ст50Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст50Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст50Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст50Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст50Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст50Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_108(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 108)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 010 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр02 > 0, когда Р1Прил3Ст10Гр03 > 0'.
	
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_109(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 109)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 011 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр02 > 0, когда Р1Прил3Ст11Гр03 > 0'.
	
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_110(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 110)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 020 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр02 > 0, когда Р1Прил3Ст20Гр03 > 0'.
	
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_111(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 111)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 021 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр02 > 0, когда Р1Прил3Ст21Гр03 > 0'.
	
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_112(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 112)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 030 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр02 > 0, когда Р1Прил3Ст30Гр03 > 0'.
	
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_113(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 113)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 031 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр02 > 0, когда Р1Прил3Ст31Гр03 > 0'.
	
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_114а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 114а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр02 > 0, когда Р1Прил3Ст60Гр01 > 0'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_114б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 114б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр03 > 0, когда Р1Прил3Ст60Гр01 > 0'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_115а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 115а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 > 0, когда Р1Прил3Ст60Гр02 > 0'.
	
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_115б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 115б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр03 > 0, когда Р1Прил3Ст60Гр02 > 0'.
	
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_116а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 116а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 > 0, когда Р1Прил3Ст60Гр03 > 0'.
	
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_116б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 116б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр02 > 0, когда Р1Прил3Ст60Гр03 > 0'.
	
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_117а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 117а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр02 > 0, когда Р1Прил3Ст61Гр01 > 0'.
	
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_117б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 117б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр03 > 0, когда Р1Прил3Ст61Гр01 > 0'.
	
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_118а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 118а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр01 > 0, когда Р1Прил3Ст61Гр02 > 0'.
	
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_118б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 118б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр03 > 0, когда Р1Прил3Ст61Гр02 > 0'.
	
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_119а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 119а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр01 > 0, когда Р1Прил3Ст61Гр03 > 0'.
	
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_119б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 119б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр02 > 0, когда Р1Прил3Ст61Гр03 > 0'.
	
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_120а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 120а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр02 > 0, когда Р1Прил3Ст62Гр01 > 0'.
	
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_120б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 120б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр03 > 0, когда Р1Прил3Ст62Гр01 > 0'.
	
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_121а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 121а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр01 > 0, когда Р1Прил3Ст62Гр02 > 0'.
	
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_121б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 121б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр03 > 0, когда Р1Прил3Ст62Гр02 > 0'.
	
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_122а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 122а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр01 > 0, когда Р1Прил3Ст62Гр03 > 0'.
	
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_122б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 122б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр02 > 0, когда Р1Прил3Ст62Гр03 > 0'.
	
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_123(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 123)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 070 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 070 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр03 > 0, когда Р1Прил3Ст70Гр02 > 0'.
	
	Р1Прил3Ст70Гр02 = ПоказательПоСтроке("Р1Прил3Ст70Гр02");
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст70Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст70Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_124(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 124)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 070 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 070 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр02 > 0, когда Р1Прил3Ст70Гр03 > 0'.
	
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	Р1Прил3Ст70Гр02 = ПоказательПоСтроке("Р1Прил3Ст70Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст70Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст70Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_125а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 125а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 090 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр02 > 0, когда Р1Прил3Ст90Гр01 > 0'.
	
	Р1Прил3Ст90Гр01 = ПоказательПоСтроке("Р1Прил3Ст90Гр01");
	Р1Прил3Ст90Гр02 = ПоказательПоСтроке("Р1Прил3Ст90Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_125б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 125б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 090 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр03 > 0, когда Р1Прил3Ст90Гр01 > 0'.
	
	Р1Прил3Ст90Гр01 = ПоказательПоСтроке("Р1Прил3Ст90Гр01");
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_126(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 126)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 090 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр03 > 0, когда Р1Прил3Ст90Гр02 > 0'.
	
	Р1Прил3Ст90Гр02 = ПоказательПоСтроке("Р1Прил3Ст90Гр02");
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_127(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 127)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 090 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр02 > 0, когда Р1Прил3Ст90Гр03 > 0'.
	
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	Р1Прил3Ст90Гр02 = ПоказательПоСтроке("Р1Прил3Ст90Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_128(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 128)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 020 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 020 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст20Гр04 > 0, когда Р1Прил4Ст20Гр03 > 0'.
	
	Р1Прил4Ст20Гр03 = ПоказательПоСтроке("Р1Прил4Ст20Гр03");
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст20Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст20Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст20Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_129(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 129)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 020 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 020 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст20Гр03 > 0, когда Р1Прил4Ст20Гр04 > 0'.
	
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	Р1Прил4Ст20Гр03 = ПоказательПоСтроке("Р1Прил4Ст20Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст20Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст20Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_130(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 130)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 030 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 030 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст30Гр04 > 0, когда Р1Прил4Ст30Гр03 > 0'.
	
	Р1Прил4Ст30Гр03 = ПоказательПоСтроке("Р1Прил4Ст30Гр03");
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст30Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст30Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст30Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_131(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 131)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 030 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 030 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст30Гр03 > 0, когда Р1Прил4Ст30Гр04 > 0'.
	
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	Р1Прил4Ст30Гр03 = ПоказательПоСтроке("Р1Прил4Ст30Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст30Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст30Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст30Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_132а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 132а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 040 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр03 > 0, когда Р1Прил4Ст40Гр02 > 0'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_132б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 132б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 040 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр04 > 0, когда Р1Прил4Ст40Гр02 > 0'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_133(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 133)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 040 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр04 > 0, когда Р1Прил4Ст40Гр03 > 0'.
	
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_134(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 134)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 040 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр03 > 0, когда Р1Прил4Ст40Гр04 > 0'.
	
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_135а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 135а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 050 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр03 > 0, когда Р1Прил4Ст50Гр02 > 0'.
	
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_135б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 135б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 050 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр04 > 0, когда Р1Прил4Ст50Гр02 > 0'.
	
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_136(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 136)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 050 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр04 > 0, когда Р1Прил4Ст50Гр03 > 0'.
	
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_137(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 137)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 050 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр03 > 0, когда Р1Прил4Ст50Гр04 > 0'.
	
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_138а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 138а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 060 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр03 > 0, когда Р1Прил4Ст60Гр02 > 0'.
	
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_138б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 138б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 060 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр04 > 0, когда Р1Прил4Ст60Гр02 > 0'.
	
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_139(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 139)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 060 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр04 > 0, когда Р1Прил4Ст60Гр03 > 0'.
	
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_140(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 140)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 060 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр03 > 0, когда Р1Прил4Ст60Гр04 > 0'.
	
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_141(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 141)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 080 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 080 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст80Гр04 > 0, когда Р1Прил4Ст80Гр03 > 0'.
	
	Р1Прил4Ст80Гр03 = ПоказательПоСтроке("Р1Прил4Ст80Гр03");
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст80Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст80Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст80Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_142(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 142)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 080 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 080 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст80Гр03 > 0, когда Р1Прил4Ст80Гр04 > 0'.
	
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	Р1Прил4Ст80Гр03 = ПоказательПоСтроке("Р1Прил4Ст80Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст80Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст80Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст80Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_143(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 143)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 090 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 090 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст90Гр04 > 0, когда Р1Прил4Ст90Гр03 > 0'.
	
	Р1Прил4Ст90Гр03 = ПоказательПоСтроке("Р1Прил4Ст90Гр03");
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст90Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст90Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст90Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_144(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 144)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 090 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 090 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст90Гр03 > 0, когда Р1Прил4Ст90Гр04 > 0'.
	
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	Р1Прил4Ст90Гр03 = ПоказательПоСтроке("Р1Прил4Ст90Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст90Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст90Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст90Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_145а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 145а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 100 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр03 > 0, когда Р1Прил4Ст100Гр02 > 0'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_145б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 145б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 100 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр04 > 0, когда Р1Прил4Ст100Гр02 > 0'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_146(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 146)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 100 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр04 > 0, когда Р1Прил4Ст100Гр03 > 0'.
	
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_147(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 147)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 100 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр03 > 0, когда Р1Прил4Ст100Гр04 > 0'.
	
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_148а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 148а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 110 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр03 > 0, когда Р1Прил4Ст110Гр02 > 0'.
	
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_148б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 148б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 110 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр04 > 0, когда Р1Прил4Ст110Гр02 > 0'.
	
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_149(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 149)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 110 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр04 > 0, когда Р1Прил4Ст110Гр03 > 0'.
	
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_150(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 150)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 110 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр03 > 0, когда Р1Прил4Ст110Гр04 > 0'.
	
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_151а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 151а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 120 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр03 > 0, когда Р1Прил4Ст120Гр02 > 0'.
	
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_151б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 151б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 120 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр04 > 0, когда Р1Прил4Ст120Гр02 > 0'.
	
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_152(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 152)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 120 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр04 > 0, когда Р1Прил4Ст120Гр03 > 0'.
	
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_153(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 153)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 120 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр03 > 0, когда Р1Прил4Ст120Гр04 > 0'.
	
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_154(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 154)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 140 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 140 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст140Гр04 > 0, когда Р1Прил4Ст140Гр03 > 0'.
	
	Р1Прил4Ст140Гр03 = ПоказательПоСтроке("Р1Прил4Ст140Гр03");
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст140Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст140Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст140Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_155(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 155)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 140 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 140 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст140Гр03 > 0, когда Р1Прил4Ст140Гр04 > 0'.
	
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	Р1Прил4Ст140Гр03 = ПоказательПоСтроке("Р1Прил4Ст140Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст140Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст140Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст140Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_156(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 156)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 160 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 160 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст160Гр04 > 0, когда Р1Прил4Ст160Гр03 > 0'.
	
	Р1Прил4Ст160Гр03 = ПоказательПоСтроке("Р1Прил4Ст160Гр03");
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст160Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст160Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст160Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_157(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 157)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 160 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 160 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст160Гр03 > 0, когда Р1Прил4Ст160Гр04 > 0'.
	
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	Р1Прил4Ст160Гр03 = ПоказательПоСтроке("Р1Прил4Ст160Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст160Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст160Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст160Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_158(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 158)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 170 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 170 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст170Гр04 > 0, когда Р1Прил4Ст170Гр03 > 0'.
	
	Р1Прил4Ст170Гр03 = ПоказательПоСтроке("Р1Прил4Ст170Гр03");
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст170Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст170Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст170Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_159(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 159)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 170 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 170 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст170Гр03 > 0, когда Р1Прил4Ст170Гр04 > 0'.
	
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	Р1Прил4Ст170Гр03 = ПоказательПоСтроке("Р1Прил4Ст170Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст170Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст170Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст170Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_160а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 160а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 180 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр03 > 0, когда Р1Прил4Ст180Гр02 > 0'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_160б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 160б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 180 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр04 > 0, когда Р1Прил4Ст180Гр02 > 0'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_161(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 161)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 180 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр04 > 0, когда Р1Прил4Ст180Гр03 > 0'.
	
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_162(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 162)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 180 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр03 > 0, когда Р1Прил4Ст180Гр04 > 0'.
	
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_163а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 163а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 190 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр03 > 0, когда Р1Прил4Ст190Гр02 > 0'.
	
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_163б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 163б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 190 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр04 > 0, когда Р1Прил4Ст190Гр02 > 0'.
	
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_164(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 164)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 190 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр04 > 0, когда Р1Прил4Ст190Гр03 > 0'.
	
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_165(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 165)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 190 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр03 > 0, когда Р1Прил4Ст190Гр04 > 0'.
	
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_166а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 166а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 200 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр03 > 0, когда Р1Прил4Ст200Гр02 > 0'.
	
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_166б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 166б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 200 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр04 > 0, когда Р1Прил4Ст200Гр02 > 0'.
	
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_167(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 167)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 200 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр04 > 0, когда Р1Прил4Ст200Гр03 > 0'.
	
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_168(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 168)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 200 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр03 > 0, когда Р1Прил4Ст200Гр04 > 0'.
	
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_169(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 169)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 220 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 220 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст220Гр04 > 0, когда Р1Прил4Ст220Гр03 > 0'.
	
	Р1Прил4Ст220Гр03 = ПоказательПоСтроке("Р1Прил4Ст220Гр03");
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст220Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст220Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст220Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_170(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 170)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 220 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 220 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст220Гр03 > 0, когда Р1Прил4Ст220Гр04 > 0'.
	
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	Р1Прил4Ст220Гр03 = ПоказательПоСтроке("Р1Прил4Ст220Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст220Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст220Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст220Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_171(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 171)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 230 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 230 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст230Гр04 > 0, когда Р1Прил4Ст230Гр03 > 0'.
	
	Р1Прил4Ст230Гр03 = ПоказательПоСтроке("Р1Прил4Ст230Гр03");
	Р1Прил4Ст230Гр04 = ПоказательПоСтроке("Р1Прил4Ст230Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст230Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст230Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст230Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_172(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 172)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 250 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 250 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр04 > 0, когда Р1Прил4Ст250Гр03 > 0'.
	
	Р1Прил4Ст250Гр03 = ПоказательПоСтроке("Р1Прил4Ст250Гр03");
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст250Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст250Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_173(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 173)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 250 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 250 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр03 > 0, когда Р1Прил4Ст250Гр04 > 0'.
	
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	Р1Прил4Ст250Гр03 = ПоказательПоСтроке("Р1Прил4Ст250Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст250Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст250Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_174(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 174)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 260 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 260 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр04 > 0, когда Р1Прил4Ст260Гр03 > 0'.
	
	Р1Прил4Ст260Гр03 = ПоказательПоСтроке("Р1Прил4Ст260Гр03");
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст260Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст260Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_175(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 175)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 260 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 260 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр03 > 0, когда Р1Прил4Ст260Гр04 > 0'.
	
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	Р1Прил4Ст260Гр03 = ПоказательПоСтроке("Р1Прил4Ст260Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст260Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст260Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_176а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 176а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 270 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр03 > 0, когда Р1Прил4Ст270Гр02 > 0'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_176б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 176б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 270 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр04 > 0, когда Р1Прил4Ст270Гр02 > 0'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_177(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 177)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 270 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр04 > 0, когда Р1Прил4Ст270Гр03 > 0'.
	
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_178(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 178)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 270 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр03 > 0, когда Р1Прил4Ст270Гр04 > 0'.
	
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_179а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 179а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 280 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр03 > 0, когда Р1Прил4Ст280Гр02 > 0'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_179б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 179б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 280 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр04 > 0, когда Р1Прил4Ст280Гр02 > 0'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_180(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 180)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 280 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр04 > 0, когда Р1Прил4Ст280Гр03 > 0'.
	
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_181(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 181)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 280 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр03 > 0, когда Р1Прил4Ст280Гр04 > 0'.
	
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_182а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 182а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 290 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр03 > 0, когда Р1Прил4Ст290Гр02 > 0'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_182б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 182б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 290 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр04 > 0, когда Р1Прил4Ст290Гр02 > 0'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_183(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 183)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 290 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр04 > 0, когда Р1Прил4Ст290Гр03 > 0'.
	
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_184(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 184)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 290 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр03 > 0, когда Р1Прил4Ст290Гр04 > 0'.
	
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_185(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 185)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 300 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 300 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст300Гр04 > 0, когда Р1Прил4Ст300Гр03 > 0'.
	
	Р1Прил4Ст300Гр03 = ПоказательПоСтроке("Р1Прил4Ст300Гр03");
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст300Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст300Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст300Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

Процедура ПроверитьКС_186(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 186)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 300 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 300 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст300Гр03 > 0, когда Р1Прил4Ст300Гр04 > 0'.
	
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	Р1Прил4Ст300Гр03 = ПоказательПоСтроке("Р1Прил4Ст300Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст300Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст300Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст300Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область КонтрольныеСоотношения_Служебные

#Область Служебные_СправочнаяИнформация

Функция ПоказательПоСтроке(УсловныйКодПоказателя)
	
	Результат = Новый Структура;
	Результат.Вставить("Имя");
	Результат.Вставить("Представление");
	
	Если УсловныйКодПоказателя = "ТитульныйСт001" Тогда
		Результат.Вставить("Имя", "ДатаПодписи");
		Результат.Вставить("Представление", НСтр("ru='Титульный лист (ст. 001) ""Дата представления Расчета""'"));
	
	ИначеЕсли УсловныйКодПоказателя = "ТитульныйКодРП" Тогда
		Результат.Вставить("Имя", "Период");
		Результат.Вставить("Представление", НСтр("ru='Титульный лист ""Расчетный (отчетный) период (код)""'"));
		
	ИначеЕсли УсловныйКодПоказателя = "ТитульныйОтчетГод" Тогда
		Результат.Вставить("Имя", "ОтчетГод");
		Результат.Вставить("Представление", НСтр("ru='Титульный лист ""Календарный год""'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст20Гр01_6НДФЛ" Тогда
		Результат.Вставить("Имя", "П000010002001_%1");
		Результат.Вставить("Представление", Нстр("ru='Графа 1 строка 020 Раздела 1 отчета 6-НДФЛ'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст25Гр01_6НДФЛ" Тогда
		Результат.Вставить("Имя", "П000010002501_%1");
		Результат.Вставить("Представление", Нстр("ru='Графа 1 строка 025 Раздела 1 отчета 6-НДФЛ'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000010002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст25Гр01" Тогда
		Результат.Вставить("Имя", "П000010002501");
		Результат.Вставить("Представление", НСтр("ru=''"));
		Результат.Вставить("ИзменяемаяРазмерность", Истина);
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000010003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст31Гр01" Тогда
		Результат.Вставить("Имя", "П000010003101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст32Гр01" Тогда
		Результат.Вставить("Имя", "П000010003201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст33Гр01" Тогда
		Результат.Вставить("Имя", "П000010003301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000010005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010005001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст51Гр01" Тогда
		Результат.Вставить("Имя", "П000010005101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст52Гр01" Тогда
		Результат.Вставить("Имя", "П000010005201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст53Гр01" Тогда
		Результат.Вставить("Имя", "П000010005301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст110Гр01" Тогда
		Результат.Вставить("Имя", "П000010011001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст110Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010011001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 110 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст111Гр01" Тогда
		Результат.Вставить("Имя", "П000010011101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст112Гр01" Тогда
		Результат.Вставить("Имя", "П000010011201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст113Гр01" Тогда
		Результат.Вставить("Имя", "П000010011301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст120Гр01" Тогда
		Результат.Вставить("Имя", "П000010012001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст120Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010012001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 120 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст121Гр01" Тогда
		Результат.Вставить("Имя", "П000010012101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст122Гр01" Тогда
		Результат.Вставить("Имя", "П000010012201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст123Гр01" Тогда
		Результат.Вставить("Имя", "П000010012301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1060Гр01" Тогда
		Результат.Вставить("Имя", "П00001М106001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1060Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М106001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1070Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1070Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М107001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 070 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1071Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1072Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107201_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1073Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107301_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2080Гр01" Тогда
		Результат.Вставить("Имя", "П00001М208001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2080Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М208001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 080 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2090Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2090Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М209001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 090 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2091Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2092Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209201_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2093Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209301_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000020003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000020005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П000110000101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000110000101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П000120000101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120000101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000120001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000120001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000120001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000120001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П000120001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000120002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120002001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000120002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000120002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П000120002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П000120002005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000120003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000120003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000120003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П000120003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П000120003005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П000120004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120004001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 040 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000120004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000120004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П000120004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П000120004005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000120005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000120005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П000120005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П000120005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П000120005005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр01" Тогда
		Результат.Вставить("Имя", "П000120005101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 051 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр02" Тогда
		Результат.Вставить("Имя", "П000120005102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр03" Тогда
		Результат.Вставить("Имя", "П000120005103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр04" Тогда
		Результат.Вставить("Имя", "П000120005104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр05" Тогда
		Результат.Вставить("Имя", "П000120005105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр01" Тогда
		Результат.Вставить("Имя", "П000120005201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005201");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 052 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр02" Тогда
		Результат.Вставить("Имя", "П000120005202");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр03" Тогда
		Результат.Вставить("Имя", "П000120005203");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр04" Тогда
		Результат.Вставить("Имя", "П000120005204");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр05" Тогда
		Результат.Вставить("Имя", "П000120005205");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр01" Тогда
		Результат.Вставить("Имя", "П000120005301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005301");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 053 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр02" Тогда
		Результат.Вставить("Имя", "П000120005302");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр03" Тогда
		Результат.Вставить("Имя", "П000120005303");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр04" Тогда
		Результат.Вставить("Имя", "П000120005304");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр05" Тогда
		Результат.Вставить("Имя", "П000120005305");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр01" Тогда
		Результат.Вставить("Имя", "П000120005401");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005401");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 054 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр02" Тогда
		Результат.Вставить("Имя", "П000120005402");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр03" Тогда
		Результат.Вставить("Имя", "П000120005403");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр04" Тогда
		Результат.Вставить("Имя", "П000120005404");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр05" Тогда
		Результат.Вставить("Имя", "П000120005405");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П000120006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120006001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000120006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П000120006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П000120006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П000120006005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр01" Тогда
		Результат.Вставить("Имя", "П000120007001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120007001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 070 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000120007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр03" Тогда
		Результат.Вставить("Имя", "П000120007003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр04" Тогда
		Результат.Вставить("Имя", "П000120007004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр05" Тогда
		Результат.Вставить("Имя", "П000120007005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр01" Тогда
		Результат.Вставить("Имя", "П000120008001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120008001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 080 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П000120008002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П000120008003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П000120008004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр05" Тогда
		Результат.Вставить("Имя", "П000120008005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр01" Тогда
		Результат.Вставить("Имя", "П000120009001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П000120009002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр05" Тогда
		Результат.Вставить("Имя", "П000120009005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр06" Тогда
		Результат.Вставить("Имя", "П000120009006");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр07" Тогда
		Результат.Вставить("Имя", "П000120009007");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр08" Тогда
		Результат.Вставить("Имя", "П000120009008");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр09" Тогда
		Результат.Вставить("Имя", "П000120009009");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр10" Тогда
		Результат.Вставить("Имя", "П000120009010");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000130001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000130001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000130001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000130001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр01" Тогда
		Результат.Вставить("Имя", "П000130001101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр02" Тогда
		Результат.Вставить("Имя", "П000130001102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр03" Тогда
		Результат.Вставить("Имя", "П000130001103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр04" Тогда
		Результат.Вставить("Имя", "П000130001104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000130002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000130002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000130002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст21Гр01" Тогда
		Результат.Вставить("Имя", "П000130002101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст21Гр02" Тогда
		Результат.Вставить("Имя", "П000130002102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст21Гр03" Тогда
		Результат.Вставить("Имя", "П000130002103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000130003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000130003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000130003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П000130003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр01" Тогда
		Результат.Вставить("Имя", "П000130003101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр02" Тогда
		Результат.Вставить("Имя", "П000130003102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр03" Тогда
		Результат.Вставить("Имя", "П000130003103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр04" Тогда
		Результат.Вставить("Имя", "П000130003104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000130004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000130004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000130005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П000130005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П000130006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000130006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П000130006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П000130006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр01" Тогда
		Результат.Вставить("Имя", "П000130006101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр02" Тогда
		Результат.Вставить("Имя", "П000130006102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр03" Тогда
		Результат.Вставить("Имя", "П000130006103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр04" Тогда
		Результат.Вставить("Имя", "П000130006104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр01" Тогда
		Результат.Вставить("Имя", "П000130006201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр02" Тогда
		Результат.Вставить("Имя", "П000130006202");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр03" Тогда
		Результат.Вставить("Имя", "П000130006203");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр04" Тогда
		Результат.Вставить("Имя", "П000130006204");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000130007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст70Гр03" Тогда
		Результат.Вставить("Имя", "П000130007003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст70Гр04" Тогда
		Результат.Вставить("Имя", "П000130007004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П000130008003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П000130008004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст90Гр01" Тогда
		Результат.Вставить("Имя", "П000130009001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П000130009002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст90Гр03" Тогда
		Результат.Вставить("Имя", "П000130009003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст100Гр03" Тогда
		Результат.Вставить("Имя", "П000130010003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст100Гр04" Тогда
		Результат.Вставить("Имя", "П000130010004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000140001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000140001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000140002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000140002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П000140002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000140003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000140003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П000140003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000140004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000140004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П000140004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000140005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П000140005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П000140005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000140006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П000140006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П000140006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000140007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст70Гр04" Тогда
		Результат.Вставить("Имя", "П000140007004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П000140008002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П000140008003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П000140008004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П000140009002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст90Гр03" Тогда
		Результат.Вставить("Имя", "П000140009003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст90Гр04" Тогда
		Результат.Вставить("Имя", "П000140009004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст100Гр02" Тогда
		Результат.Вставить("Имя", "П000140010002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст100Гр03" Тогда
		Результат.Вставить("Имя", "П000140010003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст100Гр04" Тогда
		Результат.Вставить("Имя", "П000140010004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст110Гр02" Тогда
		Результат.Вставить("Имя", "П000140011002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст110Гр03" Тогда
		Результат.Вставить("Имя", "П000140011003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст110Гр04" Тогда
		Результат.Вставить("Имя", "П000140011004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст120Гр02" Тогда
		Результат.Вставить("Имя", "П000140012002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст120Гр03" Тогда
		Результат.Вставить("Имя", "П000140012003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст120Гр04" Тогда
		Результат.Вставить("Имя", "П000140012004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст130Гр02" Тогда
		Результат.Вставить("Имя", "П000140013002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст130Гр04" Тогда
		Результат.Вставить("Имя", "П000140013004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст140Гр02" Тогда
		Результат.Вставить("Имя", "П000140014002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст140Гр03" Тогда
		Результат.Вставить("Имя", "П000140014003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст140Гр04" Тогда
		Результат.Вставить("Имя", "П000140014004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст150Гр02" Тогда
		Результат.Вставить("Имя", "П000140015002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст150Гр04" Тогда
		Результат.Вставить("Имя", "П000140015004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст160Гр02" Тогда
		Результат.Вставить("Имя", "П000140016002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст160Гр03" Тогда
		Результат.Вставить("Имя", "П000140016003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст160Гр04" Тогда
		Результат.Вставить("Имя", "П000140016004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст170Гр02" Тогда
		Результат.Вставить("Имя", "П000140017002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст170Гр03" Тогда
		Результат.Вставить("Имя", "П000140017003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст170Гр04" Тогда
		Результат.Вставить("Имя", "П000140017004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст180Гр02" Тогда
		Результат.Вставить("Имя", "П000140018002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст180Гр03" Тогда
		Результат.Вставить("Имя", "П000140018003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст180Гр04" Тогда
		Результат.Вставить("Имя", "П000140018004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст190Гр02" Тогда
		Результат.Вставить("Имя", "П000140019002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст190Гр03" Тогда
		Результат.Вставить("Имя", "П000140019003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст190Гр04" Тогда
		Результат.Вставить("Имя", "П000140019004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст200Гр02" Тогда
		Результат.Вставить("Имя", "П000140020002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст200Гр03" Тогда
		Результат.Вставить("Имя", "П000140020003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст200Гр04" Тогда
		Результат.Вставить("Имя", "П000140020004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст210Гр02" Тогда
		Результат.Вставить("Имя", "П000140021002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст210Гр04" Тогда
		Результат.Вставить("Имя", "П000140021004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст220Гр02" Тогда
		Результат.Вставить("Имя", "П000140022002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст220Гр03" Тогда
		Результат.Вставить("Имя", "П000140022003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст220Гр04" Тогда
		Результат.Вставить("Имя", "П000140022004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст230Гр02" Тогда
		Результат.Вставить("Имя", "П000140023002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст230Гр03" Тогда
		Результат.Вставить("Имя", "П000140023003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст230Гр04" Тогда
		Результат.Вставить("Имя", "П000140023004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст240Гр02" Тогда
		Результат.Вставить("Имя", "П000140024002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст240Гр04" Тогда
		Результат.Вставить("Имя", "П000140024004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст250Гр02" Тогда
		Результат.Вставить("Имя", "П000140025002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст250Гр03" Тогда
		Результат.Вставить("Имя", "П000140025003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст250Гр04" Тогда
		Результат.Вставить("Имя", "П000140025004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст260Гр02" Тогда
		Результат.Вставить("Имя", "П000140026002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст260Гр03" Тогда
		Результат.Вставить("Имя", "П000140026003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст260Гр04" Тогда
		Результат.Вставить("Имя", "П000140026004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст270Гр02" Тогда
		Результат.Вставить("Имя", "П000140027002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст270Гр03" Тогда
		Результат.Вставить("Имя", "П000140027003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст270Гр04" Тогда
		Результат.Вставить("Имя", "П000140027004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст280Гр02" Тогда
		Результат.Вставить("Имя", "П000140028002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст280Гр03" Тогда
		Результат.Вставить("Имя", "П000140028003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст280Гр04" Тогда
		Результат.Вставить("Имя", "П000140028004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст290Гр02" Тогда
		Результат.Вставить("Имя", "П000140029002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст290Гр03" Тогда
		Результат.Вставить("Имя", "П000140029003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст290Гр04" Тогда
		Результат.Вставить("Имя", "П000140029004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст300Гр03" Тогда
		Результат.Вставить("Имя", "П000140030003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст300Гр04" Тогда
		Результат.Вставить("Имя", "П000140030004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст310Гр04" Тогда
		Результат.Вставить("Имя", "П000140031004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000150001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000150001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000150002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000150002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000150003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000150003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000150004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000150004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000160006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000160007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П000160008002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000170001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000170001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000170002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000170002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000170003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000170003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П000170004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000170004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000170005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000170005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000180001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000180001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 8 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000180001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000180001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000180001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П000180001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П00018М106001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П00018М106002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П00018М106003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П00018М106004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П00018М106005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000190001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000190001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 9 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000190001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000190001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000190001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П000190001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр01" Тогда
		Результат.Вставить("Имя", "П00019М108001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П00019М108002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П00019М108003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П00019М108004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр05" Тогда
		Результат.Вставить("Имя", "П00019М108005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Пр1Ст90Гр01" Тогда
		Результат.Вставить("Имя", "П00021М109001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Пр1Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П00021М109002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст160Гр01" Тогда
		Результат.Вставить("Имя", "П000310016001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст170Гр01" Тогда
		Результат.Вставить("Имя", "П000310017001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст180Гр01" Тогда
		Результат.Вставить("Имя", "П000310018001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П001100001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П001100001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 10 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П001100001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр02ПРП" Тогда
		Результат.Вставить("Имя", "П001100001002");
		Результат.Вставить("Представление", НСтр("ru='Графа 2 строка 010 Приложения 10 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П001100001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр03ПРП" Тогда
		Результат.Вставить("Имя", "П001100001003");
		Результат.Вставить("Представление", НСтр("ru='Графа 3 строка 010 Приложения 10 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П001100001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр04ПРП" Тогда
		Результат.Вставить("Имя", "П001100001004");
		Результат.Вставить("Представление", НСтр("ru='Графа 4 строка 010 Приложения 10 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П001100001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр05ПРП" Тогда
		Результат.Вставить("Имя", "П001100001005");
		Результат.Вставить("Представление", НСтр("ru='Графа 5 строка 010 Приложения 10 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр01" Тогда
		Результат.Вставить("Имя", "П00110М110001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр02" Тогда
		Результат.Вставить("Имя", "П00110М110002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр03" Тогда
		Результат.Вставить("Имя", "П00110М110003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр04" Тогда
		Результат.Вставить("Имя", "П00110М110004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр05" Тогда
		Результат.Вставить("Имя", "П00110М110005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000030002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П000310006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст70Гр01" Тогда
		Результат.Вставить("Имя", "П000310007001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст80Гр01" Тогда
		Результат.Вставить("Имя", "П000310008001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст90Гр01" Тогда
		Результат.Вставить("Имя", "П000310009001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст100Гр01" Тогда
		Результат.Вставить("Имя", "П000310010001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр01" Тогда
		Результат.Вставить("Имя", "П003210025001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр02" Тогда
		Результат.Вставить("Имя", "П003210025002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр02ПРП" Тогда
		Результат.Вставить("Имя", "П003210025002");
		Результат.Вставить("Представление", НСтр("ru='Графа 02 строка 250 Подраздела 3.2.1 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр03" Тогда
		Результат.Вставить("Имя", "П003210025003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр04" Тогда
		Результат.Вставить("Имя", "П003210025004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр04ПРП" Тогда
		Результат.Вставить("Имя", "П003210025004");
		Результат.Вставить("Представление", НСтр("ru='Графа 04 строка 250 Подраздела 3.2.1 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1190Гр01" Тогда
		Результат.Вставить("Имя", "П00321М119001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1190Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00321М119001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 190 Подраздела 3.2.1 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1200Гр01" Тогда
		Результат.Вставить("Имя", "П00321М120001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1200Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00321М120001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 200 Подраздела 3.2.1 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1210Гр01" Тогда
		Результат.Вставить("Имя", "П00321М121001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1210Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00321М121001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 210 Подраздела 3.2.1 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1220Гр01" Тогда
		Результат.Вставить("Имя", "П00321М122001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1220Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00321М122001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 220 Подраздела 3.2.1 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1230Гр01" Тогда
		Результат.Вставить("Имя", "П00321М123001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1240Гр01" Тогда
		Результат.Вставить("Имя", "П00321М124001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1240Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00321М124001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 240 Подраздела 3.2.1 поп'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст300Гр01" Тогда
		Результат.Вставить("Имя", "П003220030001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст300Гр02" Тогда
		Результат.Вставить("Имя", "П003220030002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст260Гр01" Тогда
		Результат.Вставить("Имя", "П00322М126001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст260Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00322М126001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 260 Подраздела 3.2.2 поп'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст270Гр01" Тогда
		Результат.Вставить("Имя", "П00322М127001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст270Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00322М127001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 270 Подраздела 3.2.2 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст280Гр01" Тогда
		Результат.Вставить("Имя", "П00322М128001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст280Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00322М128001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 280 Подраздела 3.2.2 поп'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст290Гр01" Тогда
		Результат.Вставить("Имя", "П00322М129001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст290Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00322М129001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 01 строка 290 Подраздела 3.2.2 поп'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Ст61Гр03" Тогда
		Результат.Вставить("Имя", "П011110006103");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Ст61Гр04" Тогда
		Результат.Вставить("Имя", "П011110006104");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Ст61Гр05" Тогда
		Результат.Вставить("Имя", "П011110006105");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр131Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11131М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр132Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11132М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр131Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11131М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр132Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11132М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр131Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11131М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр132Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11132М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П011110001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П011110001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П011110001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П011110001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П011110001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П011110002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110002001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П011110002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П011110002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П011110002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П011110002005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр01" Тогда
		Результат.Вставить("Имя", "П011110002101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110002101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 021 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр02" Тогда
		Результат.Вставить("Имя", "П011110002102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр03" Тогда
		Результат.Вставить("Имя", "П011110002103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр04" Тогда
		Результат.Вставить("Имя", "П011110002104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр05" Тогда
		Результат.Вставить("Имя", "П011110002105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П011110003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П011110003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П011110003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П011110003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П011110003005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П011110004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110004001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 040 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П011110004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П011110004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П011110004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П011110004005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П011110005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110005001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П011110005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П011110005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П011110005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П011110005005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр01" Тогда
		Результат.Вставить("Имя", "П011110005101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр02" Тогда
		Результат.Вставить("Имя", "П011110005102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр03" Тогда
		Результат.Вставить("Имя", "П011110005103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр04" Тогда
		Результат.Вставить("Имя", "П011110005104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр05" Тогда
		Результат.Вставить("Имя", "П011110005105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П011110006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110006001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П011110006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П011110006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П011110006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П011110006005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр01" Тогда
		Результат.Вставить("Имя", "П011110006101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110006101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 061 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр02" Тогда
		Результат.Вставить("Имя", "П011110006102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр03" Тогда
		Результат.Вставить("Имя", "П011110006103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр04" Тогда
		Результат.Вставить("Имя", "П011110006104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр05" Тогда
		Результат.Вставить("Имя", "П011110006105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр01" Тогда
		Результат.Вставить("Имя", "П011110006201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110006201");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 062 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр02" Тогда
		Результат.Вставить("Имя", "П011110006202");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр03" Тогда
		Результат.Вставить("Имя", "П011110006203");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр04" Тогда
		Результат.Вставить("Имя", "П011110006204");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр05" Тогда
		Результат.Вставить("Имя", "П011110006205");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П011120001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П011120001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П011120001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П011120001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П011120001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П011120002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120002001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П011120002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П011120002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П011120002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П011120002005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П011120003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П011120003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П011120003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П011120003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П011120003005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П011120004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120004001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 040 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П011120004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П011120004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П011120004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П011120004005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П011120005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П011120005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П011120005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П011120005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П011120005005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П011120006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120006001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П011120006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П011120006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П011120006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П011120006005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П01114М100101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П01114М100101_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.4 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П01114М102001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П01114М102002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П01114М102003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П01114М102004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П01114М102005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П01114М103001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П01114М103001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.4 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П01114М103002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П01114М103003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П01114М103004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П01114М103005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П01114М104001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П01114М104002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П01114М104003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П01114М104004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П01114М104005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П01114М105001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П01114М105001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.4 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П01114М105002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П01114М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П01114М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П01114М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П11131М100101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М100101_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П11131М101001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М101001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П11131М101002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П11131М101003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П11131М101004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П11131М101005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П11131М102001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М102001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П11131М102002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П11131М102003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П11131М102004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П11131М102005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П11131М103001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М103001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П11131М103002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П11131М103003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П11131М103004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П11131М103005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П11131М104001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П11131М104002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П11131М104003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П11131М104004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П11131М104005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П11131М105001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М105001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П11131М105002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11131М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11131М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11131М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П11132М100101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М100101_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст2Гр01" Тогда
		Результат.Вставить("Имя", "П11132М100201_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст2Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М100201_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 002 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст3Гр01" Тогда
		Результат.Вставить("Имя", "П11132М100301_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст3Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М100301_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 003 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П11132М101001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М101001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П11132М101002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П11132М101003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П11132М101004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П11132М101005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П11132М102001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М102001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П11132М102002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П11132М102003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П11132М102004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П11132М102005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П11132М103001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М103001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П11132М103002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П11132М103003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П11132М103004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П11132М103005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П11132М104001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П11132М104002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П11132М104003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П11132М104004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П11132М104005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П11132М105001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М105001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П11132М105002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11132М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11132М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11132М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст240Гр01" Тогда
		Результат.Вставить("Имя", "П00321М124001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст190Гр01" Тогда
		Результат.Вставить("Имя", "П00321М119001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст290Гр01" Тогда
		Результат.Вставить("Имя", "П00322М129001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст260Гр01" Тогда
		Результат.Вставить("Имя", "П00322М126001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр(
		"ru='Не найден показатель соответствующий условному коду: """ + УсловныйКодПоказателя + """'");
		Сообщение.Сообщить();
		
		Возврат Результат;
		
	КонецЕсли;
	
	Если Результат.Представление = "" Тогда
		Результат.Вставить("Представление", ПредставлениеПоказателя(Результат.Имя));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПредставлениеПоказателя(ИмяПоказателя)
	
	Раздел = Новый Структура();
	Раздел.Вставить("П00001", "Раздел 1");
	Раздел.Вставить("П01111", "Подраздела 1.1 Приложения 1");
	Раздел.Вставить("П01112", "Подраздела 1.2 Приложения 1");
	Раздел.Вставить("П11131", "Подраздела 1.3.1 Приложения 1");
	Раздел.Вставить("П11132", "Подраздела 1.3.2 Приложения 1");
	Раздел.Вставить("П01114", "Подраздела 1.4 Приложения 1");
	Раздел.Вставить("П00011", "Раздел 1 Приложение 1");
	Раздел.Вставить("П00012", "Раздел 1 Приложение 2");
	Раздел.Вставить("П00013", "Раздел 1 Приложение 3");
	Раздел.Вставить("П00014", "Раздел 1 Приложение 4");
	Раздел.Вставить("П00015", "Раздел 1 Приложение 5");
	Раздел.Вставить("П00016", "Раздел 1 Приложение 6");
	Раздел.Вставить("П00017", "Раздел 1 Приложение 7");
	Раздел.Вставить("П00018", "Раздел 1 Приложение 8");
	Раздел.Вставить("П00019", "Раздел 1 Приложение 9");
	Раздел.Вставить("П00110", "Раздел 1 Приложение 10");
	Раздел.Вставить("П00002", "Раздел 2");
	Раздел.Вставить("П00021", "Раздел 2 Приложение 1");
	Раздел.Вставить("П00003", "Раздел 3");
	Раздел.Вставить("П00031", "Подраздел 3.1");
	Раздел.Вставить("П00321", "Подраздела 3.2.1");
	Раздел.Вставить("П00322", "Подраздела 3.2.2");
	
	ПодстрокаРаздела = Раздел[Лев(ИмяПоказателя, 6)];
	ПодстрокаСтроки = Сред(ИмяПоказателя, 9, 3);
	Если Прав(ИмяПоказателя, 2) = "%1" Тогда
		ПодстрокаГрафы = Сред(ИмяПоказателя, 12, 2);
	Иначе
		ПодстрокаГрафы = Прав(ИмяПоказателя,2);
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Нстр("ru='Графа %1 строка %2 %3'"), ПодстрокаГрафы,
		ПодстрокаСтроки, ПодстрокаРаздела);
	
КонецФункции

Функция КодТарифаПоКатегории(КодКатегории, ОтчетныйГод)
	
	Если ТипЗнч(КэшКодовТарифов) <> Тип("Соответствие") Тогда
		КэшКодовТарифов = Новый Соответствие;
	КонецЕсли;
	
	КодыТарифа = КэшКодовТарифов[КодКатегории];
	Если КодыТарифа = Неопределено Тогда
		КодыТарифа = Новый Структура;
		КэшКодовТарифов.Вставить(КодКатегории, КодыТарифа);
	КонецЕсли;
	
	КлючГод = "_" + Формат(ОтчетныйГод, "ЧН=; ЧГ=");
	
	КодТарифа = Неопределено;
	Если КодыТарифа.Свойство(КлючГод, КодТарифа) Тогда
		Возврат КодТарифа;
	КонецЕсли;
	
	СтрокаДанных = мДанныеОтчета.ДанныеКС.ТаблицаНСИ.Найти(КодКатегории, "Категория");
	Если Не СтрокаДанных = Неопределено Тогда
		КодТарифа = КодГруппыТарифов(СтрокаДанных.Тариф);
		КодыТарифа.Вставить(КлючГод, КодТарифа);
		Возврат КодТарифа
	КонецЕсли;
	
	КодТарифа = КодГруппыТарифов(
		РегламентированнаяОтчетность.КодИлиРазмерТарифаПоКодуКатегории(КодКатегории, ОтчетныйГод, Ложь));
		
	КодыТарифа.Вставить(КлючГод, КодТарифа);
	
	Возврат КодТарифа;
	
КонецФункции

Функция КодГруппыТарифов(КодТарифа)
	
	Если Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2019 Тогда
		
		Группа1 = "01,02,03";
		Группа2 = "10,11";
		
		Если КодНайден(КодТарифа, Группа1) Тогда
			Возврат Группа1;
		ИначеЕсли КодНайден(КодТарифа, Группа2) Тогда
			Возврат Группа2;
		КонецЕсли;
		
	Иначе
		
		Группа1 = "01,02,03";
		Группа2 = "08,12";
		Группа3 = "09,10,11";
		
		Если КодНайден(КодТарифа, Группа1) Тогда
			Возврат Группа1;
		ИначеЕсли КодНайден(КодТарифа, Группа2) Тогда
			Возврат Группа2;
		ИначеЕсли КодНайден(КодТарифа, Группа3) Тогда
			Возврат Группа3;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КодТарифа;
	
КонецФункции

Функция СтавкаТарифаПоКатегории(КодКатегории, ОтчетныйГод)
	
	Если ТипЗнч(КэшСтавокТарифов) <> Тип("Соответствие") Тогда
		КэшСтавокТарифов = Новый Соответствие;
	КонецЕсли;
	
	СтавкиТарифа = КэшСтавокТарифов[КодКатегории];
	Если СтавкиТарифа = Неопределено Тогда
		СтавкиТарифа = Новый Структура;
		КэшСтавокТарифов.Вставить(КодКатегории, СтавкиТарифа);
	КонецЕсли;
	
	КлючГод = "_" + Формат(ОтчетныйГод, "ЧН=; ЧГ=");
	
	СтавкаТарифа = Неопределено;
	Если СтавкиТарифа.Свойство(КлючГод, СтавкаТарифа) Тогда
		Возврат СтавкаТарифа;
	КонецЕсли;
	
	СтрокаДанных = мДанныеОтчета.ДанныеКС.ТаблицаНСИ.Найти(КодКатегории, "Категория");
	Если Не СтрокаДанных = Неопределено Тогда
		СтавкаТарифа = СтрокаДанных.Ставка / 100;
		СтавкиТарифа.Вставить(КлючГод, СтавкаТарифа);
		Возврат СтавкаТарифа;
	КонецЕсли;
	
	СтавкаТарифа = РегламентированнаяОтчетность.КодИлиРазмерТарифаПоКодуКатегории(КодКатегории, ОтчетныйГод, Истина);
	Если ТипЗнч(СтавкаТарифа) = Тип("Число") Тогда
		СтавкаТарифа = СтавкаТарифа / 100;
	КонецЕсли;
		
	СтавкиТарифа.Вставить(КлючГод, СтавкаТарифа);
	
	Возврат СтавкаТарифа;
	
КонецФункции

Функция СтавкаДопТарифаПоКоду(КодДопТарифа, ОтчетныйГод)
	
	СтавкаДопТарифа = РегламентированнаяОтчетность.РазмерДополнительногоТарифаПоКоду(КодДопТарифа, ОтчетныйГод);
	Если ТипЗнч(СтавкаДопТарифа) = Тип("Число") Тогда
		СтавкаДопТарифа = СтавкаДопТарифа / 100;
	КонецЕсли;
	
	Возврат СтавкаДопТарифа;
	
КонецФункции

Функция ЭтоОрганизацияСОбособленнымиПодразделениями(ПроверяемаяОрганизация)
	
	// Есть обособленные предприятия на выделенном балансе.
	Если РегламентированнаяОтчетность.ПолучитьСписокОбособленныхПодразделенийОрганизации(ПроверяемаяОрганизация).Количество() > 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПараметрыСправочникаОбособленныхПодразделений = Новый Структура();
	ПараметрыСправочникаОбособленныхПодразделений.Вставить("ИмяСправочникаОбособленныхПодразделений","");
	ПараметрыСправочникаОбособленныхПодразделений.Вставить("ИмяРеквизитаПризнакаОбособленногоПодразделения","");
	РегламентированнаяОтчетность.ЗапомнитьИменаСправочниковОбособленныхПодразделений(ПараметрыСправочникаОбособленныхПодразделений );
	
	Если ЗначениеЗаполнено(ПараметрыСправочникаОбособленныхПодразделений.ИмяСправочникаОбособленныхПодразделений)
	   И ЗначениеЗаполнено(ПараметрыСправочникаОбособленныхПодразделений.ИмяРеквизитаПризнакаОбособленногоПодразделения) Тогда
		СпрОПМенеджер = Справочники[ПараметрыСправочникаОбособленныхПодразделений.ИмяСправочникаОбособленныхПодразделений];
		НайденныйЭлемент = СпрОПМенеджер.НайтиПоРеквизиту(ПараметрыСправочникаОбособленныхПодразделений.ИмяРеквизитаПризнакаОбособленногоПодразделения, Истина, , ПроверяемаяОрганизация);
		Если НайденныйЭлемент <> СпрОПМенеджер.ПустаяСсылка() Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область Служебные_ФормированиеКонтекста

Процедура СформироватьСтруктуруПоказателейДляКС(ИмяФормы,
										   ДанныеОтчета,
										   СтруктураРеквизитовФормы,
										   СтруктураМногоуровневыхРазделов) Экспорт
	
	ДанныеОтчета = Новый Структура;
			
	СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы,
											СтруктураРеквизитовФормы,
											СтруктураМногоуровневыхРазделов);
	
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		
		ДанныеОтчета.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
			РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
			
	КонецЦикла;
	
	Для Каждого Раздел Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		
		ДанныеОтчета.Вставить(Раздел.Ключ, ТаблицаДанныхДерева(Раздел.Значение));
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДеревоВТаблицу(Дерево, Таблица, МнЧ = Ложь, НомСтраницы = Неопределено)
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		
		Индекс = СтрокаЧГ0(Дерево.Строки.Индекс(СтрокаДерева) + 1);
		
		Если (НомСтраницы = Неопределено)
		 ИЛИ (СтрокаДерева.Уровень() = 0 И НЕ МнЧ) Тогда
			НомСтраницы = Индекс;
		КонецЕсли;
		
		Если ТипЗнч(СтрокаДерева.Данные) = Тип("Структура") Тогда
			Для Каждого Элемент Из СтрокаДерева.Данные Цикл
				НоваяСтрока = Таблица.Добавить();
				НоваяСтрока.Страница = НомСтраницы;
				НоваяСтрока.Имя = Элемент.Ключ;
				НоваяСтрока.Значение = Элемент.Значение;
				НоваяСтрока.Строка = ?(МнЧ, Индекс, "");
			КонецЦикла;
			
			Для Каждого Элемент Из СтрокаДерева.ДанныеМногострочныхЧастей Цикл
				Если ТипЗнч(Элемент.Значение) = Тип("ДеревоЗначений") Тогда
					ДеревоВТаблицу(Элемент.Значение, Таблица, Истина, НомСтраницы);
				Иначе
					НоваяСтрока = Таблица.Добавить();
					НоваяСтрока.Страница = НомСтраницы;
					НоваяСтрока.Имя = Элемент.Ключ;
					НоваяСтрока.Значение = Элемент.Значение;
					НоваяСтрока.Строка = ?(МнЧ, Индекс, "");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			ДеревоВТаблицу(СтрокаДерева, Таблица, , НомСтраницы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуНСИ(ДатаОкончанияПериода)
	
	ТаблицаНастроек = Новый ТаблицаЗначений;
	ТаблицаНастроек.Колонки.Добавить("Категория", Новый ОписаниеТипов("Строка"));
	ТаблицаНастроек.Колонки.Добавить("Тариф"	, Новый ОписаниеТипов("Строка"));
	ТаблицаНастроек.Колонки.Добавить("Ставка"	, Новый ОписаниеТипов("Число"));
	
	ВерсияКС = ПолучитьВерсиюНастроекКС(ДатаОкончанияПериода);
	
	Если ВерсияКС = Неопределено Тогда
		мДанныеОтчета.ДанныеКС.Вставить("ТаблицаНСИ", ТаблицаНастроек);
		Возврат;
	КонецЕсли;
	
	МакетНастроекКС = ЭтотОбъект.ПолучитьМакет("НастройкиКС2017Кв1");
	Область = МакетНастроекКС.Области.Найти(ВерсияКС);
	
	Если Область = Неопределено Тогда
		мДанныеОтчета.ДанныеКС.Вставить("ТаблицаНСИ", ТаблицаНастроек);
		Возврат;
	КонецЕсли;
	
	Для НомерСтроки = Область.Верх По Область.Низ Цикл
		НовСтрока = ТаблицаНастроек.Добавить();
		НовСтрока.Категория = СокрЛП(МакетНастроекКС.Область(НомерСтроки, 1).Текст);
		НовСтрока.Тариф		= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 2).Текст);
		НовСтрока.Ставка	= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 3).Текст);
	КонецЦикла;
	
	мДанныеОтчета.ДанныеКС.Вставить("ТаблицаНСИ", ТаблицаНастроек);
	
	МассивКодовТарифов = Новый Массив;
	ВерсияКодовТарифов = ПолучитьВерсиюНастроекКС(ДатаОкончанияПериода, "КодТарифа");
	
	Если ВерсияКодовТарифов = Неопределено Тогда
		мДанныеОтчета.ДанныеКС.Вставить("МассивКодовТарифов", МассивКодовТарифов);
		Возврат;
	КонецЕсли;
	
	Область = МакетНастроекКС.Области.Найти(ВерсияКодовТарифов);
	Если Область = Неопределено Тогда
		мДанныеОтчета.ДанныеКС.Вставить("МассивКодовТарифов", МассивКодовТарифов);
		Возврат;
	КонецЕсли;
	
	Для НомерСтроки = Область.Верх По Область.Низ Цикл
		МассивКодовТарифов.Добавить(СокрЛП(МакетНастроекКС.Область(НомерСтроки, 1).Текст));
	КонецЦикла;
	
	мДанныеОтчета.ДанныеКС.Вставить("МассивКодовТарифов", МассивКодовТарифов);
	
КонецПроцедуры

Процедура СоздатьСтруктуруДанныхКС()
	
	Таблица321	= Новый ТаблицаЗначений;
	Таблица322	= Новый ТаблицаЗначений;
	К4			= Новый КвалификаторыСтроки(4);
	К20			= Новый КвалификаторыСтроки(20);
	К60			= Новый КвалификаторыСтроки(60);
	
	Таблица321.Колонки.Добавить("ГруппаТарифов"	, Новый ОписаниеТипов("Строка",,К20));
	Таблица321.Колонки.Добавить("Категория"		, Новый ОписаниеТипов("Строка",,К20));
	Таблица321.Колонки.Добавить("Ставка"		, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("Месяц_"		, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("МесяцСтр"		, Новый ОписаниеТипов("Строка",,К4));
	Таблица321.Колонки.Добавить("Квартал_"		, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("Графа"			, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("Фамилия"		, Новый ОписаниеТипов("Строка",,К60));
	Таблица321.Колонки.Добавить("Имя"			, Новый ОписаниеТипов("Строка",,К60));
	Таблица321.Колонки.Добавить("Отчество"		, Новый ОписаниеТипов("Строка",,К60));
	Таблица321.Колонки.Добавить("Снилс"			, Новый ОписаниеТипов("Строка",,К20));
	Таблица321.Колонки.Добавить("Инн"			, Новый ОписаниеТипов("Строка",,К20));
	Таблица321.Колонки.Добавить("Отчет"			, Новый ОписаниеТипов("ДокументСсылка.РегламентированныйОтчет"));
	Таблица321.Колонки.Добавить("Вид"			, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("НомерСтраницы"	, Новый ОписаниеТипов("Строка",,К4));
	Таблица321.Колонки.Добавить("НомерСтроки"	, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("П210"			, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("П220"			, Новый ОписаниеТипов("Число"));
	Таблица321.Колонки.Добавить("П240"			, Новый ОписаниеТипов("Число"));
	
	Таблица322.Колонки.Добавить("Категория"		, Новый ОписаниеТипов("Строка",,К20));
	Таблица322.Колонки.Добавить("Ставка"		, Новый ОписаниеТипов("Число"));
	Таблица322.Колонки.Добавить("Месяц_"		, Новый ОписаниеТипов("Число"));
	Таблица322.Колонки.Добавить("МесяцСтр"		, Новый ОписаниеТипов("Строка",,К4));
	Таблица322.Колонки.Добавить("Квартал_"		, Новый ОписаниеТипов("Число"));
	Таблица322.Колонки.Добавить("Графа"			, Новый ОписаниеТипов("Число"));
	Таблица322.Колонки.Добавить("Фамилия"		, Новый ОписаниеТипов("Строка",,К60));
	Таблица322.Колонки.Добавить("Имя"			, Новый ОписаниеТипов("Строка",,К60));
	Таблица322.Колонки.Добавить("Отчество"		, Новый ОписаниеТипов("Строка",,К60));
	Таблица322.Колонки.Добавить("Снилс"			, Новый ОписаниеТипов("Строка",,К20));
	Таблица322.Колонки.Добавить("Инн"			, Новый ОписаниеТипов("Строка",,К20));
	Таблица322.Колонки.Добавить("Отчет"			, Новый ОписаниеТипов("ДокументСсылка.РегламентированныйОтчет"));
	Таблица322.Колонки.Добавить("Вид"			, Новый ОписаниеТипов("Число"));
	Таблица322.Колонки.Добавить("НомерСтраницы"	, Новый ОписаниеТипов("Строка",,К4));
	Таблица322.Колонки.Добавить("НомерСтроки"	, Новый ОписаниеТипов("Число"));
	Таблица322.Колонки.Добавить("П280"			, Новый ОписаниеТипов("Число"));
	Таблица322.Колонки.Добавить("П290"			, Новый ОписаниеТипов("Число"));
	
	мДанныеОтчета.ДанныеКС.Вставить("Таблица321", Таблица321);
	мДанныеОтчета.ДанныеКС.Вставить("Таблица322", Таблица322);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеКС()
	
	ДеревоТарифов111 = Новый ДеревоЗначений;
	ДеревоТарифов111.Колонки.Добавить("ГруппаТарифов");
	ДеревоТарифов111.Колонки.Добавить("НомерСтраницы");
	ДеревоТарифов111.Колонки.Добавить("Индекс");
	
	ДеревоТарифов131 = Новый ДеревоЗначений;
	ДеревоТарифов131.Колонки.Добавить("Основание");
	ДеревоТарифов131.Колонки.Добавить("КодТарифа");
	ДеревоТарифов131.Колонки.Добавить("НомерСтраницы");
	ДеревоТарифов131.Колонки.Добавить("НомерСтроки");
	ДеревоТарифов131.Колонки.Добавить("Индекс");
	
	ДеревоТарифов132 = Новый ДеревоЗначений;
	ДеревоТарифов132.Колонки.Добавить("Основание");
	ДеревоТарифов132.Колонки.Добавить("КодТарифа");
	ДеревоТарифов132.Колонки.Добавить("НомерСтраницы");
	ДеревоТарифов132.Колонки.Добавить("НомерСтроки");
	ДеревоТарифов132.Колонки.Добавить("Индекс");
	
	Р1Пр1Ст1Гр01	= ПоказательПоСтроке("Р1Пр1Ст1Гр01");	
	Пд131Пр1Ст1Гр01	= ПоказательПоСтроке("Пд131Пр1Ст1Гр01");	
	Пд132Пр1Ст3Гр01	= ПоказательПоСтроке("Пд132Пр1Ст3Гр01");	
	
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		
		ИндексСтраницы = мДанныеОтчета.Раздел1Прил1.Индекс(СтраницаРаздела);
		
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Р1Пр1Ст1Гр01);
		Если НЕ ЗначениеЗаполнено(Р1Пр1Ст1Гр01.Значение) Тогда
			Продолжить;
		КонецЕсли;
		ГруппаТарифов = КодГруппыТарифов(Р1Пр1Ст1Гр01.Значение);
		СтрокаТарифа = ДеревоТарифов111.Строки.Найти(ГруппаТарифов, "ГруппаТарифов");
		Если СтрокаТарифа = Неопределено Тогда
			СтрокаТарифа = ДеревоТарифов111.Строки.Добавить();
			СтрокаТарифа.ГруппаТарифов = ГруппаТарифов;
		КонецЕсли;
		СтрокаНомера = СтрокаТарифа.Строки.Добавить();
		СтрокаНомера.ГруппаТарифов = Р1Пр1Ст1Гр01.Значение;
		СтрокаНомера.НомерСтраницы = СтраницаРаздела.НомерСтраницы;
		СтрокаНомера.Индекс = ИндексСтраницы;
		
		КоличествоСтрок131 = КоличествоСтрок(СтраницаРаздела.Данные, Пд131Пр1Ст1Гр01.Имя);
		Для Индекс = 1 По КоличествоСтрок131 Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд131Пр1Ст1Гр01, Индекс);
			Если НЕ ЗначениеЗаполнено(Пд131Пр1Ст1Гр01.Значение) Тогда
				Продолжить;
			КонецЕсли;
			КодТарифа = "2" + Пд131Пр1Ст1Гр01.Значение;
			СтрокаТарифа = ДеревоТарифов131.Строки.Найти(КодТарифа, "КодТарифа");
			Если СтрокаТарифа = Неопределено Тогда
				СтрокаТарифа = ДеревоТарифов131.Строки.Добавить();
				СтрокаТарифа.Основание = Пд131Пр1Ст1Гр01.Значение;
				СтрокаТарифа.КодТарифа = КодТарифа;
			КонецЕсли;
			СтрокаНомера = СтрокаТарифа.Строки.Добавить();
			СтрокаНомера.Основание = Пд131Пр1Ст1Гр01.Значение;
			СтрокаНомера.КодТарифа = КодТарифа;
			СтрокаНомера.НомерСтраницы = СтраницаРаздела.НомерСтраницы;
			СтрокаНомера.НомерСтроки = Индекс;
			СтрокаНомера.Индекс = ИндексСтраницы;
		КонецЦикла;
		
		КоличествоСтрок132 = КоличествоСтрок(СтраницаРаздела.Данные, Пд132Пр1Ст3Гр01.Имя);
		Для Индекс = 1 По КоличествоСтрок132 Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд132Пр1Ст3Гр01, Индекс);
			Если НЕ ЗначениеЗаполнено(Пд132Пр1Ст3Гр01.Значение) Тогда
				Продолжить;
			КонецЕсли;
			ТарифЧислом = СтроковыеФункцииКлиентСервер.СтрокаВЧисло("2" + Пд132Пр1Ст3Гр01.Значение);
			Если ТарифЧислом = Неопределено Тогда
				Продолжить;
			Иначе
				КодТарифа = Строка(2 + ТарифЧислом);
			КонецЕсли;
			СтрокаТарифа = ДеревоТарифов132.Строки.Найти(КодТарифа, "КодТарифа");
			Если СтрокаТарифа = Неопределено Тогда
				СтрокаТарифа = ДеревоТарифов132.Строки.Добавить();
				СтрокаТарифа.Основание = Пд132Пр1Ст3Гр01.Значение;
				СтрокаТарифа.КодТарифа = КодТарифа;
			КонецЕсли;
			СтрокаНомера = СтрокаТарифа.Строки.Добавить();
			СтрокаНомера.Основание = Пд132Пр1Ст3Гр01.Значение;
			СтрокаНомера.КодТарифа = КодТарифа;
			СтрокаНомера.НомерСтраницы = СтраницаРаздела.НомерСтраницы;
			СтрокаНомера.НомерСтроки = Индекс;
			СтрокаНомера.Индекс = ИндексСтраницы;
		КонецЦикла;
	КонецЦикла;
	
	УсловиеКварталов = Новый Соответствие;
	Массив3 = Новый Массив;
	Массив3.Добавить(0);
	Массив6 = Новый Массив;
	Массив6.Добавить(3);
	Массив9 = Новый Массив;
	Массив9.Добавить(3);
	Массив9.Добавить(6);
	Массив12 = Новый Массив;
	Массив12.Добавить(3);
	Массив12.Добавить(6);
	Массив12.Добавить(9);
	УсловиеКварталов.Вставить(3	, Массив3);
	УсловиеКварталов.Вставить(6	, Массив6);
	УсловиеКварталов.Вставить(9	, Массив9);
	УсловиеКварталов.Вставить(12, Массив12);
	
	МассивГраф = Новый Массив;
	МассивГраф.Добавить(3);
	МассивГраф.Добавить(4);
	МассивГраф.Добавить(5);
	
	МассивКодовМесяцев = Новый Массив;
	Для Инд = 1 По 12 Цикл
		МассивКодовМесяцев.Добавить(Формат(Инд, "ЧЦ=2; ЧВН="));
	КонецЦикла;
	
	МассивКодовКатегорийЗЛ	= мДанныеОтчета.ДанныеКС.ТаблицаНСИ.ВыгрузитьКолонку("Категория");
	
	мДанныеОтчета.ДанныеКС.Вставить("ДеревоТарифов111"				, ДеревоТарифов111);
	мДанныеОтчета.ДанныеКС.Вставить("ДеревоТарифов131"				, ДеревоТарифов131);
	мДанныеОтчета.ДанныеКС.Вставить("ДеревоТарифов132"				, ДеревоТарифов132);
	мДанныеОтчета.ДанныеКС.Вставить("УсловиеКварталов"				, УсловиеКварталов);
	мДанныеОтчета.ДанныеКС.Вставить("МассивГраф"					, МассивГраф);
	мДанныеОтчета.ДанныеКС.Вставить("МассивКодовМесяцев"			, МассивКодовМесяцев);
	мДанныеОтчета.ДанныеКС.Вставить("МассивКодовКатегорийЗЛ"		, МассивКодовКатегорийЗЛ);
	мДанныеОтчета.ДанныеКС.Вставить("ИспользуетсяНесколькоТарифов"	, ИспользуетсяНесколькоТарифов());
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПРП()
	
	ГодОтчета	= Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	МесяцОтчета	= Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	Если УчитыватьКорректировки Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация"			, СтруктураРеквизитовФормы.Организация);
		Запрос.УстановитьПараметр("ГодОтчета"			, ГодОтчета);
		Запрос.УстановитьПараметр("МесяцОтчета"			, МесяцОтчета);
		Запрос.УстановитьПараметр("НомерКорректировки"	, ПараметрыКС.СтруктураДанныхТитульный.НомерКорректировки);
		Запрос.Текст = 
		
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МЕСЯЦ(ДокументРО.ДатаОкончания) КАК МесяцОтчета,
		|	ДокументРО.ДатаОкончания КАК ДатаОкончания,
		|	ДокументРО.Вид КАК Вид,
		|	ДокументРО.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК ДокументРО
		|ГДЕ
		|	ДокументРО.ИсточникОтчета = ""РегламентированныйОтчетРасчетПоСтраховымВзносам""
		|	И ДокументРО.Организация = &Организация
		|	И ГОД(ДокументРО.ДатаОкончания) = &ГодОтчета
		|	И МЕСЯЦ(ДокументРО.ДатаОкончания) <= &МесяцОтчета
		|	И ВЫБОР
		|			КОГДА МЕСЯЦ(ДокументРО.ДатаОкончания) = &МесяцОтчета
		|				ТОГДА ДокументРО.Вид < &НомерКорректировки
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И НЕ ДокументРО.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	МесяцОтчета УБЫВ,
		|	Вид
		|ИТОГИ ПО
		|	МесяцОтчета";
		
		Результат			= Запрос.Выполнить();
		ВыборкаПериод		= Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КоличествоЦиклов	= МесяцОтчета / 3 - 1;
		
		Для Счетчик = 0 По КоличествоЦиклов Цикл
			ВременнаяСтруктура = Неопределено;
			
			Если ВыборкаПериод.НайтиСледующий(Новый Структура("МесяцОтчета", МесяцОтчета - Счетчик * 3)) Тогда
				Выборка = ВыборкаПериод.Выбрать();
				Пока Выборка.Следующий() Цикл
					ВременнаяСтруктура = Новый Структура;
					СформироватьСтруктуруПоказателейПРП(Выборка, ВременнаяСтруктура);
					ДополнитьДанныеКС(ВременнаяСтруктура);
				КонецЦикла;
			КонецЕсли;
			
			Если Счетчик = 1 Тогда
				мДанныеОтчетаПРП	= ВременнаяСтруктура;
			ИначеЕсли Счетчик = 2 Тогда
				мДанныеОтчетаПРП1	= ВременнаяСтруктура;
			ИначеЕсли Счетчик = 3 Тогда
				мДанныеОтчетаПРП2	= ВременнаяСтруктура;
			КонецЕсли;
				
			ВыборкаПериод.Сбросить();
		КонецЦикла;
	
	Иначе
		
		Если МесяцОтчета = 3 Тогда
			Возврат;
		КонецЕсли;
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация"	, СтруктураРеквизитовФормы.Организация);
		Запрос.УстановитьПараметр("ГодОтчета"	, ГодОтчета);
		Запрос.УстановитьПараметр("МесяцОтчета"	, МесяцОтчета);
		Запрос.УстановитьПараметр("КПП"			, ПараметрыКС.СтруктураДанныхТитульный.КПП);
		Запрос.Текст = 
		
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МЕСЯЦ(ДокументРО.ДатаОкончания) КАК МесяцОтчета,
		|	ДокументРО.ДатаОкончания КАК ДатаОкончания,
		|	ДокументРО.Вид КАК Вид,
		|	ДокументРО.Ссылка КАК Ссылка,
		|	ДокументРО.КПП КАК КПП,
		|	ДокументРО.КПП = &КПП КАК Приоритет
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК ДокументРО
		|ГДЕ
		|	ДокументРО.ИсточникОтчета = ""РегламентированныйОтчетРасчетПоСтраховымВзносам""
		|	И ДокументРО.Организация = &Организация
		|	И ГОД(ДокументРО.ДатаОкончания) = &ГодОтчета
		|	И МЕСЯЦ(ДокументРО.ДатаОкончания) < &МесяцОтчета
		|	И НЕ ДокументРО.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	МесяцОтчета УБЫВ,
		|	Приоритет УБЫВ,
		|	Вид УБЫВ
		|ИТОГИ ПО
		|	МесяцОтчета";
		
		Результат			= Запрос.Выполнить();
		ВыборкаПериод		= Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КоличествоЦиклов	= МесяцОтчета / 3 - 1;
		Для Счетчик = 1 По КоличествоЦиклов Цикл
			Если ВыборкаПериод.НайтиСледующий(Новый Структура("МесяцОтчета", МесяцОтчета - Счетчик * 3)) Тогда
				Выборка = ВыборкаПериод.Выбрать();
				Выборка.Следующий();
				Если Счетчик = 1 Тогда
					СформироватьСтруктуруПоказателейПРП(Выборка, мДанныеОтчетаПРП);
					ДополнитьДанныеКС(мДанныеОтчетаПРП);
				ИначеЕсли Счетчик = 2 Тогда
					СформироватьСтруктуруПоказателейПРП(Выборка, мДанныеОтчетаПРП1);
					ДополнитьДанныеКС(мДанныеОтчетаПРП1);
				ИначеЕсли Счетчик = 3 Тогда
					СформироватьСтруктуруПоказателейПРП(Выборка, мДанныеОтчетаПРП2);
					ДополнитьДанныеКС(мДанныеОтчетаПРП2);
				КонецЕсли;
			КонецЕсли;
			ВыборкаПериод.Сбросить();
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСтруктуруПоказателейПРП(Параметры, ДанныеПРП)
	
	Перем СтруктураРазделов, СтруктураРеквизитов;
	
	ИмяФормы = Параметры.Ссылка.ВыбраннаяФорма;
	СформироватьСтруктуруРеквизитовФормы(ИмяФормы	, СтруктураРеквизитов);
	СтруктураРеквизитов.мСохраненныйДок = Параметры.Ссылка;
	ИнициализироватьМногострочныеЧасти(ИмяФормы		, СтруктураРеквизитов);	
	ИнициализироватьМногоуровневыеРазделы(ИмяФормы	, СтруктураРеквизитов, СтруктураРазделов);
	
	СформироватьСтруктуруПоказателейДляКС(ИмяФормы	, ДанныеПРП, СтруктураРеквизитов, СтруктураРазделов);
	ДанныеПРП.Вставить("СохраненныйДокументОтчета"	, Параметры.Ссылка);
	ДанныеПРП.Вставить("ДатаОкончания"				, Параметры.ДатаОкончания);
	ДанныеПРП.Вставить("Вид"						, Параметры.Вид);
	
КонецПроцедуры

Процедура ДополнитьДанныеКС(ДанныеРазделовОтчета)
	
	Если ДанныеРазделовОтчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ГодОтчета		= Год(ДанныеРазделовОтчета.ДатаОкончания);
	МесяцОтчета		= Месяц(ДанныеРазделовОтчета.ДатаОкончания);
	
	Пд31Ст60Гр01	= ПоказательПоСтроке("Пд31Ст60Гр01");
	Пд31Ст70Гр01	= ПоказательПоСтроке("Пд31Ст70Гр01");
	Пд31Ст80Гр01	= ПоказательПоСтроке("Пд31Ст80Гр01");
	Пд31Ст90Гр01	= ПоказательПоСтроке("Пд31Ст90Гр01");
	Пд31Ст100Гр01	= ПоказательПоСтроке("Пд31Ст100Гр01");
	
	Пд321СтМ1190Гр01= ПоказательПоСтроке("Пд321СтМ1190Гр01");
	Пд321СтМ1200Гр01= ПоказательПоСтроке("Пд321СтМ1200Гр01");
	Пд321СтМ1210Гр01= ПоказательПоСтроке("Пд321СтМ1210Гр01");
	Пд321СтМ1220Гр01= ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1240Гр01= ПоказательПоСтроке("Пд321СтМ1240Гр01");
	Пд322Ст260Гр01	= ПоказательПоСтроке("Пд322Ст260Гр01");
	Пд322Ст270Гр01	= ПоказательПоСтроке("Пд322Ст270Гр01");
	Пд322Ст280Гр01	= ПоказательПоСтроке("Пд322Ст280Гр01");
	Пд322Ст290Гр01	= ПоказательПоСтроке("Пд322Ст290Гр01");
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Вид", ДанныеРазделовОтчета.Вид);
	СтруктураДанных.Вставить("Квартал_" , МесяцОтчета);
	СтруктураДанных.Вставить("Отчет", ?(ДанныеРазделовОтчета.Свойство("СохраненныйДокументОтчета"), 
	ДанныеРазделовОтчета.СохраненныйДокументОтчета, Неопределено));
	
	Для Каждого СтраницаРаздела Из ДанныеРазделовОтчета.Раздел3 Цикл
		
		КолвоСтрокВМнЧасти321 = КоличествоСтрок(СтраницаРаздела.Данные, Пд321СтМ1190Гр01.Имя);
		КолвоСтрокВМнЧасти322 = КоличествоСтрок(СтраницаРаздела.Данные, Пд322Ст260Гр01.Имя);
		
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст60Гр01);
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст70Гр01);
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст80Гр01);
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст90Гр01);
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд31Ст100Гр01);
		
		СтруктураДанных.Вставить("НомерСтраницы", СтраницаРаздела.НомерСтраницы);
		СтруктураДанных.Вставить("Фамилия"		, СокрЛП(Пд31Ст80Гр01.Значение));
		СтруктураДанных.Вставить("Имя"			, Пд31Ст90Гр01.Значение);
		СтруктураДанных.Вставить("Отчество"		, Пд31Ст100Гр01.Значение);
		СтруктураДанных.Вставить("Снилс"		, Пд31Ст70Гр01.Значение);
		СтруктураДанных.Вставить("Инн"			, Пд31Ст60Гр01.Значение);
		
		Для Счетчик = 1 По КолвоСтрокВМнЧасти321 Цикл
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1200Гр01, Счетчик);
			СтруктураДанных.Вставить("Категория"	, СокрЛП(Пд321СтМ1200Гр01.Значение));
			
			Если НЕ ЗначениеЗаполнено(СтруктураДанных.Категория) Тогда
				Продолжить;
			КонецЕсли;
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1190Гр01, Счетчик);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1210Гр01, Счетчик);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1220Гр01, Счетчик);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд321СтМ1240Гр01, Счетчик);
			
			СтруктураДанных.Вставить("МесяцСтр"		, Пд321СтМ1190Гр01.Значение);
			СтруктураДанных.Вставить("Месяц_"		, СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Пд321СтМ1190Гр01.Значение));
			СтруктураДанных.Вставить("Графа"		, СтруктураДанных.Месяц_ - СтруктураДанных.Квартал_ + 5);
			СтруктураДанных.Вставить("П210"			, Пд321СтМ1210Гр01.Значение);
			СтруктураДанных.Вставить("П220"			, Пд321СтМ1220Гр01.Значение);
			СтруктураДанных.Вставить("П240"			, Пд321СтМ1240Гр01.Значение);
			СтруктураДанных.Вставить("НомерСтроки"	, Счетчик);
			СтруктураДанных.Вставить("ГруппаТарифов", КодТарифаПоКатегории(СтруктураДанных.Категория, ГодОтчета));
			СтруктураДанных.Вставить("Ставка"		, СтавкаТарифаПоКатегории(СтруктураДанных.Категория, ГодОтчета));
			
			КодыЗаполнены	= ЗначениеЗаполнено(СтруктураДанных.ГруппаТарифов) И НЕ СтруктураДанных.Ставка = Неопределено 
				И НЕ мДанныеОтчета.ДанныеКС.МассивКодовМесяцев.Найти(СтруктураДанных.МесяцСтр) = Неопределено;
			
			Если НЕ КодыЗаполнены Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока321 = мДанныеОтчета.ДанныеКС.Таблица321.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока321, СтруктураДанных);
			
		КонецЦикла;
		
		Для Счетчик = 1 По КолвоСтрокВМнЧасти322 Цикл
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд322Ст270Гр01, Счетчик);
			СтруктураДанных.Вставить("Категория"	, СокрЛП(Пд322Ст270Гр01.Значение));
			
			Если НЕ ЗначениеЗаполнено(СтруктураДанных.Категория) Тогда
				Продолжить;
			КонецЕсли;
			
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд322Ст260Гр01, Счетчик);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд322Ст280Гр01, Счетчик);
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Пд322Ст290Гр01, Счетчик);
			
			СтруктураДанных.Вставить("МесяцСтр"		, Пд322Ст260Гр01.Значение);
			СтруктураДанных.Вставить("Месяц_"		, СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Пд322Ст260Гр01.Значение));
			СтруктураДанных.Вставить("Графа"		, СтруктураДанных.Месяц_ - СтруктураДанных.Квартал_ + 5);
			СтруктураДанных.Вставить("П280"			, Пд322Ст280Гр01.Значение);
			СтруктураДанных.Вставить("П290"			, Пд322Ст290Гр01.Значение);
			СтруктураДанных.Вставить("НомерСтроки"	, Счетчик);
			СтруктураДанных.Вставить("Ставка"		, СтавкаДопТарифаПоКоду(СтруктураДанных.Категория, ГодОтчета));
			
			КодыЗаполнены	= ЗначениеЗаполнено(СтруктураДанных.Ставка)
				И НЕ мДанныеОтчета.ДанныеКС.МассивКодовМесяцев.Найти(СтруктураДанных.МесяцСтр) = Неопределено;
			
			Если НЕ КодыЗаполнены Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока322 = мДанныеОтчета.ДанныеКС.Таблица322.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока322, СтруктураДанных);
			
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьМВТпоДаннымКС()
	
	ВременныеТаблицыКС = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицыКС;
	Запрос.УстановитьПараметр("Таблица321", мДанныеОтчета.ДанныеКС.Таблица321);
	Запрос.УстановитьПараметр("Таблица322", мДанныеОтчета.ДанныеКС.Таблица322);
	
	Если УчитыватьКорректировки Тогда
	
		Запрос.Текст =
		
		"ВЫБРАТЬ
		|	Таблица321.ГруппаТарифов КАК ГруппаТарифов,
		|	Таблица321.Категория КАК Категория,
		|	Таблица321.Ставка КАК Ставка,
		|	Таблица321.Месяц_ КАК Месяц_,
		|	Таблица321.МесяцСтр КАК МесяцСтр,
		|	Таблица321.Квартал_ КАК Квартал_,
		|	Таблица321.Графа КАК Графа,
		|	Таблица321.Фамилия КАК Фамилия,
		|	Таблица321.Имя КАК Имя,
		|	Таблица321.Отчество КАК Отчество,
		|	Таблица321.Снилс КАК Снилс,
		|	Таблица321.Инн КАК Инн,
		|	Таблица321.Отчет КАК Отчет,
		|	Таблица321.Вид КАК Вид,
		|	Таблица321.НомерСтраницы КАК НомерСтраницы,
		|	Таблица321.НомерСтроки КАК НомерСтроки,
		|	Таблица321.П210 КАК П210,
		|	Таблица321.П220 КАК П220,
		|	Таблица321.П240 КАК П240
		|ПОМЕСТИТЬ ВТ_Раздел321_Исходный
		|ИЗ
		|	&Таблица321 КАК Таблица321
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица322.Категория КАК Категория,
		|	Таблица322.Ставка КАК Ставка,
		|	Таблица322.Месяц_ КАК Месяц_,
		|	Таблица322.МесяцСтр КАК МесяцСтр,
		|	Таблица322.Квартал_ КАК Квартал_,
		|	Таблица322.Графа КАК Графа,
		|	Таблица322.Фамилия КАК Фамилия,
		|	Таблица322.Имя КАК Имя,
		|	Таблица322.Отчество КАК Отчество,
		|	Таблица322.Снилс КАК Снилс,
		|	Таблица322.Инн КАК Инн,
		|	Таблица322.Отчет КАК Отчет,
		|	Таблица322.Вид КАК Вид,
		|	Таблица322.НомерСтраницы КАК НомерСтраницы,
		|	Таблица322.НомерСтроки КАК НомерСтроки,
		|	Таблица322.П280 КАК П280,
		|	Таблица322.П290 КАК П290
		|ПОМЕСТИТЬ ВТ_Раздел322_Исходный
		|ИЗ
		|	&Таблица322 КАК Таблица322
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел321_Исходный.Квартал_ КАК Квартал_,
		|	ВТ_Раздел321_Исходный.Снилс КАК Снилс,
		|	МАКСИМУМ(ВТ_Раздел321_Исходный.Вид) КАК Вид
		|ПОМЕСТИТЬ ВТ_Раздел321_Отбор
		|ИЗ
		|	ВТ_Раздел321_Исходный КАК ВТ_Раздел321_Исходный
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Раздел321_Исходный.Квартал_,
		|	ВТ_Раздел321_Исходный.Снилс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел322_Исходный.Квартал_ КАК Квартал_,
		|	ВТ_Раздел322_Исходный.Снилс КАК Снилс,
		|	МАКСИМУМ(ВТ_Раздел322_Исходный.Вид) КАК Вид
		|ПОМЕСТИТЬ ВТ_Раздел322_Отбор
		|ИЗ
		|	ВТ_Раздел322_Исходный КАК ВТ_Раздел322_Исходный
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Раздел322_Исходный.Квартал_,
		|	ВТ_Раздел322_Исходный.Снилс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел321_Исходный.ГруппаТарифов КАК ГруппаТарифов,
		|	ВТ_Раздел321_Исходный.Категория КАК Категория,
		|	ВТ_Раздел321_Исходный.Ставка КАК Ставка,
		|	ВТ_Раздел321_Исходный.Месяц_ КАК Месяц_,
		|	ВТ_Раздел321_Исходный.МесяцСтр КАК МесяцСтр,
		|	ВТ_Раздел321_Исходный.Квартал_ КАК Квартал_,
		|	ВТ_Раздел321_Исходный.Графа КАК Графа,
		|	ВТ_Раздел321_Исходный.Фамилия КАК Фамилия,
		|	ВТ_Раздел321_Исходный.Имя КАК Имя,
		|	ВТ_Раздел321_Исходный.Отчество КАК Отчество,
		|	ВТ_Раздел321_Исходный.Снилс КАК Снилс,
		|	ВТ_Раздел321_Исходный.Инн КАК Инн,
		|	ВТ_Раздел321_Исходный.Отчет КАК Отчет,
		|	ВТ_Раздел321_Исходный.Вид КАК Вид,
		|	ВТ_Раздел321_Исходный.НомерСтраницы КАК НомерСтраницы,
		|	ВТ_Раздел321_Исходный.НомерСтроки КАК НомерСтроки,
		|	ВТ_Раздел321_Исходный.П210 КАК П210,
		|	ВТ_Раздел321_Исходный.П220 КАК П220,
		|	ВТ_Раздел321_Исходный.П240 КАК П240
		|ПОМЕСТИТЬ ВТ_Раздел321
		|ИЗ
		|	ВТ_Раздел321_Исходный КАК ВТ_Раздел321_Исходный
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Раздел321_Отбор КАК ВТ_Раздел321_Отбор
		|		ПО ВТ_Раздел321_Исходный.Снилс = ВТ_Раздел321_Отбор.Снилс
		|			И ВТ_Раздел321_Исходный.Квартал_ = ВТ_Раздел321_Отбор.Квартал_
		|			И ВТ_Раздел321_Исходный.Вид = ВТ_Раздел321_Отбор.Вид
		|ГДЕ
		|	НЕ ВТ_Раздел321_Исходный.П210 + ВТ_Раздел321_Исходный.П220 + ВТ_Раздел321_Исходный.П240 = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел322_Исходный.Категория КАК Категория,
		|	ВТ_Раздел322_Исходный.Ставка КАК Ставка,
		|	ВТ_Раздел322_Исходный.Месяц_ КАК Месяц_,
		|	ВТ_Раздел322_Исходный.МесяцСтр КАК МесяцСтр,
		|	ВТ_Раздел322_Исходный.Квартал_ КАК Квартал_,
		|	ВТ_Раздел322_Исходный.Графа КАК Графа,
		|	ВТ_Раздел322_Исходный.Фамилия КАК Фамилия,
		|	ВТ_Раздел322_Исходный.Имя КАК Имя,
		|	ВТ_Раздел322_Исходный.Отчество КАК Отчество,
		|	ВТ_Раздел322_Исходный.Снилс КАК Снилс,
		|	ВТ_Раздел322_Исходный.Инн КАК Инн,
		|	ВТ_Раздел322_Исходный.Отчет КАК Отчет,
		|	ВТ_Раздел322_Исходный.Вид КАК Вид,
		|	ВТ_Раздел322_Исходный.НомерСтраницы КАК НомерСтраницы,
		|	ВТ_Раздел322_Исходный.НомерСтроки КАК НомерСтроки,
		|	ВТ_Раздел322_Исходный.П280 КАК П280,
		|	ВТ_Раздел322_Исходный.П290 КАК П290
		|ПОМЕСТИТЬ ВТ_Раздел322
		|ИЗ
		|	ВТ_Раздел322_Исходный КАК ВТ_Раздел322_Исходный
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Раздел322_Отбор КАК ВТ_Раздел322_Отбор
		|		ПО ВТ_Раздел322_Исходный.Квартал_ = ВТ_Раздел322_Отбор.Квартал_
		|			И ВТ_Раздел322_Исходный.Снилс = ВТ_Раздел322_Отбор.Снилс
		|			И ВТ_Раздел322_Исходный.Вид = ВТ_Раздел322_Отбор.Вид
		|ГДЕ
		|	НЕ ВТ_Раздел322_Исходный.П280 + ВТ_Раздел322_Исходный.П290 = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Раздел321_Исходный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Раздел322_Исходный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Раздел321_Отбор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Раздел322_Отбор";
	
	Иначе
	
		Запрос.Текст =
		
		"ВЫБРАТЬ
		|	Таблица321.ГруппаТарифов КАК ГруппаТарифов,
		|	Таблица321.Категория КАК Категория,
		|	Таблица321.Ставка КАК Ставка,
		|	Таблица321.Месяц_ КАК Месяц_,
		|	Таблица321.МесяцСтр КАК МесяцСтр,
		|	Таблица321.Квартал_ КАК Квартал_,
		|	Таблица321.Графа КАК Графа,
		|	Таблица321.Фамилия КАК Фамилия,
		|	Таблица321.Имя КАК Имя,
		|	Таблица321.Отчество КАК Отчество,
		|	Таблица321.Снилс КАК Снилс,
		|	Таблица321.Инн КАК Инн,
		|	Таблица321.Отчет КАК Отчет,
		|	Таблица321.Вид КАК Вид,
		|	Таблица321.НомерСтраницы КАК НомерСтраницы,
		|	Таблица321.НомерСтроки КАК НомерСтроки,
		|	Таблица321.П210 КАК П210,
		|	Таблица321.П220 КАК П220,
		|	Таблица321.П240 КАК П240
		|ПОМЕСТИТЬ ВТ_Раздел321
		|ИЗ
		|	&Таблица321 КАК Таблица321
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица322.Категория КАК Категория,
		|	Таблица322.Ставка КАК Ставка,
		|	Таблица322.Месяц_ КАК Месяц_,
		|	Таблица322.МесяцСтр КАК МесяцСтр,
		|	Таблица322.Квартал_ КАК Квартал_,
		|	Таблица322.Графа КАК Графа,
		|	Таблица322.Фамилия КАК Фамилия,
		|	Таблица322.Имя КАК Имя,
		|	Таблица322.Отчество КАК Отчество,
		|	Таблица322.Снилс КАК Снилс,
		|	Таблица322.Инн КАК Инн,
		|	Таблица322.Отчет КАК Отчет,
		|	Таблица322.Вид КАК Вид,
		|	Таблица322.НомерСтраницы КАК НомерСтраницы,
		|	Таблица322.НомерСтроки КАК НомерСтроки,
		|	Таблица322.П280 КАК П280,
		|	Таблица322.П290 КАК П290
		|ПОМЕСТИТЬ ВТ_Раздел322
		|ИЗ
		|	&Таблица322 КАК Таблица322";
	
	КонецЕсли;
	
	Запрос.Выполнить();
	мДанныеОтчета.ДанныеКС.Вставить("ВременныеТаблицыКС", ВременныеТаблицыКС);
	
КонецПроцедуры

Функция ТаблицаДанныхДерева(ДанныеРаздела)
	
	ТаблицаЗаполнения = ТаблицаДляЗаполнения();
	ДеревоВТаблицу(ДанныеРаздела, ТаблицаЗаполнения);
	
	ТаблицаДанных = ТаблицаДляДанных();
	
	Страница = Неопределено;
	ДанныеСтраницы = Новый Структура;
	
	Для Каждого Элемент Из ТаблицаЗаполнения Цикл
		
		Если Страница <> Элемент.Страница Тогда
			
			Страница = Элемент.Страница;
			ДанныеСтраницы = Новый Структура;
			
			НоваяСтрока = ТаблицаДанных.Добавить();
			НоваяСтрока.НомерСтраницы = Страница;
			НоваяСтрока.Данные = ДанныеСтраницы;
			
		КонецЕсли;
		
		ДанныеСтраницы.Вставить(Элемент.Имя + ?(Элемент.Строка = "", "", "_" + Элемент.Строка), Элемент.Значение);
		
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

Функция ТаблицаДляДанных()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("НомерСтраницы");
	Таблица.Колонки.Добавить("Данные");
	
	Возврат Таблица;
	
КонецФункции

Функция ТаблицаДляЗаполнения()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Страница");
	Таблица.Колонки.Добавить("Имя");
	Таблица.Колонки.Добавить("Значение");
	Таблица.Колонки.Добавить("Строка");
	
	Возврат Таблица;
	
КонецФункции

Функция ТаблицаГрупп(СписокДопКолонок)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Ключ", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("СчетчикФормул", Новый ОписаниеТипов("Число"));
	
	Если ЗначениеЗаполнено(СписокДопКолонок) Тогда
		КолонкиТаблицы = СтрРазделить(СписокДопКолонок, ",");
		Для Каждого КолонкаТаблицы Из КолонкиТаблицы Цикл
			Таблица.Колонки.Добавить(КолонкаТаблицы, Новый ОписаниеТипов("Число"));
			Таблица.Колонки.Добавить(КолонкаТаблицы + "Стр", Новый ОписаниеТипов("Строка"));
		КонецЦикла;
	КонецЕсли;
	
	Таблица.Индексы.Добавить("Ключ");
	
	Возврат Таблица;
	
КонецФункции

Функция ПолучитьВерсиюНастроекКС(ДатаОкончанияПериода, Раздел = "НСИ")
	
	ГодОтчета = Год(ДатаОкончанияПериода);
	
	Если Раздел = "НСИ" Тогда
	
		Если ГодОтчета = 2017 Тогда
			Возврат НСтр("ru='НСИ_2017_1'");
		ИначеЕсли ГодОтчета = 2018 Тогда
			Возврат НСтр("ru='НСИ_2018_1'");
		ИначеЕсли ГодОтчета = 2019 Тогда
			Возврат НСтр("ru='НСИ_2019_1'");
		ИначеЕсли ГодОтчета = 2020 Тогда
			Возврат НСтр("ru='НСИ_2020_1'");
		Иначе
			Возврат Неопределено;
		КонецЕсли; 
	
	ИначеЕсли Раздел = "КодТарифа" Тогда
	
		Если ГодОтчета = 2017 Тогда
			Возврат НСтр("ru='КодТарифа_2017_1'");
		ИначеЕсли ГодОтчета = 2018 Тогда
			Возврат НСтр("ru='КодТарифа_2018_1'");
		ИначеЕсли ГодОтчета = 2019 Тогда
			Возврат НСтр("ru='КодТарифа_2019_1'");
		ИначеЕсли ГодОтчета = 2020 Тогда
			Возврат НСтр("ru='КодТарифа_2020_1'");
		Иначе
			Возврат Неопределено;
		КонецЕсли; 
	
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Служебные_СервисПроверок

Процедура ВставитьЗначениеПоказателя(ИсточникДанных, Показатель, ИмяКолонки = "")
	
	Если ЗначениеЗаполнено(ИмяКолонки) Тогда
		ЗначениеПоказателя = ИсточникДанных[ИмяКолонки];
	ИначеЕсли ИсточникДанных.Свойство(Показатель.Имя) Тогда
		ЗначениеПоказателя = ИсточникДанных[Показатель.Имя];
	Иначе
		ЗначениеПоказателя = 0;
	КонецЕсли;
	
	Если Показатель.Свойство("Формат") И ЗначениеЗаполнено(Показатель.Формат) Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, Показатель.Формат);
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		ПредставлениеЗначения = ЗначениеПоказателя;
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		ПредставлениеЗначения = "" + ЗначениеПоказателя;
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ДЛФ=D");
	Иначе
		ПредставлениеЗначения = Строка(ЗначениеПоказателя);
	КонецЕсли;
	
	Показатель.Вставить("Значение", ЗначениеПоказателя);
	Показатель.Вставить("ЗначениеСтр", ПредставлениеЗначения);
	
КонецПроцедуры

Процедура ВставитьЗначениеМногострочногоПоказателя(ИсточникДанных, Показатель, НомерСтроки, ИмяКолонки = "")
	
	НомерСтрокиСтр = "" + НомерСтроки;
	
	Если ЗначениеЗаполнено(ИмяКолонки) Тогда
		ЗначениеПоказателя = ИсточникДанных[ИмяКолонки];
	Иначе
		ИмяПоказателя = СтрЗаменить(Показатель.Имя, "%1", НомерСтрокиСтр);
		Если ИсточникДанных.Свойство(ИмяПоказателя) Тогда
			ЗначениеПоказателя = ИсточникДанных[ИмяПоказателя];
		Иначе
			ЗначениеПоказателя = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если Показатель.Свойство("Формат") И ЗначениеЗаполнено(Показатель.Формат) Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, Показатель.Формат);
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		ПредставлениеЗначения = "" + ЗначениеПоказателя;
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		ПредставлениеЗначения = ЗначениеПоказателя;
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ДЛФ=D");
	Иначе
		ПредставлениеЗначения = Строка(ЗначениеПоказателя);
	КонецЕсли;
	
	Показатель.Вставить("Значение", ЗначениеПоказателя);
	Показатель.Вставить("ЗначениеСтр", ПредставлениеЗначения);
	Показатель.Вставить("НомерСтроки", НомерСтрокиСтр);
	
КонецПроцедуры

Процедура ЗарегистрироватьФормулу(Знач Настройки);

	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	НовСтр = СписокРасшифровкиФормулы.Добавить();
	НовСтр.ТекстовоеПредставлениеФормулы = СформироватьОписаниеКС(Настройки, "ДопСведенияВЗаголовокРасшифровки");
	НовСтр.Номер = СчетчикФормулДляРасшифровок;
	
КонецПроцедуры

Процедура ДополнитьСтруктуруОшибок(Настройки)
	
	Если Настройки.ЭтоОшибка Тогда
		Настройки.КоличествоНайденныхОшибок = Настройки.КоличествоНайденныхОшибок + 1;
	Иначе
		Настройки.КоличествоНайденныхБезОшибок = Настройки.КоличествоНайденныхБезОшибок + 1;
	КонецЕсли;
	
	Счетчик		= XMLСтрока(Настройки.КоличествоНайденныхОшибок + Настройки.КоличествоНайденныхБезОшибок);
	ОписаниеКС	= СформироватьОписаниеКС(Настройки, "ДопСведенияВОписаниеКС");
	ОписаниеКС	= ?(ПустаяСтрока(Настройки.ТекстФормулы), "", Настройки.ТекстФормулы + Символы.ПС) + ОписаниеКС;
	
	Настройки.СтруктураОшибок.Вставить("ТекстовоеПредставлениеФормулы" + Счетчик, ОписаниеКС);
	Настройки.СтруктураОшибок.Вставить("Расшифровка"	+ Счетчик, Настройки.Расшифровка);
	Настройки.СтруктураОшибок.Вставить("ЭтоОшибка"		+ Счетчик, Настройки.ЭтоОшибка);
	Настройки.СтруктураОшибок.Вставить("Нарушение"		+ Счетчик, Настройки.Нарушение);
	Настройки.СтруктураОшибок.Вставить("Описание"		+ Счетчик, Настройки.ОписаниеОшибки);
	Настройки.СтруктураОшибок.Вставить("Комментарий"	+ Счетчик, НСтр("ru=''"));
	
КонецПроцедуры

Процедура ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	РегламентированнаяОтчетность.ЗарегистрироватьФормулуДляРасшифровки(СписокРасшифровкиФормулы, ОписаниеКС, Неопределено, СчетчикФормулДляРасшифровок);
	
КонецПроцедуры

Процедура ВнестиПоказательВРасшифровку(Показатель, ИмяСтраницы, НомерСтраницы = Неопределено, 
	ДокументРО = Неопределено)
	
	ПредставлениеПоказателя = Показатель.Представление;
	
	ЗначениеПоказателя = ?(ТипЗнч(Показатель.Значение) = Тип ("Дата"), Показатель.ЗначениеСтр, Показатель.Значение);
	
	Если Показатель.Свойство("НомерСтроки") Тогда
		Если Показатель.НомерСтроки = "0" Тогда
			Показатель.НомерСтроки = "1"; // для работы с таблицами 3 раздела
		КонецЕсли;
		ИмяПоказателя = СтрЗаменить(Показатель.Имя, "%1", Показатель.НомерСтроки);
	Иначе
		ИмяПоказателя = Показатель.Имя;
	КонецЕсли;
	
	НомСтраницы = НомерСтраницы;
	
	Если ИмяСтраницы = "Раздел1Прил1Подр1_1и1_2" Тогда
		НомСтраницы = НомерСтраницы + ",1";
	ИначеЕсли ИмяСтраницы = "Раздел1Прил1Подр1_3_1" Тогда
		НомСтраницы = НомерСтраницы + ",2";
	ИначеЕсли ИмяСтраницы = "Раздел1Прил1Подр1_3_2" Тогда
		НомСтраницы = НомерСтраницы + ",3";
	ИначеЕсли ИмяСтраницы = "Раздел1Прил1Подр1_4" Тогда
		НомСтраницы = НомерСтраницы + ",4";
	КонецЕсли;
	
	НовСтр = СписокРасшифровкиПоказателей.Добавить();
	НовСтр.Номер = СчетчикФормулДляРасшифровок;
	НовСтр.ИмяПоказателя = ИмяПоказателя;
	НовСтр.ПредставлениеПоказателя = ПредставлениеПоказателя;
	НовСтр.ЗначениеПоказателя = ЗначениеПоказателя;
	НовСтр.ФормулаПоказателя = "";
	НовСтр.СсылкаНаДокументРО = ?(ДокументРО = Неопределено, СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка, 
		ДокументРО.Ссылка);
	НовСтр.ИмяСтраницы = ИмяСтраницы;
	НовСтр.Страница = ?(НомСтраницы = Неопределено, "", "" + НомСтраницы);
	НовСтр.ДополнительныеВозможности = Неопределено;
	
КонецПроцедуры

Процедура ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, 
	ОбщееЧислоБезОшибок, Расшифровка, ЭтоОшибка, Описание = Неопределено, Нарушение = Неопределено, 
	Коммент = Неопределено)
	
	Счетчик = XMLСтрока(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок);
	
	ТекстовоеПредставлениеФормулы = ?(ПустаяСтрока(ТекстФормулы), "", ТекстФормулы + ". ") + ОписаниеКС;
	СтруктураОшибок.Вставить("Описание"		+ Счетчик, Описание);
	СтруктураОшибок.Вставить("Нарушение"	+ Счетчик, Нарушение);
	СтруктураОшибок.Вставить("Расшифровка"	+ Счетчик, Расшифровка);
	СтруктураОшибок.Вставить("ЭтоОшибка"	+ Счетчик, ЭтоОшибка);
	СтруктураОшибок.Вставить("ТекстовоеПредставлениеФормулы"
											+ Счетчик, ТекстовоеПредставлениеФормулы);
	СтруктураОшибок.Вставить("Комментарий"	+ Счетчик, Коммент);
	
КонецПроцедуры

Процедура ДобавитьИнфоКПредставлениюПоказателя(Показатель, СтрокаИнфо)
	
	ПредставлениеПоказателя = Показатель.Представление;
	
	Если СтрЗаканчиваетсяНа(ПредставлениеПоказателя, ")") Тогда
		ПозицияОткрСкобки = СтрНайти(ПредставлениеПоказателя, "(", НаправлениеПоиска.СКонца);
		Если ПозицияОткрСкобки > 0 Тогда
			ПредставлениеПоказателя = Лев(ПредставлениеПоказателя, ПозицияОткрСкобки);
			Показатель.Представление = ПредставлениеПоказателя + СтрокаИнфо + ")";
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Показатель.Представление = ПредставлениеПоказателя + " (" + СтрокаИнфо + ")";
	
КонецПроцедуры

Функция КодНайден(ЗначениеКода, Условия = "")
	
	МассивКодов = СтрРазделить(Условия, ",", Ложь);
	Возврат НЕ МассивКодов.Найти(ЗначениеКода) = Неопределено;
	
КонецФункции

Функция КоличествоСтрок(Данные, Показатель)
	
	Инд = 1; 
	Количество = 0;
	Показатель_ = СтрЗаменить(Показатель, "%1", "");
	
	Пока Данные.Свойство(Показатель_ + ?(Инд < 1000, Инд, XMLСтрока(Инд))) Цикл
		Количество = Количество + 1;
		Инд = Инд + 1;
	КонецЦикла;
	
	Возврат Количество;
	
КонецФункции

Функция СтрокаЧГ0(ИсходноеЧисло)
	
	Возврат ?(ИсходноеЧисло < 1000, "" + ИсходноеЧисло, XMLСтрока(ИсходноеЧисло));
	
КонецФункции

Функция ОбработатьНастройки(Знач Настройки = Неопределено, 
	Знач ИзменяемыеСвойства 	= Неопределено, 
	Знач СтруктураРезультата 	= Неопределено)
	
	Если Настройки = Неопределено Тогда
		
		Настройки = Новый Структура;
		Настройки.Вставить("ТекстФормулы"			, (НСтр("ru=''")));
		Настройки.Вставить("Нарушение"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеКС"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеОшибки"			, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеОшибок"			, Новый Массив);
		Настройки.Вставить("Расшифровка"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонРасшифровки"		, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонОписанияКС"		, (НСтр("ru=''")));
		Настройки.Вставить("ДопСведения"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонДопСведений"		, (НСтр("ru=''")));
		Настройки.Вставить("ДопСведенияПараметры"	, Новый Структура);
		Настройки.Вставить("ЭтоОшибка"				, Ложь);
		Настройки.Вставить("СтруктураОшибок");
		Настройки.Вставить("КоличествоНайденныхОшибок");
		Настройки.Вставить("КоличествоНайденныхБезОшибок");
		Настройки.Вставить("ДопСведенияВОписаниеКС"	, Ложь);
		Настройки.Вставить("ДопСведенияВЗаголовокРасшифровки", Ложь);
		Настройки.Вставить("ДопСведенияВСтрокуРасшифровки", Ложь);
	
	КонецЕсли;
	
	Если Не ИзменяемыеСвойства = Неопределено Тогда
		Для каждого ЭлементКоллекции Из ИзменяемыеСвойства Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Если Не СтруктураРезультата = Неопределено Тогда
		Для каждого ЭлементКоллекции Из СтруктураРезультата Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Функция ОбработатьРезультат(Знач Настройки = Неопределено, Знач СтруктураРезультата = Неопределено,
	Создать = Неопределено);
	
	Если Создать = Истина Тогда
	
		СтруктураРезультата = Новый Структура;
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок"		, 0);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок"		, 0);
		СтруктураРезультата.Вставить("СтруктураОшибок", Новый Структура);
		СтруктураРезультата.Вставить("ДопСведенияВОписаниеКС"			, Истина);
		СтруктураРезультата.Вставить("ДопСведенияВЗаголовокРасшифровки"	, Ложь);
		СтруктураРезультата.Вставить("ДопСведенияВСтрокуРасшифровки"	, Истина);
	
	ИначеЕсли Создать = Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультата, Настройки,
			"КоличествоНайденныхОшибок, КоличествоНайденныхБезОшибок");
	
	ИначеЕсли Создать = Ложь Тогда
		
		СтруктураРезультата.Удалить("ДопСведенияВОписаниеКС");
		СтруктураРезультата.Удалить("ДопСведенияВЗаголовокРасшифровки");
		СтруктураРезультата.Удалить("ДопСведенияВСтрокуРасшифровки");
	
	КонецЕсли;
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция СформироватьОписаниеКС(Знач Настройки, ЗначениеСвойства)
	
	Если Настройки[ЗначениеСвойства] Тогда
		
		Если Не Настройки.ДопСведенияПараметры = Неопределено И
			Не Настройки.ДопСведенияПараметры.Количество() = 0 Тогда
			
			МассивПараметров = Новый Массив;
			Для каждого ЭлементКоллекции Из Настройки.ДопСведенияПараметры Цикл
				МассивПараметров.Добавить(ЭлементКоллекции.Значение);
			КонецЦикла;
			
			КоличествоПараметров = МассивПараметров.Количество();
			
			Если КоличествоПараметров = 1 Тогда
				Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", МассивПараметров[0]);
			ИначеЕсли КоличествоПараметров = 2 Тогда
				Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", МассивПараметров[0]);
				Настройки.ДопСведения = СтрЗаменить(Настройки.ДопСведения, "%2", МассивПараметров[1]);
			ИначеЕсли КоличествоПараметров = 3 Тогда
				Настройки.Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", МассивПараметров[0]);
				Настройки.Настройки.ДопСведения = СтрЗаменить(Настройки.ДопСведения, "%2", МассивПараметров[1]);
				Настройки.ДопСведения = СтрЗаменить(Настройки.ДопСведения, "%3", МассивПараметров[2]);
			ИначеЕсли КоличествоПараметров = 4 Тогда
				Настройки.ДопСведения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					Настройки.ШаблонДопСведений, МассивПараметров[0], МассивПараметров[1], МассивПараметров[2], 
					МассивПараметров[3]);
			ИначеЕсли КоличествоПараметров = 5 Тогда
				Настройки.ДопСведения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					Настройки.ШаблонДопСведений, МассивПараметров[0], МассивПараметров[1], МассивПараметров[2], 
					МассивПараметров[3], МассивПараметров[4]);
			Иначе
				Настройки.ДопСведения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					Настройки.ШаблонДопСведений, МассивПараметров[0], МассивПараметров[1], МассивПараметров[2], 
					МассивПараметров[3], МассивПараметров[4], МассивПараметров[5]);
			КонецЕсли;
				
			Возврат Настройки.ОписаниеКС + " (" + Настройки.ДопСведения + ")"; 
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Настройки.ОписаниеКС;
	
КонецФункции

Функция ИспользуетсяНесколькоТарифов()
	
	Тарифы = Новый Соответствие;
	
	Для каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		КодТарифа = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, КодТарифа);
		Тарифы.Вставить(КодТарифа.Значение);
	КонецЦикла;
	
	Возврат Тарифы.Количество() > 1;
	
КонецФункции

Функция КССучетомОтклонения(ЛеваяЧасть, ПраваяЧасть, Отклонение)
	
	Возврат (ЛеваяЧасть >= ПраваяЧасть - Отклонение И ЛеваяЧасть <= ПраваяЧасть + Отклонение);
	
КонецФункции

Функция ПоказателиКС(ЛеваяЧасть, ПраваяЧасть, РазмерЛев = Ложь, РазмерПрав = Ложь)
	
	ПоказателиКС = Новый Структура();
	
	Если РазмерЛев Тогда
		ЛеваяЧасть = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ПараметрыКС, ЛеваяЧасть);
	КонецЕсли;
	
	Если РазмерПрав Тогда
		ПраваяЧасть = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ПараметрыКС, ПраваяЧасть);
	КонецЕсли;
	
	ПоказателиКС.Вставить("ЛеваяЧасть", ЛеваяЧасть);
	ПоказателиКС.Вставить("ЛеваяЧастьСтр", "" + ЛеваяЧасть);
	
	ПоказателиКС.Вставить("ПраваяЧасть", ПраваяЧасть);
	ПоказателиКС.Вставить("ПраваяЧастьСтр", "" + ПраваяЧасть);
	
	Возврат ПоказателиКС;
	
КонецФункции

Функция РазделЗаполнен(ДанныеРаздела, ИмяПодраздела = Неопределено)
	
	Результат = Ложь;
	
	ПрефиксПоказателя = ИмяПодраздела;
	
	Если ИмяПодраздела = "Подраздел11" Тогда
		ПрефиксПоказателя = "П01111";
	ИначеЕсли ИмяПодраздела = "Подраздел12" Тогда
		ПрефиксПоказателя = "П01112";
	ИначеЕсли ИмяПодраздела = "Подраздел131" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы11131М1;
	ИначеЕсли ИмяПодраздела = "Подраздел132" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы11132М1;
	ИначеЕсли ИмяПодраздела = "Подраздел14" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы1114М1;
	ИначеЕсли ИмяПодраздела = "Приложение5" Тогда
		ПрефиксПоказателя = "П00015";
	ИначеЕсли ИмяПодраздела = "Приложение6" Тогда
		ПрефиксПоказателя = "П00016";
	ИначеЕсли ИмяПодраздела = "Подраздел321" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы321М1;
	ИначеЕсли ИмяПодраздела = "Подраздел322" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы322М1;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из ДанныеРаздела Цикл
		
		Для Каждого Показатель Из СтраницаРаздела.Данные Цикл
			Результат = ЗначениеЗаполнено(Показатель.Значение);
			
			Если ПрефиксПоказателя = Неопределено Тогда
				Если Результат Тогда
					Возврат Результат;
				КонецЕсли;
			ИначеЕсли СтрНайти(Показатель.Ключ, ПрефиксПоказателя) > 0 Тогда
				Если Результат Тогда
					Возврат Результат;
				КонецЕсли;
			КонецЕсли;
			
			Результат = Ложь;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция РасшифровкаВСтр(СтрокаДляРасшифровки)
	Если ТипЗнч(СтрокаДляРасшифровки) = Тип("Строка") Тогда
		Если СтрокаДляРасшифровки= "" Тогда
			Возврат "0";
		ИначеЕсли Прав(СтрокаДляРасшифровки, 3) = " + " Тогда
			Возврат Лев(СтрокаДляРасшифровки, СтрДлина(СтрокаДляРасшифровки) - 3);
		ИначеЕсли Прав(СтрокаДляРасшифровки, 3) = " - " Тогда
			Возврат Лев(СтрокаДляРасшифровки, СтрДлина(СтрокаДляРасшифровки) - 3);
		ИначеЕсли Прав(СтрокаДляРасшифровки, 3) = " и " Тогда
			Возврат Лев(СтрокаДляРасшифровки, СтрДлина(СтрокаДляРасшифровки) - 3);
		Иначе
			Возврат СтрокаДляРасшифровки;
		КонецЕсли;
	ИначеЕсли ТипЗнч(СтрокаДляРасшифровки) = Тип("Число") Тогда
		Возврат СтрокаЧГ0(РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ПараметрыКС, СтрокаДляРасшифровки));
	Иначе
		Возврат СтрокаДляРасшифровки;
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОсновнаяПрограмма

#Область ОсновнаяПрограмма_РазделКонтрольныхСоотношений

УчитыватьКорректировки = Истина;

#КонецОбласти

#КонецОбласти

#КонецЕсли