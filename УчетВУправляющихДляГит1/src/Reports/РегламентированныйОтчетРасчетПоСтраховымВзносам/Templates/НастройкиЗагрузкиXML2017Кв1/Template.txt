// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/РасчетСВ");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			ТекущийУзел.МнУр = Истина;
			
			Если ТекущийУзел.Раздел = "Раздел2Прил1" Тогда
				ТекущийУзел.Раздел = "Раздел2";
			КонецЕсли;
			
			Если СтрНачинаетсяС(ТекущийУзел.Раздел, "Раздел1Прил1Подр1") Тогда
				Если МножественныйУзел(ТекущийУзел) Тогда
					ТекущийУзел.Многострочность = Истина;
				КонецЕсли;
				ТекущийУзел.Раздел = "Раздел1Прил1";
			Иначе
				ТекущийУзел.Многостраничность = МногостраничностьУзла(ТекущийУзел);
				ТекущийУзел.Многострочность = МногострочностьУзла(ТекущийУзел);
			КонецЕсли;
			
		КонецЦикла;
		
		УзлыРаздел1Прил1 = УзлыПоXPath(НайденныйУзел, "РасчСВ_ОПС_ОМС/*"); // элементы раздела 1 (приложение 1)
		Для Каждого УзелРаздел1Прил1 Из УзлыРаздел1Прил1 Цикл
			УзелРаздел1Прил1.Обязательность = УзелРаздел1Прил1.Обязательность + "П"; // пропустить при автоматической загрузке
		КонецЦикла;
		
		УзлыПоXPath(НайденныйУзел, "ПерсСвСтрахЛиц/ДанФЛПолуч/@СерНомДок")[0].Ключ = "П000310015002";
		
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//ОбязПлатСВ/УплПревОСС/УплПерОСС");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыПодчиненные = УзлыПоXPath(НайденныйУзел, "@*"); // подчиненные атрибуты
		Для Каждого ТекущийУзел Из НайденныеУзлыПодчиненные Цикл
			Если ТекущийУзел.Код = "СумСВУплПер" Тогда
				ТекущийУзел.Ключ = "П000010011001";
			ИначеЕсли ТекущийУзел.Код = "СумСВУпл1М" Тогда
				ТекущийУзел.Ключ = "П000010011101";
			ИначеЕсли ТекущийУзел.Код = "СумСВУпл2М" Тогда
				ТекущийУзел.Ключ = "П000010011201";
			ИначеЕсли ТекущийУзел.Код = "СумСВУпл3М" Тогда
				ТекущийУзел.Ключ = "П000010011301";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		Титульный.ОКВЭД          = П.ПараметрыОтчета.ОКВЭД;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
	КонецЕсли;
	
	УзлыРаздел1Прил1 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/РасчетСВ/ОбязПлатСВ/РасчСВ_ОПС_ОМС"); // многоуровневый раздел 1 (приложение 1)
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел1Прил1.Количество() Цикл
		
		УзелРаздел1Прил1Уровень1 = УзлыРаздел1Прил1[НомСтраницыУровень1 - 1];
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 4 страницы с подчиненными разделами.
		
		// Подразделы 1.1 и 1.2 (страница 1)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 1;
		УзлыРаздел1Прил1Подр11 = УзлыПоXPath(УзелРаздел1Прил1Уровень1, "РасчСВ_ОПС"); // подраздел 1.1
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел1Прил1Подр11[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 1;
		УзлыРаздел1Прил1Подр12 = УзлыПоXPath(УзелРаздел1Прил1Уровень1, "РасчСВ_ОМС"); // подраздел 1.2
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел1Прил1Подр12[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		
		// Подраздел 1.3.1 (страница 2)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 2;
		НомСтроки = Новый Массив(1);
		УзлыРаздел1Прил1Подр131 = УзлыПоXPath(УзелРаздел1Прил1Уровень1, "РасчСВ_ОПС428/РасчСВ_428.1-2"); // подраздел 1.3.1
		Для НомСтрокиУровень2 = 1 По УзлыРаздел1Прил1Подр131.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел1Прил1Подр131 = УзлыРаздел1Прил1Подр131[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел1Прил1Подр131, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// Подраздел 1.3.2 (страница 3)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 3;
		НомСтроки = Новый Массив(1);
		УзлыРаздел1Прил1Подр132 = УзлыПоXPath(УзелРаздел1Прил1Уровень1, "РасчСВ_ОПС428/РасчСВ_428.3");   // подраздел 1.3.2
		Для НомСтрокиУровень2 = 1 По УзлыРаздел1Прил1Подр132.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел1Прил1Подр132 = УзлыРаздел1Прил1Подр132[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел1Прил1Подр132, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// Подраздел 1.4 (страница 4)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 4;
		НомСтроки = Новый Массив(1);
		УзлыРаздел1Прил1Подр14 = УзлыПоXPath(УзелРаздел1Прил1Уровень1, "РасчСВ_ДСО"); // подраздел 1.4
		Для НомСтрокиУровень2 = 1 По УзлыРаздел1Прил1Подр14.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел1Прил1Подр14 = УзлыРаздел1Прил1Подр14[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел1Прил1Подр14, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
	КонецЦикла;
	
	Раздел1Прил9 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел1Прил9", Раздел1Прил9);
	Если Раздел1Прил9 <> Неопределено Тогда
	
		Для Каждого СтраницаПервогоУровня Из Раздел1Прил9.Строки Цикл
			Для Каждого ЭлементМногострочнойЧасти Из СтраницаПервогоУровня.ДанныеМногострочныхЧастей Цикл
				
				Для Каждого СтрокаМногострочнойЧасти Из ЭлементМногострочнойЧасти.Значение.Строки Цикл
					ЗначениеПоказателя = Неопределено;
					Если СтрокаМногострочнойЧасти.Данные.Свойство("П00019М107001", ЗначениеПоказателя)
					   И ЗначениеПоказателя = "999" Тогда
						СтрокаМногострочнойЧасти.Данные.Вставить("П00019М107002", "V");
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Раздел3 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел3", Раздел3);
	Если Раздел3 <> Неопределено Тогда
	
		Для Каждого СтраницаПервогоУровня Из Раздел3.Строки Цикл
			СерНомДок = Неопределено;
			Если СтраницаПервогоУровня.Данные.Свойство("П000310015002", СерНомДок) Тогда
				ЧастиСерНомДок = СтрРазделить(СерНомДок, " ");
				СтраницаПервогоУровня.Данные.Вставить("П000310015002", ЧастиСерНомДок[ЧастиСерНомДок.ВГраница()]);
				ЧастиСерНомДок.Удалить(ЧастиСерНомДок.ВГраница());
				Если ЧастиСерНомДок.Количество() > 0 Тогда
					СтраницаПервогоУровня.Данные.Вставить("П000310015001", СтрСоединить(ЧастиСерНомДок, " "));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти