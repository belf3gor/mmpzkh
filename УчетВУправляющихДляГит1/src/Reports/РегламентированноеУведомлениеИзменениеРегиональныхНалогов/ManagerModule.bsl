#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеИзменениеРегиональныхНалогов.Форма.Форма2017_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 22.11.2018 № ММВ-7-21/652@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	ВызватьИсключение НСтр("ru='Данный функционал не поддерживается'");
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ПечатьСразу_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат СформироватьМакет_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2017_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Данные.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
		Данные.Вставить("ПодписантИмя", Объект.ПодписантИмя);
		Данные.Вставить("ПодписантОтчество", Объект.ПодписантОтчество);
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "VO_USTIZMPRNAL";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Процедура Проверить_Форма2017_1(Данные, УникальныйИдентификатор)
	Титульная = Данные.ДанныеУведомления.Титульная;
	
	Если (Не ЗначениеЗаполнено(Титульная.НалПер))
		Или (Не ЗначениеЗаполнено(Титульная.ПрНП)) Тогда 
		
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан налоговый период и/или код налогоплательшика на титульной странице", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
		
	Ошибок = 0;
	ЛистыАБ = 0;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЛистыАБ = 0 Тогда 
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Отсутствует Лист А и Лист Б", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда
			СтрОписание = "ИО-"+Формат(Лист.Значение.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если Не ЗначениеЗаполнено(Лист.Значение.ДоляПрямУч)
				И Не ЗначениеЗаполнено(Лист.Значение.ДоляКосУч) Тогда 
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 2.2 или 2.3 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код101)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код102))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код103)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код104))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код105)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 101-105 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код201)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код202))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код203)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код204))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код205)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 201-205 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Лист.Значение.ПрСамПризн) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен пункт 1.3 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 1-2 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		КонецЕсли;
			
		Если Ошибок > 3 Тогда
			ВызватьИсключение "";
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда
			СтрОписание = "ИС-"+Формат(Лист.Значение.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код106)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код107))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код108)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код109))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код110)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код111))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код112)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 106-112 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист.Значение.ПрСамПризн) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен пункт 3 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.НаимДокУчр)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимДокУчрЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.ДатаУчрИСДата)) Или (Не ЗначениеЗаполнено(Лист.Значение.СтрРег)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 2-6 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИК) Тогда 
			СтрОписание = Лист.Значение.НомерКИК;
			
			Если Лист.Значение.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(Лист.Значение.ДатаПослДнПерДата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 3 на листе В при значении п.2 = 1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Лист.Значение.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(Лист.Значение.ДатаСостФОДата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 4 на листе В при значении п.2 = 1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Лист.Значение.ПорОпрПрКИК = "2" И Не ЗначениеЗаполнено(Лист.Значение.ДатаПослДнПерГл25Дата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 5 на листе В при значении п.2 = 2/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код1001)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1002))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1003)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1004))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1005)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1006))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1007)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1008)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 1001-1008 на листе В/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.ПорОпрПрКИК)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 2 на листе В/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерРосОрг) Тогда 
			СтрОписание = "РО-"+Формат(Лист.Значение.НомерРосОрг, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.ОГРН)) Или (Не ЗначениеЗаполнено(Лист.Значение.ИННЮЛ))
				Или (Не ЗначениеЗаполнено(Лист.Значение.КПП)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Тогда 
			
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены обязательные пункты 2-5 на листе Г-1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерИО) Тогда 
			СтрОписание = "ИО-"+Формат(Лист.Значение.НомерИО, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.СтрРег)) Тогда 
			
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены обязательные пункты 1-3 на листе Г-2/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл 
		Если ЗначениеЗаполнено(Стр.НомерУч) И Не (ЗначениеЗаполнено(Стр.ДоляУчКосв) Или ЗначениеЗаполнено(Стр.ДоляУчПрям)) Тогда 
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("В свободных строках листа Г должен быть заполнен пункт 3.2 или  3.3", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Ложь);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияОтпр", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяОтпр", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоОтпр", Объект.ПодписантОтчество);
	ОсновныеСведения.Вставить("НаимДок", Объект.ПодписантДокумент);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульный.КодНО);
	ОсновныеСведения.Вставить("КолДок", Данные.ДанныеМногостраничныхРазделов.Документ.Количество());
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульный.ИННЮЛ);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
	ДанныеУведомления.Вставить("ПодписантИмя", Объект.ПодписантИмя);
	ДанныеУведомления.Вставить("ПодписантОтчество", Объект.ПодписантОтчество);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ЗаполнитьДанными_Форма2017_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2017_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДеревоВыгрузки, ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Функция СтраницаЗаполнена(Данные)
	Если ТипЗнч(Данные) = Тип("Структура") Тогда 
		Для Каждого КЗ Из Данные Цикл 
			Если ТипЗнч(КЗ.Значение) = Тип("УникальныйИдентификатор") Тогда 
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(КЗ.Значение) Тогда 
				Возврат Истина
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Процедура ДополнитьПараметры(Параметры)
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.Документ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			Если ПарамСтр.ВидНал = "2" Тогда 
				ПарамСтр.Вставить("НалПерМесГод", Формат(ПарамСтр.НалПер, "ДФ=MM.yyyy; ДП=00.0000"));
			Иначе
				ПарамСтр.Вставить("НалПерГод", Формат(ПарамСтр.НалПер, "ДФ=yyyy; ДП=000000"));
			КонецЕсли;
			
			
			ПарамСтр.Вставить("СвОсобОпрГод", Формат(ПарамСтр.СвОсобОпр, "ДФ=yyyy; ДП=0000"));
			ПарамСтр.Вставить("СвДатаНачГод", Формат(ПарамСтр.СвДатаНач, "ДФ=yyyy; ДП=0000"));
			ПарамСтр.Вставить("СвОтмУплГод", Формат(ПарамСтр.СвОтмУпл, "ДФ=yyyy; ДП=0000"));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция НовыйУзелИзПрототипа(ДеревоВыгрузки, ПрототипУзла) Экспорт 
	ПозицияИсходногоУзла = ДеревоВыгрузки.Строки.Индекс(ПрототипУзла);
	НовыйУзел = ДеревоВыгрузки.Строки.Вставить(ПозицияИсходногоУзла + 1);
	ЗаполнитьЗначенияСвойств(НовыйУзел, ПрототипУзла, , "Родитель, Строки");
	Для Каждого Стр из ПрототипУзла.Строки Цикл
		Документы.УведомлениеОСпецрежимахНалогообложения.СкопироватьУзел(НовыйУзел, Стр);
	КонецЦикла;
	Возврат НовыйУзел;
КонецФункции

Процедура ЗаполнитьДаннымиУзелНов(ДеревоВыгрузки, ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				Если Стр.Многострочность Тогда
					Для Каждого СтрМнг Из ПараметрыВыгрузки.ДанныеДопСтрокБД[Стр.Раздел].НайтиСтроки(Новый Структура("УИД", УИДРодителя)) Цикл
						НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(НовУзел, СтрМнг.ОКТМО);
					КонецЦикла;
				Иначе
					ЗначениеПоказателя = Неопределено;
					Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
						Если ЗначениеПоказателя = Неопределено И (Стр.Обязательность = "О" Или Стр.Обязательность = "O") И Стр.Формат = "N" Тогда 
							ЗначениеПоказателя = 0;
						КонецЕсли;
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
						И ЗначениеЗаполнено(Стр.Раздел)
						И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
						Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
							Если ЗначениеПоказателя = Неопределено И (Стр.Обязательность = "О" Или Стр.Обязательность = "O") И Стр.Формат = "N" Тогда 
								ЗначениеПоказателя = 0;
							КонецЕсли;
							РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл
						Если Стр.Родитель = Неопределено Тогда 
							Прототип = Неопределено;
							Для Каждого СтрокаВерхнегоУровня Из ДеревоВыгрузки.Строки Цикл 
								Если СтрокаВерхнегоУровня.Код = Стр.Код Тогда 
									Прототип = СтрокаВерхнегоУровня;
									Прервать;
								КонецЕсли;
							КонецЦикла;
							НовУзел = НовыйУзелИзПрототипа(ДеревоВыгрузки, Прототип);
							ЗаполнитьДаннымиУзелНов(ДеревоВыгрузки, ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						Иначе
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ДеревоВыгрузки, ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЗаполнитьДаннымиУзелНов(ДеревоВыгрузки, ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПечатьСразу_Форма2017_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2017_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция СформироватьМакет_Форма2017_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПечатныйБланк_2017");
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	Страница = МакетУведомления.ПолучитьОбласть("Страница1");
	Страница.Параметры.КодНО = СтруктураПараметров.ДанныеУведомления.Титульный.КодНО;
	Страница.Параметры.НаименованиеНО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Наименование");
	Страница.Параметры.НаименованиеОргана = СтруктураПараметров.ДанныеУведомления.Титульный.НаимОрг;
	Страница.Параметры.Отправитель = СтруктураПараметров.ДанныеУведомления.Титульный.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтруктураПараметров.ДанныеУведомления.Титульный.ОГРН, "ОГРН", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтруктураПараметров.ДанныеУведомления.Титульный.ИННЮЛ, "ИНН", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтруктураПараметров.ДанныеУведомления.Титульный.КПП, "КПП", Страница.Области, "-");
	СтрДокумент = СтруктураПараметров.ДанныеМногостраничныхРазделов.Документ[0].Значение;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтрДокумент.ТипДок, "ТипДок", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтрДокумент.ВидНал, "ВидНал", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтрДокумент.ВидИнф, "ВидИнф", Страница.Области, "-");
	Страница.Параметры.ВидАкт = СтрДокумент.ВидАкт;
	Страница.Параметры.НаимОргАкт = СтрДокумент.НаимОргАкт;
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(СтрДокумент.ДатаПринАкт, "ДатаПринАкт", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(СтрДокумент.ДатаОпубАкт, "ДатаОпубАкт", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(СтрДокумент.ДатаВступАкт, "ДатаВступАкт", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Объект.ДатаПодписи, "ДАТА_ПОДПИСИ", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтрДокумент.НомАкт, "НомАкт", Страница.Области, "-");
	НалПер = Формат(СтрДокумент.СвДатаНач, ?(СтрДокумент.ВидНал = "2", "ДФ=MMyyyy; ДП=------", "ДФ=--yyyy; ДП=------"));
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(НалПер, "НалПер", Страница.Области, "-");
	УИД = СтрДокумент.УИД;
	ОКТМО = "";
	Для Каждого Элт Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр1.НайтиСтроки(Новый Структура("УИД", УИД)) Цикл 
		Если ЗначениеЗаполнено(Элт["ОКТМО"]) Тогда 
			ОКТМО = ОКТМО + ?(ЗначениеЗаполнено(ОКТМО), ",", "") + Элт["ОКТМО"];
		КонецЕсли;
		Если СтрДлина(ОКТМО) > 100 Тогда 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ОКТМО, "ОКТМО", Страница.Области, "-");
	ПечатнаяФорма.Вывести(Страница);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	Страница = МакетУведомления.ПолучитьОбласть("Страница2");
	Для Каждого СвНалСтав Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СвНалСтав Цикл 
		Если СвНалСтав.Значение.УИДРодителя = УИД Тогда 
			СвНалСтав = СвНалСтав.Значение;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СвНалСтав.СведНалСтав, "СвСтавка", Страница.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СвНалСтав.ЕдИзмер, "ЕдИзм", Страница.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(СвНалСтав.РазмНалСтав, "РазмерСтавки", Страница.Области);
			Страница.Параметры.ВидОбъектаНалогообложения = СвНалСтав.НаимОбъект;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СвНалЛьгот Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СвНалЛьгот Цикл 
		Если СвНалЛьгот.Значение.УИДРодителя = УИД Тогда 
			СвНалЛьгот = СвНалЛьгот.Значение;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СвНалЛьгот.СведНалСтав, "СвЛьгота", Страница.Области, "-");
			Страница.Параметры.КатегорияОбъектаНалогообложения = СвНалЛьгот.КатегНал;
			Страница.Параметры.СодержаниеЛьготы = СвНалЛьгот.СодНалЛьгот;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СвНалВыч Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СвНалВыч Цикл 
		Если СвНалВыч.Значение.УИДРодителя = УИД Тогда 
			СвНалВыч = СвНалВыч.Значение;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СвНалВыч.СведНалСтав, "СвВычет", Страница.Области, "-");
			Страница.Параметры.КатегорияНПЛ = СвНалВыч.КатегНал;
			Страница.Параметры.РазмерВычета = СвНалВыч.СодНалЛьгот;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(СтрДокумент.СвОсобОпр, "ДФ=yyyy; ДП=----"), "СвОсобОпр", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(СтрДокумент.СвДатаНач, "ДФ=yyyy; ДП=----"), "СвДатаНач", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(СтрДокумент.СвОтмУпл, "ДФ=yyyy; ДП=----"), "СвОтмУпл", Страница.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтрДокумент.КодУстСрок, "СвАванс", Страница.Области, "-");
	Страница.Параметры.УстСрок = СтрДокумент.УстСрок;
	ПечатнаяФорма.Вывести(Страница);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 2, Ложь);
	
	Возврат Листы;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	Попытка
		Титульная = Данные.ДанныеУведомления.Титульный;
		
		Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код налогового органа", "Титульный", "КодНО"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации", "Титульный", "НаимОрг"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ИННЮЛ) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ИННЮЛ))
			Или СтрДлина(СокрЛП(Титульная.ИННЮЛ)) <> 10 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан ИНН", "Титульный", "ИННЮЛ"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КПП))
			Или СтрДлина(СокрЛП(Титульная.КПП)) <> 9 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан КПП", "Титульный", "КПП"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ОГРН) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ОГРН))
			Или СтрДлина(СокрЛП(Титульная.ОГРН)) <> 13 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан ОРГН", "Титульный", "ОГРН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата составления", "Титульный", "ДАТА_ПОДПИСИ"));
		КонецЕсли;
		
		Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("СвНалСтав,СвНалЛьгот,СвНалВыч", ",") Цикл 
			Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов[Элт] Цикл 
				СтрЗнач = Стр.Значение;
				Если СтраницаЗаполнена(СтрЗнач) И Не ЗначениеЗаполнено(СтрЗнач.СведНалСтав) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указаны сведения о налоговой ставке", Элт, "СведНалСтав", СтрЗнач.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Если (ЗначениеЗаполнено(Данные.ПодписантФамилия) Или ЗначениеЗаполнено(Данные.ПодписантИмя) Или ЗначениеЗаполнено(Данные.ПодписантОтчество))
			И (Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Или Не ЗначениеЗаполнено(Данные.ПодписантИмя)) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан отправитель", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
		
		Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.Документ Цикл
			СтрЗнач = Стр.Значение;
			
			Если Не ЗначениеЗаполнено(СтрЗнач.ТипДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан тип документа", "Документ", "ТипДок", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.ВидНал) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан вид налога", "Документ", "ВидНал", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.ВидИнф) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан вид информации", "Документ", "ВидИнф", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.ВидАкт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан вид акта", "Документ", "ВидАкт", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.НаимОргАкт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана организация", "Документ", "НаимОргАкт", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.ДатаПринАкт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата подписания акта", "Документ", "ДатаПринАкт", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.ДатаОпубАкт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата опубликования акта", "Документ", "ДатаОпубАкт", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.ДатаВступАкт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата вступления акта в силу", "Документ", "ДатаВступАкт", СтрЗнач.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗнач.НалПер) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый период", "Документ", "НалПер", СтрЗнач.УИД));
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрЗнач.УстСрок) И Не ЗначениеЗаполнено(СтрЗнач.КодУстСрок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан вид налога или платежа", "Документ", "КодУстСрок", СтрЗнач.УИД));
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрЗнач.КодУстСрок) И Не ЗначениеЗаполнено(СтрЗнач.УстСрок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан установленный срок", "Документ", "УстСрок", СтрЗнач.УИД));
			КонецЕсли;
			
			ОКТМОЗаполнено = Ложь;
			Инд = 0;
			Для Каждого СтрМнг1 Из Данные.ДанныеДопСтрокБД.МнгСтр1.НайтиСтроки(Новый Структура("УИД", СтрЗнач.УИД)) Цикл 
				ОКТМОЗаполнено = ОКТМОЗаполнено Или ЗначениеЗаполнено(СтрМнг1.ОКТМО);
				Инд = Инд + 1;
				Если ЗначениеЗаполнено(СтрМнг1.ОКТМО) 
					И ((Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(СтрМнг1.ОКТМО)) Или (СтрДлина(СтрМнг1.ОКТМО) <> 8 И СтрДлина(СтрМнг1.ОКТМО) <> 11)) Тогда 
					
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан ОКТМО", "Документ", "ОКТМО___" + Инд, СтрЗнач.УИД));
				КонецЕсли;
			КонецЦикла;
			Если Не ОКТМОЗаполнено Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан ОКТМО", "Документ", "ОКТМО___1", СтрЗнач.УИД));
			КонецЕсли;
		КонецЦикла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Возникла исключительная ситуация при проверке, обратитесь к администратору");
	КонецПопытки;
	
	Возврат ТаблицаОшибок;
КонецФункции

#КонецОбласти
#КонецЕсли
