// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Обязательность", "ОМ"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Многостраничность = МногостраничностьУзла(СтрокаДерева); // попытаемся автоматически назначить признак многостраничности
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Обязательность", "НМ"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Многостраничность = МногостраничностьУзла(СтрокаДерева); // попытаемся автоматически назначить признак многостраничности
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100110004003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000110004003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100110007003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000110007003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100250010003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000250010003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100260010003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000260010003"; // обработаем в структуре данных документа
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100330000501"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = ""; // не загружаем
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100340000501"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = ""; // не загружаем
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "РасчНал", "Лист02"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Многостраничность = Истина;
		УзлыПодчиненныхРазделов = УзлыПоXPath(СтрокаДерева, "*"); // все подчиненные разделы
		Для Каждого УзелРаздела Из УзлыПодчиненныхРазделов Цикл
			УзелРаздела.Обязательность = УзелРаздела.Обязательность + "П";
			Если УзелРаздела.Код = "РасчНалГруп" Тогда
				УзелРасчНалУчГруп = УзлыПоXPath(УзелРаздела, "РасчНалУчГруп")[0];
				УзелРасчНалУчГруп.Обязательность = УзелРасчНалУчГруп.Обязательность + "П";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "КорНБЛишГод", "Лист02_2"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Многострочность = Ложь;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "ОстУбытНачПерГод", "Лист02_4"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Многострочность = Ложь;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "НалДохДив", "Лист03А"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Многостраничность = Истина;
		УзлыПодчиненныхРазделов = УзлыПоXPath(СтрокаДерева, "@ОтчетГод");
		Для Каждого УзелРаздела Из УзлыПодчиненныхРазделов Цикл
			УзелРаздела.Ключ = "П000310000500";
		КонецЦикла;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "НалБазОпОсобН", "Лист05"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Обязательность = СтрокаДерева.Обязательность + "П";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "СумДох", "Приложение2"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Многострочность = Истина;
		УзлыПоXPath(СтрокаДерева, "@КодДоход")[0].Ключ = "П000020004001";
		УзлыПоXPath(СтрокаДерева, "@КодДоход")[0].Формат = "T";
		УзлыПоXPath(СтрокаДерева, "@СумДоход")[0].Ключ = "П000020004101";
		УзлыПодчиненныхРазделов = УзлыПоXPath(СтрокаДерева, "СумВыч");
		Для Каждого УзелРаздела Из УзлыПодчиненныхРазделов Цикл
			УзелРаздела.Обязательность = "Н";
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	УзелПрибыль = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Прибыль")[0]; // содержательная часть
	
	Лист21 = УзлыПоXPath(УзелПрибыль, "РасчНал/ДохРеалВнеРеал"); // Лист 02.1
	Для НомСтраницы = 1 По Лист21.Количество() Цикл
		СтраницаРаздела = Лист21[НомСтраницы - 1];
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Лист22 = УзлыПоXPath(УзелПрибыль, "РасчНал/РасхРеалВнеРеал"); // Лист 02.2
	Для НомСтраницы = 1 По Лист22.Количество() Цикл
		СтраницаРаздела = Лист22[НомСтраницы - 1];
		УзлыКорНБЛишГод = УзлыПоXPath(СтраницаРаздела, "КорНБЛиш/КорНБЛишГод");
		Для Инд = 1 По Мин(УзлыКорНБЛишГод.Количество(), 3) Цикл
			УзлыПоXPath(УзлыКорНБЛишГод[Инд - 1], "@Год")[0].Ключ = "П000220040" + Инд + "01";
			УзлыПоXPath(УзлыКорНБЛишГод[Инд - 1], "@КорНБЛишВс")[0].Ключ = "П000220040" + Инд + "03";
		КонецЦикла;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Лист23 = УзлыПоXPath(УзелПрибыль, "РасчНал/РасчРасхОпер"); // Лист 02.3
	Для НомСтраницы = 1 По Лист23.Количество() Цикл
		СтраницаРаздела = Лист23[НомСтраницы - 1];
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Лист24 = УзлыПоXPath(УзелПрибыль, "РасчНал/УбытУменНБ"); // Лист 02.4
	Для НомСтраницы = 1 По Лист24.Количество() Цикл
		СтраницаРаздела = Лист24[НомСтраницы - 1];
		УзлыОстУбытНачПерГод = УзлыПоXPath(СтраницаРаздела, "ОстУбытНачПерГод");
		Для Инд = 1 По Мин(УзлыОстУбытНачПерГод.Количество(), 10) Цикл
			УзлыПоXPath(УзлыОстУбытНачПерГод[Инд - 1], "@Год")[0].Ключ = "П0002400" + Формат((Инд + 3) * 10, "ЧЦ=3; ЧВН=") + "01";
			УзлыПоXPath(УзлыОстУбытНачПерГод[Инд - 1], "@ОстУбыт")[0].Ключ = "П0002400" + Формат((Инд + 3) * 10, "ЧЦ=3; ЧВН=") + "03";
		КонецЦикла;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Лист25 = УзлыПоXPath(УзелПрибыль, "РасчНал/РаспрНалСубРФ"); // Лист 02.5
	Для НомСтраницы = 1 По Лист25.Количество() Цикл
		СтраницаРаздела = Лист25[НомСтраницы - 1];
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Лист26 = УзлыПоXPath(УзелПрибыль, "РасчНал/РасчНалГруп"); // Лист 02.6
	Для НомСтраницы = 1 По Лист26.Количество() Цикл
		СтраницаРаздела = Лист26[НомСтраницы - 1];
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Лист26а = УзлыПоXPath(УзелПрибыль, "РасчНал/РасчНалГруп/РасчНалУчГруп"); // Лист 02.6а
	Для НомСтраницы = 1 По Лист26а.Количество() Цикл
		СтраницаРаздела = Лист26а[НомСтраницы - 1];
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	ГруппыЛист26б = УзлыПоXPath(УзелПрибыль, "РасчНал/ДохРасхУчГрупНБ/ДохРасхУчГруп"); // группы строк листа 02.6б
	Для НомСтроки = 1 По ГруппыЛист26б.Количество() Цикл
		ГруппаРаздела = ГруппыЛист26б[НомСтроки - 1];
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(ГруппаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , , НомСтроки);
	КонецЦикла;
	
	Лист05 = УзлыПоXPath(УзелПрибыль, "НалБазОпОсобН"); // Лист 05
	НомерСтраницы = 1;
	Для НомСтраницы = 1 По Лист05.Количество() Цикл
		СтраницаРаздела = Лист05[НомСтраницы - 1];
		УзелВидОпер = УзлыПоXPath(СтраницаРаздела, "@ВидОпер");
		Если ЗначениеЗаполнено(УзелВидОпер) И ЗначениеЗаполнено(УзелВидОпер[0].Значение) Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомерСтраницы);
			НомерСтраницы = НомерСтраницы + 1;
		КонецЕсли;
	КонецЦикла;
	
	Приложение2 = УзлыПоXPath(УзелПрибыль, "СведДохФЛ"); // Приложение 2
	Для НомСтраницы = 1 По Приложение2.Количество() Цикл
		УзлыСумДох = УзлыПоXPath(Приложение2[НомСтраницы - 1], "СпрДохФЛ/СумДох");
		Для НомСтроки = 1 По УзлыСумДох.Количество() Цикл
			УзелСумДох = УзлыСумДох[НомСтроки - 1];
			УзлыСумВыч = УзлыПоXPath(УзелСумДох, "СумВыч");
			Для Инд = 1 По Мин(УзлыСумВыч.Количество(), 5) Цикл
				УзлыПоXPath(УзлыСумВыч[Инд - 1], "@КодВычет")[0].Ключ = "П00002000420" + Инд;
				УзлыПоXPath(УзлыСумВыч[Инд - 1], "@СумВычет")[0].Ключ = "П00002000430" + Инд;
			КонецЦикла;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСумДох, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
	КонецЦикла;
	
	Раздел1_1 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел1_1", Раздел1_1);
	Если Раздел1_1 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел1_1 Цикл
			ДанныеРаздела = СтраницаРаздела.Данные;
			ЗначениеПоказателя = 0;
			Если ДанныеРаздела.Свойство("П000110004003", ЗначениеПоказателя) Тогда
				ЗначениеПоказателя = 0 + ЗначениеПоказателя;
				Если ЗначениеПоказателя >= 0 Тогда
					ДанныеРаздела.Вставить("П000110004003", ЗначениеПоказателя);
					ДанныеРаздела.Вставить("П000110005003", 0);
				Иначе
					ДанныеРаздела.Вставить("П000110004003", 0);
					ДанныеРаздела.Вставить("П000110005003", -ЗначениеПоказателя);
				КонецЕсли;
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000110007003", ЗначениеПоказателя) Тогда
				ЗначениеПоказателя = 0 + ЗначениеПоказателя;
				Если ЗначениеПоказателя >= 0 Тогда
					ДанныеРаздела.Вставить("П000110007003", ЗначениеПоказателя);
					ДанныеРаздела.Вставить("П000110008003", 0);
				Иначе
					ДанныеРаздела.Вставить("П000110007003", 0);
					ДанныеРаздела.Вставить("П000110008003", -ЗначениеПоказателя);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Лист02_5 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Лист02_5", Лист02_5);
	Если Лист02_5 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Лист02_5 Цикл
			ДанныеРаздела = СтраницаРаздела.Данные;
			ЗначениеПоказателя = 0;
			Если ДанныеРаздела.Свойство("П000250010003", ЗначениеПоказателя) Тогда
				ЗначениеПоказателя = 0 + ЗначениеПоказателя;
				Если ЗначениеПоказателя >= 0 Тогда
					ДанныеРаздела.Вставить("П000250010003", ЗначениеПоказателя);
					ДанныеРаздела.Вставить("П000250011003", 0);
				Иначе
					ДанныеРаздела.Вставить("П000250010003", 0);
					ДанныеРаздела.Вставить("П000250011003", -ЗначениеПоказателя);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Лист02_6 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Лист02_6", Лист02_6);
	Если Лист02_6 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Лист02_6 Цикл
			ДанныеРаздела = СтраницаРаздела.Данные;
			ЗначениеПоказателя = 0;
			Если ДанныеРаздела.Свойство("П000260010003", ЗначениеПоказателя) Тогда
				ЗначениеПоказателя = 0 + ЗначениеПоказателя;
				Если ЗначениеПоказателя >= 0 Тогда
					ДанныеРаздела.Вставить("П000260010003", ЗначениеПоказателя);
					ДанныеРаздела.Вставить("П000260011003", 0);
				Иначе
					ДанныеРаздела.Вставить("П000260010003", 0);
					ДанныеРаздела.Вставить("П000260011003", -ЗначениеПоказателя);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти