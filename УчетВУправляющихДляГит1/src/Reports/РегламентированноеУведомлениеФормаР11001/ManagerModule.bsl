#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область ПолучениеДанныхОтчета
Функция ПолучитьДанныеОтчета(Объект) Экспорт
	Результат = ПолучитьПустуюСтруктуруРезультата();
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "ДанныеУведомления").Получить();
	ДанныеМногостраничныхРазделов = ДанныеУведомления.ДанныеМногостраничныхРазделов;
	
	Результат.УставныйКапитал = ДанныеУведомления.ДанныеУведомления.Лист001.П01030100;
	Для Каждого ЛистА Из ДанныеМногостраничныхРазделов.ЛистА Цикл
		Если ЗначениеЗаполнено(ЛистА.Значение.А01040100) Тогда 
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистА.Значение.А01020000;
			НовСтр.Учредитель = ЛистА.Значение.А01030000;
			НовСтр.СуммаКапитала = ЛистА.Значение.А01040100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистБ Из ДанныеМногостраничныхРазделов.ЛистБ Цикл
		Если ЗначениеЗаполнено(ЛистБ.Значение.Б01040100) Тогда 
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистБ.Значение.Б01030000;
			НовСтр.Учредитель = ЛистБ.Значение.Б01010000;
			НовСтр.СуммаКапитала = ЛистБ.Значение.Б01040100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистВ Из ДанныеМногостраничныхРазделов.ЛистВ Цикл
		Если ЗначениеЗаполнено(ЛистВ.Значение.В01070100) Тогда 
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистВ.Значение.В01020000;
			НовСтр.Учредитель = СокрЛП(ЛистВ.Значение.В01010100 + " " + ЛистВ.Значение.В01010200 + " " + ЛистВ.Значение.В01010300);
			НовСтр.СуммаКапитала = ЛистВ.Значение.В01070100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистГ1 Из ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		Если ЗначениеЗаполнено(ЛистГ1.Значение.Г02010000) Тогда 
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.СуммаКапитала = ЛистГ1.Значение.Г02010000;
			Если ЛистГ1.Значение.Г01010100 = "1" Тогда
				НовСтр.Учредитель = "Российская Федерация";
			ИначеЕсли ЛистГ1.Значение.Г01010100 = "2" Тогда 
				НовСтр.Учредитель = РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(ЛистГ1.Значение.Г01010200);
			ИначеЕсли ЛистГ1.Значение.Г01010100 = "3" Тогда
				РегионСтр = РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(ЛистГ1.Значение.Г01010200);
				НовСтр.Учредитель = ЛистГ1.Значение.Г01030000;
				Если ЗначениеЗаполнено(РегионСтр) Тогда 
					НовСтр.Учредитель = НовСтр.Учредитель + " (" + РегионСтр + ")";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистД Из ДанныеМногостраничныхРазделов.ЛистД Цикл
		Если ЗначениеЗаполнено(ЛистД.Значение.Д03010000) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистД.Значение.Д02020000;
			НовСтр.Учредитель = ЛистД.Значение.Д01000000;
			НовСтр.СуммаКапитала = ЛистД.Значение.Д03010000;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьПустуюСтруктуруРезультата()
	ТЗ = Новый ТаблицаЗначений;
	
	Колонки = ТЗ.Колонки;
	Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("Учредитель", Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("СуммаКапитала", Новый ОписаниеТипов("Число"));
	
	Возврат Новый Структура("УставныйКапитал,Учредители", Неопределено, ТЗ);
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеФормаР11001.Форма.Форма2014_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2014_1";
	Стр.ОписаниеФормы = "В редакции от 25.01.2012 приказ ФНС России № ММВ-7-6/25@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ПечатьСразу_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьМакет_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы) Экспорт
	Если Объект.ИмяФормы = "Форма2014_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы);
	КонецЕсли;
КонецФункции

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда 
					НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы) Экспорт
	ЕстьВыходЗаГраницы = Ложь;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		
		Если Стр.ИДНаименования = "ЛистИ" Тогда 
			МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть1;
			А01010000 = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000;
			Если Не ЗначениеЗаполнено(А01010000) Тогда 
				Продолжить;
			КонецЕсли;
			
			ПечатнаяФорма = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(А01010000, "А01010000", ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
			
			ВсегоНапечатаноСтрок = 0;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда 
					Продолжить;
				КонецЕсли;
				
				Если ВсегоНапечатаноСтрок = 56 Тогда 
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					ВсегоНапечатаноСтрок = 0;
					НомСтр = НомСтр + 1;
					ПечатнаяФорма = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+(ВсегоНапечатаноСтрок+1), ПечатнаяФорма.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
			КонецЦикла;
			
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		Иначе 
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы)
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьМакет_Форма2014_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы)
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
		НомСтр = НомСтр + 1;
		МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет(ИмяМакета);
	
		Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
			Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
				Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(КЗ.Ключ) Тогда 
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
				Иначе 
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области);
				КонецЕсли;
			ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
			ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
			КонецЕсли;
		КонецЦикла;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
		ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
		ПечатнаяФорма.Вывести(МакетПФ);
	КонецЕсли;
КонецПроцедуры

Функция ПечатьСразу_Форма2014_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2014_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(СведенияОтправки)
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда 
		ДатаФормированияФайла = Формат(Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)), Число(Сред(СведенияОтправки.ДатаДок, 4, 2)), Число(Лев(СведенияОтправки.ДатаДок, 2))), "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R11001_0000_0000_000000000000000_" + ДатаФормированияФайла + "_" + Строка(Новый УникальныйИдентификатор);
	Возврат Префикс;
КонецФункции

Процедура Проверить_Форма2014_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	
	Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2014_1");
	ЗаполнитьДанными_Форма2014_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2014_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Процедура ДополнитьПараметры(Параметры)
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.В01050501) И ЗначениеЗаполнено(ПарамСтр.В01050502) Тогда 
			ПарамСтр.Вставить("В01050500", ПарамСтр.В01050501 + "-" + ПарамСтр.В01050502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ2_3 Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Г0302040501) И ЗначениеЗаполнено(ПарамСтр.Г0302040502) Тогда 
			ПарамСтр.Вставить("Г03020405", ПарамСтр.Г0302040501 + "-" + ПарамСтр.Г0302040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЕ Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Е05050100) И ЗначениеЗаполнено(ПарамСтр.Е05050200) Тогда 
			ПарамСтр.Вставить("Е05050000", ПарамСтр.Е05050100 + "-" + ПарамСтр.Е05050200);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЖ Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Ж08040501) И ЗначениеЗаполнено(ПарамСтр.Ж08040502) Тогда 
			ПарамСтр.Вставить("Ж08040500", ПарамСтр.Ж08040501 + "-" + ПарамСтр.Ж08040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЗ Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.З05050100) И ЗначениеЗаполнено(ПарамСтр.З05050200) Тогда 
			ПарамСтр.Вставить("З05050000", ПарамСтр.З05050100 + "-" + ПарамСтр.З05050200);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистН Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Н04040501) И ЗначениеЗаполнено(ПарамСтр.Н04040502) Тогда 
			ПарамСтр.Вставить("Н04040500", ПарамСтр.Н04040501 + "-" + ПарамСтр.Н04040502);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьДеревоСтраниц_Форма2014_1()
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 001";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	Стр001.МакетыПФ = "Печать_Форма2014_1_Страница1_1;Печать_Форма2014_1_Страница1_2";
	
#Область ЛистыАБВ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы А";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаА";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Б";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаБ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаВ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаВ1;Печать_Форма2014_1_СтраницаВ2";
#КонецОбласти

#Область ЛистыГ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г 1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаГ1";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ1";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаГ1";
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Листы Г 2-3";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаГ2_3";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ2_3";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаГ2;Печать_Форма2014_1_СтраницаГ3";
#КонецОбласти

#Область ЛистыДЕЖЗИ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаД";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЕ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ1;Печать_Форма2014_1_СтраницаЕ2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Ж";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЖ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЖ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ1;Печать_Форма2014_1_СтраницаЖ2;Печать_Форма2014_1_СтраницаЖ3";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы З";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЗ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЗ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЗ1;Печать_Форма2014_1_СтраницаЗ2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист И";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаИ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть1");
#КонецОбласти

#Область ЛистыКЛМН
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист К";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаК";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистК";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Л";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЛ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЛ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист М";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаМ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистМ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Н";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаН";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистН";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаН1;Печать_Форма2014_1_СтраницаН2;Печать_Форма2014_1_СтраницаН3";
#КонецОбласти
	
	Возврат ДеревоСтраниц;
КонецФункции

Функция СформироватьДеревоСтраниц(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда 
		Возврат СформироватьДеревоСтраниц_Форма2014_1();
	КонецЕсли;
КонецФункции

Функция СформироватьКонтейнерДляАвтозаполнения(ДанныеУведомления, ДанныеМногостраничныхРазделов, МногострочнаяЧасть1)
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ДанныеУведомления Цикл 
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Контейнер.Вставить("МногострочнаяЧасть1", МногострочнаяЧасть1);
	
	СтруктураДерева = Новый Соответствие;
	Для Каждого КЗ Из ДанныеМногостраничныхРазделов Цикл 
		Для Каждого Стр Из КЗ.Значение Цикл 
			СтруктураДерева[Стр.Значение.УИД] = Новый Структура("Раздел, Данные", КЗ.Ключ, ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Стр.Значение));
		КонецЦикла;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(ДанныеУведомления, ДанныеМногостраничныхРазделов);
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		Если КЗ.Значение.Данные.Свойство("УИДРодителя") Тогда 
			Родитель = СтруктураДерева[КЗ.Значение.Данные.УИДРодителя];
			Если Не Родитель.Данные.Свойство(КЗ.Значение.Раздел) Тогда 
				Родитель.Данные.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
			КонецЕсли;
			Родитель.Данные[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		ИначеЕсли Не Контейнер.Свойство(КЗ.Значение.Раздел) Тогда 
			Контейнер.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		КЗ.Значение.Данные.Удалить("УИД");
		КЗ.Значение.Данные.Удалить("УИДРодителя");
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		Если Контейнер.Свойство(КЗ.Значение.Раздел) Тогда 
			Контейнер[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

Функция СоздатьЗаполненноеУведомление(Параметры, СуществующийДокументСсылка = Неопределено) Экспорт
	ИмяФормы = Неопределено;
	Если Не Параметры.Свойство("ИмяФормы", ИмяФормы) Тогда 
		ИмяФормы = "Форма2014_1";
	КонецЕсли;
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	ИмяОтчета = "РегламентированноеУведомлениеФормаР11001";
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	РезультатКонтейнер2 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииСКонтейнеромМногострочныхБлоков(ВходящийКонтейнер, РезультатКонтейнер2);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			     Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения",          Параметры.ДополнительныеПараметры);
	
	Контейнер = СформироватьКонтейнерДляАвтозаполнения(РезультатКонтейнер1.ДанныеУведомления
														,РезультатКонтейнер1.ДанныеМногостраничныхРазделов
														,РезультатКонтейнер2.МногострочнаяЧасть1);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево);
	
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
		И СуществующийДокументСсылка.Свойство("Ссылка")
		И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда 
		
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
		И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ИмяФормы = ИмяФормы;
		НовыйДок.ИмяОтчета = ИмяОтчета;
		НовыйДок.Дата = ТекущаяДатаСеанса();
		НовыйДок.ДатаПодписи = ТекущаяДатаСеанса();
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР11001;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ДанныеУведомления, ДанныеМногостраничныхРазделов, ДеревоСтраниц, МногострочнаяЧасть1",
			РезультатКонтейнер1.ДанныеУведомления, РезультатКонтейнер1.ДанныеМногостраничныхРазделов,
			Дерево, РезультатКонтейнер2["МногострочнаяЧасть1"]);
			
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
КонецФункции

Процедура ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево)
	КУдалению = Новый Массив;
	Для Каждого КЗ Из РезультатКонтейнер1.ДанныеМногостраничныхРазделов Цикл
		КЗ.Значение.Очистить();
	КонецЦикла;
	
	Для Каждого КЗ Из Контейнер Цикл 
		Если РезультатКонтейнер1.ДанныеУведомления.Свойство(КЗ.Ключ) Тогда 
			ЗаполнитьЗначенияСвойств(РезультатКонтейнер1.ДанныеУведомления[КЗ.Ключ], КЗ.Значение);
		ИначеЕсли РезультатКонтейнер1.ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда 
			Для Каждого Стр Из КЗ.Значение Цикл 
				ВставляемыеДанные = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Стр.Значение);
				ВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				РезультатКонтейнер1.ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ВставляемыеДанные, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
	
	РезультатКонтейнер2.МногострочнаяЧасть1 = Контейнер.МногострочнаяЧасть1;
	СформироватьДеревоСтраницПоДанным(Дерево, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
КонецПроцедуры

Процедура ДобавитьДочерниеСтраницы(ВставляемыеДанные, ДанныеМногостраничныхРазделов)
	КУдалению = Новый Массив;
	
	Для Каждого КЗ Из ВставляемыеДанные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("СписокЗначений")
			И ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда
			
			Для Каждого Стр Из КЗ.Значение Цикл
				ДочерниеВставляемыеДанные = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Стр.Значение);
				ДочерниеВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				ДочерниеВставляемыеДанные.Вставить("УИДРодителя", ВставляемыеДанные.УИД);
				ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ДочерниеВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ДочерниеВставляемыеДанные, ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДеревоСтраницПоДанным(ДеревоСтраниц, ДанныеМногостраничныхРазделов)
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 001";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.ИДНаименования = "Лист001";
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.МакетыПФ = "Печать_Форма2014_1_Страница1_1;Печать_Форма2014_1_Страница1_2";
	
#Область ЛистыАБВ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы А";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистА"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаА";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистА";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Б";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистБ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаБ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистБ";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистВ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаВ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистВ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаВ1;Печать_Форма2014_1_СтраницаВ2";
	КонецЦикла;
#КонецОбласти

#Область ЛистыГ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г 1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистГ1"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаГ1";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистГ1";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаГ1";
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Г 2-3";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистГ2_3"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			НомерСтр2 = НомерСтр2 + 1;
			Стр001Нов = Стр002.Строки.Добавить();
			Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр001Нов.ИндексКартинки = 1;
			Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаГ2_3";
			Стр001Нов.Многостраничность = Истина;
			Стр001Нов.Многострочность = Ложь;
			Стр001Нов.УИД = СтрПодч.Значение.УИД;
			Стр001Нов.ИДНаименования = "ЛистГ2_3";
			Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаГ2;Печать_Форма2014_1_СтраницаГ3";
		КонецЦикла;
	КонецЦикла;
#КонецОбласти

#Область ЛистыДЕЖЗИ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистД"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаД";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистД";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЕ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЕ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЕ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ1;Печать_Форма2014_1_СтраницаЕ2";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Ж";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЖ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЖ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЖ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ1;Печать_Форма2014_1_СтраницаЖ2;Печать_Форма2014_1_СтраницаЖ3";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы З";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЗ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЗ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЗ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЗ1;Печать_Форма2014_1_СтраницаЗ2";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист И";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаИ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть1");
#КонецОбласти

#Область ЛистыКЛМН
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист К";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаК";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистК";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Л";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЛ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЛ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЛ";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист М";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаМ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистМ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Н";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистН"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаН";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистН";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаН1;Печать_Форма2014_1_СтраницаН2;Печать_Форма2014_1_СтраницаН3";
	КонецЦикла;
#КонецОбласти
КонецПроцедуры

#КонецОбласти
#КонецЕсли
