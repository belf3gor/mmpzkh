// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	НайденныйУзел = УзлыПоXPath(П.ДеревоДляЗагрузки, "//РасчАкОсвБГЭксп")[0];
	НайденныйУзел.МнУр = Истина;
	НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
	Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
		ТекущийУзел.МнУр = Истина;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Приложение22"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Раздел = "Приложение21"; // собираем два раздела в один многоуговневый раздел
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100010000102"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000010000102"; // обработаем в структуре данных документа
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Раздел1 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел1", Раздел1);
	Если Раздел1 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел1 Цикл
			
			ДанныеРаздела = СтраницаРаздела.Данные;
			
			НомСтроки = 1;
			Суффикс = "_1";
			
			Пока ДанныеРаздела.Свойство("П000010000101" + Суффикс) Цикл
				
				ЗначениеПоказателя = 0;
				Если ДанныеРаздела.Свойство("П000010000102" + Суффикс, ЗначениеПоказателя) Тогда
					ЗначениеПоказателя = 0 + ЗначениеПоказателя;
					Если ЗначениеПоказателя >= 0 Тогда
						ДанныеРаздела.Вставить("П000010000102" + Суффикс, ЗначениеПоказателя);
						ДанныеРаздела.Вставить("П000010000103" + Суффикс, 0);
					Иначе
						ДанныеРаздела.Вставить("П000010000102" + Суффикс, 0);
						ДанныеРаздела.Вставить("П000010000103" + Суффикс, -ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
				
				НомСтроки = НомСтроки + 1;
				Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	Приложение21 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Приложение21", Приложение21);
	Если Приложение21 <> Неопределено Тогда
	
		Для Каждого СтраницаПервогоУровня Из Приложение21.Строки Цикл
			КодПТ = Неопределено;
			Если СтраницаПервогоУровня.Данные.Свойство("П001020001003", КодПТ) Тогда
				
				Для Каждого СтраницаВторогоУровня Из СтраницаПервогоУровня.Строки Цикл
					ИмяПоказателяКодПТ = "П001020011003";
					
					Если СтраницаВторогоУровня.Данные.Свойство(ИмяПоказателяКодПТ) Тогда
						СтраницаВторогоУровня.Данные[ИмяПоказателяКодПТ] = КодПТ;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СтраницыПриложения3 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//БензПолучСвид"); // Приложение 3 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыПриложения3.Количество() Цикл
		
		УзлыПоставОрг = УзлыПоXPath(СтраницыПриложения3[НомСтраницы - 1], "ПоставОрг");
		УзлыПоставИП  = УзлыПоXPath(СтраницыПриложения3[НомСтраницы - 1], "ПоставИП");
		
		Если ЗначениеЗаполнено(УзлыПоставОрг) И ЗначениеЗаполнено(УзлыПоставИП) Тогда
			УзлыИННФЛ = УзлыПоXPath(УзлыПоставИП[0], "@ИННФЛ");
			Если ЗначениеЗаполнено(УзлыИННФЛ) И ЗначениеЗаполнено(УзлыИННФЛ[0].Значение) Тогда
				УзлыИННЮЛ = УзлыПоXPath(УзлыПоставОрг[0], "@ИННЮЛ");
				УзлыИННЮЛ[0].Значение = УзлыИННФЛ[0].Значение;
				УзлыИННЮЛ[0].МаксРазмерность = 12;
				ФИО = "";
				УзлыФИО = УзлыПоXPath(УзлыПоставИП[0], "ФИО/@*");
				Для Каждого УзелФИО Из УзлыФИО Цикл
					ФИО = ФИО + ?(ПустаяСтрока(ФИО), "", " ") + УзелФИО.Значение;
				КонецЦикла;
				УзлыНаимОрг = УзлыПоXPath(УзлыПоставОрг[0], "@НаимОрг");
				УзлыНаимОрг[0].Значение = ФИО;
			КонецЕсли;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыПоставОрг[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
		КонецЕсли;
		
	КонецЦикла;
	
	СтраницыПриложения4 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//БензРеалСвид"); // Приложение 4 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыПриложения4.Количество() Цикл
		
		УзлыПолучОрг = УзлыПоXPath(СтраницыПриложения4[НомСтраницы - 1], "ПолучОрг");
		УзлыПолучИП  = УзлыПоXPath(СтраницыПриложения4[НомСтраницы - 1], "ПолучИП");
		
		Если ЗначениеЗаполнено(УзлыПолучОрг) И ЗначениеЗаполнено(УзлыПолучИП) Тогда
			УзлыИННФЛ = УзлыПоXPath(УзлыПолучИП[0], "@ИННФЛ");
			Если ЗначениеЗаполнено(УзлыИННФЛ) И ЗначениеЗаполнено(УзлыИННФЛ[0].Значение) Тогда
				УзлыИННЮЛ = УзлыПоXPath(УзлыПолучОрг[0], "@ИННЮЛ");
				УзлыИННЮЛ[0].Значение = УзлыИННФЛ[0].Значение;
				УзлыИННЮЛ[0].МаксРазмерность = 12;
				ФИО = "";
				УзлыФИО = УзлыПоXPath(УзлыПолучИП[0], "ФИО/@*");
				Для Каждого УзелФИО Из УзлыФИО Цикл
					ФИО = ФИО + ?(ПустаяСтрока(ФИО), "", " ") + УзелФИО.Значение;
				КонецЦикла;
				УзлыНаимОрг = УзлыПоXPath(УзлыПолучОрг[0], "@НаимОрг");
				УзлыНаимОрг[0].Значение = ФИО;
			КонецЕсли;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыПолучОрг[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
		КонецЕсли;
		
	КонецЦикла;
	
#КонецОбласти