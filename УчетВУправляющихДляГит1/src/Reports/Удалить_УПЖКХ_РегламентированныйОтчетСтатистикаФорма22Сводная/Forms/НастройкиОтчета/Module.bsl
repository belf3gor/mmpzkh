////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура заполняет неизменяемые значения в табличных частях настройки соответствия услуг.
Процедура ЗаполнитьНастройкиСоответствияУслуг()
	
	СтруктураПараметров = УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекЗагрузить("СтатистикаФорма22Сводная_НастройкиОтчета");
	
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		мВидыУслуг = Новый ТаблицаЗначений;
		мВидыУслугЖилищные = Новый ТаблицаЗначений;
		СтруктураПараметров.Свойство("ТаблицаСоответствияУслуг",         мВидыУслуг);
		СтруктураПараметров.Свойство("ТаблицаСоответствияУслугЖилищные", мВидыУслугЖилищные);
		СтруктураПараметров.Свойство("СоциальнаяНормаНаЧеловека",        СоциальнаяНормаНаЧеловека);
	Иначе
		мВидыУслуг = Новый СписокЗначений;
		мВидыУслуг.Добавить("ХолоднаяВода",   "Холодная вода");
		мВидыУслуг.Добавить("ГорячаяВода",    "Горячая вода");
		мВидыУслуг.Добавить("Водоотведение",  "Сточные воды (водоотведение)");
		мВидыУслуг.Добавить("Отопление",      "Отопление");
		мВидыУслуг.Добавить("Электроэнергия", "Электроэнергия");
		мВидыУслуг.Добавить("СетевойГаз",     "Сетевой газ");
		мВидыУслуг.Добавить("СжиженныйГаз",   "Сжиженный газ");
		мВидыУслуг.Добавить("ЗахоронениеТБО", "Захоронение твердых бытовых отходов");
		мВидыУслуг.Добавить("ПрочиеУслуги",   "Прочие услуги");
		
		мВидыУслугЖилищные = Новый СписокЗначений;
		мВидыУслугЖилищные.Добавить("Наем",              "Наем");
		мВидыУслугЖилищные.Добавить("СодержаниеИРемонт", "Содержание и ремонт");
		мВидыУслугЖилищные.Добавить("ВывозТО",           "Вывоз твердых отходов");
		мВидыУслугЖилищные.Добавить("КапитальныйРемонт", "Капитальный ремонт");
	КонецЕсли;
		
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.КВП_Услуги"));
	
	ТаблицаСоответствияУслуг.Очистить();
	Для Каждого ВидУслуги ИЗ мВидыУслуг Цикл
		НоваяСтрока = ТаблицаСоответствияУслуг.Добавить();
		Попытка
			НоваяСтрока.ВидУслуги              = ВидУслуги.Значение;
			НоваяСтрока.ВидУслугиПредставление = ВидУслуги.Представление;
		Исключение
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВидУслуги);
		КонецПопытки;
		НоваяСтрока.СписокУслуг.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
	КонецЦикла;
	
	ТаблицаСоответствияУслугЖилищные.Очистить();
	Для Каждого ВидУслуги ИЗ мВидыУслугЖилищные Цикл
		НоваяСтрока = ТаблицаСоответствияУслугЖилищные.Добавить();
		Попытка
			НоваяСтрока.ВидУслуги              = ВидУслуги.Значение;
			НоваяСтрока.ВидУслугиПредставление = ВидУслуги.Представление;
		Исключение
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВидУслуги);
		КонецПопытки;
		НоваяСтрока.СписокУслуг.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройкиСоответствияУслуг()

&НаСервере
// Процедура сохраняет настройки отчета в хранилище.
Процедура СохранитьНастройки()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТаблицаСоответствияУслуг",         ТаблицаСоответствияУслуг.Выгрузить());
	СтруктураПараметров.Вставить("ТаблицаСоответствияУслугЖилищные", ТаблицаСоответствияУслугЖилищные.Выгрузить());
	СтруктураПараметров.Вставить("СоциальнаяНормаНаЧеловека",        СоциальнаяНормаНаЧеловека);
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить("СтатистикаФорма22Сводная_НастройкиОтчета",,
																	СтруктураПараметров);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНастройкиСоответствияУслуг();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередЗакрытием" формы.
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность
	   И НЕ НеВыводитьВопросПередЗакрытием Тогда
		Отказ = Истина;
		ПоказатьВопрос(	Новый ОписаниеОповещения("ОбработатьРезультатВопросаПередЗакрытием", ЭтаФорма),
						"Настройки были изменены. Сохранить изменения?",
						РежимДиалогаВопрос.ДаНетОтмена);
	ИначеЕсли НЕ Модифицированность Тогда
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
// Обработчик результата вопроса, вызванного в процедуре "ПередЗакрытием()".
Процедура ОбработатьРезультатВопросаПередЗакрытием(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СохранитьНастройки();
		НеВыводитьВопросПередЗакрытием = Истина;
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		НеВыводитьВопросПередЗакрытием = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры // ОбработатьРезультатВопросаПередЗакрытием()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
// Обработчик команды "Сохранить".
Процедура Сохранить(Команда)
	
	СохранитьНастройки();
	
	Модифицированность = Ложь;
	
КонецПроцедуры
