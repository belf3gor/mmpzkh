// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ИмущАв/СумНалПУ");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		
		НайденныйУзел.МнУр = Истина;
		НайденныйУзел.Многострочность = Истина;
		
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			ТекущийУзел.МнУр = Истина;
			
			Если ТекущийУзел.Код = "РасОбДеятРФ"
			 ИЛИ ТекущийУзел.Код = "ОбъектОблНал"
			 ИЛИ ТекущийУзел.Код = "РасОБНедИО" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
			
			Если МножественныйУзел(ТекущийУзел) Тогда
				ТекущийУзел.Многостраничность = Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//РасчАванПл");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыПодчиненные = УзлыПоXPath(НайденныйУзел, "@*"); // подчиненные атрибуты
		Для Каждого ТекущийУзел Из НайденныеУзлыПодчиненные Цикл
			// Обработаем в структуре данных документа.
			Если ТекущийУзел.Код = "КодНалЛьг" Тогда
				ТекущийУзел.Ключ = "П000020013003_КодЛьготы";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодНалЛьг_Осн";
				ДопУзел.Ключ = "П000020013003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "КодЛгПНС" Тогда
				ТекущийУзел.Ключ = "П000020016003_КодЛьготы";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодЛгПНС_Осн";
				ДопУзел.Ключ = "П000020016003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "КодЛгУмен" Тогда
				ТекущийУзел.Ключ = "П000020019003_КодЛьготы";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодЛгУмен_Осн";
				ДопУзел.Ключ = "П000020019003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "ДолСт" Тогда
				ТекущийУзел.Ключ = "П000020015003_Числ";
				ТекущийУзел.МинРазмерность = 0;
				ТекущийУзел.МаксРазмерность = 10;
				ТекущийУзел.Формат = "N";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "ДолСт_Знам";
				ДопУзел.Ключ = "П000020015003_Знам";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "Кжд" Тогда
				ТекущийУзел.Ключ = "П000020017503";
				ТекущийУзел.МинРазмерность = 0;
				ТекущийУзел.МаксРазмерность = 3;
				ТекущийУзел.Формат = "T";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//РасОБНедИО/РасОб");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыПодчиненные = УзлыПоXPath(НайденныйУзел, "@*"); // подчиненные атрибуты
		Для Каждого ТекущийУзел Из НайденныеУзлыПодчиненные Цикл
			// Обработаем в структуре данных документа.
			Если ТекущийУзел.Код = "КодНалЛьг" Тогда
				ТекущийУзел.Ключ = "П000030004003_КодЛьготы";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодНалЛьг_Осн";
				ДопУзел.Ключ = "П000030004003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "КодЛгПНС" Тогда
				ТекущийУзел.Ключ = "П000030006003_КодЛьготы";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодЛгПНС_Осн";
				ДопУзел.Ключ = "П000030006003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "КодЛгУмен" Тогда
				ТекущийУзел.Ключ = "П000030010003_КодЛьготы";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодЛгУмен_Осн";
				ДопУзел.Ключ = "П000030010003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "КоэфК" Тогда
				ТекущийУзел.Ключ = "П000030008003_Числ";
				ТекущийУзел.МинРазмерность = 0;
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КоэфК_Знам";
				ДопУзел.Ключ = "П000030008003_Знам";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "ДолСт" Тогда
				ТекущийУзел.Ключ = "П000030005003_Числ";
				ТекущийУзел.МинРазмерность = 0;
				ТекущийУзел.МаксРазмерность = 10;
				ТекущийУзел.Формат = "N";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "ДолСт_Знам";
				ДопУзел.Ключ = "П000030005003_Знам";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "ДоляПравСоб" Тогда
				ТекущийУзел.Ключ = "П000030003003_Числ";
				ТекущийУзел.МинРазмерность = 0;
				ТекущийУзел.МаксРазмерность = 10;
				ТекущийУзел.Формат = "N";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "ДоляПравСоб_Знам";
				ДопУзел.Ключ = "П000030003003_Знам";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Код = "Доля_6.378.2" Тогда
				ТекущийУзел.Ключ = "П000030003503_Числ";
				ТекущийУзел.МинРазмерность = 0;
				ТекущийУзел.МаксРазмерность = 10;
				ТекущийУзел.Формат = "N";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "Доля_6.378.2_Знам";
				ДопУзел.Ключ = "П000030003503_Знам";
				ДопУзел.Обязательность = "О";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
	КонецЕсли;
	
	УзлыРаздел2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ИмущАв/СумНалПУ/РасОбДеятРФ/РасОб"); // многоуровневый раздел 2
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел2.Количество() Цикл
		
		УзелРаздел2 = УзлыРаздел2[НомСтраницыУровень1 - 1];
		
		ДопУзлы = УзлыПоXPath(УзелРаздел2, "../../@*");
		Для Каждого ДопУзел Из ДопУзлы Цикл
			Если ДопУзел.Код = "ОКТМО" Тогда
				УзелОКТМО = УзелРаздел2.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелОКТМО, ДопУзел, ,"Родитель, Строки");
				УзелОКТМО.Раздел = "Раздел2";
				УзелОКТМО.Ключ = "П000020001001";
			ИначеЕсли ДопУзел.Код = "КБК" Тогда
				УзелКБК = УзелРаздел2.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелКБК, ДопУзел, ,"Родитель, Строки");
				УзелКБК.Раздел = "Раздел2";
				УзелКБК.Ключ = "П000020001100";
			КонецЕсли;
		КонецЦикла;
		
		УзлыКодНалЛьг = УзлыПоXPath(УзелРаздел2, "РасчАванПл/@КодНалЛьг");
		Если ЗначениеЗаполнено(УзлыКодНалЛьг) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодНалЛьг[0].Значение, "/");
			УзлыКодНалЛьг[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "РасчАванПл/@КодНалЛьг_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодЛгПНС = УзлыПоXPath(УзелРаздел2, "РасчАванПл/@КодЛгПНС");
		Если ЗначениеЗаполнено(УзлыКодЛгПНС) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодЛгПНС[0].Значение, "/");
			УзлыКодЛгПНС[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "РасчАванПл/@КодЛгПНС_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодЛгУмен = УзлыПоXPath(УзелРаздел2, "РасчАванПл/@КодЛгУмен");
		Если ЗначениеЗаполнено(УзлыКодЛгУмен) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодЛгУмен[0].Значение, "/");
			УзлыКодЛгУмен[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "РасчАванПл/@КодЛгУмен_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыДолСт = УзлыПоXPath(УзелРаздел2, "РасчАванПл/@ДолСт");
		Если ЗначениеЗаполнено(УзлыДолСт) Тогда
			ЧастиЗначения = СтрРазделить(УзлыДолСт[0].Значение, "/");
			УзлыДолСт[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "РасчАванПл/@ДолСт_Знам")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		НомСтраницы = Новый Массив(1);
		НомСтраницы[0] = НомСтраницыУровень1;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		
	КонецЦикла;
	
	УзлыРаздел21 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ИмущАв/СумНалПУ/ОбъектОблНал/ИнфОбъект"); // многоуровневый раздел 2.1
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел21.Количество() Цикл
		
		УзелРаздел21 = УзлыРаздел21[НомСтраницыУровень1 - 1];
		
		ДопУзлы = УзлыПоXPath(УзелРаздел21, "../../@*");
		Для Каждого ДопУзел Из ДопУзлы Цикл
			Если ДопУзел.Код = "ОКТМО" Тогда
				УзелОКТМО = УзелРаздел21.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелОКТМО, ДопУзел, ,"Родитель, Строки");
				УзелОКТМО.Раздел = "Раздел21";
				УзелОКТМО.Ключ = "П000210001000";
			ИначеЕсли ДопУзел.Код = "КБК" Тогда
				УзелКБК = УзелРаздел21.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелКБК, ДопУзел, ,"Родитель, Строки");
				УзелКБК.Раздел = "Раздел21";
				УзелКБК.Ключ = "П000210001100";
			КонецЕсли;
		КонецЦикла;
		
		НомСтраницы = Новый Массив(1);
		НомСтраницы[0] = НомСтраницыУровень1;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел21, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		
	КонецЦикла;
	
	УзлыРаздел3 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ИмущАв/СумНалПУ/РасОБНедИО/РасОб"); // многоуровневый раздел 3
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел3.Количество() Цикл
		
		УзелРаздел3 = УзлыРаздел3[НомСтраницыУровень1 - 1];
		
		ДопУзлы = УзлыПоXPath(УзелРаздел3, "../../@*");
		Для Каждого ДопУзел Из ДопУзлы Цикл
			Если ДопУзел.Код = "ОКТМО" Тогда
				УзелОКТМО = УзелРаздел3.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелОКТМО, ДопУзел, ,"Родитель, Строки");
				УзелОКТМО.Раздел = "Раздел3";
				УзелОКТМО.Ключ = "П000030001001";
			ИначеЕсли ДопУзел.Код = "КБК" Тогда
				УзелКБК = УзелРаздел3.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелКБК, ДопУзел, ,"Родитель, Строки");
				УзелКБК.Раздел = "Раздел3";
				УзелКБК.Ключ = "П000030001100";
			КонецЕсли;
		КонецЦикла;
		
		УзлыКодНалЛьг = УзлыПоXPath(УзелРаздел3, "@КодНалЛьг");
		Если ЗначениеЗаполнено(УзлыКодНалЛьг) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодНалЛьг[0].Значение, "/");
			УзлыКодНалЛьг[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел3, "@КодНалЛьг_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодЛгПНС = УзлыПоXPath(УзелРаздел3, "@КодЛгПНС");
		Если ЗначениеЗаполнено(УзлыКодЛгПНС) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодЛгПНС[0].Значение, "/");
			УзлыКодЛгПНС[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел3, "@КодЛгПНС_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодЛгУмен = УзлыПоXPath(УзелРаздел3, "@КодЛгУмен");
		Если ЗначениеЗаполнено(УзлыКодЛгУмен) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодЛгУмен[0].Значение, "/");
			УзлыКодЛгУмен[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел3, "@КодЛгУмен_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКоэфК = УзлыПоXPath(УзелРаздел3, "@КоэфК");
		Если ЗначениеЗаполнено(УзлыКоэфК) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКоэфК[0].Значение, "/");
			УзлыКоэфК[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел3, "@КоэфК_Знам")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыДолСт = УзлыПоXPath(УзелРаздел3, "@ДолСт");
		Если ЗначениеЗаполнено(УзлыДолСт) Тогда
			ЧастиЗначения = СтрРазделить(УзлыДолСт[0].Значение, "/");
			УзлыДолСт[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел3, "@ДолСт_Знам")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыДоляПравСоб = УзлыПоXPath(УзелРаздел3, "@ДоляПравСоб");
		Если ЗначениеЗаполнено(УзлыДоляПравСоб) Тогда
			ЧастиЗначения = СтрРазделить(УзлыДоляПравСоб[0].Значение, "/");
			УзлыДоляПравСоб[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел3, "@ДоляПравСоб_Знам")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыДоля_63782 = УзлыПоXPath(УзелРаздел3, "@Доля_6.378.2");
		Если ЗначениеЗаполнено(УзлыДоля_63782) Тогда
			ЧастиЗначения = СтрРазделить(УзлыДоля_63782[0].Значение, "/");
			УзлыДоля_63782[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел3, "@Доля_6.378.2_Знам")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		НомСтраницы = Новый Массив(1);
		НомСтраницы[0] = НомСтраницыУровень1;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел3, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		
	КонецЦикла;
	
#КонецОбласти