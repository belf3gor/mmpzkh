#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьПоставляемыеДанные();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры,
		"Организация,ПрименяетсяУСНДоходы,ПрименяетсяУСНДоходыРасходы,"
		+ "КодРегиона,КодОКВЭД,ВидДеятельностиПредставление,ВидОрганизации,"
		+ "ПоказыватьПрименить,Режим");
	ЗаполнитьРеквизитыПоОрганизации();
	
	Если ЗначениеЗаполнено(КодРегиона) 
		И ЗначениеЗаполнено(КодОКВЭД) Тогда
		СформироватьОтчетНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(
			Элементы.ДокументРезультат, "ФормированиеОтчета");
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			ДлительнаяОперация,
			Новый ОписаниеОповещения("ПриЗавершенииЗадания", ЭтотОбъект),
			ПараметрыОжидания);
	Иначе
		ОбработатьОшибкиФормированияОтчета();
	КонецЕсли;
	
	ТекущийЭлемент = ?(ЗначениеЗаполнено(ИдентификаторЗадания) 
		ИЛИ ДокументРезультат.ВысотаТаблицы > 0,
		Элементы.ДокументРезультат,
		Элементы.КодРегиона);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КодРегионаРегистрацииПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ДокументРезультат, "НеАктуальность");
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДеятельностиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийКод", КодОКВЭД);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборВидаДеятельностиОКВЭД2Завершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборВидаДеятельности", ПараметрыФормы, , , , , ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатУСНОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Действие = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Расшифровка, "Действие", "");
	
	Если Действие = "ПерейтиПоСсылке" Тогда
		
		СсылкаДляПерехода = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Расшифровка, "Ссылка", "");
		Если СтрНачинаетсяС(СсылкаДляПерехода, "http") Тогда
			ПерейтиПоНавигационнойСсылке(СсылкаДляПерехода);
		КонецЕсли;
	
	ИначеЕсли Действие = "ПрименитьСтавку" Тогда
		
		Если Режим = "НалогиИОтчеты" Тогда
			
			ФормаНалогиИОтчеты = ВладелецФормы;
			Если ТипЗнч(ФормаНалогиИОтчеты) = Тип("УправляемаяФорма") 
				И ФормаНалогиИОтчеты.Открыта() 
				И ФормаНалогиИОтчеты.Параметры.Организация = Организация Тогда
				ФормаНалогиИОтчеты.Открыть();
			Иначе
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Организация", Организация);
				ПараметрыФормы.Вставить("КонтекстныйВызов", Ложь);
				ОткрытьФорму("ОбщаяФорма.НалогиИОтчеты", ПараметрыФормы);
			КонецЕсли;
			
			Оповестить("ИзменениеСтавокУСННалогиИОтчеты", Расшифровка, ЭтотОбъект);
			
		ИначеЕсли Режим = "СравнениеРежимовНалогообложения" Тогда
			
			ФормаСтавкиНалогов = ВладелецФормы;
			Если ТипЗнч(ФормаСтавкиНалогов) <> Тип("УправляемаяФорма")
				ИЛИ ФормаСтавкиНалогов.ИмяФормы <> "Обработка.СравнениеРежимовНалогообложения.Форма.ФормаСтавкиНалогов"
				ИЛИ НЕ ФормаСтавкиНалогов.Открыта() Тогда
				Возврат;
			КонецЕсли;
			// ФормаСтавкиНалогов - блокирующая, открываем ее владельца
			ФормаСравнениеРежимов = ФормаСтавкиНалогов.ВладелецФормы;
			Если ТипЗнч(ФормаСравнениеРежимов) <> Тип("УправляемаяФорма")
				ИЛИ НЕ ФормаСравнениеРежимов.Открыта() Тогда
				Возврат;
			КонецЕсли; 
			ФормаСравнениеРежимов.Открыть();
			
			Оповестить("ИзменениеСтавокУСНСравнениеРежимовНалогообложения", Расшифровка, ЭтотОбъект);
			
		КонецЕсли;
		
		Закрыть();
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(
		Элементы.ДокументРезультат, "ФормированиеОтчета");
	
	Результат = СформироватьОтчетНаСервере();
		
	Если Результат Тогда
		ОбработатьОшибкиФормированияОтчета();
		Если НЕ ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(
				Элементы.ДокументРезультат, "НеИспользовать");
		КонецЕсли;
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			ДлительнаяОперация,
			Новый ОписаниеОповещения("ПриЗавершенииЗадания", ЭтотОбъект),
			ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыПоОрганизации()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, 
		"ЮридическоеФизическоеЛицо,КодОКВЭД2,НаименованиеОКВЭД2,РегистрацияВНалоговомОргане.КодРегиона");
	
	ВидОрганизации = РеквизитыОрганизации.ЮридическоеФизическоеЛицо;
	Если ЗначениеЗаполнено(РеквизитыОрганизации.РегистрацияВНалоговомОрганеКодРегиона) Тогда
		КодРегиона = Формат(РеквизитыОрганизации.РегистрацияВНалоговомОрганеКодРегиона, "ЧЦ=2; ЧВН=");
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыОрганизации.КодОКВЭД2) Тогда
		КодОКВЭД = РеквизитыОрганизации.КодОКВЭД2;
		ВидДеятельностиПредставление = РеквизитыОрганизации.НаименованиеОКВЭД2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВидаДеятельностиОКВЭД2Завершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КодОКВЭД = РезультатВыбора.Код;
	ВидДеятельностиПредставление = РезультатВыбора.Наименование;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ДокументРезультат, "НеАктуальность");
	
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетНаСервере()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	КонецЕсли;
	
	ИдентификаторЗадания = Неопределено;
	ОписаниеОшибки = "";
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПараметрыОтчета = ПараметрыФормированияОтчета();
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru='Формирование отчета: УСН в вашем регионе'");
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("Отчеты.УСНВВашемРегионе.СформироватьОтчет",
		ПараметрыОтчета, ПараметрыВыполнения);
	
	АдресХранилища = ДлительнаяОперация.АдресРезультата;
	
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
		Возврат Ложь;
	Иначе
		ИдентификаторЗадания = Неопределено;
		Если ДлительнаяОперация.Статус = "Выполнено" Тогда
			ЗагрузитьПодготовленныеДанные();
			Возврат Истина;
		ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
			ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
		Иначе
			ВызватьИсключение НСтр("ru = 'Формирование отчета отменено.'");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПараметрыФормированияОтчета()

	Результат = Новый Структура;
	Результат.Вставить("КодРегиона", КодРегиона);
	ЭлементСписка = Элементы.КодРегиона.СписокВыбора.НайтиПоЗначению(КодРегиона);
	Результат.Вставить("РегионПредставление", ?(ЭлементСписка <> Неопределено, ЭлементСписка.Представление, ""));
	Результат.Вставить("КодОКВЭД", КодОКВЭД);
	Результат.Вставить("ВидДеятельностиПредставление", ВидДеятельностиПредставление);
	Результат.Вставить("ЭтоЮрЛицо", ВидОрганизации = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	Результат.Вставить("ПрименяетсяУСНДоходы", ПрименяетсяУСНДоходы);
	Результат.Вставить("ПрименяетсяУСНДоходыРасходы", ПрименяетсяУСНДоходыРасходы);
	Результат.Вставить("ПоказыватьПрименить", ПоказыватьПрименить);
	Результат.Вставить("Организация", Организация);
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()
	
	ДанныеОтчета = ПолучитьИзВременногоХранилища(АдресХранилища);
	УдалитьИзВременногоХранилища(АдресХранилища);
	
	Если ДанныеОтчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = ДанныеОтчета.ОписаниеОшибки;
	Если НЕ ПустаяСтрока(ОписаниеОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументРезультат.Очистить();
	ДокументРезультат.Вывести(ДанныеОтчета.ДокументРезультат);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПриЗавершенииЗадания(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторЗадания = Неопределено;
	ЗагрузитьПодготовленныеДанные();
	ОбработатьОшибкиФормированияОтчета();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ДокументРезультат, "НеИспользовать");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОшибкиФормированияОтчета()

	Если ПустаяСтрока(ОписаниеОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьПредупреждение(, ОписаниеОшибки);
	ОписаниеОшибки = "";

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПоставляемыеДанные()
	
	КлассификаторСубъектовРФ = АдресныйКлассификатор.СубъектыРФ();
	ШаблонПредставления = НСтр("ru='%1 %2'"); // например: "Москва г".
	Для Каждого Регион Из КлассификаторСубъектовРФ Цикл
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
			Регион.Наименование,
			Регион.Сокращение);
		КодРегиона = Формат(Регион.КодСубъектаРФ, "ЧЦ=2; ЧВН=");
		Элементы.КодРегиона.СписокВыбора.Добавить(КодРегиона, Представление);
	КонецЦикла;
	
	Элементы.КодРегиона.СписокВыбора.СортироватьПоПредставлению();

КонецПроцедуры

#КонецОбласти
