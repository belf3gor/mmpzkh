#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ПрограммныйИнтерфейс

// Возвращает параметры исполнения отчета.
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Возврат Новый Структура("ИспользоватьПередКомпоновкойМакета,
							|ИспользоватьПослеКомпоновкиМакета,
							|ИспользоватьПослеВыводаРезультата,
							|ИспользоватьДанныеРасшифровки",
							Истина, Ложь, Истина, Истина);
	
КонецФункции

// Возвращает текст заголовка.
//
// Параметры:
//  ПараметрыОтчета    - Структура - содержит передаваемые параметры.
//  ОрганизацияВНачале - Булево    - признак, указывающий на то, что организация указывается в начале.
// 
// Возвращаемое значение:
//  Строка - Текст заголовка.
//
Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт 
	
	Возврат ПараметрыОтчета.Заголовок;
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет,
// изменения сохранены не будут.
//
// Параметры:
//  ПараметрыОтчета     - Структура - содержит передаваемые параметры.
//  Схема               - Схема     - схема данных.
//  КомпоновщикНастроек - Структура - структура компоновщика настроек.
//
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", ПараметрыОтчета.НачалоПериода);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.Организация) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроек, "Организация", ПараметрыОтчета.Организация,,, Истина);
	КонецЕсли;
	
	Таблица = Неопределено;
	Для Каждого ЭлементСтруктуры Из КомпоновщикНастроек.Настройки.Структура Цикл
		Если ЭлементСтруктуры.Имя = "Таблица" Тогда
			Таблица = ЭлементСтруктуры;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Таблица <> Неопределено Тогда
		// Группировка
		Таблица.Строки.Очистить();
		Группировка = Таблица.Строки;
		Для Каждого ПолеВыбраннойГруппировки Из ПараметрыОтчета.Группировка Цикл 
			Если ПолеВыбраннойГруппировки.Использование Тогда
				Если ТипЗнч(Группировка) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
					Группировка = Группировка.Добавить();
				Иначе
					Группировка = Группировка.Структура.Добавить();
				КонецЕсли;
				УПЖКХ_ТиповыеМетодыВызовСервера.ЗаполнитьГруппировку(ПолеВыбраннойГруппировки, Группировка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Возникает после вывода результата.
//
// Параметры:
//  ПараметрыОтчета - Структура         - содержит передаваемые параметры.
//  Результат       - ТабличныйДокумент - содержит таблицу результатов.
//
Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
КонецПроцедуры

// Функция возвращает соответствие основных вариантов схемам СКД.
Функция ПолучитьПараметрыВариантовОтчета() Экспорт
	
	Параметры = Новый Соответствие;
	
	Параметры.Вставить("НовыйМеханизм_ОсновнойВариант",  Новый Структура("Наименование, НовыйМеханизм", "Новый механизм - Основной вариант",  Истина));
	Параметры.Вставить("СтарыйМеханизм_ОсновнойВариант", Новый Структура("Наименование, НовыйМеханизм", "Старый механизм - Основной вариант", Ложь));
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#КонецЕсли