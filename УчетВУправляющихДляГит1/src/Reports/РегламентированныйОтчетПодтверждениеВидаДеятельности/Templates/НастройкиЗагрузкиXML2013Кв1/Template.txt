// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//  * Параметр "ИмяФайлаНастроек" содержит путь к файлу настроек для быстрого описания
//    правил загрузки без сохранения конфигурации. После отладки правил загрузки нужно
//    обязательно перенести содержимое файла в макет и удалить параметр или присвоить ему
//    значение "null". В целях безопасности нельзя выпускать конфигурации с заполненным
//    параметром "ИмяФайлаНастроек".
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	УзлыМнЧ = УзлыПоXPath(П.ДеревоДляЗагрузки, "//incomeDistribution"); // многострочная часть (Приложение 2)
	Для Каждого УзелМнЧ Из УзлыМнЧ Цикл
		Для Каждого СтрокаМнч Из УзелМнЧ.Строки Цикл
			СтрокаМнч.Раздел = "Приложение2";
		КонецЦикла;
	КонецЦикла;
	
	УзлыСхемы = УзлыПоXPath(П.ДеревоДляЗагрузки, "/*"); // элементы первого уровня
	
	УзелHEAD = П.ДеревоДляЗагрузки.Строки.Вставить(0);
	УзелHEAD.Тип = "С";
	УзелHEAD.Код = "s:Header";
	УзелHEAD.Обязательность = "ОП";
	
	УзелBODY = П.ДеревоДляЗагрузки.Строки.Вставить(1);
	УзелBODY.Тип = "С";
	УзелBODY.Код = "s:Body";
	УзелBODY.Многостраничность = Ложь;
	УзелBODY.Многострочность = Ложь;
	УзелBODY.Обязательность = "О";
	
	УзелOkCR = УзелBODY.Строки.Добавить();
	УзелOkCR.Тип = "С";
	УзелOkCR.Код = "OKVEDConfirmationRequest";
	УзелOkCR.Многостраничность = Ложь;
	УзелOkCR.Многострочность = Ложь;
	УзелOkCR.Обязательность = "О";
	
	Для Каждого УзелСхемы Из УзлыСхемы Цикл
		НовУзел = СкопированныйУзел(УзелOkCR, УзелСхемы);
		П.ДеревоДляЗагрузки.Строки.Удалить(УзелСхемы);
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Приложение1 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаПриложение1", Приложение1);
	Если Приложение1 <> Неопределено Тогда
		
		ЗначениеПараметра = Неопределено;
		
		Если П.ПараметрыОтчета.Свойство("ПризнакГМУ", ЗначениеПараметра) Тогда
			Приложение1.ГосУчреждение = ?(НРег(ЗначениеПараметра) = "true", "Х", "");
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("ПризнакНКО", ЗначениеПараметра) Тогда
			Приложение1.НекоммерческаяОрганизация = ?(НРег(ЗначениеПараметра) = "true", "Х", "");
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("ГодПодтверждения", ЗначениеПараметра) Тогда
			Приложение1.ГодПодтверждения = СокрЛП(ЗначениеПараметра);
		КонецЕсли;
	
		Если П.ПараметрыОтчета.Свойство("КодПоОКВЭД2", ЗначениеПараметра) Тогда
			Приложение1.ОКВЭД = СокрЛП(ЗначениеПараметра);
		КонецЕсли;
		
		Если П.ПараметрыОтчета.Свойство("ТекстПояснЗап", ЗначениеПараметра) И Приложение1.Свойство("ТекстПояснительнойЗаписки") Тогда
			Приложение1.ТекстПояснительнойЗаписки = СокрЛП(ЗначениеПараметра);
		КонецЕсли;
		
		Если Приложение1.Свойство("ПечататьСтроку2") Тогда
			Приложение1.ПечататьСтроку2 = "V";
		КонецЕсли;
		
	КонецЕсли;
	
	Приложение2 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаПриложение2", Приложение2);
	Если Приложение2 <> Неопределено Тогда
		
		ЗначениеПараметра = Неопределено;
		
		ДатаМестоНомерРегистрации = "";
		
		Если П.ПараметрыОтчета.Свойство("ДатаРег", ЗначениеПараметра) Тогда
			Приложение2.Вставить("ДатаРегистрации", ДатаИзСтрокиЛюбогоФормата(ЗначениеПараметра));
			ДатаМестоНомерРегистрации = Формат(Приложение2.ДатаРегистрации, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("МестоРег", ЗначениеПараметра) Тогда
			Приложение2.Вставить("МестоРегистрации", СокрЛП(ЗначениеПараметра));
			ДатаМестоНомерРегистрации = СокрЛП(ДатаМестоНомерРегистрации + " " + Приложение2.МестоРегистрации);
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("ОГРН", ЗначениеПараметра) Тогда
			Приложение2.Вставить("ОГРН", СокрЛП(ЗначениеПараметра));
			ДатаМестоНомерРегистрации = ?(ЗначениеЗаполнено(ДатаМестоНомерРегистрации),
			ДатаМестоНомерРегистрации + ", ОГРН " + Приложение2.ОГРН, "ОГРН " + Приложение2.ОГРН);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаМестоНомерРегистрации) Тогда
			Приложение2.Вставить("ДатаМестоНомерРегистрации", СокрЛП(ДатаМестоНомерРегистрации));
		КонецЕсли;
		
		Если П.ПараметрыОтчета.Свойство("ДатаНачХозДеят", ЗначениеПараметра) Тогда
			Если Приложение2.Свойство("ДатаНачалаХозДеятельности") И ТипЗнЧ(Приложение2.ДатаНачалаХозДеятельности) = Тип("Дата") Тогда
				Приложение2.ДатаНачалаХозДеятельности = ДатаИзСтрокиЛюбогоФормата(ЗначениеПараметра);
			Иначе
				Приложение2.Вставить("ДатаНачалаХозДеятельности", Формат(ДатаИзСтрокиЛюбогоФормата(ЗначениеПараметра), "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		
		Если П.ПараметрыОтчета.Свойство("СреднЧислПредГод", ЗначениеПараметра) Тогда
			Если Приложение2.Свойство("СреднесписочнаяЧисленность") И ТипЗнЧ(Приложение2.СреднесписочнаяЧисленность) = Тип("Число") Тогда
				Приложение2.СреднесписочнаяЧисленность = ЗначениеПараметра;
			Иначе
				Приложение2.Вставить("СреднесписочнаяЧисленность", Формат(ЗначениеПараметра, "ЧГ="));
			КонецЕсли;
		КонецЕсли;
		
		Если П.ПараметрыОтчета.Свойство("КодПоОКВЭД2", ЗначениеПараметра) Тогда
			Приложение2.ОКВЭД = СокрЛП(ЗначениеПараметра);
		КонецЕсли;
		
	КонецЕсли;
	
	Приложение3 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаПриложение3", Приложение3);
	Если Приложение3 <> Неопределено Тогда
		
		ЗначениеПараметра = Неопределено;
		
		Если П.ПараметрыОтчета.Свойство("КодПоОКВЭД2", ЗначениеПараметра) Тогда
			Приложение3.ОКВЭД = СокрЛП(ЗначениеПараметра);
		КонецЕсли;
		
	КонецЕсли;
	
	// РАСЧЕТ ПРИЛОЖЕНИЯ 2.
	
	Если Приложение2 <> Неопределено Тогда
	
		ДанныеРаздела = Приложение2;
		
		СуммаПоГрафе3 = 0;
		СуммаПоГрафе4 = 0;
		СуммаПоГрафе5 = 0;
		СуммаПоГрафе6 = 0;
		
		НомСтроки = 1;
		Суффикс = "_1";
		
		Пока ДанныеРаздела.Свойство("П000020000101" + Суффикс) Цикл
			
			Графа3 = 0;
			Если НЕ ДанныеРаздела.Свойство("П000020000103" + Суффикс, Графа3) Тогда
				Графа3 = 0;
			КонецЕсли;
			
			Графа4 = 0;
			Если НЕ ДанныеРаздела.Свойство("П000020000104" + Суффикс, Графа4) Тогда
				Графа4 = 0;
			КонецЕсли;
			
			СуммаПоГрафе3 = СуммаПоГрафе3 + Графа3;
			СуммаПоГрафе4 = СуммаПоГрафе4 + Графа4;
			
			НомСтроки = НомСтроки + 1;
			Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
			
		КонецЦикла;
		
		ДанныеРаздела.Вставить("П000020000203", СуммаПоГрафе3);
		ДанныеРаздела.Вставить("П000020000204", СуммаПоГрафе4);
		
		ИтогГрафа3 = СуммаПоГрафе3;
		ИтогГрафа4 = СуммаПоГрафе4;
		
		ИндексМаксимума = Неопределено;
		ЗначениеМаксимума = 0;
		Остаток = 100;
		
		НомСтроки = 1;
		Суффикс = "_1";
		
		Пока ДанныеРаздела.Свойство("П000020000101" + Суффикс) Цикл
			
			Графа3 = 0;
			Если НЕ ДанныеРаздела.Свойство("П000020000103" + Суффикс, Графа3) Тогда
				Графа3 = 0;
			КонецЕсли;
			
			Графа4 = 0;
			Если НЕ ДанныеРаздела.Свойство("П000020000104" + Суффикс, Графа4) Тогда
				Графа4 = 0;
			КонецЕсли;
			
			Если ИтогГрафа3 + ИтогГрафа4 = 0 Тогда
				Графа5 = 0;
			Иначе
				Графа5 = Окр((Графа3 + Графа4) / (ИтогГрафа3 + ИтогГрафа4) * 100, 3);
			КонецЕсли;
			
			ДанныеРаздела.Вставить("П000020000105" + Суффикс, Графа5);
			
			Если Графа5 > ЗначениеМаксимума Тогда
				ИндексМаксимума = НомСтроки;
				ЗначениеМаксимума = Графа5;
			КонецЕсли;
			
			Остаток = Остаток - Графа5;
			
			Графа6 = 0;
			Если НЕ ДанныеРаздела.Свойство("П000020000106" + Суффикс, Графа6) Тогда
				Графа6 = 0;
			КонецЕсли;
			
			СуммаПоГрафе5 = СуммаПоГрафе5 + Графа5;
			СуммаПоГрафе6 = СуммаПоГрафе6 + Графа6;
			
			НомСтроки = НомСтроки + 1;
			Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
			
		КонецЦикла;
		
		Если ИндексМаксимума <> Неопределено Тогда
			Суффикс = "_" + Формат(ИндексМаксимума, "ЧГ=");
			ДанныеРаздела["П000020000105" + Суффикс] = ДанныеРаздела["П000020000105" + Суффикс] + Остаток;
			СуммаПоГрафе5 = СуммаПоГрафе5 + Остаток;
		КонецЕсли;
		
		ДанныеРаздела.Вставить("П000020000205", СуммаПоГрафе5);
		ДанныеРаздела.Вставить("П000020000206", СуммаПоГрафе6);
		
	КонецЕсли;
	
#КонецОбласти