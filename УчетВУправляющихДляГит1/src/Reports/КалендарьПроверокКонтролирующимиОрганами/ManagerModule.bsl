#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область ФормированиеОтчета

Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ДанныеОтчета = Новый Структура;
	ДанныеОтчета.Вставить("Организация",    ПараметрыОтчета.Организация);
	ДанныеОтчета.Вставить("ОписаниеОшибки", "");
	ДанныеОтчета.Вставить("ОжиданиеОтвета", Ложь);
	
	ИнформацияОПроверках = Справочники.ПроверкиКонтролирующимиОрганами.ИнформацияОПроверкахОрганизации(
		ПараметрыОтчета.Организация);
	ДанныеОтчета.ОписаниеОшибки = ИнформацияОПроверках.ОписаниеОшибки;
	ДанныеОтчета.ОжиданиеОтвета = ИнформацияОПроверках.ОжиданиеОтвета;
	
	Если ДанныеОтчета.ОжиданиеОтвета
		ИЛИ ЗначениеЗаполнено(ДанныеОтчета.ОписаниеОшибки) Тогда
		ПоместитьВоВременноеХранилище(ДанныеОтчета, АдресХранилища);
		Возврат;
	КонецЕсли;
	
	ЗаявленияОбОтмене = Справочники.ПроверкиКонтролирующимиОрганами.ДанныеПодготовленныхЗаявленийОбОтменеПроверок(
		ПараметрыОтчета.Организация);
	СформироватьРезультатПроверки(ИнформацияОПроверках, ЗаявленияОбОтмене, ДанныеОтчета);
	
	ПоместитьВоВременноеХранилище(ДанныеОтчета, АдресХранилища);
	
КонецПроцедуры 

Процедура СформироватьРезультатПроверки(ИнформацияОПроверках, ЗаявленияОбОтмене, ДанныеОтчета)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ОбластиМакета = ВсеОбластиМакета("Проверки");
	
	ТаблицаПериоды = ИнформацияОПроверках.Проверки.Скопировать(, "ПериодПроверки");
	ТаблицаПериоды.Свернуть("ПериодПроверки");
	ТаблицаПериоды.Сортировать("ПериодПроверки");
	
	ИнформацияОПроверках.Проверки.Индексы.Добавить("ПериодПроверки");
	ЗаявленияОбОтмене.Индексы.Добавить("Идентификатор");
	НачалоПериодаОтчета = НачалоМесяца(ТекущаяДатаСеанса());
	ЕстьПравоНаПросмотрЗаявлений = ПравоДоступа("Просмотр", 
		Метаданные.Документы.УведомлениеОСпецрежимахНалогообложения);
	ЕстьПравоНаСозданиеЗаявлений = ПравоДоступа("ИнтерактивноеДобавление", 
		Метаданные.Документы.УведомлениеОСпецрежимахНалогообложения);
	
	// Шапка
	НаименованиеОрганизации = БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(ДанныеОтчета.Организация);
	ОбластиМакета.Шапка.Параметры.НаименованиеОрганизации = НаименованиеОрганизации;
	ТабличныйДокумент.Вывести(ОбластиМакета.Шапка);
	
	// Проверки с группировкой по месяцам
	Для каждого СтрокаПериода Из ТаблицаПериоды Цикл
		// Период
		ОбластиМакета.ПериодПроверки.Параметры.Заполнить(СтрокаПериода);
		ТабличныйДокумент.Вывести(ОбластиМакета.ПериодПроверки);
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
		РазворачиватьПроверки = СтрокаПериода.ПериодПроверки >= НачалоПериодаОтчета;
		// Проверки
		ОтборПоПериоду = Новый Структура("ПериодПроверки", СтрокаПериода.ПериодПроверки);
		ПроверкиПериода = ИнформацияОПроверках.Проверки.Скопировать(ОтборПоПериоду);
		ПроверкиПериода.Сортировать("ДатаПроверки,КонтролирующийОрган");
		Для каждого СтрокаПроверки Из ПроверкиПериода Цикл
			Проверка = СтрШаблон("%1, %2", 
				СтрокаПроверки.КонтролирующийОрган, 
				?(СтрокаПроверки.ПлановаяПроверка, НСтр("ru='плановая проверка'"), НСтр("ru='внеплановая проверка'")));
			ОбластиМакета.Проверка.Параметры.Проверка = Проверка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Проверка);
			ТабличныйДокумент.НачатьГруппуСтрок(, РазворачиватьПроверки);
			ИнформацияОПодготовке = Справочники.ПроверкиКонтролирующимиОрганами.ИнформацияОПодготовкеКПроверке(
				СтрокаПроверки.КонтролирующийОрган);
			Если ЗначениеЗаполнено(ИнформацияОПодготовке.URL) Тогда
				ОбластиМакета.КакПодготовиться.Параметры.Заполнить(ИнформацияОПодготовке);
				ТабличныйДокумент.Вывести(ОбластиМакета.КакПодготовиться);
			КонецЕсли;
			ОбластиМакета.ОписаниеПроверки.Параметры.Заполнить(СтрокаПроверки);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОписаниеПроверки);
			Если ЗначениеЗаполнено(СтрокаПроверки.ЦельПроверки) Тогда
				ОбластиМакета.ЦельПроверки.Параметры.Заполнить(СтрокаПроверки);
				ТабличныйДокумент.Вывести(ОбластиМакета.ЦельПроверки);
			КонецЕсли;
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			Если ЕстьПравоНаПросмотрЗаявлений Тогда
				ИнформацияОбОтмене = Справочники.ПроверкиКонтролирующимиОрганами.МожноПодатьЗаявлениеОбОтменеПроверки(
					СтрокаПроверки.ПлановаяПроверка, ДанныеОтчета.Организация, СтрокаПроверки.ПериодПроверки);
				Если ИнформацияОбОтмене.Результат Тогда
					СтрокаЗаявления = ЗаявленияОбОтмене.Найти(СтрокаПроверки.Идентификатор, "Идентификатор");
					Если СтрокаЗаявления <> Неопределено Тогда
						ОбластиМакета.ПодготовленноеЗаявлениеОбОтменеПроверки.Параметры.Заявление = СтрокаЗаявления.Заявление;
						КогдаПодготовлено = СтрШаблон(НСтр("ru='подготовлено %1 г.'"), Формат(СтрокаЗаявления.Дата, "ДЛФ=D"));
						ОбластиМакета.ПодготовленноеЗаявлениеОбОтменеПроверки.Параметры.КогдаПодготовлено = КогдаПодготовлено;
						ТабличныйДокумент.Вывести(ОбластиМакета.ПодготовленноеЗаявлениеОбОтменеПроверки);
					ИначеЕсли ЕстьПравоНаСозданиеЗаявлений Тогда
						ОбластьОтменаПроверки = Неопределено;
						Если ИнформацияОбОтмене.Тип = "ЮридическоеЛицо" Тогда
							ОбластьОтменаПроверки = ОбластиМакета.ОтменаПроверкиЮридическоеЛицо;
						ИначеЕсли ИнформацияОбОтмене.Тип = "Предприниматель" Тогда
							ОбластьОтменаПроверки = ОбластиМакета.ОтменаПроверкиПредприниматель;
						КонецЕсли;
						Если ОбластьОтменаПроверки <> Неопределено Тогда
							ПараметрыЗаявления = Новый Структура("Тип,КонтролирующийОрган,ПериодПроверки,Идентификатор");
							ЗаполнитьЗначенияСвойств(ПараметрыЗаявления, СтрокаПроверки);
							ПараметрыЗаявления.Тип = ИнформацияОбОтмене.Тип;
							ОбластьОтменаПроверки.Параметры.URLИсключения = "http://buh.ru/news/uchet_nalogi/44786";
							ОбластьОтменаПроверки.Параметры.ПараметрыЗаявления = ПараметрыЗаявления;
							ТабличныйДокумент.Вывести(ОбластьОтменаПроверки);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
		КонецЦикла;
	КонецЦикла;
	
	ДанныеОтчета.Вставить("РезультатПроверки", ТабличныйДокумент);
	ДанныеОтчета.Вставить("ИмяФайлаПроверки",  СтрШаблон(НСтр("ru='Календарь проверок %1'"),
		ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(НаименованиеОрганизации, "")));
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ВсеОбластиМакета(ИмяМакета)
	
	Макет     = Отчеты.КалендарьПроверокКонтролирующимиОрганами.ПолучитьМакет(ИмяМакета);
	Результат = Новый Структура;
	Для каждого Область Из Макет.Области Цикл
		Если ТипЗнч(Область) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
			Результат.Вставить(Область.Имя, Макет.ПолучитьОбласть(Область.Имя));
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;

КонецФункции 

#КонецОбласти	

#КонецОбласти	

#КонецЕсли