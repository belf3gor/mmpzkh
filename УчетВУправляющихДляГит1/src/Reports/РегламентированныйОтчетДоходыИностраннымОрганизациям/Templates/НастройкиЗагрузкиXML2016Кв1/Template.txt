// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлыИерархия = УзлыПоXPath(П.ДеревоДляЗагрузки, "//ДохИнОрг//node()"); // вся иерархия подчиненных узлов любого типа
	Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
		ТекущийУзел.МнУр = Истина;
	КонецЦикла;
	
	// Собираем разделы в один многоуговневый раздел.
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Раздел32"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Раздел = "Раздел31";
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Раздел33"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		Если СтрокаДерева.Код = "НомСобщ" Тогда
			СтрокаДерева.Ключ = "П000330004003"; // потом будет обработан и разделен на два поля
		КонецЕсли;
		СтрокаДерева.Раздел = "Раздел31";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П000310000103"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Формат = "T";
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Раздел31 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел31", Раздел31);
	Если Раздел31 <> Неопределено Тогда
	
		Для Каждого СтраницаПервогоУровня Из Раздел31.Строки Цикл
			ИмяПоказателяНомерСообщения = "П000310000103"; ЗначениеПоказателя = Неопределено;
			Если СтраницаПервогоУровня.Данные.Свойство(ИмяПоказателяНомерСообщения, ЗначениеПоказателя) Тогда
				СтраницаПервогоУровня.Данные[ИмяПоказателяНомерСообщения] = Прав("000000000000" + ЗначениеПоказателя, 12);
			КонецЕсли;
			СтраницаПервогоУровня = СтраницаПервогоУровня.Строки[0]; // пропустим группу 1 ур.
			Для Каждого СтраницаВторогоУровня Из СтраницаПервогоУровня.Строки Цикл
				СтраницаВторогоУровня = СтраницаВторогоУровня.Строки[0]; // пропустим группу 2 ур.
				Для Каждого СтраницаТретьегоУровня Из СтраницаВторогоУровня.Строки Цикл
					ИмяПоказателяНомерСообщения = "П000330004003"; ЗначениеПоказателя = Неопределено;
					Если СтраницаТретьегоУровня.Данные.Свойство(ИмяПоказателяНомерСообщения, ЗначениеПоказателя) Тогда
						ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "-");
						СтраницаТретьегоУровня.Данные[ИмяПоказателяНомерСообщения] = ЧастиЗначения[0];
						СтраницаТретьегоУровня.Данные["П000330004004"] = ?(ЧастиЗначения.ВГраница() > 0, ЧастиЗначения[1], "");
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти