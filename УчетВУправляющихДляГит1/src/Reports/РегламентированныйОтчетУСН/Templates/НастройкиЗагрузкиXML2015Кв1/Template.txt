// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100110004003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000110004003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100110007003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000110007003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100110010003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000110010003"; // обработаем в структуре данных документа
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100120004003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000120004003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100120007003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000120007003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100120010003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000120010003"; // обработаем в структуре данных документа
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100220024003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000220024003"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100220024103"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000220024103"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100220024203"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000220024203"; // обработаем в структуре данных документа
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100220024303"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000220024303"; // обработаем в структуре данных документа
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Тип", "П"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Тип = "А"; // не множественный
	КонецЦикла;
	
	П.ПараметрыОтчета.Вставить("ВыгружатьРаздел11", Истина);
	П.ПараметрыОтчета.Вставить("ВыгружатьРаздел12", Истина);
	
	П.ПараметрыОтчета.Вставить("ВыгружатьРаздел12_100", Истина);
	П.ПараметрыОтчета.Вставить("ВыгружатьРаздел12_120", Истина);
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Раздел11 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел11", Раздел11);
	Если Раздел11 <> Неопределено Тогда
		ЗначениеПоказателя = 0;
		Если Раздел11.Свойство("П000110004003", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел11.Вставить("П000110004003", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел11.Вставить("П000110005003", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
		Если Раздел11.Свойство("П000110007003", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел11.Вставить("П000110007003", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел11.Вставить("П000110008003", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
		Если Раздел11.Свойство("П000110010003", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел11.Вставить("П000110010003", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел11.Вставить("П000110011003", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
	КонецЕсли;
	
	Раздел12 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел12", Раздел12);
	Если Раздел12 <> Неопределено Тогда
		ЗначениеПоказателя = 0;
		Если Раздел12.Свойство("П000120004003", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел12.Вставить("П000120004003", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел12.Вставить("П000120005003", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
		Если Раздел12.Свойство("П000120007003", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел12.Вставить("П000120007003", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел12.Вставить("П000120008003", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
		Если Раздел12.Свойство("П000120010003", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел12.Вставить("П000120010003", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел12.Вставить("П000120011003", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
	КонецЕсли;
	
	Раздел22 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел22", Раздел22);
	Если Раздел22 <> Неопределено Тогда
		ЗначениеПоказателя = 0;
		Если Раздел22.Свойство("П000220024003", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел22.Вставить("П000220024003", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел22.Вставить("П000220025003", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
		Если Раздел22.Свойство("П000220024103", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел22.Вставить("П000220024103", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел22.Вставить("П000220025103", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
		Если Раздел22.Свойство("П000220024203", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел22.Вставить("П000220024203", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел22.Вставить("П000220025203", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
		Если Раздел22.Свойство("П000220024303", ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = 0 + ЗначениеПоказателя;
			Раздел22.Вставить("П000220024303", ?(ЗначениеПоказателя >= 0, ЗначениеПоказателя, 0));
			Раздел22.Вставить("П000220025303", ?(ЗначениеПоказателя < 0, -ЗначениеПоказателя, 0));
		КонецЕсли;
	КонецЕсли;
	
#КонецОбласти