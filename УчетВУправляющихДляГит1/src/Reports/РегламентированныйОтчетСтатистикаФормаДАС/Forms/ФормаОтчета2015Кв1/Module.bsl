&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	// Обход ошибки платформы Параметр сеанса отсутствует или удален
	ПолеТабличногоДокументаФормаОтчета.Очистить();
	
	СформироватьСтруктуруРеквизитовФормы();
	
	СтруктураРеквизитовФормы.СписокПечатаемыхЛистов = Новый СписокЗначений;
	
	// ОПИСАНИЕ ПАРМЕТРОВ ФОРМЫ
	//
	// Версия формы
	СтруктураРеквизитовФормы.мВерсияФормы = "25/10/2014";
	// Код отчета, равен коду по ОКУД
	СтруктураРеквизитовФормы.мКодОтчета   = "0612001";
	
	СтруктураРеквизитовФормы.мПечатныеФормы = Новый СписокЗначений;
	
	ПолеТабличногоДокументаФормаОтчета.Вывести(Отчеты[Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)].ПолучитьМакет("ФормаОтчета2015Кв1_ФормаОтчета"));

	СтруктураРеквизитовФормы.мВыбраннаяФорма          = Параметры.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мПериодичность           = Параметры.мПериодичность;
	СтруктураРеквизитовФормы.мСкопированаФорма        = Параметры.мСкопированаФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок          = Параметры.мСохраненныйДок;
	СтруктураРеквизитовФормы.Организация              = Параметры.Организация;
	
	ДатаПодписи = ТекущаяДатаСеанса();
	
	СтруктураРеквизитовФормы.СправочникиВидыКонтактнойИнформацииПочтовыйАдресОрганизации = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации;
	
	Инициализация(Параметры.БезОткрытияФормы);
		
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруРеквизитовФормы()
	
	СтруктураРеквизитовФормы = РегламентированнаяОтчетность.СформироватьСтруктуруОбязательныхРеквизитовСтатистическогоОтчета();
	
КонецПроцедуры

&НаСервере
Процедура Инициализация(БезОткрытияФормы = Ложь) Экспорт
	
	СтруктураРеквизитовФормы.мБезОткрытияФормы = БезОткрытияФормы;
	
	СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Ложь;

	ТекТабличноеПоле = ПолеТабличногоДокументаФормаОтчета;

	СтруктураРеквизитовФормы.ВидДокумента = 0;
	НомерКорректировки = 1;
	СтруктураРеквизитовФормы.мАдресвФорматеДляВыгрузки = "";
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			// документ скопирован
			ВосстановитьСохраненныеДанные();
		КонецЕсли;
		
		Модифицированность = Истина;

	Иначе

		// При открытии или при копировании сохраненного
		// отчета восстанавливаем сохраненные данные.
		ВосстановитьСохраненныеДанные();
		
		Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма) Тогда
			СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено;
		КонецЕсли;
		
		Если НЕ БезОткрытияФормы
           И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
				   
        	ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);

        КонецЕсли;

	КонецЕсли;
	
	Если Не БезОткрытияФормы Тогда
		// В случае подачи отчета за I или III квартал, установим защиту и цвет по умолчанию для раздела 12 Формы ДАС.
		ДоступностьРазделов();
	КонецЕсли;

	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		НомерКорректировки = 0;
	Иначе
		НомерКорректировки = СтруктураРеквизитовФормы.мСохраненныйДок.Вид;
	КонецЕсли;
	
	ПолеТабличногоДокументаФормаОтчета.Области.НомерКорректировки.Значение = НомерКорректировки;
	ПолеТабличногоДокументаФормаОтчета.Области.ДатаСоставленияОтчета.Значение = ДатаПодписи;
	
	ПоказатьПериод();

	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Или СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация Тогда
		ЗаполнитьСведенияОбОрганизацииНаСервере();
	КонецЕсли;
	
	СтруктураРеквизитовФормы.НаимОрганизации = СтруктураРеквизитовФормы.Организация.Наименование;
	
	ТекущийЭлемент = Элементы["ПолеТабличногоДокументаФормаОтчета"];
	
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтаФорма);
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма, "ФСГС");
	
КонецПроцедуры

&НаСервере
Процедура ДоступностьРазделов()
	
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3
		Или Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 9 Тогда
		Для НомСтр = 1 По 5 Цикл
			ПолеТабличногоДокументаФормаОтчета.Области["П000012"
				+ Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].ЦветФона = Новый Цвет();
			ПолеТабличногоДокументаФормаОтчета.Области["П000012"
				+ Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Защита = Истина;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура управляет показом в форме периода построения отчета.
//
&НаСервере
Процедура ПоказатьПериод()
	
	// Период в шапке и заголовке отчета
	ПолеТабличногоДокументаФормаОтчета.Области.ПериодОтчета.Значение = "за "
		+ НРег(ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
		КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета)));
	СтруктураРеквизитовФормы.СтрПериодОтчета = НРег(ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
		КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета)));
	
КонецПроцедуры

// Восстанавливает сохраненные данные отчета.
//
&НаСервере
Процедура ВосстановитьСохраненныеДанные()
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеВариановАвтоЗаполнения;
	Перем ПоказателиОтчета;
	Перем ВерсияФормы;

	// В случае, если формы была скопирована по F9, то проверим, не изменилась ли организация.
	Если СтруктураРеквизитовФормы.Организация <> СтруктураРеквизитовФормы.мСохраненныйДок.Организация
	   И СтруктураРеквизитовФормы.Организация <> РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа("СправочникСсылка.Организации")
	   И СтруктураРеквизитовФормы.Организация <> Неопределено Тогда
		// Меняем переменную, для того, чтобы запустилась процедура ЗаполнитьСведенияОбОрганизации
		СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Истина;
	Иначе
		// восстанавливаем реквизиты отчета
		СтруктураРеквизитовФормы.Организация = СтруктураРеквизитовФормы.мСохраненныйДок.Организация;
	КонецЕсли;

	ДатаПодписи              = СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи;
	СтруктураРеквизитовФормы.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения;
	Комментарий                    = СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий;

	// восстанавливаем сохраненные данные отчета
	СписокСохранения = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
	
	// восстанавливаем сохраненные данные вариантов автозаполнения ячеек
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариановАвтоЗаполнения) Тогда
		
		Если НЕ ДанныеВариановАвтоЗаполнения = Неопределено Тогда
			
			мСтруктураВариантыЗаполнения.Очистить();
			
			Для Каждого ЭлементСтруктуры Из ДанныеВариановАвтоЗаполнения Цикл
				
				мСтруктураВариантыЗаполнения.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Ключ);
				
				ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ].Очистить();
				
				Для Каждого ЭлементМассива Из ЭлементСтруктуры.Значение Цикл
										
					ТаблВарЗаполнения = ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ].Добавить().ТаблицаВариантовЗаполнения;
										
					ЗначениеВДанныеФормы(ЭлементМассива, ТаблВарЗаполнения);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЕсли;

	// восстанавливаем версию формы
	СписокСохранения.Свойство("ВерсияФормы", ВерсияФормы);
	
	// восстанавливаем сохраненные данные многострочных разделов
	Если СписокСохранения.Свойство("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) И ДанныеМногострочныхРазделов <> Неопределено Тогда
		
		Для Каждого ЭлементСтруктуры Из ДанныеМногострочныхРазделов Цикл
			
			НайденноеЗначение = Неопределено;
			
			мСтруктураМногострочныхРазделов.Свойство(ЭлементСтруктуры.Ключ, НайденноеЗначение);
			
			Если НЕ НайденноеЗначение = Неопределено Тогда
				
				ЗначениеВДанныеФормы(ЭлементСтруктуры.Значение, ЭтаФорма[НайденноеЗначение]);
				
				ВывестиРазделВТабличныйДокументНаСервере(НайденноеЗначение, ЭтаФорма[НайденноеЗначение]);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// восстановим сохраненные данные редактируемых ячеек
	СписокСохранения.Свойство( "ПоказателиОтчета", ПоказателиОтчета );
	
	ВосстановитьДанныеОтчетаСтарогоОбразца(ПоказателиОтчета);
	
	Для Каждого ПоказателиСтраницы Из ПоказателиОтчета Цикл
		ИмяТекТабличноеПоле = ПоказателиСтраницы.Ключ;
		ТекТабличноеПоле    = ЭтаФорма[ИмяТекТабличноеПоле];
		ПоказателиТаблПоле  = ПоказателиСтраницы.Значение;

		Для Каждого Показатель Из ПоказателиТаблПоле Цикл
			ИмяПоказателя       = Показатель.Ключ;
			ЗначениеПоказателя  = Показатель.Значение;

			// установим значение в таблице
			Попытка
				Если Лев(ИмяПоказателя, 2) = "ЧН" Тогда
					// значение показателя с префиксом "ЧН" содержит формат представления нуля
					ОбластьПоказателя = ТекТабличноеПоле.Области[Сред(ИмяПоказателя, 3)];
					ОбластьПоказателя.Формат = РегламентированнаяОтчетностьКлиентСервер.ЗаменитьПредставлениеНуляВСтрокеФормата(ОбластьПоказателя.Формат, ЗначениеПоказателя);
					Продолжить;
				КонецЕсли;
				ТекТабличноеПоле.Области[ИмяПоказателя].Значение = ЗначениеПоказателя;
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;

	СтруктураРеквизитовФормы.мАдресвФорматеДляВыгрузки = ПолеТабличногоДокументаФормаОтчета.Области.ОргАдрес.Значение;
	ПолеТабличногоДокументаФормаОтчета.Области.ОргАдрес.Значение = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых(СтруктураРеквизитовФормы.мАдресвФорматеДляВыгрузки);

	РегламентированнаяОтчетность.ОперацииПриВосстановленииРегламентированногоОтчета(ЭтаФорма);
	
	Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3
			Или Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 9 Тогда
			Для НомСтр = 1 По 5 Цикл
				ПолеТабличногоДокументаФормаОтчета.Области["П000012" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение = "";
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность   = Ложь;

КонецПроцедуры

&НаСервере
Процедура ВосстановитьДанныеОтчетаСтарогоОбразца(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаФормаОтчета"];
	
	// Если это показатели отчета нового образца, тогда выход из процедуры
	Если ПоказателиТаблПоле.Свойство("П000202101_1") Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеПоказателей = Новый Соответствие;
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		ПрефиксИмениПоказателя = "";
		ИмяПоказателяБезПрефикса = ИмяПоказателя;
		Если ВРег(Лев(ИмяПоказателя,2)) = "ЧН" Тогда
			ПрефиксИмениПоказателя = "ЧН";
			ИмяПоказателяБезПрефикса = Сред(ИмяПоказателя, 3);
		КонецЕсли;
		ЧастьПоказателя1 = Лев(ИмяПоказателяБезПрефикса, 6);
		ЧастьПоказателя2 = Сред(ИмяПоказателяБезПрефикса, 7, 2);
		ЧастьПоказателя3 = Сред(ИмяПоказателяБезПрефикса, 9);
		
		ИмяНовогоПоказателя = ИмяПоказателя;
		Если (ЧастьПоказателя1 = "П00020") И (ЧастьПоказателя2 >= "01" И ЧастьПоказателя2 <= "12") И (ЧастьПоказателя3 >= "01" И ЧастьПоказателя3 <= "06") Тогда
			ИмяНовогоПоказателя = ПрефиксИмениПоказателя + "П0002021" + ЧастьПоказателя3 + "_" + Формат(Число(ЧастьПоказателя2), "ЧГ=");
		ИначеЕсли (ЧастьПоказателя1 = "П00050") И (ЧастьПоказателя2 >= "01" И ЧастьПоказателя2 <= "11") Тогда
			Если ЧастьПоказателя3 >= "01" И ЧастьПоказателя3 <= "05" Тогда
				ИмяНовогоПоказателя = ПрефиксИмениПоказателя + "П0005001" + ЧастьПоказателя3 + "_" + Формат(Число(ЧастьПоказателя2), "ЧГ=");
			ИначеЕсли ЧастьПоказателя3 >= "06_1" И ЧастьПоказателя3 <= "06_3" Тогда
				ИмяНовогоПоказателя = ПрефиксИмениПоказателя + "П0005001" + Формат(Число(Прав(ЧастьПоказателя3, 1)) + 5, "ЧЦ=2; ЧВН=; ЧГ=") + "_" + Формат(Число(ЧастьПоказателя2), "ЧГ=");
			ИначеЕсли ЧастьПоказателя3 >= "07" И ЧастьПоказателя3 <= "10" Тогда
				ИмяНовогоПоказателя = ПрефиксИмениПоказателя + "П0005001" + Формат(Число(ЧастьПоказателя3) + 2, "ЧЦ=2; ЧВН=; ЧГ=") + "_" + Формат(Число(ЧастьПоказателя2), "ЧГ=");
			КонецЕсли
		КонецЕсли;
		
		Если ИмяНовогоПоказателя = ИмяПоказателя Тогда
			Продолжить;
		КонецЕсли;
		
		СоответствиеПоказателей.Вставить(ИмяПоказателя, ИмяНовогоПоказателя);
		
	КонецЦикла;
	
	Для Каждого ЭлементСоответствия Из СоответствиеПоказателей Цикл
		
		ПоказателиТаблПоле.Вставить(ЭлементСоответствия.Значение, ПоказателиТаблПоле[ЭлементСоответствия.Ключ]);
		ПоказателиТаблПоле.Удалить(ЭлементСоответствия.Ключ);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОбОрганизацииНаСервере(ВПрограммеИзмененаДатаПодписи = Ложь)
	
	РегламентированнаяОтчетностьКлиентСервер.ЗаполнитьСведенияОбОрганизацииДляОтчетаСтатистики(ЭтаФорма, ВПрограммеИзмененаДатаПодписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСведенияОбОрганизацииНаКлиенте(ВПрограммеИзмененаДатаПодписи = Ложь)
	
	РегламентированнаяОтчетностьКлиентСервер.ЗаполнитьСведенияОбОрганизацииДляОтчетаСтатистики(ЭтаФорма, ВПрограммеИзмененаДатаПодписи);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОтчет(Команда)
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

// СохранитьНаКлиенте()
&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь, ВыполняемоеОповещение = Неопределено) Экспорт
	
	Вариант = СтруктураРеквизитовФормы.ВидДокумента * НомерКорректировки;
	
	Если НЕ РегламентированнаяОтчетностьКлиент.ПриЗаписиРегламентированногоОтчетаНаКлиенте(ЭтаФорма, , Автосохранение, Вариант) Тогда
		Возврат;
	КонецЕсли;
	
	ПодобныйОтчетСуществует = Ложь;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Ложь;
	
	// формируем данные редактируемых ячеек таблицы
	ПоказателиОтчета = Новый Структура();
	
	#Если ВебКлиент Тогда
		ЗаполнитьПоказателиОтчетаНаСервере(ПоказателиОтчета);
	#Иначе
		ЗаполнитьПоказателиОтчетаНаКлиенте(ПоказателиОтчета);
	#КонецЕсли
	
	РезультатСохранения = ПередСохранением(, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, ПоказателиОтчета);
	
	ВидДокументаНомерКорректировкиИзменен = Неопределено;
	
	Если ПодобныйОтчетСуществует И Автосохранение Тогда
		Возврат;
	КонецЕсли;
	
	НуженВопросПередСохранением = (ПодобныйОтчетСуществует ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
	
	Если НуженВопросПередСохранением Тогда
		СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, ПоказателиОтчета);
	Иначе		
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, ПоказателиОтчета)
	
	Если ПодобныйОтчетСуществует Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Сохранить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отчет с видом %1 уже существует.
		|Сохранить отчет с таким же видом?'"), ?(Вариант = 0, """Первичный""", """Корректирующий/" + Вариант + """"));
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПоказателиОтчета", Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПоказателиОтчета);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросСохранитьОтчетСТакимЖеВидомЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , Кнопки.Получить(1).Значение);
		
	Иначе
		
		СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПоказателиОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьОтчетСТакимЖеВидомЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = ДополнительныеПараметры.ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки;
	ПоказателиОтчета = ДополнительныеПараметры.ПоказателиОтчета;
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПоказателиОтчета);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПоказателиОтчета)
	
	Если ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидОтчета", Вариант);
		
		ФормаВопроса = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ВопросПриИзмененииВидаДокументаНомераКорректировки", ПараметрыФормы);
		
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, ПоказателиОтчета", Автосохранение, Вариант, ВыполняемоеОповещение, ПоказателиОтчета);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииВидаДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ФормаВопроса.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВопроса.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВопроса.Открыть();
		
	Иначе
		Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
		РезультатСохранения = Сохранить(Автосохранение, , Вариант, Ложь, ПоказателиОтчета);
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииВидаДокументаЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	ПоказателиОтчета = ДополнительныеПараметры.ПоказателиОтчета;
	
	Если КодВозврата = КодВозвратаДиалога.Да
		ИЛИ КодВозврата = КодВозвратаДиалога.Нет Тогда
		
		ВидДокументаНомерКорректировкиИзменен = ?(КодВозврата = КодВозвратаДиалога.Да, Истина, Ложь);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
	РезультатСохранения = Сохранить(Автосохранение, , Вариант, ВидДокументаНомерКорректировкиИзменен, ПоказателиОтчета);
	ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения)
	
	КлючУникальности = СтруктураРеквизитовФормы.мСохраненныйДок;
	
	Если РезультатСохранения Тогда
		
		РегламентированнаяОтчетностьКлиент.ПослеЗаписиРегламентированногоОтчета(ЭтаФорма);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
// СохранитьНаКлиенте

// ПередСохранением()
//
&НаСервере
Функция ПередСохранением(КодИФНС = "не применимо", ПодобныйОтчетСуществует="", Вариант="", ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки="", Автосохранение="", ПоказателиОтчета="")
	
	Если РегламентированнаяОтчетность.БылиИзмененыКлючевыеРеквизитыОтчета(ЭтаФорма, КодИФНС)
	   И РегламентированнаяОтчетность.СуществуетДокументСАналогичнымиРеквизитами(ЭтаФорма, КодИФНС) Тогда
		
		ПодобныйОтчетСуществует = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мЗаписываетсяНовыйДокумент = (СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено);
	
	Если Вариант <> Неопределено И ((СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено) ИЛИ (СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено) ИЛИ (Вариант <> СтруктураРеквизитовФормы.мВариант)) Тогда
		
		Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
						
		ИначеЕсли Вариант <> СтруктураРеквизитовФормы.мВариант Тогда
			
			ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Истина;
								
		КонецЕсли;

	КонецЕсли;
	
	Если ПодобныйОтчетСуществует
	 ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
	 
	 	Возврат Ложь;
		
 	КонецЕсли;
		
	Возврат Сохранить(Автосохранение, КодИФНС, Вариант, , ПоказателиОтчета);
		
КонецФункции

// Формирует структуру данных отчета и помещает в реквизит типа ХранилищеЗначения
// документа РегламентированныйОтчет.
// 
// При первом сохранении данных отчета создает новый документ этого вида.
// Структура данных отчета состоит из элементов:
//   - значения редактируемых реквизитов отчета;
//   - данные по многострочным разделам отчета;
//   - данные по  многостраничным разделам отчета;
//   - данные по вариантам заполнения реквизитов,
//     участвующих в автозаполнении.
//
&НаСервере
Функция Сохранить(Автосохранение = Ложь, КодИФНС = "не применимо", Вариант = Неопределено, ВидДокументаНомерКорректировкиИзменен = Неопределено, ПоказателиОтчета = Неопределено) Экспорт
	
	ДанныеДляРазблокирования = Неопределено;
	
	Если НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы Тогда
			ДанныеДляРазблокирования = Новый Структура("Ключ,ИдФормы",
			СтруктураРеквизитовФормы.мСохраненныйДок, ЭтаФорма.УникальныйИдентификатор);
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.ПолучитьОбъект();
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ПриЗаписиРегламентированногоОтчетаНаСервере(ЭтаФорма, КодИФНС, Автосохранение, Вариант, ВидДокументаНомерКорректировкиИзменен, СтруктураРеквизитовФормы.мСохраненныйДок) Тогда
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецЕсли;

	// установим текущие значения реквизитов документа
	СтруктураРеквизитовФормы.мСохраненныйДок.ИсточникОтчета           = Метаданные.Отчеты[Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)].Имя;
	СтруктураРеквизитовФормы.мСохраненныйДок.НаименованиеОтчета       = Метаданные.Отчеты[Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)].ОсновнаяФорма.Синоним;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала               = СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания            = СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.Периодичность            = СтруктураРеквизитовФормы.мПериодичность;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВыбраннаяФорма           = СтруктураРеквизитовФормы.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок.Организация              = СтруктураРеквизитовФормы.Организация;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи              = ДатаПодписи;	
	СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения         = Неопределено;	
	СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;	
	СтруктураРеквизитовФормы.мСохраненныйДок.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;	
	СтруктураРеквизитовФормы.мСохраненныйДок.Вид                      = Вариант;	
	СтруктураРеквизитовФормы.мСохраненныйДок.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(СтруктураРеквизитовФормы.мСохраненныйДок.Вид);	
	СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий              = Комментарий;
	
	СтруктураРеквизитовФормы.мВариант = Вариант;

	// формируем список сохранения
	СписокСохранения = Новый Структура();
	
	// вставляем данные редактируемых ячеек таблицы	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);

	// вставляем данные многострочных разделов
	ДанныеМногострочныхРазделов = Новый Структура;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);

	// вставляем данные вариантов автозаполнения ячеек
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", Неопределено);

	// вствляем версию формы
	СписокСохранения.Вставить("ВерсияФормы", СтруктураРеквизитовФормы.мВерсияФормы);

	ХранилищеДанных = Новый ХранилищеЗначения(СписокСохранения);
	СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета = ХранилищеДанных;

	// записываем документ, хранящий данные отчета
	Попытка
		СтруктураРеквизитовФормы.мСохраненныйДок.Записать();
		РегламентированнаяОтчетность.СохранитьСтатусОтправкиРеглОтчета(ЭтаФорма);
	Исключение
		
		Если НЕ Автосохранение Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));

			Сообщение.Сообщить();
				
		КонецЕсли;
		
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		
		Возврат Ложь;
		
	КонецПопытки;
		
	Модифицированность   = Ложь;
	
	СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
	
	Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы
       И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
				   
    	ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);

    КонецЕсли;
	
	Если ДанныеДляРазблокирования <> Неопределено Тогда
		РазблокироватьДанныеДляРедактирования(ДанныеДляРазблокирования.Ключ, ДанныеДляРазблокирования.ИдФормы);
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаКлиенте
Функция СобратьДанныеТекущегоТаблПоляНаКлиенте(ИмяТабличногоПоля) Экспорт
	
	Возврат РегламентированнаяОтчетностьКлиентСервер.СобратьДанныеТекущегоТаблПоля(ЭтаФорма, ИмяТабличногоПоля);
	
КонецФункции

&НаСервере
Функция СобратьДанныеТекущегоТаблПоляНаСервере(ИмяТабличногоПоля) Экспорт
	
	Возврат РегламентированнаяОтчетностьКлиентСервер.СобратьДанныеТекущегоТаблПоля(ЭтаФорма, ИмяТабличногоПоля);

КонецФункции

&НаСервере
Процедура ЗаполнитьПоказателиОтчетаНаСервере(ПоказателиОтчета)
	
	РегламентированнаяОтчетностьКлиентСервер.ЗаполнитьПоказателиОтчета(ЭтаФорма, ПоказателиОтчета);
	           	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказателиОтчетаНаКлиенте(ПоказателиОтчета)
	
	РегламентированнаяОтчетностьКлиентСервер.ЗаполнитьПоказателиОтчета(ЭтаФорма, ПоказателиОтчета);
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаКлиенте(ИмяЛиста = Неопределено) Экспорт
	
	ИдГрупп = Новый Структура;
	
	Возврат ОпределитьИдМногострочногоРазделаПоАктивнойСтранице(ЭтаФорма, ИмяЛиста, ИмяЛиста, ИдГрупп);

КонецФункции

&НаСервере
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ИмяЛиста = Неопределено) Экспорт
	
	ИдГрупп = Новый Структура;
	
	Возврат ОпределитьИдМногострочногоРазделаПоАктивнойСтранице(ЭтаФорма, ИмяЛиста, ИмяЛиста, ИдГрупп);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтранице(Форма, ИмяЛиста = Неопределено, ТекущаяСтраница = Неопределено, ИдГрупп = Неопределено)
	
	Перем ИмяГруппы;

	Если ИмяЛиста = Неопределено Тогда
		ИмяТекущейСтраницыПанели = ТекущаяСтраница.Имя;
	Иначе
		ИмяТекущейСтраницыПанели = ИмяЛиста;
	КонецЕсли;

	Если ИмяТекущейСтраницыПанели = "ФормаОтчета" Тогда
		
		ИмяГруппы = РегламентированнаяОтчетностьКлиентСервер.РазделТекущейОбласти(Форма, Форма.Элементы.ПолеТабличногоДокументаФормаОтчета.ТекущаяОбласть);
		
	КонецЕсли;

	Возврат ИмяГруппы;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСтруктуруМногострочногоРаздела(Форма, ИмяГруппы) Экспорт
	
	Перем СтруктураГруппы;
	
	Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
	
	СтруктураГруппы = Форма[СтруктураГруппы];
	
	ТекТабличноеПолеИмя = "ПолеТабличногоДокументаФормаОтчета";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];
	
	Для НСтр = 1 По СтруктураГруппы.Количество() Цикл
		ТекСтрокаТаблицы = СтруктураГруппы[НСтр - 1];
		НСтрСтр = Формат(НСтр, "ЧГ=0");
		
		Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
			
			ИмяКолонки = ИмяГруппы + Формат(НомерГрафы, "ЧЦ=2; ЧВН=");
			
			Если СтруктураГруппы[0].Свойство(ИмяКолонки) Тогда
				
				ИмяЯчейки     = ИмяКолонки + "_" + НСтрСтр;
				ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяЯчейки];
				
				Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
					ЗначениеЯчейки = ОбластьЯчейки.Значение;
				Иначе
					ЗначениеЯчейки = ОбластьЯчейки.Текст;
				КонецЕсли;
				
				ТекСтрокаТаблицы[ИмяКолонки] = ЗначениеЯчейки;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиРазделВТабличныйДокументНаСервере(ИмяГруппы, СтруктураГруппы) Экспорт
	
	ВывестиРазделВТабличныйДокумент(ЭтаФорма, ИмяГруппы, СтруктураГруппы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиРазделВТабличныйДокументНаКлиенте(ИмяГруппы, СтруктураГруппы) Экспорт
	
	ВывестиРазделВТабличныйДокумент(ЭтаФорма, ИмяГруппы, СтруктураГруппы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВывестиРазделВТабличныйДокумент(Форма, ИмяГруппы, СтруктураГруппы)
	
	Перем ИсходноеКоличествоСтрокГруппы;

	// определим исходное колво строк многострочного раздела,
	// соответствующее бумажной форме отчета
	Форма.мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, ИсходноеКоличествоСтрокГруппы);

	// реальное кол-во строк (колво заполненных строк)
	ТекущееКоличествоСтрокГруппы = СтруктураГруппы.Количество();
	
	ТекТабличноеПолеИмя = "ПолеТабличногоДокументаФормаОтчета";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];
			
	// При восстановлении сохраненных данных отчета сравниваем исходное кол-во
	// отображаемых в форме строк многострочного раздела с реальным количеством
	// созданных строк в сохраненном отчете.
	Если ТекущееКоличествоСтрокГруппы > ИсходноеКоличествоСтрокГруппы Тогда
						
		РегламентированнаяОтчетностьКлиентСервер.ДобавитьНеобходимоеКоличествоДопСтрок(Форма, ТекТабличноеПоле, ТекТабличноеПолеИмя, ИсходноеКоличествоСтрокГруппы, ТекущееКоличествоСтрокГруппы, ИмяГруппы, СтруктураГруппы);
		
		Форма[ТекТабличноеПолеИмя] = ТекТабличноеПоле;
		
	КонецЕсли;
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];

	// выводим значения строк
	Для Каждого СтрокаТаблицы Из СтруктураГруппы Цикл
		
		Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
			
			КолонкаТаблицыИмя = ИмяГруппы + Формат(НомерГрафы, "ЧЦ=2; ЧВН=");
			
			Если СтруктураГруппы[0].Свойство(КолонкаТаблицыИмя) Тогда
				
				НомерСтрокиВТаблице      = СтруктураГруппы.Индекс(СтрокаТаблицы);
				НомерСтрокиВФормеТаблицы = НомерСтрокиВТаблице + 1;
				ИмяЯчейки                = КолонкаТаблицыИмя + "_" + НомерСтрокиВФормеТаблицы;
				ОбластьЯчейкиТаблицы     = ТекТабличноеПоле.Области[ИмяЯчейки];
				ЗначениеЯчейки           = СтрокаТаблицы[КолонкаТаблицыИмя];
				
				Если ОбластьЯчейкиТаблицы.СодержитЗначение Тогда
					// задаем значение ячейки
					ОбластьЯчейкиТаблицы.Значение = ЗначениеЯчейки;
					
				Иначе
					// устанавливаем порядковый номер строки
					Если ИмяЯчейки = "П000202102_1" Тогда
						ОбластьЯчейкиТаблицы.Текст    = "21";
					Иначе
						ОбластьЯчейкиТаблицы.Текст    = ЗначениеЯчейки;
					КонецЕсли; 
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СтрНайти(Заголовок, СтруктураРеквизитовФормы.СтрПериодОтчета) = 0 Тогда
		Заголовок = Заголовок + " за " + СтруктураРеквизитовФормы.СтрПериодОтчета;
	КонецЕсли;
	
	ОргСтр = " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")";
	Если СтрНайти(Заголовок, ОргСтр) = 0 Тогда
		Заголовок = Заголовок + ОргСтр;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ВыполнитьПроверкуПередОткрытием", 0.1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуПередОткрытием()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОткрытиемФормыРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
			
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
				
		Возврат;
		
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
    
	РегламентированнаяОтчетность.ПриЗакрытииРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеТабличногоДокументаФормаОтчетаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	// Не обрабатывать, если выделены смежные или неименованные ячейки
	Если Лев(Область.Имя, 1) = "R" Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "ОргАдрес" Тогда
		РегламентированнаяОтчетностьКлиент.ОбработкаАдресаВСтатистическомОтчете(ЭтаФорма, Область, СтандартнаяОбработка);
	Иначе
		
		мФормаОтчета = ПолеТабличногоДокументаФормаОтчета;
		ТекГруппа = Лев(Область.Имя, 7);
		Если ТекГруппа = "П000101" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомСтр = 1 по 6 Цикл
				Если Область.Имя = "П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01" Тогда
					мФормаОтчета.Области["П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение
					= ?(мФормаОтчета.Области["П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение = "X", "", "X");
				Иначе
					мФормаОтчета.Области["П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение = "";
				КонецЕсли;
			КонецЦикла;
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000002" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомКол = 1 по 8 Цикл
				Если Область.Имя = "П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
					мФормаОтчета.Области["П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение
					= ?(мФормаОтчета.Области["П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
				Иначе
					мФормаОтчета.Области["П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
				КонецЕсли;
			КонецЦикла;
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000003" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомСтр = 1 по 2 Цикл
				Для НомКол = 1 по 7 Цикл
					Если Область.Имя = "П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
						мФормаОтчета.Области["П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение
						= ?(мФормаОтчета.Области["П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
					Иначе
						Если Сред(Область.Имя, 8, 4) = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") Тогда
							мФормаОтчета.Области["П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000004" Тогда
			СтандартнаяОбработка = Ложь;
			УстановитьЗначокВГруппеЯчеек(Область, 1, 3, 0);
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000005" Тогда
			СтандартнаяОбработка = Ложь;
			УстановитьЗначокВГруппеЯчеек(Область, 1, 3, 0);
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000006" Тогда
			СтандартнаяОбработка = Ложь;
			УстановитьЗначокВГруппеЯчеек(Область, 2, 3, 0);
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000007" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомКол = 1 по 4 Цикл
				Для НомСтр = 1 По 5 Цикл
					Если Область.Имя = "П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
						мФормаОтчета.Области["П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение 
						= ?(мФормаОтчета.Области["П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
						Если мФормаОтчета.Области["П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X" Тогда
							Для ТекНомСтр = 1 По 5 Цикл
								Если ТекНомСтр = НомСтр Тогда
									Продолжить;
								КонецЕсли;
								мФормаОтчета.Области["П000007" + Формат(ТекНомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;	
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000008" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомСтр = 1 по 7 Цикл
				Для НомКол = 1 по 4 Цикл
					Если Область.Имя = "П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
						Если Область.Имя = "П000008000104" Или Область.Имя = "П000008000204" Тогда
							Продолжить;
						Конецесли;
						мФормаОтчета.Области["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение
						= ?(мФормаОтчета.Области["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
					Иначе
						Если Сред(Область.Имя, 8, 4) = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") И Число(Сред(Область.Имя, 12, 2)) <= 4 Тогда
							Если Область.Имя = "П000008000104" Или Область.Имя = "П000008000204" Тогда
								Продолжить;
							Конецесли;
							мФормаОтчета.Области["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Для НомСтр = 1 по 7 Цикл
				Для НомКол = 5 по 7 Цикл
					Если Область.Имя = "П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
						мФормаОтчета.Области["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение
						= ?(мФормаОтчета.Области["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
					Иначе
						Если Сред(Область.Имя, 8, 4) = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")  И Число(Сред(Область.Имя, 12, 2)) >= 5 Тогда
							мФормаОтчета.Области["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000009" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомСтр = 1 по 13 Цикл
				Если Область.Имя = "П000009" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01" Тогда
					мФормаОтчета.Области["П000009" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение
					= ?(мФормаОтчета.Области["П000009" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение = "X", "", "X");
				КонецЕсли;
			КонецЦикла;
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000010" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомКол = 1 по 2 Цикл
				Для НомСтр = 1 По 3 Цикл
					Если Область.Имя = "П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
						мФормаОтчета.Области["П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение 
						= ?(мФормаОтчета.Области["П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
						Если мФормаОтчета.Области["П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X" Тогда
							Для ТекНомСтр = 1 По 3 Цикл
								Если ТекНомСтр = НомСтр Тогда
									Продолжить;
								КонецЕсли;
								мФормаОтчета.Области["П000010" + Формат(ТекНомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;	
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000011" Тогда
			СтандартнаяОбработка = Ложь;
			Для НомСтр = 1 по 2 Цикл
				Для НомКол = 1 по 6 Цикл
					Если Область.Имя = "П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
						мФормаОтчета.Области["П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение
						= ?(мФормаОтчета.Области["П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
					Иначе
						Если Сред(Область.Имя, 8, 4) = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") Тогда
							мФормаОтчета.Области["П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Модифицированность = Истина;
		ИначеЕсли ТекГруппа = "П000012" Тогда
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 6 Или Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 12 Тогда
				СтандартнаяОбработка = Ложь;
				Для НомСтр = 1 по 5 Цикл
					Если Область.Имя = "П000012" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01" Тогда
						мФормаОтчета.Области["П000012" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение
						= ?(мФормаОтчета.Области["П000012" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"].Значение = "X", "", "X");
					КонецЕсли;
				КонецЦикла;
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформацииЗавершение(Результат, Параметры) Экспорт
	
	РегламентированнаяОтчетностьКлиент.ОбновитьАдресВТабличномДокументеСтатистическойОтчетности(Результат, Параметры.Область, СтруктураРеквизитовФормы);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначокВГруппеЯчеек(Область, КоличествоИтераций, КоличествоКолонокВГруппе, Смещение)
	
	мФормаОтчета = ПолеТабличногоДокументаФормаОтчета;
	СтрокаРаздела = Лев(Область.Имя, 11);
	Если КоличествоКолонокВГруппе = 3 Тогда
		Для НомИтерации = 1 По КоличествоИтераций Цикл
			Если Область.Имя = СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 2, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
				мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 2, "ЧЦ=2; ЧВН=; ЧГ=")].Значение 
				= ?(мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 2, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
				Если мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 2, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X" Тогда
					мФормаОтчета.Области[СтрокаРаздела  + Формат(3 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
					мФормаОтчета.Области[СтрокаРаздела  + Формат(3 * НомИтерации + Смещение,     "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
				КонецЕсли;
			КонецЕсли;
			Если Область.Имя = СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
				мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение
				= ?(мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
				Если мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X" Тогда
					мФормаОтчета.Области[СтрокаРаздела  + Формат(3 * НомИтерации + Смещение - 2, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
					мФормаОтчета.Области[СтрокаРаздела  + Формат(3 * НомИтерации + Смещение,     "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
				КонецЕсли;
			КонецЕсли;
			Если Область.Имя = СтрокаРаздела + Формат(3 * НомИтерации + Смещение, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
				мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение, "ЧЦ=2; ЧВН=; ЧГ=")].Значение
				= ?(мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
				Если мФормаОтчета.Области[СтрокаРаздела + Формат(3 * НомИтерации + Смещение,     "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X" Тогда
					мФормаОтчета.Области[СтрокаРаздела  + Формат(3 * НомИтерации + Смещение - 2, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
					мФормаОтчета.Области[СтрокаРаздела  + Формат(3 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли КоличествоКолонокВГруппе = 2 Тогда
		Для НомИтерации = 1 По КоличествоИтераций Цикл
			Если Область.Имя = СтрокаРаздела + Формат(2 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
				мФормаОтчета.Области[СтрокаРаздела + Формат(2 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение 
				= ?(мФормаОтчета.Области[СтрокаРаздела + Формат(2 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
				Если мФормаОтчета.Области[СтрокаРаздела + Формат(2 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X" Тогда
					мФормаОтчета.Области[СтрокаРаздела  + Формат(2 * НомИтерации + Смещение,     "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
				КонецЕсли;
			КонецЕсли;
			Если Область.Имя = СтрокаРаздела + Формат(2 * НомИтерации + Смещение, "ЧЦ=2; ЧВН=; ЧГ=") Тогда
				мФормаОтчета.Области[СтрокаРаздела + Формат(2 * НомИтерации + Смещение, "ЧЦ=2; ЧВН=; ЧГ=")].Значение 
				= ?(мФормаОтчета.Области[СтрокаРаздела + Формат(2 * НомИтерации + Смещение, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X", "", "X");
				Если мФормаОтчета.Области[СтрокаРаздела + Формат(2 * НомИтерации + Смещение,     "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "X" Тогда
					мФормаОтчета.Области[СтрокаРаздела  + Формат(2 * НомИтерации + Смещение - 1, "ЧЦ=2; ЧВН=; ЧГ=")].Значение = "";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеТабличногоДокументаФормаОтчетаПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	Если Область.Имя = "ДатаСоставленияОтчета" Тогда 
		ДатаПодписи = Область.Значение;
		ЗаполнитьСведенияОбОрганизацииНаКлиенте(Истина);
		Модифицированность = Истина;
		Возврат;
	ИначеЕсли Область.Имя = "НомерКорректировки" Тогда 
		Если Область.Значение = 0 Тогда 
			СтруктураРеквизитовФормы.ВидДокумента = 0;
			НомерКорректировки = 0;
		Иначе 
			СтруктураРеквизитовФормы.ВидДокумента = 1;
			НомерКорректировки = Область.Значение;
		КонецЕсли;
		Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение И Область.ТипЗначения.СодержитТип(Тип("Число")) Тогда
		Если Область.Значение = 0 И Область.ТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти = 0 Тогда
			
			ФорматПредставленияНуля = РегламентированнаяОтчетностьКлиентСервер.ПолучитьПредставлениеНуляИзСтрокиФормата(Область.Формат);
			
			ОтображениеНуля = СокрЛП(Формат(0, РегламентированнаяОтчетностьКлиентСервер.ЗаменитьПредставлениеНуляВСтрокеФормата(Область.Формат, "ЧН=")));
			Если ПустаяСтрока(ОтображениеНуля) Тогда
				ОтображениеНуля = "0";
			КонецЕсли;
			ТипСтрокиЗаполнения = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(СтрДлина(ОтображениеНуля), ДопустимаяДлина.Фиксированная));
			СтрокаЗаполнения = ТипСтрокиЗаполнения.ПривестиЗначение();
			
			Список = Новый СписокЗначений;
			Список.Добавить("ЧН=' '", "  <Пустое значение>    " + СтрокаЗаполнения);
			Список.Добавить("ЧН=" + ОтображениеНуля, "  Отображать как """ + ОтображениеНуля + """  ");
			
			НайденнаяСтрока = Список.НайтиПоЗначению(ФорматПредставленияНуля);
			
			ДополнительныеПараметры = Новый Структура("Область", Область);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПолеТабличногоДокументаФормаОтчетаПриИзмененииСодержимогоОбластиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
						
			// обход ошибок платформы: в тонком клиенте не работает ПоказатьВыборИзСписка (ПоказатьВыборИзМеню не работает в веб-клиенте 
			// и в событии ПриИзмененииСодержимогоОбласти табличного документа - где мы его и хотим использовать прежде всего)
			# Если ВебКлиент Тогда
			
				Если НайденнаяСтрока = Неопределено Тогда
					ПоказатьВыборИзСписка(ОписаниеОповещения, Список, Элемент);
				Иначе
					ПоказатьВыборИзСписка(ОписаниеОповещения, Список, Элемент, НайденнаяСтрока);
				КонецЕсли;
				
			#Иначе
				
				Список.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите значение", Элемент);
					
			#КонецЕсли
			
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеТабличногоДокументаФормаОтчетаПриИзмененииСодержимогоОбластиЗавершение(СписокЭлемент, ДополнительныеПараметры) Экспорт
	
	Область = ДополнительныеПараметры.Область;
	
	Если СписокЭлемент <> Неопределено  Тогда
		
		Область.Формат = РегламентированнаяОтчетностьКлиентСервер.ЗаменитьПредставлениеНуляВСтрокеФормата(Область.Формат, СписокЭлемент.Значение);
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Истина;
	ЗаполнитьСведенияОбОрганизацииНаКлиенте();
	СтруктураРеквизитовФормы.мВПрограммеИзмененаОрганизация = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтчет(Команда)
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Внимание! Будут очищены все показатели отчета.%1Продолжить операцию?'"), Символы.ПС);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьОтчетЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтчетЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда        
		Возврат;        
	Иначе       
		Очистить();       
	КонецЕсли;
	
КонецПроцедуры // ОчиститьОтчет()

// Процедура очищает содержимое редактируемых и вычисляемых
// ячеек табличного документа.
//
&НаКлиенте
Процедура Очистить() Экспорт
		
	ОчиститьТабличноеПолеНаСервере();

	// устанавливаем флаг модифицированности формы
	Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличноеПолеНаСервере()
	
	// Список ячеек, которые очищать не нужно
	Перем СписокПоказателейНеПодлежащихОчистке;

	ВыбТабличноеПоле = ПолеТабличногоДокументаФормаОтчета;
	
	СписокПоказателейНеПодлежащихОчистке = Новый СписокЗначений;
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ПериодОтчета"].Значение,          "ПериодОтчета");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ДатаСоставленияОтчета"].Значение, "ДатаСоставленияОтчета");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргНазв"].Значение,               "ОргНазв");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргАдрес"].Значение,              "ОргАдрес");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргКодОКПО"].Значение,            "ОргКодОКПО");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргКодНазв"].Значение,                  "ОргКодНазв");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргКодЗнач"].Значение,                  "ОргКодЗнач");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргКодНазв1"].Значение,                  "ОргКодНазв1");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргКодЗнач1"].Значение,                  "ОргКодЗнач1");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргДолжностьИсп"].Значение,       "ОргДолжностьИсп");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргТелефонИсп"].Значение,         "ОргТелефонИсп");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргИсполнитель"].Значение,        "ОргИсполнитель");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["НомерКорректировки"].Значение,       "НомерКорректировки");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ДатаСоставленияОтчета"].Значение,       "ДатаСоставленияОтчета");
	СписокПоказателейНеПодлежащихОчистке.Добавить(ВыбТабличноеПоле.Области["ОргАдресЭлектроннойПочты"].Значение,       "ОргАдресЭлектроннойПочты");

	ВыбТабличноеПоле.Очистить();
	ВыбТабличноеПоле.Вывести(Отчеты[Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)].ПолучитьМакет("ФормаОтчета2015Кв1_ФормаОтчета"));
	
	ПолеТабличногоДокументаФормаОтчета = ВыбТабличноеПоле;
	
	Для каждого ЭлементСписка Из СписокПоказателейНеПодлежащихОчистке Цикл
	
		ВыбТабличноеПоле.Области[ЭлементСписка.Представление].Значение = ЭлементСписка.Значение;
	
	КонецЦикла;
	
	ДоступностьРазделов();
	
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьЯчейку(Ячейка) Экспорт
	
	ИмяПоляТабличногоДокумента = "ПолеТабличногоДокументаФормаОтчета";
	
	НайденнаяОбласть = ЭтаФорма[ИмяПоляТабличногоДокумента].Области.Найти(Ячейка.ИмяЯчейки);
	
	Если НЕ НайденнаяОбласть = Неопределено Тогда
		
		Элементы[ИмяПоляТабличногоДокумента].ТекущаяОбласть = НайденнаяОбласть;
		
	ИначеЕсли Ячейка.СтрокаПП <> Неопределено И ЗначениеЗаполнено(Ячейка.СтрокаПП) Тогда
		
		НайденнаяОбласть = ЭтаФорма[ИмяПоляТабличногоДокумента].Области.Найти(Ячейка.ИмяЯчейки + Ячейка.СтрокаПП);
		
		Если НЕ НайденнаяОбласть = Неопределено Тогда
			
			Элементы[ИмяПоляТабличногоДокумента].ТекущаяОбласть = НайденнаяОбласть;
			
		Иначе
			
			НайденнаяОбласть = ЭтаФорма[ИмяПоляТабличногоДокумента].Области.Найти(Ячейка.ИмяЯчейки + "_" + Ячейка.СтрокаПП);
			
			Если НЕ НайденнаяОбласть = Неопределено Тогда
				
				Элементы[ИмяПоляТабличногоДокумента].ТекущаяОбласть = НайденнаяОбласть;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		НайденнаяОбласть = ЭтаФорма[ИмяПоляТабличногоДокумента].Области.Найти(Ячейка.ИмяЯчейки + "1");
		
		Если НЕ НайденнаяОбласть = Неопределено Тогда
			
			Элементы[ИмяПоляТабличногоДокумента].ТекущаяОбласть = НайденнаяОбласть;
			
		Иначе
			
			НайденнаяОбласть = ЭтаФорма[ИмяПоляТабличногоДокумента].Области.Найти(Ячейка.ИмяЯчейки + "_1");
			
			Если НЕ НайденнаяОбласть = Неопределено Тогда
				
				Элементы[ИмяПоляТабличногоДокумента].ТекущаяОбласть = НайденнаяОбласть;
				
			Иначе
				
				Элементы[ИмяПоляТабличногоДокумента].ТекущаяОбласть = ЭтаФорма[ИмяПоляТабличногоДокумента].Область(Ячейка.ИмяЯчейки);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланк(Команда)
	
	Отказ = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьБланкЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередПечатьюРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланкЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Команда = ДополнительныеПараметры.Команда;
		
	Если Команда <> Неопределено Тогда
		Печать(Команда.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(ВидПечати, НеИзФормыОтчета = Ложь) Экспорт
    
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1. Формируется печатная форма...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Печать);
	
	Если НЕ ПечатьНаСервере(ВидПечати) Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(ЭтаФорма, ВидПечати, Неопределено, СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
		
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере(ВидПечати)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");

		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ТабличныйДокумент = ЭтаФорма["ПолеТабличногоДокументаФормаОтчета"];
	
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НаименованиеЛиста",  "Форма ДАС");
	СтруктураПараметров.Вставить("ОриентацияЛиста",    "Ландшафт");
	СтруктураПараметров.Вставить("ИмяСтраницы",        "ДАС");
	Структурапараметров.Вставить("ИмяОбластиТаблПоля", "ПолеТабличногоДокументаФормаОтчета");
	СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(ЭтаФорма.Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	РегламентированнаяОтчетность.УдалитьНомерКорректировки(СтруктураРеквизитовФормы.мПечатныеФормы[0].Значение);
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(ЭтаФорма, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ВвестиПоказатель(Элемент, Область, КодПоказателя, Знач ЭтоСумма, Знач ТекстВыбора, ТаблицаВыбора, СтандартнаяОбработка, КолонкаПоиска = "Код") Экспорт
	
	Если ТаблицаВыбора = Неопределено 
		Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если (Область.Имя = КодПоказателя) Тогда
		ИсходноеЗначение = ?(ТипЗнч(Область.Значение) = Тип("Строка"), СокрЛП(Область.Значение), Область.Значение);
	Иначе
		Разделитель = ?(Лев(Область.Имя, СтрДлина(КодПоказателя) + 1) = КодПоказателя + "_", "_", "");
		ИндексОбласти = 1;
		ИсходноеЗначение = "";
		Пока ТекущийЭлемент.Области.Найти(КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")) <> Неопределено Цикл
			ИсходноеЗначение = ИсходноеЗначение
				+ Строка(ТекущийЭлемент.Области[КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")].Значение);
			ИндексОбласти = ИндексОбласти + 1;
		КонецЦикла;
		ИсходноеЗначение = СокрЛП(ИсходноеЗначение);
	КонецЕсли;
	ИсходнаяСтрока = ТаблицаВыбора.Найти(ИсходноеЗначение, КолонкаПоиска);
	
	Если ИсходнаяСтрока = Неопределено Тогда
		РезультатВыбора = ТаблицаВыбора.ВыбратьСтроку(ТекстВыбора);
	Иначе
		РезультатВыбора = ТаблицаВыбора.ВыбратьСтроку(ТекстВыбора, ИсходнаяСтрока);
	КонецЕсли;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗагрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзФайлаОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РегламентированнаяОтчетностьЗагрузкаКлиент.ЗагрузитьИзФайлаОтчет(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаОтчетаИзФайла(ДанныеДляЗагрузки) Экспорт
	
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон(НСтр("ru='Отчет ""%1"" не сохранен.'"), ЭтотОбъект.Заголовок);
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки)
	
	РегламентированнаяОтчетность.СформироватьСтруктуруПоказателей(ЭтаФорма);
	
	ПараметрыОтчета = СформироватьСтруктуруПараметров();
	
	ДеревоДляЗагрузки = РегламентированнаяОтчетность.ПолучитьДеревоВыгрузки(ЭтаФорма, "СхемаВыгрузкиXML2015Кв1");
	
	Если НЕ РегламентированнаяОтчетностьЗагрузка.ЗагрузкаОтчетаИзФайла(
		ЭтотОбъект, ПараметрыОтчета, ДанныеДляЗагрузки, ДеревоДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьИзФормыПослеСохраненияЗавершение", ЭтотОбъект);
	Если Модифицированность Тогда
		СохранитьНаКлиенте(, ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИзФормыПослеСохраненияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыВыгрузки = Неопределено;
	ТекстВыгрузки = Неопределено;
	Если НЕ УниверсальнаяВыгрузкаXMLПроверкаВозможностиВыгрузкиНаСервере(ТекстВыгрузки, ПараметрыВыгрузки) Тогда
		ТекстВопроса = НСтр("ru='В ходе выгрузки были найдены ошибки.'");
		КнопкиВопроса = Новый СписокЗначений;
		КнопкиВопроса.Добавить(КодВозвратаДиалога.Да, "Продолжить выгрузку");
		КнопкиВопроса.Добавить(КодВозвратаДиалога.Нет, "Показать ошибки");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьИзФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиВопроса, , КодВозвратаДиалога.Нет);
	Иначе
		ВыгрузитьОтчет();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИзФормыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыгрузитьОтчет(Истина);
	Иначе
		СпДокОсн = Новый СписокЗначений;
		СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
		ОшибкиОтчета = Новый Массив;
		РегламентированнаяОтчетностьКлиент.ПроверитьРегламентированныеОтчеты(СпДокОсн, ОшибкиОтчета);
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуНавигацииПоОшибкамВыгрузки(ОшибкиОтчета);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВыгрузкуОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчета()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуОтчетаЗавершение", ЭтотОбъект);
	
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Организация не выбрана! Выгрузка невозможна.'");
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.Проверить(СпДокОсн);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчет(ВыгружатьСОшибками = Ложь) Экспорт
	
	ДополнительныеПараметры = Новый Структура("ВыгружатьСОшибками", ВыгружатьСОшибками);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьОтчетЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(, ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыгрузитьОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.СформироватьИЗаписать(СпДокОсн,,,,,,,,,ДополнительныеПараметры.ВыгружатьСОшибками);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПоказатели() Экспорт
	
	РегламентированнаяОтчетность.СформироватьСтруктуруПоказателей(ЭтаФорма);
	ДеревоВыгрузки = РегламентированнаяОтчетность.ПолучитьДеревоВыгрузки(ЭтаФорма, "СхемаВыгрузкиXML2015Кв1");
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	КоллекцияСписковВыбора = "";
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки);
	Если НЕ РегламентированнаяОтчетность.ПроверитьДанные(ЭтаФорма, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ТекущийФорматВыгрузки(Организация)
	
	Возврат РегламентированнаяОтчетность.ФорматВыгрузкиСтатистическойОтчетностиВЭлектронномВиде(Организация);
	
КонецФункции

&НаКлиенте
Функция УниверсальнаяВыгрузка(ТекстВыгрузки = Неопределено, ПроверятьБлокировки = Истина, ИмяФайлаВыгрузки = "", ВыгружатьСОшибками = Ложь) Экспорт
	
	Перем ПараметрыВыгрузки;
	
	Если ТекущийФорматВыгрузки(СтруктураРеквизитовФормы.Организация) = Неопределено Тогда
		РегламентированнаяОтчетностьКлиент.ПоказатьФормуНастроекФорматаВыгрузкиСтатистическойОтчетностиВЭлектронномВиде(
			СтруктураРеквизитовФормы.Организация, Ложь, Истина);
			
		Возврат "НеВыбранФормат";
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Если СтрНайти(Заголовок, СтруктураРеквизитовФормы.СтрПериодОтчета) = 0 Тогда
			ТекстЗаголовка = Заголовок + " за " + СтруктураРеквизитовФормы.СтрПериодОтчета;
		Иначе
			ТекстЗаголовка = Заголовок;
		КонецЕсли;
		
		ОргСтр = " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")";
		Если СтрНайти(Заголовок, ОргСтр) = 0 Тогда
			ТекстЗаголовка = ТекстЗаголовка + ОргСтр;
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отчет """ + ТекстЗаголовка + """ не сохранен.";
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если НЕ ВыгружатьСОшибками И НЕ УниверсальнаяВыгрузкаXMLПроверкаВозможностиВыгрузкиНаСервере(ТекстВыгрузки, ПараметрыВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ УниверсальнаяВыгрузкаXMLПроверкаДанныхНаСервере(ТекстВыгрузки, ПараметрыВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИмяФайлаВыгрузки = ПараметрыВыгрузки.ИмяФайла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция УниверсальнаяВыгрузкаXMLПроверкаВозможностиВыгрузкиНаСервере(ТекстВыгрузки, ПараметрыВыгрузки) Экспорт
	
	РегламентированнаяОтчетность.СформироватьСтруктуруПоказателей(ЭтаФорма);
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	ДеревоВыгрузки = РегламентированнаяОтчетность.ПолучитьДеревоВыгрузки(ЭтаФорма, "СхемаВыгрузкиXML2015Кв1");
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция УниверсальнаяВыгрузкаXMLПроверкаДанныхНаСервере(ТекстВыгрузки, ПараметрыВыгрузки) Экспорт
	
	РегламентированнаяОтчетность.СформироватьСтруктуруПоказателей(ЭтаФорма);
	Если ПараметрыВыгрузки = Неопределено Тогда 
		ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	КонецЕсли;
	ДеревоВыгрузки = РегламентированнаяОтчетность.ПолучитьДеревоВыгрузки(ЭтаФорма, "СхемаВыгрузкиXML2015Кв1");
	ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки);
	Если НЕ РегламентированнаяОтчетность.ПроверитьДанные(ЭтаФорма, ДеревоВыгрузки) Тогда
		КоллекцияСписковВыбора = "";
		Возврат Ложь;
	КонецЕсли;
	
	ТекстВыгрузки = РегламентированнаяОтчетность.ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки);
	
	КоллекцияСписковВыбора = "";
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки)
	
	СтатусПроверки = Истина;
	
	ИмяПоляТаблДокумента = "ПолеТабличногоДокументаФормаОтчета";
	
	// проверка показателей раздела
	Если ПустаяСтрока(ПараметрыВыгрузки.ОКПО) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не задан код ОКПО организации!",
			ИмяПоляТаблДокумента, "ОргКодОКПО");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.ОргНазв) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не задано наименование организации!",
			ИмяПоляТаблДокумента, "ОргНазв");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.ОргИсполнитель) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не указаны Ф.И.О. должностного лица, ответственного за предоставление статистической информации!",
			ИмяПоляТаблДокумента, "ОргИсполнитель");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.ОргДолжностьИсп) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не указана должность лица, ответственного за предоставление статистической информации!",
			ИмяПоляТаблДокумента, "ОргДолжностьИсп");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ПараметрыВыгрузки.ОргТелефонИсп) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не указан телефон должностного лица, ответственного за предоставление статистической информации!",
			ИмяПоляТаблДокумента, "ОргТелефонИсп");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// Проверка на незаполненный отчет.
	Если НЕ РегламентированнаяОтчетность.ПроверитьРазделыНаНаличиеИнформации(ЭтаФорма, ДеревоВыгрузки, "ПолеТабличногоДокументаФормаОтчета") Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не заполнены Разделы отчета!",
			ИмяПоляТаблДокумента, "");
		СтатусПроверки = Ложь;
		Возврат СтатусПроверки;
	КонецЕсли;
	
	// КОНТРОЛЬ показателей формы (взято из шаблона для Формы ДАС).
	
	// По разделу 1.
	
	Если Не ЗначениеЗаполнено(ПараметрыВыгрузки.П000001000101_Ч) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 1 - требует заполнения (значение > 0)!",
			ИмяПоляТаблДокумента, "П000001000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 1.1.
	
	ОтмеченоВариантовОтвета = 0;
	Для НомСтр = 1 По 6 Цикл
		Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01_Ч"]) Тогда
			ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
		КонецЕсли;
	КонецЦикла;
	Если ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 1.1 - возможен один вариант ответа!",
			ИмяПоляТаблДокумента, "П000101000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 2.
	
	ОтмеченоВариантовОтвета = 0;
	Для НомКол = 1 По 8 Цикл
		Если ЗначениеЗаполнено(ПараметрыВыгрузки["П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
			ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
		КонецЕсли;
	КонецЦикла;
	Если ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 2 - возможен один вариант ответа!",
			ИмяПоляТаблДокумента, "П000002000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(ПараметрыВыгрузки.П000002000101_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000002000102_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000002000103_Ч)) И Не ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000103_Ч) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 2 заполнены графы 1-3,"
			+ " то должна быть заполнена графа 3 раздела 4!",
			ИмяПоляТаблДокумента, "П000004000103");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(ПараметрыВыгрузки.П000002000107_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000002000108_Ч))
		И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000101_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000102_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 2 заполнены графы 7-8,"
			+ " то должны быть заполнены графы 1,2 раздела 4!",
			ИмяПоляТаблДокумента, "П000004000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 3.
	
	Для НомСтр = 1 По 2 Цикл
		ОтмеченоВариантовОтвета = 0;
		Для НомКол = 1 По 7 Цикл
			Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
				ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
			КонецЕсли;
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 3 - в каждой строке возможен только один вариант ответа"
				+ " (строка " + НомСтр + ")!",
				ИмяПоляТаблДокумента, "П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если (ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000101_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000102_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000103_Ч))
		И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000102_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000103_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 3 по строке 1 заполнены графы 1-3,"
			+ " то должны быть заполнены графы 2,3 раздела 4!",
			ИмяПоляТаблДокумента, "П000004000102");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000104_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000105_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000106_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000107_Ч))
		И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000101_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000102_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 3 по строке 1 заполнены графы 4-7,"
			+ " то должны быть заполнены графы 1,2 раздела 4!",
		ИмяПоляТаблДокумента, "П000004000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 4.
	
	ОтмеченоВариантовОтвета = 0;
	Для НомКол = 1 По 3 Цикл
		Если ЗначениеЗаполнено(ПараметрыВыгрузки["П0000040001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
			ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
		КонецЕсли;
	КонецЦикла;
	Если ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 4 - возможен один вариант ответа!",
			ИмяПоляТаблДокумента, "П000004000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 5.
	
	ОтмеченоВариантовОтвета = 0;
	Для НомКол = 1 По 3 Цикл
		Если ЗначениеЗаполнено(ПараметрыВыгрузки["П0000050001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
			ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
		КонецЕсли;
	КонецЦикла;
	Если ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 5 - возможен один вариант ответа!",
			ИмяПоляТаблДокумента, "П000005000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 6.
	
	Для НомСтр = 1 По 4 Цикл
		ОтмеченоВариантовОтвета = 0;
		Для НомКол = 1 По 3 Цикл
			Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000006" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
				ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
			КонецЕсли;
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 6 - в графах 1-3 по каждой строке один вариант ответа!",
				ИмяПоляТаблДокумента, "П000006" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01");
			СтатусПроверки = Ложь;
		КонецЕсли;
		ОтмеченоВариантовОтвета = 0;
		Для НомКол = 4 По 6 Цикл
			Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000006" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
				ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
			КонецЕсли;
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 6 - в графах 4-6 по каждой строке один вариант ответа!",
				ИмяПоляТаблДокумента, "П000006" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "04");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// По разделу 7.
	
	Для НомКол = 1 По 4 Цикл
		ОтмеченоВариантовОтвета = 0;
		Для НомСтр = 1 По 5 Цикл
			Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
				ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
			КонецЕсли;
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 7 - в каждой графе возможен только один вариант ответа"
				+ " (графа " + НомКол + ")!",
				ИмяПоляТаблДокумента, "П0000070001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ="));
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// По разделу 8.
	
	ОтмеченоВариантовОтвета = 0;
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000101_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000102_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000103_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000201_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000202_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000203_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	Если ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 8 - в графах 1-3 по каждой строке один вариант ответа"
			+ " (строка 1 и 2 исключают друг-друга)!",
			ИмяПоляТаблДокумента, "П000008000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Для НомСтр = 3 По 7 Цикл
		ОтмеченоВариантовОтвета = 0;
		Для НомКол = 1 По 4 Цикл
			ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]), ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 8 - в графах 1-4 по каждой строке один вариант ответа"
				+ " (строка " + НомСтр + ")!",
				ИмяПоляТаблДокумента, "П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ОтмеченоВариантовОтвета = 0;
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000105_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000106_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000107_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000205_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000206_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000207_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	Если ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 8 - в графах 5-7 по каждой строке один вариант ответа"
			+ " (строка 1 и 2; исключают друг-друга)!", ИмяПоляТаблДокумента, "П000008000105");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Для НомСтр = 3 По 7 Цикл
		ОтмеченоВариантовОтвета = 0;
		Для НомКол = 5 По 7 Цикл
			ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]), ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 8 - в графах 5-7 по каждой строке один вариант ответа"
				+ " (строка " + НомСтр + ")!",
				ИмяПоляТаблДокумента, "П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "05");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если (ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000101_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000102_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000103_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000105_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000106_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000107_Ч))
		И (ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000201_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000202_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000203_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000205_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000206_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000207_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 8 - если заполнена строка 1 по какой-либо графе,"
			+ " то строка 2 не заполняется!",
		ИмяПоляТаблДокумента, "П000008000201");
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 8 - если заполнена строка 2 по какой-либо графе,"
			+ " то строка 1 не заполняется!",
			ИмяПоляТаблДокумента, "П000008000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 9.
	
	ОтмеченоВариантовОтвета = 0;
	Для НомСтр = 1 По 13 Цикл
		Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000009" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01_Ч"]) Тогда
			ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
			Если ОтмеченоВариантовОтвета > 3 Тогда
				РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
					"Не выполнено условие контроля: раздел 9 - возможно не более трех вариантов ответа!",
					ИмяПоляТаблДокумента, "П000009000101");
				СтатусПроверки = Ложь;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009001201_Ч) И ОтмеченоВариантовОтвета > 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: раздел 9 - если заполнена строка 12, то другие строки не заполняются!",
			ИмяПоляТаблДокумента, "П000009001201");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009000101_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000101_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000003000102_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 9 заполнена строка 1,"
			+ " то должны быть заполнены строка 1 графы 1,2 раздела 3!",
		ИмяПоляТаблДокумента, "П000003000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009000101_Ч) И Не ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000103_Ч) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 9 заполнена строка 1,"
			+ " то должны быть заполнена графа 3 раздела 4!",
			ИмяПоляТаблДокумента, "П000004000103");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009000101_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000202_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000203_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 9 заполнена строка 1,"
			+ " то должны быть заполнены строка 2 графы 2,3 раздела 6!",
			ИмяПоляТаблДокумента, "П000006000202");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009000201_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000501_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000502_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 9 заполнена строка 2,"
			+ " то должна быть заполнена строка 5 графы 1,2 раздела 8!",
			ИмяПоляТаблДокумента, "П000008000501");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009000401_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000402_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000403_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 9 заполнена строка 4,"
			+ " то должны быть заполнены строка 4 графы 2,3 раздела 8!",
			ИмяПоляТаблДокумента, "П000008000402");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009000701_Ч) И Не ЗначениеЗаполнено(ПараметрыВыгрузки.П000005000103_Ч) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 9 заполнена строка 7,"
			+ " то должна быть заполнена графа 3 раздела 5!",
			ИмяПоляТаблДокумента, "П000005000103");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	ОтмеченоВариантовОтвета = 0;
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000601_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000602_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000009000201_Ч) И ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 9 заполнена строка 2,"
			+ " то должна быть заполнена строка 6 графы 1,2 раздела 8!",
			ИмяПоляТаблДокумента, "П000008000601");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 10.
	
	Для НомКол = 1 По 2 Цикл
		ОтмеченоВариантовОтвета = 0;
		Для НомСтр = 1 По 3 Цикл
			Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
				ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
			КонецЕсли;
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 10 - в каждой графе возможен только один вариант ответа"
				+ " (графа " + НомКол + ")!",
				ИмяПоляТаблДокумента, "П0000100001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ="));
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000101_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000101_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000102_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 1 графа 1,"
			+ " то должны быть заполнены графы 1,2 раздела 4!",
			ИмяПоляТаблДокумента, "П000004000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000201_Ч) И Не ЗначениеЗаполнено(ПараметрыВыгрузки.П000005000102_Ч) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 2 графа 1,"
			+ " то должна быть заполнена графа 2 раздела 5!",
			ИмяПоляТаблДокумента, "П000005000102");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	ОтмеченоВариантовОтвета = 0;
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000107_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000205_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000302_Ч) И ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 3 графа 2,"
			+ " то должна быть заполнена строка 1 графа 7 или строка 2 графа 5 раздела 8!",
			ИмяПоляТаблДокумента, "П000008000107");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000301_Ч) И Не ЗначениеЗаполнено(ПараметрыВыгрузки.П000004000103_Ч) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 3 графа 1,"
			+ " то должна быть заполнена графа 3 раздела 4!",
			ИмяПоляТаблДокумента, "П000004000103");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	ОтмеченоВариантовОтвета = 0;
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000201_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000202_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000203_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000301_Ч) И ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 3 графа 1,"
			+ " то должны быть заполнены строка 2 графы 1-3 раздела 8!",
			ИмяПоляТаблДокумента, "П000008000201");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000301_Ч) И (ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000101_Ч)
		Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000102_Ч) Или ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000103_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 3 графа 1,"
			+ " то строка 1 графы 1-3 раздела 8 не заполняются!",
			ИмяПоляТаблДокумента, "П000008000101");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000102_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000104_Ч)
		И ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000204_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнены строка 1 графа 2,"
			+ " то должны быть заполнены строки 1,2 графа 4 раздела 6!",
			ИмяПоляТаблДокумента, "П000006000104");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000202_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000105_Ч)
		И ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000205_Ч) И ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000305_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнены строка 2 графа 2,"
			+ " то должны быть заполнены строки 1-3 графа 5 раздела 6!",
			ИмяПоляТаблДокумента, "П000006000105");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000302_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000106_Ч)
		И ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000206_Ч) И ЗначениеЗаполнено(ПараметрыВыгрузки.П000006000306_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнены строка 3 графа 2,"
			+ " то должны быть заполнены строки 1-3 графа 6 раздела 6!",
			ИмяПоляТаблДокумента, "П000006000106");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	ОтмеченоВариантовОтвета = 0;
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000107_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000307_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000407_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	ОтмеченоВариантовОтвета = ?(ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000707_Ч),
		ОтмеченоВариантовОтвета + 1, ОтмеченоВариантовОтвета);
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000302_Ч) И ОтмеченоВариантовОтвета <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 3 графа 2,"
			+ " то должны быть заполнены строки 1,3,4,7 графа 7 раздела 8!",
			ИмяПоляТаблДокумента, "П000008000107");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.П000010000302_Ч) И Не (ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000505_Ч)
		И ЗначениеЗаполнено(ПараметрыВыгрузки.П000008000605_Ч)) Тогда
		РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
			"Не выполнено условие контроля: если в разделе 10 заполнена строка 3 графа 2,"
			+ " то должны быть заполнены строки 5,6 графа 5 раздела 8!",
			ИмяПоляТаблДокумента, "П000008000505");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// По разделу 11.
	
	Для НомСтр = 1 По 2 Цикл
		ОтмеченоВариантовОтвета = 0;
		Для НомКол = 1 По 6 Цикл
			Если ЗначениеЗаполнено(ПараметрыВыгрузки["П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=")
				+ Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч"]) Тогда
				ОтмеченоВариантовОтвета = ОтмеченоВариантовОтвета + 1;
			КонецЕсли;
		КонецЦикла;
		Если ОтмеченоВариантовОтвета <> 1 Тогда
			РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма,
				"Не выполнено условие контроля: раздел 11 - в каждой строке возможен только один вариант ответа"
				+ " (строка " + НомСтр + ")!",
				ИмяПоляТаблДокумента, "П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтатусПроверки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки)
	
	РегламентированнаяОтчетность.ОбработатьУсловныеЭлементы(ЭтаФорма, ПараметрыВыгрузки, ДеревоВыгрузки); // формируем точную структуру XML-макета
	ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, ДеревоВыгрузки); // заполняем дерево данными
	РегламентированнаяОтчетность.ОтсечьНезаполненныеНеобязательныеУзлыСтатистики(ДеревоВыгрузки);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Узел, НомерСтроки = Неопределено)
	
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		
		Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
			Если НЕ ПустаяСтрока(Стр.Ключ) Тогда
				ПолныйКодПоказателя = Стр.Ключ + ?(ЗначениеЗаполнено(НомерСтроки), "_" + Формат(НомерСтроки, "ЧГ="), "");
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыВыгрузки.Свойство(ПолныйКодПоказателя, ЗначениеПоказателя) Тогда
					ФорматПредставленияНуля = Неопределено;
					Если ПараметрыВыгрузки.Свойство("ЧН" + ПолныйКодПоказателя, ФорматПредставленияНуля) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя, ФорматПредставленияНуля);
					Иначе
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				Иначе
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, "");
				КонецЕсли;
			Иначе
				Стр.Значение = "";
			КонецЕсли;
		ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
			РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ПараметрыВыгрузки[Сред(Стр.ЗначениеПоУмолчанию, 2)]);
		Иначе
			Стр.Значение = Стр.ЗначениеПоУмолчанию;
			Если НЕ ПустаяСтрока(Стр.Ключ) Тогда
				ПолныйКодПоказателя = Стр.Ключ + ?(ЗначениеЗаполнено(НомерСтроки), "_" + Формат(НомерСтроки, "ЧГ="), "");
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыВыгрузки.Свойство(ПолныйКодПоказателя, ЗначениеПоказателя) Тогда
					ФорматПредставленияНуля = Неопределено;
					Если ПараметрыВыгрузки.Свойство("ЧН" + ПолныйКодПоказателя, ФорматПредставленияНуля) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя, ФорматПредставленияНуля);
					Иначе
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				Иначе
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, "");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда // учтем оба варианта: кириллицу и латиницу
			Если Стр.Многострочность Тогда
				НомСтр = 1;
				ПодчиненныйЭлемент = РегламентированнаяОтчетность.ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(Стр);
				КлючПодчиненногоЭлемента = ПодчиненныйЭлемент.Ключ;
				Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки, КлючПодчиненногоЭлемента + "_" + Формат(НомСтр, "ЧГ=")) Цикл
					УзелСоответствующийСтроке = РегламентированнаяОтчетность.СкопироватьУзел(Узел, Стр);
					ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, УзелСоответствующийСтроке, НомСтр);
					НомСтр = НомСтр + 1;
				КонецЦикла;
			Иначе
				ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Стр, НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СформироватьИмяФайла(ПараметрыВыгрузки, ДопАтрибуты)
	
	Перем ПолученноеЗначение;
	
	КодОКУД        = ДопАтрибуты.OKUD;
	КодФормы       = ДопАтрибуты.idf;
	Периодичность  = ДопАтрибуты.idp;
	КодОКПО        = ПараметрыВыгрузки.ОКПО;
	РасчетныйГод   = ПараметрыВыгрузки.РасчПериод;
	ОтчетныйПериод = ПараметрыВыгрузки.ОтчПериод;
	
	ПараметрыВыгрузки.Свойство("ОКФС", ПолученноеЗначение);
	КодОКФС = ПолученноеЗначение;
	ПараметрыВыгрузки.Свойство("ОКВЭД", ПолученноеЗначение);
	КодОКВЭД = СтрЗаменить(ПолученноеЗначение, ".", "-");
	
	// Преобразование кодов - составляющих имени файла.
	КодыИФ = Новый Структура;
	КодыИФ.Вставить("Документ",       СтруктураРеквизитовФормы.мСохраненныйДок);
	КодыИФ.Вставить("КодФормы",       КодФормы);
	КодыИФ.Вставить("Периодичность",  Периодичность);
	КодыИФ.Вставить("ОтчетныйПериод", ОтчетныйПериод);
	КодыИФ.Вставить("ДатаВыгрузки",   "");
	
	РегламентированнаяОтчетность.КодыДляИмениФайлаВФорматеВыгрузки(КодыИФ);
	
	// Формирование имени файла, в зависимости
	// от формата выгрузки статотчетности.
	Если ПустаяСтрока(КодыИФ.ДатаВыгрузки) Тогда // "старый" формат
		ИмяФайлаXML = КодОКУД + "_"
					+ КодФормы + "_"
					+ Периодичность + "_"
					+ КодОКПО + "_"
					+ РасчетныйГод + "_"
					+ ОтчетныйПериод
					+ ?(ПустаяСтрока(КодОКФС), "", "_" + КодОКФС)
					+ ?(ПустаяСтрока(КодОКВЭД), "", "_" + КодОКВЭД) + ".xml";
	Иначе										 // "новый" формат
		ИмяФайлаXML = КодОКУД + "_"
					+ КодыИФ.КодФормы + "_"
					+ КодыИФ.Периодичность + "_"
					+ КодОКПО + "_"
					+ РасчетныйГод + "_"
					+ КодыИФ.ОтчетныйПериод + "__"
					+ КодыИФ.ДатаВыгрузки + ".xml";
	КонецЕсли;
	
	Возврат ИмяФайлаXML;
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПараметров()
	
	Перем ПолученноеЗначение;
	
	ТабДокумент = мДанныеОтчета.ПолеТабличногоДокументаФормаОтчета;
	
	ДопАтрибуты = РегламентированнаяОтчетность.СформироватьСтруктуруДопАтрибутов(ЭтаФорма.ИмяФормы, "АтрибВыгрузкиXML2015Кв1");
	
	СтрокаСведений = "ФИОРук";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(СтруктураРеквизитовФормы.Организация, СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи, СтрокаСведений);
	
	ПараметрыВыгрузки = Новый Структура;
	
	ДопАтрибуты.Свойство("code", ПолученноеЗначение);
	ПараметрыВыгрузки.Вставить("КодШаблона", ПолученноеЗначение);
	ДопАтрибуты.Свойство("idf", ПолученноеЗначение);
	ПараметрыВыгрузки.Вставить("КодФормы", ПолученноеЗначение);
	ДопАтрибуты.Свойство("shifr", ПолученноеЗначение);
	ПараметрыВыгрузки.Вставить("ШифрФормы", ПолученноеЗначение);
	ДопАтрибуты.Свойство("version", ПолученноеЗначение);
	ПараметрыВыгрузки.Вставить("ВерсияШаблона", ПолученноеЗначение);
	ДопАтрибуты.Свойство("format_version", ПолученноеЗначение);
	ПараметрыВыгрузки.Вставить("ВерсияФормата", ПолученноеЗначение);
	
	ДопАтрибуты.Свойство("idp", ПолученноеЗначение); // периодичность (количество отчетов в год)
	МесПериод = 12 / Число(ПолученноеЗначение);      // количество месяцев в периоде
	ОтчПериод = Окр(Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) / МесПериод);
	РасчПериод = Формат(Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания),"ЧГ=0");
	
	ПараметрыВыгрузки.Вставить("ОКПО", СокрЛП(ТабДокумент.ОргКодОКПО));
	ПараметрыВыгрузки.Вставить("ОтчПериод", СокрЛП(ОтчПериод));
	ПараметрыВыгрузки.Вставить("РасчПериод", СокрЛП(РасчПериод));
	ПараметрыВыгрузки.Вставить("ОргНазв", СокрЛП(ТабДокумент.ОргНазв));
	ПараметрыВыгрузки.Вставить("ОргДиректор", СокрЛП(СведенияОбОрганизации.ФИОРук));
	ПараметрыВыгрузки.Вставить("ОргДолжностьИсп", СокрЛП(ТабДокумент.ОргДолжностьИсп));
	ПараметрыВыгрузки.Вставить("ОргИсполнитель", СокрЛП(ТабДокумент.ОргИсполнитель));
	ПараметрыВыгрузки.Вставить("ОргТелефонИсп", СокрЛП(ТабДокумент.ОргТелефонИсп));
	
	// Преобразование выгружаемых атрибутов, в соответствии
	// с форматом выгрузки статотчетности.
	ДопАтрибуты.Свойство("idp", ПолученноеЗначение);
	ПараметрыВыгрузки.Вставить("КодПериодичности", Число(СокрЛП(ПолученноеЗначение)));
	ПараметрыВыгрузки.Вставить("Документ", СтруктураРеквизитовФормы.мСохраненныйДок);
	
	РегламентированнаяОтчетность.АтрибутыВФорматеВыгрузки(ПараметрыВыгрузки);
	
	ПараметрыВыгрузки.Вставить("ИмяФайла", СформироватьИмяФайла(ПараметрыВыгрузки, ДопАтрибуты));
	
	ПараметрыВыгрузки.Вставить("ИмяКлючевогоУзлаСодержательнойЧасти", "row");
	
	// Преобразование строковых значений определенных показателей в числа (под шаблон Росстата).
	// По разделу 1.
	ПараметрыВыгрузки.Вставить("П000001000101_Ч", ТабДокумент["П000001000101"]);
	// По разделу 1.1.
	НомСтр = 1;
	Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01") Цикл
		ПараметрыВыгрузки.Вставить("П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01" + "_Ч",
		?(ТабДокумент["П000101" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"] = "X", 1, 0));
		НомСтр = НомСтр + 1;
	КонецЦикла;
	// По разделу 2.
	НомКол = 1;
	Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")) Цикл
		ПараметрыВыгрузки.Вставить("П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч",
		?(ТабДокумент["П0000020001" + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")] = "X", 1, 0));
		НомКол = НомКол + 1;
	КонецЦикла;
	// По разделу 3.
	Для НомСтр = 1 По 2 Цикл
		НомКол = 1;
		Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")) Цикл
			ПараметрыВыгрузки.Вставить("П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч",
			?(ТабДокумент["П000003" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")] = "X", 1, 0));
			НомКол = НомКол + 1;
		КонецЦикла;
	КонецЦикла;
	// По разделу 4.
	ПараметрыВыгрузки.Вставить("П000004000101_Ч", ?(ТабДокумент["П000004000101"] = "X", 1, 0));
	ПараметрыВыгрузки.Вставить("П000004000102_Ч", ?(ТабДокумент["П000004000102"] = "X", 1, 0));
	ПараметрыВыгрузки.Вставить("П000004000103_Ч", ?(ТабДокумент["П000004000103"] = "X", 1, 0));
	// По разделу 5.
	ПараметрыВыгрузки.Вставить("П000005000101_Ч", ?(ТабДокумент["П000005000101"] = "X", 1, 0));
	ПараметрыВыгрузки.Вставить("П000005000102_Ч", ?(ТабДокумент["П000005000102"] = "X", 1, 0));
	ПараметрыВыгрузки.Вставить("П000005000103_Ч", ?(ТабДокумент["П000005000103"] = "X", 1, 0));
	// По разделу 6.
	Для НомСтр = 1 По 4 Цикл
		НомКол = 1;
		Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000006" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")) Цикл
			ПараметрыВыгрузки.Вставить("П000006" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч",
			?(ТабДокумент["П000006" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")] = "X", 1, 0));
			НомКол = НомКол + 1;
		КонецЦикла;
	КонецЦикла;
	// По разделу 7.
	Для НомСтр = 1 По 5 Цикл
		НомКол = 1;
		Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")) Цикл
			ПараметрыВыгрузки.Вставить("П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч",
			?(ТабДокумент["П000007" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")] = "X", 1, 0));
			НомКол = НомКол + 1;
		КонецЦикла;
	КонецЦикла;
	// По разделу 8.
	Для НомСтр = 1 По 7 Цикл
		НомКол = 1;
		Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")) Цикл
			ПараметрыВыгрузки.Вставить("П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч",
			?(ТабДокумент["П000008" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")] = "X", 1, 0));
			НомКол = НомКол + 1;
		КонецЦикла;
	КонецЦикла;
	// По разделу 9.
	НомСтр = 1;
	Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000009" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01") Цикл
		ПараметрыВыгрузки.Вставить("П000009" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01" + "_Ч",
		?(ТабДокумент["П000009" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"] = "X", 1, 0));
		НомСтр = НомСтр + 1;
	КонецЦикла;
	// По разделу 10.
	Для НомСтр = 1 По 3 Цикл
		НомКол = 1;
		Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")) Цикл
			ПараметрыВыгрузки.Вставить("П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч",
			?(ТабДокумент["П000010" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")] = "X", 1, 0));
			НомКол = НомКол + 1;
		КонецЦикла;
	КонецЦикла;
	// По разделу 11.
	Для НомСтр = 1 По 2 Цикл
		НомКол = 1;
		Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")) Цикл
			ПараметрыВыгрузки.Вставить("П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=") + "_Ч",
			?(ТабДокумент["П000011" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(НомКол, "ЧЦ=2; ЧВН=; ЧГ=")] = "X", 1, 0));
			НомКол = НомКол + 1;
		КонецЦикла;
	КонецЦикла;
	// По разделу 12.
	НомСтр = 1;
	Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ТабДокумент, "П000012" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01") Цикл
		ПараметрыВыгрузки.Вставить("П000012" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01" + "_Ч",
		?(ТабДокумент["П000012" + Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=") + "01"] = "X", 1, 0));
		НомСтр = НомСтр + 1;
	КонецЦикла;
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СТЫКОВКИ С СЕРВИСОМ СДАЧИ ОТЧЕТНОСТИ ЧЕРЕЗ ПРЕДСТАВИТЕЛЯ

&НаКлиенте
Процедура ОтправитьЧерезПредставителя(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезПредставителяЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезПредставителяЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиЧерезПредставителяВРегламентированномОтчете(ЭтаФорма, "ФСГС");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернетеЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма, "ФСГС");
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФСГС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФСГС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФСГС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФСГС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФСГС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтаФорма);
	ПараметрыИзменения.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФСГС"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОтправкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганЗавершение", ЭтотОбъект);
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма, "ФСГС");
	
КонецПроцедуры

&НаКлиенте
Процедура  ЗаписатьИЗакрыть(Команда)
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	Оповещение = Новый ОписаниеОповещения("ПослеСохраненияФормыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьНаКлиенте(, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ДополнительныеПараметры.Форма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьОтчетИОткрытьФормуПрисоединенныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры