
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура формирует отчет.
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	мТочностьОбъемаНачислений = Константы.УПЖКХ_ТочностьОбъемаНачислений.Получить();
	
	Если ПараметрыОтчета.Организация.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Укажите организацию.");
		Возврат;
	КонецЕсли;
	
	Если ПараметрыОтчета.Услуга.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Укажите услугу.");
		Возврат;
	КонецЕсли;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	Макет = Отчеты.УПЖКХ_РасчетПоКоллективнымПУ.ПолучитьМакет("Макет");
	
	ПостроительОтчета = Новый ПостроительОтчета();
	ПостроительОтчета.Текст = ПолучитьТекстЗапроса(ПараметрыОтчета);
	ПостроительОтчета.ЗаполнитьНастройки();
	
	ПостроительОтчета.ИзмеренияСтроки.Очистить();
	ПостроительОтчета.ИзмеренияСтроки.Вставить("Объект", "Объект", ТипИзмеренияПостроителяОтчета.Элементы, , , 1);
	ПостроительОтчета.ИзмеренияСтроки.Вставить("Счетчик", "Счетчик", ТипИзмеренияПостроителяОтчета.Элементы, , , 2);
	
	// Если объект заполнен, то заменяем текст в запросе и передаем параметры с объектами.
	Если ЗначениеЗаполнено(ПараметрыОтчета.Объект) Тогда
		
		// Получаем список объектов.
		СписокОбъектовОбщая = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ПараметрыОтчета.Объект) И ПараметрыОтчета.Объект.ЭтоГруппа Тогда 
			ЭлементыГруппы = Справочники.КВП_Здания.ВыбратьИерархически(ПараметрыОтчета.Объект);
			Пока ЭлементыГруппы.Следующий() Цикл 
				ПолучитьСписокОбъектов(ЭлементыГруппы.Ссылка, СписокОбъектовОбщая);
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПараметрыОтчета.Объект) Тогда 
			ПолучитьСписокОбъектов(ПараметрыОтчета.Объект, СписокОбъектовОбщая);
		КонецЕсли;
		
		ПостроительОтчета.Параметры.Вставить("Объекты", СписокОбъектовОбщая);
		
	КонецЕсли;
	
	// Получаем показания по ПУ.
	ПостроительОтчета.Параметры.Вставить("ДатаНач",     НачалоМесяца(ПараметрыОтчета.Период));
	ПостроительОтчета.Параметры.Вставить("ДатаКон",     КонецДня(КонецМесяца(ПараметрыОтчета.Период)));
	ПостроительОтчета.Параметры.Вставить("Организация", ПараметрыОтчета.Организация);
	ПостроительОтчета.Параметры.Вставить("ВидУслуги",   ПараметрыОтчета.Услуга);
	
	ПостроительОтчета.Выполнить();
	ТаблицаРезультатов = ПостроительОтчета.Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	// Выводим заголовок отчета.
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Заголовок   = "Расчет по коллективным приборам учета";
	Область.Параметры.Период      = "с " + Формат(НачалоМесяца(ПараметрыОтчета.Период), "ДЛФ=Д") + " по " + Формат(КонецДня(КонецМесяца(ПараметрыОтчета.Период)), "ДЛФ=Д");
	Область.Параметры.Организация = "Организация: " + ПараметрыОтчета.Организация.Наименование;
	Область.Параметры.Услуга      = "Услуга: " + ПараметрыОтчета.Услуга.Наименование;
	ДокументРезультат.Вывести(Область);
	
	Для Каждого Адрес Из ТаблицаРезультатов.Строки Цикл
		
		// Выводим адрес здания.
		Область = Макет.ПолучитьОбласть("Адрес");
		Если ТипЗнч(Адрес.Объект) = Тип("СправочникСсылка.КВП_Здания") Тогда
			Область.Параметры.Адрес = Строка(Адрес.Объект);
		ИначеЕсли ТипЗнч(Адрес.Объект) = Тип("СправочникСсылка.КВП_Подъезды") Тогда 
			Область.Параметры.Адрес = Строка(Адрес.Объект.Владелец) + ", " + Строка(Адрес.Объект);
		КонецЕсли;
		ДокументРезультат.Вывести(Область);
		
		НаличиеДоли = ?(Адрес.КоличествоОбъектов > 1, Истина, Ложь);
		
		ЗаполнитьОбщиеСведения(Макет, ДокументРезультат, , "Шапка", "Шапка", , НаличиеДоли, мТочностьОбъемаНачислений);
		Если НаличиеДоли Тогда 
			Для Каждого Счетчик Из Адрес.Строки Цикл
				ЗаполнитьОбщиеСведения(Макет, ДокументРезультат, "Коллективные приборы учета", "КоллективныеСчетчик", "Коллективные", Счетчик, НаличиеДоли, мТочностьОбъемаНачислений);
			КонецЦикла;
			ДанныеДляЗаполнения = Адрес.Строки.Получить(0);
		Иначе 
			ЗаполнитьОбщиеСведения(Макет, ДокументРезультат, "Коллективные приборы учета", "Коллективные", "Коллективные", Адрес, НаличиеДоли, мТочностьОбъемаНачислений);
			ДанныеДляЗаполнения = Адрес;
		КонецЕсли;
		
		ЗаполнитьОбщиеСведения(Макет, ДокументРезультат, "Индивидуальные приборы учета", "Индивидуальные", "Коллективные", ДанныеДляЗаполнения, НаличиеДоли, мТочностьОбъемаНачислений);
		Если ЗначениеЗаполнено(ДанныеДляЗаполнения.ИндБезИПУ) Тогда 
			ЗаполнитьОбщиеСведения(Макет, ДокументРезультат, "Начисления по нормативу", "ИндивидуальныеПоНормативу", "Коллективные", ДанныеДляЗаполнения, НаличиеДоли, мТочностьОбъемаНачислений);
		КонецЕсли;
		
		ЗаполнитьОбщиеСведения(Макет, ДокументРезультат, "Потери", "Потери", "Коллективные", ДанныеДляЗаполнения, НаличиеДоли, мТочностьОбъемаНачислений);
		
		ДокументРезультат.НачатьАвтогруппировкуСтрок();
		ЗаполнитьПоказанияИПУ(Макет, ДокументРезультат, ДанныеДляЗаполнения, "Отступ", 0, мТочностьОбъемаНачислений);
		ЗаполнитьПоказанияИПУ(Макет, ДокументРезультат, ДанныеДляЗаполнения, "ШапкаИПУ", 1, мТочностьОбъемаНачислений);
		Для Каждого ЛС Из Адрес.Строки.Получить(0).Строки Цикл
			ЗаполнитьПоказанияИПУ(Макет, ДокументРезультат, ЛС, "СтрокаИПУ", 1, мТочностьОбъемаНачислений);
		КонецЦикла;
		
		ЗаполнитьПоказанияИПУ(Макет, ДокументРезультат, Адрес.Строки.Получить(0), "Итоги", 1, мТочностьОбъемаНачислений);
		
		ЗаполнитьПоказанияИПУ(Макет, ДокументРезультат, ДанныеДляЗаполнения, "Отступ", 0, мТочностьОбъемаНачислений);
		
		ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
		
	КонецЦикла;
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);
	
	// Зафиксируем заголовок отчета.
	ДокументРезультат.ФиксацияСверху = 7;
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "РасчетПоОПУ";
	
	ПоместитьВоВременноеХранилище(ДокументРезультат, АдресХранилища);
	
КонецПроцедуры

// Функция возвращает список зданий и подъездов.
//
// Параметры:
//   Адрес - объект, квартира.
//
// Возвращаемое значение:
//   СписокЗначений - Список значений - список подъездов и здания. 
//
Функция ПолучитьСписокОбъектов(Адрес, СписокЗначений)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_Подъезды.Ссылка
	|ИЗ
	|	Справочник.КВП_Подъезды КАК КВП_Подъезды
	|ГДЕ
	|	КВП_Подъезды.Владелец = &Владелец";

	//СписокЗначений = Новый СписокЗначений();
	СписокЗначений.Добавить(Адрес);

	Запрос.УстановитьПараметр("Владелец", Адрес);
	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл 
		СписокЗначений.Добавить(Результат.Ссылка);
	КонецЦикла;

	Возврат СписокЗначений;

КонецФункции //ПолучитьСписокОбъектов()

// Возвращает текст запроса в зависимости от выбранного типа объектов.
Функция ПолучитьТекстЗапроса(ПараметрыОтчета)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_ЗакрепленныеСчетчикиСрезПоследних.Объект,
	|	КВП_ПоказанияСчетчиковСрезПоследних.Счетчик.ВидУслуги КАК Услуга,
	|	КВП_ПоказанияСчетчиковСрезПоследних.Счетчик,
	|	СУММА(КВП_ПоказанияСчетчиковСрезПоследних.ДневноеПоказание) КАК ДневТекСчет,
	|	СУММА(КВП_ПоказанияСчетчиковСрезПоследних.НочноеПоказание) КАК НочТекСчет,
	|	СУММА(КВП_ПоказанияСчетчиковСрезПоследних.ПиковоеПоказание) КАК ПикТекСчет
	|ПОМЕСТИТЬ ТекущиеПоказанияПоСчетчикам
	|ИЗ
	|	РегистрСведений.КВП_ПоказанияСчетчиков.СрезПоследних(&ДатаКон, Счетчик.ВидУслуги = &ВидУслуги) КАК КВП_ПоказанияСчетчиковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КВП_ЗакрепленныеСчетчики.СрезПоследних(
	|				&ДатаКон,
	|				Счетчик.ВидУслуги = &ВидУслуги
	|					И (Объект ССЫЛКА Справочник.КВП_Здания
	|						ИЛИ Объект ССЫЛКА Справочник.КВП_Подъезды)
	|					И ДатаИзменения <= &ДатаКон
	|					И &Условие) КАК КВП_ЗакрепленныеСчетчикиСрезПоследних
	|		ПО КВП_ПоказанияСчетчиковСрезПоследних.Счетчик = КВП_ЗакрепленныеСчетчикиСрезПоследних.Счетчик
	|
	|СГРУППИРОВАТЬ ПО
	|	КВП_ЗакрепленныеСчетчикиСрезПоследних.Объект,
	|	КВП_ПоказанияСчетчиковСрезПоследних.Счетчик.ВидУслуги,
	|	КВП_ПоказанияСчетчиковСрезПоследних.Счетчик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеПоказанияПоСчетчикам.Счетчик,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТекущиеПоказанияПоСчетчикам.Объект) КАК КоличествоОбъектов
	|ПОМЕСТИТЬ КоличествоЗакрепленныхОбъектов
	|ИЗ
	|	ТекущиеПоказанияПоСчетчикам КАК ТекущиеПоказанияПоСчетчикам
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущиеПоказанияПоСчетчикам.Счетчик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_РасчетПриборовУчетаОбороты.Объект,
	|	УПЖКХ_РасчетПриборовУчетаОбороты.Счетчик.ВидУслуги КАК Услуга,
	|	УПЖКХ_РасчетПриборовУчетаОбороты.Счетчик,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ВидПоказания = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Дневной)
	|				ТОГДА ВЫБОР
	|						КОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеОборот = 0
	|							ТОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеПриход
	|						ИНАЧЕ УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеОборот
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДневОборотСчет,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ВидПоказания = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Ночной)
	|				ТОГДА ВЫБОР
	|						КОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеОборот = 0
	|							ТОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеПриход
	|						ИНАЧЕ УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеОборот
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НочОборотСчет,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ВидПоказания = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Пиковый)
	|				ТОГДА ВЫБОР
	|						КОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеОборот = 0
	|							ТОГДА УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеПриход
	|						ИНАЧЕ УПЖКХ_РасчетПриборовУчетаОбороты.ПоказаниеОборот
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПикОборотСчет
	|ПОМЕСТИТЬ ПоказанияОборотПоСчетчикам
	|ИЗ
	|	РегистрНакопления.УПЖКХ_РасчетПриборовУчета.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Объект В
	|					(ВЫБРАТЬ
	|						ТекущиеПоказанияПоСчетчикам.Объект
	|					ИЗ
	|						ТекущиеПоказанияПоСчетчикам КАК ТекущиеПоказанияПоСчетчикам)
	|				И Счетчик.ВидУслуги = &ВидУслуги) КАК УПЖКХ_РасчетПриборовУчетаОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_РасчетПриборовУчетаОбороты.Объект,
	|	УПЖКХ_РасчетПриборовУчетаОбороты.Счетчик.ВидУслуги,
	|	УПЖКХ_РасчетПриборовУчетаОбороты.Счетчик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказанияОборотПоСчетчикам.Объект,
	|	ПоказанияОборотПоСчетчикам.Услуга,
	|	ПоказанияОборотПоСчетчикам.Счетчик,
	|	ЕСТЬNULL(ТекущиеПоказанияПоСчетчикам.ДневТекСчет, 0) - ПоказанияОборотПоСчетчикам.ДневОборотСчет КАК ДневПредСчет,
	|	ЕСТЬNULL(ТекущиеПоказанияПоСчетчикам.НочТекСчет, 0) - ПоказанияОборотПоСчетчикам.НочОборотСчет КАК НочПредСчет,
	|	ЕСТЬNULL(ТекущиеПоказанияПоСчетчикам.ПикТекСчет, 0) - ПоказанияОборотПоСчетчикам.ПикОборотСчет КАК ПикПредСчет,
	|	ЕСТЬNULL(ТекущиеПоказанияПоСчетчикам.ДневТекСчет, 0) КАК ДневТекСчет,
	|	ЕСТЬNULL(ТекущиеПоказанияПоСчетчикам.НочТекСчет, 0) КАК НочТекСчет,
	|	ЕСТЬNULL(ТекущиеПоказанияПоСчетчикам.ПикТекСчет, 0) КАК ПикТекСчет,
	|	ПоказанияОборотПоСчетчикам.ДневОборотСчет,
	|	ПоказанияОборотПоСчетчикам.НочОборотСчет,
	|	ПоказанияОборотПоСчетчикам.ПикОборотСчет
	|ПОМЕСТИТЬ ИтоговыеПоказанияПоСчетчикам
	|ИЗ
	|	ПоказанияОборотПоСчетчикам КАК ПоказанияОборотПоСчетчикам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеПоказанияПоСчетчикам КАК ТекущиеПоказанияПоСчетчикам
	|		ПО (ТекущиеПоказанияПоСчетчикам.Объект = ПоказанияОборотПоСчетчикам.Объект)
	|			И (ТекущиеПоказанияПоСчетчикам.Счетчик = ПоказанияОборотПоСчетчикам.Счетчик)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеПоказанияПоСчетчикам.Объект,
	|	ИтоговыеПоказанияПоСчетчикам.Услуга,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.ДневПредСчет) КАК ДневПредКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.НочПредСчет) КАК НочПредКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.ПикПредСчет) КАК ПикПредКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.ДневТекСчет) КАК ДневТекКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.НочТекСчет) КАК НочТекКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.ПикТекСчет) КАК ПикТекКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.ДневОборотСчет) КАК ДневОборотКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.НочОборотСчет) КАК НочОборотКол,
	|	СУММА(ИтоговыеПоказанияПоСчетчикам.ПикОборотСчет) КАК ПикОборотКол
	|ПОМЕСТИТЬ ИтоговыеПоказанияКоллективныеПУ
	|ИЗ
	|	ИтоговыеПоказанияПоСчетчикам КАК ИтоговыеПоказанияПоСчетчикам
	|
	|СГРУППИРОВАТЬ ПО
	|	ИтоговыеПоказанияПоСчетчикам.Объект,
	|	ИтоговыеПоказанияПоСчетчикам.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеПоказанияПоСчетчикам.Объект,
	|	ИтоговыеПоказанияПоСчетчикам.Услуга,
	|	ИтоговыеПоказанияПоСчетчикам.Счетчик,
	|	ИтоговыеПоказанияПоСчетчикам.Счетчик.Коэффициент КАК Коэффициент,
	|	(ИтоговыеПоказанияПоСчетчикам.ДневОборотСчет + ИтоговыеПоказанияПоСчетчикам.НочОборотСчет + ИтоговыеПоказанияПоСчетчикам.ПикОборотСчет) / ЕСТЬNULL(ИтоговыеПоказанияКоллективныеПУ.ДневТекКол + ИтоговыеПоказанияКоллективныеПУ.НочТекКол + ИтоговыеПоказанияКоллективныеПУ.ПикТекКол, 1) КАК Доля,
	|	ИтоговыеПоказанияПоСчетчикам.ДневПредСчет,
	|	ИтоговыеПоказанияПоСчетчикам.НочПредСчет,
	|	ИтоговыеПоказанияПоСчетчикам.ПикПредСчет,
	|	ИтоговыеПоказанияПоСчетчикам.ДневТекСчет,
	|	ИтоговыеПоказанияПоСчетчикам.НочТекСчет,
	|	ИтоговыеПоказанияПоСчетчикам.ПикТекСчет,
	|	ИтоговыеПоказанияПоСчетчикам.ДневОборотСчет,
	|	ИтоговыеПоказанияПоСчетчикам.НочОборотСчет,
	|	ИтоговыеПоказанияПоСчетчикам.ПикОборотСчет,
	|	ИтоговыеПоказанияКоллективныеПУ.ДневПредКол,
	|	ИтоговыеПоказанияКоллективныеПУ.НочПредКол,
	|	ИтоговыеПоказанияКоллективныеПУ.ПикПредКол,
	|	ИтоговыеПоказанияКоллективныеПУ.ДневТекКол,
	|	ИтоговыеПоказанияКоллективныеПУ.НочТекКол,
	|	ИтоговыеПоказанияКоллективныеПУ.ПикТекКол,
	|	ИтоговыеПоказанияКоллективныеПУ.ДневОборотКол,
	|	ИтоговыеПоказанияКоллективныеПУ.НочОборотКол,
	|	ИтоговыеПоказанияКоллективныеПУ.ПикОборотКол
	|ПОМЕСТИТЬ ИтоговаяТаблицаКолПУ
	|ИЗ
	|	ИтоговыеПоказанияПоСчетчикам КАК ИтоговыеПоказанияПоСчетчикам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтоговыеПоказанияКоллективныеПУ КАК ИтоговыеПоказанияКоллективныеПУ
	|		ПО ИтоговыеПоказанияПоСчетчикам.Объект = ИтоговыеПоказанияКоллективныеПУ.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТекущиеПоказанияПоСчетчикам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоказанияОборотПоСчетчикам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИтоговыеПоказанияПоСчетчикам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИтоговыеПоказанияКоллективныеПУ.Объект КАК Объект,
	|	УПЖКХ_НачисленияОбороты.ЛицевойСчет,
	|	ИтоговыеПоказанияКоллективныеПУ.Услуга,
	|	СУММА(ВЫБОР
	|			КОГДА (УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Дневной)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Общий))
	|					И УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоИПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндДневОборот,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Ночной)
	|					И УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоИПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндНочОборот,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Пиковый)
	|					И УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоИПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндПикОборот,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоИПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндСумма,
	|	СУММА(ВЫБОР
	|			КОГДА (УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Дневной)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Общий))
	|					И УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоОПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндДневОборотОПУ,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Ночной)
	|					И УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоОПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндНочОборотОПУ,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Пиковый)
	|					И УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоОПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндПикОборотОПУ,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоОПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндСуммаОПУ,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииПоказанийИПУПоНормативу)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииПоказанийИПУПоСреднему)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоНормативу)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоНормативуЗаСчетПовышающегоКоэффициента)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоСреднему)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндБезИПУ,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииПоказанийИПУПоНормативу)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииПоказанийИПУПоСреднему)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоНормативу)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоНормативуЗаСчетПовышающегоКоэффициента)
	|					ИЛИ УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоСреднему)
	|				ТОГДА УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндСуммаБезИПУ,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.КорректировкаПриОтсутствииПоказанийПоИПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндСторноОборот,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.КорректировкаПриОтсутствииПоказанийПоИПУ)
	|				ТОГДА УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИндСторноСумма
	|ПОМЕСТИТЬ ИтоговаяТаблицаИндПУ
	|ИЗ
	|	ИтоговыеПоказанияКоллективныеПУ КАК ИтоговыеПоказанияКоллективныеПУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УПЖКХ_Начисления.Обороты(
	|				&ДатаНач,
	|				&ДатаКон,
	|				Запись,
	|				Услуга = &ВидУслуги
	|					И ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоИПУ), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПоОПУ), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.КорректировкаПриОтсутствииПоказанийПоИПУ), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоНормативу), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоНормативуЗаСчетПовышающегоКоэффициента), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииДействующегоИПУПоСреднему), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииПоказанийИПУПоНормативу), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.НачислениеПриОтсутствииПоказанийИПУПоСреднему))
	|					И Организация = &Организация
	|					И (ЛицевойСчет.Адрес.Владелец В
	|							(ВЫБРАТЬ
	|								ИтоговаяТаблицаКолПУ.Объект
	|							ИЗ
	|								ИтоговаяТаблицаКолПУ КАК ИтоговаяТаблицаКолПУ)
	|						ИЛИ ЛицевойСчет.Адрес.Подъезд В
	|							(ВЫБРАТЬ
	|								ИтоговаяТаблицаКолПУ.Объект
	|							ИЗ
	|								ИтоговаяТаблицаКолПУ КАК ИтоговаяТаблицаКолПУ))) КАК УПЖКХ_НачисленияОбороты
	|		ПО (ИтоговыеПоказанияКоллективныеПУ.Объект = УПЖКХ_НачисленияОбороты.ЛицевойСчет.Адрес.Владелец
	|				ИЛИ ИтоговыеПоказанияКоллективныеПУ.Объект = УПЖКХ_НачисленияОбороты.ЛицевойСчет.Адрес.Подъезд)
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_НачисленияОбороты.ЛицевойСчет,
	|	ИтоговыеПоказанияКоллективныеПУ.Объект,
	|	ИтоговыеПоказанияКоллективныеПУ.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеПоказанияКоллективныеПУ.Объект,
	|	ИтоговыеПоказанияКоллективныеПУ.ДневОборотКол + ИтоговыеПоказанияКоллективныеПУ.НочОборотКол + ИтоговыеПоказанияКоллективныеПУ.ПикОборотКол - СУММА(ИтоговаяТаблицаИндПУ.ИндДневОборот) - СУММА(ИтоговаяТаблицаИндПУ.ИндНочОборот) - СУММА(ИтоговаяТаблицаИндПУ.ИндПикОборот) КАК ПотериИтог,
	|	ИтоговыеПоказанияКоллективныеПУ.ДневОборотКол - СУММА(ИтоговаяТаблицаИндПУ.ИндДневОборот) КАК ПотериДнев,
	|	ИтоговыеПоказанияКоллективныеПУ.НочОборотКол - СУММА(ИтоговаяТаблицаИндПУ.ИндНочОборот) КАК ПотериНоч,
	|	ИтоговыеПоказанияКоллективныеПУ.ПикОборотКол - СУММА(ИтоговаяТаблицаИндПУ.ИндПикОборот) КАК ПотериПик,
	|	ВЫБОР
	|		КОГДА ИтоговыеПоказанияКоллективныеПУ.Услуга.ИспользоватьФормулу9
	|				ИЛИ ИтоговыеПоказанияКоллективныеПУ.Услуга.СоставСуммарногоРасходаИПУДляРаспределения = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыСоставаСуммарногоРасходаИПУ.РасходПоПриборамУчетаИНачисленияПоНормативу)
	|				ИЛИ ИтоговыеПоказанияКоллективныеПУ.Услуга.СоставСуммарногоРасходаИПУДляРаспределения = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыСоставаСуммарногоРасходаИПУ.РасходПоПриборамУчетаНачисленияПоНормативуИПоСреднему)
	|			ТОГДА ИтоговыеПоказанияКоллективныеПУ.ДневОборотКол + ИтоговыеПоказанияКоллективныеПУ.НочОборотКол + ИтоговыеПоказанияКоллективныеПУ.ПикОборотКол - СУММА(ИтоговаяТаблицаИндПУ.ИндДневОборот) - СУММА(ИтоговаяТаблицаИндПУ.ИндНочОборот) - СУММА(ИтоговаяТаблицаИндПУ.ИндПикОборот) - СУММА(ИтоговаяТаблицаИндПУ.ИндБезИПУ)
	|		ИНАЧЕ ИтоговыеПоказанияКоллективныеПУ.ДневОборотКол + ИтоговыеПоказанияКоллективныеПУ.НочОборотКол + ИтоговыеПоказанияКоллективныеПУ.ПикОборотКол - СУММА(ИтоговаяТаблицаИндПУ.ИндДневОборот) - СУММА(ИтоговаяТаблицаИндПУ.ИндНочОборот) - СУММА(ИтоговаяТаблицаИндПУ.ИндПикОборот)
	|	КОНЕЦ КАК ИтогПотери
	|ПОМЕСТИТЬ Потери
	|ИЗ
	|	ИтоговыеПоказанияКоллективныеПУ КАК ИтоговыеПоказанияКоллективныеПУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтоговаяТаблицаИндПУ КАК ИтоговаяТаблицаИндПУ
	|		ПО ИтоговыеПоказанияКоллективныеПУ.Объект = ИтоговаяТаблицаИндПУ.Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	ИтоговыеПоказанияКоллективныеПУ.Объект,
	|	ИтоговыеПоказанияКоллективныеПУ.ДневОборотКол,
	|	ИтоговыеПоказанияКоллективныеПУ.НочОборотКол,
	|	ИтоговыеПоказанияКоллективныеПУ.ПикОборотКол,
	|	ИтоговыеПоказанияКоллективныеПУ.Услуга.ИспользоватьФормулу9,
	|	ИтоговыеПоказанияКоллективныеПУ.Услуга.СоставСуммарногоРасходаИПУДляРаспределения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИтоговаяТаблицаКолПУ.Объект КАК Объект,
	|	ИтоговаяТаблицаКолПУ.Счетчик КАК Счетчик,
	|	ИтоговаяТаблицаКолПУ.Счетчик.Код КАК НомерПУ,
	|	ИтоговаяТаблицаИндПУ.ЛицевойСчет,
	|	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец КАК ОтветственныйЛС,
	|	ИтоговаяТаблицаИндПУ.ЛицевойСчет.Адрес КАК Помещение,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.Коэффициент, 0) КАК Коэффициент,
	|	ИтоговаяТаблицаКолПУ.Доля КАК Доля,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневПредСчет, 0) КАК ДневПредСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочПредСчет, 0) КАК НочПредСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикПредСчет, 0) КАК ПикПредСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневТекСчет, 0) КАК ДневТекСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочТекСчет, 0) КАК НочТекСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикТекСчет, 0) КАК ПикТекСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневОборотСчет, 0) КАК ДневОборотСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочОборотСчет, 0) КАК НочОборотСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикОборотСчет, 0) КАК ПикОборотСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневОборотСчет, 0) + ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочОборотСчет, 0) + ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикОборотСчет, 0) КАК ИтогоОборотСчет,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневПредКол, 0) КАК ДневПредКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочПредКол, 0) КАК НочПредКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикПредКол, 0) КАК ПикПредКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневТекКол, 0) КАК ДневТекКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочТекКол, 0) КАК НочТекКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикТекКол, 0) КАК ПикТекКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневОборотКол, 0) КАК ДневОборотКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочОборотКол, 0) КАК НочОборотКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикОборотКол, 0) КАК ПикОборотКол,
	|	ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ДневОборотКол, 0) + ЕСТЬNULL(ИтоговаяТаблицаКолПУ.НочОборотКол, 0) + ЕСТЬNULL(ИтоговаяТаблицаКолПУ.ПикОборотКол, 0) КАК ИтогоОборотКол,
	|	ЕСТЬNULL(Потери.ПотериДнев, 0) КАК ПотериДнев,
	|	ЕСТЬNULL(Потери.ПотериНоч, 0) КАК ПотериНоч,
	|	ЕСТЬNULL(Потери.ПотериПик, 0) КАК ПотериПик,
	|	ЕСТЬNULL(Потери.ПотериИтог, 0) КАК ПотериИтог,
	|	ЕСТЬNULL(Потери.ИтогПотери, 0) КАК ИтогПотери,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндДневОборот, 0) КАК ИндДневОборот,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндНочОборот, 0) КАК ИндНочОборот,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндПикОборот, 0) КАК ИндПикОборот,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндДневОборот, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндНочОборот, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндПикОборот, 0) КАК ИтогоОборотИнд,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСумма, 0) КАК ИндСумма,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндДневОборотОПУ, 0) КАК ИндДневОборотОПУ,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндНочОборотОПУ, 0) КАК ИндНочОборотОПУ,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндПикОборотОПУ, 0) КАК ИндПикОборотОПУ,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСуммаОПУ, 0) КАК ИндСуммаОПУ,
	|	ИтоговаяТаблицаИндПУ.ИндБезИПУ КАК ИндБезИПУ,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСуммаБезИПУ, 0) КАК ИндСуммаБезИПУ,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСторноОборот, 0) КАК ИндСторноОборот,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСторноСумма, 0) КАК ИндСторноСумма,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСумма, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСуммаБезИПУ, 0) КАК ИндСуммаОбщая,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСумма, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСуммаБезИПУ, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСуммаОПУ, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндСторноСумма, 0) КАК ИндИтог,
	|	ВЫБОР
	|		КОГДА ИтоговаяТаблицаКолПУ.Услуга.СоставСуммарногоРасходаИПУДляРаспределения = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыСоставаСуммарногоРасходаИПУ.РасходПоПриборамУчетаИНачисленияПоНормативу)
	|				ИЛИ ИтоговаяТаблицаКолПУ.Услуга.СоставСуммарногоРасходаИПУДляРаспределения = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыСоставаСуммарногоРасходаИПУ.РасходПоПриборамУчетаНачисленияПоНормативуИПоСреднему)
	|				ИЛИ ИтоговаяТаблицаКолПУ.Услуга.ИспользоватьФормулу9
	|			ТОГДА (ИтоговаяТаблицаИндПУ.ИндДневОборотОПУ + ИтоговаяТаблицаИндПУ.ИндНочОборотОПУ + ИтоговаяТаблицаИндПУ.ИндПикОборотОПУ) / ВЫБОР
	|					КОГДА НЕ ЕСТЬNULL(Потери.ИтогПотери, 0) = 0
	|						ТОГДА Потери.ИтогПотери
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ (ИтоговаяТаблицаИндПУ.ИндДневОборотОПУ + ИтоговаяТаблицаИндПУ.ИндНочОборотОПУ + ИтоговаяТаблицаИндПУ.ИндПикОборотОПУ) / ВЫБОР
	|				КОГДА НЕ ЕСТЬNULL(Потери.ИтогПотери, 0) = 0
	|					ТОГДА Потери.ИтогПотери
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоэффициентРаспределения,
	|	ВЫБОР
	|		КОГДА НЕ ИтоговаяТаблицаИндПУ.ИндДневОборотОПУ + ИтоговаяТаблицаИндПУ.ИндНочОборотОПУ + ИтоговаяТаблицаИндПУ.ИндПикОборотОПУ = 0
	|			ТОГДА ВЫБОР
	|					КОГДА ИтоговаяТаблицаКолПУ.Услуга.СпособРаспределенияУслугиПоСчетчику = ЗНАЧЕНИЕ(Перечисление.КВП_ТипыРаспределенияПоказателей.ПропорциональноПлощади)
	|						ТОГДА КВП_ПлощадьПомещенияСрезПоследних.Площадь * (КВП_РазмерыДолейЛицевыхСчетовСрезПоследних.ДоляЧислитель / ВЫБОР
	|								КОГДА НЕ ЕСТЬNULL(КВП_РазмерыДолейЛицевыхСчетовСрезПоследних.ДоляЗнаменатель, 0) = 0
	|									ТОГДА КВП_РазмерыДолейЛицевыхСчетовСрезПоследних.ДоляЗнаменатель
	|								ИНАЧЕ 1
	|							КОНЕЦ)
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ИтоговаяТаблицаКолПУ.Услуга.СпособРаспределенияУслугиПоСчетчику = ЗНАЧЕНИЕ(Перечисление.КВП_ТипыРаспределенияПоказателей.ПропорциональноКоличествуПомещенийВКвартире)
	|								ТОГДА ПривязанныеКомнаты.КоличествоКомнат
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ИтоговаяТаблицаКолПУ.Услуга.СпособРаспределенияУслугиПоСчетчику = ЗНАЧЕНИЕ(Перечисление.КВП_ТипыРаспределенияПоказателей.ПропорциональноКоличествуЖильцов)
	|										ТОГДА ВЫБОР
	|												КОГДА ИтоговаяТаблицаКолПУ.Услуга.ВидыЖильцов = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыЖильцов.Проживающие)
	|													ТОГДА СведенияОЖильцах.КолПроживающих
	|												ИНАЧЕ ВЫБОР
	|														КОГДА ИтоговаяТаблицаКолПУ.Услуга.ВидыЖильцов = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыЖильцов.Зарегистрированные)
	|															ТОГДА СведенияОЖильцах.КолЗарегистрированных
	|														ИНАЧЕ 0
	|													КОНЕЦ
	|											КОНЕЦ
	|									ИНАЧЕ ВЫБОР
	|											КОГДА ИтоговаяТаблицаКолПУ.Услуга.СпособРаспределенияУслугиПоСчетчику = ЗНАЧЕНИЕ(Перечисление.КВП_ТипыРаспределенияПоказателей.Поровну)
	|												ТОГДА 1
	|											ИНАЧЕ ВЫБОР
	|													КОГДА ИтоговаяТаблицаКолПУ.Услуга.СпособРаспределенияУслугиПоСчетчику = ЗНАЧЕНИЕ(Перечисление.КВП_ТипыРаспределенияПоказателей.ПропорциональноКоличествуРасходаПоУслуге)
	|														ТОГДА ВЫБОР
	|																КОГДА ИтоговаяТаблицаКолПУ.Услуга.СоставСуммарногоРасходаИПУДляРаспределения = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыСоставаСуммарногоРасходаИПУ.РасходПоПриборамУчетаИНачисленияПоНормативу)
	|																		ИЛИ ИтоговаяТаблицаКолПУ.Услуга.СоставСуммарногоРасходаИПУДляРаспределения = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыСоставаСуммарногоРасходаИПУ.РасходПоПриборамУчетаНачисленияПоНормативуИПоСреднему)
	|																		ИЛИ ИтоговаяТаблицаКолПУ.Услуга.ИспользоватьФормулу9
	|																	ТОГДА ИтоговаяТаблицаИндПУ.ИндДневОборот + ИтоговаяТаблицаИндПУ.ИндНочОборот + ИтоговаяТаблицаИндПУ.ИндПикОборот + ИтоговаяТаблицаИндПУ.ИндБезИПУ
	|																ИНАЧЕ ИтоговаяТаблицаИндПУ.ИндДневОборот + ИтоговаяТаблицаИндПУ.ИндНочОборот + ИтоговаяТаблицаИндПУ.ИндПикОборот
	|															КОНЕЦ
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										КОНЕЦ
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДляРасчетаКоэффициента,
	|	ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндДневОборотОПУ, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндНочОборотОПУ, 0) + ЕСТЬNULL(ИтоговаяТаблицаИндПУ.ИндПикОборотОПУ, 0) КАК ИндОбъемОПУ,
	|	КоличествоЗакрепленныхОбъектов.КоличествоОбъектов КАК КоличествоОбъектов
	|ИЗ
	|	ИтоговаяТаблицаКолПУ КАК ИтоговаяТаблицаКолПУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтоговаяТаблицаИндПУ КАК ИтоговаяТаблицаИндПУ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_ПлощадьПомещения.СрезПоследних(&ДатаКон, ) КАК КВП_ПлощадьПомещенияСрезПоследних
	|			ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет.Адрес = КВП_ПлощадьПомещенияСрезПоследних.Объект
	|				И ИтоговаяТаблицаИндПУ.Услуга.ВидПлощади = КВП_ПлощадьПомещенияСрезПоследних.ВидПлощади
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_РазмерыДолейЛицевыхСчетов.СрезПоследних(&ДатаКон, ) КАК КВП_РазмерыДолейЛицевыхСчетовСрезПоследних
	|			ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет = КВП_РазмерыДолейЛицевыхСчетовСрезПоследних.ЛицевойСчет
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ИтоговаяТаблицаИндПУ.ЛицевойСчет КАК ЛицевойСчет,
	|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УПЖКХ_ПривязанныеКЛицевомуСчетуКомнатыСрезПоследних.Комната) КАК КоличествоКомнат
	|			ИЗ
	|				ИтоговаяТаблицаИндПУ КАК ИтоговаяТаблицаИндПУ
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_ПривязанныеКЛицевомуСчетуКомнаты.СрезПоследних(&ДатаКон, ) КАК УПЖКХ_ПривязанныеКЛицевомуСчетуКомнатыСрезПоследних
	|					ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет = УПЖКХ_ПривязанныеКЛицевомуСчетуКомнатыСрезПоследних.ЛицевойСчет
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ИтоговаяТаблицаИндПУ.ЛицевойСчет) КАК ПривязанныеКомнаты
	|			ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет = ПривязанныеКомнаты.ЛицевойСчет
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ИтоговаяТаблицаИндПУ.ЛицевойСчет КАК ЛицевойСчет,
	|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УПЖКХ_СведенияОЗарегистрированныхСрезПоследних.Жилец) КАК КолЗарегистрированных,
	|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УПЖКХ_СведенияОПроживающихСрезПоследних.Жилец) КАК КолПроживающих
	|			ИЗ
	|				ИтоговаяТаблицаИндПУ КАК ИтоговаяТаблицаИндПУ
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_СведенияОЗарегистрированных.СрезПоследних(&ДатаКон, ) КАК УПЖКХ_СведенияОЗарегистрированныхСрезПоследних
	|					ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет = УПЖКХ_СведенияОЗарегистрированныхСрезПоследних.ЛицевойСчет
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_СведенияОПроживающих.СрезПоследних(&ДатаКон, ) КАК УПЖКХ_СведенияОПроживающихСрезПоследних
	|					ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет = УПЖКХ_СведенияОПроживающихСрезПоследних.ЛицевойСчет
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ИтоговаяТаблицаИндПУ.ЛицевойСчет) КАК СведенияОЖильцах
	|			ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет = СведенияОЖильцах.ЛицевойСчет
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(&ДатаКон, ) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
	|			ПО ИтоговаяТаблицаИндПУ.ЛицевойСчет = УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет
	|		ПО ИтоговаяТаблицаКолПУ.Объект = ИтоговаяТаблицаИндПУ.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ Потери КАК Потери
	|		ПО ИтоговаяТаблицаКолПУ.Объект = Потери.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоЗакрепленныхОбъектов КАК КоличествоЗакрепленныхОбъектов
	|		ПО ИтоговаяТаблицаКолПУ.Счетчик = КоличествоЗакрепленныхОбъектов.Счетчик
	|ГДЕ
	|	НЕ ИтоговаяТаблицаИндПУ.ЛицевойСчет ЕСТЬ NULL
	|ИТОГИ
	|	МАКСИМУМ(НомерПУ),
	|	МАКСИМУМ(Помещение),
	|	МАКСИМУМ(Коэффициент),
	|	МАКСИМУМ(Доля),
	|	МАКСИМУМ(ДневПредСчет),
	|	МАКСИМУМ(НочПредСчет),
	|	МАКСИМУМ(ПикПредСчет),
	|	МАКСИМУМ(ДневТекСчет),
	|	МАКСИМУМ(НочТекСчет),
	|	МАКСИМУМ(ПикТекСчет),
	|	МАКСИМУМ(ДневОборотСчет),
	|	МАКСИМУМ(НочОборотСчет),
	|	МАКСИМУМ(ПикОборотСчет),
	|	МАКСИМУМ(ИтогоОборотСчет),
	|	МАКСИМУМ(ДневПредКол),
	|	МАКСИМУМ(НочПредКол),
	|	МАКСИМУМ(ПикПредКол),
	|	МАКСИМУМ(ДневТекКол),
	|	МАКСИМУМ(НочТекКол),
	|	МАКСИМУМ(ПикТекКол),
	|	МАКСИМУМ(ДневОборотКол),
	|	МАКСИМУМ(НочОборотКол),
	|	МАКСИМУМ(ПикОборотКол),
	|	МАКСИМУМ(ИтогоОборотКол),
	|	МАКСИМУМ(ПотериДнев),
	|	МАКСИМУМ(ПотериНоч),
	|	МАКСИМУМ(ПотериПик),
	|	МАКСИМУМ(ПотериИтог),
	|	МАКСИМУМ(ИтогПотери),
	|	СУММА(ИндДневОборот),
	|	СУММА(ИндНочОборот),
	|	СУММА(ИндПикОборот),
	|	СУММА(ИтогоОборотИнд),
	|	СУММА(ИндСумма),
	|	СУММА(ИндДневОборотОПУ),
	|	СУММА(ИндНочОборотОПУ),
	|	СУММА(ИндПикОборотОПУ),
	|	СУММА(ИндСуммаОПУ),
	|	СУММА(ИндБезИПУ),
	|	СУММА(ИндСуммаБезИПУ),
	|	СУММА(ИндСторноОборот),
	|	СУММА(ИндСторноСумма),
	|	СУММА(ИндСуммаОбщая),
	|	СУММА(ИндИтог),
	|	СУММА(КоэффициентРаспределения),
	|	СУММА(ДляРасчетаКоэффициента),
	|	СУММА(ИндОбъемОПУ),
	|	МАКСИМУМ(КоличествоОбъектов)
	|ПО
	|	Объект,
	|	Счетчик";
	
	// Если объект заполнен, то заменяем текст в запросе и передаем параметры с объектами.
	Если ЗначениеЗаполнено(ПараметрыОтчета.Объект) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие", "Объект В (&Объекты)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапроса()

// Процедура заполняет таблицу с общими сведениями.
Процедура ЗаполнитьОбщиеСведения(Макет, Документ, НаименованиеПоказателя = Неопределено, НаименованиеОбластиСтроки, 
								НаименованиеОбластиСтолбца, ДанныеДляЗаполнения = Неопределено, НаличиеДоли = Ложь, мТочностьОбъемаНачислений)
	
	ОбластьПоказатель  = Макет.ПолучитьОбласть(НаименованиеОбластиСтроки + "|" + НаименованиеОбластиСтолбца + "Показатель");
	ОбластьКоэффициент = Макет.ПолучитьОбласть(НаименованиеОбластиСтроки + "|" + НаименованиеОбластиСтолбца + "Коэффициент");
	ОбластьПоказания   = Макет.ПолучитьОбласть(НаименованиеОбластиСтроки + "|" + НаименованиеОбластиСтолбца + "Показания");
	ОбластьДоля        = Макет.ПолучитьОбласть(НаименованиеОбластиСтроки + "|" + НаименованиеОбластиСтолбца + "Доля");
	ОбластьРасход      = Макет.ПолучитьОбласть(НаименованиеОбластиСтроки + "|" + НаименованиеОбластиСтолбца + "Расход");
	ОбластьПУ          = Макет.ПолучитьОбласть(НаименованиеОбластиСтроки + "|" + НаименованиеОбластиСтолбца + "ПУ");
	
	Если ЗначениеЗаполнено(ДанныеДляЗаполнения) Тогда
		
		ЗаполнитьЗначенияСвойств(ОбластьПоказания.Параметры, ДанныеДляЗаполнения);
		ЗаполнитьЗначенияСвойств(ОбластьРасход.Параметры, ДанныеДляЗаполнения);
		ЗаполнитьЗначенияСвойств(ОбластьКоэффициент.Параметры, ДанныеДляЗаполнения);
		Если НаименованиеПоказателя = "Потери" Тогда
			ОбластьРасход.Параметры.КоэфРаспределения = ?(ЗначениеЗаполнено(ДанныеДляЗаполнения.ДляРасчетаКоэффициента) И ЗначениеЗаполнено(ДанныеДляЗаполнения.ИтогПотери),
														ДанныеДляЗаполнения.ИтогПотери / ДанныеДляЗаполнения.ДляРасчетаКоэффициента, 0);
		КонецЕсли;
		
		ОбластьПоказатель.Параметры.Показатель = НаименованиеПоказателя;
		
		Если НаличиеДоли Тогда
			ЗаполнитьЗначенияСвойств(ОбластьДоля.Параметры, ДанныеДляЗаполнения);
			ЗаполнитьЗначенияСвойств(ОбластьПУ.Параметры, ДанныеДляЗаполнения);
		КонецЕсли;
		
	КонецЕсли;
	
	СписокФорматируемыхПараметровПоказаний = Новый СписокЗначений;
	СписокФорматируемыхПараметровПоказаний.Добавить("ДневПредКол");
	СписокФорматируемыхПараметровПоказаний.Добавить("НочПредКол");
	СписокФорматируемыхПараметровПоказаний.Добавить("ПикПредКол");
	
	СписокФорматируемыхПараметровПоказаний.Добавить("ДневТекКол");
	СписокФорматируемыхПараметровПоказаний.Добавить("НочТекКол");
	СписокФорматируемыхПараметровПоказаний.Добавить("ПикТекКол");
	
	СписокФорматируемыхПараметровПоказаний.Добавить("ДневПредСчет");
	СписокФорматируемыхПараметровПоказаний.Добавить("НочПредСчет");
	СписокФорматируемыхПараметровПоказаний.Добавить("ПикПредСчет");
	
	СписокФорматируемыхПараметровПоказаний.Добавить("ДневТекСчет");
	СписокФорматируемыхПараметровПоказаний.Добавить("НочТекСчет");
	СписокФорматируемыхПараметровПоказаний.Добавить("ПикТекСчет");
	
	СписокФорматируемыхПараметровРасход = Новый СписокЗначений;
	СписокФорматируемыхПараметровРасход.Добавить("ДневОборотКол");
	СписокФорматируемыхПараметровРасход.Добавить("НочОборотКол");
	СписокФорматируемыхПараметровРасход.Добавить("ПикОборотКол");
	СписокФорматируемыхПараметровРасход.Добавить("ИтогоОборотКол");
	
	СписокФорматируемыхПараметровРасход.Добавить("ДневОборотСчет");
	СписокФорматируемыхПараметровРасход.Добавить("НочОборотСчет");
	СписокФорматируемыхПараметровРасход.Добавить("ПикОборотСчет");
	СписокФорматируемыхПараметровРасход.Добавить("ИтогоОборотСчет");
	
	СписокФорматируемыхПараметровРасход.Добавить("ИндДневОборот");
	СписокФорматируемыхПараметровРасход.Добавить("ИндНочОборот");
	СписокФорматируемыхПараметровРасход.Добавить("ИндПикОборот");
	СписокФорматируемыхПараметровРасход.Добавить("ИтогоОборотИнд");
	
	СписокФорматируемыхПараметровРасход.Добавить("ИндБезИПУ");
	
	СписокФорматируемыхПараметровРасход.Добавить("ПотериДнев");
	СписокФорматируемыхПараметровРасход.Добавить("ПотериНоч");
	СписокФорматируемыхПараметровРасход.Добавить("ПотериПик");
	СписокФорматируемыхПараметровРасход.Добавить("ИтогПотери");
	
	СтрокаФормата = "ЧДЦ=" + Строка(мТочностьОбъемаНачислений) + "; ЧН=Х";
	
	ОтформатироватьПараметрыОбласти(ОбластьПоказания, СписокФорматируемыхПараметровПоказаний, СтрокаФормата);
	ОтформатироватьПараметрыОбласти(ОбластьРасход,    СписокФорматируемыхПараметровРасход,    СтрокаФормата);
	
	Документ.Вывести(ОбластьПоказатель);
	
	Если НаличиеДоли Тогда
		Документ.Присоединить(ОбластьПУ);
	КонецЕсли;
	
	Документ.Присоединить(ОбластьКоэффициент);
	
	Документ.Присоединить(ОбластьПоказания);
	
	Если НаличиеДоли Тогда
		Документ.Присоединить(ОбластьДоля);
	КонецЕсли;
	
	Документ.Присоединить(ОбластьРасход);
	
КонецПроцедуры // ПолучитьМакеты()

// Процедура заполняет таблицу с индивидуальными показаниями.
Процедура ЗаполнитьПоказанияИПУ(Макет, Документ, ДанныеДляЗаполнения, НаименованиеМакета, Уровень, мТочностьОбъемаНачислений)
	
	ОбластьМакета = Макет.ПолучитьОбласть(НаименованиеМакета);
	
	Если ЗначениеЗаполнено(ДанныеДляЗаполнения) Тогда
		ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеДляЗаполнения);
	КонецЕсли;
	
	СписокФорматируемыхПараметров = Новый СписокЗначений;
	СписокФорматируемыхПараметров.Добавить("ИтогоОборотИнд");
	СписокФорматируемыхПараметров.Добавить("ИндБезИПУ");
	СписокФорматируемыхПараметров.Добавить("ИндОбъемОПУ");
	СписокФорматируемыхПараметров.Добавить("ИндСторноОборот");
	
	СтрокаФормата = "ЧДЦ=" + Строка(мТочностьОбъемаНачислений) + ";";
	
	ОтформатироватьПараметрыОбласти(ОбластьМакета, СписокФорматируемыхПараметров, СтрокаФормата);
	
	Документ.Вывести(ОбластьМакета, Уровень);
	
КонецПроцедуры // ЗаполнитьПоказанияИПУ()

// Проверяет наличие реквизита объекта.
//
// Параметры:
//   Объект - объект.
//   ИмяРеквизита - Имя проверяемого реквизита объекта.
//
Функция ЕстьРеквизитОбъекта(Объект, ИмяРеквизита)
	
	КлючУникальности   = Новый УникальныйИдентификатор;
	
	СтруктураРеквизита = Новый Структура(ИмяРеквизита, КлючУникальности);
	
	ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Объект);
	
	Возврат СтруктураРеквизита[ИмяРеквизита] <> КлючУникальности;
	
КонецФункции // ЕстьРеквизитОбъекта()

// Форматирует параметры области в соответствии с заданным форматом.
Процедура ОтформатироватьПараметрыОбласти(Область, СписокФорматируемыхПараметров, СтрокаФормата) Экспорт
	Если Область.Параметры.Количество() > 0 Тогда
		Для Каждого ФорматируемыйПараметр Из СписокФорматируемыхПараметров Цикл
			Если ЕстьРеквизитОбъекта(Область.Параметры, ФорматируемыйПараметр.Значение) Тогда
				Область.Параметры[ФорматируемыйПараметр.Значение] = Формат(Область.Параметры[ФорматируемыйПараметр.Значение], СтрокаФормата);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли