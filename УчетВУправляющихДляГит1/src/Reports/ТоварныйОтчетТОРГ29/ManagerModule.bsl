#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = Отчеты.ТоварныйОтчетТОРГ29.ПолучитьМакет("Макет");

	// Выведем заголовок
	СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
	МОЛВыбранногоСклада = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(ПараметрыОтчета.Склад, КонецДня(ПараметрыОтчета.КонецПериода));

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");

	ОбластьМакета.Параметры.ОрганизацияПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ДатаСоставления 		 = ТекущаяДатаСеанса();
	ОбластьМакета.Параметры.ДатаНачала 				 = ПараметрыОтчета.НачалоПериода;
	ОбластьМакета.Параметры.ДатаКонца 				 = ПараметрыОтчета.КонецПериода;
	ОбластьМакета.Параметры.ОрганизацияПоОКПО 		 = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.МОЛ 					 = ?(НЕ ЗначениеЗаполнено(МОЛВыбранногоСклада), "", МОЛВыбранногоСклада);
	ОбластьМакета.Параметры.МОЛТабельныйНомер 		 = ?(НЕ ЗначениеЗаполнено(МОЛВыбранногоСклада), "", МОЛВыбранногоСклада.Код);
	ОбластьМакета.Параметры.Номер 					 = ПараметрыОтчета.НомерОтчета;
	ВысотаЗаголовка = ОбластьМакета.ВысотаТаблицы;
	ТабличныйДокумент.Вывести(ОбластьМакета);

	// Выведем шапку
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");

	ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(1 + ВысотаЗаголовка, , 2 + ВысотаЗаголовка);

	ТабличныйДокумент.Вывести(ОбластьМакета);

	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.УстановитьПараметр("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",   ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ВидСубконто",   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	Запрос.УстановитьПараметр("Склад", 		   ПараметрыОтчета.Склад);
	Запрос.УстановитьПараметр("Счета", 		   МассивСчетов);
	Запрос.УстановитьПараметр("СчетТары", 	   ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя);

	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Период КАК ДатаДок,
		|	ХозрасчетныйОбороты.Регистратор КАК Док,
		|	ДанныеПервичныхДокументов.НомерРегистратора КАК НомерДок,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК ПризнакПрихода,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК ПризнакРасхода,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.Счет <> &СчетТары
		|				ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Приход,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.Счет = &СчетТары
		|				ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПриходТары,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.Счет <> &СчетТары
		|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Расход,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.Счет = &СчетТары
		|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РасходТары
		|ПОМЕСТИТЬ ДвиженияПоДокументам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&Счета), &ВидСубконто, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО (ДанныеПервичныхДокументов.Организация = &Организация)
		|			И ХозрасчетныйОбороты.Регистратор = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 = &Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Период,
		|	ХозрасчетныйОбороты.Регистратор,
		|	ДанныеПервичныхДокументов.НомерРегистратора
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПризнакПрихода,
		|	ПризнакРасхода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Склад,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.Счет <> &СчетТары
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачальныйОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.Счет = &СчетТары
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачальныйОстатокТары,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.Счет <> &СчетТары
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КонечныйОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.Счет = &СчетТары
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КонечныйОстатокТары
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , Счет В (&Счета), &ВидСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 = &Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияПоДокументам.ДатаДок,
		|	ДвиженияПоДокументам.Док,
		|	ДвиженияПоДокументам.НомерДок,
		|	ДвиженияПоДокументам.Приход,
		|	ДвиженияПоДокументам.ПриходТары
		|ИЗ
		|	ДвиженияПоДокументам КАК ДвиженияПоДокументам
		|ГДЕ
		|	ДвиженияПоДокументам.ПризнакПрихода <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияПоДокументам.ДатаДок,
		|	ДвиженияПоДокументам.Док,
		|	ДвиженияПоДокументам.НомерДок,
		|	ДвиженияПоДокументам.Расход,
		|	ДвиженияПоДокументам.РасходТары
		|ИЗ
		|	ДвиженияПоДокументам КАК ДвиженияПоДокументам
		|ГДЕ
		|	ДвиженияПоДокументам.ПризнакРасхода <> 0";

	РезультатыЗапроса = Запрос.ВыполнитьПакет();

	ТаблицаОстатков = РезультатыЗапроса[1].Выгрузить();
	Если ТаблицаОстатков.Количество() = 0 Тогда
		НачальныйОстаток 	 = 0;
		КонечныйОстаток 	 = 0;
		НачальныйОстатокТары = 0;
		КонечныйОстатокТары  = 0;
	Иначе
		НачальныйОстаток 	 = ТаблицаОстатков[0].НачальныйОстаток;
		КонечныйОстаток 	 = ТаблицаОстатков[0].КонечныйОстаток;
		НачальныйОстатокТары = ТаблицаОстатков[0].НачальныйОстатокТары;
		КонечныйОстатокТары  = ТаблицаОстатков[0].КонечныйОстатокТары;
	КонецЕсли;
	
	// Выведем остатки на начало
	ОбластьМакета = Макет.ПолучитьОбласть("ОстатокНачала");
	
	ОбластьМакета.Параметры.ДатаНачала 				= "Остаток на " + Формат(ПараметрыОтчета.НачалоПериода, "ДЛФ=Д");
	ОбластьМакета.Параметры.НачальнаяСтоимостьВсего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(НачальныйОстаток);
	ОбластьМакета.Параметры.НачальнаяСтоимостьТара 	= ОбщегоНазначенияБПВызовСервера.ФорматСумм(НачальныйОстатокТары);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Выведем приходы	
	ОбластьМакета = Макет.ПолучитьОбласть("Приход");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ТаблицаПриходов = РезультатыЗапроса[2].Выгрузить();
	
	ТаблицаПриходов.Сортировать("ДатаДок Возр");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	Для Каждого СтрокаПрихода Из ТаблицаПриходов Цикл
		ОбластьМакета.Параметры.Докум 		   = СтрокаПрихода.Док;
		ОбластьМакета.Параметры.Расшифровка    = СтрокаПрихода.Док;
		ОбластьМакета.Параметры.ДатаДокумента  = СтрокаПрихода.ДатаДок;
		ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаПрихода.Док.Номер, Истина, Ложь);
		ОбластьМакета.Параметры.СуммаТовара    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаПрихода.Приход);
		ОбластьМакета.Параметры.СуммаТары 	   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаПрихода.ПриходТары);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	Приход 	   = ТаблицаПриходов.Итог("Приход");
	ПриходТары = ТаблицаПриходов.Итог("ПриходТары");
	
	// Выведем итоги по приходам
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоПриход");
	ОбластьМакета.Параметры.ПриходСтоимостьВсего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Приход);
	ОбластьМакета.Параметры.ПриходСтоимостьТара  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ПриходТары);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ВсегоПриход");
	ОбластьМакета.Параметры.ПриходСОстатком 	= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Приход + НачальныйОстаток);
	ОбластьМакета.Параметры.ПриходСОстаткомТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ПриходТары + НачальныйОстатокТары);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выведем расходы
	ОбластьМакета = Макет.ПолучитьОбласть("Расход");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ТаблицаРасходов = РезультатыЗапроса[3].Выгрузить();;
	
	ТаблицаРасходов.Сортировать("ДатаДок Возр");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	Для Каждого СтрокаРасхода Из ТаблицаРасходов Цикл
		ОбластьМакета.Параметры.Докум 		   = СтрокаРасхода.Док;
		ОбластьМакета.Параметры.Расшифровка    = СтрокаРасхода.Док;
		ОбластьМакета.Параметры.ДатаДокумента  = СтрокаРасхода.ДатаДок;
		ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаРасхода.Док.Номер, Истина, Ложь);
		ОбластьМакета.Параметры.СуммаТовара    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаРасхода.Расход);
		ОбластьМакета.Параметры.СуммаТары 	   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаРасхода.РасходТары);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	Расход	   = ТаблицаРасходов.Итог("Расход");
	РасходТары = ТаблицаРасходов.Итог("РасходТары");
	
	// Выведем итоги по расходам
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоРасход");
	
	ОбластьМакета.Параметры.РасходСтоимостьВсего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Расход);
	ОбластьМакета.Параметры.РасходСтоимостьТара  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(РасходТары);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОстатокКонец");
	
	ОбластьМакета.Параметры.ДатаКонца 			   = "Остаток на " + Формат(ПараметрыОтчета.КонецПериода, "ДЛФ=Д");
	ОбластьМакета.Параметры.КонечнаяСтоимостьВсего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(КонечныйОстаток);
	ОбластьМакета.Параметры.КонечнаяСтоимостьТара  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(КонечныйОстатокТары);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Выведем подвал
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ПовторятьПриПечатиСтроки;
	
	ПоместитьВоВременноеХранилище(ТабличныйДокумент, АдресХранилища);
	
КонецПроцедуры

#КонецЕсли