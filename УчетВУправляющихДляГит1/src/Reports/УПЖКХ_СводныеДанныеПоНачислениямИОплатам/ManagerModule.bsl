
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Функции_получения_данных_для_монитора_руководителя

// Получает и возвращает данные для монитора руководителя ЖКХ.
Функция ПолучитьДанныеДляМонитораЖКХ(СтруктураПараметров, Раздел) Экспорт
	
	ТаблицаОрганизаций = ПолучитьТаблицуОрганизаций(СтруктураПараметров.Организация);
	
	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.ЗагрузитьЗначения(ТаблицаОрганизаций.ВыгрузитьКолонку("Организация"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапроса(СтруктураПараметров.ВариантОтчета, Истина);
	
	Запрос.УстановитьПараметр("НачалоПериода",      СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       СтруктураПараметров.КонецПериода);
	Запрос.УстановитьПараметр("ТаблицаОрганизаций", ТаблицаОрганизаций);
	Запрос.УстановитьПараметр("СписокОрганизаций",  СписокОрганизаций);
	Запрос.УстановитьПараметр("ТаблицаПериодов",    ПолучитьТаблицуПериодов(СтруктураПараметров.НачалоПериода, КонецМесяца(СтруктураПараметров.КонецПериода)));
	Запрос.УстановитьПараметр("ВариантОкругления",  ?(СтруктураПараметров.ВариантОкругления = 0, 1, СтруктураПараметров.ВариантОкругления));
	
	Выборка      = Запрос.Выполнить().Выбрать();
	ДеревоДанных = Обработки.УПЖКХ_МониторОсновныхПоказателейЖКХ.ПолучитьДеревоДанныхДляЗаполнения();
	
	Пока Выборка.Следующий() Цикл
		
		Если Раздел = Перечисления.УПЖКХ_РазделыМонитораРуководителяЖКХ.СводныеДанныеПоНачислениямИОплатам Тогда
			
			// Уровень 1 Начисления
			НоваяСтрокаНачисления = ДеревоДанных.Строки.Добавить();
			НоваяСтрокаНачисления.Представление = "Начисления";
			НоваяСтрокаНачисления.Сумма         = Выборка.НачисленоВсего;
			НоваяСтрокаНачисления.Порядок       = 1;
			НоваяСтрокаНачисления.Период        = Выборка.Период;
			
			// Уровень 2 Начисления
			НоваяСтрокаНачислено = НоваяСтрокаНачисления.Строки.Добавить();
			НоваяСтрокаНачислено.Представление = "Начислено";
			НоваяСтрокаНачислено.Сумма         = Выборка.Начисления;
			НоваяСтрокаНачислено.Порядок       = 1;
			НоваяСтрокаНачислено.Период        = Выборка.Период;
			
			НоваяСтрокаПерерасчет = НоваяСтрокаНачисления.Строки.Добавить();
			НоваяСтрокаПерерасчет.Представление = "Перерасчет";
			НоваяСтрокаПерерасчет.Сумма         = Выборка.Перерасчеты;
			НоваяСтрокаПерерасчет.Порядок       = 2;
			НоваяСтрокаПерерасчет.Период        = Выборка.Период;
			
			НоваяСтрокаПени = НоваяСтрокаНачисления.Строки.Добавить();
			НоваяСтрокаПени.Представление = "Пени";
			НоваяСтрокаПени.Сумма         = Выборка.Пени;
			НоваяСтрокаПени.Порядок       = 3;
			НоваяСтрокаПени.Период        = Выборка.Период;
			
			// Уровень 1 Льготы
			
			НоваяСтрокаЛьготы = ДеревоДанных.Строки.Добавить();
			НоваяСтрокаЛьготы.Представление = "Льготы";
			НоваяСтрокаЛьготы.Сумма         = Выборка.Льготы;
			НоваяСтрокаЛьготы.Порядок       = 1;
			НоваяСтрокаЛьготы.Период        = Выборка.Период;
			
			// Уровень 1 Оплаты
			НоваяСтрокаОплаты = ДеревоДанных.Строки.Добавить();
			НоваяСтрокаОплаты.Представление = "Оплаты";
			НоваяСтрокаОплаты.Сумма         = Выборка.ОплаченоВсего;
			НоваяСтрокаОплаты.Порядок       = 2;
			НоваяСтрокаОплаты.Период        = Выборка.Период;
			
			// Уровень 2 Оплаты
			НоваяСтрокаОплатыПоПени = НоваяСтрокаОплаты.Строки.Добавить();
			НоваяСтрокаОплатыПоПени.Представление = "По пени";
			НоваяСтрокаОплатыПоПени.Сумма         = Выборка.ОплаченныеПени;
			НоваяСтрокаОплатыПоПени.Порядок       = 1;
			НоваяСтрокаОплатыПоПени.Период        = Выборка.Период;
			
			НоваяСтрокаОплатыОстальные = НоваяСтрокаОплаты.Строки.Добавить();
			НоваяСтрокаОплатыОстальные.Представление = "По остальным начислениям";
			НоваяСтрокаОплатыОстальные.Сумма         = Выборка.ОплаченныеНачисления;
			НоваяСтрокаОплатыОстальные.Порядок       = 2;
			НоваяСтрокаОплатыОстальные.Период        = Выборка.Период;
			
		ИначеЕсли Раздел = Перечисления.УПЖКХ_РазделыМонитораРуководителяЖКХ.ДинамикаЗадолженностиПоВсемУслугам Тогда
			
			// Уровень 1 Начальное сальдо
			НоваяСтрокаНачальноеСальдо = ДеревоДанных.Строки.Добавить();
			НоваяСтрокаНачальноеСальдо.Представление = "Начальное сальдо";
			НоваяСтрокаНачальноеСальдо.Сумма         = Выборка.НачальноеСальдо;
			НоваяСтрокаНачальноеСальдо.Порядок       = 1;
			НоваяСтрокаНачальноеСальдо.Период        = Выборка.Период;
			
			// Уровень 2 Начальное сальдо
			НоваяСтрокаНачальноеСальдоПени = НоваяСтрокаНачальноеСальдо.Строки.Добавить();
			НоваяСтрокаНачальноеСальдоПени.Представление = "по пени";
			НоваяСтрокаНачальноеСальдоПени.Сумма         = Выборка.НачальноеСальдоПени;
			НоваяСтрокаНачальноеСальдоПени.Порядок       = 1;
			НоваяСтрокаНачальноеСальдоПени.Период        = Выборка.Период;
			
			НоваяСтрокаНачальноеСальдоНачисления = НоваяСтрокаНачальноеСальдо.Строки.Добавить();
			НоваяСтрокаНачальноеСальдоНачисления.Представление = "по начислениям";
			НоваяСтрокаНачальноеСальдоНачисления.Сумма         = Выборка.НачальноеСальдоНачисление;
			НоваяСтрокаНачальноеСальдоНачисления.Порядок       = 2;
			НоваяСтрокаНачальноеСальдоНачисления.Период        = Выборка.Период;
			
			НоваяСтрокаНачальноеСальдоРассрочка = НоваяСтрокаНачальноеСальдо.Строки.Добавить();
			НоваяСтрокаНачальноеСальдоРассрочка.Представление = "по рассрочке";
			НоваяСтрокаНачальноеСальдоРассрочка.Сумма         = Выборка.НачальноеСальдоРассрочка;
			НоваяСтрокаНачальноеСальдоРассрочка.Порядок       = 3;
			НоваяСтрокаНачальноеСальдоРассрочка.Период        = Выборка.Период;
			
			// Уровень 1 Конечное сальдо
			НоваяСтрокаКонечноеСальдо = ДеревоДанных.Строки.Добавить();
			НоваяСтрокаКонечноеСальдо.Представление = "Конечное сальдо";
			НоваяСтрокаКонечноеСальдо.Сумма         = Выборка.КонечноеСальдо;
			НоваяСтрокаКонечноеСальдо.Порядок       = 2;
			НоваяСтрокаКонечноеСальдо.Период        = Выборка.Период;
			
			// Уровень 2 Конечное сальдо
			НоваяСтрокаКонечноеСальдоПени = НоваяСтрокаКонечноеСальдо.Строки.Добавить();
			НоваяСтрокаКонечноеСальдоПени.Представление = "по пени";
			НоваяСтрокаКонечноеСальдоПени.Сумма         = Выборка.КонечноеСальдоПени;
			НоваяСтрокаКонечноеСальдоПени.Порядок       = 1;
			НоваяСтрокаКонечноеСальдоПени.Период        = Выборка.Период;
			
			НоваяСтрокаКонечноеСальдоНачисления = НоваяСтрокаКонечноеСальдо.Строки.Добавить();
			НоваяСтрокаКонечноеСальдоНачисления.Представление = "по начислениям";
			НоваяСтрокаКонечноеСальдоНачисления.Сумма         = Выборка.КонечноеСальдоНачисление;
			НоваяСтрокаКонечноеСальдоНачисления.Порядок       = 2;
			НоваяСтрокаКонечноеСальдоНачисления.Период        = Выборка.Период;
			
			НоваяСтрокаКонечноеСальдоРассрочка = НоваяСтрокаКонечноеСальдо.Строки.Добавить();
			НоваяСтрокаКонечноеСальдоРассрочка.Представление = "по рассрочке";
			НоваяСтрокаКонечноеСальдоРассрочка.Сумма         = Выборка.КонечноеСальдоРассрочка;
			НоваяСтрокаКонечноеСальдоРассрочка.Порядок       = 3;
			НоваяСтрокаКонечноеСальдоРассрочка.Период        = Выборка.Период;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДеревоДанных;
	
КонецФункции

#КонецОбласти // Процедура_получения_данных_для_монитора_руководителя

#Область Обработчики_формирования_отчета

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//  ДокументРезультат - табличный документ, в который будет осуществлен вывод
//  ПоказыватьЗаголовок - Булево - показывать ли заголовок
//  ВысотаЗаголовка - Число - переменная, в которую запишется высота области заголовка.
//
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ДеревоДанных = ПолучитьДеревоДанных(ПараметрыОтчета);
	
	СкорректироватьОстаткиВДереве(ДеревоДанных, ПараметрыОтчета);
	
	Если ДеревоДанных.Строки.Количество() = 0 Тогда
		ПоместитьВоВременноеХранилище(Неопределено, АдресХранилища);
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент = ЗаполнитьОтчет(ДеревоДанных, ПараметрыОтчета);
	
	ПоместитьВоВременноеХранилище(ТабличныйДокумент, АдресХранилища);
	
КонецПроцедуры // СформироватьОтчет()

// Возвращает текст запроса для получения дерева данных отчета.
Функция ПолучитьТекстЗапроса(ВариантОтчета, ДляМонитораРуководителя = Ложь)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОрганизаций.Организация
	|ПОМЕСТИТЬ врТаблицаОрганизаций
	|ИЗ
	|	&ТаблицаОрганизаций КАК ТаблицаОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПериодов.Период
	|ПОМЕСТИТЬ врТаблицаПериодов
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врТаблицаОрганизаций.Организация,
	|	врТаблицаПериодов.Период
	|ПОМЕСТИТЬ врОрганизацииИПериоды
	|ИЗ
	|	врТаблицаОрганизаций КАК врТаблицаОрганизаций,
	|	врТаблицаПериодов КАК врТаблицаПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ВариантОтчета = "НачисленияИОплаты" Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ДанныеИзРегистра.Организация КАК Организация,
		|	ДанныеИзРегистра.Период КАК Период,
		|	СУММА(ДанныеИзРегистра.Начисления + ДанныеИзРегистра.Пени + ДанныеИзРегистра.Перерасчеты) КАК НачисленоВсего,
		|	СУММА(ДанныеИзРегистра.Начисления) КАК Начисления,
		|	СУММА(ДанныеИзРегистра.Пени) КАК Пени,
		|	СУММА(ДанныеИзРегистра.Перерасчеты) КАК Перерасчеты,
		|	СУММА(ДанныеИзРегистра.Льготы) КАК Льготы,
		|	СУММА(ДанныеИзРегистра.ОплаченоВсего) КАК ОплаченоВсего,
		|	СУММА(ДанныеИзРегистра.ОплаченныеНачисления) КАК ОплаченныеНачисления,
		|	СУММА(ДанныеИзРегистра.ОплаченныеПени) КАК ОплаченныеПени,
		|	СУММА(ДанныеИзРегистра.НачальноеСальдо) КАК НачальноеСальдо,
		|	СУММА(ДанныеИзРегистра.КонечноеСальдо) КАК КонечноеСальдо
		|ПОМЕСТИТЬ втДанныеИзРегистра
		|ИЗ
		|	(ВЫБРАТЬ
		|		УПЖКХ_НачисленияОбороты.Организация КАК Организация,
		|		КОНЕЦПЕРИОДА(УПЖКХ_НачисленияОбороты.Период, МЕСЯЦ) КАК Период,
		|		ВЫБОР
		|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ЗачетДолговИПереплат))
		|				ТОГДА 0
		|			КОГДА УПЖКХ_НачисленияОбороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.Пени)
		|				ТОГДА 0
		|			КОГДА УПЖКХ_НачисленияОбороты.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.НачислениеУслуг), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.НачислениеПоПУ))
		|					И УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ПерерасчетНачисления), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Корректировка), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.КорректировкаПриОтсутствииПоказанийПоИПУ))
		|				ТОГДА 0
		|			КОГДА УПЖКХ_НачисленияОбороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.Льготы)
		|				ТОГДА 0
		|			ИНАЧЕ УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
		|		КОНЕЦ КАК Начисления,
		|		ВЫБОР
		|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата)
		|				ТОГДА -УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ОплаченоВсего,
		|		ВЫБОР
		|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата)
		|					И НЕ УПЖКХ_НачисленияОбороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.Пени)
		|				ТОГДА -УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ОплаченныеНачисления,
		|		ВЫБОР
		|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата)
		|					И УПЖКХ_НачисленияОбороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.Пени)
		|				ТОГДА -УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ОплаченныеПени,
		|		ВЫБОР
		|			КОГДА УПЖКХ_НачисленияОбороты.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.НачислениеУслуг), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.НачислениеПоПУ))
		|					И УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ПерерасчетНачисления), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Корректировка), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.КорректировкаПриОтсутствииПоказанийПоИПУ))
		|				ТОГДА УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Перерасчеты,
		|		ВЫБОР
		|			КОГДА УПЖКХ_НачисленияОбороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.Льготы)
		|				ТОГДА -УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Льготы,
		|		ВЫБОР
		|			КОГДА УПЖКХ_НачисленияОбороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.Пени)
		|					И НЕ УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ЗачетДолговИПереплат))
		|				ТОГДА УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Пени,
		|		0 КАК НачальноеСальдо,
		|		0 КАК КонечноеСальдо
		|	ИЗ
		|		РегистрНакопления.УПЖКХ_Начисления.Обороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Месяц,
		|				Организация В (&СписокОрганизаций)) КАК УПЖКХ_НачисленияОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация,
		|		КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ),
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		СУММА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток),
		|		СУММА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток)
		|	ИЗ
		|		РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Месяц,
		|				,
		|				Организация В (&СписокОрганизаций)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|	
		|	СГРУППИРОВАТЬ ПО
		|		КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация,
		|		КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период) КАК ДанныеИзРегистра
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеИзРегистра.Организация,
		|	ДанныеИзРегистра.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врОрганизацииИПериоды.Организация КАК Организация,
		|	ГОД(врОрганизацииИПериоды.Период) КАК ПериодГод,
		|	врОрганизацииИПериоды.Период КАК Период,
		|	ЕСТЬNULL(втДанныеИзРегистра.НачисленоВсего, 0) КАК НачисленоВсего,
		|	ЕСТЬNULL(втДанныеИзРегистра.Начисления, 0) КАК Начисления,
		|	ЕСТЬNULL(втДанныеИзРегистра.Пени, 0) КАК Пени,
		|	ЕСТЬNULL(втДанныеИзРегистра.Перерасчеты, 0) КАК Перерасчеты,
		|	ЕСТЬNULL(втДанныеИзРегистра.Льготы, 0) КАК Льготы,
		|	ЕСТЬNULL(втДанныеИзРегистра.ОплаченоВсего, 0) КАК ОплаченоВсего,
		|	ЕСТЬNULL(втДанныеИзРегистра.ОплаченныеНачисления, 0) КАК ОплаченныеНачисления,
		|	ЕСТЬNULL(втДанныеИзРегистра.ОплаченныеПени, 0) КАК ОплаченныеПени,
		|	ЕСТЬNULL(втДанныеИзРегистра.НачальноеСальдо, NULL) КАК НачальноеСальдо,
		|	ЕСТЬNULL(втДанныеИзРегистра.КонечноеСальдо, NULL) КАК КонечноеСальдо
		|ПОМЕСТИТЬ втИтоговая
		|ИЗ
		|	врОрганизацииИПериоды КАК врОрганизацииИПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеИзРегистра КАК втДанныеИзРегистра
		|		ПО врОрганизацииИПериоды.Организация = втДанныеИзРегистра.Организация
		|			И врОрганизацииИПериоды.Период = втДанныеИзРегистра.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтоговая.Период,
		|	втИтоговая.Организация,
		|	МАКСИМУМ(КОНЕЦПЕРИОДА(ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, ДАТАВРЕМЯ(1, 1, 1)), МЕСЯЦ)) КАК ПериодКонОстаток
		|ПОМЕСТИТЬ втПериодыОпределенныхКонОстатков
		|ИЗ
		|	втИтоговая КАК втИтоговая
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|				,
		|				&КонецПериода,
		|				Месяц,
		|				,
		|				Организация В (&СписокОрганизаций)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|		ПО втИтоговая.Организация = КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация
		|			И (втИтоговая.Период >= КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ))
		|ГДЕ
		|	(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияПриход <> 0
		|			ИЛИ КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияРасход <> 0)
		|	И (втИтоговая.КонечноеСальдо ЕСТЬ NULL ИЛИ втИтоговая.НачальноеСальдо ЕСТЬ NULL)
		|
		|СГРУППИРОВАТЬ ПО
		|	втИтоговая.Период,
		|	втИтоговая.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтоговая.Период,
		|	втИтоговая.Организация,
		|	ЕСТЬNULL(втИтоговая.НачальноеСальдо, ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0)) КАК НачальноеСальдо,
		|	ЕСТЬNULL(втИтоговая.КонечноеСальдо, ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0)) КАК КонечноеСальдо
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	втИтоговая КАК втИтоговая
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПериодыОпределенныхКонОстатков КАК втПериодыОпределенныхКонОстатков
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|					,
		|					&КонецПериода,
		|					Месяц,
		|					,
		|					Организация В (&СписокОрганизаций)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|			ПО (втПериодыОпределенныхКонОстатков.ПериодКонОстаток = КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ))
		|				И втПериодыОпределенныхКонОстатков.Организация = КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация
		|		ПО втИтоговая.Организация = втПериодыОпределенныхКонОстатков.Организация
		|			И втИтоговая.Период = втПериодыОпределенныхКонОстатков.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтоговая.Организация КАК Организация,
		|	втИтоговая.Период КАК Период,
		|	ЕСТЬNULL(втИтоговая.НачальноеСальдо, ЕСТЬNULL(втОстатки.НачальноеСальдо, 0)) КАК НачальноеСальдо,
		|	ЕСТЬNULL(втИтоговая.КонечноеСальдо, ЕСТЬNULL(втОстатки.КонечноеСальдо, 0)) КАК КонечноеСальдо
		|ПОМЕСТИТЬ втОстаткиИтоговая
		|ИЗ
		|	втИтоговая КАК втИтоговая
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
		|		ПО втИтоговая.Период = втОстатки.Период
		|			И втИтоговая.Организация = втОстатки.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтоговая.Организация КАК Организация,
		|	втИтоговая.ПериодГод КАК ПериодГод,
		|	втИтоговая.Период КАК Период,
		|	ЕСТЬNULL(втОстаткиИтоговая.НачальноеСальдо, 0) КАК НачальноеСальдо,
		|	втИтоговая.НачисленоВсего КАК НачисленоВсего,
		|	втИтоговая.Начисления КАК Начисления,
		|	втИтоговая.Пени КАК Пени,
		|	втИтоговая.Перерасчеты КАК Перерасчеты,
		|	втИтоговая.Льготы КАК Льготы,
		|	втИтоговая.ОплаченоВсего КАК ОплаченоВсего,
		|	втИтоговая.ОплаченныеНачисления КАК ОплаченныеНачисления,
		|	втИтоговая.ОплаченныеПени КАК ОплаченныеПени,
		|	ЕСТЬNULL(втОстаткиИтоговая.КонечноеСальдо, 0) КАК КонечноеСальдо
		|ПОМЕСТИТЬ втОсновная
		|ИЗ
		|	втИтоговая КАК втИтоговая
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиИтоговая КАК втОстаткиИтоговая
		|		ПО втИтоговая.Организация = втОстаткиИтоговая.Организация
		|			И втИтоговая.Период = втОстаткиИтоговая.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Если ДляМонитораРуководителя Тогда
			
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	втОсновная.Период,
			|	0 КАК НачальноеСальдо,
			|	0 КАК КонечноеСальдо,
			|	СУММА(втОсновная.НачисленоВсего) КАК НачисленоВсего,
			|	СУММА(втОсновная.Начисления) КАК Начисления,
			|	СУММА(втОсновная.Пени) КАК Пени,
			|	СУММА(втОсновная.Перерасчеты) КАК Перерасчеты,
			|	СУММА(втОсновная.Льготы) КАК Льготы,
			|	СУММА(втОсновная.ОплаченоВсего) КАК ОплаченоВсего,
			|	СУММА(втОсновная.ОплаченныеНачисления) КАК ОплаченныеНачисления,
			|	СУММА(втОсновная.ОплаченныеПени) КАК ОплаченныеПени
			|ПОМЕСТИТЬ втОбъединенная
			|ИЗ
			|	втОсновная КАК втОсновная
			|
			|СГРУППИРОВАТЬ ПО
			|	втОсновная.Период,
			|	втОсновная.НачальноеСальдо
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	втОсновная.Период,
			|	втОсновная.НачальноеСальдо,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	втОсновная КАК втОсновная
			|ГДЕ
			|	втОсновная.Период В
			|			(ВЫБРАТЬ
			|				МИНИМУМ(втОсновная.Период) КАК Период
			|			ИЗ
			|				втОсновная КАК втОсновная)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	втОсновная.Период,
			|	0,
			|	втОсновная.КонечноеСальдо,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	втОсновная КАК втОсновная
			|ГДЕ
			|	втОсновная.Период В
			|			(ВЫБРАТЬ
			|				МАКСИМУМ(втОсновная.Период) КАК Период
			|			ИЗ
			|				втОсновная КАК втОсновная)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втОбъединенная.Период,
			|	МАКСИМУМ(втОбъединенная.НачальноеСальдо / &ВариантОкругления) КАК НачальноеСальдо,
			|	МАКСИМУМ(втОбъединенная.КонечноеСальдо / &ВариантОкругления) КАК КонечноеСальдо,
			|	СУММА(втОбъединенная.НачисленоВсего / &ВариантОкругления) КАК НачисленоВсего,
			|	СУММА(втОбъединенная.Начисления / &ВариантОкругления) КАК Начисления,
			|	СУММА(втОбъединенная.Пени / &ВариантОкругления) КАК Пени,
			|	СУММА(втОбъединенная.Перерасчеты / &ВариантОкругления) КАК Перерасчеты,
			|	СУММА(втОбъединенная.Льготы / &ВариантОкругления) КАК Льготы,
			|	СУММА(втОбъединенная.ОплаченоВсего / &ВариантОкругления) КАК ОплаченоВсего,
			|	СУММА(втОбъединенная.ОплаченныеНачисления / &ВариантОкругления) КАК ОплаченныеНачисления,
			|	СУММА(втОбъединенная.ОплаченныеПени / &ВариантОкругления) КАК ОплаченныеПени
			|ИЗ
			|	втОбъединенная КАК втОбъединенная
			|
			|СГРУППИРОВАТЬ ПО
			|	втОбъединенная.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	втОбъединенная.Период";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	втОсновная.Организация КАК Организация,
			|	втОсновная.ПериодГод КАК ПериодГод,
			|	втОсновная.Период,
			|	втОсновная.НачальноеСальдо / &ВариантОкругления КАК НачальноеСальдо,
			|	втОсновная.НачисленоВсего / &ВариантОкругления КАК НачисленоВсего,
			|	втОсновная.Начисления / &ВариантОкругления КАК Начисления,
			|	втОсновная.Пени / &ВариантОкругления КАК Пени,
			|	втОсновная.Перерасчеты / &ВариантОкругления КАК Перерасчеты,
			|	втОсновная.Льготы / &ВариантОкругления КАК Льготы,
			|	втОсновная.ОплаченоВсего / &ВариантОкругления КАК ОплаченоВсего,
			|	втОсновная.ОплаченныеНачисления / &ВариантОкругления КАК ОплаченныеНачисления,
			|	втОсновная.ОплаченныеПени / &ВариантОкругления КАК ОплаченныеПени,
			|	втОсновная.КонечноеСальдо / &ВариантОкругления КАК КонечноеСальдо
			|ИЗ
			|	втОсновная КАК втОсновная
			|
			|УПОРЯДОЧИТЬ ПО
			|	втОсновная.Организация,
			|	втОсновная.Период
			|ИТОГИ
			|	СУММА(НачисленоВсего),
			|	СУММА(Начисления),
			|	СУММА(Пени),
			|	СУММА(Перерасчеты),
			|	СУММА(Льготы),
			|	СУММА(ОплаченоВсего),
			|	СУММА(ОплаченныеНачисления),
			|	СУММА(ОплаченныеПени)
			|ПО
			|	Организация,
			|	ПериодГод";
			
		КонецЕсли;
		
	ИначеЕсли ВариантОтчета = "ДинамикаЗадолженности" Тогда
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация,
		|	КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ) КАК Период,
		|	СУММА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток) КАК НачальныйОстаток,
		|	СУММА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток) КАК КонечныйОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Начисление)
		|				ТОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачальныйОстатокНачисление,
		|	СУММА(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Пени)
		|				ТОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачальныйОстатокПени,
		|	СУММА(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Рассрочка)
		|				ТОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачальныйОстатокРассрочка,
		|	СУММА(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Начисление)
		|				ТОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КонечныйОстатокНачисление,
		|	СУММА(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Пени)
		|				ТОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КонечныйОстатокПени,
		|	СУММА(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Рассрочка)
		|				ТОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КонечныйОстатокРассрочка
		|ПОМЕСТИТЬ втОстаткиЗаПериодыСДвижениями
		|ИЗ
		|	РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Месяц,
		|			,
		|			Организация В
		|				(ВЫБРАТЬ
		|					врТаблицаОрганизаций.Организация
		|				ИЗ
		|					врТаблицаОрганизаций КАК врТаблицаОрганизаций)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|ГДЕ
		|	(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияПриход <> 0
		|			ИЛИ КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияРасход <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация,
		|	КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врОрганизацииИПериоды.Организация,
		|	врОрганизацииИПериоды.Период,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.НачальныйОстатокНачисление, NULL) КАК НачальныйОстатокНачисление,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.НачальныйОстатокПени, NULL) КАК НачальныйОстатокПени,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.НачальныйОстатокРассрочка, NULL) КАК НачальныйОстатокРассрочка,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.НачальныйОстаток, NULL) КАК НачальныйОстаток,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.КонечныйОстатокНачисление, NULL) КАК КонечныйОстатокНачисление,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.КонечныйОстатокПени, NULL) КАК КонечныйОстатокПени,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.КонечныйОстатокРассрочка, NULL) КАК КонечныйОстатокРассрочка,
		|	ЕСТЬNULL(втОстаткиЗаПериодыСДвижениями.КонечныйОстаток, NULL) КАК КонечныйОстаток
		|ПОМЕСТИТЬ втНайденныеОстаткиПоДвижениямДокументов
		|ИЗ
		|	врОрганизацииИПериоды КАК врОрганизацииИПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиЗаПериодыСДвижениями КАК втОстаткиЗаПериодыСДвижениями
		|		ПО врОрганизацииИПериоды.Организация = втОстаткиЗаПериодыСДвижениями.Организация
		|			И врОрганизацииИПериоды.Период = втОстаткиЗаПериодыСДвижениями.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втНайденныеОстаткиПоДвижениямДокументов.Организация,
		|	втНайденныеОстаткиПоДвижениямДокументов.Период КАК Период,
		|	МАКСИМУМ(ЕСТЬNULL(КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодКонечныйОстаток,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Начисление)
		|				ТОГДА ЕСТЬNULL(КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1))
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ПериодКонечныйОстатокНачисление,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Пени)
		|				ТОГДА ЕСТЬNULL(КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1))
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ПериодКонечныйОстатокПени,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Рассрочка)
		|				ТОГДА ЕСТЬNULL(КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1))
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ПериодКонечныйОстатокРассрочка
		|ПОМЕСТИТЬ втПериодыОстатковСДвижениями
		|ИЗ
		|	втНайденныеОстаткиПоДвижениямДокументов КАК втНайденныеОстаткиПоДвижениямДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|				,
		|				&КонецПериода,
		|				Месяц,
		|				,
		|				Организация В
		|					(ВЫБРАТЬ
		|						врТаблицаОрганизаций.Организация
		|					ИЗ
		|						врТаблицаОрганизаций КАК врТаблицаОрганизаций)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|		ПО втНайденныеОстаткиПоДвижениямДокументов.Организация = КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация
		|			И (втНайденныеОстаткиПоДвижениямДокументов.Период >= КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ))
		|ГДЕ
		|	(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияПриход <> 0
		|			ИЛИ КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияРасход <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	втНайденныеОстаткиПоДвижениямДокументов.Организация,
		|	втНайденныеОстаткиПоДвижениямДокументов.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	втНайденныеОстаткиПоДвижениямДокументов.Организация,
		|	втНайденныеОстаткиПоДвижениямДокументов.Период КАК Период,
		|	0 КАК НачальныйОстатокНачисление,
		|	0 КАК НачальныйОстатокПени,
		|	0 КАК НачальныйОстатокРассрочка,
		|	ВЫБОР
		|		КОГДА втНайденныеОстаткиПоДвижениямДокументов.НачальныйОстаток ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0)
		|		ИНАЧЕ ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток, 0)
		|	КОНЕЦ КАК НачальныйОстаток,
		|	0 КАК КонечныйОстатокНачисление,
		|	0 КАК КонечныйОстатокПени,
		|	0 КАК КонечныйОстатокРассрочка,
		|	ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0) КАК КонечныйОстаток
		|ПОМЕСТИТЬ втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок
		|ИЗ
		|	втНайденныеОстаткиПоДвижениямДокументов КАК втНайденныеОстаткиПоДвижениямДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПериодыОстатковСДвижениями КАК втПериодыОстатковСДвижениями
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|					,
		|					&КонецПериода,
		|					Месяц,
		|					,
		|					Организация В
		|						(ВЫБРАТЬ
		|							врТаблицаОрганизаций.Организация
		|						ИЗ
		|							врТаблицаОрганизаций КАК врТаблицаОрганизаций)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|			ПО втПериодыОстатковСДвижениями.Организация = КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация
		|				И (втПериодыОстатковСДвижениями.ПериодКонечныйОстаток = КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ))
		|		ПО втНайденныеОстаткиПоДвижениямДокументов.Организация = втПериодыОстатковСДвижениями.Организация
		|			И втНайденныеОстаткиПоДвижениямДокументов.Период = втПериодыОстатковСДвижениями.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втПериодыОстатковСДвижениями.Организация,
		|	втПериодыОстатковСДвижениями.Период,
		|	ВЫБОР
		|		КОГДА втНайденныеОстаткиПоДвижениямДокументов.НачальныйОстатокНачисление ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0)
		|		ИНАЧЕ ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток, 0)
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0),
		|	0,
		|	0,
		|	0
		|ИЗ
		|	втНайденныеОстаткиПоДвижениямДокументов КАК втНайденныеОстаткиПоДвижениямДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПериодыОстатковСДвижениями КАК втПериодыОстатковСДвижениями
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|					,
		|					&КонецПериода,
		|					Месяц,
		|					,
		|					Организация В
		|							(ВЫБРАТЬ
		|								врТаблицаОрганизаций.Организация
		|							ИЗ
		|								врТаблицаОрганизаций КАК врТаблицаОрганизаций)
		|						И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Начисление)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|			ПО втПериодыОстатковСДвижениями.Организация = КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация
		|				И (втПериодыОстатковСДвижениями.ПериодКонечныйОстатокНачисление = КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ))
		|		ПО втНайденныеОстаткиПоДвижениямДокументов.Организация = втПериодыОстатковСДвижениями.Организация
		|			И втНайденныеОстаткиПоДвижениямДокументов.Период = втПериодыОстатковСДвижениями.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втПериодыОстатковСДвижениями.Организация,
		|	втПериодыОстатковСДвижениями.Период,
		|	0,
		|	ВЫБОР
		|		КОГДА втНайденныеОстаткиПоДвижениямДокументов.НачальныйОстатокПени ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0)
		|		ИНАЧЕ ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток, 0)
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0),
		|	0,
		|	0
		|ИЗ
		|	втНайденныеОстаткиПоДвижениямДокументов КАК втНайденныеОстаткиПоДвижениямДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПериодыОстатковСДвижениями КАК втПериодыОстатковСДвижениями
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|					,
		|					&КонецПериода,
		|					Месяц,
		|					,
		|					Организация В
		|							(ВЫБРАТЬ
		|								врТаблицаОрганизаций.Организация
		|							ИЗ
		|								врТаблицаОрганизаций КАК врТаблицаОрганизаций)
		|						И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Пени)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|			ПО втПериодыОстатковСДвижениями.Организация = КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация
		|				И (втПериодыОстатковСДвижениями.ПериодКонечныйОстатокПени = КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ))
		|		ПО втНайденныеОстаткиПоДвижениямДокументов.Организация = втПериодыОстатковСДвижениями.Организация
		|			И втНайденныеОстаткиПоДвижениямДокументов.Период = втПериодыОстатковСДвижениями.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втПериодыОстатковСДвижениями.Организация,
		|	втПериодыОстатковСДвижениями.Период,
		|	0,
		|	0,
		|	ВЫБОР
		|		КОГДА втНайденныеОстаткиПоДвижениямДокументов.НачальныйОстатокРассрочка ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0)
		|		ИНАЧЕ ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияНачальныйОстаток, 0)
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.СуммаНачисленияКонечныйОстаток, 0),
		|	0
		|ИЗ
		|	втНайденныеОстаткиПоДвижениямДокументов КАК втНайденныеОстаткиПоДвижениямДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПериодыОстатковСДвижениями КАК втПериодыОстатковСДвижениями
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.ОстаткиИОбороты(
		|					,
		|					&КонецПериода,
		|					Месяц,
		|					,
		|					Организация В
		|							(ВЫБРАТЬ
		|								врТаблицаОрганизаций.Организация
		|							ИЗ
		|								врТаблицаОрганизаций КАК врТаблицаОрганизаций)
		|						И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыНачисленияОстатки.Рассрочка)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты
		|			ПО втПериодыОстатковСДвижениями.Организация = КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Организация
		|				И (втПериодыОстатковСДвижениями.ПериодКонечныйОстатокРассрочка = КОНЕЦПЕРИОДА(КВП_ВзаиморасчетыПоЛицевымСчетамОстаткиИОбороты.Период, МЕСЯЦ))
		|		ПО втНайденныеОстаткиПоДвижениямДокументов.Организация = втПериодыОстатковСДвижениями.Организация
		|			И втНайденныеОстаткиПоДвижениямДокументов.Период = втПериодыОстатковСДвижениями.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.Организация,
		|	втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.Период КАК Период,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.НачальныйОстатокНачисление) КАК НачальноеСальдоНачисление,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.НачальныйОстатокПени) КАК НачальноеСальдоПени,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.НачальныйОстатокРассрочка) КАК НачальноеСальдоРассрочка,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.НачальныйОстаток) КАК НачальноеСальдо,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.КонечныйОстатокНачисление) КАК КонечноеСальдоНачисление,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.КонечныйОстатокПени) КАК КонечноеСальдоПени,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.КонечныйОстатокРассрочка) КАК КонечноеСальдоРассрочка,
		|	СУММА(втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.КонечныйОстаток) КАК КонечноеСальдо
		|ПОМЕСТИТЬ втОсновная
		|ИЗ
		|	втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок КАК втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок
		|
		|СГРУППИРОВАТЬ ПО
		|	втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.Организация,
		|	втЗначенияОстатковВМесяцыБезДвиженийБезГруппировок.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Если ДляМонитораРуководителя Тогда
			
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	втОсновная.Организация КАК Организация,
			|	ГОД(втОсновная.Период) КАК ПериодГод,
			|	втОсновная.Период КАК Период,
			|	втОсновная.НачальноеСальдо / &ВариантОкругления КАК НачальноеСальдо,
			|	втОсновная.КонечноеСальдо / &ВариантОкругления КАК КонечноеСальдо,
			|	втОсновная.НачальноеСальдоНачисление / &ВариантОкругления КАК НачальноеСальдоНачисление,
			|	втОсновная.КонечноеСальдоНачисление / &ВариантОкругления КАК КонечноеСальдоНачисление,
			|	втОсновная.НачальноеСальдоПени / &ВариантОкругления КАК НачальноеСальдоПени,
			|	втОсновная.КонечноеСальдоПени / &ВариантОкругления КАК КонечноеСальдоПени,
			|	втОсновная.НачальноеСальдоРассрочка / &ВариантОкругления КАК НачальноеСальдоРассрочка,
			|	втОсновная.КонечноеСальдоРассрочка / &ВариантОкругления КАК КонечноеСальдоРассрочка
			|ИЗ
			|	втОсновная КАК втОсновная
			|
			|УПОРЯДОЧИТЬ ПО
			|	втОсновная.Организация,
			|	втОсновная.Период";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	втОсновная.Организация КАК Организация,
			|	ГОД(втОсновная.Период) КАК ПериодГод,
			|	втОсновная.Период КАК Период,
			|	втОсновная.НачальноеСальдо / &ВариантОкругления КАК НачальноеСальдо,
			|	втОсновная.КонечноеСальдо / &ВариантОкругления КАК КонечноеСальдо,
			|	втОсновная.НачальноеСальдоНачисление / &ВариантОкругления КАК НачальноеСальдоНачисление,
			|	втОсновная.КонечноеСальдоНачисление / &ВариантОкругления КАК КонечноеСальдоНачисление,
			|	втОсновная.НачальноеСальдоПени / &ВариантОкругления КАК НачальноеСальдоПени,
			|	втОсновная.КонечноеСальдоПени / &ВариантОкругления КАК КонечноеСальдоПени,
			|	втОсновная.НачальноеСальдоРассрочка / &ВариантОкругления КАК НачальноеСальдоРассрочка,
			|	втОсновная.КонечноеСальдоРассрочка / &ВариантОкругления КАК КонечноеСальдоРассрочка
			|ИЗ
			|	втОсновная КАК втОсновная
			|
			|УПОРЯДОЧИТЬ ПО
			|	втОсновная.Организация,
			|	втОсновная.Период
			|ИТОГИ ПО
			|	Организация,
			|	ПериодГод";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает данные отчета из базы в виде дерева значений.
Функция ПолучитьДеревоДанных(ПараметрыОтчета)
	
	ТаблицаОрганизаций = ПолучитьТаблицуОрганизаций(ПараметрыОтчета.Организация);
	
	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.ЗагрузитьЗначения(ТаблицаОрганизаций.ВыгрузитьКолонку("Организация"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыОтчета.КонецПериода);
	Запрос.УстановитьПараметр("ТаблицаОрганизаций", ТаблицаОрганизаций);
	Запрос.УстановитьПараметр("СписокОрганизаций",  СписокОрганизаций);
	Запрос.УстановитьПараметр("ТаблицаПериодов",    ПолучитьТаблицуПериодов(ПараметрыОтчета.НачалоПериода, КонецМесяца(ПараметрыОтчета.КонецПериода)));
	Запрос.УстановитьПараметр("ВариантОкругления",  1);
	
	Запрос.Текст = ПолучитьТекстЗапроса(ПараметрыОтчета.ВариантОтчета);
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат Дерево;
	
КонецФункции

// Корректирует значения остатков в итоговых строках дерева.
Процедура СкорректироватьОстаткиВДереве(Дерево, ПараметрыОтчета)
	
	РассчитатьДинамику = ?(ПараметрыОтчета.ВариантОтчета = "ДинамикаЗадолженности", Истина, Ложь);
	
	Если РассчитатьДинамику Тогда
		Дерево.Колонки.Добавить("Изменение", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	КонецЕсли;
	
	Для Каждого СтрокаОрганизации Из Дерево.Строки Цикл
		
		КоличествоГодов = СтрокаОрганизации.Строки.Количество();
		
		Для Каждого СтрокаПериодаГод Из СтрокаОрганизации.Строки Цикл
			
			КоличествоСтрокДанных = СтрокаПериодаГод.Строки.Количество();
			Если КоличествоСтрокДанных > 0 Тогда
				СтрокаПериодаГод.НачальноеСальдо = СтрокаПериодаГод.Строки[0].НачальноеСальдо;
				СтрокаПериодаГод.КонечноеСальдо  = СтрокаПериодаГод.Строки[КоличествоСтрокДанных - 1].КонечноеСальдо;
				
				Если ПараметрыОтчета.ВариантОтчета = "ДинамикаЗадолженности" Тогда
					СтрокаПериодаГод.НачальноеСальдоПени = СтрокаПериодаГод.Строки[0].НачальноеСальдоПени;
					СтрокаПериодаГод.КонечноеСальдоПени  = СтрокаПериодаГод.Строки[КоличествоСтрокДанных - 1].КонечноеСальдоПени;
					
					СтрокаПериодаГод.НачальноеСальдоНачисление = СтрокаПериодаГод.Строки[0].НачальноеСальдоНачисление;
					СтрокаПериодаГод.КонечноеСальдоНачисление  = СтрокаПериодаГод.Строки[КоличествоСтрокДанных - 1].КонечноеСальдоНачисление;
					
					СтрокаПериодаГод.НачальноеСальдоРассрочка = СтрокаПериодаГод.Строки[0].НачальноеСальдоРассрочка;
					СтрокаПериодаГод.КонечноеСальдоРассрочка  = СтрокаПериодаГод.Строки[КоличествоСтрокДанных - 1].КонечноеСальдоРассрочка;
				КонецЕсли;
			Иначе
				СтрокаПериодаГод.НачальноеСальдо = 0;
				СтрокаПериодаГод.КонечноеСальдо  = 0;
				
				Если ПараметрыОтчета.ВариантОтчета = "ДинамикаЗадолженности" Тогда
					СтрокаПериодаГод.НачальноеСальдоПени = 0;
					СтрокаПериодаГод.КонечноеСальдоПени  = 0;
					
					СтрокаПериодаГод.НачальноеСальдоНачисление = 0;
					СтрокаПериодаГод.КонечноеСальдоНачисление  = 0;
					
					СтрокаПериодаГод.НачальноеСальдоРассрочка = 0;
					СтрокаПериодаГод.КонечноеСальдоРассрочка  = 0;
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаОрганизации.Строки.Индекс(СтрокаПериодаГод) = 0 Тогда
				СтрокаОрганизации.НачальноеСальдо           = СтрокаПериодаГод.Строки[0].НачальноеСальдо;
				Если ПараметрыОтчета.ВариантОтчета = "ДинамикаЗадолженности" Тогда
					СтрокаОрганизации.НачальноеСальдоПени       = СтрокаПериодаГод.Строки[0].НачальноеСальдоПени;
					СтрокаОрганизации.НачальноеСальдоНачисление = СтрокаПериодаГод.Строки[0].НачальноеСальдоНачисление;
					СтрокаОрганизации.НачальноеСальдоРассрочка  = СтрокаПериодаГод.Строки[0].НачальноеСальдоРассрочка;
				КонецЕсли;
			КонецЕсли;
			
			Для Каждого СтрокаДанныхПоМесяцам Из СтрокаПериодаГод.Строки Цикл
				
				РассчитатьДинамикуЗадолженности(СтрокаДанныхПоМесяцам, РассчитатьДинамику);
				
				Если СтрокаОрганизации.Строки.Индекс(СтрокаПериодаГод) = (КоличествоГодов - 1)
				   И СтрокаПериодаГод.Строки.Индекс(СтрокаДанныхПоМесяцам) = (КоличествоСтрокДанных - 1) Тогда
					СтрокаОрганизации.КонечноеСальдо           = СтрокаДанныхПоМесяцам.КонечноеСальдо;
					Если ПараметрыОтчета.ВариантОтчета = "ДинамикаЗадолженности" Тогда
						СтрокаОрганизации.КонечноеСальдоПени       = СтрокаДанныхПоМесяцам.КонечноеСальдоПени;
						СтрокаОрганизации.КонечноеСальдоНачисление = СтрокаДанныхПоМесяцам.КонечноеСальдоНачисление;
						СтрокаОрганизации.КонечноеСальдоРассрочка  = СтрокаДанныхПоМесяцам.КонечноеСальдоРассрочка;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			РассчитатьДинамикуЗадолженности(СтрокаПериодаГод, РассчитатьДинамику);
			
		КонецЦикла;
		
		РассчитатьДинамикуЗадолженности(СтрокаОрганизации, РассчитатьДинамику);
		
	КонецЦикла;
	
КонецПроцедуры

// Рассчитывает значение изменения задолженности.
Процедура РассчитатьДинамикуЗадолженности(СтрокаДанных, РассчитатьДинамику)
	
	Если РассчитатьДинамику Тогда
		СтрокаДанных.Изменение = ?(СтрокаДанных.НачальноеСальдо = 0, 0,
										(СтрокаДанных.КонечноеСальдо/СтрокаДанных.НачальноеСальдо - 1)*100);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает таблицу периодов отчета.
Функция ПолучитьТаблицуПериодов(НачалоПериода, КонецПериода)
	
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ПериодНачальный = НачалоПериода;
	Пока ПериодНачальный <= КонецПериода Цикл
		ТаблицаПериодов.Добавить().Период = КонецМесяца(ПериодНачальный);
		ПериодНачальный = КонецМесяца(ДобавитьМесяц(ПериодНачальный, 1));
	КонецЦикла;
	Возврат ТаблицаПериодов;
	
КонецФункции

// Возвращает таблицу организаций в базе.
Функция ПолучитьТаблицуОрганизаций(Организация)
	
	ТаблицаОрганизаций = Новый ТаблицаЗначений;
	ТаблицаОрганизаций.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Если ТипЗнч(Организация) = Тип("СписокЗначений") Тогда
		Для Каждого ТекущаяОрганизация Из Организация Цикл
			ТаблицаОрганизаций.Добавить().Организация = ТекущаяОрганизация.Значение;
		КонецЦикла;
	ИначеЕсли Организация.Пустая() Тогда
		Выборка = Справочники.Организации.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если НЕ Выборка.ПометкаУдаления Тогда
				ТаблицаОрганизаций.Добавить().Организация = Выборка.Ссылка;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТаблицаОрганизаций.Добавить().Организация = Организация;
	КонецЕсли;
	
	Возврат ТаблицаОрганизаций;
	
КонецФункции

// Заполняет и возвращает таблицый документ для вывода.
Функция ЗаполнитьОтчет(ДеревоДанных, ПараметрыОтчета)
	
	Если ПараметрыОтчета.ВариантОтчета = "НачисленияИОплаты" Тогда
		ВыводитьКартинкуИзменения = Ложь;
		Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Отчет.УПЖКХ_СводныеДанныеПоНачислениямИОплатам.МакетНачисленияИОплаты");
	ИначеЕсли ПараметрыОтчета.ВариантОтчета = "ДинамикаЗадолженности" Тогда
		ВыводитьКартинкуИзменения = Истина;
		Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Отчет.УПЖКХ_СводныеДанныеПоНачислениямИОплатам.МакетДинамикаЗадолженности");
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	МакетЗаголовок = Макет.ПолучитьОбласть("ЗаголовокОтчета");
	МакетЗаголовок.Параметры.ЗаголовокОтчета = ПараметрыОтчета.ЗаголовокОтчета;
	ТабличныйДокумент.Вывести(МакетЗаголовок);
	
	МакетШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(МакетШапкаТаблицы);
	
	МакетОрганизация                 = Макет.ПолучитьОбласть("СтрокаОрганизация");
	МакетСтрокаТаблицы               = Макет.ПолучитьОбласть("СтрокаТаблицы");
	МакетПериодГод                   = Макет.ПолучитьОбласть("СтрокаТаблицыПериодГод");
	МакетИтоговаяСтрокаПоОрганизации = Макет.ПолучитьОбласть("ИтоговаяСтрокаПоОрганизации");
	
	Для Каждого СтрокаОрганизации Из ДеревоДанных.Строки Цикл
		
		МакетОрганизация.Параметры.Заполнить(СтрокаОрганизации);
		ТабличныйДокумент.Вывести(МакетОрганизация);
		
		ТабличныйДокумент.НачатьГруппуСтрок(, Истина);
		
		Для Каждого СтрокаПериодаГод Из СтрокаОрганизации.Строки Цикл
			
			МакетПериодГод.Параметры.Заполнить(СтрокаПериодаГод);
			УстановитьКартинкуОтклонения(МакетПериодГод.Области, СтрокаПериодаГод,
										 ВыводитьКартинкуИзменения, "ИзменениеГод");
			ТабличныйДокумент.Вывести(МакетПериодГод);
			
			ТабличныйДокумент.НачатьГруппуСтрок(, НЕ ПараметрыОтчета.ВыводитьПоГодам);
			
			Для Каждого СтрокаДанныхПоМесяцам Из СтрокаПериодаГод.Строки Цикл
				
				МакетСтрокаТаблицы.Параметры.Заполнить(СтрокаДанныхПоМесяцам);
				УстановитьКартинкуОтклонения(МакетСтрокаТаблицы.Области, СтрокаДанныхПоМесяцам,
											 ВыводитьКартинкуИзменения, "ИзменениеМесяц");
				ТабличныйДокумент.Вывести(МакетСтрокаТаблицы);
				
			КонецЦикла;
			
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			
		КонецЦикла;
		
		ТабличныйДокумент.ЗакончитьГруппуСтрок();
		
		МакетИтоговаяСтрокаПоОрганизации.Параметры.Заполнить(СтрокаОрганизации);
		УстановитьКартинкуОтклонения(МакетИтоговаяСтрокаПоОрганизации.Области, СтрокаОрганизации,
									 ВыводитьКартинкуИзменения, "ИзменениеИтого");
		ТабличныйДокумент.Вывести(МакетИтоговаяСтрокаПоОрганизации);
		
	КонецЦикла;
	
	Если НЕ ПараметрыОтчета.ГрафикЗаМесяц И ПараметрыОтчета.ВыводитьГрафики Тогда
		МакетСтрокаРазделитель = Макет.ПолучитьОбласть("СтрокаРазделитель");
		ТабличныйДокумент.Вывести(МакетСтрокаРазделитель);
		
		СформироватьИВывестиГрафики(ТабличныйДокумент, Макет, ПараметрыОтчета, ДеревоДанных);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует графики.
Процедура СформироватьИВывестиГрафики(ТабличныйДокумент, Макет, ПараметрыОтчета, ДеревоДанных)
	
	МакетДиаграммаПоГодам   = Макет.ПолучитьОбласть("ОбластьДиаграмма");
	РисунокДиаграммыПоГодам = МакетДиаграммаПоГодам.Рисунки[0];
	
	ЦветКрасный = Новый Цвет(255, 163, 132);
	ЦветЗеленый = Новый Цвет(192, 255, 202);
	ЦветЖелтый  = Новый Цвет(251, 225, 81);
	
	МакетСтрокаПодробнееПоГодам = Макет.ПолучитьОбласть("СтрокаПодробнееПоГодам");
	
	ТипДиаграммыПоУмолчанию = ПараметрыОтчета.ТипДиаграммыПоУмолчанию;
	
	Если ПараметрыОтчета.ВариантОтчета = "НачисленияИОплаты" Тогда
		
		Если ПараметрыОтчета.ВыводитьПоГодам Тогда
			ДиаграммаОбъектПоГодам                        = РисунокДиаграммыПоГодам.Объект;
			ДиаграммаОбъектПоГодам.ТипДиаграммы           = ТипДиаграммыПоУмолчанию;
			ДиаграммаОбъектПоГодам.ОбластьЗаголовка.Текст = "Начисления и оплаты по годам, в руб.";
		КонецЕсли;
		
		Для Каждого СтрокаОрганизации Из ДеревоДанных.Строки Цикл
			
			Если ПараметрыОтчета.ВыводитьПоГодам ИЛИ ПараметрыОтчета.ВыводитьПоМесяцам Тогда
				МакетОрганизация = Макет.ПолучитьОбласть("РазделительОрганизация");
				МакетОрганизация.Параметры.Заполнить(СтрокаОрганизации);
				ТабличныйДокумент.Вывести(МакетОрганизация);
			КонецЕсли;
			
			Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
				врТабДокПоМесяцам = Новый ТабличныйДокумент;
			КонецЕсли;
			
			Сч = 0;
			
			Для Каждого СтрокаПериодаГод Из СтрокаОрганизации.Строки Цикл
				
				ТекПериодГод = СтрЗаменить(СтрокаПериодаГод.ПериодГод, Символы.НПП, "");
				
				Если ПараметрыОтчета.ВыводитьПоГодам Тогда
					
					// Начисления и оплаты по годам.
					СерияНачислено       = ДиаграммаОбъектПоГодам.УстановитьСерию("Начислено");
					СерияНачислено.Текст = "Начислено";
					СерияНачислено.Цвет  = ЦветКрасный;
					
					СерияОплаты          = ДиаграммаОбъектПоГодам.УстановитьСерию("Оплаты");
					СерияОплаты.Текст    = "Оплачено";
					СерияОплаты.Цвет     = ЦветЗеленый;
					
					ТочкаНачисленияИОплаты       = ДиаграммаОбъектПоГодам.УстановитьТочку(ТекПериодГод);
					ТочкаНачисленияИОплаты.Текст = ТекПериодГод;
					
					ДиаграммаОбъектПоГодам.УстановитьЗначение(ТочкаНачисленияИОплаты, СерияНачислено, СтрокаПериодаГод.НачисленоВсего);
					ДиаграммаОбъектПоГодам.УстановитьЗначение(ТочкаНачисленияИОплаты, СерияОплаты, СтрокаПериодаГод.ОплаченоВсего);
				КонецЕсли;
				
				Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
					
					МакетДиаграммаПоМесяцам   = Макет.ПолучитьОбласть("ОбластьДиаграмма");
					РисунокДиаграммыПоМесяцам = МакетДиаграммаПоМесяцам.Рисунки[0];
					
					ДиаграммаОбъектПоМесяцам                        = РисунокДиаграммыПоМесяцам.Объект;
					ДиаграммаОбъектПоМесяцам.ТипДиаграммы           = ТипДиаграммыПоУмолчанию;
					Если ПараметрыОтчета.ВыводитьПоГодам Тогда
						ДиаграммаОбъектПоМесяцам.ОбластьЗаголовка.Текст = "" + СтрокаОрганизации.Организация + ". Начисления и оплаты в " + ТекПериодГод + " году, в руб.";
					Иначе
						ДиаграммаОбъектПоМесяцам.ОбластьЗаголовка.Текст = "Начисления и оплаты в " + ТекПериодГод + " году, в руб.";
					КонецЕсли;
				КонецЕсли;
				
				Для Каждого СтрокаДанныхПоМесяцам Из СтрокаПериодаГод.Строки Цикл
					
					Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
						
						ТекПериодМесяц = СтрокаДанныхПоМесяцам.Период;
						
						// Начисления и оплаты по месяцам.
						СерияНачислено       = ДиаграммаОбъектПоМесяцам.УстановитьСерию("Начислено");
						СерияНачислено.Текст = "Начислено";
						СерияНачислено.Цвет  = ЦветКрасный;
						
						СерияОплаты          = ДиаграммаОбъектПоМесяцам.УстановитьСерию("Оплаты");
						СерияОплаты.Текст    = "Оплачено";
						СерияОплаты.Цвет     = ЦветЗеленый;
						
						ТекстТочки     = Формат(ТекПериодМесяц,"ДФ='MMMM yy'");
						ПозицияПробела = Найти(ТекстТочки, " ");
						ТекстТочки     = "" + Лев(ТекстТочки, 3) + "." + СокрЛП(Прав(ТекстТочки, СтрДлина(ТекстТочки) - ПозицияПробела));
						
						ТочкаНачисленияИОплаты       = ДиаграммаОбъектПоМесяцам.УстановитьТочку(ТекПериодМесяц);
						ТочкаНачисленияИОплаты.Текст = ТекстТочки;
						
						ДиаграммаОбъектПоМесяцам.УстановитьЗначение(ТочкаНачисленияИОплаты, СерияНачислено, СтрокаДанныхПоМесяцам.НачисленоВсего);
						ДиаграммаОбъектПоМесяцам.УстановитьЗначение(ТочкаНачисленияИОплаты, СерияОплаты, СтрокаДанныхПоМесяцам.ОплаченоВсего);
					КонецЕсли;
					
				КонецЦикла;
				
				Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
					
					МакетДиаграммаПоМесяцам.Параметры.Заполнить(СтрокаОрганизации);
					врТабДокПоМесяцам.Вывести(МакетДиаграммаПоМесяцам);
					
					Сч = Сч + 1;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПараметрыОтчета.ВыводитьПоГодам Тогда
				МакетДиаграммаПоГодам.Параметры.Заполнить(СтрокаОрганизации);
				врТабДокПоГодам = Новый ТабличныйДокумент;
				врТабДокПоГодам.Вывести(МакетДиаграммаПоГодам);
				
				ТабличныйДокумент.Вывести(врТабДокПоГодам);
			КонецЕсли;
			
			Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
				Если ПараметрыОтчета.ВыводитьПоГодам Тогда
					ТабличныйДокумент.Вывести(МакетСтрокаПодробнееПоГодам);
					ТабличныйДокумент.НачатьГруппуСтрок("Месяцы", Ложь);
				КонецЕсли;
				ТабличныйДокумент.Вывести(врТабДокПоМесяцам);
				Если ПараметрыОтчета.ВыводитьПоГодам Тогда
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ПараметрыОтчета.ВариантОтчета = "ДинамикаЗадолженности" Тогда
		
		Если ПараметрыОтчета.ВыводитьПоГодам Тогда
			ДиаграммаОбъектПоГодам                        = РисунокДиаграммыПоГодам.Объект;
			ДиаграммаОбъектПоГодам.ТипДиаграммы           = ТипДиаграммыПоУмолчанию;
			ДиаграммаОбъектПоГодам.ОбластьЗаголовка.Текст = "Динамика задолженности с "
															+ СтрЗаменить(Год(ПараметрыОтчета.НачалоПериода), Символы.НПП, "")
															+ " г. по "
															+ СтрЗаменить(Год(ПараметрыОтчета.КонецПериода), Символы.НПП, "")
															+ " г., в руб.";
		КонецЕсли;
		
		Для Каждого СтрокаОрганизации Из ДеревоДанных.Строки Цикл
			
			Если ПараметрыОтчета.ВыводитьПоГодам ИЛИ ПараметрыОтчета.ВыводитьПоМесяцам Тогда
				МакетОрганизация = Макет.ПолучитьОбласть("РазделительОрганизация");
				МакетОрганизация.Параметры.Заполнить(СтрокаОрганизации);
				ТабличныйДокумент.Вывести(МакетОрганизация);
			КонецЕсли;
			
			Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
				врТабДокПоМесяцам = Новый ТабличныйДокумент;
			КонецЕсли;
			
			Сч = 0;
			
			Для Каждого СтрокаПериодаГод Из СтрокаОрганизации.Строки Цикл
				
				ТекПериодГод = СтрЗаменить(СтрокаПериодаГод.ПериодГод, Символы.НПП, "");
				
				Если ПараметрыОтчета.ВыводитьПоГодам Тогда
					
					// Начисления и оплаты по годам.
					СерияКонечноеСальдо       = ДиаграммаОбъектПоГодам.УстановитьСерию("КонечноеСальдо");
					СерияКонечноеСальдо.Текст = "Задолженность";
					СерияКонечноеСальдо.Цвет  = ЦветКрасный;
					
					ТочкаКонечноеСальдо       = ДиаграммаОбъектПоГодам.УстановитьТочку(ТекПериодГод);
					ТочкаКонечноеСальдо.Текст = ТекПериодГод;
					
					ДиаграммаОбъектПоГодам.УстановитьЗначение(ТочкаКонечноеСальдо, СерияКонечноеСальдо, СтрокаПериодаГод.КонечноеСальдо);
				КонецЕсли;
				
				Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
					
					МакетДиаграммаПоМесяцам   = Макет.ПолучитьОбласть("ОбластьДиаграмма");
					РисунокДиаграммыПоМесяцам = МакетДиаграммаПоМесяцам.Рисунки[0];
					
					ДиаграммаОбъектПоМесяцам                        = РисунокДиаграммыПоМесяцам.Объект;
					ДиаграммаОбъектПоМесяцам.ТипДиаграммы           = ТипДиаграммыПоУмолчанию;
					Если ПараметрыОтчета.ВыводитьПоГодам Тогда
						ДиаграммаОбъектПоМесяцам.ОбластьЗаголовка.Текст = "" + СтрокаОрганизации.Организация + ". Динамика задолженности в " + ТекПериодГод + " году, в руб.";
					Иначе
						ДиаграммаОбъектПоМесяцам.ОбластьЗаголовка.Текст = "Динамика задолженности в " + ТекПериодГод + " году, в руб.";
					КонецЕсли;
				КонецЕсли;
				
				Для Каждого СтрокаДанныхПоМесяцам Из СтрокаПериодаГод.Строки Цикл
					
					Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
						ТекПериодМесяц = СтрокаДанныхПоМесяцам.Период;
						
						// Начисления и оплаты по месяцам.
						СерияЗадолженность       = ДиаграммаОбъектПоМесяцам.УстановитьСерию("Задолженность");
						СерияЗадолженность.Текст = "Задолженность";
						СерияЗадолженность.Цвет  = ЦветКрасный;
						
						ТекстТочки     = Формат(ТекПериодМесяц,"ДФ='MMMM yy'");
						ПозицияПробела = Найти(ТекстТочки, " ");
						ТекстТочки     = "" + Лев(ТекстТочки, 3) + "." + СокрЛП(Прав(ТекстТочки, СтрДлина(ТекстТочки) - ПозицияПробела));
						
						ТочкаЗадолженность       = ДиаграммаОбъектПоМесяцам.УстановитьТочку(ТекПериодМесяц);
						ТочкаЗадолженность.Текст = ТекстТочки;
						
						ДиаграммаОбъектПоМесяцам.УстановитьЗначение(ТочкаЗадолженность, СерияЗадолженность, СтрокаДанныхПоМесяцам.КонечноеСальдо);
					КонецЕсли;
					
				КонецЦикла;
				
				Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
					
					МакетДиаграммаПоМесяцам.Параметры.Заполнить(СтрокаОрганизации);
					врТабДокПоМесяцам.Вывести(МакетДиаграммаПоМесяцам);
					
					Сч = Сч + 1;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПараметрыОтчета.ВыводитьПоГодам Тогда
				МакетДиаграммаПоГодам.Параметры.Заполнить(СтрокаОрганизации);
				врТабДокПоГодам = Новый ТабличныйДокумент;
				врТабДокПоГодам.Вывести(МакетДиаграммаПоГодам);
				
				ТабличныйДокумент.Вывести(врТабДокПоГодам);
			КонецЕсли;
			
			Если ПараметрыОтчета.ВыводитьПоМесяцам Тогда
				Если ПараметрыОтчета.ВыводитьПоГодам Тогда
					ТабличныйДокумент.Вывести(МакетСтрокаПодробнееПоГодам);
					ТабличныйДокумент.НачатьГруппуСтрок("Месяцы", Ложь);
				КонецЕсли;
				ТабличныйДокумент.Вывести(врТабДокПоМесяцам);
				Если ПараметрыОтчета.ВыводитьПоГодам Тогда
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает картинку отклонения.
Процедура УстановитьКартинкуОтклонения(Области, СтрокаДанных, ВыводитьКартинкуИзменения, ИмяОбласти)
	
	Если НЕ ВыводитьКартинкуИзменения Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаДанных.Изменение > 0 Тогда
		КартинкаОтклонения = БиблиотекаКартинок.ДосьеУвеличениеПоказателя;
	ИначеЕсли СтрокаДанных.Изменение < 0 Тогда
		КартинкаОтклонения = БиблиотекаКартинок.ДосьеУменьшениеПоказателя;
	ИначеЕсли СтрокаДанных.КонечноеСальдо >  СтрокаДанных.НачальноеСальдо Тогда
		КартинкаОтклонения = БиблиотекаКартинок.ДосьеУвеличениеПоказателя;
	Иначе
		КартинкаОтклонения = Новый Картинка;
	КонецЕсли;
	
	Области[ИмяОбласти].Картинка = КартинкаОтклонения;
	
КонецПроцедуры

// Установка параметров печати для формируемых квитанций.
//
// Параметры:
//  ТабличныйДокумент - ТабличныйДокумент - формируемая квитанция.
//  ВидМакета         - ТабличныйДокумент - вид макета формируемой квитанции.
//
Процедура УстановитьПараметрыПечати(ТабличныйДокумент) Экспорт
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "Отчет_УПЖКХ_СводныеДанныеПоНачислениямИОплатам";
	
КонецПроцедуры // УстановитьПараметрыПечати()

#КонецОбласти // Обработчики_формирования_отчета

#Область Вспомогательные_процедуры_и_функции

// Возвращает список типов диаграмм отчета.
Функция ПолучитьСписокТиповДиаграмм() Экспорт
	
	СписокТиповДиаграмм = Новый СписокЗначений;
	СписокТиповДиаграмм.Добавить("ГрафикСОбластями",                 "График с областями");
	СписокТиповДиаграмм.Добавить("График",                           "График");
	СписокТиповДиаграмм.Добавить("ГрафикСОбластямиИНакоплением",     "График с областями и накоплением");
	СписокТиповДиаграмм.Добавить("ГрафикСОбластямиНормированный",    "График с областями нормированный");
	СписокТиповДиаграмм.Добавить("Гистограмма",                      "Гистограмма");
	СписокТиповДиаграмм.Добавить("ГистограммаГоризонтальная",        "Гистограмма горизонтальная");
	СписокТиповДиаграмм.Добавить("ГистограммаНормированная",         "Гистограмма нормированная");
	СписокТиповДиаграмм.Добавить("ГистограммаОбъемная",              "Гистограмма объемная");
	СписокТиповДиаграмм.Добавить("ГистограммаСНакоплением",          "Гистограмма с накоплением");
	СписокТиповДиаграмм.Добавить("ГистограммаСНакоплениемОбъемная",  "Гистограмма с накоплением объемная");
	СписокТиповДиаграмм.Добавить("ГистограммаНормированнаяОбъемная", "Гистограмма нормированная объемная");
	
	Возврат СписокТиповДиаграмм;
	
КонецФункции

#КонецОбласти // Вспомогательные_процедуры_и_функции

#КонецЕсли
