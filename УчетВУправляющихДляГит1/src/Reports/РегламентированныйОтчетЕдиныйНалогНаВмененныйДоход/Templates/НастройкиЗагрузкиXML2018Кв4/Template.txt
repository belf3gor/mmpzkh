// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Раздел1"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		Если СтрокаДерева.Код = "СумПУВД" Тогда
			СтрокаДерева.Многострочность = Истина;
		ИначеЕсли СтрокаДерева.Код = "ОКТМО" Тогда
			СтрокаДерева.Ключ = "П000010001003";
		ИначеЕсли СтрокаДерева.Код = "НалПУ" Тогда
			СтрокаДерева.Ключ = "П000010002003";
		КонецЕсли;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумПУВД/РасчНалВД");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.Обязательность = "ОМП"; // не выполнять автозагрузку узла
		НайденныйУзел.Многостраничность = Истина;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.КодИМНС        = П.ПараметрыОтчета.КодИФНС;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормаРеорганизации) Тогда
			Титульный.ФормаРеорганизации = П.ПараметрыОтчета.ФормаРеорганизации;
			Титульный.РеорганизацияИНН   = П.ПараметрыОтчета.РеорганизацияИНН;
			Титульный.РеорганизацияКПП   = П.ПараметрыОтчета.РеорганизацияКПП;
		КонецЕсли;
		
	КонецЕсли;
	
	СтраницыРаздела2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумПУВД/РасчНалВД"); // Раздел 2 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыРаздела2.Количество() Цикл
		ТекущаяСтраница = СтраницыРаздела2[НомСтраницы - 1];
		
		УзелОКТМО = УзлыПоXPath(ТекущаяСтраница, "../@ОКТМО")[0];
		УзелДопПоказатель = ТекущаяСтраница.Строки.Вставить(0);
		ЗаполнитьЗначенияСвойств(УзелДопПоказатель, УзелОКТМО, , "Родитель, Строки"); // важны только раздел, ключ и значение
		УзелДопПоказатель.Раздел = "Раздел2";
		УзелДопПоказатель.Ключ = "П000020003000";
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(ТекущаяСтраница, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	ПервыйМесяцКвартала = 7;
	
	ГодОтчета = Неопределено;
	ПериодОтчета = Неопределено;
	П.ПараметрыОтчета.Свойство("ГодПериодОтч", ГодОтчета);
	П.ПараметрыОтчета.Свойство("ПериодОтч", ПериодОтчета);
	
	Если НЕ ЗначениеЗаполнено(ГодОтчета) Тогда
		ГодОтчета = Формат(ТекущаяДатаСеанса(), "ДФ=гггг");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодОтчета) Тогда
		ПериодыОтчета = СтрРазделить("21,22,23,24,51,54,55,56", ",");
		НайденныйПериод = ПериодыОтчета.Найти(ПериодОтчета);
		Если НайденныйПериод <> Неопределено Тогда
			ПервыйМесяцКвартала = НайденныйПериод % 4 * 3 + 1;
		КонецЕсли;
	КонецЕсли;
	
	Раздел2 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел2", Раздел2);
	Если Раздел2 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел2 Цикл
			
			ДанныеРаздела = СтраницаРаздела.Данные;
			
			НомСтрокиПост = 1; НомСтрокиСнят = 1;
			
			Для НомМесяца = 1 По 3 Цикл
				
				ЗначениеПоказателя = 0;
				ДанныеРаздела.Свойство("П00002000" + (НомМесяца + 6) + "003", ЗначениеПоказателя);
				
				Если ЗначениеЗаполнено(ЗначениеПоказателя) Тогда
					
					ДатаНачалаПериода = Дата(ЧислоИзСтроки(ГодОтчета), ПервыйМесяцКвартала + НомМесяца - 1, 1);
					ДатаОкончанияПериода = ДатаНачалаПериода + ЗначениеПоказателя * 86400;
					
					ДанныеРаздела.Вставить("П000020006101", "V");
					ДанныеРаздела.Вставить("П000020006102", "");
					ДанныеРаздела.Вставить("П000020006201" + "_" + Формат(НомСтрокиПост, "ЧГ="), ДатаНачалаПериода);
					
					НомСтрокиПост = НомСтрокиПост + 1;
					
					Если Месяц(ДатаОкончанияПериода) - ПервыйМесяцКвартала + 1 <> НомМесяца Тогда
						Продолжить;
					КонецЕсли;
					
					ДанныеРаздела.Вставить("П000020006401", "V");
					ДанныеРаздела.Вставить("П000020006402", "");
					ДанныеРаздела.Вставить("П000020006501" + "_" + Формат(НомСтрокиСнят, "ЧГ="), ДатаОкончанияПериода);
					
					НомСтрокиСнят = НомСтрокиСнят + 1;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти