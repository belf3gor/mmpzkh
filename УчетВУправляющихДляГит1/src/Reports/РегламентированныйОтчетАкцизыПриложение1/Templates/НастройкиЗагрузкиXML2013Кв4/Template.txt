// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СвБензНатур[@КодПТ='650']");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		УзлыМод = УзлыПоXPath(НайденныйУзел, "@КодПТ"); // удаляем значение по умолчанию, чтоб загрузилось значение из файла
		Если ЗначениеЗаполнено(УзлыМод) Тогда
			УзлыМод[0].ЗначениеПоУмолчанию = "";
		КонецЕсли;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Многострочность", Истина), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Родитель.Многострочность = Истина;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "СумВычПок", "Раздел2"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Обязательность = "Н";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "СумПУПок", "Раздел2"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Обязательность = "О";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "АвансПок", "Раздел25"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Обязательность = "О";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "СведОргПост", "Приложение6"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Обязательность = "О";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "СведОргПолуч", "Приложение7"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Обязательность = "О";
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Раздел1 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел1", Раздел1);
	Если Раздел1 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел1 Цикл
			
			ДанныеРаздела = СтраницаРаздела.Данные;
			
			НомСтроки = 1;
			Суффикс = "_1";
			
			Пока ДанныеРаздела.Свойство("П000110002020" + Суффикс) Цикл
				
				ЗначениеПоказателя = 0;
				Если ДанныеРаздела.Свойство("П000110002030" + Суффикс, ЗначениеПоказателя) Тогда
					ЗначениеПоказателя = 0 + ЗначениеПоказателя;
					Если ЗначениеПоказателя >= 0 Тогда
						ДанныеРаздела.Вставить("П000110002030" + Суффикс, ЗначениеПоказателя);
						ДанныеРаздела.Вставить("П000110002040" + Суффикс, 0);
					Иначе
						ДанныеРаздела.Вставить("П000110002030" + Суффикс, 0);
						ДанныеРаздела.Вставить("П000110002040" + Суффикс, -ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
				
				НомСтроки = НомСтроки + 1;
				Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	Раздел12 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел12", Раздел12);
	Если Раздел12 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел12 Цикл
			
			ДанныеРаздела = СтраницаРаздела.Данные;
			
			НомСтроки = 1;
			Суффикс = "_1";
			
			Пока ДанныеРаздела.Свойство("П000120002020" + Суффикс) Цикл
				
				ЗначениеПоказателя = 0;
				Если ДанныеРаздела.Свойство("П000120002030" + Суффикс, ЗначениеПоказателя) Тогда
					ЗначениеПоказателя = 0 + ЗначениеПоказателя;
					Если ЗначениеПоказателя >= 0 Тогда
						ДанныеРаздела.Вставить("П000120002030" + Суффикс, ЗначениеПоказателя);
						ДанныеРаздела.Вставить("П000120002040" + Суффикс, 0);
					Иначе
						ДанныеРаздела.Вставить("П000120002030" + Суффикс, 0);
						ДанныеРаздела.Вставить("П000120002040" + Суффикс, -ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
				
				НомСтроки = НомСтроки + 1;
				Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	СтраницыРаздела2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//РасчАкциз"); // Раздел 2 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыРаздела2.Количество() Цикл
		
		ТекущаяСтраница = СтраницыРаздела2[НомСтраницы - 1];
		
		УзлыСумВычПок = УзлыПоXPath(ТекущаяСтраница, "СумВыч/СумВычПок");
		Для НомерУзла = 1 По УзлыСумВычПок.Количество() Цикл
			УзелСумВычПок = УзлыСумВычПок[НомерУзла - 1];
			Если НомерУзла > 9 Тогда
				Прервать;
			КонецЕсли;
			УзлыКодПок = УзлыПоXPath(УзелСумВычПок, "@КодПок");
			УзлыСумВыч = УзлыПоXPath(УзелСумВычПок, "@СумВыч");
			УзлыКодПок[0].Ключ = "П00022000" + НомерУзла + "001";
			УзлыСумВыч[0].Ключ = "П00022000" + НомерУзла + "002";
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСумВычПок, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
		КонецЦикла;
		
		УзлыСумПУПок = УзлыПоXPath(ТекущаяСтраница, "СумПУ/СумПУПок");
		Для НомерУзла = 1 По УзлыСумПУПок.Количество() Цикл
			УзелСумПУПок = УзлыСумПУПок[НомерУзла - 1];
			Если НомерУзла > 2 Тогда
				Прервать;
			КонецЕсли;
			УзлыКодПок   = УзлыПоXPath(УзелСумПУПок, "@КодПок");
			УзлыСумАкциз = УзлыПоXPath(УзелСумПУПок, "@СумАкциз");
			НомУзла = НомерУзла;
			Если УзлыКодПок[0].Значение = "40001" Тогда
				НомУзла = 1;
			ИначеЕсли УзлыКодПок[0].Значение = "40002" Тогда
				НомУзла = 2;
			КонецЕсли;
			//УзлыКодПок[0].Ключ   = "П00023000" + НомУзла + "001";
			УзлыСумАкциз[0].Ключ = "П00023000" + НомУзла + "000";
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСумПУПок, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
		КонецЦикла;
		
		УзлыАвансПок = УзлыПоXPath(ТекущаяСтраница, "АвансИсчисл/АвансПок");
		Для НомерУзла = 1 По УзлыАвансПок.Количество() Цикл
			УзелАвансПок = УзлыАвансПок[НомерУзла - 1];
			Если НомерУзла > 7 Тогда
				Прервать;
			КонецЕсли;
			УзлыКодПок    = УзлыПоXPath(УзелАвансПок, "@КодПок");
			УзлыСумАвПлат = УзлыПоXPath(УзелАвансПок, "@СумАвПлат");
			НомУзла = НомерУзла;
			Если УзлыКодПок[0].Значение = "60003" Тогда
				НомУзла = 1;
			ИначеЕсли УзлыКодПок[0].Значение = "30009" Тогда
				НомУзла = 2;
			ИначеЕсли УзлыКодПок[0].Значение = "30010" Тогда
				НомУзла = 3;
			ИначеЕсли УзлыКодПок[0].Значение = "60004" Тогда
				НомУзла = 4;
			ИначеЕсли УзлыКодПок[0].Значение = "60005" Тогда
				НомУзла = 5;
			ИначеЕсли УзлыКодПок[0].Значение = "60006" Тогда
				НомУзла = 6;
			ИначеЕсли УзлыКодПок[0].Значение = "60007" Тогда
				НомУзла = 7;
			КонецЕсли;
			УзлыКодПок[0].Ключ    = "П00025000" + НомУзла + "001";
			УзлыСумАвПлат[0].Ключ = "П00025000" + НомУзла + "002";
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелАвансПок, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
		КонецЦикла;
		
	КонецЦикла;
	
	СтраницыПриложения6 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//БензПолучСвид"); // Приложение 6 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыПриложения6.Количество() Цикл
		
		УзлыСведОргПост = УзлыПоXPath(СтраницыПриложения6[НомСтраницы - 1], "СведОргПост");
		УзлыСведИППост  = УзлыПоXPath(СтраницыПриложения6[НомСтраницы - 1], "СведИППост");
		
		Если ЗначениеЗаполнено(УзлыСведОргПост) И ЗначениеЗаполнено(УзлыСведИППост) Тогда
			УзлыИННФЛ = УзлыПоXPath(УзлыСведИППост[0], "@ИННФЛ");
			Если ЗначениеЗаполнено(УзлыИННФЛ) И ЗначениеЗаполнено(УзлыИННФЛ[0].Значение) Тогда
				УзлыИННЮЛ = УзлыПоXPath(УзлыСведОргПост[0], "@ИННЮЛ");
				УзлыИННЮЛ[0].Значение = УзлыИННФЛ[0].Значение;
				УзлыИННЮЛ[0].МаксРазмерность = 12;
				ФИО = "";
				УзлыФИО = УзлыПоXPath(УзлыСведИППост[0], "ФИО/@*");
				Для Каждого УзелФИО Из УзлыФИО Цикл
					ФИО = ФИО + ?(ПустаяСтрока(ФИО), "", " ") + УзелФИО.Значение;
				КонецЦикла;
				УзлыНаимОрг = УзлыПоXPath(УзлыСведОргПост[0], "@НаимОрг");
				УзлыНаимОрг[0].Значение = ФИО;
			КонецЕсли;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыСведОргПост[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
		КонецЕсли;
		
	КонецЦикла;
	
	СтраницыПриложения7 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//БензПостСвид"); // Приложение 7 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыПриложения7.Количество() Цикл
		
		УзлыСведОргПолуч = УзлыПоXPath(СтраницыПриложения7[НомСтраницы - 1], "СведОргПолуч");
		УзлыСведИППолуч  = УзлыПоXPath(СтраницыПриложения7[НомСтраницы - 1], "СведИППолуч");
		
		Если ЗначениеЗаполнено(УзлыСведОргПолуч) И ЗначениеЗаполнено(УзлыСведИППолуч) Тогда
			УзлыИННФЛ = УзлыПоXPath(УзлыСведИППолуч[0], "@ИННФЛ");
			Если ЗначениеЗаполнено(УзлыИННФЛ) И ЗначениеЗаполнено(УзлыИННФЛ[0].Значение) Тогда
				УзлыИННЮЛ = УзлыПоXPath(УзлыСведОргПолуч[0], "@ИННЮЛ");
				УзлыИННЮЛ[0].Значение = УзлыИННФЛ[0].Значение;
				УзлыИННЮЛ[0].МаксРазмерность = 12;
				ФИО = "";
				УзлыФИО = УзлыПоXPath(УзлыСведИППолуч[0], "ФИО/@*");
				Для Каждого УзелФИО Из УзлыФИО Цикл
					ФИО = ФИО + ?(ПустаяСтрока(ФИО), "", " ") + УзелФИО.Значение;
				КонецЦикла;
				УзлыНаимОрг = УзлыПоXPath(УзлыСведОргПолуч[0], "@НаимОрг");
				УзлыНаимОрг[0].Значение = ФИО;
			КонецЕсли;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыСведОргПолуч[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
		КонецЕсли;
		
	КонецЦикла;
	
#КонецОбласти