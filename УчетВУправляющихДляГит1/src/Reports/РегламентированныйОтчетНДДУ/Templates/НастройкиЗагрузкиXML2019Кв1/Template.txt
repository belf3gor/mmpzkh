// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/НДДУгл");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			ТекущийУзел.МнУр = Истина;
			Если ТекущийУзел.Раздел = "Раздел1" Тогда
				Если ТекущийУзел.Код = "СумНалПУ" Тогда
					ТекущийУзел.Многострочность = Истина;
				ИначеЕсли ТекущийУзел.Код = "СумНалПУ_МО" Тогда
					ТекущийУзел.Многострочность = Истина;
				ИначеЕсли ТекущийУзел.Код = "НалПУ" Тогда
					ТекущийУзел.Ключ = "П00001М203000"; // обработаем в структуре данных документа
				КонецЕсли;
			ИначеЕсли ТекущийУзел.Раздел = "Раздел2" Тогда
				Если ТекущийУзел.Код = "ОКТМО" Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				КонецЕсли;
			ИначеЕсли СтрНачинаетсяС(ВРег(ТекущийУзел.Раздел), "ПРИЛОЖЕНИЕ") Тогда
				ТекущийУзел.Раздел = "Раздел2";
				Если ТекущийУзел.Код = "РасчВырДоб" И ПустаяСтрока(ТекущийУзел.Ключ) Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				ИначеЕсли ТекущийУзел.Код = "ФактРасхДоб" И ПустаяСтрока(ТекущийУзел.Ключ) Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				ИначеЕсли ТекущийУзел.Код = "РасчРасхДоб" И ПустаяСтрока(ТекущийУзел.Ключ) Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				ИначеЕсли ТекущийУзел.Код = "РасхПодлВосст" И ПустаяСтрока(ТекущийУзел.Ключ) Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				ИначеЕсли ТекущийУзел.Код = "РасчСумУб" И ПустаяСтрока(ТекущийУзел.Ключ) Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				ИначеЕсли ТекущийУзел.Код = "РасчСумИстУб" И ПустаяСтрока(ТекущийУзел.Ключ) Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				ИначеЕсли ТекущийУзел.Код = "РасчМинНал" И ПустаяСтрока(ТекущийУзел.Ключ) Тогда
					ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
	КонецЕсли;
	
	Раздел1 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел1", Раздел1);
	Если Раздел1 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел1.Строки Цикл
			Для Каждого МногострочнаяЧасть Из СтраницаРаздела.ДанныеМногострочныхЧастей Цикл
				Для Каждого СтрокаМногострочнойЧасти Из МногострочнаяЧасть.Значение.Строки Цикл
					
					Для Каждого ВложеннаяМногострочнаяЧасть Из СтрокаМногострочнойЧасти.ДанныеМногострочныхЧастей Цикл
						Для Каждого СтрокаВложеннойМногострочнойЧасти Из ВложеннаяМногострочнаяЧасть.Значение.Строки Цикл
							
							ДанныеСтроки = СтрокаВложеннойМногострочнойЧасти.Данные;
							
							ЗначениеПоказателя = 0;
							Если ДанныеСтроки.Свойство("П00001М203000", ЗначениеПоказателя) Тогда
								ЗначениеПоказателя = 0 + ЗначениеПоказателя;
								Если ЗначениеПоказателя >= 0 Тогда
									ДанныеСтроки.Вставить("П00001М203000", ЗначениеПоказателя);
									ДанныеСтроки.Вставить("П00001М204000", 0);
								Иначе
									ДанныеСтроки.Вставить("П00001М203000", 0);
									ДанныеСтроки.Вставить("П00001М204000", -ЗначениеПоказателя);
								КонецЕсли;
							КонецЕсли;
							
						КонецЦикла;
					КонецЦикла;
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	УзелШаблон = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/Подписант/@ПрПодп")[0]; //шаблон узла для копирования
	
	УзлыРаздел2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/НДДУгл/РасчНал"); // многоуровневый раздел 2
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел2.Количество() Цикл
		
		УзелРаздел2Уровень1 = УзлыРаздел2[НомСтраницыУровень1 - 1];
		
		НомСтраницы = Новый Массив(1);
		НомСтраницы[0] = НомСтраницыУровень1;
		
		НомСтроки = Новый Массив(1);
		УзлыРаздел2ОКТМО = УзлыПоXPath(УзелРаздел2Уровень1, "ОКТМО");
		Для НомСтрокиУровень2 = 1 По УзлыРаздел2ОКТМО.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел2ОКТМО = УзлыРаздел2ОКТМО[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2ОКТМО, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 7 страниц приложений.
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		
		// Приложение 1
		НомСтраницы[1] = 1;
		НомСтроки = Новый Массив(1);
		УзлыРаздел2Прил1 = УзлыПоXPath(УзелРаздел2Уровень1, "РасчВырДоб");
		Для НомСтрокиУровень2 = 1 По УзлыРаздел2Прил1.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел2Прил1 = УзлыРаздел2Прил1[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2Прил1, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// Приложение 2
		НомСтраницы[1] = 2;
		НомСтроки = Новый Массив(1);
		УзлыРаздел2Прил2 = УзлыПоXPath(УзелРаздел2Уровень1, "ФактРасхДоб");
		Для НомСтрокиУровень2 = 1 По УзлыРаздел2Прил2.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел2Прил2 = УзлыРаздел2Прил2[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2Прил2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// Приложение 3
		НомСтраницы[1] = 3;
		НомСтроки = Новый Массив(1);
		УзлыРаздел2Прил3 = УзлыПоXPath(УзелРаздел2Уровень1, "РасчРасхДоб");
		Для НомСтрокиУровень2 = 1 По УзлыРаздел2Прил3.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел2Прил3 = УзлыРаздел2Прил3[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2Прил3, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// Приложение 4
		НомСтраницы[1] = 4;
		УзлыРаздел2Прил4 = УзлыПоXPath(УзелРаздел2Уровень1, "РасхПодлВосст");
		Если ЗначениеЗаполнено(УзлыРаздел2Прил4) Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел2Прил4[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		КонецЕсли;
		
		// Приложение 5
		НомСтраницы[1] = 5;
		УзлыРаздел2Прил5 = УзлыПоXPath(УзелРаздел2Уровень1, "РасчСумУб");
		Если ЗначениеЗаполнено(УзлыРаздел2Прил5) Тогда
			ДопУзел = СкопированныйУзел(УзлыРаздел2Прил5[0], УзелШаблон);
			ДопУзел.Код      = "ПВ";
			ДопУзел.Ключ     = "ПризнакВключения";
			ДопУзел.Раздел   = "Раздел2";
			ДопУзел.Значение = "V";
			ДопУзел.ЗначениеПоУмолчанию = "";
			
			УзлыОстУбНалПер = УзлыПоXPath(УзлыРаздел2Прил5[0], "ОстУбНалПер");
			Для НомСтрокиГруппы = 1 По Мин(УзлыОстУбНалПер.Количество(), 10) Цикл
				УзелОстУбНалПер = УзлыОстУбНалПер[НомСтрокиГруппы - 1];
				УзелОстУбНалПер.Обязательность = "Н";
				КлючУзлаОсн = "П00105001" + Формат(НомСтрокиГруппы, "ЧЦ=2; ЧВН=");
				УзлыПоXPath(УзелОстУбНалПер, "@Год"  )[0].Ключ = КлючУзлаОсн + "01";
				УзлыПоXPath(УзелОстУбНалПер, "@ОстУб")[0].Ключ = КлючУзлаОсн + "03";
			КонецЦикла;
			
			УзлыСумУбНалБаз = УзлыПоXPath(УзлыРаздел2Прил5[0], "СумУбНалБаз");
			Для НомСтрокиГруппы = 1 По Мин(УзлыСумУбНалБаз.Количество(), 10) Цикл
				УзелСумУбНалБаз = УзлыСумУбНалБаз[НомСтрокиГруппы - 1];
				УзелСумУбНалБаз.Обязательность = "Н";
				КлючУзлаОсн = "П00105003" + Формат(НомСтрокиГруппы, "ЧЦ=2; ЧВН=");
				УзлыПоXPath(УзелСумУбНалБаз, "@Год"  )[0].Ключ = КлючУзлаОсн + "01";
				УзлыПоXPath(УзелСумУбНалБаз, "@СумУб")[0].Ключ = КлючУзлаОсн + "03";
			КонецЦикла;
			
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел2Прил5[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		КонецЕсли;
		
		// Приложение 6
		НомСтраницы[1] = 6;
		НомСтроки = Новый Массив(1);
		УзлыРаздел2Прил6 = УзлыПоXPath(УзелРаздел2Уровень1, "РасчСумИстУб");
		Для НомСтрокиУровень2 = 1 По УзлыРаздел2Прил6.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел2Прил6 = УзлыРаздел2Прил6[НомСтрокиУровень2 - 1];
			
			УзлыСумУбНачРетр = УзлыПоXPath(УзелРаздел2Прил6, "СумУбНачРетр");
			Для НомСтрокиГруппы = 1 По Мин(УзлыСумУбНачРетр.Количество(), 9) Цикл
				УзелСумУбНачРетр = УзлыСумУбНачРетр[НомСтрокиГруппы - 1];
				УзелСумУбНачРетр.Обязательность = "Н";
				КлючУзлаОсн = "П00106М11" + Формат(НомСтрокиГруппы, "ЧЦ=2; ЧВН=");
				УзлыПоXPath(УзелСумУбНачРетр, "@Год"  )[0].Ключ = КлючУзлаОсн + "01";
				УзлыПоXPath(УзелСумУбНачРетр, "@СумУб")[0].Ключ = КлючУзлаОсн + "03";
			КонецЦикла;
			
			УзлыСумУбРетр = УзлыПоXPath(УзелРаздел2Прил6, "СумУбРетр");
			Для НомСтрокиГруппы = 1 По Мин(УзлыСумУбРетр.Количество(), 9) Цикл
				УзелСумУбРетр = УзлыСумУбРетр[НомСтрокиГруппы - 1];
				УзелСумУбРетр.Обязательность = "Н";
				КлючУзлаОсн = "П00106М17" + Формат(НомСтрокиГруппы, "ЧЦ=2; ЧВН=");
				УзлыПоXPath(УзелСумУбРетр, "@Год"  )[0].Ключ = КлючУзлаОсн + "01";
				УзлыПоXPath(УзелСумУбРетр, "@СумУб")[0].Ключ = КлючУзлаОсн + "03";
			КонецЦикла;
			
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2Прил6, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// Приложение 7
		НомСтраницы[1] = 7;
		УзлыРаздел2Прил7 = УзлыПоXPath(УзелРаздел2Уровень1, "РасчМинНал");
		Если ЗначениеЗаполнено(УзлыРаздел2Прил7) Тогда
			ДопУзел = СкопированныйУзел(УзлыРаздел2Прил7[0], УзелШаблон);
			ДопУзел.Код      = "ПВ";
			ДопУзел.Ключ     = "ПризнакВключения";
			ДопУзел.Раздел   = "Раздел2";
			ДопУзел.Значение = "V";
			ДопУзел.ЗначениеПоУмолчанию = "";
			
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел2Прил7[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		КонецЕсли;
		
	КонецЦикла;
	
#КонецОбласти