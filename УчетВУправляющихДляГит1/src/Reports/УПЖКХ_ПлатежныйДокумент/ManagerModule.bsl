#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура печати листовки об оплате онлайн.
//
Процедура ПечатьЛистовкиОбОплатеОнлайн(ПараметрыПечати, АдресРезультата) Экспорт
	
	Макет   = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет(ПараметрыПечати.ИмяМакета);
	Область = Макет.ПолучитьОбласть(ПараметрыПечати.ИмяТекущейЛистовки);
	
	Для Каждого ТекущаяОбласть Из Область.Области Цикл
		Если ТипЗнч(ТекущаяОбласть) = Тип("РисунокТабличногоДокумента") Тогда
			ЧастиНаименования = СтрРазделить(ТекущаяОбласть.Имя, "_", Ложь);
			
			Для Каждого ТекущийПараметр Из ПараметрыПечати.ПараметрыЗаполнения Цикл
				Если ЧастиНаименования.Найти(ТекущийПараметр.Ключ) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ТекущаяОбласть.Текст = ТекущийПараметр.Значение;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Область.Параметры.Заполнить(ПараметрыПечати.ПараметрыЗаполнения);
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Область, АдресРезультата);
	
КонецПроцедуры

// Процедура вызывает механизм формирования платежного документа из модуля объекта отчета.
//
// Параметры:
//  ПараметрыОтчета - табличный документ, в который будет осуществлен вывод
//  АдресХранилища.
//
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ИмяОбъектаОтчета = ПараметрыОтчета.ОтчетОбъект;
	ОтчетОбъект      = ОбъектПоПолномуИмени(ИмяОбъектаОтчета);
	
	ОтчетОбъект.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	
КонецПроцедуры // СформироватьОтчет()

// Создает и возвращает экземпляр объекта по полному имени объекта метаданных.
// Ограничение: поддерживаются только встроенные и дополнительные внешние отчеты.
//
// Параметры:
//   ПолноеИмя - Строка - полное имя объекта метаданных. Пример: "ОтчетОбъект.БизнесПроцессы".
//
// Возвращаемое значение:
//   ОтчетОбъект.
// 
Функция ОбъектПоПолномуИмени(ПолноеИмя) Экспорт
	МассивСтрок = СтрРазделить(ПолноеИмя, ".");
	
	Если МассивСтрок.Количество() >= 2 Тогда
		Вид = ВРег(МассивСтрок[0]);
		Имя = МассивСтрок[1];
	Иначе
		ВызватьИсключение СтрЗаменить(НСтр("ru = 'Некорректное полное имя отчета ""%1"".'"), "%1", ПолноеИмя);
	КонецЕсли;
	
	Если Вид = "ОТЧЕТОБЪЕКТ" Тогда
		Возврат Отчеты[Имя].Создать();
	ИначеЕсли Вид = "ВНЕШНИЙОТЧЕТОБЪЕКТ" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
		|ГДЕ
		|	ДополнительныеОтчетыИОбработки.ИмяОбъекта = &ИмяОбъекта";
		
		Запрос.УстановитьПараметр("ИмяОбъекта", Имя);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока НЕ Выборка.Следующий() Цикл
			ВызватьИсключение Строка("Внешний отчет не найден!");
		КонецЦикла;
		
		Возврат ДополнительныеОтчетыИОбработки.ПолучитьОбъектВнешнейОбработки(Выборка.Ссылка);
		
	Иначе
		ВызватьИсключение СтрЗаменить(НСтр("ru = '""%1"" не является отчетом.'"), "%1", ПолноеИмя);
	КонецЕсли;
	
КонецФункции

// Функция возвращает параметры описания печатных форм текущего документа.
//
Функция ПолучитьОписаниеПараметровПечатныхФорм(ИмяФормыОписанияПараметров) Экспорт
	
	Если ИмяФормыОписанияПараметров = "ПФ_MXL_МакетСтандартный" Тогда
		
		Коллекция = УПЖКХ_УправлениеПечатьюСервер.СоздатьКоллекциюОписанияМакетов();
		
		// 1. Добавляем описание нового макета в коллекцию описаний.
		ОписаниеОбластиПараметров = УПЖКХ_УправлениеПечатьюСервер.ДобавитьМакетВОписаниеПараметров(Коллекция, ИмяФормыОписанияПараметров);
		
		// 2. Добавляем описание необходимых областей и параметров макета.
		
		ОбщиеПараметрыМакета = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Общие_параметры_для_всех_областей");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбщиеПараметрыМакета, "ЕЛСвГИСЖКХ",       "Значение ""Единого лицевого счета (ЕЛС)"" лицевого счета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбщиеПараметрыМакета, "ИдентификаторЖКУ", "Значение ""Идентификатора ЖКУ"" лицевого счета.");
		
		//// 3. Добаляем описание области
		Заголовок = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Заголовок");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Заголовок, "Заголовок", "Текст заголовка платежного документа.");
		
		Раздел1ИсполнительПлательщик = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел1ИсполнительПлательщик");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ПериодОплаты",                 "Дата, на которую формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ФИО",                          "Ф.И.О. плательщика, на которого формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "Адрес",                        "Адрес плательщика, на которого формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ОбщаяПлощадь",                 "Общая площадь помещения.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ОбщаяПлощадьЗдания",           "Общая площадь здания.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "КоличествоПроживающих",        "Количество человек, проживающих по указанному адресу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "КоличествоЗарегистрированных", "Количество человек, зарегистрированных по указанному адресу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "Организация",                  "Наименование управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ИННОрганизации",               "ИНН управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ЮрАдресОрганизации",           "Юридический адрес управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "Телефон",                      "Номер телефона управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ЗапятаяСайтОрганизации",       "Адрес сайта управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ИсполнительПлательщик, "ДопИнформация",                "Дополнительная информация об управляющей организации.");
		
		Раздел1ОбластьИсполнительРасчетов = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел1ОбластьИсполнительРасчетов");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ОбластьИсполнительРасчетов, "ИсполнительУслуг",         "Наименование организации-исполнителя услуг.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ОбластьИсполнительРасчетов, "ИННИсполнителя",           "ИНН организации-исполнителя услуг.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ОбластьИсполнительРасчетов, "АдресИсполнителя",         "Адрес организации-исполнителя услуг.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ОбластьИсполнительРасчетов, "ТелефонИсполнителя",       "Номер телефона организации-исполнителя услуг.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел1ОбластьИсполнительРасчетов, "ДопИнформацияИсполнителя", "Дополнительная информация об организации-исполнителе услуг.");
		
		Раздел2СчетаСтрока = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СчетаСтрока");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "НаименованиеПоставщика", "Наименование организации, предоставляющей услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "РасчетныйСчет",          "Номер банковского счета организации, предоставляющей услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "Банк",                   "Наименование банка, в котором у организации, предоставляющей услугу открыт счет.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "КоррСчет",               "Корреспондентский счет банка.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "БИК",                    "Банковский идентификационный код.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "ЛицевойСчет",            "Номер лицевого счета плательщика, на которого формируется документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "ВидыУслугСтрокой",       "Наименования видов услуг, по которым производятся начисления в расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СчетаСтрока, "ВсегоКОплате",           "Сумма, начисленная к оплате за предоставленные услуги.");
		
		Раздел2СправочноЗадолженностьАванс = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноЗадолженностьАванс");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноЗадолженностьАванс, "Задолженность", "Задолженность плательщика за предыдущие периоды.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноЗадолженностьАванс, "Аванс",         "Сумма аванса на начало расчетного периода.");
		
		Раздел2СправочноОплаты = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноОплаты");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноОплаты, "ТекстОплаты",  "Строка ""Внесено оплат"".");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноОплаты, "ВнесеноОплат", "Сумма внесенной оплаты плательщиком.");
		
		Раздел2СправочноПредоплатаРассрочки = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноПредоплатаРассрочки");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноПредоплатаРассрочки, "ВнесеноОплатНаПогашениеРассрочки", "Сумма внесенной предоплаты по рассрочке.");
		
		Раздел2СправочноОплатаДобровольногоСтрахования = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноОплатаДобровольногоСтрахования");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноОплатаДобровольногоСтрахования, "ВнесеноНаДобровольноеСтрахование", "Сумма, внесенная на добровольное страхование.");
		
		Раздел2СправочноДатаОплаты = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноДатаОплаты");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплаты, "ДатаОплаты", "Дата поступления последней оплаты от плательщика.");
		
		Раздел2СправочноПени = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноПени");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноПени, "ТекстПени", "Строка ""Пени"".");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноПени, "Пени",      "Сумма начисленных пени.");
		
		Раздел2СправочноКомиссия = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноКомиссия");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноКомиссия, "ТекстКомиссия", "Комиссия с указанием процентной ставки.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноКомиссия, "СуммаКомиссии", "Сумма комиссии банка.");
		
		Раздел2СправочноШК = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноШК");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноШК, "ТекстШК", "Цифровое обозначение штрихкода.");
		
		Раздел2СправочноШКСоСтрахованием = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноШКСоСтрахованием");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноШКСоСтрахованием, "ТекстШК",               "Цифровое обозначение штрихкода.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноШКСоСтрахованием, "ТекстШКСоСтрахованием", "Цифровое обозначение штрихкода, включающего сумму начисления по добровольному страхованию.");
		
		Раздел2СправочноИтогоКОплате = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноИтогоКОплате");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноИтогоКОплате, "ВсегоКОплате", "Итоговая сумма к оплате, начисленная за оплату услуг в расчетном периоде.");
		
		Раздел2СправочноИтогоКОплатеСоСтрахованием = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноИтогоКОплатеСоСтрахованием");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноИтогоКОплатеСоСтрахованием, "ВсегоКОплате",                          "Итоговая сумма к оплате, начисленная за оплату услуг в расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноИтогоКОплатеСоСтрахованием, "ВсегоКОплатеСДобровольнымСтрахованием", "Итоговая сумма к оплате, начисленная за оплату услуг в расчетном периоде, включая сумму начисления по добровольному страхованию.");
		
		Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате, "ДатаОплаты",    "Дата поступления последней оплаты от плательщика.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате, "ТекстПени",     "Строка ""Пени"".");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате, "Пени",          "Сумма начисленных пени.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате, "ТекстКомиссия", "Комиссия с указанием процентной ставки.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате, "СуммаКомиссии", "Сумма комиссии банка.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплате, "ВсегоКОплате",  "Итоговая сумма к оплате, начисленная за оплату услуг в расчетном периоде.");
		
		Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием, "ДатаОплаты",                            "Дата поступления последней оплаты от плательщика.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием, "ТекстПени",                             "Строка ""Пени"".");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием, "Пени",                                  "Сумма начисленных пени.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием, "ТекстКомиссия",                         "Комиссия с указанием процентной ставки.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием, "СуммаКомиссии",                         "Сумма комиссии банка.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием, "ВсегоКОплате",                          "Итоговая сумма к оплате, начисленная за оплату услуг в расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел2СправочноДатаОплатыПениКомиссияИтогоКОплатеСоСтрахованием, "ВсегоКОплатеСДобровольнымСтрахованием", "Итоговая сумма к оплате, начисленная за оплату услуг в расчетном периоде, включая сумму начисления по добровольному страхованию.");
		
		НаименованиеРаздела3и4Шапка = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "НаименованиеРаздела3и4Шапка");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(НаименованиеРаздела3и4Шапка, "ТипФондаПомещенияСиРЖилья", "Вид помещения (жилое, нежилое).");
		
		ПениНаименованиеРаздела3НачисленияШапка = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ПениНаименованиеРаздела3НачисленияШапка");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ПениНаименованиеРаздела3НачисленияШапка, "ТипФондаПомещенияСиРЖилья", "Вид помещения (жилое, нежилое).");
		
		Раздел3СтрокаСодержаниеИРемонт = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел3СтрокаСодержаниеИРемонт");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3СтрокаСодержаниеИРемонт, "ТипФондаПомещенияСиРЖилья", "Вид помещения (жилое, нежилое).");
		
		Раздел3НачисленияСтрока = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел3НачисленияСтрока");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "ВидДляВывода",          "Наименование услуги, по которой производится начисление в расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "ЕдИзм",                 "Единицы измерения услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "КоличествоИПУ",         "Объем коммунальной услуги на индивидуальное потребление.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "КодВидаНачисленийИПУ",  "Показатель, определяющий, исходя из чего расчитывается объем коммунальной услуги на индивидуальное потребление.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "КоличествоОПУ",         "Объем коммунальной услуги на общедомовые нужды.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "КодВидаНачисленийОПУ",  "Показатель, определяющий, исходя из чего рассчитывается объем коммунальной услуги на общедомовые нужды.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "ТарифДляВывода",        "Тариф, установленный для услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "НачисленоИПУ",          "Сумма, начисленная для оплаты услуги за индивидуальное потребление за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "НачисленоОПУ",          "Сумма, начисленная для оплаты услуги за общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "Начислено",             "Общая сумма, начисленная для оплаты услуги за индивидуальное потребление и общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "ПовышающийКоэффициент", "Размер повышающего коэффициента.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "СуммаПовышения",        "Сумма повышения.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "Перерасчет",            "Сумма перерасчета платы за услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "Льгота",                "Сумма льготы, субсидии за услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "КОплате",               "Общая сумма к оплате с учетом перерасчетов и льгот, начисленная для оплаты за индивидуальное потребление и общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "КОплатеИПУ",            "Сумма к оплате с учетом перерасчетов и льгот, начисленная для оплаты услуги за индивидуальное потребление за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияСтрока, "КОплатеОПУ",            "Сумма к оплате с учетом перерасчетов и льгот, начисленная для оплаты услуги за общедомовые нужды за расчетный период.");
		
		Раздел3НачисленияПодвал = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел3НачисленияПодвал");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияПодвал, "НачисленоИПУ",   "Сумма, начисленная для оплаты по всем услугам за индивидуальное потребление за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияПодвал, "НачисленоОПУ",   "Сумма, начисленная для оплаты по всем услугам за общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияПодвал, "Начислено",      "Общая сумма, начисленная для оплаты по всем услугам за индивидуальное потребление и общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияПодвал, "СуммаПовышения", "Сумма повышения.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияПодвал, "Перерасчет",     "Сумма перерасчета платы за все услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияПодвал, "Льгота",         "Сумма льготы, субсидии за все услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел3НачисленияПодвал, "КОплате",        "Общая сумма к оплате за все услуги с учетом перерасчетов и льгот, начисленная для оплаты за индивидуальное потребление и общедомовые нужды за расчетный период.");
		
		СтрокаДобровольногоСтрахования = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "СтрокаДобровольногоСтрахования");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаДобровольногоСтрахования, "ВидУслуги",                               "Наименование услуги добровольного страхования.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаДобровольногоСтрахования, "МесяцНачисленияДобровольногоСтрахования", "Месяц, за который начислено добровольное страхование.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаДобровольногоСтрахования, "ЕдИзм",                                   "Единицы измерения услуги добровольного страхования.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаДобровольногоСтрахования, "Количество",                              "Количество единиц потребления услуги добровольного страхования.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаДобровольногоСтрахования, "Тариф",                                   "Тариф по услуге добровольного страхования.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаДобровольногоСтрахования, "СуммаНачисления",                         "Сумма начисления по услуге добровольного страхования.");
		
		Раздел4СУчетнымОбъемомНачисленияСтрока = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел4СУчетнымОбъемомНачисленияСтрока");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4СУчетнымОбъемомНачисленияСтрока, "РазмерНормы",      "Норматив индивидуального потребления услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4СУчетнымОбъемомНачисленияСтрока, "РазмерНормыОбщ",   "Норматив общедомового потребления услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4СУчетнымОбъемомНачисленияСтрока, "ТекПоказанияИнд",  "Текущие показания индивидуальных (квартирных) приборов учета услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4СУчетнымОбъемомНачисленияСтрока, "ТекПоказанияОбщ",  "Текущие показания общедомовых приборов учета услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4СУчетнымОбъемомНачисленияСтрока, "ОбщРасходИнд",     "Суммарный объем услуги по всем помещениям дома.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4СУчетнымОбъемомНачисленияСтрока, "ОбщУчетныйРасход", "Сумммарный объем услуги по дому (по всем помещениям дома и общедомовые нужды).");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4СУчетнымОбъемомНачисленияСтрока, "ОбщРасходОбщ",     "Суммарный объем услуги на общедомовые нужды.");
		
		Раздел4БезУчетногоОбъемаНачисленияСтрока = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел4БезУчетногоОбъемаНачисленияСтрока");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4БезУчетногоОбъемаНачисленияСтрока, "РазмерНормы",     "Норматив индивидуального потребления услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4БезУчетногоОбъемаНачисленияСтрока, "РазмерНормыОбщ",  "Норматив общедомового потребления услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4БезУчетногоОбъемаНачисленияСтрока, "ТекПоказанияИнд", "Текущие показания индивидуальных (квартирных) приборов учета услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4БезУчетногоОбъемаНачисленияСтрока, "ТекПоказанияОбщ", "Текущие показания общедомовых приборов учета услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4БезУчетногоОбъемаНачисленияСтрока, "ОбщРасходИнд",    "Суммарный объем услуги по всем помещениям дома.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел4БезУчетногоОбъемаНачисленияСтрока, "ОбщРасходОбщ",    "Суммарный объем услуги на общедомовые нужды.");
		
		Раздел5ПерерасчетыСтрока = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел5ПерерасчетыСтрока");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел5ПерерасчетыСтрока, "ВидУслуги",              "Наименование услуги, по которой производится перерасчет в текущем периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел5ПерерасчетыСтрока, "ОснованиеКорректировки", "Основание для проведения перерасчета по услуге.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел5ПерерасчетыСтрока, "Перерасчет",             "Сумма перерасчета платы за услугу.");
		
		Раздел6РассрочкаСтрока = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел6РассрочкаСтрока");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел6РассрочкаСтрока, "ВидУслуги",         "Наименование услуги, которая оплачивается в рассрочку.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел6РассрочкаСтрока, "Начислено",         "Сумма платы за услугу с учетом рассрочки платежа от платы за расчетный период");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел6РассрочкаСтрока, "Остаток",           "Сумма платы за услугу с учетом рассрочки платежа от платы за предыдущие расчетные периоды.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел6РассрочкаСтрока, "НачисленоКомиссия", "Сумма комиссии за рассрочку.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел6РассрочкаСтрока, "ПроцентнаяСтавка",  "Процентная ставка по рассрочке.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел6РассрочкаСтрока, "КОплате",           "Сумма к оплате за услугу с учетом рассрочки платежа и процентов за рассрочку.");
		
		Раздел6РассрочкаПодвал = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Раздел6РассрочкаПодвал");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Раздел6РассрочкаПодвал, "КОплате", "Сумма к оплате за все услуги с учетом рассрочки платежа и процентов за рассрочку.");
		
		СтрокаПримечания = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "СтрокаПримечания");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаПримечания, "Примечание", "Примечание квитанции.");
		
		КорешокПолучатель = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "КорешокПолучатель");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокПолучатель, "ФИО",         "Ф.И.О. плательщика, на которого формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокПолучатель, "ЛицевойСчет", "Номер лицевого счета плательщика, на которого формируется документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокПолучатель, "Адрес",       "Адрес плательщика, на которого формируется платежный документ.");
		
		КорешокСтрокаИПУ = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "КорешокСтрокаИПУ");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "НаименованиеСчетчика", "Наименование индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ВидУслуги",            "Наименование вида услуги индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ЗаводскойНомер",       "Задоской номер индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "Услуга",               "Наименование услуги индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ПредыдущееПоказание",  "Показание индивидуального прибора учета по услуге в предыдущем расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ДатаПоверки",          "Дата поверки индивидуального прибора учета.");
		
		Возврат Коллекция
		
	ИначеЕсли ИмяФормыОписанияПараметров = "ПФ_MXL_МакетСтандартный43Пр" Тогда
		
		Коллекция = УПЖКХ_УправлениеПечатьюСервер.СоздатьКоллекциюОписанияМакетов();
		
		// 1. Добавляем описание нового макета в коллекцию описаний.
		ОписаниеОбластиПараметров = УПЖКХ_УправлениеПечатьюСервер.ДобавитьМакетВОписаниеПараметров(Коллекция, ИмяФормыОписанияПараметров);
		
		// 2. Добавляем описание необходимых областей и параметров макета.
		
		//ОбщиеПараметрыМакета = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Общие_параметры_для_всех_областей");
		//УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбщиеПараметрыМакета, "ЕЛСвГИСЖКХ",       "Значение ""Единого лицевого счета (ЕЛС)"" лицевого счета.");
		//УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбщиеПараметрыМакета, "ИдентификаторЖКУ", "Значение ""Идентификатора ЖКУ"" лицевого счета.");
		
		//// 3. Добаляем описание области
		Заголовок = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "Заголовок");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(Заголовок, "Заголовок", "Текст заголовка платежного документа.");
		
		ОбластьИдентификаторПД = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьИдентификаторПД");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьИдентификаторПД, "ИдентификаторПД", "Идентификатор платежного документа в ГИС ЖКХ.");
		
		ОбластьЕЛСВГИСЖКХ = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьЕЛСВГИСЖКХ");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьЕЛСВГИСЖКХ, "ЕЛСвГИСЖКХ", "Значение ""Единого лицевого счета (ЕЛС)"" лицевого счета.");
		
		ОбластьРаздел1 = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел1");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "ПериодОплаты",           "Дата, на которую формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "ФИО",                    "Ф.И.О. плательщика, на которого формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "Адрес1",                 "Первая часть адреса плательщика, на которого формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "Адрес2",                 "Вторая часть адреса плательщика, на которого формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "ОбщаяПлощадь",           "Общая площадь помещения.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "КоличествоПроживающих",  "Количество человек, проживающих по указанному адресу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "Организация",            "Наименование управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "ИННОрганизации",         "ИНН управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "ЮрАдресОрганизации",     "Юридический адрес управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "Телефон",                "Номер телефона управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "ЗапятаяСайтОрганизации", "Адрес сайта управляющей организации.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел1, "ДопИнформация",          "Дополнительная информация об управляющей организации.");
		
		ОбластьРаздел2СтрокаТаблицы = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел2СтрокаТаблицы");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел2СтрокаТаблицы, "НаименованиеСчетчика",    "Наименование индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел2СтрокаТаблицы, "ЗаводскойНомер",          "Задоской номер индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел2СтрокаТаблицы, "ВидУслуги",               "Наименование услуги, по которой производится перерасчет в текущем периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел2СтрокаТаблицы, "Услуга",                  "Наименование услуги индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел2СтрокаТаблицы, "ПредПредыдущееПоказание", "Показание индивидуального прибора учета по услуге в периоде, предшествующем предыдущему расчетному периоду.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел2СтрокаТаблицы, "ПредыдущееПоказание",     "Показание индивидуального прибора учета по услуге в предыдущем расчетном периоде.");
		
		ОбластьРаздел3СтрокаТаблицыНачисления = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаТаблицыНачисления");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "ВидДляВывода",           "Наименование услуги, по которой производится начисление в расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "ЕдИзм",                  "Единицы измерения услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "КоличествоИПУ",          "Объем коммунальной услуги на индивидуальное потребление.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "КоличествоОПУ",          "Объем коммунальной услуги на общедомовые нужды.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "Тариф",                  "Тариф, установленный для услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "Начислено",              "Общая сумма, начисленная для оплаты услуги за индивидуальное потребление и общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "ПовышающийКоэффициент",  "Размер повышающего коэффициента.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "СуммаПовышения",         "Сумма повышения.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "Перерасчет",             "Сумма перерасчета платы за услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "Льгота",                 "Сумма льготы, субсидии за услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "КОплате",                "Общая сумма к оплате с учетом перерасчетов и льгот, начисленная для оплаты за индивидуальное потребление и общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "НачальноеСальдо",        "Сальдо на начало расчетного периода по услуге.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "НомерПолучателяПлатежа", "Порядковый номер получателя платежа.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыНачисления, "ИтогоКОплате",           "Общая сумма к оплате с учетом перерасчетов, льгот, начального сальдо и пени, начисленная для оплаты за индивидуальное потребление и общедомовые нужды за расчетный период.");
		
		ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления, "Начислено",       "Общая сумма, начисленная для оплаты по всем услугам за индивидуальное потребление и общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления, "СуммаПовышения",  "Сумма повышения платы за все услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления, "Перерасчет",      "Сумма перерасчета платы за все услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления, "Льгота",          "Сумма льготы, субсидии за все услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления, "КОплате",         "Общая сумма к оплате за все услуги с учетом перерасчетов и льгот, начисленная для оплаты за индивидуальное потребление и общедомовые нужды за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления, "НачальноеСальдо", "Сальдо на начало расчетного периода по всем услугам.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ИтоговаяСтрокаТаблицыНачисления, "ИтогоКОплате",    "Общая сумма к оплате за все услуги с учетом перерасчетов, льгот, начального сальдо и пени, начисленная для оплаты за индивидуальное потребление и общедомовые нужды за расчетный период.");
		
		ОбластьРаздел3СтрокаОплаты = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаОплаты");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаОплаты, "ТекстОплаты",  "Строка ""Внесено оплат"".");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаОплаты, "ДатаОплаты",   "Дата поступления последней оплаты от плательщика.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаОплаты, "ВнесеноОплат", "Сумма внесенной оплаты плательщиком.");
		
		ОбластьРаздел3ПредоплатаРассрочки = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3ПредоплатаРассрочки");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3ПредоплатаРассрочки, "ВнесеноОплатНаПогашениеРассрочки", "Сумма внесенной предоплаты по рассрочке.");
		
		ОбластьРаздел3СтрокаСуммаКомиссии = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаСуммаКомиссии");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаСуммаКомиссии, "СуммаКомиссии", "Сумма комиссии банка.");
		
		ОбластьРаздел3СтрокаДатаПоследнейОплаты = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаДатаПоследнейОплаты");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаДатаПоследнейОплаты, "ДатаОплаты", "Дата поступления последней оплаты от плательщика.");
		
		ОбластьРаздел3СтрокаИтогоКОплате = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаИтогоКОплате");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаИтогоКОплате, "ВсегоКОплате", "Сумма, начисленная к оплате за предоставленные услуги.");
		
		ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "НомерПолучателяПлатежа",    "Порядковый номер получателя платежа.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "ПолучательПлатежа",         "Наименование организации, которая должна получить платеж.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "ИНН",                       "ИНН организации-исполнителя услуг.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "РасчетныйСчет",             "Номер банковского счета организации, предоставляющей услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "Банк",                      "Наименование банка, в котором у организации, предоставляющей услугу открыт счет.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "КоррСчет",                  "Корреспондентский счет банка.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "БИК",                       "Банковский идентификационный код.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "НаименованиеЛицевогоСчета", "Номер лицевого счета плательщика, на которого формируется документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "ИдентификаторЖКУ",          "Значение ""Идентификатора ЖКУ"" лицевого счета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаQR, "ВсегоКОплате",              "Сумма, начисленная к оплате за предоставленные услуги.");
		
		ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "НомерПолучателяПлатежа",    "Порядковый номер получателя платежа.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "ПолучательПлатежа",         "Наименование организации, которая должна получить платеж.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "ИНН",                       "ИНН организации-исполнителя услуг.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "РасчетныйСчет",             "Номер банковского счета организации, предоставляющей услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "Банк",                      "Наименование банка, в котором у организации, предоставляющей услугу открыт счет.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "КоррСчет",                  "Корреспондентский счет банка.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "БИК",                       "Банковский идентификационный код.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "НаименованиеЛицевогоСчета", "Номер лицевого счета плательщика, на которого формируется документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "ИдентификаторЖКУ",          "Значение ""Идентификатора ЖКУ"" лицевого счета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаШК, "ВсегоКОплате",              "Сумма, начисленная к оплате за предоставленные услуги.");
		
		ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "НомерПолучателяПлатежа",    "Порядковый номер получателя платежа.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "ПолучательПлатежа",         "Наименование организации, которая должна получить платеж.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "ИНН",                       "ИНН организации-исполнителя услуг.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "РасчетныйСчет",             "Номер банковского счета организации, предоставляющей услугу.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "Банк",                      "Наименование банка, в котором у организации, предоставляющей услугу открыт счет.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "КоррСчет",                  "Корреспондентский счет банка.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "БИК",                       "Банковский идентификационный код.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "НаименованиеЛицевогоСчета", "Номер лицевого счета плательщика, на которого формируется документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "ИдентификаторЖКУ",          "Значение ""Идентификатора ЖКУ"" лицевого счета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел3СтрокаТаблицыПолучателейПлатежаБезШК, "ВсегоКОплате",              "Сумма, начисленная к оплате за предоставленные услуги.");
		
		ОбластьРаздел4СтрокаТаблицы = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел4СтрокаТаблицы");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "УслугаДляВывода", "Наименование услуги, по которой производится начисление в расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "ЕдИзм",           "Единицы измерения услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "РазмерНормы",     "Норматив индивидуального потребления услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "РазмерНормыОбщ",  "Норматив общедомового потребления услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "ТекПоказанияИнд", "Текущие показания индивидуальных (квартирных) приборов учета услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "ТекПоказанияОбщ", "Текущие показания общедомовых приборов учета услуги.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "ОбщРасходИнд",    "Суммарный объем услуги по всем помещениям дома.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел4СтрокаТаблицы, "ОбщРасходОбщ",    "Суммарный объем услуги на общедомовые нужды.");
		
		ОбластьРаздел5СтрокаТаблицы = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел5СтрокаТаблицы");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел5СтрокаТаблицы, "ВидУслуги",         "Наименование услуги, которая оплачивается в рассрочку.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел5СтрокаТаблицы, "Начислено",         "Сумма платы за услугу с учетом рассрочки платежа от платы за расчетный период.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел5СтрокаТаблицы, "Остаток",           "Сумма платы за услугу с учетом рассрочки платежа от платы за предыдущие расчетные периоды.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел5СтрокаТаблицы, "НачисленоКомиссия", "Сумма комиссии за рассрочку.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел5СтрокаТаблицы, "ПроцентнаяСтавка",  "Процентная ставка по рассрочке.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел5СтрокаТаблицы, "КОплате",           "Сумма к оплате за услугу с учетом рассрочки платежа и процентов за рассрочку.");
		
		ОбластьРаздел5ИтоговаяСтрокаТаблицы = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел5ИтоговаяСтрокаТаблицы");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел5ИтоговаяСтрокаТаблицы, "КОплате", "Итого к оплате за расчетный период с учетом рассрочки.");
		
		ОбластьРаздел6СтрокаТаблицы = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "ОбластьРаздел6СтрокаТаблицы");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел6СтрокаТаблицы, "ВидУслуги",              "Наименование услуги, по которой производится перерасчет в текущем периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел6СтрокаТаблицы, "ОснованиеКорректировки", "Основание для проведения перерасчета по услуге.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(ОбластьРаздел6СтрокаТаблицы, "Перерасчет",             "Сумма перерасчета платы за услугу.");
		
		СтрокаПримечания = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "СтрокаПримечания");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(СтрокаПримечания, "Примечание", "Примечание квитанции.");
		
		КорешокПолучатель = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "КорешокПолучатель");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокПолучатель, "ФИО",         "Ф.И.О. плательщика, на которого формируется платежный документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокПолучатель, "ЛицевойСчет", "Номер лицевого счета плательщика, на которого формируется документ.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокПолучатель, "Адрес",       "Адрес плательщика, на которого формируется платежный документ.");
		
		КорешокСтрокаИПУ = УПЖКХ_УправлениеПечатьюСервер.ДобавитьОбластьВОписаниеПараметров(ОписаниеОбластиПараметров, "КорешокСтрокаИПУ");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "НаименованиеСчетчика", "Наименование индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ЗаводскойНомер",       "Задоской номер индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ВидУслуги",            "Наименование вида услуги индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "Услуга",               "Наименование услуги индивидуального прибора учета.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ПредыдущееПоказание",  "Показание индивидуального прибора учета по услуге в предыдущем расчетном периоде.");
		УПЖКХ_УправлениеПечатьюСервер.ДобавитьЭлементВОписаниеПараметров(КорешокСтрокаИПУ, "ДатаПоверки",          "Дата поверки индивидуального прибора учета.");
		
		Возврат Коллекция
		
	Иначе
		
		Возврат Неопределено
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти


////////////////////////////////////////////////////////////////////////////////
// МЕХАНИЗМЫ ДЛЯ ОПОВЕЩЕНИЯ ПОЛЬЗОВАТЕЛЕЙ ОБ ОТКАЗЕ ОТ КВИТАНЦИЙ

#Область ПроцедурыДляПроверкиИспользованияКвитанцийКоторыеПодлежатУдалению

// Формирует текст оповещения пользователей, выводимый после обновления информационной базы.
// см. УПЖКХ_ОбновлениеИнформационнойБазыВызовСервера.ПолучитьТекстСообщенияОбУдаленииФормКвитанций()
//
Функция ПолучитьТекстСообщенияОбУдаленииФормКвитанцийДляМеханизмаОбновлений(Скрытие = Ложь) Экспорт
	
	ТекстСообщения  = "";
	
	// Сообщение с предупреждением пользователя о скором удалении формы платежного документа.
	Если Не Скрытие Тогда
		
		СписокКвитанций = ПолучитьФормыКвитанцийКоторыеПодлежатУдалению();
		
		Если НЕ СписокКвитанций.Количество() = 0 Тогда
			
			МассивОрганизаций = ПолучитьСписокОрганизацийКоторыеИспользуютКвитанции(СписокКвитанций);
			
			Если НЕ МассивОрганизаций.Количество() = 0 Тогда
				
				КвитанцииВоМножЧисле   = СписокКвитанций.Количество() > 1;
				ОрганизацииВоМножЧисле = МассивОрганизаций.Количество() > 1;
				
				МассивКвитанций = Новый Массив;
				
				Для Каждого ТекКвитанция Из СписокКвитанций Цикл
					МассивКвитанций.Добавить(ТекКвитанция.Представление);
				КонецЦикла;
				
				МассивЧастейСообщения = Новый Массив;
				
				// 1 абзац.
				МассивЧастейСообщения.Добавить("Вы используете ");
				МассивЧастейСообщения.Добавить(?(КвитанцииВоМножЧисле, "формы платежных документов ", "форму платежного документа "));
				МассивЧастейСообщения.Добавить(СтрСоединить(МассивКвитанций, ", ") + " ");
				МассивЧастейСообщения.Добавить("в качестве " + ?(КвитанцииВоМножЧисле, "основных ", "основной "));
				МассивЧастейСообщения.Добавить(?(ОрганизацииВоМножЧисле, "для организаций ", "для организации "));
				МассивЧастейСообщения.Добавить(СтрСоединить(МассивОрганизаций, ", ") + "." + Символы.ПС);
				
				// 2 абзац.
				МассивЧастейСообщения.Добавить("Хотим предупредить Вас, что " + ?(КвитанцииВоМножЧисле, "данные формы скоро будут удалены", "данная форма скоро будет  удалена") + " из программы." + Символы.ПС);
				
				// 3 абзац.
				МассивЧастейСообщения.Добавить("Подробнее можно узнать на ");
				МассивЧастейСообщения.Добавить(Новый ФорматированнаяСтрока("нашем сайте", , , , ПолучитьГиперссылкуДляСообщенияПользователюОбУдаленииКвитанций()));
				
				ТекстСообщения = Новый ФорматированнаяСтрока(МассивЧастейСообщения);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		// Сообщение с предупреждением о том, что форма была удалена.
		// Предупреждение будет показано только тем, у кого до обновления была установлена удаляемая форма.
		Если УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекЗагрузить("ПоказатьСообщениеОбУдаленииФормыПлатежногоДокумента", "Показать", Ложь) Тогда
			
			МассивЧастейСообщения = Новый Массив;
			
			КвитанцииВоМножЧисле = Ложь;
			
			// 1 абзац.
			МассивЧастейСообщения.Добавить("Согласно уведомлению на нашем ");
			МассивЧастейСообщения.Добавить(Новый ФорматированнаяСтрока("сайте", , , , ПолучитьГиперссылкуДляСообщенияПользователюОбУдаленииКвитанций()));
			МассивЧастейСообщения.Добавить(" мы удалили из программы форму платежного документа «Плат. документ (приказ №924/пр)»."+ Символы.ПС);
			
			// 2 абзац.
			МассивЧастейСообщения.Добавить("Рекомендуем использовать квитанции, которые закреплены законодательно:" + Символы.ПС);
			МассивЧастейСообщения.Добавить(" - Плат. документ (пост. №679/30 для МО);" + Символы.ПС);
			МассивЧастейСообщения.Добавить(" - Плат. документ (приказ №43/пр).");
			
			ТекстСообщения = Новый ФорматированнаяСтрока(МассивЧастейСообщения);
			
			УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекУдалить("ПоказатьСообщениеОбУдаленииФормыПлатежногоДокумента", "Показать", Пользователи.АвторизованныйПользователь());
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции // ПолучитьТекстСообщенияОбУдаленииФормКвитанцийДляМеханизмаОбновлений()

// Формирует форматированный текст сообщения пользователю для вывода на форме отчета.
// см. Процедура УправлениеФормой() в модуле формы отчета.
//
Функция ПолучитьТекстСообщенияОбУдаленииФормКвитанцийДляВыводаНаФормуКвитанции() Экспорт
	
	МассивЧастейСообщения = Новый Массив;
	
	ШрифтТекста = Новый Шрифт(,,Истина);
	
	МассивЧастейСообщения.Добавить(Новый ФорматированнаяСтрока("Данная форма платежного документа скоро будет удалена из программы. Узнать больше можно на ", ШрифтТекста, WebЦвета.Красный));
	МассивЧастейСообщения.Добавить(Новый ФорматированнаяСтрока("нашем сайте", ШрифтТекста, , , ПолучитьГиперссылкуДляСообщенияПользователюОбУдаленииКвитанций()));
	
	ТекстСообщения = Новый ФорматированнаяСтрока(МассивЧастейСообщения);
	
	Возврат ТекстСообщения;
	
КонецФункции // ПолучитьТекстСообщенияОбУдаленииФормКвитанцийДляВыводаНаФормуКвитанции()

// Возвращает текст гиперссылки для перехода на страницу сайта с подробной информацией.
//
Функция ПолучитьГиперссылкуДляСообщенияПользователюОбУдаленииКвитанций()
	
	Возврат "https://vgkh.ru/~3s2lm";
	
КонецФункции // ПолучитьГиперссылкуДляСообщенияПользователюОбУдаленииКвитанций()

// Возвращает список форм платежных документов, которые будут удалены из программы.
//
Функция ПолучитьФормыКвитанцийКоторыеПодлежатУдалению()
	
	СписокКвитанций = Новый СписокЗначений;
	
	СписокКвитанций.Добавить(Перечисления.УПЖКХ_ВидыПлатежныхДокументов.СтандартныйКР, """" + Перечисления.УПЖКХ_ВидыПлатежныхДокументов.СтандартныйКР + """");
	
	Возврат СписокКвитанций;
	
КонецФункции // ПолучитьФормыКвитанцийКоторыеПодлежатУдалению()

// Возвращает массив наименований организаций, для которых в качестве основной формы платежных 
// документов установлены те, которые будут удалены из программы.
//
Функция ПолучитьСписокОрганизацийКоторыеИспользуютКвитанции(СписокКвитанций)
	
	СписокОрганизаций = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(УПЖКХ_НастройкиФормированияПлатежногоДокумента.Организация.Ссылка) КАК НаименованиеОрганизации
	|ИЗ
	|	РегистрСведений.УПЖКХ_НастройкиФормированияПлатежногоДокумента КАК УПЖКХ_НастройкиФормированияПлатежногоДокумента
	|ГДЕ
	|	УПЖКХ_НастройкиФормированияПлатежногоДокумента.ФормаКвитанции В(&СписокКвитанций)";
	
	Запрос.УстановитьПараметр("СписокКвитанций", СписокКвитанций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокОрганизаций.Добавить(Выборка.НаименованиеОрганизации);
	КонецЦикла;
	
	Возврат СписокОрганизаций;
	
КонецФункции // ПолучитьСписокОрганизацийКоторыеИспользуютКвитанции()

#КонецОбласти

#КонецЕсли

