
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Тип = Параметры.Тип;
	
	Если Параметры.Свойство("СписокСчетов") Тогда
		СписокСчетов = Параметры.СписокСчетов;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Хозрасчетный.Ссылка В (&СписокСчетов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Использование,
	|	Хозрасчетный.Ссылка КАК Счет,
	|	Хозрасчетный.ЗапретитьИспользоватьВПроводках,
	|	Хозрасчетный.Родитель
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.ВидыСубконто.ВидСубконто = &ВидСубконто
	|
	|УПОРЯДОЧИТЬ ПО
	|	Хозрасчетный.Порядок";
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
	
	ТаблицаСчетовРасчета.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикКомандФормы

&НаКлиенте
// Обработчик команды "ОК".
Процедура ОК(Команда)
	
	СписокСчетов.Очистить();
	
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		Если СтрокаТаблицы.Использование Тогда
			СписокСчетов.Добавить(СтрокаТаблицы.Счет);
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(СписокСчетов);
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "УстановитьВсе".
Процедура УстановитьВсе(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		СтрокаТаблицы.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "СнятьВсе".
Процедура СнятьВсе(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		СтрокаТаблицы.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличногоПоля_ТаблицаСчетовРасчетаИспользование

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ТаблицаСчетовРасчетаИспользование".
Процедура ТаблицаСчетовРасчетаИспользованиеПриИзменении(Элемент)
	
	ЗапретитьИспользоватьВПроводках = Элементы.ТаблицаСчетовРасчета.ТекущиеДанные.ЗапретитьИспользоватьВПроводках;
	Родитель                        = Элементы.ТаблицаСчетовРасчета.ТекущиеДанные.Родитель;
	Использование                   = Элементы.ТаблицаСчетовРасчета.ТекущиеДанные.Использование;
	
	Если ЗапретитьИспользоватьВПроводках Тогда
		ТаблицаСчетовРасчетаИспользованиеПриИзмененииНаСервере();
	ИначеЕсли ЗначениеЗаполнено(Родитель) И Использование Тогда
		ТаблицаСчетовРасчетаИспользованиеПриИзмененииНаСервере(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПриИзмененииНаСервере" поля "ТаблицаСчетовРасчетаИспользование".
Процедура ТаблицаСчетовРасчетаИспользованиеПриИзмененииНаСервере(ИзменятьРодителей = Ложь) 
	
	ТекущиеДанные = ТаблицаСчетовРасчета.НайтиПоИдентификатору(Элементы.ТаблицаСчетовРасчета.ТекущаяСтрока);
	
	Если ТекущиеДанные <> Неопределено Тогда
		Счет = ТекущиеДанные.Счет;
		
		Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
			Если СтрокаТаблицы.Счет = Счет Тогда
				Продолжить;
			КонецЕсли;
			Если БухгалтерскийУчетПовтИсп.СчетВИерархии(СтрокаТаблицы.Счет, Счет) Тогда
				СтрокаТаблицы.Использование = ТекущиеДанные.Использование;
			КонецЕсли;
			Если ИзменятьРодителей
				И БухгалтерскийУчетПовтИсп.СчетВИерархии(Счет, СтрокаТаблицы.Счет) Тогда
				СтрокаТаблицы.Использование = ТекущиеДанные.Использование;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
