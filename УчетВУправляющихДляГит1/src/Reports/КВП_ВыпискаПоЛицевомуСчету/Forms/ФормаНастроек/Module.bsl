

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТаблицаПорядокУслуг = ХранилищеОбщихНастроек.Загрузить("Отчет.КВП_ВыпискаПоЛицевомуСчету_ПорядокУслуг");
	
	Если ТипЗнч(ТаблицаПорядокУслуг) = Тип("ТаблицаЗначений") Тогда
		ПорядокУслуг.Загрузить(ТаблицаПорядокУслуг);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаКлиенте
// Обработчик команды "СохранитьИЗакрыть" формы.
//
Процедура КомандаСохранитьИЗакрыть(Команда)
	
	СохранитьПорядокУслуг();
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура сохраняет настройки порядка услуг для вывода в отчете.
//
Процедура СохранитьПорядокУслуг()
	
	ПорядковыйНомер = 0;
	
	Для каждого ТекСтрокаПорядкаУслуг из ПорядокУслуг Цикл
		
		ТекСтрокаПорядкаУслуг.Порядок = ПорядковыйНомер;
		
		ПорядковыйНомер = ПорядковыйНомер + 1;
		
	КонецЦикла;
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить("Отчет.КВП_ВыпискаПоЛицевомуСчету_ПорядокУслуг",,
																	ПорядокУслуг.Выгрузить());
	
КонецПроцедуры

#КонецОбласти