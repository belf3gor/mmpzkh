#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеС_ИО.Форма.Форма2017_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "Форму уведомления о контролируемых иностранных компаниях в соответствии с приказом ФНС России от 28.01.2016 N ММВ-7-14/41@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ПечатьСразу_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат СформироватьМакет_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Попытка
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка выгрузки будет реализована в одной из следующих версий.", УникальныйИдентификатор);
			Возврат Неопределено;
			
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2017_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "UT_SOOBUCHINO";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Попытка
		Титульная = Данные.ДанныеУведомления.Титульная;
		Если Не ЗначениеЗаполнено(Титульная.НалПер) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый период на титульной странице", "Титульная", "НалПер"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ИдФайлНалОтч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан идентификатор файла налоговой отчетности", "Титульная", "ИдФайлНалОтч"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ИНН) Или Не ЗначениеЗаполнено(Титульная.КПП) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан заполнены ИНН/КПП", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый орган", "Титульная", "КодНО"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
		КонецЕсли;
		
		Лист002 = Данные.ДанныеУведомления.Лист002;
		Для Инд = 1 По 5 Цикл 
			Если Лист002.Свойство("Стр20"+Инд) И Не ЗначениеЗаполнено(Лист002["Стр20"+Инд]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт "+Инд+" на странице 2", "Лист002", "Стр20"+Инд));
			КонецЕсли;
		КонецЦикла;
		Для Инд = 1 По 2 Цикл 
			Если Не ЗначениеЗаполнено(Лист002["Стр2020"+Инд]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт 2."+Инд+" на странице 2", "Лист002", "Стр2020"+Инд));
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
			Если ЗначениеЗаполнено(Лист.Значение.А01) Тогда
				ЛистТек = Лист.Значение;
				Если Не ЗначениеЗаполнено(ЛистТек.А0101) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт 1.1 на листе А", "ЛистА", "А0101", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.А0201) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2 на листе А", "ЛистА", "А0201", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.А0202) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2 на листе А", "ЛистА", "А0202", ЛистТек.УИД));
				КонецЕсли;
				Для Инд = 3 По 8 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["А0"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+Инд+" на листе А", "ЛистА", "А0"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
			Если ЗначениеЗаполнено(Лист.Значение.Б01) Тогда
				ЛистТек = Лист.Значение;
				Если Не ЗначениеЗаполнено(ЛистТек.Б0101) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт 1.1 на листе Б", "ЛистБ", "Б0101", ЛистТек.УИД));
				КонецЕсли;
				Для Инд = 2 По 7 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["Б0"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+Инд+" на листе Б", "ЛистБ", "Б0"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл 
			Если ЗначениеЗаполнено(Лист.Значение.В01) Тогда
				ЛистТек = Лист.Значение;
				Для Инд = 2 По 12 Цикл 
					Если Инд <> 4 И Инд <> 10 И ЛистТек.Свойство("В0"+Инд) И Не ЗначениеЗаполнено(ЛистТек["В0"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+Инд+" на листе В", "ЛистВ", "В0"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				Если ЛистТек.В08 = "2" И Не ЗначениеЗаполнено(ЛистТек.В0801) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт 8.1 на листе В", "ЛистВ", "В0801", ЛистТек.УИД));
				КонецЕсли;
				Если (ЛистТек.В08 = "3" Или ЛистТек.В08 = "2") И (Не ЗначениеЗаполнено(ЛистТек.В1001) Или Не ЗначениеЗаполнено(ЛистТек.В10)) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт 10 и/или 10.1 на листе В", "ЛистВ", "В10", ЛистТек.УИД));
				КонецЕсли;
				Для Инд = 1 По 4 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["В090"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 9."+Инд+" на листе В", "ЛистВ", "В090"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ Цикл 
			Если ЗначениеЗаполнено(Лист.Значение.Г01) Тогда
				ЛистТек = Лист.Значение;
				Если (Не ЗначениеЗаполнено(ЛистТек.Г020201) Или Не ЗначениеЗаполнено(ЛистТек.Г020202)) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2.2 Г", "ЛистГ", "Г020201", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.Г020301) Или Не ЗначениеЗаполнено(ЛистТек.Г020302)) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2.3 Г", "ЛистГ", "Г020301", ЛистТек.УИД));
				КонецЕсли;
				Для Инд = 1 По 5 Цикл 
					Если ЛистТек.Свойство("Г020"+Инд) И Не ЗначениеЗаполнено(ЛистТек["Г020"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2."+Инд+" на листе Г", "ЛистГ", "Г020"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистД Цикл 
			Если ЗначениеЗаполнено(Лист.Значение.Д0101)
				Или ЗначениеЗаполнено(Лист.Значение.Д0102) 
				Или ЗначениеЗаполнено(Лист.Значение.Д0103) 
				Или ЗначениеЗаполнено(Лист.Значение.Д0104) Тогда
				
				ЛистТек = Лист.Значение;
				Если ЗначениеЗаполнено(ЛистТек.Д0103) И (Не ЗначениеЗаполнено(ЛистТек.Д010502) Или Не ЗначениеЗаполнено(ЛистТек.Д010503)) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнены имя и фамилия на листе Д", "ЛистД", "Д010502", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.Д0103) И Не ЗначениеЗаполнено(ЛистТек.Д010501) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации на листе Д", "ЛистД", "Д010501", ЛистТек.УИД));
				КонецЕсли;
				Для Инд = 1 По 2 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["Д020"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2."+Инд+" на листе Д", "ЛистД", "Д020"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				
				Строки = Данные.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", ЛистТек.УИД));
				Инд = 0;
				Для Каждого Стр Из Строки Цикл 
					Инд = Инд + 1;
					Если ЗначениеЗаполнено(Стр.Д020301) Тогда 
						Если Не ЗначениеЗаполнено(Стр.Д020302) И Не ЗначениеЗаполнено(Стр.Д020303) Тогда 
							ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Необходимо указать долю прямого или косвенного участия на доп. строках листа Д", "ЛистД", "Д020302___"+Формат(Инд, "ЧГ="), ЛистТек.УИД));
						КонецЕсли;
					Иначе
						Если ЗначениеЗаполнено(Стр.Д020302) Или ЗначениеЗаполнено(Стр.Д020303) Тогда 
							ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Необходимо указать номер участника на доп. строках листа Д", "ЛистД", "Д020301___"+Формат(Инд, "ЧГ="), ЛистТек.УИД));
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистЕ Цикл 
			ЛистТек = Лист.Значение;
			Если СтраницаЗаполнена(ЛистТек) Тогда
				Для Инд = 1 По 3 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["Е010"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 1."+Инд+" на листе Е", "ЛистЕ", "Е010"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				Для Инд = 1 По 2 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["Е020"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2."+Инд+" на листе Е", "ЛистЕ", "Е020"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				Для Инд = 3 По 8 Цикл 
					Если Инд <> 5 И Не ЗначениеЗаполнено(ЛистТек["Е0"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+Инд+" на листе Е", "ЛистЕ", "Е0"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистЖ Цикл 
			ЛистТек = Лист.Значение;
			Если СтраницаЗаполнена(ЛистТек) Тогда
				Для Инд = 1 По 3 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["Ж010"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 1."+Инд+" на листе Ж", "ЛистЖ", "Ж010"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				Для Инд = 2 По 7 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["Ж0"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+Инд+" на листе Ж", "ЛистЖ", "Ж0"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистЗ Цикл 
			ЛистТек = Лист.Значение;
			Если СтраницаЗаполнена(ЛистТек) Тогда
				Для Инд = 1 По 3 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["З010"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 1."+Инд+" на листе З", "ЛистЗ", "З010"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				
				Для Инд = 2 По 8 Цикл 
					Если Инд <> 4 И Не ЗначениеЗаполнено(ЛистТек["З0"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+Инд+" на листе З", "ЛистЗ", "З0"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				
				Если ЛистТек["З08"] = "2" И Не ЗначениеЗаполнено(ЛистТек["З0801"]) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 8.1 на листе З", "ЛистЗ", "З0801", ЛистТек.УИД));
				КонецЕсли;
				
				Для Инд = 1 По 4 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["З090"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 9."+Инд+" на листе З", "ЛистЗ", "З090"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				
				Если (ЛистТек.З08 = "3" Или ЛистТек.З08 = "2") И (Не ЗначениеЗаполнено(ЛистТек.З1001) Или Не ЗначениеЗаполнено(ЛистТек.З10)) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт 10 и/или 10.1 на листе З", "ЛистЗ", "З10", ЛистТек.УИД));
				КонецЕсли;
				
				Для Инд = 11 По 12 Цикл 
					Если Не ЗначениеЗаполнено(ЛистТек["З"+Инд]) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+Инд+" на листе З", "ЛистЗ", "З"+Инд, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Возникла исключительная ситуация при проверке, обратитесь к администратору");
	КонецПопытки;
	
	Возврат ТаблицаОшибок;
КонецФункции

Процедура Проверить_Форма2017_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Иначе 
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	ОсновныеСведения.Вставить("НаимДок", Объект.ПодписантДокумент);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ЭлАдрес", Данные.ДанныеУведомления.Титульная.ЭлАдрес);
	ОсновныеСведения.Вставить("ТлфПодп", Данные.ДанныеУведомления.Титульная.Тлф);
	ОсновныеСведения.Вставить("ИННПодп", Данные.ДанныеУведомления.Титульная.ИННФЛ);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ЗаполнитьДанными_Форма2017_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2017_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Если ДанныеУведомления.ЕстьАГ Тогда
		Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
		Узел = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "СообУчИО");
		Узел = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел, "СведИСБезЮЛ");
		РегламентированнаяОтчетность.УдалитьУзел(Узел);
	Иначе
		Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
		Узел = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "СообУчИО");
		Узел = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел, "СвУчИО");
		РегламентированнаяОтчетность.УдалитьУзел(Узел);
	КонецЕсли;
КонецПроцедуры

Функция СтраницаЗаполнена(Данные)
	Если ТипЗнч(Данные) = Тип("Структура") Тогда 
		Для Каждого КЗ Из Данные Цикл 
			Если ТипЗнч(КЗ.Значение) = Тип("УникальныйИдентификатор") Тогда 
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(КЗ.Значение) Тогда 
				Возврат Истина
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Функция ПолучитьСтруктураЛистД0ДляВыгрузки()
	Возврат Новый Структура("УИД, УИДРодителя, Д0201, Д0202");
КонецФункции

Функция ПолучитьСтруктураЛистД00ДляВыгрузки()
	Возврат Новый Структура("УИД, УИДРодителя, Д020301, Д020302, Д020303");
КонецФункции

Функция ПолучитьСтруктураЛистДДляВыгрузки()
	Результат = Новый Структура;
	Результат.Вставить("УИД");
	Результат.Вставить("НомерИО");
	Результат.Вставить("НомерРО");
	Результат.Вставить("НомерФЛ");
	Результат.Вставить("Д010501");
	Результат.Вставить("Д0106");
	Результат.Вставить("Д010502");
	Результат.Вставить("Д010503");
	Результат.Вставить("Д010504");
	
	Возврат Результат;
КонецФункции

Процедура СформироватьПараметрыДляЛистовД(Параметры)
	ОТЧ = Новый ОписаниеТипов("Число");
	ВсеУчастникиЛистыД = Новый Соответствие;
	УИДыЛистД = Новый Соответствие;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистД Цикл
		ПарамСтр = Стр.Значение;
		СтрКлюч = "";
		Если ЗначениеЗаполнено(ПарамСтр.Д0101) Тогда
			СтрКлюч = "ИО-" + Формат(ПарамСтр.Д0101, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
		ИначеЕсли ЗначениеЗаполнено(ПарамСтр.Д0102) Тогда
			СтрКлюч = "РО-" + Формат(ПарамСтр.Д0102, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
		ИначеЕсли ЗначениеЗаполнено(ПарамСтр.Д0103) Тогда
			СтрКлюч = "ФЛ-" + Формат(ПарамСтр.Д0103, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрКлюч) Тогда 
			Если ВсеУчастникиЛистыД[СтрКлюч] = Неопределено Тогда 
				ВсеУчастникиЛистыД.Вставить(СтрКлюч, Новый СписокЗначений);
				УИДыЛистД.Вставить(СтрКлюч, ПарамСтр.УИД);
			КонецЕсли;
			ВсеУчастникиЛистыД[СтрКлюч].Добавить(ПарамСтр);
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистДДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистД0ДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистД00ДляВыгрузки", Новый СписокЗначений);
	
	Для Каждого КЗ Из ВсеУчастникиЛистыД Цикл
		Стр = ПолучитьСтруктураЛистДДляВыгрузки();
		ЗаполнитьЗначенияСвойств(Стр, КЗ.Значение[0].Значение);
		ЛКлюч = Лев(КЗ.Ключ, 3);
		Если ЛКлюч = "ИО-" Тогда
			Стр.НомерИО = КЗ.Ключ;
			Стр.Д010502 = "";
			Стр.Д010503 = "";
			Стр.Д010504 = "";
		ИначеЕсли ЛКлюч = "РО-" Тогда 
			Стр.НомерРО = КЗ.Ключ;
			Стр.Д010502 = "";
			Стр.Д010503 = "";
			Стр.Д010504 = "";
		ИначеЕсли ЛКлюч = "ФЛ-" Тогда 
			Стр.НомерФЛ = КЗ.Ключ;
			Стр.Д010501 = "";
		КонецЕсли;
		Параметры.ДанныеМногостраничныхРазделов.ЛистДДляВыгрузки.Добавить(Стр);
		
		УИДРодителя = КЗ.Значение[0].Значение.УИД;
		Для Каждого Элт Из КЗ.Значение Цикл
			Стр = ПолучитьСтруктураЛистД0ДляВыгрузки();
			ЗаполнитьЗначенияСвойств(Стр, Элт.Значение);
			Стр.УИДРодителя = УИДРодителя;
			Стр.УИД = Новый УникальныйИдентификатор;
			Стр.Д0201 = Формат(Стр.Д0201, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
			Параметры.ДанныеМногостраничныхРазделов.ЛистД0ДляВыгрузки.Добавить(Стр);
			
			МнгСтрСтроки = Параметры.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", Элт.Значение.УИД));
			Для Каждого СтрокаМнг Из МнгСтрСтроки Цикл
				СтрПодч = ПолучитьСтруктураЛистД00ДляВыгрузки();
				ЗаполнитьЗначенияСвойств(СтрПодч, СтрокаМнг);
				СтрПодч.УИДРодителя = Стр.УИД;
				Параметры.ДанныеМногостраничныхРазделов.ЛистД00ДляВыгрузки.Добавить(СтрПодч);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ДополнитьПараметры(Параметры)
	СформироватьПараметрыДляЛистовД(Параметры);
	
	ЕстьАГ = Ложь;
	Если Не ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.НомерКорректировки) Тогда 
		Параметры.ДанныеУведомления.Титульная.НомерКорректировки = "0";
	КонецЕсли;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистА Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("А01Ном", "ИО-" + Формат(ПарамСтр.А01, "ЧЦ=5; ЧВН=; ЧГ="));
			ЕстьАГ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("Б01Ном", "РО-" + Формат(ПарамСтр.Б01, "ЧЦ=5; ЧВН=; ЧГ="));
			ЕстьАГ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("В01Ном", "ФЛ-" + Формат(ПарамСтр.В01, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("В06Стр", Формат(ПарамСтр.В06, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("В0903Стр", Формат(ПарамСтр.В0903, "ДФ=dd.MM.yyyy; ДП=' '"));
			ЕстьАГ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("Г01Ном", "ИС-" + Формат(ПарамСтр.Г01, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("Г0204Стр", Формат(ПарамСтр.Г0204, "ДФ=dd.MM.yyyy; ДП=' '"));
			ЕстьАГ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Параметры.Вставить("ЕстьАГ", ЕстьАГ);
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПечатьСразу_Форма2017_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2017_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция СформироватьМакет_Форма2017_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Процедура ВывестиЧислоНаПечать(Число, ПрефиксПараметра, ОбластиМакета) Экспорт
	Инд = 1;
	ИмяПараметра = ПрефиксПараметра + "_1";
	Область = ОбластиМакета.Найти(ИмяПараметра);
	ЗнаковПослеЗапятой = 0;
	ЗнаковДоЗапятой = 1;
	
	Если Область = Неопределено 
		Или Область.Лево <> Область.Право Тогда 
		Возврат;
	КонецЕсли;
	
	Координата = Область.Лево;
	
	Пока Истина Цикл 
		Инд = Инд + 1;
		ИмяПараметра = ПрефиксПараметра + "_" + Инд;
		Область = ОбластиМакета.Найти(ИмяПараметра);
		Если Область = Неопределено 
			Или Область.Лево <> Область.Право Тогда 
			Прервать;
		КонецЕсли;
		
		ЗнаковДоЗапятой = ЗнаковДоЗапятой + 1;
		Если ЗнаковПослеЗапятой > 0 
			Или Область.Лево > Координата + 1 Тогда 
			
			ЗнаковПослеЗапятой = ЗнаковПослеЗапятой + 1;
			ЗнаковДоЗапятой = ЗнаковДоЗапятой - 1;
		КонецЕсли;
		
		Координата = Координата + 1;
	КонецЦикла;
	
	Если Число = 0 Тогда 
		Ч = "-------------------------------------------------";
	Иначе
		Ч = Лев(Формат(Цел(Число), "ЧН=0; ЧГ=") + "-------------------------------------------------", ЗнаковДоЗапятой);
		Ч2 = Прав("00000000000000000000000000000000000000000000" + Формат(   (Число - Цел(Число)) * Pow(10, ЗнаковПослеЗапятой), "ЧГ="), ЗнаковПослеЗапятой);
		Пока Прав(Ч2, 1) = "0" Цикл 
			Ч2 = Лев(Ч2, СтрДлина(Ч2) - 1);
		КонецЦикла;
		Ч = Ч + Ч2 + "-------------------------------------------------";
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Ч, ПрефиксПараметра, ОбластиМакета);
КонецПроцедуры

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеС_ИО.ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат;
	КонецПопытки;
	
	НомСтр = НомСтр + 1;
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли КЗ.Значение = Неопределено Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, МакетПФ.Области, "-");
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", МакетПФ.Области, "-");
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ИННКПП)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
				Если СтрПарам.ИДНаименования = "Титульная" Тогда
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
					ПечатнаяФорма.Области.ЭлАдрес.Текст = СтруктураДанныхСтраницы.ЭлАдрес;
					Если Не ЗначениеЗаполнено(СтруктураДанныхСтраницы.НомерКорректировки) Тогда
						УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0--", "НомерКорректировки", ПечатнаяФорма.Области);
					КонецЕсли;
				КонецЕсли;
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда 
					Если СтрПарам.ИДНаименования = "ЛистД" Тогда
						ДопСтроки = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", МнгСтр.Значение.УИД));
						
						Для Инд = 0 По ДопСтроки.ВГраница() Цикл 
							Если Инд%12 = 0 Тогда 
								НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
								Для ИтерУч = 1 По 4 Цикл 
									УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение["Д010"+ИтерУч], "ЧЦ=5; ЧН=------; ЧВН=; ЧГ="), "Д010"+ИтерУч, ПечатнаяФорма.Области);
								КонецЦикла;
								
								Если ЗначениеЗаполнено(МнгСтр.Значение.Д0103) Тогда
									СтрНаим = СокрЛП(МнгСтр.Значение.Д010502 + " " + МнгСтр.Значение.Д010503 + " " + МнгСтр.Значение.Д010504);
									УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СтрНаим, "Д0105", ПечатнаяФорма.Области);
								Иначе
									УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(МнгСтр.Значение.Д010501, "Д0105", ПечатнаяФорма.Области);
								КонецЕсли;
							КонецЕсли;
							
							СтрокаНаЛисте = "_" + (Инд%12 + 1);
							ТекМнгСтрока = ДопСтроки[Инд];
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ТекМнгСтрока.Д020301, "Д020301"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
							ВывестиЧислоНаПечать(ТекМнгСтрока.Д020302, "Д020302"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							ВывестиЧислоНаПечать(ТекМнгСтрока.Д020303, "Д020303"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							
							Если Инд%12 = 11 Или Инд = ДопСтроки.ВГраница() Тогда
								Если Инд = ДопСтроки.ВГраница() И Инд%12 <> 11 Тогда 
									Пока Инд%12 <> 11 Цикл
										Инд = Инд + 1;
										СтрокаНаЛисте = "_" + (Инд%12 + 1);
										УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("-------------", "Д020301"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
										ВывестиЧислоНаПечать(0, "Д020302"+СтрокаНаЛисте, ПечатнаяФорма.Области);
										ВывестиЧислоНаПечать(0, "Д020303"+СтрокаНаЛисте, ПечатнаяФорма.Области);
									КонецЦикла;
								КонецЕсли;
								УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
								ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
							КонецЕсли;
						КонецЦикла;
					Иначе 
						НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
						Если СтрПарам.ИДНаименования = "ЛистА" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.А01, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "А01", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистБ" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.Б01, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "Б01", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистВ" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.В01, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "В01", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистГ" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.Г01, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "Г01", ПечатнаяФорма.Области);
						КонецЕсли;
						УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 0;
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, "Печать_Форма2017_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
	ПечатнаяФорма.Области.ЭлАдрес.Текст = СтруктураПараметров.ДанныеУведомления["Титульная"].ЭлАдрес;
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления["Титульная"].НомерКорректировки) Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0--", "НомерКорректировки", ПечатнаяФорма.Области);
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, "Печать_Форма2017_1_Лист002", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Инд = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		Инд = Инд + 1;
		Если Инд > 2 Тогда 
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки[1].Строки Цикл
		НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ИННКПП);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
