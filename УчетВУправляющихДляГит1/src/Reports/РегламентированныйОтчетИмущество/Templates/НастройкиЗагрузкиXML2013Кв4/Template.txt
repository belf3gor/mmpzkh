// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Раздел1"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		Если СтрокаДерева.Код = "СумНалПУ" Тогда
			СтрокаДерева.Многострочность = Истина;
		ИначеЕсли СтрокаДерева.Код = "ОКТМО" Тогда
			СтрокаДерева.Ключ = "П000010001003";
		ИначеЕсли СтрокаДерева.Код = "КБК" Тогда
			СтрокаДерева.Ключ = "П000010002003";
		ИначеЕсли СтрокаДерева.Код = "НалПУ" Тогда
			СтрокаДерева.Ключ = "П000010003003";
		КонецЕсли;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П000020027003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Тип = "Э";
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумНалПУ/РасОбДеятРФ");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.Обязательность = "НП"; // не выполнять автозагрузку узла
		
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100020016003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000020016003_КодЛьготы";
		КонецЦикла;
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100020018003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000020016003_Основание";
		КонецЦикла;
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100020020003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000020020003_КодЛьготы";
		КонецЦикла;
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100020024003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000020024003_КодЛьготы";
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумНалПУ/РасОБНедИО");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.Обязательность = "НП"; // не выполнять автозагрузку узла
		
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100030004003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000030004003_КодЛьготы";
		КонецЦикла;
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100030005003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000030004003_Основание";
		КонецЦикла;
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100030007003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000030007003_КодЛьготы";
		КонецЦикла;
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100030009003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000030007003_Основание";
		КонецЦикла;
		НайденныеСтроки = НайденныйУзел.Строки.НайтиСтроки(Новый Структура("Ключ", "П100030012003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Ключ = "П000030012003_КодЛьготы";
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Раздел1 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел1", Раздел1);
	Если Раздел1 <> Неопределено Тогда
		
		НомСтроки = 1;
		Суффикс = "_1";
		
		Пока Раздел1.Свойство("П000010001003" + Суффикс) Цикл
			
			ЗначениеПоказателя = 0;
			Если Раздел1.Свойство("П000010003003" + Суффикс, ЗначениеПоказателя) Тогда
				ЗначениеПоказателя = 0 + ЗначениеПоказателя;
				Если ЗначениеПоказателя >= 0 Тогда
					Раздел1.Вставить("П000010003003" + Суффикс, ЗначениеПоказателя);
					Раздел1.Вставить("П000010004003" + Суффикс, 0);
				Иначе
					Раздел1.Вставить("П000010003003" + Суффикс, 0);
					Раздел1.Вставить("П000010004003" + Суффикс, -ЗначениеПоказателя);
				КонецЕсли;
			КонецЕсли;
			
			НомСтроки = НомСтроки + 1;
			Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтраницыРаздела2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумНалПУ/РасОбДеятРФ/РасОб"); // Раздел 2 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыРаздела2.Количество() Цикл
		ТекущаяСтраница = СтраницыРаздела2[НомСтраницы - 1];
		
		УзелОКТМО = УзлыПоXPath(ТекущаяСтраница, "../../@ОКТМО")[0];
		УзелДопПоказатель = ТекущаяСтраница.Строки.Вставить(0);
		ЗаполнитьЗначенияСвойств(УзелДопПоказатель, УзелОКТМО, , "Родитель, Строки"); // важны только раздел, ключ и значение
		УзелДопПоказатель.Раздел = "Раздел2";
		УзелДопПоказатель.Ключ = "П000020001001";
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(ТекущаяСтраница, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Раздел2 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел2", Раздел2);
	Если Раздел2 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел2 Цикл
			ДанныеРаздела = СтраницаРаздела.Данные;
			ЗначениеПоказателя = "";
			Если ДанныеРаздела.Свойство("П000020016003_Основание", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020018003_Числ", ЧислоИзСтроки(ЧастиЗначения[0]));
				ДанныеРаздела.Вставить("П000020018003_Знам", ЧислоИзСтроки(?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], "")));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000020016003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020016003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000020016003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000020020003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020020003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000020020003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000020024003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020024003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000020024003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтраницыРаздела3 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумНалПУ/РасОБНедИО/РасОб"); // Раздел 3 (все страницы)
	
	Для НомСтраницы = 1 По СтраницыРаздела3.Количество() Цикл
		ТекущаяСтраница = СтраницыРаздела3[НомСтраницы - 1];
		
		УзелОКТМО = УзлыПоXPath(ТекущаяСтраница, "../../@ОКТМО")[0];
		УзелДопПоказатель = ТекущаяСтраница.Строки.Вставить(0);
		ЗаполнитьЗначенияСвойств(УзелДопПоказатель, УзелОКТМО, , "Родитель, Строки"); // важны только раздел, ключ и значение
		УзелДопПоказатель.Раздел = "Раздел3";
		УзелДопПоказатель.Ключ = "П000030001001";
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(ТекущаяСтраница, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Раздел3 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел3", Раздел3);
	Если Раздел3 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел3 Цикл
			ДанныеРаздела = СтраницаРаздела.Данные;
			ЗначениеПоказателя = "";
			Если ДанныеРаздела.Свойство("П000030004003_Основание", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000030005003_Числ", ЧислоИзСтроки(ЧастиЗначения[0]));
				ДанныеРаздела.Вставить("П000030005003_Знам", ЧислоИзСтроки(?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], "")));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000030007003_Основание", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000030009003_Числ", ЧислоИзСтроки(ЧастиЗначения[0]));
				ДанныеРаздела.Вставить("П000030009003_Знам", ЧислоИзСтроки(?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], "")));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000030004003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000030004003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000030004003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000030007003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000030007003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000030007003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000030012003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000030012003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000030012003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти