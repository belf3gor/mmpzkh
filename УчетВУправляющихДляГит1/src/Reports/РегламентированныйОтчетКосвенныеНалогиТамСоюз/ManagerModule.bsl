#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2017Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 27.09.2017 № СА-7-3/765@.";
	НоваяФорма.РедакцияФормы      = "от 27.09.2017 № СА-7-3/765@.";
	НоваяФорма.ДатаНачалоДействия = '2017-12-01';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2010Кв3";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу Минфина РФ от 07.07.2010 № 69н.";
	НоваяФорма.РедакцияФормы      = "от 07.07.2010 № 69н.";
	НоваяФорма.ДатаНачалоДействия = '20100701';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета) Экспорт
	
	ТаблицаДанныхРеглОтчета = ИнтерфейсыВзаимодействияБРО.НовыйТаблицаДанныхРеглОтчета();
	
	ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
	
	Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
		
		Возврат ТаблицаДанныхРеглОтчета;
		
	КонецЕсли;
	
	Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2017Кв4" Тогда
		
		Если ДанныеРеглОтчета.Свойство("ДанныеМногоуровневыхРазделов") Тогда
			
			ДанныеРаздела1 = ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов["Раздел1"].Строки[0].Данные;
			
			Сумма = ТаблицаДанныхРеглОтчета.Добавить();
			Сумма.ВидНалога = Перечисления.ВидыНалогов.НДС_ВвозимыеТовары;
			Сумма.Период    = ЭкземплярРеглОтчета.ДатаОкончания;
			Сумма.ОКАТО     = ДанныеРаздела1["П000010001003"];
			Сумма.КБК       = ДанныеРаздела1["П000010002003"];
			Сумма.Сумма     = ДанныеРаздела1["П000010003003"];
			
		Иначе // отчет сохранен в 2.0
			
			Возврат ТаблицаДанныхРеглОтчета;
			
		КонецЕсли;
		
	ИначеЕсли ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2010Кв3" Тогда
		
		Если ДанныеРеглОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел1") Тогда
			
			Раздел1 = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
			
			Период         = ЭкземплярРеглОтчета.ДатаОкончания;
			КодСтрокиОКТМО = "П000100001001";
			КодСтрокиКБК   = "П000100002001";
			КодСтрокиСумма = "П000100003001";
			
			Сумма = ТаблицаДанныхРеглОтчета.Добавить();
			Сумма.ВидНалога = Перечисления.ВидыНалогов.НДС_ВвозимыеТовары;
			Сумма.Период    = Период;
			Сумма.ОКАТО     = Раздел1[КодСтрокиОКТМО];
			Сумма.КБК       = Раздел1[КодСтрокиКБК];
						
			Если Раздел1.Свойство(КодСтрокиСумма) Тогда
				Сумма.Сумма = Раздел1[КодСтрокиСумма];
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаДанныхРеглОтчета;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма20100701 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151088", '20100707', "69н", "ФормаОтчета2010Кв3");
	ОпределитьФорматВДеревеФормИФорматов(Форма20100701, "5.01");
	ОпределитьФорматВДеревеФормИФорматов(Форма20100701, "5.02");
	
	Форма2017Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151088", '20170927', "СА-7-3/765@", "ФормаОтчета2017Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2017Кв4, "5.03");
	
	Возврат ФормыИФорматы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "", ИмяОбъекта = "",
			ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

#КонецОбласти

#КонецЕсли