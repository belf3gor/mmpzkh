////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура заполняет неизменяемые значения в табличных частях настройки соответствия услуг.
Процедура ЗаполнитьНастройкиСоответствияУслуг()
	
	СтруктураПараметров = УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекЗагрузить("СтатистикаФорма22Жилище_НастройкиОтчета");
	
	ТаблицаСоответствияУслуг.Очистить();
	ТаблицаСоответствияУслугЖилищные.Очистить();
	
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		
		Если СтруктураПараметров.Свойство("ТаблицаСоответствияУслуг") Тогда
			Для Каждого ТекСтрока Из СтруктураПараметров.ТаблицаСоответствияУслуг Цикл
				ДобавитьСоответствияУслугВТаблицуНастроек(ТекСтрока.ВидУслуги, ТекСтрока.ВидУслугиПредставление, ТекСтрока.СписокУслуг, ТаблицаСоответствияУслуг);
			КонецЦикла;
		КонецЕсли;
		
		Если СтруктураПараметров.Свойство("ТаблицаСоответствияУслугЖилищные") Тогда
			Для Каждого ТекСтрокаЖилище Из СтруктураПараметров.ТаблицаСоответствияУслугЖилищные Цикл
				ДобавитьСоответствияУслугВТаблицуНастроек(ТекСтрокаЖилище.ВидУслуги, ТекСтрокаЖилище.ВидУслугиПредставление, ТекСтрокаЖилище.СписокУслуг, ТаблицаСоответствияУслугЖилищные);
			КонецЦикла;
		КонецЕсли;
		
		СтруктураПараметров.Свойство("мВидОбслуживаемойПлощадиПомещений", ВидПлощадиОбслуживаемогоЖилищногоФонда);
		
	Иначе
		
		ДобавитьСоответствияУслугВТаблицуНастроек("ХолоднаяВода",   "Холодная вода",                , ТаблицаСоответствияУслуг);
		ДобавитьСоответствияУслугВТаблицуНастроек("ГорячаяВода",    "Горячая вода",                 , ТаблицаСоответствияУслуг);
		ДобавитьСоответствияУслугВТаблицуНастроек("Водоотведение",  "Сточные воды (водоотведение)", , ТаблицаСоответствияУслуг);
		ДобавитьСоответствияУслугВТаблицуНастроек("Отопление",      "Отопление",                    , ТаблицаСоответствияУслуг);
		ДобавитьСоответствияУслугВТаблицуНастроек("Электроэнергия", "Электроэнергия",               , ТаблицаСоответствияУслуг);
		ДобавитьСоответствияУслугВТаблицуНастроек("СетевойГаз",     "Сетевой газ",                  , ТаблицаСоответствияУслуг);
		ДобавитьСоответствияУслугВТаблицуНастроек("СжиженныйГаз",   "Сжиженный газ",                , ТаблицаСоответствияУслуг);
		
		ДобавитьСоответствияУслугВТаблицуНастроек("Наем",              "Наем",                  , ТаблицаСоответствияУслугЖилищные);
		ДобавитьСоответствияУслугВТаблицуНастроек("СодержаниеИРемонт", "Содержание и ремонт",   , ТаблицаСоответствияУслугЖилищные);
		ДобавитьСоответствияУслугВТаблицуНастроек("ВывозТО",           "Вывоз твердых отходов", , ТаблицаСоответствияУслугЖилищные);
		ДобавитьСоответствияУслугВТаблицуНастроек("КапитальныйРемонт", "Капитальный ремонт",    , ТаблицаСоответствияУслугЖилищные);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройкиСоответствияУслуг()

&НаСервере
// Заполняет таблицу ТаблицаСоответствияУслуг нужными услугами.
//
Процедура ДобавитьСоответствияУслугВТаблицуНастроек(ВидУслуги, ПредставлениеВидаУслуги, СписокУслуг = "", ЗаполняемаяТаблица)
	
	Если ВидУслуги = "ЗахоронениеТБО" ИЛИ ВидУслуги = "ПрочиеУслуги" Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = ЗаполняемаяТаблица.Добавить();
	
	НоваяСтрока.ВидУслуги              = ВидУслуги;
	НоваяСтрока.ВидУслугиПредставление = ПредставлениеВидаУслуги;
	НоваяСтрока.СписокУслуг            = СписокУслуг;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.КВП_Услуги"));
	
	НоваяСтрока.СписокУслуг.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
	Если НоваяСтрока.СписокУслуг.Количество() > 0 Тогда
		НоваяСтрока.СписокУслугЗаполнен = Истина;
	Иначе
		НоваяСтрока.СписокУслугЗаполнен = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Процедура сохраняет настройки отчета в хранилище.
Процедура СохранитьНастройки()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТаблицаСоответствияУслуг",               ТаблицаСоответствияУслуг.Выгрузить());
	СтруктураПараметров.Вставить("ТаблицаСоответствияУслугЖилищные",       ТаблицаСоответствияУслугЖилищные.Выгрузить());
	СтруктураПараметров.Вставить("мВидОбслуживаемойПлощадиПомещений",      ВидПлощадиОбслуживаемогоЖилищногоФонда);
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить("СтатистикаФорма22Жилище_НастройкиОтчета",,
																	СтруктураПараметров);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНастройкиСоответствияУслуг();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередЗакрытием" формы.
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		Ответ = Вопрос("Настройки были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			СохранитьНастройки();
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			
			Отказ = Истина;
			
		КонецЕсли;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
// Обработчик команды "Сохранить".
Процедура Сохранить(Команда)
	
	СохранитьНастройки();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередНачаломДобавления" ТЧ "ТаблицаСоответствияУслуг"
//
Процедура ТаблицаСоответствияУслугПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередУдалением" ТЧ "ТаблицаСоответствияУслуг".
//
Процедура ТаблицаСоответствияУслугПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередНачаломДобавления" ТЧ "ТаблицаСоответствияУслугЖилищные".
//
Процедура ТаблицаСоответствияУслугЖилищныеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередУдалением" ТЧ "ТаблицаСоответствияУслугЖилищные".
//
Процедура ТаблицаСоответствияУслугЖилищныеПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события при изменении поля "СписокУслуг" ТЧ "ТаблицаСоответствияУслуг".
//
Процедура ТаблицаСоответствияУслугСписокУслугПриИзменении(Элемент)
	
	Если Элементы.ТаблицаСоответствияУслуг.ТекущиеДанные.СписокУслуг.Количество() = 0 Тогда
		Элементы.ТаблицаСоответствияУслуг.ТекущиеДанные.СписокУслугЗаполнен = Ложь;
	Иначе
		Элементы.ТаблицаСоответствияУслуг.ТекущиеДанные.СписокУслугЗаполнен = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события при изменении поля "СписокУслуг" ТЧ "ТаблицаСоответствияУслугЖилищные".
//
Процедура ТаблицаСоответствияУслугЖилищныеСписокУслугПриИзменении(Элемент)
	
	Если Элементы.ТаблицаСоответствияУслугЖилищные.ТекущиеДанные.СписокУслуг.Количество() = 0 Тогда
		Элементы.ТаблицаСоответствияУслугЖилищные.ТекущиеДанные.СписокУслугЗаполнен = Ложь;
	Иначе
		Элементы.ТаблицаСоответствияУслугЖилищные.ТекущиеДанные.СписокУслугЗаполнен = Истина;
	КонецЕсли;

КонецПроцедуры
