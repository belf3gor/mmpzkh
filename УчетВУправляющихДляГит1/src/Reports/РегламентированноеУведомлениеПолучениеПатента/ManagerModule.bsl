#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Данные - структура
//			Организация
//			РегистрацияВИФНС
//			ЛистыА - массив структур
//			ЛистыБ - массив структур
//			ЛистыВ - массив структур
//			Стр01 - структура
//			Стр02 - структура
Функция СформироватьНовоеУведомление(РедакцияФормы, Данные) Экспорт
	Если РедакцияФормы = "Форма2017_1" Тогда
		Возврат СформироватьНовоеУведомление_2017_1(Данные);
	КонецЕсли;
КонецФункции

// Возвращает актуальную форму отчета
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьФормуПоУмолчанию() Экспорт
	Возврат "Отчет.РегламентированноеУведомлениеПолучениеПатента.Форма.Форма2017_1";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеПолучениеПатента.Форма.ФормаОтчета";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2014_1";
	Стр.ОписаниеФормы = "В редакции от 17.12.2014 письмо ФНС России N ГД-4-3/26095@";
	Стр.ДатаНачала = Дата("20120101");
	Стр.ДатаКонца = Дата("20150630");
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2015_1";
	Стр.ОписаниеФормы = "В редакции от 01.07.2015 письмо ФНС России N ГД-4-3/11496@";
	Стр.ДатаНачала = Дата("20150701");
	Стр.ДатаКонца = Дата("20151231");
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2016_1";
	Стр.ОписаниеФормы = "В редакции от 22.12.2015 письмо ФНС России N ММВ-7-3/591@";
	Стр.ДатаНачала = Дата("20160101");
	Стр.ДатаКонца = Дата("20170918");
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "В редакции от 11.07.2017 письмо ФНС России N ММВ-7-3/544@";
	Стр.ДатаНачала = Дата("20170919");
	Стр.ДатаКонца = Дата("20500101");
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2015_1" Тогда
		Возврат ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2016_1" Тогда
		Возврат ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2017_1" Тогда
		Возврат ПечатьСразу_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2015_1" Тогда
		Возврат СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2016_1" Тогда
		Возврат СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2017_1" Тогда
		Возврат СформироватьМакет_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2015_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2016_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2016_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2016_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2016_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2014_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	ЕстьНовыеСтрокиЛистТС = СтруктураПараметров.Свойство("Листы3_0");
	
	Область1 = МакетУведомления.ПолучитьОбласть("Страница1");
	ПараметрыМакета = Область1.Параметры;
	Строка = СтруктураПараметров.Титульный[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ИМЯ_ИП, "Имя_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОГРНИП, "ОГРН_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс, "Индекс_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона, "КодСубъекта_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом, "Дом_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус, "Корпус_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира, "Квартира_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район, "Район_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город, "Город_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт, "НаселенныйПункт_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица, "Улица_", ПараметрыМакета, 34);
	ПараметрыМакета.ПризнакПредставителя = Строка.ПРИЗНАК_НП_ПОДВАЛ;
	ВсегоСтраниц = 2+СтруктураПараметров.Листы3.Количество()+СтруктураПараметров.Листы4.Количество();
	
	Попытка
		Если ЗначениеЗаполнено(Строка.ДАТА_НАЧАЛО) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_НАЧАЛО, "ДатаПатента_", ПараметрыМакета);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДАТА_ПОДПИСИ) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
		КонецЕсли;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ВсегоСтраниц, "НаСтраницах_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_МЕСЯЦЕВ, "СРОК_", ПараметрыМакета, 2);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось заполнить некоторые параметры печатной формы");
	КонецПопытки;
	
	ПечатнаяФорма.Вывести(Область1);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	Область2 = МакетУведомления.ПолучитьОбласть("Страница2");
	ПараметрыМакета = Область2.Параметры;
	Строка = СтруктураПараметров.Страница2[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_2, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОписаниеДеятельности, "Описание_", ПараметрыМакета, 560);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодПредпринимательскойДеятельности, "КодДеятельности_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.СредняяЧисленностьРаботников, "КоличествоРаботников_", ПараметрыМакета, 2, Истина);
	ПараметрыМакета.НаличиеРаботников = Строка.НаличиеРаботников;
	ПечатнаяФорма.Вывести(Область2);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерЛиста = 3;
	Если ЕстьНовыеСтрокиЛистТС Тогда 
		Для Каждого Строка Из СтруктураПараметров.Листы3_0 Цикл 
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_1");
			ПечатнаяФорма.Вывести(Область5);
			
			Для Инд = 1 По 3 Цикл 
				Область5 = МакетУведомления.ПолучитьОбласть("Страница5_2");
				ПараметрыМакета = Область5.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Индекс"+(Инд+1)], "Индекс_", ПараметрыМакета, 6);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КодРегиона"+(Инд+1)], "КодСубъекта_", ПараметрыМакета, 2);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Дом"+(Инд+1)], "Дом_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Корпус"+(Инд+1)], "Корпус_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Квартира"+(Инд+1)], "Квартира_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Район"+(Инд+1)], "Район_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Город"+(Инд+1)], "Город_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["НаселенныйПункт"+(Инд+1)], "НаселенныйПункт_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Улица"+(Инд+1)], "Улица_", ПараметрыМакета, 34);
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+(Инд+1)], "КодОКТМО_", ПараметрыМакета, 11);
				ПечатнаяФорма.Вывести(Область5);
			КонецЦикла;
			
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_3");
			ПечатнаяФорма.Вывести(Область5);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Строка Из СтруктураПараметров.Листы3 Цикл 
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_1");
		ПараметрыМакета = Область3.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_3, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерЛиста, "Страница_", ПараметрыМакета, 3);
		ПечатнаяФорма.Вывести(Область3);
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
		ПараметрыМакета = Область3.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КОД_ТС1"], "Код_", ПараметрыМакета, 2);
		ПечатнаяФорма.Вывести(Область3);
		
		Инд = 0;
		Попытка
			Для Инд = 1 По 3 Цикл
				Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_2");
				ПараметрыМакета = Область3.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ВИН_ТС"+Инд], "ВИН_", ПараметрыМакета, 25);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["МАРКА_ТС"+Инд], "МАРКА_", ПараметрыМакета, 30);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ЗНАК_ТС"+Инд], "ЗНАК_", ПараметрыМакета, 30);
				Если ЕстьНовыеСтрокиЛистТС Тогда 
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка["ТОННАЖ_ТС"+Инд], "Груз_", ПараметрыМакета, 4, Ложь);
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка["МЕСТ_ТС"+Инд], "Мест_", ПараметрыМакета, 4, Ложь);
				КонецЕсли;
				ПечатнаяФорма.Вывести(Область3);
			КонецЦикла;
		Исключение
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
			Пока Инд <= 3 Цикл
				ПечатнаяФорма.Вывести(Область3);
				Инд = Инд + 1;
			КонецЦикла;
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
			ПечатнаяФорма.Вывести(Область3);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомерЛиста = НомерЛиста + 1;
			Прервать;
		КонецПопытки;
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
		ПечатнаяФорма.Вывести(Область3);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы4 Цикл 
		Область4 = МакетУведомления.ПолучитьОбласть("Страница4");
		ПараметрыМакета = Область4.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_4, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерЛиста, "Страница_", ПараметрыМакета, 3);
		
		Попытка
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_ОБЪЕКТА, "Код_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ПРИЗНАК_ОБЪЕКТА, "Признак_", ПараметрыМакета, 1);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка.ПЛОЩАДЬ_ОБЪЕКТА, "Площадь_", ПараметрыМакета, 8);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс1, "Индекс_", ПараметрыМакета, 6);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона1, "КодСубъекта_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом1, "Дом_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус1, "Корпус_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира1, "Квартира_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район1, "Район_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город1, "Город_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт1, "НаселенныйПункт_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица1, "Улица_", ПараметрыМакета, 34);
			Если ЕстьНовыеСтрокиЛистТС Тогда
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОКТМО_ОБЪЕКТА, "КодОКТМО_", ПараметрыМакета, 11);
			КонецЕсли;
		Исключение
			ПечатнаяФорма.Вывести(Область4);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			Прервать;
		КонецПопытки;
		
		ПечатнаяФорма.Вывести(Область4);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект)
	
	ПечатнаяФорма = СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2014_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2015_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.Титульный[0];
	
	Область1 = МакетУведомления.ПолучитьОбласть("Страница1");
	ПараметрыМакета = Область1.Параметры;
	Строка = СтруктураПараметров.Титульный[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ИМЯ_ИП, "Имя_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОГРНИП, "ОГРН_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс, "Индекс_3_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона, "КодСубъекта_3_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом, "Дом_3_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус, "Корпус_3_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира, "Квартира_3_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район, "Район_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город, "Город_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт, "НаселенныйПункт_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица, "Улица_3_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Строка.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧН=; ЧВН="), "СРОК_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_НАЧАЛО, "ДатаПатента_", ПараметрыМакета);
	ВсегоЛистов = 2 + СтруктураПараметров.Листы3_0.Количество() + СтруктураПараметров.Листы3.Количество() + СтруктураПараметров.Листы4.Количество();
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ВсегоЛистов, "НаСтраницах_", ПараметрыМакета, 3, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
	ПараметрыМакета.ПризнакПредставителя = Строка.ПРИЗНАК_НП_ПОДВАЛ;
	ПечатнаяФорма.Вывести(Область1);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	Область2 = МакетУведомления.ПолучитьОбласть("Страница2");
	ПараметрыМакета = Область2.Параметры;
	Строка = СтруктураПараметров.Страница2[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОписаниеДеятельности, "Описание_", ПараметрыМакета, 560);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодПредпринимательскойДеятельности, "КодДеятельности_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.СредняяЧисленностьРаботников, "КоличествоРаботников_", ПараметрыМакета, 2, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.НАЛОГОВАЯ_СТАВКА, "СтавкаПроцент", ПараметрыМакета, 1, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.СсылкаНаЗакон, "НормаЗакона_", ПараметрыМакета, 80);
	ПараметрыМакета.НаличиеРаботников = Строка.НаличиеРаботников;
	ПечатнаяФорма.Вывести(Область2);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерЛиста = 3;
	Для Каждого Строка Из СтруктураПараметров.Листы3_0 Цикл 
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3");
		ПараметрыМакета = Область3.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧН=; ЧВН="), "Страница_", ПараметрыМакета, 3);
		
		Для Инд = 1 По 3 Цикл 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Индекс"+(Инд+1)], "Индекс_"+Инд+"_", ПараметрыМакета, 6);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КодРегиона"+(Инд+1)], "КодСубъекта_"+Инд+"_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Дом"+(Инд+1)], "Дом_"+Инд+"_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Корпус"+(Инд+1)], "Корпус_"+Инд+"_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Квартира"+(Инд+1)], "Квартира_"+Инд+"_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Район"+(Инд+1)], "Район_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Город"+(Инд+1)], "Город_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["НаселенныйПункт"+(Инд+1)], "НаселенныйПункт_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Улица"+(Инд+1)], "Улица_"+Инд+"_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+(Инд+1)], "КодОКТМО_"+Инд+"_", ПараметрыМакета, 11, "-");
		КонецЦикла;
		
		НомерЛиста = НомерЛиста + 1;
		ПечатнаяФорма.Вывести(Область3);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы3 Цикл 
		Область4 = МакетУведомления.ПолучитьОбласть("Страница4");
		ПараметрыМакета = Область4.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧН=; ЧВН="), "Страница_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КОД_ТС1"], "Код_1_", ПараметрыМакета, 2);
		Для Инд = 1 По 3 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ВИН_ТС"+Инд], "ВИН_"+Инд+"_", ПараметрыМакета, 25);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["МАРКА_ТС"+Инд], "МАРКА_"+Инд+"_", ПараметрыМакета, 30);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ЗНАК_ТС"+Инд], "ЗНАК_"+Инд+"_", ПараметрыМакета, 30);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка["ТОННАЖ_ТС"+Инд], "Груз_"+Инд+"_", ПараметрыМакета, 4, Ложь);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка["МЕСТ_ТС"+Инд], "Мест_"+Инд+"_", ПараметрыМакета, 4, Ложь);
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(Область4);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы4 Цикл 
		Область5 = МакетУведомления.ПолучитьОбласть("Страница5");
		ПараметрыМакета = Область5.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧН=; ЧВН="), "Страница_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_ОБЪЕКТА, "Код_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ПРИЗНАК_ОБЪЕКТА, "Признак_", ПараметрыМакета, 1);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка.ПЛОЩАДЬ_ОБЪЕКТА, "Площадь_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс1, "Индекс_", ПараметрыМакета, 6);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона1, "КодСубъекта_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом1, "Дом_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус1, "Корпус_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира1, "Квартира_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район1, "Район_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город1, "Город_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт1, "НаселенныйПункт_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица1, "Улица_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОКТМО_ОБЪЕКТА, "КодОКТМО_", ПараметрыМакета, 11, "-");
		
		ПечатнаяФорма.Вывести(Область5);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект)
	
	ПечатнаяФорма = СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2015_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2016_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	ЕстьНовыеСтрокиЛистТС = СтруктураПараметров.Свойство("Листы3_0");
	
	Область1 = МакетУведомления.ПолучитьОбласть("Страница1");
	ПараметрыМакета = Область1.Параметры;
	Строка = СтруктураПараметров.Титульный[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_1, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ИМЯ_ИП, "Имя_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 37);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОГРНИП, "ОГРН_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс, "Индекс_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона, "КодСубъекта_", ПараметрыМакета, 2);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом, "Дом_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус, "Корпус_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира, "Квартира_", ПараметрыМакета, 8);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район, "Район_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город, "Город_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт, "НаселенныйПункт_", ПараметрыМакета, 34);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица, "Улица_", ПараметрыМакета, 34);
	ПараметрыМакета.ПризнакПредставителя = Строка.ПРИЗНАК_НП_ПОДВАЛ;
	ВсегоСтраниц = 2+СтруктураПараметров.Листы3.Количество()+СтруктураПараметров.Листы4.Количество();
	
	Попытка
		Если ЗначениеЗаполнено(Строка.ДАТА_НАЧАЛО) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_НАЧАЛО, "ДатаПатента_", ПараметрыМакета);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДАТА_ПОДПИСИ) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Строка.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
		КонецЕсли;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ВсегоСтраниц, "НаСтраницах_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.КОЛИЧЕСТВО_МЕСЯЦЕВ, "СРОК_", ПараметрыМакета, 2);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось заполнить некоторые параметры печатной формы");
	КонецПопытки;
	
	ПечатнаяФорма.Вывести(Область1);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	Область2 = МакетУведомления.ПолучитьОбласть("Страница2");
	ПараметрыМакета = Область2.Параметры;
	Строка = СтруктураПараметров.Страница2[0];
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_2, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОписаниеДеятельности, "Описание_", ПараметрыМакета, 560);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодПредпринимательскойДеятельности, "КодДеятельности_", ПараметрыМакета, 6);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.СредняяЧисленностьРаботников, "КоличествоРаботников_", ПараметрыМакета, 2, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка.НАЛОГОВАЯ_СТАВКА, "СтавкаПроцент", ПараметрыМакета, 1, Истина);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.СсылкаНаЗакон, "НормаЗакона_", ПараметрыМакета, 80);
	ПараметрыМакета.НаличиеРаботников = Строка.НаличиеРаботников;
	ПечатнаяФорма.Вывести(Область2);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерЛиста = 3;
	Если ЕстьНовыеСтрокиЛистТС Тогда 
		Для Каждого Строка Из СтруктураПараметров.Листы3_0 Цикл 
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_1");
			ПараметрыМакета = Область5.Параметры;
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_5, "ИНН_", ПараметрыМакета, 12);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧВН="), "Страница_", ПараметрыМакета, 3);
			ПечатнаяФорма.Вывести(Область5);
			НомерЛиста = НомерЛиста + 1;
			
			Для Инд = 1 По 3 Цикл 
				Область5 = МакетУведомления.ПолучитьОбласть("Страница5_2");
				ПараметрыМакета = Область5.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Индекс"+(Инд+1)], "Индекс_", ПараметрыМакета, 6);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КодРегиона"+(Инд+1)], "КодСубъекта_", ПараметрыМакета, 2);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Дом"+(Инд+1)], "Дом_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Корпус"+(Инд+1)], "Корпус_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Квартира"+(Инд+1)], "Квартира_", ПараметрыМакета, 8);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Район"+(Инд+1)], "Район_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Город"+(Инд+1)], "Город_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["НаселенныйПункт"+(Инд+1)], "НаселенныйПункт_", ПараметрыМакета, 34);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["Улица"+(Инд+1)], "Улица_", ПараметрыМакета, 34);
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+(Инд+1)], "КодОКТМО_", ПараметрыМакета, 11);
				ПечатнаяФорма.Вывести(Область5);
			КонецЦикла;
			
			Область5 = МакетУведомления.ПолучитьОбласть("Страница5_3");
			ПечатнаяФорма.Вывести(Область5);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Строка Из СтруктураПараметров.Листы3 Цикл 
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_1");
		ПараметрыМакета = Область3.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_3, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧВН="), "Страница_", ПараметрыМакета, 3);
		ПечатнаяФорма.Вывести(Область3);
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
		ПараметрыМакета = Область3.Параметры;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["КОД_ТС1"], "Код_", ПараметрыМакета, 2);
		ПечатнаяФорма.Вывести(Область3);
		
		Инд = 0;
		Попытка
			Для Инд = 1 По 3 Цикл
				Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_2");
				ПараметрыМакета = Область3.Параметры;
				
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ВИН_ТС"+Инд], "ВИН_", ПараметрыМакета, 25);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["МАРКА_ТС"+Инд], "МАРКА_", ПараметрыМакета, 30);
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка["ЗНАК_ТС"+Инд], "ЗНАК_", ПараметрыМакета, 30);
				Если ЕстьНовыеСтрокиЛистТС Тогда 
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка["ТОННАЖ_ТС"+Инд], "Груз_", ПараметрыМакета, 4, Ложь);
					Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Строка["МЕСТ_ТС"+Инд], "Мест_", ПараметрыМакета, 4, Ложь);
				КонецЕсли;
				ПечатнаяФорма.Вывести(Область3);
			КонецЦикла;
		Исключение
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_2_1");
			Пока Инд <= 3 Цикл
				ПечатнаяФорма.Вывести(Область3);
				Инд = Инд + 1;
			КонецЦикла;
			Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
			ПечатнаяФорма.Вывести(Область3);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомерЛиста = НомерЛиста + 1;
			Прервать;
		КонецПопытки;
		
		Область3 = МакетУведомления.ПолучитьОбласть("Страница3_3");
		ПечатнаяФорма.Вывести(Область3);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Для Каждого Строка Из СтруктураПараметров.Листы4 Цикл 
		Область4 = МакетУведомления.ПолучитьОбласть("Страница4");
		ПараметрыМакета = Область4.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.П_ИНН_4, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерЛиста, "ЧЦ=3; ЧВН="), "Страница_", ПараметрыМакета, 3);
		
		Попытка
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КОД_ОБЪЕКТА, "Код_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ПРИЗНАК_ОБЪЕКТА, "Признак_", ПараметрыМакета, 1);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(100*Строка.ПЛОЩАДЬ_ОБЪЕКТА, "Площадь_", ПараметрыМакета, 8);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Индекс1, "Индекс_", ПараметрыМакета, 6);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.КодРегиона1, "КодСубъекта_", ПараметрыМакета, 2);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Дом1, "Дом_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Корпус1, "Корпус_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Квартира1, "Квартира_", ПараметрыМакета, 8);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Район1, "Район_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Город1, "Город_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.НаселенныйПункт1, "НаселенныйПункт_", ПараметрыМакета, 34);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.Улица1, "Улица_", ПараметрыМакета, 34);
			Если ЕстьНовыеСтрокиЛистТС Тогда
				Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Строка.ОКТМО_ОБЪЕКТА, "КодОКТМО_", ПараметрыМакета, 11);
			КонецЕсли;
		Исключение
			ПечатнаяФорма.Вывести(Область4);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			Прервать;
		КонецПопытки;
		
		ПечатнаяФорма.Вывести(Область4);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразуПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект)
	
	ПечатнаяФорма = СформироватьМакетПолучениеПатентаРекомендованнаяФорма_Форма2016_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(СведенияОтправки)
	Префикс = "SR_ZPUSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(СведенияОтправки)
	Префикс = "SR_ZPUSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2016_1(СведенияОтправки)
	Префикс = "SR_ZPUSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	
	Титульный = Данные.Титульный[0];
	Если ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		ОсновныеСведения.Вставить("ДатаНачПат", Формат(Титульный.ДАТА_НАЧАЛО, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		ОсновныеСведения.Вставить("КолМес", Формат(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Фамилия", СокрЛП(Титульный.ФАМИЛИЯ_ИП));
	ОсновныеСведения.Вставить("Имя",  СокрЛП(Титульный.ИМЯ_ИП));
	ОсновныеСведения.Вставить("Отчество",  СокрЛП(Титульный.ОТЧЕСТВО_ИП));
	
	Если Не ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена дата начала патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнено количество месяцев действия патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Страница2 = Данные.Страница2[0];
	ОсновныеСведения.Вставить("НаимВД", Страница2.ОписаниеДеятельности);
	ОсновныеСведения.Вставить("КодВД", Страница2.КодПредпринимательскойДеятельности);
	ОсновныеСведения.Вставить("ПрНаемРаб", Страница2.НаличиеРаботников);
	ОсновныеСведения.Вставить("ЧислНаемРаб", Страница2.СредняяЧисленностьРаботников);
	ОсновныеСведения.Вставить("ОГРНИП", Титульный.ОГРНИП);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	
	Если Не ЗначениеЗаполнено(Страница2.ОписаниеДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указано наименование вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.КодПредпринимательскойДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан код вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.НаличиеРаботников) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан признак наличия наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СредняяЧисленностьРаботников) 
		И Страница2.НаличиеРаботников = "1" Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указана средняя численность наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Индекс", Титульный.Индекс);
	ОсновныеСведения.Вставить("КодРегион", Титульный.КодРегиона);
	ОсновныеСведения.Вставить("Район", Титульный.Район);
	ОсновныеСведения.Вставить("Город", Титульный.Город);
	ОсновныеСведения.Вставить("НаселПункт", Титульный.НаселенныйПункт);
	ОсновныеСведения.Вставить("Улица", Титульный.Улица);
	ОсновныеСведения.Вставить("Дом", Титульный.Дом);
	ОсновныеСведения.Вставить("Корпус", Титульный.Корпус);
	ОсновныеСведения.Вставить("Кварт", Титульный.Квартира);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура Проверить_Форма2015_1(Данные, УникальныйИдентификатор)
	Титульный = Данные.Титульный[0];
	
	Если Не ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена дата начала патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнено количество месяцев действия патента (страница 1)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Страница2 = Данные.Страница2[0];
	Если Не ЗначениеЗаполнено(Страница2.ОписаниеДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указано наименование вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.КодПредпринимательскойДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан код вида деятельности (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.НаличиеРаботников) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан признак наличия наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СредняяЧисленностьРаботников) 
		И Страница2.НаличиеРаботников = "1" Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указана средняя численность наемных работников (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СсылкаНаЗакон) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена ссылка на норму закона Российской Федерации (страница 2)", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
	КоличествоОшибок = 0;
	НомСтр = 0;
	Для Каждого Стр Из Данные.Листы3_0 Цикл 
		НомСтр = НомСтр + 1;
		Для Инд = 2 По 4 Цикл 
			Если ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И Не ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код региона", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код ОКТМО", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоОшибок > 3 Тогда 
			ВызватьИсключение "";
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоОшибок > 0 Тогда 
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	
	Титульный = Данные.Титульный[0];
	Проверить_Форма2015_1(Данные, УникальныйИдентификатор);
	Если ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		ОсновныеСведения.Вставить("ДатаНачПат", Формат(Титульный.ДАТА_НАЧАЛО, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		ОсновныеСведения.Вставить("КолМес", Формат(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Фамилия", СокрЛП(Титульный.ФАМИЛИЯ_ИП));
	ОсновныеСведения.Вставить("Имя",  СокрЛП(Титульный.ИМЯ_ИП));
	ОсновныеСведения.Вставить("Отчество",  СокрЛП(Титульный.ОТЧЕСТВО_ИП));
	
	Страница2 = Данные.Страница2[0];
	ОсновныеСведения.Вставить("НаимВД", Страница2.ОписаниеДеятельности);
	ОсновныеСведения.Вставить("КодВД", Страница2.КодПредпринимательскойДеятельности);
	ОсновныеСведения.Вставить("ПрНаемРаб", Страница2.НаличиеРаботников);
	ОсновныеСведения.Вставить("ЧислНаемРаб", Страница2.СредняяЧисленностьРаботников);
	ОсновныеСведения.Вставить("ОГРНИП", Титульный.ОГРНИП);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("НалСтавка", Формат(Страница2.НАЛОГОВАЯ_СТАВКА, "ЧН=0"));
	ОсновныеСведения.Вставить("ЗакСубРФСтав", Страница2.СсылкаНаЗакон);
	ОсновныеСведения.Вставить("Индекс", Титульный.Индекс);
	ОсновныеСведения.Вставить("КодРегион", Титульный.КодРегиона);
	ОсновныеСведения.Вставить("Район", Титульный.Район);
	ОсновныеСведения.Вставить("Город", Титульный.Город);
	ОсновныеСведения.Вставить("НаселПункт", Титульный.НаселенныйПункт);
	ОсновныеСведения.Вставить("Улица", Титульный.Улица);
	ОсновныеСведения.Вставить("Дом", Титульный.Дом);
	ОсновныеСведения.Вставить("Корпус", Титульный.Корпус);
	ОсновныеСведения.Вставить("Кварт", Титульный.Квартира);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура Проверить_Форма2016_1(Данные, УникальныйИдентификатор)
	Титульный = Данные.Титульный[0];
	Ошибок = 0;
	
	Если Не ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО)
		И ЗначениеЗаполнено(Титульный.ОГРНИП) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнена дата начала действия патента (страница 1)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнено количество месяцев действия патента (страница 1)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.КодРегиона) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан адрес на титульной странице", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульный.П_ИНН_1) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан ИНН", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Страница2 = Данные.Страница2[0];
	Если Не ЗначениеЗаполнено(Страница2.ОписаниеДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указано наименование вида деятельности (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.КодПредпринимательскойДеятельности) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан код вида деятельности (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не СтрДлина(СокрЛП(Страница2.КодПредпринимательскойДеятельности)) = 6 Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Код вида деятельности должен иметь длину 6 символов (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.НаличиеРаботников) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан признак наличия наемных работников (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страница2.СредняяЧисленностьРаботников) 
		И Страница2.НаличиеРаботников = "1" Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указана средняя численность наемных работников (страница 2)", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	КоличествоСтр3 = 0;
	КоличествоСтр4 = 0;
	КоличествоСтр5 = 0;
	Для Каждого Стр Из Данные.Листы3 Цикл
		Если ЗначениеЗаполнено(Стр.КОД_ТС1) Тогда 
			КоличествоСтр3 = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.Листы4 Цикл
		Если ЗначениеЗаполнено(Стр.КОД_ОБЪЕКТА) Тогда 
			КоличествоСтр4 = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.Листы3_0 Цикл
		Если ЗначениеЗаполнено(Стр.ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ2)
			Или ЗначениеЗаполнено(Стр.ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ3)
			Или ЗначениеЗаполнено(Стр.ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ4)
			Или ЗначениеЗаполнено(Стр.КодРегиона2)
			Или ЗначениеЗаполнено(Стр.КодРегиона3)
			Или ЗначениеЗаполнено(Стр.КодРегиона4) Тогда 
			
			КоличествоСтр5 = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если (КоличествоСтр3 + КоличествоСтр4 + КоличествоСтр5) <> 1 Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("В заявлении на получение патенты должны быть указаны либо сведения о месте осуществления предпринимательской деятельности
										|либо сведения о транспортных средствах, либо сведения по объектам", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
	
	Если КоличествоСтр3 = 1 Тогда 
		Для Каждого Стр Из Данные.Листы3 Цикл
			ТекстОш = "";
			ЗаполненыДанныеПоТС = Ложь;
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд])
					Или ЗначениеЗаполнено(Стр["ВИН_ТС"+Инд])
					Или ЗначениеЗаполнено(Стр["МАРКА_ТС"+Инд]) Тогда 
					
					Если Не ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд]) Тогда 
						ТекстОш = "Необходимо заполнить регистрационный номер транспортного средства";
					КонецЕсли;
					Если Не ЗначениеЗаполнено(Стр["ВИН_ТС"+Инд]) Тогда 
						ТекстОш = "Необходимо заполнить вин-номер транспортного средства";
					КонецЕсли;
					Если Не ЗначениеЗаполнено(Стр["МАРКА_ТС"+Инд]) Тогда 
						ТекстОш = "Необходимо заполнить марку транспортного средства";
					КонецЕсли;
					
					ЗаполненыДанныеПоТС = Истина;
				КонецЕсли;
			КонецЦикла;
				
			Если Не ЗаполненыДанныеПоТС Тогда
				ТекстОш = "Не заполнены данные по транспортным средствам (регистрационный знак, марка, вин-код)";
			КонецЕсли;
			
			Если Стр.КОД_ТС1 = "01" Или Стр.КОД_ТС1 = "04" Тогда 
				Для Инд = 1 По 3 Цикл 
					Если ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд]) Тогда 
						Если Не ЗначениеЗаполнено(Стр["ТОННАЖ_ТС"+Инд]) Тогда 
							ТекстОш = "Для ТС с кодами 01 и 04 должна быть указана грузоподъемность";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли Стр.КОД_ТС1 = "02" Или Стр.КОД_ТС1 = "03" Тогда 
				Для Инд = 1 По 3 Цикл 
					Если ЗначениеЗаполнено(Стр["ЗНАК_ТС"+Инд]) Тогда 
						Если Не ЗначениеЗаполнено(Стр["МЕСТ_ТС"+Инд]) Тогда 
							ТекстОш = "Для ТС с кодами 02 и 03 должно быть указано количество посадочных мест";
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекстОш) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(ТекстОш, УникальныйИдентификатор);
				ВызватьИсключение "";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если КоличествоСтр4 = 1 Тогда
		Для Каждого Стр Из Данные.Листы4 Цикл
			Если Не ЗначениеЗаполнено(Стр.ОКТМО_ОБЪЕКТА) Или Не ЗначениеЗаполнено(Стр.КодРегиона1) Тогда 
				КОД_ОБЪЕКТА = Стр.КОД_ОБЪЕКТА;
				Если Не (КОД_ОБЪЕКТА = "16" Или КОД_ОБЪЕКТА = "17" Или КОД_ОБЪЕКТА = "18" Или КОД_ОБЪЕКТА = "19"
						Или КОД_ОБЪЕКТА = "20" Или КОД_ОБЪЕКТА = "21" Или КОД_ОБЪЕКТА = "22") Тогда
						
					РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Если код объекта лежит вне диапазона 16...22 необходимо указывать ОКТМО и адрес", УникальныйИдентификатор);
					ВызватьИсключение "";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	КоличествоОшибок = 0;
	НомСтр = 0;
	Для Каждого Стр Из Данные.Листы3_0 Цикл 
		НомСтр = НомСтр + 1;
		Для Инд = 2 По 4 Цикл 
			Если ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И Не ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код региона", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ"+Инд]) И ЗначениеЗаполнено(Стр["КодРегиона"+Инд]) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На стр."+НомСтр+" со сведениями о месте деятельности не указан код ОКТМО", УникальныйИдентификатор);
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоОшибок > 3 Тогда 
			ВызватьИсключение "";
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоОшибок > 0 Тогда 
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2016_1(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	
	Титульный = Данные.Титульный[0];
	Проверить_Форма2016_1(Данные, УникальныйИдентификатор);
	Если ЗначениеЗаполнено(Титульный.ДАТА_НАЧАЛО) Тогда
		ОсновныеСведения.Вставить("ДатаНачПат", Формат(Титульный.ДАТА_НАЧАЛО, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ) Тогда
		ОсновныеСведения.Вставить("КолМес", Формат(Титульный.КОЛИЧЕСТВО_МЕСЯЦЕВ, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	ОсновныеСведения.Вставить("Фамилия", СокрЛП(Титульный.ФАМИЛИЯ_ИП));
	ОсновныеСведения.Вставить("Имя",  СокрЛП(Титульный.ИМЯ_ИП));
	ОсновныеСведения.Вставить("Отчество",  СокрЛП(Титульный.ОТЧЕСТВО_ИП));
	
	Страница2 = Данные.Страница2[0];
	ОсновныеСведения.Вставить("НаимВД", Страница2.ОписаниеДеятельности);
	ОсновныеСведения.Вставить("КодВД", Страница2.КодПредпринимательскойДеятельности);
	ОсновныеСведения.Вставить("ПрНаемРаб", Страница2.НаличиеРаботников);
	ОсновныеСведения.Вставить("ЧислНаемРаб", Страница2.СредняяЧисленностьРаботников);
	ОсновныеСведения.Вставить("НалСтавка", Формат(Страница2.НАЛОГОВАЯ_СТАВКА, "ЧН=0"));
	ОсновныеСведения.Вставить("ЗакСубРФСтав", Страница2.СсылкаНаЗакон);
	ОсновныеСведения.Вставить("ОГРНИП", Титульный.ОГРНИП);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("Индекс", Титульный.Индекс);
	ОсновныеСведения.Вставить("КодРегион", Титульный.КодРегиона);
	ОсновныеСведения.Вставить("Район", Титульный.Район);
	ОсновныеСведения.Вставить("Город", Титульный.Город);
	ОсновныеСведения.Вставить("НаселПункт", Титульный.НаселенныйПункт);
	ОсновныеСведения.Вставить("Улица", Титульный.Улица);
	ОсновныеСведения.Вставить("Дом", Титульный.Дом);
	ОсновныеСведения.Вставить("Корпус", Титульный.Корпус);
	ОсновныеСведения.Вставить("Кварт", Титульный.Квартира);
	ОсновныеСведения.Вставить("ПрПодп", Титульный.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("НаимДок", Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2016_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2014_1");
	ЗаполнитьДанными_Форма2014_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2015_1");
	ЗаполнитьДанными_Форма2015_1(Объект, ОсновныеСведения, СтруктураВыгрузки, УникальныйИдентификатор);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2016_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2016_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2016_1");
	ЗаполнитьДанными_Форма2016_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2014_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(Параметры, ДеревоВыгрузки);
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	СвМестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвМестПД");
	МестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СвМестПД, "МестПД");
	СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвТСДеят1");
	СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвОбДеят2");
	
	Данные = Объект.ДанныеУведомления.Получить();
	Листы3_0 = Данные.Листы3_0;
	Для Каждого Лист3_0 Из Листы3_0 Цикл
		Для Инд = 2 По 4 Цикл
			Если Не ЗначениеЗаполнено(Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]) Тогда 
				Продолжить;
			КонецЕсли;
		
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(МестПД);
			НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрОбРФ");
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист3_0["Индекс" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист3_0["КодРегиона" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист3_0["Район" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист3_0["Город" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист3_0["НаселенныйПункт" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист3_0["Улица" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист3_0["Дом" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист3_0["Корпус" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист3_0["Квартира" + Инд]);
		КонецЦикла;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(МестПД);
	
	Листы3 = Данные.Листы3;
	Для Каждого Лист3 Из Листы3 Цикл
		ЗначКод = Лист3["КОД_ТС1"];
		Если ЗначениеЗаполнено(ЗначКод) Тогда
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвТСДеят1);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодТС", ЗначКод);
			СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "СведТС");
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд])
					Или ЗначениеЗаполнено(Лист3["ТОННАЖ_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МЕСТ_ТС" + Инд]) Тогда 
					НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СведТС);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ИдНомТС", Лист3["ВИН_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "МаркаТС", Лист3["МАРКА_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "РегЗнакТС", Лист3["ЗНАК_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ГрузТС", Лист3["ТОННАЖ_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КолПосадМест", Лист3["МЕСТ_ТС" + Инд]);
				КонецЕсли;
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(СведТС);
		КонецЕсли;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(СвТСДеят1);
	
	Листы4 = Данные.Листы4;
	Для Каждого Лист4 Из Листы4 Цикл
		Если Не ЗначениеЗаполнено(Лист4.КОД_ОБЪЕКТА) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвОбДеят2);
		НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрМНОбПП");
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодОбъект", Лист4.КОД_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПризОбъект", Лист4.ПРИЗНАК_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПлощОбъект", Лист4.ПЛОЩАДЬ_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист4.ОКТМО_ОБЪЕКТА);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист4.Индекс1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист4.КодРегиона1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист4.Район1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист4.Город1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист4.НаселенныйПункт1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист4.Улица1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист4.Дом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист4.Корпус1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист4.Квартира1);
	КонецЦикла;
	
	РегламентированнаяОтчетность.УдалитьУзел(СвОбДеят2);
	
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2015_1(Объект, Параметры, ДеревоВыгрузки, УникальныйИдентификатор)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(Параметры, ДеревоВыгрузки);
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	СвМестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвМестПД");
	МестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СвМестПД, "МестПД");
	СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвТСДеят1");
	СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвОбДеят2");
	
	Данные = Объект.ДанныеУведомления.Получить();
	Листы3_0 = Данные.Листы3_0;
	ВсегоРазных = 0;
	ВсегоРазных1 = 0;
	Для Каждого Лист3_0 Из Листы3_0 Цикл
		Для Инд = 2 По 4 Цикл
			Если Не ЗначениеЗаполнено(Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]) Тогда 
				Продолжить;
			КонецЕсли;
		
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(МестПД);
			НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрОбРФ");
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист3_0["Индекс" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист3_0["КодРегиона" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист3_0["Район" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист3_0["Город" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист3_0["НаселенныйПункт" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист3_0["Улица" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист3_0["Дом" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист3_0["Корпус" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист3_0["Квартира" + Инд]);
			ВсегоРазных1 = ВсегоРазных1 + 1;
		КонецЦикла;
	КонецЦикла;
	ВсегоРазных = ВсегоРазных + ?(ВсегоРазных1 > 0, 1, 0);
	РегламентированнаяОтчетность.УдалитьУзел(МестПД);
	
	Листы3 = Данные.Листы3;
	ВсегоРазных1 = 0;
	НомЛ3 = 0;
	Для Каждого Лист3 Из Листы3 Цикл
		ЗначКод = Лист3["КОД_ТС1"];
		Если ЗначениеЗаполнено(ЗначКод) Тогда
			НомЛ3 = НомЛ3 + 1;
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвТСДеят1);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодТС", ЗначКод);
			СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "СведТС");
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд]) Тогда 
					
					Если (Не ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]))
						Или (Не ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд])) 
						Или (Не ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд])) Тогда
						
						РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомЛ3+" не заполнены обязательные реквизиты: номер, марка, VIN", УникальныйИдентификатор);
						ВызватьИсключение "";
					КонецЕсли;
					
					Если (ЗначКод = "01" Или ЗначКод = "04") И (Не ЗначениеЗаполнено(Лист3["ТОННАЖ_ТС" + Инд])) Тогда 
						РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомЛ3+" не указана грузоподъемность", УникальныйИдентификатор);
						ВызватьИсключение "";
					КонецЕсли;
					
					Если (ЗначКод = "02" Или ЗначКод = "03") И (Не ЗначениеЗаполнено(Лист3["МЕСТ_ТС" + Инд])) Тогда 
						РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомЛ3+" не указано количество посадочных мест", УникальныйИдентификатор);
						ВызватьИсключение "";
					КонецЕсли;
					НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СведТС);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ИдНомТС", Лист3["ВИН_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "МаркаТС", Лист3["МАРКА_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "РегЗнакТС", Лист3["ЗНАК_ТС" + Инд]);
					
					Если (ЗначКод = "01" Или ЗначКод = "04") Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ГрузТС", Лист3["ТОННАЖ_ТС" + Инд]);
					ИначеЕсли (ЗначКод = "02" Или ЗначКод = "03") Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КолПосадМест", Лист3["МЕСТ_ТС" + Инд]);
					КонецЕсли;
					
					ВсегоРазных1 = ВсегоРазных1 + 1;
				КонецЕсли;
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(СведТС);
		КонецЕсли;
	КонецЦикла;
	ВсегоРазных = ВсегоРазных + ?(ВсегоРазных1 > 0, 1, 0);
	РегламентированнаяОтчетность.УдалитьУзел(СвТСДеят1);
	
	Листы4 = Данные.Листы4;
	ВсегоРазных1 = 0;
	Для Каждого Лист4 Из Листы4 Цикл
		Если Не ЗначениеЗаполнено(Лист4.КОД_ОБЪЕКТА) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвОбДеят2);
		НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрМНОбПП");
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодОбъект", Лист4.КОД_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПризОбъект", Лист4.ПРИЗНАК_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПлощОбъект", Лист4.ПЛОЩАДЬ_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист4.ОКТМО_ОБЪЕКТА);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист4.Индекс1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист4.КодРегиона1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист4.Район1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист4.Город1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист4.НаселенныйПункт1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист4.Улица1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист4.Дом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист4.Корпус1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист4.Квартира1);
		ВсегоРазных1 = ВсегоРазных1 + 1;
	КонецЦикла;
	ВсегоРазных = ВсегоРазных + ?(ВсегоРазных1 > 0, 1, 0);
	РегламентированнаяОтчетность.УдалитьУзел(СвОбДеят2);
	
	Если ВсегоРазных > 1 Тогда 
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Должны быть заполнены данные на лисах 3 ЛИБО данные на листах 4 ЛИБО данные на листах 5", УникальныйИдентификатор);
		ВызватьИсключение "";
	ИначеЕсли ВсегоРазных = 0 Тогда 
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены сведения о видах деятельности", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2016_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(Параметры, ДеревоВыгрузки);
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	СвМестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвМестПД");
	МестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СвМестПД, "МестПД");
	СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвТСДеят1");
	СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвОбДеят2");
	
	Данные = Объект.ДанныеУведомления.Получить();
	Листы3_0 = Данные.Листы3_0;
	Для Каждого Лист3_0 Из Листы3_0 Цикл
		Для Инд = 2 По 4 Цикл
			Если Не ЗначениеЗаполнено(Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]) Тогда 
				Продолжить;
			КонецЕсли;
		
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(МестПД);
			НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрОбРФ");
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист3_0["ОКТМО_МЕСТА_ДЕЯТЕЛЬНОСТИ" + Инд]);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист3_0["Индекс" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист3_0["КодРегиона" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист3_0["Район" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист3_0["Город" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист3_0["НаселенныйПункт" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист3_0["Улица" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист3_0["Дом" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист3_0["Корпус" + Инд]);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист3_0["Квартира" + Инд]);
		КонецЦикла;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(МестПД);
	
	Листы3 = Данные.Листы3;
	Для Каждого Лист3 Из Листы3 Цикл
		ЗначКод = Лист3["КОД_ТС1"];
		Если ЗначениеЗаполнено(ЗначКод) Тогда
			НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвТСДеят1);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодТС", ЗначКод);
			СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "СведТС");
			Для Инд = 1 По 3 Цикл
				Если ЗначениеЗаполнено(Лист3["ВИН_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МАРКА_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["ЗНАК_ТС" + Инд])
					Или ЗначениеЗаполнено(Лист3["ТОННАЖ_ТС" + Инд]) Или ЗначениеЗаполнено(Лист3["МЕСТ_ТС" + Инд]) Тогда 
					НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СведТС);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ИдНомТС", Лист3["ВИН_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "МаркаТС", Лист3["МАРКА_ТС" + Инд]);
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "РегЗнакТС", Лист3["ЗНАК_ТС" + Инд]);
					
					Если ЗначКод = "01" Или ЗначКод = "04" Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ГрузТС", Лист3["ТОННАЖ_ТС" + Инд]);
					ИначеЕсли ЗначКод = "02" Или ЗначКод = "03" Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КолПосадМест", Лист3["МЕСТ_ТС" + Инд]);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(СведТС);
		КонецЕсли;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(СвТСДеят1);
	
	Листы4 = Данные.Листы4;
	Для Каждого Лист4 Из Листы4 Цикл
		Если Не ЗначениеЗаполнено(Лист4.КОД_ОБЪЕКТА) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(СвОбДеят2);
		НовыйУзелАдрес = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел, "АдрМНОбПП");
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "КодОбъект", Лист4.КОД_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПризОбъект", Лист4.ПРИЗНАК_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ПлощОбъект", Лист4.ПЛОЩАДЬ_ОБЪЕКТА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел, "ОКТМО", Лист4.ОКТМО_ОБЪЕКТА);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Индекс", Лист4.Индекс1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "КодРегион", Лист4.КодРегиона1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Район", Лист4.Район1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Город", Лист4.Город1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "НаселПункт", Лист4.НаселенныйПункт1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Улица", Лист4.Улица1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Дом", Лист4.Дом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Корпус", Лист4.Корпус1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзелАдрес, "Кварт", Лист4.Квартира1);
	КонецЦикла;
	
	РегламентированнаяОтчетность.УдалитьУзел(СвОбДеят2);
	
КонецПроцедуры

Функция ПечатьСразу_Форма2017_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2017_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция СформироватьМакет_Форма2017_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПолучитьТЗПоСтруктуре(Стр)
	Рез = Новый ТаблицаЗначений;
	Для Каждого КЗ Из Стр Цикл 
		Рез.Колонки.Добавить(КЗ.Ключ);
	КонецЦикла;
	Возврат Рез;
КонецФункции

Функция ДанныеМногостраничногоРазделаВТЗ(МнгСтр)
	ТЗ = ПолучитьТЗПоСтруктуре(МнгСтр[0].Значение);
	Для Каждого Стр Из МнгСтр Цикл 
		НовСтр = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр.Значение);
	КонецЦикла;
	Возврат ТЗ;
КонецФункции

Функция НапечататьЛистА(Объект, Данные, Индекс, Листы, ПечатнаяФорма, НомСтр, ИННКПП)
	ПостФикс = "_" + Индекс;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧН=000; ЧВН="), "НомСтр", ПечатнаяФорма.Области);
	
	Для Каждого КЗ Из Данные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ + ПостФикс, ПечатнаяФорма.Области);
		КонецЕсли;
	КонецЦикла;
	Индекс = Индекс + 1;
	Если Индекс = 4 Тогда 
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
		ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистА"));
		Индекс = 1;
	КонецЕсли;
КонецФункции

Функция НапечататьЛистБ(Объект, Данные, Индекс, Листы, ПечатнаяФорма, НомСтр, ИННКПП)
	ПостФикс = "_" + Индекс;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧН=000; ЧВН="), "НомСтр", ПечатнаяФорма.Области);
	
	Для Каждого КЗ Из Данные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ + ПостФикс, ПечатнаяФорма.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ + ПостФикс, ПечатнаяФорма.Области);
		КонецЕсли;
	КонецЦикла;
	Индекс = Индекс + 1;
	Если Индекс = 3 Тогда 
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
		ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистБ"));
		Индекс = 1;
	КонецЕсли;
КонецФункции

Функция НапечататьЛистВ(Объект, Данные, Листы, ПечатнаяФорма, НомСтр, ИННКПП)
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧН=000; ЧВН="), "НомСтр", ПечатнаяФорма.Области);
	
	Для Каждого КЗ Из Данные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
		КонецЕсли;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	НомСтр = НомСтр + 1;
	ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистВ"));
КонецФункции

Функция НапечататьЛист2(Объект, Данные, Листы, ПечатнаяФорма, НомСтр, ИННКПП)
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области);
	
	Для Каждого КЗ Из Данные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("---" + Формат(Данные.ЧислНаемРаб, "ЧН=0"), 2), "ЧислНаемРаб", ПечатнаяФорма.Области);
	Если Данные.НалСтавка = 0 Тогда 
		Если Данные.Свойство("ВыводитьНольНаПечать") И Данные.ВыводитьНольНаПечать = Истина Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0", "НалСтавка", ПечатнаяФорма.Области);
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("-", "НалСтавка", ПечатнаяФорма.Области);
		КонецЕсли;
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	НомСтр = НомСтр + 1;
КонецФункции

Функция НапечататьЛистТитульный(Объект, Данные, Листы, ПечатнаяФорма, НомСтр, ИННКПП)
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области);
	
	Для Каждого КЗ Из Данные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, ПечатнаяФорма.Области);
		КонецЕсли;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	НомСтр = НомСтр + 1;
КонецФункции

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Форма2017_1_Титульная.ИННШапка);
	
	НомСтр = 1;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_Титульная"));
	НапечататьЛистТитульный(Объект, СтруктураПараметров.ДанныеУведомления.Форма2017_1_Титульная, Листы, ПечатнаяФорма, НомСтр, ИННКПП);
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_Лист2"));
	НапечататьЛист2(Объект, СтруктураПараметров.ДанныеУведомления.Форма2017_1_Лист2, Листы, ПечатнаяФорма, НомСтр, ИННКПП);
	
	ЛистыА = ДанныеМногостраничногоРазделаВТЗ(СтруктураПараметров.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистА);
	ЛистыАСвернутые = ДанныеМногостраничногоРазделаВТЗ(СтруктураПараметров.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистА).Скопировать(, "КодРегион,КодНОУчет");
	ЛистыАСвернутые.Свернуть("КодРегион,КодНОУчет");
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистА"));
	Для Каждого Стр Из ЛистыАСвернутые Цикл 
		Если Не ЗначениеЗаполнено(Стр.КодРегион) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОтборСтроки = ЛистыА.НайтиСтроки(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр));
		Индекс = 1;
		Для Каждого Данные Из ОтборСтроки Цикл
			НапечататьЛистА(Объект, ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Данные), Индекс, Листы, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		Если Индекс <> 1 Тогда 
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистА"));
		КонецЕсли;
	КонецЦикла;
	
	ЛистыБ = ДанныеМногостраничногоРазделаВТЗ(СтруктураПараметров.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистБ);
	ЛистыБСвернутые = ДанныеМногостраничногоРазделаВТЗ(СтруктураПараметров.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистБ).Скопировать(, "КодРегион,КодНОУчет,КодТС");
	ЛистыБСвернутые.Свернуть("КодРегион,КодНОУчет,КодТС");
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистБ"));
	Для Каждого Стр Из ЛистыБСвернутые Цикл 
		Если Не ЗначениеЗаполнено(Стр.КодРегион) Или Не ЗначениеЗаполнено(Стр.КодТС) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОтборСтроки = ЛистыБ.НайтиСтроки(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр));
		Индекс = 1;
		Для Каждого Данные Из ОтборСтроки Цикл
			НапечататьЛистБ(Объект, ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Данные), Индекс, Листы, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		Если Индекс <> 1 Тогда 
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистБ"));
		КонецЕсли;
	КонецЦикла;
	
	ЛистыВ = ДанныеМногостраничногоРазделаВТЗ(СтруктураПараметров.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистВ);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьМакет("Печать_Форма2017_1_ЛистВ"));
	Для Каждого Стр Из ЛистыВ Цикл
		Если Не ЗначениеЗаполнено(Стр.КодРегион) Тогда 
			Продолжить;
		КонецЕсли;
		НапечататьЛистВ(Объект, ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр), Листы, ПечатнаяФорма, НомСтр, ИННКПП);
	КонецЦикла;
	
	
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		//НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ИННКПП);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "SR_ZPUSN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Попытка
		Титульная = Данные.ДанныеУведомления.Форма2017_1_Титульная;
		Если Не ЗначениеЗаполнено(Титульная.ПрПодп) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак подписанта", "Форма2017_1_Титульная", "ПрПодп"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.НаимДок) И Титульная.ПрПодп = "2" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан документ (обязателен при подаче представителем)", "Форма2017_1_Титульная", "НаимДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ) И Титульная.ПрПодп = "2" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан представитель", "Форма2017_1_Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый орган", "Форма2017_1_Титульная", "КодНО"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Титульная.ИННШапка) И СтрДлина(СокрЛП(Титульная.ИННШапка)) <> 12 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан ИНН", "Форма2017_1_Титульная", "ИННШапка"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Титульная.ОГРНИП) И СтрДлина(СокрЛП(Титульная.ОГРНИП)) <> 15 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан ОГРН", "Форма2017_1_Титульная", "ОГРНИП"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КодРегион) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано место жительства", "Форма2017_1_Титульная", "КодРегион"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КолМес) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано количество месяцев", "Форма2017_1_Титульная", "КолМес"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ДатаНачПат) И ЗначениеЗаполнено(Титульная.ОГРНИП) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата начала действия патента", "Форма2017_1_Титульная", "ДатаНачПат"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Титульная.ДатаНачПат) И Не ЗначениеЗаполнено(Титульная.ОГРНИП) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Дата начала действия патента не указывается, если не заполнен ОГРНИП", "Форма2017_1_Титульная", "ДатаНачПат"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Титульная.ДатаНачПат) И ЗначениеЗаполнено(Титульная.КолМес) 
			И (Месяц(Титульная.ДатаНачПат) + Титульная.КолМес) > 13 Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Патент выдается в пределах одного года (с начала действия)", "Форма2017_1_Титульная", "КолМес"));
		КонецЕсли;
		
		Лист2 = Данные.ДанныеУведомления.Форма2017_1_Лист2;
		Если Не ЗначениеЗаполнено(Лист2.НаимВД) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование вида деятельности", "Форма2017_1_Лист2", "НаимВД"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист2.КодВД) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано код вида деятельности", "Форма2017_1_Лист2", "КодВД"));
		ИначеЕсли СтрДлина(Лист2.КодВД) <> 6 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код вида деятельности", "Форма2017_1_Лист2", "КодВД"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист2.ПрНаемРаб) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак использования наемных работников", "Форма2017_1_Лист2", "ПрНаемРаб"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист2.ЧислНаемРаб) И Лист2.ПрНаемРаб = "1" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано число наемных работников", "Форма2017_1_Лист2", "ЧислНаемРаб"));
		КонецЕсли;
		
		ЕстьЛистА = 0;
		ЕстьЛистБ = 0;
		ЕстьЛистВ = 0;
		Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистА Цикл 
			СтрЗначение = Стр.Значение;
			Если Не ЗначениеЗаполнено(СтрЗначение.КодРегион) Тогда 
				Продолжить;
			КонецЕсли;
			ЕстьЛистА = 1;
			
			Если ЗначениеЗаполнено(СтрЗначение.КодНОУчет) И ЗначениеЗаполнено(СтрЗначение.КодРегионАддр) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Код налогового органа заполняют ИП, не имеющие определенного адреса места осуществления предпринимательской деятельности", "Форма2017_1_ЛистА", "КодНОУчет", СтрЗначение.УИД));
			КонецЕсли;
			
			Если СтрДлина(СокрЛП(СтрЗначение.КодРегион)) <> 2 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код региона", "Форма2017_1_ЛистА", "КодРегион", СтрЗначение.УИД));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрЗначение.КодНОУчет) И Не ЗначениеЗаполнено(СтрЗначение.КодРегионАддр) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый орган или адрес осуществления деятельности", "Форма2017_1_ЛистА", "КодНОУчет", СтрЗначение.УИД));
			Иначе
				Если ЗначениеЗаполнено(СтрЗначение.КодНОУчет) И СтрДлина(СокрЛП(СтрЗначение.КодНОУчет)) <> 4 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан налоговый орган", "Форма2017_1_ЛистА", "КодНОУчет", СтрЗначение.УИД));
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрЗначение.КодРегионАддр) И СтрДлина(СокрЛП(СтрЗначение.КодРегионАддр)) <> 2 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код региона", "Форма2017_1_ЛистА", "КодРегионАддр", СтрЗначение.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистБ Цикл 
			СтрЗначение = Стр.Значение;
			Если Не ЗначениеЗаполнено(СтрЗначение.КодРегион) Тогда 
				Продолжить;
			КонецЕсли;
			ЕстьЛистБ = 1;
			
			Если СтрДлина(СокрЛП(СтрЗначение.КодРегион)) <> 2 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код региона", "Форма2017_1_ЛистБ", "КодРегион", СтрЗначение.УИД));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрЗначение.КодТС) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код транспортного средства", "Форма2017_1_ЛистБ", "КодТС", СтрЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗначение.ИдНомТС) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан вин транспортного средства", "Форма2017_1_ЛистБ", "ИдНомТС", СтрЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗначение.МаркаТС) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана марка транспортного средства", "Форма2017_1_ЛистБ", "МаркаТС", СтрЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрЗначение.РегЗнакТС) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан регистрационный знак транспортного средства", "Форма2017_1_ЛистБ", "РегЗнакТС", СтрЗначение.УИД));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрЗначение.ГрузТС) И (СтрЗначение.КодТС = "01" Или СтрЗначение.КодТС = "04") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана грузоподъемность транспортного средства", "Форма2017_1_ЛистБ", "ГрузТС", СтрЗначение.УИД));
			ИначеЕсли Не ЗначениеЗаполнено(СтрЗначение.КолПосадМест) И (СтрЗначение.КодТС = "02" Или СтрЗначение.КодТС = "03") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано количество посадочных мест в ТС", "Форма2017_1_ЛистБ", "КолПосадМест", СтрЗначение.УИД));
			ИначеЕсли Не ЗначениеЗаполнено(СтрЗначение.ГрузТС) И Не ЗначениеЗаполнено(СтрЗначение.КолПосадМест) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана грузоподъемность транспортного средства", "Форма2017_1_ЛистБ", "ГрузТС", СтрЗначение.УИД));
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистВ Цикл 
			СтрЗначение = Стр.Значение;
			Если Не ЗначениеЗаполнено(СтрЗначение.КодРегион) Тогда 
				Продолжить;
			КонецЕсли;
			ЕстьЛистВ = 1;
			
			Если СтрДлина(СокрЛП(СтрЗначение.КодРегион)) <> 2 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код региона", "Форма2017_1_ЛистВ", "КодРегион", СтрЗначение.УИД));
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрЗначение.КодНОУчет) И СтрДлина(СокрЛП(СтрЗначение.КодНОУчет)) <> 4 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан налоговый орган", "Форма2017_1_ЛистВ", "КодНОУчет", СтрЗначение.УИД));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрЗначение.КодОбъект) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код объекта", "Форма2017_1_ЛистВ", "КодОбъект", СтрЗначение.УИД));
			КонецЕсли;
			
			Если (Не (СтрЗначение.КодОбъект = "16" Или СтрЗначение.КодОбъект = "17" Или СтрЗначение.КодОбъект = "18" Или СтрЗначение.КодОбъект = "19"
					 Или СтрЗначение.КодОбъект = "20" Или СтрЗначение.КодОбъект = "21" Или СтрЗначение.КодОбъект = "22" Или СтрЗначение.КодОбъект = "29")) Тогда 
				Если Не ЗначениеЗаполнено(СтрЗначение.КодРегионАддр) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код региона", "Форма2017_1_ЛистВ", "КодРегионАддр", СтрЗначение.УИД));
				ИначеЕсли СтрДлина(СокрЛП(СтрЗначение.КодРегионАддр)) <> 2 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код региона", "Форма2017_1_ЛистВ", "КодРегионАддр", СтрЗначение.УИД));
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(СтрЗначение.КодРегионАддр) И СтрДлина(СокрЛП(СтрЗначение.КодРегионАддр)) <> 2 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код региона", "Форма2017_1_ЛистВ", "КодРегионАддр", СтрЗначение.УИД));
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьЛистА + ЕстьЛистБ + ЕстьЛистВ <> 1 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Должны быть заполнены либо листы А либо листы Б либо листы В", "Форма2017_1_Титульная", ""));
		КонецЕсли;
		
		Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("А%Б%В", "%") Цикл 
			ЛистыСвернутые = ДанныеМногостраничногоРазделаВТЗ(Данные.ДанныеМногостраничныхРазделов["Форма2017_1_Лист" + Элт]).Скопировать(, "КодРегион,КодНОУчет");
			ЛистыСвернутые.Свернуть("КодРегион,КодНОУчет");
			Инд = ЛистыСвернутые.Количество();
			Пока Инд > 0 Цикл 
				Инд = Инд - 1;
				Если Не ЗначениеЗаполнено(ЛистыСвернутые[Инд].КодРегион) Тогда 
					ЛистыСвернутые.Удалить(Инд);
				КонецЕсли;
			КонецЦикла;
			Если ЛистыСвернутые.Количество() > 1 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("В листах " + Элт + " должны быть одинаково заполнены код региона и код налогового органа", "Форма2017_1_Лист" + Элт, "КодРегион", Данные.ДанныеМногостраничныхРазделов["Форма2017_1_Лист" + Элт][0].Значение.УИД));
			КонецЕсли;
		КонецЦикла;
	Исключение
		Инфо = ИнформацияОбОшибке();
		СтрОписание = "Описание='" + Инфо.Описание + "'" + Символы.ПС + "ИмяМодуля='" + Инфо.ИмяМодуля + "'" + Символы.ПС + "НомерСтроки=" + Инфо.НомерСтроки + Символы.ПС + "ИсходнаяСтрока='" + Инфо.ИсходнаяСтрока + "'";
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("При проверке уведомления произошли ошибки: " + СтрОписание, "", ""));
	КонецПопытки;
	
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Иначе 
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить().ДанныеУведомления;
	Титульная = ДанныеУведомления.Форма2017_1_Титульная;
	ОсновныеСведения.Вставить("КодНО", Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Титульная.ПрПодп);
	ОсновныеСведения.Вставить("ТлфПодп", Титульная.Тлф);
	ОсновныеСведения.Вставить("ИННТитул", Титульная.ИННШапка);
	ОсновныеСведения.Вставить("ИННФЛ", Титульная.ИННШапка);
	ОсновныеСведения.Вставить("НаимДок",Титульная.НаимДок);
	Если ЗначениеЗаполнено(ДанныеУведомления.Форма2017_1_Лист2.ЧислНаемРаб) Тогда 
		ОсновныеСведения.Вставить("ЧислНаемРаб",Формат(ДанныеУведомления.Форма2017_1_Лист2.ЧислНаемРаб, "ЧН=0; ЧГ="));
	Иначе
		ОсновныеСведения.Вставить("ЧислНаемРаб","0");
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеУведомления.Форма2017_1_Лист2.НалСтавка) Тогда 
		ОсновныеСведения.Вставить("НалСтавка", Строка(ДанныеУведомления.Форма2017_1_Лист2.НалСтавка));
	ИначеЕсли ДанныеУведомления.Форма2017_1_Лист2.Свойство("ВыводитьНольНаПечать") И ДанныеУведомления.Форма2017_1_Лист2.ВыводитьНольНаПечать = Истина Тогда 
		ОсновныеСведения.Вставить("НалСтавка", "0");
	Иначе 
		ОсновныеСведения.Вставить("НалСтавка", "");
	КонецЕсли;
	ОсновныеСведения.Вставить("КолМес",Формат(Титульная.КолМес, "ЧЦ=2; ЧН=0; ЧВН=; ЧГ="));
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ЗаполнитьДанными_Форма2017_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2017_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	ЗаполнитьЛистыА(ДанныеУведомления, ДеревоВыгрузки);
	ЗаполнитьЛистыБ(ДанныеУведомления, ДеревоВыгрузки);
	ЗаполнитьЛистыВ(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Процедура ЗаполнитьЛистыА(ДанныеУведомления, ДеревоВыгрузки)
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	Узел_СвМестПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвМестПД");
	
	ЛистыА = ДанныеМногостраничногоРазделаВТЗ(ДанныеУведомления.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистА);
	ЛистыАСвернутые = ДанныеМногостраничногоРазделаВТЗ(ДанныеУведомления.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистА).Скопировать(, "КодРегион,КодНОУчет");
	ЛистыАСвернутые.Свернуть("КодРегион,КодНОУчет");
	Для Каждого Стр Из ЛистыАСвернутые Цикл 
		Если Не ЗначениеЗаполнено(Стр.КодРегион) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СвМестПД);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СвОбДеят2, "КодРегион", Стр.КодРегион);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СвОбДеят2, "КодНОУчет", Стр.КодНОУчет);
		
		Если Не ЗначениеЗаполнено(Стр.КодНОУчет) Тогда 
			ОтборСтроки = ЛистыА.НайтиСтроки(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр));
			Узел_АдрМНОбПП = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_СвОбДеят2, "АдрОбРФ");
			Для Каждого Данные Из ОтборСтроки Цикл
				НовыйУзел_АдрМНОбПП = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_АдрМНОбПП);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "Индекс", Данные.Индекс);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "КодРегион", Данные.КодРегионАддр);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "Район", Данные.Район);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "Город", Данные.Город);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "НаселПункт", Данные.НаселПункт);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "Улица", Данные.Улица);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "Дом", Данные.Дом);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "Корпус", Данные.Корпус);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_АдрМНОбПП, "Кварт", Данные.Кварт);
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(Узел_АдрМНОбПП);
		КонецЕсли;
	КонецЦикла;
	
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СвМестПД);
КонецПроцедуры

Процедура ЗаполнитьЛистыБ(ДанныеУведомления, ДеревоВыгрузки)
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	Узел_СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвТСДеят1");
	
	ЛистыБ2 = ДанныеМногостраничногоРазделаВТЗ(ДанныеУведомления.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистБ);
	ЛистыБ1 = ДанныеМногостраничногоРазделаВТЗ(ДанныеУведомления.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистБ).Скопировать(, "КодРегион,КодНОУчет,КодТС");
	ЛистыБ1.Свернуть("КодРегион,КодНОУчет,КодТС");
	ЛистыБ0 = ДанныеМногостраничногоРазделаВТЗ(ДанныеУведомления.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистБ).Скопировать(, "КодРегион,КодНОУчет");
	ЛистыБ0.Свернуть("КодРегион,КодНОУчет");
	
	Для Каждого Стр0 Из ЛистыБ0 Цикл 
		Если Не ЗначениеЗаполнено(Стр0.КодРегион) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_СвТСДеят1 = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СвТСДеят1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СвТСДеят1, "КодРегион", Стр0.КодРегион);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СвТСДеят1, "КодНОУчет", Стр0.КодНОУчет);
		
		ОтборСтроки1 = ЛистыБ1.НайтиСтроки(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр0));
		Узел_КодТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_СвТСДеят1, "КодТС");
		Для Каждого Стр1 Из ОтборСтроки1 Цикл
			Если Не ЗначениеЗаполнено(Стр1.КодТС) Тогда 
				Продолжить;
			КонецЕсли;
		
			НовыйУзел_КодТС = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_КодТС);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_КодТС, "КодТС", Стр1.КодТС);
			
			ОтборСтроки2 = ЛистыБ2.НайтиСтроки(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр1));
			Узел_СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_КодТС, "СведТС");
			Для Каждого Стр2 Из ОтборСтроки2 Цикл
				НовыйУзел_СведТС = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведТС);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведТС, "ИдНомТС", Стр2.ИдНомТС);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведТС, "МаркаТС", Стр2.МаркаТС);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведТС, "РегЗнакТС", Стр2.РегЗнакТС);
				Если Стр1.КодТС = "01" Или Стр1.КодТС = "04" Тогда 
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведТС, "ГрузТС", Стр2.ГрузТС);
				КонецЕсли;
				Если Стр1.КодТС = "02" Или Стр1.КодТС = "03" Тогда 
					Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведТС, "КолПосадМест", Стр2.КолПосадМест);
				КонецЕсли;
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(Узел_СведТС);
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Узел_КодТС);
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СвТСДеят1);
КонецПроцедуры

Процедура ЗаполнитьЛистыВ(ДанныеУведомления, ДеревоВыгрузки)
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_ЗПУСН = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "ЗПУСН");
	Узел_СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ЗПУСН, "СвОбДеят2");
	
	ЛистыВ = ДанныеМногостраничногоРазделаВТЗ(ДанныеУведомления.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистВ);
	ЛистыВСвернутые = ДанныеМногостраничногоРазделаВТЗ(ДанныеУведомления.ДанныеМногостраничныхРазделов.Форма2017_1_ЛистВ).Скопировать(, "КодРегион,КодНОУчет");
	ЛистыВСвернутые.Свернуть("КодРегион,КодНОУчет");
	Для Каждого Стр Из ЛистыВСвернутые Цикл 
		Если Не ЗначениеЗаполнено(Стр.КодРегион) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_СвОбДеят2 = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СвОбДеят2);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СвОбДеят2, "КодРегион", Стр.КодРегион);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СвОбДеят2, "КодНОУчет", Стр.КодНОУчет);
		
		ОтборСтроки = ЛистыВ.НайтиСтроки(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр));
		Узел_СведОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_СвОбДеят2, "СведОбъект");
		Для Каждого Данные Из ОтборСтроки Цикл
			НовыйУзел_СведОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведОбъект);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведОбъект, "КодОбъект", Данные.КодОбъект);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведОбъект, "ПризОбъект", Данные.ПризОбъект);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведОбъект, "ПлощОбъект", Данные.ПлощОбъект);
			
			УсловиеКодОбъектСтационарный = (Не (Данные.КодОбъект = "16" Или Данные.КодОбъект = "17" Или Данные.КодОбъект = "18" Или Данные.КодОбъект = "19"
					 Или Данные.КодОбъект = "20" Или Данные.КодОбъект = "21" Или Данные.КодОбъект = "22" Или Данные.КодОбъект = "29"));
			Если ЗначениеЗаполнено(Данные.КодРегионАддр) Или УсловиеКодОбъектСтационарный Тогда 
				Узел_АдрМНОбПП = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_СведОбъект, "АдрМНОбПП");
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "Индекс", Данные.Индекс);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "КодРегион", Данные.КодРегионАддр);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "Район", Данные.Район);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "Город", Данные.Город);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "НаселПункт", Данные.НаселПункт);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "Улица", Данные.Улица);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "Дом", Данные.Дом);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "Корпус", Данные.Корпус);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрМНОбПП, "Кварт", Данные.Кварт);
			КонецЕсли;
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Узел_СведОбъект);
	КонецЦикла;
	
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СвОбДеят2);
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СозданиеЗаполненногоУведомления

Процедура СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ПараметрыИнициализацииФормы) 
	ПараметрыИнициализацииФормы.ДанныеУведомления = Новый Структура;
	ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов = Новый Структура;
	ПараметрыИнициализацииФормы.ДанныеДопСтрок = Новый Структура;
	ПараметрыИнициализацииФормы.ДанныеДопСтрокСтраницы = Новый Структура;
	ПараметрыИнициализацииФормы.ИдентификаторыОбычныхСтраниц = Новый Структура;
	
	Разложение = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрыИнициализацииФормы.ИмяФормы, ".");
	
	Для Каждого Стр Из ПараметрыИнициализацииФормы.ДеревоСтраниц.Строки Цикл
		Если Стр.Многостраничность Тогда 
			Если Стр.Многострочность Тогда
				МнгСтр = Стр.Строки[0];
				
				СтруктураМногостраничнойСтраницы = Новый Структура("УИД", МнгСтр.УИД);
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(МнгСтр.ИмяМакета).ПолучитьОбласть("ОсновнаяЧасть");
				Для Каждого Обл Из МакетДокумента.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
						И Обл.СодержитЗначение Тогда 
						
						СтруктураМногостраничнойСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				
				Если МнгСтр.Строки.Количество() > 0 Тогда
					СформироватьСтруктуруДанныхУведомленияРекНовогоОбразца(ПараметрыИнициализацииФормы, Разложение[1], МнгСтр);
				КонецЕсли;
				
				СЗ = Новый СписокЗначений;
				СЗ.Добавить(СтруктураМногостраничнойСтраницы);
				ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов.Вставить(МнгСтр.ИДНаименования, СЗ);
				
				Для Каждого МногострочныйЭлемент Из МнгСтр.МногострочныеЧасти Цикл
					ТЗ = Новый ТаблицаЗначений;
					ТЗ.Колонки.Добавить("УИД");
					СтрокаДанных = Новый Структура;
					МакетМногострочки = Отчеты[Разложение[1]].ПолучитьМакет(МнгСтр.ИмяМакета).ПолучитьОбласть("Str_"+МногострочныйЭлемент.Значение);
					Для Каждого Обл Из МакетМногострочки.Области Цикл 
						Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
							И Обл.СодержитЗначение Тогда 
							
							ТЗ.Колонки.Добавить(Обл.Имя);
							СтрокаДанных.Вставить(Обл.Имя);
						КонецЕсли;
					КонецЦикла;
					
					ПараметрыИнициализацииФормы.ДанныеДопСтрок.Вставить(МногострочныйЭлемент.Значение, ПоместитьВоВременноеХранилище(ТЗ, Новый УникальныйИдентификатор));
					СЗ = Новый СписокЗначений;
					СЗ.Добавить(СтрокаДанных);
					ПараметрыИнициализацииФормы.ДанныеДопСтрокСтраницы.Вставить(МногострочныйЭлемент.Значение, СЗ);
				КонецЦикла;
			Иначе
				МнгСтр = Стр.Строки[0];
				
				СтруктураМногостраничнойСтраницы = Новый Структура("УИД", МнгСтр.УИД);
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(МнгСтр.ИмяМакета);
				Для Каждого Обл Из МакетДокумента.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
						И Обл.СодержитЗначение Тогда 
						
						СтруктураМногостраничнойСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				
				Если МнгСтр.Строки.Количество() > 0 Тогда
					СформироватьСтруктуруДанныхУведомленияРекНовогоОбразца(ПараметрыИнициализацииФормы, Разложение[1], МнгСтр);
				КонецЕсли;
				
				СЗ = Новый СписокЗначений;
				СЗ.Добавить(СтруктураМногостраничнойСтраницы);
				ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов.Вставить(МнгСтр.ИДНаименования, СЗ);
			КонецЕсли;
		Иначе
			ПараметрыИнициализацииФормы.ИдентификаторыОбычныхСтраниц.Вставить(Стр.ИДНаименования, Стр.УИД);
			Если Стр.Многострочность Тогда
				СтруктураСтраницы = Новый Структура;
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(Стр.ИмяМакета).ПолучитьОбласть("ОсновнаяЧасть");
				Для Каждого Обл Из МакетДокумента.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
						И Обл.СодержитЗначение Тогда 
						
						СтруктураСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				ПараметрыИнициализацииФормы.ДанныеУведомления.Вставить(Стр.ИДНаименования, СтруктураСтраницы);
				
				Для Каждого МногострочныйЭлемент Из Стр.МногострочныеЧасти Цикл
					ТЗ = Новый ТаблицаЗначений;
					ТЗ.Колонки.Добавить("УИД");
					СтрокаДанных = Новый Структура;
					МакетМногострочки = Отчеты[Разложение[1]].ПолучитьМакет(Стр.ИмяМакета).ПолучитьОбласть("Str_"+МногострочныйЭлемент.Значение);
					Для Каждого Обл Из МакетМногострочки.Области Цикл 
						Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
							И Обл.СодержитЗначение Тогда 
							
							ТЗ.Колонки.Добавить(Обл.Имя);
							СтрокаДанных.Вставить(Обл.Имя);
						КонецЕсли;
					КонецЦикла;
					
					ПараметрыИнициализацииФормы.ДанныеДопСтрок.Вставить(МногострочныйЭлемент.Значение, ПоместитьВоВременноеХранилище(ТЗ, Новый УникальныйИдентификатор));
					СЗ = Новый СписокЗначений;
					СЗ.Добавить(СтрокаДанных);
					ПараметрыИнициализацииФормы.ДанныеДопСтрокСтраницы.Вставить(МногострочныйЭлемент.Значение, СЗ);
				КонецЦикла;
			Иначе
				СтруктураСтраницы = Новый Структура;
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(Стр.ИмяМакета).ПолучитьОбласть("ОсновнаяЧасть");
				Для Каждого Обл Из МакетДокумента.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
						И Обл.СодержитЗначение Тогда 
						
						СтруктураСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				ПараметрыИнициализацииФормы.ДанныеУведомления.Вставить(Стр.ИДНаименования, СтруктураСтраницы);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьСтруктуруДанныхУведомленияРекНовогоОбразца(ПараметрыИнициализацииФормы, ИмяОтчета, Строка)
	Для Каждого ПодчМнг Из Строка.Строки Цикл
		Если ПодчМнг.Строки.Количество() > 0 Тогда
			СформироватьСтруктуруДанныхУведомленияРекНовогоОбразца(ПараметрыИнициализацииФормы, ИмяОтчета, ПодчМнг);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодчМнг.ИДНаименования) Тогда
			Если ПодчМнг.Многострочность Тогда
				Для Каждого МногострочныйЭлемент Из ПодчМнг.МногострочныеЧасти Цикл
					ТЗ = Новый ТаблицаЗначений;
					ТЗ.Колонки.Добавить("УИД");
					СтрокаДанных = Новый Структура;
					МакетМногострочки = Отчеты[ИмяОтчета].ПолучитьМакет(ПодчМнг.ИмяМакета).ПолучитьОбласть("Str_"+МногострочныйЭлемент.Значение);
					Для Каждого Обл Из МакетМногострочки.Области Цикл 
						Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
							И Обл.СодержитЗначение Тогда 
							
							ТЗ.Колонки.Добавить(Обл.Имя);
							СтрокаДанных.Вставить(Обл.Имя);
						КонецЕсли;
					КонецЦикла;
					
					ПараметрыИнициализацииФормы.ДанныеДопСтрок.Вставить(МногострочныйЭлемент.Значение, ПоместитьВоВременноеХранилище(ТЗ, Новый УникальныйИдентификатор));
					СЗ = Новый СписокЗначений;
					СЗ.Добавить(СтрокаДанных);
					ПараметрыИнициализацииФормы.ДанныеДопСтрокСтраницы.Вставить(МногострочныйЭлемент.Значение, СЗ);
				КонецЦикла;
			КонецЕсли;
			
			СтруктураМногостраничнойСтраницыПодч = Новый Структура("УИД, УИДРодителя", ПодчМнг.УИД, УведомлениеОСпецрежимахНалогообложения.ПолучитьУИДРодителя(ПодчМнг));
			МакетДокумента = Отчеты[ИмяОтчета].ПолучитьМакет(ПодчМнг.ИмяМакета);
			Для Каждого Обл Из МакетДокумента.Области Цикл 
				Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
					И Обл.СодержитЗначение Тогда 
					
					СтруктураМногостраничнойСтраницыПодч.Вставить(Обл.Имя);
				КонецЕсли;
			КонецЦикла;
			
			СЗ = Новый СписокЗначений;
			СЗ.Добавить(СтруктураМногостраничнойСтраницыПодч);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов.Вставить(ПодчМнг.ИДНаименования, СЗ);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьНовоеУведомление_2017_1(Данные) Экспорт 
	Попытка
		ДокОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		
		ДокОбъект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатентаРекомендованнаяФорма;
		Данные.Свойство("Организация", ДокОбъект.Организация);
		ДокОбъект.ИмяФормы = "Форма2017_1";
		ДокОбъект.ИмяОтчета = "РегламентированноеУведомлениеПолучениеПатента";
		ДокОбъект.ДатаПодписи = ТекущаяДатаСеанса();
		ДокОбъект.Дата = ТекущаяДатаСеанса();
		Данные.Свойство("ПодписантИмя",      ДокОбъект.ПодписантИмя);
		Данные.Свойство("ПодписантФамилия",  ДокОбъект.ПодписантФамилия);
		Данные.Свойство("ПодписантОтчество", ДокОбъект.ПодписантОтчество);
		Данные.Свойство("РегистрацияВИФНС",  ДокОбъект.РегистрацияВИФНС);
		
		СтруктураПараметров = Новый Структура;
		
		ДанныеУведомления = Новый Структура;
		ДанныеМногостраничныхРазделов = Новый Структура;
		ИдентификаторыОбычныхСтраниц = Новый Структура;
		
		СтруктураПараметров.Вставить("ДеревоСтраниц", СформироватьДеревоСтраницПоДанным(Данные));
		ПараметрыИнициализацииФормы = Новый Структура;
		ПараметрыИнициализацииФормы.Вставить("ДанныеУведомления");
		ПараметрыИнициализацииФормы.Вставить("ДанныеМногостраничныхРазделов");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрок");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрокСтраницы");
		ПараметрыИнициализацииФормы.Вставить("ИдентификаторыОбычныхСтраниц");
		ПараметрыИнициализацииФормы.Вставить("ИмяФормы", "Отчет.РегламентированноеУведомлениеПолучениеПатента.Форма.Форма2017_1");
		ПараметрыИнициализацииФормы.Вставить("ДеревоСтраниц", СтруктураПараметров.ДеревоСтраниц);
		СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ПараметрыИнициализацииФормы);
		
		Пока ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистА"].Количество() < Данные.ЛистыА.Количество() Цикл 
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистА"].Добавить(ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистА"][0].Значение));
		КонецЦикла;
		Для Инд = 0 По Данные.ЛистыА.Количество() - 1 Цикл 
			ЛистаА = Данные.ЛистыА[Инд];
			ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистА"][Инд].Значение, ЛистаА);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистА"][Инд].Значение.УИД = СтруктураПараметров.ДеревоСтраниц.Строки[2].Строки[Инд].УИД;
		КонецЦикла;
		
		Пока ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистБ"].Количество() < Данные.ЛистыБ.Количество() Цикл 
			СтруктураСтраницы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистБ"][0].Значение);
			ДобавитьДополнительныеПоляАдреса(СтруктураСтраницы);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистБ"].Добавить(СтруктураСтраницы);
		КонецЦикла;
		Для Инд = 0 По Данные.ЛистыБ.Количество() - 1 Цикл 
			ЛистаБ = Данные.ЛистыБ[Инд];
			ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистБ"][Инд].Значение, ЛистаБ);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистБ"][Инд].Значение.УИД = СтруктураПараметров.ДеревоСтраниц.Строки[3].Строки[Инд].УИД;
		КонецЦикла;
		
		Пока ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистВ"].Количество() < Данные.ЛистыВ.Количество() Цикл 
			СтруктураСтраницы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистВ"][0].Значение);
			ДобавитьДополнительныеПоляАдреса(СтруктураСтраницы);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистВ"].Добавить(СтруктураСтраницы);
		КонецЦикла;
		Для Инд = 0 По Данные.ЛистыВ.Количество() - 1 Цикл 
			ЛистаВ = Данные.ЛистыВ[Инд];
			ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистВ"][Инд].Значение, ЛистаВ);
			ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов["Форма2017_1_ЛистВ"][Инд].Значение.УИД = СтруктураПараметров.ДеревоСтраниц.Строки[4].Строки[Инд].УИД;
		КонецЦикла;
		
		ДобавитьДополнительныеПоляАдреса(ПараметрыИнициализацииФормы.ДанныеУведомления["Форма2017_1_Титульная"]);
		ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеУведомления["Форма2017_1_Титульная"], Данные.Стр01);
		ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеУведомления["Форма2017_1_Лист2"], Данные.Стр02);
		
		СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов);
		СтруктураПараметров.Вставить("ДанныеУведомления", ПараметрыИнициализацииФормы.ДанныеУведомления);
		СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ПараметрыИнициализацииФормы.ИдентификаторыОбычныхСтраниц);
		СтруктураПараметров.Вставить("ДанныеДопСтрокБД", Новый Структура);
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
		Если Данные.Свойство("ДанныеПомощникаЗаполнения") Тогда
			СтруктураПараметров.Вставить("ДанныеПомощникаЗаполнения", Данные.ДанныеПомощникаЗаполнения);
		КонецЕсли;
		ДокОбъект.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		
		ДокОбъект.Записать();
		Возврат ДокОбъект.Ссылка;
	Исключение
	КонецПопытки;
КонецФункции

Функция СформироватьДеревоСтраницПоДанным(Данные)
	Если Данные.ЛистыА.Количество() = 0 Тогда
		Данные.ЛистыА.Добавить();
	КонецЕсли;
	Если Данные.ЛистыБ.Количество() = 0 Тогда
		Данные.ЛистыБ.Добавить();
	КонецЕсли;
	Если Данные.ЛистыВ.Количество() = 0 Тогда
		Данные.ЛистыВ.Добавить();
	КонецЕсли;
	
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	КорневойУровень = ДеревоСтраниц.Строки;
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2017_1_Титульная";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Форма2017_1_Титульная";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист 2";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2017_1_Лист2";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Форма2017_1_Лист2";
	
	СтрРег = КорневойУровень.Добавить();
	СтрРег.Наименование = "Листы А";
	СтрРег.ИндексКартинки = 1;
	СтрРег.Многостраничность = Истина;
	СтрРег.Многострочность = Истина;
	
	Инд = 0;
	Для Каждого Элт Из Данные.ЛистыА Цикл 
		Инд = Инд + 1;
		СтрРег0 = СтрРег.Строки.Добавить();
		СтрРег0.Наименование = "Стр. " + Инд;
		СтрРег0.ИндексКартинки = 1;
		СтрРег0.ИмяМакета = "Форма2017_1_ЛистА";
		СтрРег0.Многостраничность = Истина;
		СтрРег0.Многострочность = Ложь;
		СтрРег0.УИД = Новый УникальныйИдентификатор;
		СтрРег0.ИДНаименования = "Форма2017_1_ЛистА";
	КонецЦикла;
	
	СтрРег = КорневойУровень.Добавить();
	СтрРег.Наименование = "Листы Б";
	СтрРег.ИндексКартинки = 1;
	СтрРег.Многостраничность = Истина;
	СтрРег.Многострочность = Истина;
	
	Инд = 0;
	Для Каждого Элт Из Данные.ЛистыБ Цикл 
		Инд = Инд + 1;
		СтрРег0 = СтрРег.Строки.Добавить();
		СтрРег0.Наименование = "Стр. " + Инд;
		СтрРег0.ИндексКартинки = 1;
		СтрРег0.ИмяМакета = "Форма2017_1_ЛистБ";
		СтрРег0.Многостраничность = Истина;
		СтрРег0.Многострочность = Ложь;
		СтрРег0.УИД = Новый УникальныйИдентификатор;
		СтрРег0.ИДНаименования = "Форма2017_1_ЛистБ";
	КонецЦикла;
	
	СтрРег = КорневойУровень.Добавить();
	СтрРег.Наименование = "Листы В";
	СтрРег.ИндексКартинки = 1;
	СтрРег.Многостраничность = Истина;
	СтрРег.Многострочность = Истина;
	
	Инд = 0;
	Для Каждого Элт Из Данные.ЛистыВ Цикл
		Инд = Инд + 1;
		СтрРег0 = СтрРег.Строки.Добавить();
		СтрРег0.Наименование = "Стр. " + Инд;
		СтрРег0.ИндексКартинки = 1;
		СтрРег0.ИмяМакета = "Форма2017_1_ЛистВ";
		СтрРег0.Многостраничность = Истина;
		СтрРег0.Многострочность = Ложь;
		СтрРег0.УИД = Новый УникальныйИдентификатор;
		СтрРег0.ИДНаименования = "Форма2017_1_ЛистВ";
	КонецЦикла;
	
	Возврат ДеревоСтраниц;
КонецФункции

Процедура ДобавитьДополнительныеПоляАдреса(СтруктураЗаполнения)
	
	СтруктураЗаполнения.Вставить("АдресXML");
	СтруктураЗаполнения.Вставить("Адрес9зпт");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли