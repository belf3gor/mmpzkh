#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеПостановкаСнятиеВКачествеАгента.Форма.Форма2017_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "Форму уведомления о контролируемых иностранных компаниях в соответствии с приказом ФНС России от 20.03.2017 № ММВ-7-14/222@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ПечатьСразу_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат СформироватьМакет_Форма2017_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2017_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "UT_POSTSNNALAG";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если Не ЗначениеЗаполнено(Титульная.ИННЮЛ) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан ИНН на титульном листе", "Титульная", "ИННЮЛ"));
	ИначеЕсли СтрДлина(СокрЛП(Титульная.ИННЮЛ)) <> 10 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан ИНН на титульном листе", "Титульная", "ИННЮЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КПП) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан КПП на титульном листе", "Титульная", "КПП"));
	ИначеЕсли СтрДлина(СокрЛП(Титульная.КПП)) <> 9 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан КПП на титульном листе", "Титульная", "КПП"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ОГРН) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан ОГРН на титульном листе", "Титульная", "ОГРН"));
	ИначеЕсли СтрДлина(СокрЛП(Титульная.ОГРН)) <> 13 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан ОГРН на титульном листе", "Титульная", "ОГРН"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый орган", "Титульная", "КодНО"));
	ИначеЕсли СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак подписанта", "Титульная", "ПрПодп"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КоличНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано количество налоговых органов", "Титульная", "КоличНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрПост) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак", "Титульная", "ПрПост"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Фамилия) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана фамилия подписанта", "Титульная", "Фамилия"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Имя) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано имя подписанта", "Титульная", "Имя"));
	КонецЕсли;
	Если Титульная.ПрПодп = "2" И (Не ЗначениеЗаполнено(Титульная.НаимДок)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	
	ПрПост = Титульная.ПрПост;
	Для Каждого ДопЛист Из Данные.ДанныеМногостраничныхРазделов.СведМО Цикл 
		ДопЛистЗначение = ДопЛист.Значение;
		Если Не ЗначениеЗаполнено(ДопЛистЗначение.КодНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код налогового органа на доп.странице", "СведМО", "КодНО", ДопЛистЗначение.УИД));
		ИначеЕсли СтрДлина(СокрЛП(ДопЛистЗначение.КодНО)) <> 4 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан код налогового органа на доп.странице", "СведМО", "КодНО", ДопЛистЗначение.УИД));
		КонецЕсли;
		Если (ПрПост = "2" Или ПрПост = "3") И (Не ЗначениеЗаполнено(ДопЛистЗначение.КПП)) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан КПП на доп.странице", "СведМО", "КПП", ДопЛистЗначение.УИД));
		ИначеЕсли (ПрПост = "2" Или ПрПост = "3") И (СтрДлина(СокрЛП(ДопЛистЗначение.КПП)) <> 9) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан КПП на доп.странице", "СведМО", "КПП", ДопЛистЗначение.УИД));
		КонецЕсли;
		Если ПрПост = "3" И Не ЗначениеЗаполнено(ДопЛистЗначение.ПрИзм) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак на доп.странице", "СведМО", "ПрИзм", ДопЛистЗначение.УИД));
		КонецЕсли;
		
		Если ПрПост = "3" Или ПрПост = "1" Тогда 
			ДопСтроки = Данные.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", ДопЛистЗначение.УИД));
			ИндДС = 0;
			Для Каждого ДопСтрока Из ДопСтроки Цикл 
				ИндДС = ИндДС + 1;
				Если Не ЗначениеЗаполнено(ДопСтрока.ОКТМО) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано ОКТМО", "СведМО", "ОКТМО___" + ИндДС, ДопЛистЗначение.УИД));
				ИначеЕсли СтрДлина(СокрЛП(ДопСтрока.ОКТМО)) <> 8 И СтрДлина(СокрЛП(ДопСтрока.ОКТМО)) <> 11 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указано ОКТМО", "СведМО", "ОКТМО___" + ИндДС, ДопЛистЗначение.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Возврат ТаблицаОшибок;
КонецФункции

Процедура Проверить_Форма2017_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Ложь);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПрПодп);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИННЮЛ);
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульная.ИННЮЛ);
	ОсновныеСведения.Вставить("ПрПост", Данные.ДанныеУведомления.Титульная.ПрПост);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ЗаполнитьДанными_Форма2017_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2017_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Процедура ДополнитьПараметры(Параметры)
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если Стр.Тип = "П" И Стр.Многострочность И ЗначениеЗаполнено(Стр.Ключ) Тогда 
				Многострочность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеДопСтрокБД.Свойство(Стр.Раздел, Многострочность)
					И ТипЗнч(Многострочность) = Тип("ТаблицаЗначений") Тогда
					
					СтрокиМнгстр = Многострочность.НайтиСтроки(Новый Структура("УИД", УИДРодителя));
					Для Каждого СтрокаМнгстр Из СтрокиМнгстр Цикл
						НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
						НовУзел.Значение = СтрокаМнгстр[Стр.Ключ];
					КонецЦикла;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			ИначеЕсли Стр.Многострочность = Истина Тогда 
				Многострочность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеДопСтрокБД.Свойство(Стр.Раздел, Многострочность)
					И ТипЗнч(Многострочность) = Тип("ТаблицаЗначений") Тогда
					
					СтрокиМнгстр = Многострочность.НайтиСтроки(Новый Структура("УИД", УИДРодителя));
					Для Каждого СтрокаМнгстр Из СтрокиМнгстр Цикл
						НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
						НовУзел.Многострочность = Ложь;
						ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаМнгстр), УИДРодителя)
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПечатьСразу_Форма2017_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2017_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция СформироватьМакет_Форма2017_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Процедура ПоложитьВОбласти(Макет, Данные)
	ЗначОбл = Неопределено;
	Для Каждого Обл Из Макет.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
			Если Данные.Свойство(Обл.Имя, ЗначОбл) Тогда 
				Обл.Значение = ЗначОбл;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИННЮЛ", СтруктураПараметров.ДанныеУведомления.Титульная.ИННЮЛ);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 1;
	МакетПФ = Отчеты.РегламентированноеУведомлениеПостановкаСнятиеВКачествеАгента.ПолучитьМакет("Печать_Форма2017_1_Титульная");
	ПоложитьВОбласти(МакетПФ, СтруктураПараметров.ДанныеУведомления.Титульная);
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	НомСтр = НомСтр + 1;
	
	ТекЧастьСведМО = 1;
	МакетПФ = Отчеты.РегламентированноеУведомлениеПостановкаСнятиеВКачествеАгента.ПолучитьМакет("Печать_Форма2017_1_СведМО");
	ПоложитьВОбласти(МакетПФ, ИННКПП);
	Для Каждого Л1 Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СведМО Цикл 
		Если Не ЗначениеЗаполнено(Л1.Значение.КПП) Тогда 
			Прервать;
		КонецЕсли;
		
		Если ТекЧастьСведМО = 4 Тогда
			МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=");
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			МакетПФ = Отчеты.РегламентированноеУведомлениеПостановкаСнятиеВКачествеАгента.ПолучитьМакет("Печать_Форма2017_1_СведМО");
			ПоложитьВОбласти(МакетПФ, ИННКПП);
			НомСтр = НомСтр + 1;
			ТекЧастьСведМО = 1;
		КонецЕсли;
		
		МакетПФ.Области["КПП_"+ТекЧастьСведМО].Значение = Л1.Значение.КПП;
		МакетПФ.Области["КодНО_"+ТекЧастьСведМО].Значение = Л1.Значение.КодНО;
		МакетПФ.Области["ПрИзм_"+ТекЧастьСведМО].Значение = Л1.Значение.ПрИзм;
		
		ДопСтроки = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", Л1.Значение.УИД));
		Инд = ДопСтроки.ВГраница();
		Пока Инд >= 0 Цикл 
			Если Не ЗначениеЗаполнено(ДопСтроки[Инд].ОКТМО) Тогда 
				ДопСтроки.Удалить(Инд);
			КонецЕсли;
			Инд = Инд - 1;
		КонецЦикла;
		
		ПорНомДопСтр = 1;
		Для Каждого Стр Из ДопСтроки Цикл
			Если ПорНомДопСтр = 11 Тогда
				ПорНомДопСтр = 1;
				ТекЧастьСведМО = ТекЧастьСведМО + 1;
				Если ТекЧастьСведМО = 4 Тогда
					МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=");
					ПечатнаяФорма.Вывести(МакетПФ);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
					ТекЧастьСведМО = 1;
					МакетПФ = Отчеты.РегламентированноеУведомлениеПостановкаСнятиеВКачествеАгента.ПолучитьМакет("Печать_Форма2017_1_СведМО");
					ПоложитьВОбласти(МакетПФ, ИННКПП);
					НомСтр = НомСтр + 1;
				КонецЕсли;
				МакетПФ.Области["КПП_"+ТекЧастьСведМО].Значение = Л1.Значение.КПП;
				МакетПФ.Области["КодНО_"+ТекЧастьСведМО].Значение = Л1.Значение.КодНО;
				МакетПФ.Области["ПрИзм_"+ТекЧастьСведМО].Значение = Л1.Значение.ПрИзм;
			КонецЕсли;
			МакетПФ.Области["ОКТМО_"+ТекЧастьСведМО+"_"+ПорНомДопСтр].Значение = Стр.ОКТМО;
			ПорНомДопСтр = ПорНомДопСтр + 1;
		КонецЦикла;
		
		ТекЧастьСведМО = ТекЧастьСведМО + 1;
	КонецЦикла;
	
	МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=");
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
