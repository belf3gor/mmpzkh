
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма, Неопределено - Форма отчета или форма настроек отчета.
//       Неопределено когда вызов без контекста.
//   КлючВарианта - Строка, Неопределено - Имя предопределенного
//       или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов без контекста.
//   Настройки - Структура - Настройки общей формы отчета (для изменения).
//       См. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Булево - Признак отказа от создания формы.
//      См. описание одноименного параметра "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//   СтандартнаяОбработка - Булево - Признак выполнения стандартной (системной) обработки события.
//      См. описание одноименного параметра "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
// См. также:
//   Процедура для вывода добавленных команд в форму: ОтчетыСервер.ВывестиКоманду().
//   Глобальный обработчик этого события: ОтчетыПереопределяемый.ПриСозданииНаСервере().
//
// Пример добавления команды:
//    Команда = Форма.Команды.Добавить("<ИмяКоманды>");
//    Команда.Действие  = "Подключаемый_Команда";
//    Команда.Заголовок = НСтр("ru = '<Представление команды...>'");
//    ОтчетыСервер.ВывестиКоманду(Форма, Команда, "<ВидГруппы>");
// Обработчик команды пишется в процедуре ОтчетыКлиентПереопределяемый.ОбработчикКоманды.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Команда = Форма.Команды.Добавить("ЗапроситьВыделенныеДанные");
	Команда.Действие  = "Подключаемый_Команда";
	Команда.Заголовок = НСтр("ru = 'Запросить из ЕГАИС'");
	
	Кнопка = Форма.Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Форма.Элементы.ОтчетТабличныйДокументКонтекстноеМеню);
	Кнопка.ИмяКоманды = Команда.Имя;
	
	Форма.ПостоянныеКоманды.Добавить(Команда.Имя);
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиСводногоОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	СписокОтчетов    = ОтчетыЕГАИС.ЗначениеПараметраКомпоновкиДанных(НастройкиСводногоОтчета, "ОтчетЕГАИС");
	ТолькоОтклонения = ОтчетыЕГАИС.ЗначениеПараметраКомпоновкиДанных(НастройкиСводногоОтчета, "ТолькоОтклонения");
	
	ФормируемыеОтчеты = ПодготовитьФормируемыеОтчеты(СписокОтчетов);
	
	ВнешниеНаборыДанныхСводногоОтчета = Новый Структура;
	
	Для Каждого ЭлементСтруктуры Из НастройкиСводногоОтчета.Структура Цикл
		
		Если ТипЗнч(ЭлементСтруктуры) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
			
			Если ФормируемыеОтчеты.Найти(ЭлементСтруктуры.ИдентификаторОбъекта, "ИмяОтчета") <> Неопределено Тогда
				
				НастройкиОтчета = ЭлементСтруктуры.Настройки;
				НастройкиОтчета.ДополнительныеСвойства.Вставить("ИмяОтчета", ЭлементСтруктуры.ИдентификаторОбъекта);
				
				НастройкиОтчета.ПараметрыДанных.УстановитьЗначениеПараметра("ОтчетЕГАИС", СписокОтчетов);
				
				Если НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТолькоОтклонения")) <> Неопределено Тогда
					НастройкиОтчета.ПараметрыДанных.УстановитьЗначениеПараметра("ТолькоОтклонения", ТолькоОтклонения);
				КонецЕсли;
				
				ВнешниеНаборыДанных = Неопределено;
				ОтчетыЕГАИС.ПриКомпоновкеРезультата(НастройкиОтчета, ВнешниеНаборыДанных);
				
				Если ТипЗнч(ВнешниеНаборыДанных) = Тип("Структура") Тогда
					Для Каждого КлючИЗначение Из ВнешниеНаборыДанных Цикл
						ВнешниеНаборыДанныхСводногоОтчета.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЭлементСтруктуры.Использование = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиСводногоОтчета);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиСводногоОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанныхСводногоОтчета, ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаВТабличныйДокумент.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает таблицу формируемых отчетов.
//
Функция ПодготовитьФормируемыеОтчеты(СписокОтчетов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокОтчетов",                        СписокОтчетов);
	Запрос.УстановитьПараметр("ИмяОтчетаДвиженияМеждуРегистрами",     Метаданные.Отчеты.ДвиженияМеждуРегистрамиЕГАИС.Имя);
	Запрос.УстановитьПараметр("ИмяОтчетаДвиженияПоСправке2",          Метаданные.Отчеты.ДвиженияПоСправке2ЕГАИС.Имя);
	Запрос.УстановитьПараметр("ИмяОтчетаИнформацияОбОрганизации",     Метаданные.Отчеты.ИнформацияОбОрганизацииЕГАИС.Имя);
	Запрос.УстановитьПараметр("ИмяОтчетаНеобработанныеТТН",           Метаданные.Отчеты.НеобработанныеТТНЕГАИС.Имя);
	Запрос.УстановитьПараметр("ИмяОтчетаОбработанныеЧеки",            Метаданные.Отчеты.ОбработанныеЧекиЕГАИС.Имя);
	Запрос.УстановитьПараметр("ИмяОтчетаОстаткиАлкогольнойПродукции", Метаданные.Отчеты.ОстаткиАлкогольнойПродукцииЕГАИС.Имя);
	Запрос.УстановитьПараметр("ИмяОтчетаОстаткиАкцизныхМарок",        Метаданные.Отчеты.ОстаткиАкцизныхМарокЕГАИС.Имя);
	Запрос.УстановитьПараметр("ИмяОтчетаИсторияСправок2",             Метаданные.Отчеты.ИсторияСправок2ЕГАИС.Имя);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетЕГАИС.Ссылка КАК Ссылка,
	|	ОтчетЕГАИС.ВидДокумента КАК ВидДокумента,
	|	ВЫБОР
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаДвиженияМеждуРегистрами)
	|			ТОГДА &ИмяОтчетаДвиженияМеждуРегистрами
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаДвиженияПоСправке2)
	|			ТОГДА &ИмяОтчетаДвиженияПоСправке2
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаИнформацияОбОрганизации)
	|			ТОГДА &ИмяОтчетаИнформацияОбОрганизации
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаНеобработанныеТТН)
	|			ТОГДА &ИмяОтчетаНеобработанныеТТН
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаОбработанныеЧеки)
	|			ТОГДА &ИмяОтчетаОбработанныеЧеки
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаОстаткиВРегистре3)
	|			ТОГДА &ИмяОтчетаОстаткиАкцизныхМарок
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаИсторияСправок2)
	|			ТОГДА &ИмяОтчетаИсторияСправок2
	|		КОГДА ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаОстаткиВРегистре1)
	|				ИЛИ ОтчетЕГАИС.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЗапросОтчетаОстаткиВРегистре2)
	|			ТОГДА &ИмяОтчетаОстаткиАлкогольнойПродукции
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяОтчета
	|ИЗ
	|	Документ.ОтчетЕГАИС КАК ОтчетЕГАИС
	|ГДЕ
	|	ОтчетЕГАИС.Ссылка В(&СписокОтчетов)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли