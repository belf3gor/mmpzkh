#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораФормыОтчета";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеЗачетНалога.Форма.Форма2017_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 14.02.2017 N ММВ-7-8/182@";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2018_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 30.11.2018 № ММВ-7-8/670@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Возврат ПечатьСразу_Форма2017_1(Объект);
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Возврат СформироватьМакет_Форма2017_1(Объект);
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2018_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2018_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Попытка
		Данные = Объект.ДанныеУведомления.Получить();
		Проверить_Форма2017_1(Данные, УникальныйИдентификатор);
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
	Исключение
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
	КонецПопытки;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2018_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2018_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Данные.Вставить("Организация", Объект.Организация);
		Данные.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
		Данные.Вставить("ПодписантИмя", Объект.ПодписантИмя);
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2018_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Данные.Вставить("Организация", Объект.Организация);
		Данные.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
		Данные.Вставить("ПодписантИмя", Объект.ПодписантИмя);
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2018_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "UT_ZZIUN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2018_1(СведенияОтправки)
	Префикс = "UT_ZZIUN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ИНН))
			Или СтрДлина(СокрЛП(Титульная.ИНН)) <> 10 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КПП))
			Или СтрДлина(СокрЛП(Титульная.КПП)) <> 9 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "1" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерЗаявления) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан номер заявления", "Титульная", "НомерЗаявления"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО))
		Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации/ФИО физлица", "Титульная", "Наименование"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Пункт) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт статьи НК РФ", "Титульная", "Пункт"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Сумма) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана сумма к зачету", "Титульная", "Сумма"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Пункт) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт статьи НК РФ", "Титульная", "Пункт"));
	Иначе 
		МассивДляПроверки = Новый Массив;
		МассивДляПроверки.Добавить("78.");
		МассивДляПроверки.Добавить("79.");
		МассивДляПроверки.Добавить("176.");
		МассивДляПроверки.Добавить("203.");
		МассивДляПроверки.Добавить("333.40");
		Если МассивДляПроверки.Найти(СокрЛП(Титульная.Пункт) + "." + СокрЛП(Титульная.Подпункт)) = Неопределено Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Допустимы только следующие статьи НК: 78, 79, 176, 203, 333.40", "Титульная", "Пункт"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Год)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Год))
		Или (СтрДлина(СокрЛП(Титульная.Год)) <> 4)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан год", "Титульная", "Год"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Месяц)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Месяц))
		Или (СтрДлина(СокрЛП(Титульная.Месяц)) <> 2)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан период", "Титульная", "Месяц"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодПериода) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый период", "Титульная", "КодПериода"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Год2)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Год2))
		Или (СтрДлина(СокрЛП(Титульная.Год2)) <> 4)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан год", "Титульная", "Год2"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Месяц2)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Месяц2))
		Или (СтрДлина(СокрЛП(Титульная.Месяц2)) <> 2)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан период", "Титульная", "Месяц2"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодПериода2) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый период", "Титульная", "КодПериода2"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ОКТМО) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ОКТМО)) 
		Или (Не (СтрДлина(СокрЛП(Титульная.ОКТМО)) = 8 Или СтрДлина(СокрЛП(Титульная.ОКТМО)) = 11)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен ОКТМО", "Титульная", "ОКТМО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ОКТМО2) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ОКТМО2)) 
		Или (Не (СтрДлина(СокрЛП(Титульная.ОКТМО2)) = 8 Или СтрДлина(СокрЛП(Титульная.ОКТМО2)) = 11)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен ОКТМО", "Титульная", "ОКТМО2"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КБК) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КБК))
		Или (Не (СтрДлина(СокрЛП(Титульная.КБК)) = 20))Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен КБК", "Титульная", "КБК"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КБК2) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КБК2))
		Или (Не (СтрДлина(СокрЛП(Титульная.КБК2)) = 20))Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен КБК", "Титульная", "КБК2"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО1)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО1))
		Или СтрДлина(СокрЛП(Титульная.КодНО1)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан налоговый орган", "Титульная", "КодНО1"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО2)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО2))
		Или СтрДлина(СокрЛП(Титульная.КодНО2)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан налоговый орган", "Титульная", "КодНО2"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Признак) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак", "Титульная", "Признак"));
	КонецЕсли;
	
	Если Данные.ДанныеУведомления.Свойство("Лист002")
		И Не ЗначениеЗаполнено(Титульная.ИНН) Тогда
		
		Лист002 = Данные.ДанныеУведомления.Лист002;
		Если Не ЗначениеЗаполнено(Лист002.Л201) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код вида документа", "Лист002", "Л201"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л202) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указаны серия и номер документа", "Лист002", "Л202"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л203) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан орган, выдавший документ", "Лист002", "Л203"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л0204) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата выдачи документа", "Лист002", "Л0204"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.КодРегиона) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен адрес", "Лист002", "КодРегиона"));
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2018_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ИНН))
			Или СтрДлина(СокрЛП(Титульная.ИНН)) <> 10 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КПП))
			Или СтрДлина(СокрЛП(Титульная.КПП)) <> 9 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "1" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан документ представителя", "Титульная_2018", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерЗаявления) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан номер заявления", "Титульная", "НомерЗаявления"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО))
		Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации/ФИО физлица", "Титульная", "Наименование"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Пункт) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт статьи НК РФ", "Титульная", "Пункт"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Пункт) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан пункт статьи НК РФ", "Титульная", "Пункт"));
	Иначе 
		МассивДляПроверки = Новый Массив;
		МассивДляПроверки.Добавить("78.");
		МассивДляПроверки.Добавить("79.");
		МассивДляПроверки.Добавить("176.");
		МассивДляПроверки.Добавить("203.");
		МассивДляПроверки.Добавить("333.40");
		Если МассивДляПроверки.Найти(СокрЛП(Титульная.Пункт) + "." + СокрЛП(Титульная.Подпункт)) = Неопределено Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Допустимы только следующие статьи НК: 78, 79, 176, 203, 333.40", "Титульная", "Пункт"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Год)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Год))
		Или (СтрДлина(СокрЛП(Титульная.Год)) <> 4)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан год", "Титульная", "Год"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Месяц)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Месяц))
		Или (СтрДлина(СокрЛП(Титульная.Месяц)) <> 2)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан период", "Титульная", "Месяц"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодПериода) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый период", "Титульная", "КодПериода"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ОКТМО) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ОКТМО)) 
		Или (Не (СтрДлина(СокрЛП(Титульная.ОКТМО)) = 8 Или СтрДлина(СокрЛП(Титульная.ОКТМО)) = 11)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен ОКТМО", "Титульная", "ОКТМО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КБК) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КБК))
		Или (Не (СтрДлина(СокрЛП(Титульная.КБК)) = 20))Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен КБК", "Титульная", "КБК"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНОИзл)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНОИзл))
		Или СтрДлина(СокрЛП(Титульная.КодНОИзл)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан налоговый орган", "Титульная", "КодНОИзл"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрСтПлат) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан статус плательщика", "Титульная", "ПрСтПлат"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрИзлПлат) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак излишне уплаченной суммы", "Титульная", "ПрИзлПлат"));
	КонецЕсли;
	
	Если Данные.ДанныеУведомления.Свойство("Лист002")
		И Не ЗначениеЗаполнено(Титульная.ИНН) Тогда
		
		Лист002 = Данные.ДанныеУведомления.Лист002;
		Если Не ЗначениеЗаполнено(Лист002.Л201) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код вида документа", "Лист002", "Л201"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л202) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указаны серия и номер документа", "Лист002", "Л202"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л203) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан орган, выдавший документ", "Лист002", "Л203"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л0204) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата выдачи документа", "Лист002", "Л0204"));
		КонецЕсли;
	КонецЕсли;
	
	ЕстьЗаполненые = Ложь;
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.Свед Цикл 
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.КодПериода)
			И Не ЗначениеЗаполнено(Свед.Месяц)
			И Не ЗначениеЗаполнено(Свед.Год)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ЕстьЗаполненые = Истина;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак", "Свед", "ПрЗач", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.Сумма) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана сумма", "Свед", "Сумма", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КодПериода) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код периода", "Свед", "КодПериода", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.Месяц)
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.Месяц))
			Или (СтрДлина(СокрЛП(Свед.Месяц)) <> 2)Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан период", "Свед", "Месяц", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.Год)
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.Год))
			Или (СтрДлина(СокрЛП(Свед.Год)) <> 4)Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан период", "Свед", "Год", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КодНОПрПост)
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.КодНОПрПост))
			Или (СтрДлина(СокрЛП(Свед.КодНОПрПост)) <> 4)Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан налоговый орган", "Свед", "КодНОПрПост", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.ОКТМО) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.ОКТМО)) 
			Или (Не (СтрДлина(СокрЛП(Свед.ОКТМО)) = 8 Или СтрДлина(СокрЛП(Свед.ОКТМО)) = 11)) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен ОКТМО", "Свед", "ОКТМО", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КБК) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.КБК))
			Или (Не (СтрДлина(СокрЛП(Свед.КБК)) = 20))Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно заполнен КБК", "Свед", "КБК", Свед.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьЗаполненые Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнены сведения", "Свед", "ПрЗач", Данные.ДанныеМногостраничныхРазделов.Свед[0].Значение.УИД));
	КонецЕсли;
	
	Возврат ТаблицаОшибок;
КонецФункции

Процедура Проверить_Форма2017_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Иначе 
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ТлфПодп", Данные.ДанныеУведомления.Титульная.Тлф);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("НаимДок", Данные.ДанныеУведомления.Титульная.НаимДок);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2018_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Иначе 
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ТлфПодп", Данные.ДанныеУведомления.Титульная.Тлф);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("ИННФЛ", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("НаимДок", Данные.ДанныеУведомления.Титульная.НаимДок);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2018_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	ДанныеУведомления.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
	ДанныеУведомления.Вставить("ПодписантИмя", Объект.ПодписантИмя);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ЗаполнитьДанными_Форма2017_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2018_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	ДанныеУведомления.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
	ДанныеУведомления.Вставить("ПодписантИмя", Объект.ПодписантИмя);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2018_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2018_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2018_1");
	ЗаполнитьДанными_Форма2018_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2017_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2018_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_2018(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Процедура ДополнитьПараметры(Параметры)
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Месяц) Тогда 
		Месяц = Прав("00" + Параметры.ДанныеУведомления.Титульная.Месяц, 2);
	Иначе
		Месяц = "00";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Год) Тогда 
		Год = Прав("0000" + Параметры.ДанныеУведомления.Титульная.Год, 4);
	Иначе
		Год = "0000";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Месяц2) Тогда 
		Месяц2 = Прав("00" + Параметры.ДанныеУведомления.Титульная.Месяц2, 2);
	Иначе
		Месяц2 = "00";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Год2) Тогда 
		Год2 = Прав("0000" + Параметры.ДанныеУведомления.Титульная.Год2, 4);
	Иначе
		Год2 = "0000";
	КонецЕсли;
	
	Параметры.ДанныеУведомления.Титульная.Вставить("НалПериод1", Строка(Параметры.ДанныеУведомления.Титульная.КодПериода) + "." + Месяц + "." + Год);
	Параметры.ДанныеУведомления.Титульная.Вставить("НалПериод2", Строка(Параметры.ДанныеУведомления.Титульная.КодПериода2) + "." + Месяц2 + "." + Год2);
	
	НомерСтНК = Строка(Параметры.ДанныеУведомления.Титульная.Пункт);
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Подпункт) Тогда 
		НомерСтНК = НомерСтНК + "." + Строка(Параметры.ДанныеУведомления.Титульная.Подпункт);
	КонецЕсли;
	Параметры.ДанныеУведомления.Титульная.Вставить("НомерСтНК", НомерСтНК);
КонецПроцедуры

Процедура ДополнитьПараметры_2018(Параметры)
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Месяц) Тогда 
		Месяц = Прав("00" + Параметры.ДанныеУведомления.Титульная.Месяц, 2);
	Иначе
		Месяц = "00";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Год) Тогда 
		Год = Прав("0000" + Параметры.ДанныеУведомления.Титульная.Год, 4);
	Иначе
		Год = "0000";
	КонецЕсли;
	
	Параметры.ДанныеУведомления.Титульная.Вставить("НалПериодСтр", Строка(Параметры.ДанныеУведомления.Титульная.КодПериода) + "." + Месяц + "." + Год);
	
	Для Каждого Элт Из Параметры.ДанныеМногостраничныхРазделов.Свед Цикл 
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.КодПериода)
			И Не ЗначениеЗаполнено(Свед.Месяц)
			И Не ЗначениеЗаполнено(Свед.Год)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Свед.Месяц) Тогда 
			Месяц = Прав("00" + Свед.Месяц, 2);
		Иначе
			Месяц = "00";
		КонецЕсли;
		Если ЗначениеЗаполнено(Свед.Год) Тогда 
			Год = Прав("0000" + Свед.Год, 4);
		Иначе
			Год = "0000";
		КонецЕсли;
		Свед.Вставить("НалПериодСтр", Строка(Свед.КодПериода) + "." + Месяц + "." + Год);
	КонецЦикла;
	
	НомерСтНК = Строка(Параметры.ДанныеУведомления.Титульная.Пункт);
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Подпункт) Тогда 
		НомерСтНК = НомерСтНК + "." + Строка(Параметры.ДанныеУведомления.Титульная.Подпункт);
	КонецЕсли;
	Параметры.ДанныеУведомления.Титульная.Вставить("НомерСтНК", НомерСтНК);
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПечатьСразу_Форма2017_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2017_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция СформироватьМакет_Форма2017_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеЗачетНалога.ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат;
	КонецПопытки;
	
	НомСтр = НомСтр + 1;
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли КЗ.Значение = Неопределено Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, МакетПФ.Области, "-");
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧН=000; ЧВН="), "НомСтр", МакетПФ.Области, "-");
	НомСтр = НомСтр + 1;
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ИННКПП)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("ПФ_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
				Если СтрПарам.ИДНаименования = "Титульная" Тогда
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
					ПечатнаяФорма.Области.ЭлАдрес.Текст = СтруктураДанныхСтраницы.ЭлАдрес;
					Если Не ЗначениеЗаполнено(СтруктураДанныхСтраницы.НомерКорректировки) Тогда
						УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0--", "НомерКорректировки", ПечатнаяФорма.Области);
					КонецЕсли;
				КонецЕсли;
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 0;
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, "Печать_Форма2017_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, "Печать_Форма2017_1_Лист002", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Процедура НапечататьЛистыСвед(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеЗачетНалога.ПолучитьМакет("Печать_Форма2018_1_Свед");
		ОТЧ = Новый ОписаниеТипов("Число");
	Исключение
		Возврат;
	КонецПопытки;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	ТекИнд = 1;
	Для Каждого Элт Из СтруктураПараметров.ДанныеМногостраничныхРазделов.Свед Цикл
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.КодПериода)
			И Не ЗначениеЗаполнено(Свед.Месяц)
			И Не ЗначениеЗаполнено(Свед.Год)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ПФкс = "_" + ТекИнд;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ПрЗач, "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодПериода, "КодПериода" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.Месяц, "Месяц" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.Год, "Год" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ОКТМО, "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КБК, "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодНОПрПост, "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(ОТЧ.ПривестиЗначение(Свед.Сумма), "Сумма" + ПФкс, ПечатнаяФорма.Области);
		
		Если ТекИнд = 6 Тогда 
			ТекИнд = 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			ПечатнаяФорма.Вывести(МакетПФ);
			Продолжить;
		КонецЕсли;
		
		ТекИнд = ТекИнд + 1;
	КонецЦикла;
	
	Если ТекИнд <> 1 Тогда
		Пока ТекИнд <> 6 Цикл
			ПФкс = "_" + ТекИнд;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодПериода" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Месяц" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Год" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Сумма" + ПФкс, ПечатнаяФорма.Области, "-");
			ТекИнд = ТекИнд + 1;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2018_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 0;
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, "Печать_Форма2018_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	НомСтр = 2;
	НапечататьЛистыСвед(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП);
	
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, "Печать_Форма2018_1_Лист002", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Функция СформироватьПустоеДеревоСтраниц()
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	Дерево.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	Дерево.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	Стр001 = Дерево.Строки.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2017_1_Титульная";
	
	Стр001 = Дерево.Строки.Добавить();
	Стр001.Наименование = "Сведения о физическом"+символы.ПС+"лице, не являющимся"+символы.ПС+"индивидуальным предпринимателем";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Лист002";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист002";
	Стр001.МакетыПФ = "Печать_Форма2017_1_Лист002";
	
	Возврат Дерево;
КонецФункции

Процедура СоздатьЗаявлениеОЗачетеНалога(ВыборкаСтрока) Экспорт
	Попытка
		Если Не ОбщегоНазначения.ПодсистемаСуществует("РегламентированнаяОтчетность.СообщенияВКонтролирующиеОрганы.КонвертацияОтчетовПриПереходеС82") Тогда
			Возврат;
		КонецЕсли;
		
		НачатьТранзакцию();
		РегОтчет = ВыборкаСтрока.Ссылка.ПолучитьОбъект();
		Уведомление = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		Уведомление.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОЗачетеНалога;
		Уведомление.Организация = ВыборкаСтрока.Организация;
		
		ДанныеОтчета = ВыборкаСтрока.ДанныеОтчета.Получить();
		Уведомление.ИмяОтчета = "РегламентированноеУведомлениеЗачетНалога";
		Уведомление.ИмяФормы = "Форма2017_1";
		
		Уведомление.ПодписантФамилия = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпФ;
		Уведомление.ПодписантИмя = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпИ;
		Уведомление.ПодписантОтчество = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпО;
		Уведомление.ДатаПодписи = РегОтчет.Дата;
		Уведомление.Дата = ТекущаяДатаСеанса();
		
		Титульный = Новый Структура;
		Для Каждого КЗ Из ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный Цикл 
			Титульный.Вставить(КЗ.Ключ, КЗ.Значение);
		КонецЦикла;
		Лист002 = Новый Структура;
		Для Каждого КЗ Из ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаЛист002 Цикл 
			Лист002.Вставить(КЗ.Ключ, КЗ.Значение);
		КонецЦикла;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ДеревоСтраниц", СформироватьПустоеДеревоСтраниц());
		СтруктураПараметров.Вставить("ДанныеУведомления", Новый Структура("Титульный, Лист002", Титульный, Лист002));
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
		Уведомление.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		
		РегОтчет.Комментарий = "##УведомлениеОСпецрежимахНалогообложения##" + ВыборкаСтрока.Комментарий;
		РегОтчет.ПометкаУдаления = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(РегОтчет);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Уведомление);
		
		ЗаписьСоответствия = РегистрыСведений["СоответствиеРегОтчетовУведомлениям"].СоздатьМенеджерЗаписи();
		ЗаписьСоответствия.РегОтчет = РегОтчет;
		ЗаписьСоответствия.Прочитать();
		ЗаписьСоответствия.РегОтчет = РегОтчет;
		ЗаписьСоответствия.Уведомление = Уведомление;
		ЗаписьСоответствия.Записать(Истина);

		ЗафиксироватьТранзакцию();
	Исключение
		Если ТранзакцияАктивна() Тогда 
			ОтменитьТранзакцию();
		КонецЕсли;
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Регламентированная отчетность. Не удалось преобразовать отчет'",
			ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,ВыборкаСтрока.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
КонецПроцедуры

#КонецОбласти
#КонецЕсли
