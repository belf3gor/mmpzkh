
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Формирует заголовок отчета.
Функция ЗаголовокОтчета(ВставлятьРазделитель = Истина) Экспорт

	ТекстЗаголовка = ЭтотОбъект.Метаданные().Синоним;
	ТекстЗаголовка = ТекстЗаголовка + ?(ВставлятьРазделитель, Символы.ПС, " ") + "за " + Формат(НачалоПериода, "ДЛФ=ДД");
	Возврат ТекстЗаголовка;

КонецФункции // ЗаголовокОтчета()

// Получает сумму прописью.
Функция ПолучитьЧислительноеОтчета(Значение, Тип = "целое")

	Если Значение = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если Тип = "целое" Тогда
		ТекстВозврата = ЧислоПрописью(Значение, , ",,,,,,,,0");
	ИначеЕсли Тип = "сумма" Тогда
		Если      Значение = 0 Тогда
			ТекстВозврата = "Ноль рублей";
		ИначеЕсли Значение = Цел(Значение) Тогда
			ТекстВозврата = ЧислоПрописью(Значение, , "рубль,рубля,рублей,м,,,,,0");
		Иначе
			ТекстВозврата = ЧислоПрописью(Значение, "ДП=Истина", "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2");
		КонецЕсли;
	Иначе
		ТекстВозврата = Формат(Значение, "ЧГ=0");
	КонецЕсли;

	Возврат ТекстВозврата;

КонецФункции // ПолучитьЧислительноеОтчета()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события "ПриКомпоновкеРезультата".
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(НачалоПериода) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(НачалоПериода));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "Организация", Организация);
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных,,,
													Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Таблица = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Адрес = УПЖКХ_ТиповыеМетодыСервер.ПолучитьКонтактнуюИнформацияОбъекта(Организация,
																			Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	Телефон = УПЖКХ_ТиповыеМетодыСервер.ПолучитьКонтактнуюИнформацияОбъекта(Организация,
																			Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	СтруктураПараметровШапки = Новый Структура;
	СтруктураПараметровШапки.Вставить("ОрганизацияПолноеНаименование", Организация.НаименованиеПолное);
	СтруктураПараметровШапки.Вставить("КодОКПО"               , Организация.КодПоОКПО);
	СтруктураПараметровШапки.Вставить("ИНН"                   , Организация.ИНН);
	СтруктураПараметровШапки.Вставить("НомерДокумента"        , НомерОтчета);
	СтруктураПараметровШапки.Вставить("ДатаСоставления"       , Формат(НачалоПериода, "ДЛФ=Д"));
	СтруктураПараметровШапки.Вставить("ОрганизацияРеквизиты"  , Адрес + " " + Телефон);
	
	Макет = ПолучитьМакет("Макет");

	// Вывод заголовка.
	ОбластьМакета    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заголовок = ЗаголовокОтчета();
	
	ОбластьШапка     = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТЧ   = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТЧ  = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьПодвалТЧ  = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал");
	
	ДокументРезультат.Вывести(ОбластьМакета);
	
	ОбластьШапка.Параметры.Заполнить(СтруктураПараметровШапки);
	
	// Выводим шапку отчета
	ДокументРезультат.Вывести(ОбластьШапка);
	
	// Вывод шапки таблицы.
	ДокументРезультат.Вывести(ОбластьШапкаТЧ);
	
	// Вывод таблицы.
	
	Для Каждого Строка Из Таблица Цикл
		
		ОбластьСтрокаТЧ.Параметры.Заполнить(Строка);
		
		Если Не ДокументРезультат.ПроверитьВывод(ОбластьСтрокаТЧ) Тогда		
			
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Вывод шапки таблицы.
			ДокументРезультат.Вывести(ОбластьШапкаТЧ);
			
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьСтрокаТЧ);
		
	КонецЦикла;
	
	ИтогоОборотЗаДень = Таблица.Итог("ОборотЗаДень");
	ОбластьПодвалТЧ.Параметры.ОборотЗаДень = ИтогоОборотЗаДень;
	
	ДокументРезультат.Вывести(ОбластьПодвалТЧ);
	
	ОбластьПодвал.Параметры.СуммаПрописью = ПолучитьЧислительноеОтчета(ИтогоОборотЗаДень, "сумма");
	
	Если ЗначениеЗаполнено(Банк) Тогда
		ОбластьПодвал.Параметры.Банк = Банк.Наименование 
									 + ", корсчет: " 
									 + Банк.КоррСчет 
									 + ", БИК: " 
									 + Банк.Код 
									 + ", " 
									 + Банк.Адрес 
									 + ", "
									 + Банк.Телефоны;
	КонецЕсли;

	СтруктураОтветственныеЛица = УПЖКХ_ТиповыеМетодыВызовСервера.ОтветственныеЛица(Организация, НачалоПериода);
	ОбластьПодвал.Параметры.СтаршийКассир = СтруктураОтветственныеЛица.КассирПредставление;
	ОбластьПодвал.Параметры.Руководитель  = СтруктураОтветственныеЛица.РуководительПредставление;
	
	// Выводим подвал отчета
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли