
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура управляет показом в форме периода построения отчета.
//
&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьПериод(Форма)
		
	СтрПериодОтчета = ПредставлениеПериода(НачалоДня(Форма.мДатаНачалаПериодаОтчета),
											КонецДня(Форма.мДатаКонцаПериодаОтчета), "ФП = Истина" );
		
	Форма.НадписьПериодСоставленияОтчета = СтрПериодОтчета;

	КоличествоФорм = УПЖКХ_ТиповыеМетодыКлиентСервер.КоличествоФормСоответствующихВыбранномуПериоду(Форма);
	Если КоличествоФорм >= 1 Тогда

		Если КоличествоФорм > 1 Тогда
			Форма.Элементы.ВыбратьФорму.Доступность = Истина;
		Иначе
			Форма.Элементы.ВыбратьФорму.Доступность = Ложь;
		КонецЕсли;

		Форма.Элементы.ОткрытьФормуОтчета.Доступность = Истина;

	Иначе
		
		Форма.Элементы.ВыбратьФорму.Доступность = Ложь;
		Форма.ОписаниеНормативДок = "";
		Форма.Элементы.ОткрытьФормуОтчета.Доступность = Ложь;
		
	КонецЕсли;

	УПЖКХ_ТиповыеМетодыКлиентСервер.ВыборФормыРегламентированногоОтчетаПоУмолчанию(Форма);

КонецПроцедуры // ПоказатьПериод()

// Процедура устанавливает границы периода построения отчета.
//
// Параметры:
//  Шаг          - число, количество стандартных периодов, на которое необходимо
//                 сдвигать период построения отчета;
//
&НаКлиенте
Процедура ИзменитьПериод(Шаг)
	
	мДатаКонцаПериодаОтчета  = КонецКвартала(ДобавитьМесяц(мДатаКонцаПериодаОтчета, Шаг*3));
	мДатаНачалаПериодаОтчета = НачалоГода(мДатаКонцаПериодаОтчета);
	ПоказатьПериод(ЭтаФорма);

КонецПроцедуры // ИзменитьПериод()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация              = Параметры.Организация;
	мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	мПериодичность           = Параметры.мПериодичность;
	мСкопированаФорма        = Параметры.мСкопированаФорма;
	мСохраненныйДок          = Параметры.мСохраненныйДок;
	
	ИсточникОтчета = СтрЗаменить(СтрЗаменить(Строка(ЭтаФорма.ИмяФормы), "Отчет.", ""), ".Форма.ОсновнаяФорма", "");
	
	ЗначениеВДанныеФормы(Отчеты[ИсточникОтчета].ТаблицаФормОтчета(), мТаблицаФормОтчета);
	
	УчетПоВсемОрганизациям = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьПризнакУчетаПоВсемОрганизациям();
	Элементы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
	
	ОргПоУмолчанию = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
	ПеречислениеПериодичностьКвартал = Перечисления.Периодичность.Квартал;
	
	// Устнавливаем границы периода построения отчета как месяц
	Если НЕ ЗначениеЗаполнено(мДатаНачалаПериодаОтчета) И НЕ ЗначениеЗаполнено(мДатаКонцаПериодаОтчета) Тогда
		мДатаКонцаПериодаОтчета  = КонецКвартала(ТекущаяДатаСеанса());
		мДатаНачалаПериодаОтчета = НачалоГода(мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	мПериодичность = ПеречислениеПериодичностьКвартал;
	ПоказатьПериод(ЭтаФорма);
	
	Если НЕ мТаблицаФормОтчета.Количество() > 1 Тогда
		Элементы.ВыбратьФорму.Доступность = Ложь;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ОргПоУмолчанию) Тогда
		Организация = ОргПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Обработчик события "ПередЗакрытием" формы.
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	// здесь отключаем стандартную обработку ПередЗакрытием формы
	// для подавления выдачи запроса на сохранение формы.
	СтандартнаяОбработка = Ложь;

КонецПроцедуры // ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
// Процедура вызывается при нажатии кнопки "УстановитьПредыдущийПериод".
Процедура УстановитьПредыдущийПериод(Команда)
	
	ИзменитьПериод(-1);
	
КонецПроцедуры

&НаКлиенте
// Процедура вызывается при нажатии кнопки "УстановитьСледующийПериод".
Процедура УстановитьСледующийПериод(Команда)
	
	ИзменитьПериод(1);
	
КонецПроцедуры

&НаКлиенте
// Процедура вызывается при нажатии кнопки "ОткрытьФормуОтчета".
Процедура ОткрытьФормуОтчета(Команда)
	
	Если мСкопированаФорма <> Неопределено Тогда
		// Документ был скопиран. 
		// Проверяем соответствие форм.
		Если мВыбраннаяФорма <> мСкопированаФорма Тогда
			
			ПоказатьПредупреждение(Неопределено, НСтр("ru='Форма отчета изменилась, копирование невозможно!'"));
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = УПЖКХ_ТиповыеМетодыКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"),
																					 НСтр("ru='Не выбрана организация.'"));

		Сообщение.Сообщить();
				
		Возврат;
		
	КонецЕсли;
			
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("мДатаНачалаПериодаОтчета", мДатаНачалаПериодаОтчета);
	ПараметрыФормы.Вставить("мСохраненныйДок",          мСохраненныйДок);
	ПараметрыФормы.Вставить("мСкопированаФорма",        мСкопированаФорма);
	ПараметрыФормы.Вставить("мДатаКонцаПериодаОтчета",  мДатаКонцаПериодаОтчета);
	ПараметрыФормы.Вставить("мПериодичность",           мПериодичность);
	ПараметрыФормы.Вставить("Организация",              Организация);
	ПараметрыФормы.Вставить("мВыбраннаяФорма",          мВыбраннаяФорма);
	
	ВыбФормаОтчета = ПолучитьФорму(СтрЗаменить(ЭтаФорма.ИмяФормы, "ОсновнаяФорма", "") + мВыбраннаяФорма, ПараметрыФормы);
	
	ВыбФормаОтчета.Модифицированность = Истина;
	
	Закрыть();
	
	ВыбФормаОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
// Процедура вызывается при нажатии кнопки "ВыбратьФорму".
Процедура ВыбратьФорму(Команда)
	
	ВыбраннаяФорма = УПЖКХ_ТиповыеМетодыКлиент.ВыбратьФормуОтчетаИзДействующегоСписка(ЭтаФорма);
	Если ВыбраннаяФорма <> Неопределено Тогда
		мВыбраннаяФорма = ВыбраннаяФорма;
	КонецЕсли;
	
КонецПроцедуры