
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Данные = Неопределено;
	Параметры.Свойство("Данные", Данные);
	РазделительНомераСтроки = "___";
	
	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеКЛМК;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2017_1");
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		УведомлениеОСпецрежимахНалогообложения.ЗагрузитьДанныеПростогоУведомления(ЭтотОбъект, Данные, ПредставлениеУведомления)
	ИначеЕсли Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Организация = Параметры.Ключ.Организация;
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.Организация = Параметры.ЗначениеКопирования.Организация;
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	Иначе
		Параметры.Свойство("Организация", Объект.Организация);
		Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		ЗаполнитьНачальныеДанные();
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ЗаполнитьТаблицуФорматов(ЭтотОбъект, "Форматы2017_1");
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложения.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	СворачиваемыеЭлементы = ПоместитьВоВременноеХранилище(ИдДляСвор);
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект);
	Заголовок = Заголовок + " (" + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "НаименованиеСокращенное") + ")";
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Очистить(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	ЗаполнитьНачальныеДанные();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеДанные() Экспорт
	ДанныеУведомленияТитульный = ДанныеУведомления["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	Объект.ДатаПодписи = ТекущаяДатаСеанса();
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
	СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации,ОГРН";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
	ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
	ДанныеУведомленияТитульный.Вставить("Наименование", СведенияОбОрганизации.НаимЮЛПол);
	ДанныеУведомленияТитульный.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
	ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелОрганизации);
	ДанныеУведомленияТитульный.Вставить("ОГРН", СведенияОбОрганизации.ОГРН);
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.РегистрацияВИФНС, "Код,Представитель,КПП,ДокументПредставителя");
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП", Реквизиты.КПП);
	
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УстановитьПредставителяПоФизЛицу(Реквизиты.Представитель);
		ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "1");
		ДанныеУведомленияТитульный.Вставить("НаимДок", Реквизиты.ДокументПредставителя);
	Иначе
		УстановитьПредставителяПоОрганизации();
		ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "2");
		ДанныеУведомленияТитульный.Вставить("НаимДок", "");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	КорневойУровень = ДеревоСтраниц.ПолучитьЭлементы();
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2017_1_Титульная";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранных"+символы.ПС+"организациях (Лист А.1)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистАРаздел1";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистАРаздел1";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистАРаздел1";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения о российских"+символы.ПС+"организациях (Лист А.2)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистАРаздел2";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистАРаздел2";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистАРаздел2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения о физических"+символы.ПС+"лицах (Лист А.3)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистАРаздел3";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистАРаздел3";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистАРаздел3";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Основания признания"+символы.ПС+"контролирующим"+символы.ПС+"лицом (Лист Б)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистБ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистБ";

	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Раскрытие порядка"+символы.ПС+"участия (Лист В)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистВ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МногострочныеЧасти.Добавить("МнгСтр");
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистВ";
	
	СтрГ1 = Стр001.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Сведения об иностранной"+символы.ПС+"организации (Лист Г1)";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	
	СтрГ1 = СтрГ1.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Стр. 1";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.ИмяМакета = "ЛистГ1";
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	СтрГ1.УИД = Новый УникальныйИдентификатор;
	СтрГ1.ИДНаименования = "ЛистГ1";
	СтрГ1.МакетыПФ = "Печать_Форма2017_1_ЛистГ1";
	
	СтрГ1 = Стр001.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Сведения о российской"+символы.ПС+"организации (Лист Г2)";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	
	СтрГ1 = СтрГ1.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Стр. 1";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.ИмяМакета = "ЛистГ2";
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	СтрГ1.УИД = Новый УникальныйИдентификатор;
	СтрГ1.ИДНаименования = "ЛистГ2";
	СтрГ1.МакетыПФ = "Печать_Форма2017_1_ЛистГ2";
	
	СтрГ1 = Стр001.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Сведения о физическом"+символы.ПС+"лице (Лист Г3)";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	
	СтрГ1 = СтрГ1.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Стр. 1";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.ИмяМакета = "ЛистГ3";
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	СтрГ1.УИД = Новый УникальныйИдентификатор;
	СтрГ1.ИДНаименования = "ЛистГ3";
	СтрГ1.МакетыПФ = "Печать_Форма2017_1_ЛистГ3";
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяВыводимогоМакета(ТекущиеДанные)
	Если ЗначениеЗаполнено(ТекущиеДанные.ИмяМакета) Тогда 
		Возврат ТекущиеДанные.ИмяМакета;
	Иначе
		Возврат ТекущиеДанные.ПолучитьЭлементы()[0].ИмяМакета;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПолучитьМногострочныеЧасти(ТекущиеДанные)
	Если ТекущиеДанные.МногострочныеЧасти.Количество() > 0 Тогда 
		Возврат ТекущиеДанные.МногострочныеЧасти;
	ИначеЕсли ТекущиеДанные.ПолучитьЭлементы().Количество() > 0 Тогда 
		Возврат ТекущиеДанные.ПолучитьЭлементы()[0].МногострочныеЧасти;
	Иначе
		Возврат ТекущиеДанные.МногострочныеЧасти;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СобратьДанныеМногострочныхЧастейТекущейСтраницы(МногострочныеЧасти, ПредУИД)
	Для Каждого МнгЧ Из ТекущиеМногострочныеЧасти Цикл 
		СЗ = ДанныеДопСтрокСтраницы[МнгЧ.Значение];
		Для Инд = 1 По СЗ.Количество() Цикл 
			ИндСтр = РазделительНомераСтроки + Формат(Инд, "ЧГ=0");
			ДанныеСтроки = СЗ[Инд-1].Значение;
			Для Каждого КЗ Из ДанныеСтроки Цикл 
				ДанныеСтроки[КЗ.Ключ] = ПредставлениеУведомления.Области[КЗ.Ключ + ИндСтр].Значение;
			КонецЦикла;
		КонецЦикла;
		
		ВсеДопСтроки = ПолучитьИзВременногоХранилища(ДанныеДопСтрок[МнгЧ.Значение]);
		СтрокиТекущейСтраницы = ВсеДопСтроки.НайтиСтроки(Новый Структура("УИД", ПредУИД));
		Для Инд = 0 По СтрокиТекущейСтраницы.Количество() - СЗ.Количество() - 1 Цикл 
			ВсеДопСтроки.Удалить(СтрокиТекущейСтраницы[Инд]);
		КонецЦикла;
		
		Для Инд = СтрокиТекущейСтраницы.Количество() + 1 По СЗ.Количество() Цикл 
			НовСтр = ВсеДопСтроки.Добавить();
			НовСтр.УИД = ПредУИД;
		КонецЦикла;
		
		СтрокиТекущейСтраницы = ВсеДопСтроки.НайтиСтроки(Новый Структура("УИД", ПредУИД));
		Для Инд = 0 По СтрокиТекущейСтраницы.ВГраница() Цикл 
			ЗаполнитьЗначенияСвойств(СтрокиТекущейСтраницы[Инд], СЗ[Инд].Значение);
		КонецЦикла;
		
		ДанныеДопСтрок[МнгЧ.Значение] = ПоместитьВоВременноеХранилище(ВсеДопСтроки, ДанныеДопСтрок[МнгЧ.Значение]);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УИДТекущаяСтраница <> Элемент.ТекущиеДанные.УИД Тогда 
		ПредУИД = УИДТекущаяСтраница;
		
		УИДТекущаяСтраница = Элемент.ТекущиеДанные.УИД;
		ТекущееИДНаименования = Элемент.ТекущиеДанные.ИДНаименования;
		Если Не ЗначениеЗаполнено(ТекущееИДНаименования) Тогда 
			ТекущееИДНаименования = Элемент.ТекущиеДанные.ПолучитьЭлементы()[0].ИДНаименования;
			УИДТекущаяСтраница = Элемент.ТекущиеДанные.ПолучитьЭлементы()[0].УИД;
		КонецЕсли;
		
		Если Элемент.ТекущиеДанные.Многостраничность Тогда 
			ИмяМакета = ПолучитьИмяВыводимогоМакета(Элемент.ТекущиеДанные);
			ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, ПолучитьМногострочныеЧасти(Элемент.ТекущиеДанные), ПредУИД);
		Иначе 
			ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета, Элемент.ТекущиеДанные.МногострочныеЧасти, ПредУИД);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоказатьМногострочныеЧасти(Макет, МногострочныеЧасти)
	Если ТипЗнч(МногострочныеЧасти) = Тип("СписокЗначений") 
		И МногострочныеЧасти.Количество() > 0 Тогда 
		
		Для Каждого МнгСтр Из МногострочныеЧасти Цикл 
			ТЗ = ПолучитьИзВременногоХранилища(ДанныеДопСтрок[МнгСтр.Значение]);
			ИсхСтр = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ДанныеДопСтрокСтраницы[МнгСтр.Значение][0].Значение);
			Для Каждого КЗ Из ИсхСтр Цикл 
				ИсхСтр[Кз.Ключ] = Неопределено;
			КонецЦикла;
			
			Строки = ТЗ.НайтиСтроки(Новый Структура("УИД", УИДТекущаяСтраница));
			ДанныеДопСтрокСтраницы[МнгСтр.Значение].Очистить();
			Инд = 0;
			Пока ДанныеДопСтрокСтраницы[МнгСтр.Значение].Количество() < Строки.Количество() Цикл 
				ТекСтр = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ИсхСтр);
				ЗаполнитьЗначенияСвойств(ТекСтр, Строки[Инд]);
				ДанныеДопСтрокСтраницы[МнгСтр.Значение].Добавить(ТекСтр);
				Инд = Инд + 1;
			КонецЦикла;
			
			Если ДанныеДопСтрокСтраницы[МнгСтр.Значение].Количество() = 0 Тогда 
				ДанныеДопСтрокСтраницы[МнгСтр.Значение].Добавить(ИсхСтр);
			КонецЕсли;
			
			ПредставлениеУведомления.Вывести(Макет.ПолучитьОбласть("Header_" + МнгСтр.Значение));
			Инд = 0;
			ВыводитьЗначокУдаления = ДанныеДопСтрокСтраницы[МнгСтр.Значение].Количество() > 1;
			Для Каждого Стр Из ДанныеДопСтрокСтраницы[МнгСтр.Значение] Цикл
				Инд = Инд + 1;
				ИндСтр = РазделительНомераСтроки + Формат(Инд, "ЧГ=");
				Обл = Макет.ПолучитьОбласть("Str_" + МнгСтр.Значение);
				УстановитьФорматыВМногострочныхПолях(Обл);
				Для Каждого ОблПодч Из Обл.Области Цикл 
					Если ОблПодч.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
						Если ОблПодч.СодержитЗначение Тогда 
							Стр.Значение.Свойство(ОблПодч.Имя, ОблПодч.Значение);
						КонецЕсли;
						ОблПодч.Имя = ОблПодч.Имя + ИндСтр;
					КонецЕсли;
					
					Если ВыводитьЗначокУдаления И ОблПодч.Имя = "Del_" + МнгСтр.Значение + ИндСтр Тогда 
						ОблПодч.Текст = "х";
						ОблПодч.Гиперссылка = Истина;
					КонецЕсли;
				КонецЦикла;
				ПредставлениеУведомления.Вывести(Обл);
			КонецЦикла;
			ПредставлениеУведомления.Области["Str_" + МнгСтр.Значение].Имя = "";
			
			ОблДобавленияСтроки = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ОбщиеЭлементы").ПолучитьОбласть("AddStrArea");
			ОблДобавленияСтроки.Области["AddStrLabel"].Имя = "AddStrLabel_" + МнгСтр.Значение;
			ОблДобавленияСтроки.Области["AddStr"].Имя = "AddStr_" + МнгСтр.Значение;
			ПредставлениеУведомления.Вывести(ОблДобавленияСтроки);
			ПредставлениеУведомления.Вывести(Макет.ПолучитьОбласть("Footer_" + МнгСтр.Значение));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматыВМногострочныхПолях(ТД) Экспорт
	Для Каждого Обл Из ТД.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение Тогда 
			ОблИмя = Лев(Обл.Имя, СтрНайти(Обл.Имя, РазделительНомераСтроки) - 1);
			ОблИмя = ?(ЗначениеЗаполнено(ОблИмя), ОблИмя, Обл.Имя);
			ПоляСФорматами = ЧисловыеФорматы.НайтиСтроки(Новый Структура("ИДСтраницы, Поле", ТекущееИДНаименования, ОблИмя));
			Если ПоляСФорматами.Количество() > 0 Тогда 
				Знак = ?(ПоляСФорматами[0].Неотрицательный, ДопустимыйЗнак.Неотрицательный, ДопустимыйЗнак.Любой);
				ОТ = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(ПоляСФорматами[0].Всего, ПоляСФорматами[0].ПослеЗапятой, Знак));
				Обл.ТипЗначения = ОТ;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не УдалениеСтраницы И ТекущиеМногострочныеЧасти.Количество() > 0 Тогда 
		СобратьДанныеМногострочныхЧастейТекущейСтраницы(МногострочныеЧасти, ПредУИД);
	КонецЕсли;
	
	ТекущиеМногострочныеЧасти = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(МногострочныеЧасти);
	
	ПредставлениеУведомления.Очистить();
	ТекущийМакет = ИмяМакета;
	Макет = Отчеты[Объект.ИмяОтчета].ПолучитьМакет(ИмяМакета);
	ПредставлениеУведомления.Вывести(Макет.ПолучитьОбласть("ОсновнаяЧасть"));
	УведомлениеОСпецрежимахНалогообложения.УстановитьФорматыВПолях(ЭтотОбъект);
	СтрДанных = ДанныеУведомления[ТекущееИДНаименования];
	Для Каждого Обл Из ПредставлениеУведомления.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение Тогда 
			
			СтрДанных.Свойство(Обл.Имя, Обл.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПоказатьМногострочныеЧасти(Макет, МногострочныеЧасти);
КонецПроцедуры

&НаСервере
Функция НайтиСтрокуВДеревоПоУИД(Дерево, UID)
	Для Каждого Элемент Из Дерево Цикл 
		Если Элемент.УИД = UID И Не ПустаяСтрока(Элемент.ИДНаименования) Тогда
			Возврат Элемент;
		КонецЕсли;
	
		НайденныйИД = НайтиСтрокуВДеревоПоУИД(Элемент.ПолучитьЭлементы(), UID);
		Если НайденныйИД <> Неопределено Тогда
			Возврат НайденныйИД;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

&НаСервере
Процедура ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не УдалениеСтраницы И ТекущиеМногострочныеЧасти.Количество() > 0 Тогда 
		СобратьДанныеМногострочныхЧастейТекущейСтраницы(МногострочныеЧасти, ПредУИД);
	КонецЕсли;
	
	ТекущиеМногострочныеЧасти = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(МногострочныеЧасти);
	
	ПредставлениеУведомления.Очистить();
	ТекущийМакет = ИмяМакета;
	Макет = Отчеты[Объект.ИмяОтчета].ПолучитьМакет(ИмяМакета);
	ПредставлениеУведомления.Вывести(Макет.ПолучитьОбласть("УправлениеСтраницами"));
	ПредставлениеУведомления.Вывести(Макет.ПолучитьОбласть("ОсновнаяЧасть"));
	УведомлениеОСпецрежимахНалогообложения.УстановитьФорматыВПолях(ЭтотОбъект);
	СтрДанных = Неопределено;
	Для Каждого Элт Из ДанныеМногостраничныхРазделов[ТекущееИДНаименования] Цикл 
		Если Элт.Значение.УИД = УИДТекущаяСтраница Тогда 
			СтрДанных = Элт.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Обл Из ПредставлениеУведомления.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение Тогда 
			
			СтрДанных.Свойство(Обл.Имя, Обл.Значение);
		КонецЕсли;
	КонецЦикла;
	
	НайденнаяСтрока = НайтиСтрокуВДеревоПоУИД(ДеревоСтраниц.ПолучитьЭлементы(), УИДТекущаяСтраница);
	Если НайденнаяСтрока <> Неопределено
		И НайденнаяСтрока.ПолучитьРодителя().ПолучитьЭлементы().Количество() = 1 Тогда 
		
		ПредставлениеУведомления.Области.УдалитьСтраницуЗначок.Текст = "";
		ПредставлениеУведомления.Области.УдалитьСтраницу.Текст = "";
		ПредставлениеУведомления.Области.УдалитьСтраницуЗначок.Гиперссылка = Ложь;
		ПредставлениеУведомления.Области.УдалитьСтраницу.Гиперссылка = Ложь;
	КонецЕсли;
	
	ПоказатьМногострочныеЧасти(Макет, МногострочныеЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	
	Если Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.РегистрацияВИФНС, "Код,Представитель,КПП,ДокументПредставителя");
	ПредставлениеУведомления.Области["КодНО"].Значение = Реквизиты.Код;
	ПредставлениеУведомления.Области["КПП"].Значение = Реквизиты.КПП;
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УстановитьПредставителяПоФизЛицу(Реквизиты.Представитель);
		ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "1";
		ПредставлениеУведомления.Области["НаимДок"].Значение = Реквизиты.ДокументПредставителя;
	Иначе
		УстановитьПредставителяПоОрганизации();
		ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "2";
		ПредставлениеУведомления.Области["НаимДок"].Значение = "";
	КонецЕсли;
	
	ДанныеУведомленияТитульный = ДанныеУведомления["Титульная"];
	ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	ДанныеУведомленияТитульный.Вставить("НаимДок", ПредставлениеУведомления.Области["НаимДок"].Значение);
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение);
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоФизЛицу(Физлицо)
	ЕстьОбласть = (Неопределено <> ПредставлениеУведомления.Области.Найти("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	ДанныеУведомленияТитульный = ДанныеУведомления["Титульная"];
	Если ЗначениеЗаполнено(Физлицо) Тогда 
		ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Физлицо, , Объект.ДатаПодписи);
		Объект.ПодписантФамилия = СокрЛП(ДанныеПредставителя.Фамилия);
		Объект.ПодписантИмя = СокрЛП(ДанныеПредставителя.Имя);
		Объект.ПодписантОтчество = СокрЛП(ДанныеПредставителя.Отчество);
		ПодписантСтр = СокрЛП(Объект.ПодписантФамилия + " " + Объект.ПодписантИмя + " " + Объект.ПодписантОтчество);
		ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПодписантСтр);
		Если ЕстьОбласть Тогда 
			ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = ПодписантСтр;
		КонецЕсли;
	Иначе
		Объект.ПодписантФамилия = "";
		Объект.ПодписантИмя = "";
		Объект.ПодписантОтчество = "";
		ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", "");
		Если ЕстьОбласть Тогда 
			ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоОрганизации()
	Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьДанныеРуководителя(Объект);
	ДанныеУведомленияТитульный = ДанныеУведомления["Титульная"];
	ЕстьОбласть = (Неопределено <> ПредставлениеУведомления.Области.Найти("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	ПодписантСтр = СокрЛП(Объект.ПодписантФамилия + " " + Объект.ПодписантИмя + " " + Объект.ПодписантОтчество);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПодписантСтр);
	Если ЕстьОбласть Тогда 
		ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = ПодписантСтр;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Дата = ТекущаяДатаСеанса() 
	КонецЕсли;
	
	Если ТекущиеМногострочныеЧасти.Количество() > 0 Тогда 
		СобратьДанныеМногострочныхЧастейТекущейСтраницы(ТекущиеМногострочныеЧасти, УИДТекущаяСтраница);
	КонецЕсли;
	
	ДанныеДопСтрокБД = Новый Структура;
	Для Каждого КЗ Из ДанныеДопСтрок Цикл 
		ДанныеДопСтрокБД.Вставить(КЗ.Ключ, ПолучитьИзВременногоХранилища(КЗ.Значение));
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
			
	СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
	СтруктураПараметров.Вставить("ДанныеДопСтрокБД", ДанныеДопСтрокБД);
	СтруктураПараметров.Вставить("ДеревоСтраниц", РеквизитФормыВЗначение("ДеревоСтраниц"));
	СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	СтруктураПараметров.Вставить("ДанныеУведомления", ДанныеУведомления);
	СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", РазрешитьВыгружатьСОшибками);
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	
	РегламентированнаяОтчетность.СохранитьСтатусОтправкиУведомления(ЭтаФорма);
	
	Модифицированность = Ложь;
	ЭтотОбъект.Заголовок = СтрЗаменить(ЭтотОбъект.Заголовок, " (создание)", "");
	
	УведомлениеОСпецрежимахНалогообложения.СохранитьНастройкиРучногоВвода(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	СтруктураПараметров = СсылкаНаДанные.Ссылка.ДанныеУведомления.Получить();
	ДанныеУведомления = СтруктураПараметров.ДанныеУведомления;
	ДанныеМногостраничныхРазделов = СтруктураПараметров.ДанныеМногостраничныхРазделов;
	ЗначениеВРеквизитФормы(СтруктураПараметров.ДеревоСтраниц, "ДеревоСтраниц");
	СтруктураПараметров.Свойство("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
	
	ДанныеДопСтрокБД = СтруктураПараметров.ДанныеДопСтрокБД;
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрокСтраницы = Новый Структура;
	Для Каждого КЗ Из ДанныеДопСтрокБД Цикл 
		ДанныеДопСтрок.Вставить(КЗ.Ключ, ПоместитьВоВременноеХранилище(КЗ.Значение, Новый УникальныйИдентификатор));
		Стр = Новый Структура;
		Для Каждого Кол Из КЗ.Значение.Колонки Цикл 
			Если Кол.Имя <> "УИД" Тогда 
				Стр.Вставить(Кол.Имя);
			КонецЕсли;
		КонецЦикла;
		СЗ = Новый СписокЗначений;
		СЗ.Добавить(Стр);
		ДанныеДопСтрокСтраницы.Вставить(КЗ.Ключ, СЗ);
	КонецЦикла;
	
	СтруктураПараметров.Свойство("РазрешитьВыгружатьСОшибками", РазрешитьВыгружатьСОшибками);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если СтрНачинаетсяС(Область.Имя, "AddStr_") Или СтрНачинаетсяС(Область.Имя, "AddStrLabel_") Тогда
		ДобавитьСтроку(Область.Имя);
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
		Возврат;
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "Del_") Тогда
		Если Не ЗначениеЗаполнено(Область.Текст) Тогда 
			Возврат;
		КонецЕсли;
		УдалитьСтроку(Область.Имя);
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
		Возврат;
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "ДобавитьСтраницу") > 0 Тогда
		ДобавитьСтраницу(Неопределено);
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтраницу") > 0 Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.УдалитьСтраницу(ЭтотОбъект);
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли Область.Имя = "ПересчитататьДанныеЦепочек" Тогда 
		ПересчитататьДанныеЦепочек();
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Если РучнойВвод Тогда 
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина, Истина);
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыборКодЗнач(ЭтотОбъект, Область, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
	Если СтандартнаяОбработка И Область.Имя = "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ" Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуВыбораПодписантаЗавершение", ЭтотОбъект, Неопределено);
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОткрытьФормуВыбораФИО(ЭтотОбъект, СтандартнаяОбработка, "ПредставлениеУведомления",
																	"ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ОписаниеОповещения);
		Возврат;
	ИначеЕсли (Область.Имя = "НомерКонтрЛиц" И ТекущееИДНаименования = "ЛистБ") Тогда 
		СтандартнаяОбработка = Ложь;
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти, ДоступенВыборИО, ДоступенВыборРО, ДоступенВыборФЛ", Область.Значение, Область.Имя);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеКонтролирующиеЛица.Форма.ФормаВыборНомерУчастника", ПараметрыВыборНомерУчастника, ЭтотОбъект, , , , ВыборНомерУчастника, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	ИначеЕсли (Область.Имя = "НомерКонтрЛиц" И ТекущееИДНаименования = "ЛистВ") Тогда 
		СтандартнаяОбработка = Ложь;
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти, ДоступенВыборИО, ДоступенВыборРО, ДоступенВыборФЛ", Область.Значение, Область.Имя);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеКонтролирующиеЛица.Форма.ФормаВыборНомерУчастника", ПараметрыВыборНомерУчастника, ЭтотОбъект, , , , ВыборНомерУчастника, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "НомерУч" + РазделительНомераСтроки) Тогда 
		СтандартнаяОбработка = Ложь;
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти, ДоступенВыборУИ, ДоступенВыборУС, ДоступенВыборУР, ДоступенВыборУФ, ДоступенВыборМК", Область.Значение, Область.Имя);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеКонтролирующиеЛица.Форма.ФормаВыборНомерУчастника", ПараметрыВыборНомерУчастника, ЭтотОбъект, , , , ВыборНомерУчастника, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	ИначеЕсли Область.Имя = "КодНО" Тогда 
		СтандартнаяОбработка = Ложь;
		ОбработкаКодаНО(Область.Имя);
	КонецЕсли;
	
	Если СтандартнаяОбработка И ЭтоОбластьОКСМ(Область) Тогда
		СтандартнаяОбработка = Ложь;
		ДополнительныеПараметры = Новый Структура("Область, СтандартнаяОбработка, Элемент", Область, СтандартнаяОбработка, Элемент);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраныЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ОткрытьФорму("Справочник.СтраныМира.ФормаВыбора", Новый Структура("РежимВыбора", Истина), ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПересчитататьДанныеЦепочек()
	НомерУчастника =НРег(ПредставлениеУведомления.Области["НомерКИК"].Значение);
	Если Не ЗначениеЗаполнено(НомерУчастника) Или 
		(Не СтрНачинаетсяС(НомерУчастника, "ио-") И Не СтрНачинаетсяС(НомерУчастника, "ис-")) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Некорректно указан номер участника'"));
		Возврат;
	КонецЕсли;
	
	ОТЧ = Новый ОписаниеТипов("Число");
	ИО_Номер = ОТЧ.ПривестиЗначение(Сред(НомерУчастника, 4));
	Если Не ЗначениеЗаполнено(ИО_Номер) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Некорректно указан номер участника'"));
		Возврат;
	КонецЕсли;
	
	ЛистыИО = Новый СписокЗначений;
	ЛистыДляОтбора = ?(СтрНачинаетсяС(НомерУчастника, "ио-"), ДанныеМногостраничныхРазделов.ЛистА, ДанныеМногостраничныхРазделов.ЛистБ);
	Для Каждого Лист Из ЛистыДляОтбора Цикл 
		Если Лист.Значение.НомерКИКЧисло = ИО_Номер Тогда
			ЛистыИО.Добавить(Лист.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ЛистыИО.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не найден соответствующий лист А/Б'"));
		Возврат;
	ИначеЕсли ЛистыИО.Количество() > 1 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Найдено более одного листа А/Б с указанным номером'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПересчитататьДанныеЦепочекЗавершение", ЭтотОбъект, Новый Структура("НомерУчастника", НомерУчастника));
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Произвести пересчет цепочек (операция не может быть отменена)?'"), РежимДиалогаВопрос.ДаНет, 0);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитататьДанныеЦепочекЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОбщаяДоляУчастия = 0;
		ПересчитататьДанныеЦепочекНаСервере(ДополнительныеПараметры.НомерУчастника, ОбщаяДоляУчастия);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПересчитататьДанныеЦепочекНаСервере(НомерУчастника, ОбщаяДоляУчастия)
	СобратьДанныеМногострочныхЧастейТекущейСтраницы(ТекущиеМногострочныеЧасти, УИДТекущаяСтраница);
	ОбщаяДоляУчастия = 0;
	ДанныеДопСтрокМнгСтр = ПолучитьИзВременногоХранилища(ДанныеДопСтрок.МнгСтр);
	
	Для Каждого Стр Из ДанныеМногостраничныхРазделов.ЛистГ Цикл 
		Если НРег(Стр.Значение.НомерКИК) <> НомерУчастника Тогда
			Продолжить;
		КонецЕсли;
		
		МнгСтр = ДанныеДопСтрокМнгСтр.НайтиСтроки(Новый Структура("УИД", Стр.Значение.УИД));
		ДУчИзн = Число(МнгСтр[0].ДоляУчПрям);
		Для Инд = 1 По МнгСтр.ВГраница() Цикл 
			ДУчИзн = ДУчИзн * Число(МнгСтр[Инд].ДоляУчПрям) / 100;
			МнгСтр[Инд].ДоляУчКосв = ДУчИзн;
		КонецЦикла;
		
		Стр.Значение.ДоляКосвПослИт = ДУчИзн;
		ОбщаяДоляУчастия = ОбщаяДоляУчастия + ДУчИзн;
	КонецЦикла;
	
	УдалениеСтраницы = Истина;
	ПоказатьТекущуюМногостраничнуюСтраницу(ТекущийМакет, ТекущиеМногострочныеЧасти, УИДТекущаяСтраница);
	УдалениеСтраницы = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВыборНомерУчастникаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда 
		ТипЧисло = Новый ОписаниеТипов("Число");
		МассивДопОбл = Неопределено;
		Результат = Неопределено;
		ИмяОбласти = Неопределено;
		
		Ответ.Свойство("ИмяОбласти", ИмяОбласти);
		Ответ.Свойство("Результат", Результат);
		Если Ответ.Свойство("Очистить") Тогда 
			Результат = "";
		КонецЕсли;
		Область = ПредставлениеУведомления.Области[ИмяОбласти];
		Область.Значение = Результат;
		ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(ПредставлениеУведомления, Область);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНО(Инфо)
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораРегистрацииВИФНС(ЭтотОбъект, Инфо);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Инфо = ДополнительныеПараметры.Инфо;
	
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		УстановитьДанныеПоРегистрацииВИФНС();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораПодписантаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Результат.Свойство("Фамилия", Объект.ПодписантФамилия);
		Результат.Свойство("Имя", Объект.ПодписантИмя);
		Результат.Свойство("Отчество", Объект.ПодписантОтчество);
		Представление = СокрЛП(Объект.ПодписантФамилия + " " + Объект.ПодписантИмя + " " + Объект.ПодписантОтчество);
		Область = ПредставлениеУведомления.Области.Найти("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ");
		Область.Значение = Представление;
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	Если (Область.Имя = "СтрРег" И (ТекущееИДНаименования = "ЛистАРаздел1" Или ТекущееИДНаименования = "ЛистГ1" Или ТекущееИДНаименования = "ЛистГ3"))
		Или ((Область.Имя = "ОКСМ" Или Область.Имя = "СтрРегФЛ" Или Область.Имя = "КодСтр") И (ТекущееИДНаименования = "ЛистАРаздел3")) Тогда
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	ДобавитьСтраницуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуНаСервере()
	НовИд = УведомлениеОСпецрежимахНалогообложения.ДобавитьСтраницуУведомления(ЭтотОбъект);
	Если НовИд <> Неопределено Тогда 
		Элементы.ДеревоСтраниц.ТекущаяСтрока = НовИд;
	КонецЕсли;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу() Экспорт
	УдалениеСтраницы = Истина;
	УдалитьСтраницуНаСервере();
	УдалениеСтраницы = Ложь;
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуНаСервере()
	Для Каждого Стр Из ТекущиеМногострочныеЧасти Цикл 
		ТЗ = ПолучитьИзВременногоХранилища(ДанныеДопСтрок[Стр.Значение]);
		Строки = ТЗ.НайтиСтроки(Новый Структура("УИД", УИДТекущаяСтраница));
		Для Каждого СтрМнг Из Строки Цикл 
			ТЗ.Удалить(СтрМнг);
		КонецЦикла;
		ДанныеДопСтрок[Стр.Значение] = ПоместитьВоВременноеХранилище(ТЗ, ДанныеДопСтрок[Стр.Значение]);
	КонецЦикла;
	
	НовИд = УведомлениеОСпецрежимахНалогообложения.УдалитьСтраницуНаСервере(ЭтотОбъект);
	Если НовИд <> Неопределено Тогда 
		Элементы.ДеревоСтраниц.ТекущаяСтрока = НовИд;
	КонецЕсли;
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	СохранитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАдреса(Область, СтандартнаяОбработка) Экспорт
	РоссийскийАдрес = Неопределено;
	ЗначенияПолей = Неопределено;
	ПредставлениеАдреса = Неопределено;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаАдреса(ЭтотОбъект, Область, РоссийскийАдрес, ЗначенияПолей, ПредставлениеАдреса, СтандартнаяОбработка);
	Если СтандартнаяОбработка Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",				"Ввод адреса");
	ПараметрыФормы.Вставить("ЗначенияПолей", 			ЗначенияПолей);
	ПараметрыФормы.Вставить("Представление", 			ПредставлениеАдреса);
	ПараметрыФормы.Вставить("ВидКонтактнойИнформации",	ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица"));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("РоссийскийАдрес", РоссийскийАдрес);
	ДополнительныеПараметры.Вставить("Префикс", ?(СтрНачинаетсяС(Область.Имя, "АДДР"), Лев(Область.Имя, 6), ""));
	
	ТипЗначения = Тип("ОписаниеОповещения");
	ПараметрыКонструктора = Новый Массив(3);
	ПараметрыКонструктора[0] = "ОткрытьФормуКонтактнойИнформацииЗавершение";
	ПараметрыКонструктора[1] = ЭтотОбъект;
	ПараметрыКонструктора[2] = ДополнительныеПараметры;
	
	Оповещение = Новый (ТипЗначения, ПараметрыКонструктора);
	
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент").ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, , Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформацииЗавершение(Результат, Параметры) Экспорт
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбновитьАдресВТабличномДокументе(ЭтотОбъект, Результат, Параметры, Истина);
КонецПроцедуры

&НаСервере
Функция КодЭлементаСправочника(Результат)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Результат, "Код");
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраныЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		КодЭлементаСправочника = КодЭлементаСправочника(Результат);
		Область = ДополнительныеПараметры.Область;
		Если Область.Значение <> КодЭлементаСправочника Тогда
			Область.Значение = КодЭлементаСправочника;
			Модифицированность = Истина;
		КонецЕсли;
		ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элементы.ПредставлениеУведомления, Область);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(ИмяОбласти)
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "AddStr_", "");
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "AddStrLabel_", "");
	
	ДопСтрокиТекущейСтраницы = ДанныеДопСтрокСтраницы[ИмяОбласти];
	НомерДобавляемойСтроки = ДопСтрокиТекущейСтраницы.Количество() + 1;
	НоваяСтрока = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ДанныеДопСтрокСтраницы[ИмяОбласти][0].Значение);
	Для Каждого КЗ Из НоваяСтрока Цикл 
		НоваяСтрока[КЗ.Ключ] = Неопределено;
	КонецЦикла;
	ДопСтрокиТекущейСтраницы.Добавить(НоваяСтрока);
	Верх = ПредставлениеУведомления.Области[КЗ.Ключ + РазделительНомераСтроки + Формат(НомерДобавляемойСтроки - 1, "ЧГ=0")].Верх + 1;
	Обл = Отчеты[Объект.ИмяОтчета].ПолучитьМакет(ТекущийМакет).ПолучитьОбласть("Str_" + ИмяОбласти);
	ИндСтр = РазделительНомераСтроки + Формат(НомерДобавляемойСтроки, "ЧГ=0");
	Для Каждого ОблПодч Из Обл.Области Цикл 
		Если ОблПодч.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			ОблПодч.Имя = ОблПодч.Имя + ИндСтр;
		КонецЕсли;
	КонецЦикла;
	ПредставлениеУведомления.ВставитьОбласть(Обл.Область(), ПредставлениеУведомления.Область(Верх,,Верх,), ТипСмещенияТабличногоДокумента.ПоВертикали);
	ПредставлениеУведомления.Области["Str_" + ИмяОбласти].Имя = "";
	Для Инд = 1 По НомерДобавляемойСтроки Цикл 
		ОблПодч = ПредставлениеУведомления.Области["Del_" + ИмяОбласти + РазделительНомераСтроки + Формат(Инд, "ЧГ=0")];
		ОблПодч.Текст = "х";
		ОблПодч.Гиперссылка = Истина;
	КонецЦикла;
	
	УстановитьФорматыВМногострочныхПолях(ПредставлениеУведомления);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтроку(ИмяОбласти)
	ОТЧ = Новый ОписаниеТипов("Число");
	Разложение = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(ИмяОбласти, "Del_", ""), РазделительНомераСтроки);
	ДопСтроки = Разложение[0];
	Номер = ОТЧ.ПривестиЗначение(Разложение[1]);
	Если ДанныеДопСтрокСтраницы[ДопСтроки].Количество() = 1 Тогда 
		Возврат;
	КонецЕсли;
	ДанныеДопСтрокСтраницы[ДопСтроки].Удалить(Номер-1);
	Верх = ПредставлениеУведомления.Области[ИмяОбласти].Верх;
	ПредставлениеУведомления.УдалитьОбласть(ПредставлениеУведомления.Область(Верх,,Верх), ТипСмещенияТабличногоДокумента.ПоВертикали);
	Низ = Верх + ДанныеДопСтрокСтраницы[ДопСтроки].Количество() - Номер;
	Если Низ >= Верх Тогда 
		Области = ПредставлениеУведомления.ПолучитьОбласть(Верх,,Низ).Области;
		СоответствиеИмен = Новый Соответствие;
		МаксИнд = 1;
		МинИнд = 10000;
		Для Каждого Обл Из Области Цикл 
			Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
				П = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Обл.Имя, РазделительНомераСтроки);
				Если П.Количество() = 2 Тогда 
					СоответствиеИмен[Обл.Имя] = П[0] + РазделительНомераСтроки + Формат(ОТЧ.ПривестиЗначение(П[1]) - 1, "ЧГ=0");
					Если (ОТЧ.ПривестиЗначение(П[1])) > МаксИнд Тогда 
						МаксИнд = (ОТЧ.ПривестиЗначение(П[1]));
					КонецЕсли;
					Если (ОТЧ.ПривестиЗначение(П[1])) < МинИнд Тогда 
						МинИнд = (ОТЧ.ПривестиЗначение(П[1]));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Пока МинИнд <= МаксИнд Цикл 
			Суффикс = РазделительНомераСтроки + Формат(МинИнд, "ЧГ=");
			СуффиксДл = СтрДлина(Суффикс);
			
			Для Каждого КЗ Из СоответствиеИмен Цикл
				Если Прав(КЗ.Ключ, СуффиксДл) = Суффикс Тогда 
					ПредставлениеУведомления.Области[КЗ.Ключ].Имя = КЗ.Значение;
				КонецЕсли;
			КонецЦикла;
			
			МинИнд = МинИнд + 1;
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеДопСтрокСтраницы[ДопСтроки].Количество() = 1 Тогда
		ОблПодч = ПредставлениеУведомления.Области["Del_" + Разложение[0] + РазделительНомераСтроки + "1"];
		ОблПодч.Текст = "";
		ОблПодч.Гиперссылка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя) Экспорт 
КонецФункции

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = "Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительныйПросмотрЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
	ИначеЕсли Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	
	МассивПечати = Новый Массив;
	МассивПечати.Добавить(Объект.Ссылка);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОСпецрежимахНалогообложения",
		"Уведомление", МассивПечати, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотрЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		МассивПечати = Новый Массив;
		МассивПечати.Добавить(Объект.Ссылка);
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Документ.УведомлениеОСпецрежимахНалогообложения",
			"Уведомление", МассивПечати, Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимах(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Функция СформироватьВыгрузкуИПолучитьДанные() Экспорт 
	Выгрузка = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	Выгрузка = Выгрузка[0];
	Возврат Новый Структура("ТестВыгрузки,КодировкаВыгрузки,Данные,ИмяФайла", 
			Выгрузка.ТестВыгрузки, Выгрузка.КодировкаВыгрузки, 
			Отчеты[Объект.ИмяОтчета].ПолучитьМакет("TIFF_2017_1"),
			"1120416_5.01000_01.tif");
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

#Область ОтправкаВФНС
////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС
&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры
#КонецОбласти

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтаФорма);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru='Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	ТаблицаОшибок = ПроверитьВыгрузкуНаСервере();
	Если ТаблицаОшибок.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибок не обнаружено");
	Иначе
		ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.НавигацияПоОшибкам", Новый Структура("ТаблицаОшибок", ТаблицаОшибок), ЭтотОбъект, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(ЭтотОбъект, , Ложь, СтруктураРеквизитовУведомления.СписокПечатаемыхЛистов);
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	РучнойВвод = Не РучнойВвод;
	Элементы.ФормаРучнойВвод.Пометка = РучнойВвод;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОКСМ(Команда)
	ПредставлениеУведомления.ТекущаяОбласть.Значение = Неопределено;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизацииОбласти(Элемент)
	Если ПредставлениеУведомления.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда 
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = ЭтоОбластьОКСМ(ПредставлениеУведомления.ТекущаяОбласть);
	Иначе
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	РазрешитьВыгружатьСОшибками = Не РазрешитьВыгружатьСОшибками;
	Элементы.ФормаРазрешитьВыгружатьСОшибками.Пометка = РазрешитьВыгружатьСОшибками;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры
