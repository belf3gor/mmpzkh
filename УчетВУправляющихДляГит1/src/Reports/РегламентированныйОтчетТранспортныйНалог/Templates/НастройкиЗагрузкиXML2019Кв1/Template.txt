// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	УзлыРаздела1 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумНалПУ");
	Для Каждого УзелРаздела1 Из УзлыРаздела1 Цикл
		УзелРаздела1.Обязательность = "ОП"; // будут пропущены при автозагрузке в структуру документа (обработаем раздел из настроек)
		УзлыПоXPath(УзелРаздела1, "@КБК")[0].Ключ = "П000010001003";
		УзлыРаздела1Многострочные = УзлыПоXPath(УзелРаздела1, "СумПУ");
		Для Каждого УзелРаздела1Многострочный Из УзлыРаздела1Многострочные Цикл
			УзелРаздела1Многострочный.Обязательность = УзелРаздела1Многострочный.Обязательность + "П";
			// Все атрибуты обязательные.
			УзлыПоXPath(УзелРаздела1Многострочный, "@ОКТМО")[0].Ключ     = "П000010002003";
			УзлыПоXPath(УзелРаздела1Многострочный, "@НалИсчисл")[0].Ключ = "П000010002103";
			УзлыПоXPath(УзелРаздела1Многострочный, "@АвПУКв1")[0].Ключ   = "П000010002303";
			УзлыПоXPath(УзелРаздела1Многострочный, "@АвПУКв2")[0].Ключ   = "П000010002503";
			УзлыПоXPath(УзелРаздела1Многострочный, "@АвПУКв3")[0].Ключ   = "П000010002703";
			УзлыПоXPath(УзелРаздела1Многострочный, "@НалПУ")[0].Ключ     = "П000010003003";
			
			УзлыРаздела2 = УзлыПоXPath(УзелРаздела1Многострочный, "РасчНалТС");
			Для Каждого УзелРаздела2 Из УзлыРаздела2 Цикл
				УзелРаздела2.Обязательность = УзелРаздела2.Обязательность + "П"; // будут пропущены при автозагрузке в структуру документа (обработаем раздел из настроек)
				
				УзлыЛьготОсвНал   = УзлыПоXPath(УзелРаздела2, "ЛьготОсвНал");
				Для Каждого УзелЛьготОсвНал Из УзлыЛьготОсвНал Цикл
					УзлыПоXPath(УзелЛьготОсвНал, "@КодОсвНал")[0].Ключ = "П000020022003_КодЛьготы";
					УзлыПоXPath(УзелЛьготОсвНал, "@СумОсвНал")[0].Ключ = "П000020023003";
				КонецЦикла;
				УзлыЛьготУменСум  = УзлыПоXPath(УзелРаздела2, "ЛьготУменСум");
				Для Каждого УзелЛьготУменСум Из УзлыЛьготУменСум Цикл
					УзлыПоXPath(УзелЛьготУменСум, "@КодУменСум")[0].Ключ = "П000020024003_КодЛьготы";
					УзлыПоXPath(УзелЛьготУменСум, "@СумУменСум")[0].Ключ = "П000020025003";
				КонецЦикла;
				УзлыЛьготСнижСтав = УзлыПоXPath(УзелРаздела2, "ЛьготСнижСтав");
				Для Каждого УзелЛьготСнижСтав Из УзлыЛьготСнижСтав Цикл
					УзлыПоXPath(УзелЛьготСнижСтав, "@КодСнижСтав")[0].Ключ = "П000020026003_КодЛьготы";
					УзлыПоXPath(УзелЛьготСнижСтав, "@СумСнижСтав")[0].Ключ = "П000020027003";
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100020015003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000020022003_Основание"; // обработаем в структуре данных документа
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	УзлыРаздела1Многострочные = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумНалПУ/СумПУ"); // Раздел 1 - многострочная часть
	
	НомСтраницы = 0;
	НомСтрокиНаСтранице = 0;
	Для Каждого СтрокаРаздела Из УзлыРаздела1Многострочные Цикл
		Если НомСтрокиНаСтранице % 3 = 0 Тогда // 3 строки на странице
			НомСтрокиНаСтранице = 0;
			НомСтраницы = НомСтраницы + 1;
			ЗаполнитьПоказательДокументаИзУзлаДерева(УзлыПоXPath(СтрокаРаздела, "../@КБК")[0], П.ДанныеОтчета, П.ПараметрыОтчета, НомСтраницы);
		КонецЕсли;
		НомСтрокиНаСтранице = НомСтрокиНаСтранице + 1;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтрокаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтрокиНаСтранице);
	КонецЦикла;
	
	УзлыРаздела2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//СумНалПУ/СумПУ/РасчНалТС"); // Раздел 2
	
	Для НомСтраницы = 1 По УзлыРаздела2.Количество() Цикл
		СтраницаРаздела = УзлыРаздела2[НомСтраницы - 1];
		
		УзелОКТМО = УзлыПоXPath(СтраницаРаздела, "../@ОКТМО")[0];
		УзелДопОКТМО = СтраницаРаздела.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(УзелДопОКТМО, УзелОКТМО, , "Родитель, Строки"); // важны только раздел, ключ и значение
		УзелДопОКТМО.Раздел = "Раздел2"; УзелДопОКТМО.Ключ = "П000020002003";    // значение уже заполнено
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(СтраницаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы);
	КонецЦикла;
	
	Раздел1 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел1", Раздел1);
	Если Раздел1 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел1 Цикл
			ДанныеРаздела = СтраницаРаздела.Данные;
			
			НомСтроки = 1;
			Суффикс = "_1";
			
			Пока ДанныеРаздела.Свойство("П000010002003" + Суффикс) Цикл
				
				ЗначениеПоказателя = 0;
				Если ДанныеРаздела.Свойство("П000010003003" + Суффикс, ЗначениеПоказателя) Тогда
					ЗначениеПоказателя = 0 + ЗначениеПоказателя;
					Если ЗначениеПоказателя >= 0 Тогда
						ДанныеРаздела.Вставить("П000010003003" + Суффикс, ЗначениеПоказателя);
						ДанныеРаздела.Вставить("П000010004003" + Суффикс, 0);
					Иначе
						ДанныеРаздела.Вставить("П000010003003" + Суффикс, 0);
						ДанныеРаздела.Вставить("П000010004003" + Суффикс, -ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
				
				НомСтроки = НомСтроки + 1;
				Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Раздел2 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел2", Раздел2);
	Если Раздел2 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел2 Цикл
			ДанныеРаздела = СтраницаРаздела.Данные;
			
			ЗначениеСтроки090 = 0;
			ЗначениеСтроки150 = 0;
			ЗначениеСтроки170 = 0;
			ЗначениеСтроки180 = 0;
			ЗначениеСтроки210 = 0;
			ЗначениеСтроки250 = 0;
			ЗначениеСтроки270 = 0;
			
			ДанныеРаздела.Свойство("П000020009003", ЗначениеСтроки090);
			ЗначениеСтроки090 = ?(ЗначениеЗаполнено(ЗначениеСтроки090), ЗначениеСтроки090, 0);
			
			ДанныеРаздела.Свойство("П000020017003", ЗначениеСтроки170);
			ЗначениеСтроки170 = ?(ЗначениеЗаполнено(ЗначениеСтроки170), ЗначениеСтроки170, 0);
			
			ДанныеРаздела.Свойство("П000020018003", ЗначениеСтроки180);
			ЗначениеСтроки180 = ?(ЗначениеЗаполнено(ЗначениеСтроки180), ЗначениеСтроки180, 0);
			
			ДанныеРаздела.Свойство("П000020021003", ЗначениеСтроки210);
			ЗначениеСтроки210 = ?(ЗначениеЗаполнено(ЗначениеСтроки210), ЗначениеСтроки210, 0);
			
			ДанныеРаздела.Свойство("П000020025003", ЗначениеСтроки250);
			ЗначениеСтроки250 = ?(ЗначениеЗаполнено(ЗначениеСтроки250), ЗначениеСтроки250, 0);
			
			ДанныеРаздела.Свойство("П000020027003", ЗначениеСтроки270);
			ЗначениеСтроки270 = ?(ЗначениеЗаполнено(ЗначениеСтроки270), ЗначениеСтроки270, 0);
			
			ЗначениеПоказателя = "";
			Если ДанныеРаздела.Свойство("П000020022003_Основание", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020015003_Числ", ЧислоИзСтроки(ЧастиЗначения[0]));
				ДанныеРаздела.Вставить("П000020015003_Знам", ЧислоИзСтроки(?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], "")));
				
				ЗначениеСтроки150 = ?(ЗначениеЗаполнено(ДанныеРаздела.П000020015003_Знам),
					ДанныеРаздела.П000020015003_Числ / ДанныеРаздела.П000020015003_Знам, ДанныеРаздела.П000020015003_Числ);
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000020022003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020022003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000020022003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000020024003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020024003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000020024003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
				
				Если ЗначениеЗаполнено(ДанныеРаздела.П000020024003_КодЛьготы) Тогда
					ЗначениеЗнаменатель = ЗначениеСтроки090 * ЗначениеСтроки150 * ЗначениеСтроки170 * ЗначениеСтроки180 * ЗначениеСтроки210;
					ЗначениеСтроки240а = ?(ЗначениеЗнаменатель > 0, (ЗначениеСтроки250 / ЗначениеЗнаменатель) * 100, 0);
					ДанныеРаздела.Вставить("П000020024003_Процент", ЗначениеСтроки240а);
				КонецЕсли;
			КонецЕсли;
			Если ДанныеРаздела.Свойство("П000020026003_КодЛьготы", ЗначениеПоказателя) Тогда
				ЧастиЗначения = СтрРазделить(ЗначениеПоказателя, "/");
				ДанныеРаздела.Вставить("П000020026003_КодЛьготы", ЧастиЗначения[0]);
				ДанныеРаздела.Вставить("П000020026003_Основание", ?(ЧастиЗначения.ВГраница() > 0 , ЧастиЗначения[1], ""));
				
				Если ЗначениеЗаполнено(ДанныеРаздела.П000020026003_КодЛьготы) Тогда
					ЗначениеЗнаменатель = ЗначениеСтроки090 * ЗначениеСтроки150 * ЗначениеСтроки180 * ЗначениеСтроки210;
					ЗначениеСтроки260а = ?(ЗначениеЗнаменатель > 0, ЗначениеСтроки170 - (ЗначениеСтроки270 / ЗначениеЗнаменатель), 0);
				Иначе
					ЗначениеСтроки260а = 0;
				КонецЕсли;
				ДанныеРаздела.Вставить("П000020026003_Ставка", ЗначениеСтроки260а);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти