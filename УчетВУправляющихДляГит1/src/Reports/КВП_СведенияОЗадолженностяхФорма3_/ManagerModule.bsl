
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура формирует отчет.
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапроса();

	Запрос.УстановитьПараметр("КонецМесяца",        КонецМесяца(ПараметрыОтчета.НачалоПериода));
	Запрос.УстановитьПараметр("КонецМесяцаГраница", Новый Граница(КонецМесяца(ПараметрыОтчета.НачалоПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",        ПараметрыОтчета.Организация);
	
	// Устанавливаем отбор в зависимости от значения реквизита "ОтборПомещений".
	Если ПараметрыОтчета.ОтборПомещений = "Жилые" Тогда
		Жилые = Истина;
	ИначеЕсли ПараметрыОтчета.ОтборПомещений = "Нежилые" Тогда
		Жилые = Ложь;
	Иначе
		Жилые = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокВидовПомещений", Справочники.УПЖКХ_ВидыПомещений.ПолучитьСписокВидовПомещений(Жилые));

	ДокументРезультат = Новый ТабличныйДокумент;

	Макет = ПолучитьМакет("Макет");

	СведенияОбОрганизации = УПЖКХ_ТиповыеМетодыСервер.СведенияОЮрФизЛице(ПараметрыОтчета.Организация, КонецМесяца(ПараметрыОтчета.НачалоПериода));

	// Вывод заголовка.
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ОписаниеПериода          = НРег(Формат(ПараметрыОтчета.НачалоПериода, "ДФ='MMMM yyyy'")) + " г.";
	ОбластьМакета.Параметры.ПредставлениеОрганизации = СведенияОбОрганизации.Представление;
	ОбластьМакета.Параметры.АдресОрганизации         = СведенияОбОрганизации.ЮридическийАдрес;
	ОбластьМакета.Параметры.КодПоОКПО                = ПараметрыОтчета.Организация.КодПоОКПО;
	ОбластьМакета.Параметры.КодОКОНХ                 = ПараметрыОтчета.Организация.КодОКОНХ;
	ОбластьМакета.Параметры.КодОКВЭД                 = ПараметрыОтчета.Организация.КодОКВЭД;
	ОбластьМакета.Параметры.КодОКОПФ                 = ПараметрыОтчета.Организация.КодОКОПФ;
	ОбластьМакета.Параметры.КодОКФС                  = ПараметрыОтчета.Организация.КодОКФС;
	ДокументРезультат.Вывести(ОбластьМакета);

	// Вывод строк таблицы.
	НомерСтроки = 1;
	СтрокаИтога = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если СтрокаИтога.Следующий() Тогда
		ВыборкаЗапроса = СтрокаИтога.Выбрать();
		Пока ВыборкаЗапроса.Следующий() Цикл

			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаЗапроса);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			ДокументРезультат.Вывести(ОбластьМакета);

			НомерСтроки    = НомерСтроки    + 1;

		КонецЦикла;
	КонецЕсли;

	// Вывод подвала таблицы.
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(СтрокаИтога);
	ДокументРезультат.Вывести(ОбластьМакета);

	Руководители      = УПЖКХ_ТиповыеМетодыВызовСервера.ОтветственныеЛица(ПараметрыОтчета.Организация, 
																				  КонецМесяца(ПараметрыОтчета.НачалоПериода));
	ДанныеИсполнителя = УПЖКХ_ТиповыеМетодыСервер.ФамилияИнициалыФизЛица(ПараметрыОтчета.Исполнитель.Наименование);
	
	// Вывод второй страницы.
	ОбластьМакета = Макет.ПолучитьОбласть("Страница2");
	ОбластьМакета.Параметры.Период = Формат( НачалоМесяца(ПараметрыОтчета.НачалоПериода), "ДФ='dd MMMM yyyy'") + " года.";
	ОбластьМакета.Параметры.ИсполнительПредставление  = ДанныеИсполнителя;
	ОбластьМакета.Параметры.РуководительДолжность     = Руководители.РуководительДолжность;
	ОбластьМакета.Параметры.РуководительПредставление = Руководители.Руководитель;
	ОбластьМакета.Параметры.ГлавБухПредставление      = Руководители.ГлавныйБухгалтер;
	ДокументРезультат.Вывести(ОбластьМакета);
	
	// Присвоим имя для сохранения параметров печати табличного документа.
	ДокументРезультат.ИмяПараметровПечати = "НастройкиПечати_КВП_СведенияОЗадолженностяхФорма3";
	
	// Область печати
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1, 1,
									  ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ПоместитьВоВременноеХранилище(ДокументРезультат, АдресХранилища);
	
КонецПроцедуры

// Формирует текст запроса.
//
// Возвращаемое значение:
//  Строка – текст запроса
//
Функция ПолучитьТекстЗапроса()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УПЖКХ_НачисленияОбороты.Услуга.ВидУслуги КАК ВидУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ЗачетДолговИПереплат))
	|				ТОГДА 0
	|			ИНАЧЕ УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|		КОНЕЦ) КАК НачисленоСНачалаГода,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата)
	|				ТОГДА -УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПоступилоСНачалаГода
	|ПОМЕСТИТЬ втНачисленияГод
	|ИЗ
	|	РегистрНакопления.УПЖКХ_Начисления.Обороты(
	|			НАЧАЛОПЕРИОДА(&КонецМесяца, ГОД),
	|			&КонецМесяцаГраница,
	|			Период,
	|			Организация = &Организация
	|				И ЛицевойСчет.Адрес.ВидПомещения В (&СписокВидовПомещений)) КАК УПЖКХ_НачисленияОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_НачисленияОбороты.Услуга.ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УПЖКХ_НачисленияОбороты.Услуга.ВидУслуги КАК ВидУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ЗачетДолговИПереплат))
	|				ТОГДА 0
	|			ИНАЧЕ УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|		КОНЕЦ) КАК НачисленоЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата)
	|				ТОГДА -УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПоступилоЗаМесяц
	|ПОМЕСТИТЬ втНачисленияМесяц
	|ИЗ
	|	РегистрНакопления.УПЖКХ_Начисления.Обороты(
	|			НАЧАЛОПЕРИОДА(&КонецМесяца, МЕСЯЦ),
	|			&КонецМесяцаГраница,
	|			Период,
	|			Организация = &Организация
	|				И ЛицевойСчет.Адрес.ВидПомещения В (&СписокВидовПомещений)) КАК УПЖКХ_НачисленияОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_НачисленияОбороты.Услуга.ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНачисленияГод.ВидУслуги,
	|	втНачисленияГод.НачисленоСНачалаГода,
	|	втНачисленияГод.ПоступилоСНачалаГода,
	|	ЕСТЬNULL(втНачисленияМесяц.НачисленоЗаМесяц, 0) КАК НачисленоЗаМесяц,
	|	ЕСТЬNULL(втНачисленияМесяц.ПоступилоЗаМесяц, 0) КАК ПоступилоЗаМесяц
	|ПОМЕСТИТЬ втНачисленияИОплаты
	|ИЗ
	|	втНачисленияГод КАК втНачисленияГод
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНачисленияМесяц КАК втНачисленияМесяц
	|		ПО втНачисленияГод.ВидУслуги = втНачисленияМесяц.ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНачисленияИОплаты.ВидУслуги,
	|	втНачисленияИОплаты.НачисленоСНачалаГода КАК НачисленоСНачалаГода,
	|	втНачисленияИОплаты.ПоступилоСНачалаГода КАК ПоступилоСНачалаГода,
	|	втНачисленияИОплаты.НачисленоЗаМесяц КАК НачисленоЗаМесяц,
	|	втНачисленияИОплаты.ПоступилоЗаМесяц КАК ПоступилоЗаМесяц,
	|	0 КАК ЗадолженностьНаКонецМесяца
	|ПОМЕСТИТЬ втТаблицаДанных
	|ИЗ
	|	втНачисленияИОплаты КАК втНачисленияИОплаты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.Услуга.ВидУслуги,
	|	0,
	|	0,
	|	0,
	|	0,
	|	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.СуммаНачисленияОстаток
	|ИЗ
	|	РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.Остатки(
	|			&КонецМесяцаГраница,
	|			Организация = &Организация
	|				И ЛицевойСчет.Адрес.ВидПомещения В (&СписокВидовПомещений)) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаДанных.ВидУслуги,
	|	СУММА(втТаблицаДанных.НачисленоСНачалаГода) КАК НачисленоСНачалаГода,
	|	СУММА(втТаблицаДанных.ПоступилоСНачалаГода) КАК ПоступилоСНачалаГода,
	|	СУММА(втТаблицаДанных.НачисленоЗаМесяц) КАК НачисленоЗаМесяц,
	|	СУММА(втТаблицаДанных.ПоступилоЗаМесяц) КАК ПоступилоЗаМесяц,
	|	СУММА(втТаблицаДанных.ЗадолженностьНаКонецМесяца) КАК ЗадолженностьНаКонецМесяца
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблицаДанных.ВидУслуги
	|ИТОГИ
	|	СУММА(НачисленоСНачалаГода),
	|	СУММА(ПоступилоСНачалаГода),
	|	СУММА(НачисленоЗаМесяц),
	|	СУММА(ПоступилоЗаМесяц),
	|	СУММА(ЗадолженностьНаКонецМесяца)
	|ПО
	|	ОБЩИЕ
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапроса()

#КонецОбласти

#КонецЕсли