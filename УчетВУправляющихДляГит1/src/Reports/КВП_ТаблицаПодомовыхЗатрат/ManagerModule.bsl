
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует отчет по переданным параметрам и помещает его результат во временное хранилище.
//
// Параметры:
//	ПараметрыОтчета - Структура - Содержит параметры отчета.
//	АдресХранилища - Строка - Адрес временного хранилища, в которое необходимо поместить результат.
//
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = Отчеты.КВП_ТаблицаПодомовыхЗатрат.ПолучитьМакет("Макет");
	
	// Инициализируем запрос по затратам.
	мЗапросПоЗатратам = Новый Запрос();
	мЗапросПоЗатратам.УстановитьПараметр("НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
	мЗапросПоЗатратам.УстановитьПараметр("КонецПериода",  КонецДня(ПараметрыОтчета.КонецПериода));
	мЗапросПоЗатратам.УстановитьПараметр("Организация",   ПараметрыОтчета.Организация);
	мЗапросПоЗатратам.УстановитьПараметр("Дом",           ПараметрыОтчета.Дом);
	
	ДопУсловиеДом = "ИСТИНА";
	Если Не ПараметрыОтчета.Дом.Пустая() Тогда
		ДопУсловиеДом = "Здание = &Дом";
	КонецЕсли;
	
	мЗапросПоЗатратам.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_ЗатратыПодомовогоУчетаОбороты.Номенклатура КАК Номенклатура,
	|	КВП_ЗатратыПодомовогоУчетаОбороты.Номенклатура.ЭтоГруппа КАК ЭтоГруппа,
	|	СУММА(КВП_ЗатратыПодомовогоУчетаОбороты.СуммаОборот) КАК ВыполненоРаботФакт
	|ИЗ
	|	РегистрНакопления.КВП_ЗатратыПодомовогоУчета.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И &ДопУсловиеДом) КАК КВП_ЗатратыПодомовогоУчетаОбороты
	|ГДЕ
	|	НЕ КВП_ЗатратыПодомовогоУчетаОбороты.ВидЗатрат = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыПодомовыхЗатрат.Планирование)
	|
	|СГРУППИРОВАТЬ ПО
	|	КВП_ЗатратыПодомовогоУчетаОбороты.Номенклатура,
	|	КВП_ЗатратыПодомовогоУчетаОбороты.Номенклатура.ЭтоГруппа
	|ИТОГИ
	|	КВП_ЗатратыПодомовогоУчетаОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ВыполненоРаботФакт)
	|ПО
	|	Номенклатура ИЕРАРХИЯ";
	
	мЗапросПоЗатратам.Текст = СтрЗаменить(мЗапросПоЗатратам.Текст, "&ДопУсловиеДом", ДопУсловиеДом);
	
	ТаблицаЗатрат = мЗапросПоЗатратам.Выполнить().Выгрузить();
	ТаблицаЗатрат.Свернуть("Номенклатура, ВыполненоРаботФакт, ЭтоГруппа");
	ТаблицаЗатрат.Колонки.Добавить("ЗатратыВыведены", Новый ОписаниеТипов("Булево"), "Общедомовые затраты по услуге выведены");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация",   ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("МассивУслуг",   ПараметрыОтчета.МассивУслуг);
	Запрос.УстановитьПараметр("Дом",           ПараметрыОтчета.Дом);
	
	СтруктураИтогов = Новый Структура();
	СтруктураИтогов.Вставить("Начислено",          0);
	СтруктураИтогов.Вставить("Оплачено",           0);
	СтруктураИтогов.Вставить("ВыполненоРаботФакт", 0);
	СтруктураИтогов.Вставить("УдельныйВесФакт",    0);
	СтруктураИтогов.Вставить("Площадь",            0);
	
	ДопУсловие = "ИСТИНА";
	Если ПараметрыОтчета.МассивУслуг.Количество() > 0 Тогда
		ДопУсловие = ДопУсловие + " И Услуга.Услуга В (&МассивУслуг)";
	КонецЕсли;
	Если Не ПараметрыОтчета.Дом.Пустая() Тогда
		ДопУсловие = ДопУсловие + " И ЛицевойСчет.Адрес.Владелец = &Дом";
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_НачисленияОбороты.ЛицевойСчет,
	|	УПЖКХ_НачисленияОбороты.Услуга.Услуга КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ УПЖКХ_НачисленияОбороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_РазделыУчета.Льготы)
	|					И НЕ УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ЗачетДолговИПереплат))
	|				ТОГДА УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНачисления,
	|	СУММА(ВЫБОР
	|			КОГДА УПЖКХ_НачисленияОбороты.ВидНачисления В (ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.Оплата), ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВидыНачислений.ЗачетДолговИПереплат))
	|				ТОГДА -УПЖКХ_НачисленияОбороты.СуммаНачисленияОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОплаты
	|ПОМЕСТИТЬ втТаблицаНачисленийИОплат
	|ИЗ
	|	РегистрНакопления.УПЖКХ_Начисления.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И НЕ Услуга.Услуга = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И &ДопУсловие) КАК УПЖКХ_НачисленияОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_НачисленияОбороты.ЛицевойСчет,
	|	УПЖКХ_НачисленияОбороты.Услуга.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КВП_ПлощадьПомещенияСрезПоследних.Объект,
	|	КВП_ПлощадьПомещенияСрезПоследних.Площадь
	|ПОМЕСТИТЬ втОбщиеПлощади
	|ИЗ
	|	РегистрСведений.КВП_ПлощадьПомещения.СрезПоследних(&КонецПериода, ВидПлощади = ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ОбщаяПлощадь)) КАК КВП_ПлощадьПомещенияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаНачисленийИОплат.ЛицевойСчет КАК ЛицевойСчет,
	|	втТаблицаНачисленийИОплат.Номенклатура КАК Номенклатура,
	|	втТаблицаНачисленийИОплат.СуммаНачисления КАК СуммаНачисления,
	|	втТаблицаНачисленийИОплат.СуммаОплаты КАК СуммаОплаты,
	|	ЕСТЬNULL(втОбщиеПлощади.Площадь, 0) КАК Площадь
	|ИЗ
	|	втТаблицаНачисленийИОплат КАК втТаблицаНачисленийИОплат
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбщиеПлощади КАК втОбщиеПлощади
	|		ПО втТаблицаНачисленийИОплат.ЛицевойСчет.Адрес = втОбщиеПлощади.Объект
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ЛицевойСчет
	|ИТОГИ
	|	СУММА(СуммаНачисления),
	|	СУММА(СуммаОплаты),
	|	СУММА(Площадь)
	|ПО
	|	ОБЩИЕ,
	|	Номенклатура ИЕРАРХИЯ,
	|	ЛицевойСчет";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДопУсловие", ДопУсловие);
	
	ВыборкаИтогов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаИтогов.Следующий() Тогда
		СтруктураИтогов.Начислено = ВыборкаИтогов.СуммаНачисления;
		СтруктураИтогов.Оплачено  = ВыборкаИтогов.СуммаОплаты;
		СтруктураИтогов.Площадь   = ВыборкаИтогов.Площадь;
	Иначе
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Нет данных для формирования отчета за выбранный период!");
		Возврат;
	КонецЕсли;
	
	ВыборкаРезультат = ВыборкаИтогов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОблШапка       = Макет.ПолучитьОбласть("Шапка");
	ОблШапкаТЧ     = Макет.ПолучитьОбласть("ШапкаТЧ");
	ОблСтрокаТЧ    = Макет.ПолучитьОбласть("СтрокаТЧ");
	ОблСтрокаИтого = Макет.ПолучитьОбласть("СтрокаИтого");
	ОблДом         = Макет.ПолучитьОбласть("Дом");
	
	ОблШапка.Параметры.ПредставлениеПериода = "За период: " 
											+ ПредставлениеПериода(НачалоДня(ПараметрыОтчета.НачалоПериода), КонецДня(ПараметрыОтчета.КонецПериода), "ФП = Истина");
	ТабличныйДокумент.Вывести(ОблШапка);
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.Дом) Тогда
		ОблДом.Параметры.Дом = ПараметрыОтчета.Дом;
		ТабличныйДокумент.Вывести(ОблДом);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОблШапкаТЧ);
	
	НомерСтроки = 1;
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	ПредГруппа = Справочники.Номенклатура.ПустаяСсылка();
	
	ТекПлощадь = 0;
	ЯчейкаЗатраты = "R1C3";
	
	Пока ВыборкаРезультат.Следующий() Цикл
		
		Если ВыборкаРезультат.Номенклатура.ЭтоГруппа Тогда
			
			Уровень = ВыборкаРезультат.Номенклатура.Уровень();
			ОблСтрокаТЧ = Макет.ПолучитьОбласть("СтрокаТЧ");
			ОблСтрокаТЧ.Параметры.Номенклатура = ВыборкаРезультат.Номенклатура;
			ОблСтрокаТЧ.Параметры.НомерСтроки  = НомерСтроки;
			ОблСтрокаТЧ.Параметры.Начислено    = ВыборкаРезультат.СуммаНачисления;
			ОблСтрокаТЧ.Параметры.Оплачено     = ВыборкаРезультат.СуммаОплаты;
			ОблСтрокаТЧ.Параметры.Баланс       = ВыборкаРезультат.СуммаОплаты - ВыборкаРезультат.СуммаНачисления;
			
			НомерСтроки = НомерСтроки + 1;
			
			ОблСтрокаТЧ.Область(ЯчейкаЗатраты).Отступ = Уровень * 2;
			
			ПредГруппа = ВыборкаРезультат.Номенклатура;
			
			СтрокаТаблицыЗатрат = ТаблицаЗатрат.Найти(ВыборкаРезультат.Номенклатура, "Номенклатура");
			ИтогВыполненоРаботФакт = 0;
			
			Если СтрокаТаблицыЗатрат <> Неопределено Тогда
				
				ИтогВыполненоРаботФакт = СтрокаТаблицыЗатрат.ВыполненоРаботФакт;
				
				ОблСтрокаТЧ.Параметры.ВыполненоРаботФакт = ИтогВыполненоРаботФакт;
				
				ОблСтрокаТЧ.Параметры.БалансФакт         = ВыборкаРезультат.СуммаНачисления - ИтогВыполненоРаботФакт;
				ОблСтрокаТЧ.Параметры.Задолженность      = (ВыборкаРезультат.СуммаОплаты - ВыборкаРезультат.СуммаНачисления)
														 + (ВыборкаРезультат.СуммаНачисления - ИтогВыполненоРаботФакт);
				ОблСтрокаТЧ.Параметры.УдельныйВесФакт    = ?(Не ВыборкаРезультат.Площадь = 0, 
															ИтогВыполненоРаботФакт / ВыборкаРезультат.Площадь,
															0);
				
				ТабличныйДокумент.Вывести(ОблСтрокаТЧ, Уровень);
				
				СтрокаТаблицыЗатрат.ЗатратыВыведены = Истина;
				
			КонецЕсли;
			
		Иначе
			
			Уровень = ВыборкаРезультат.Номенклатура.Уровень();
			ОблСтрокаТЧ = Макет.ПолучитьОбласть("СтрокаТЧ");
			ОблСтрокаТЧ.Область(ЯчейкаЗатраты).Отступ = Уровень * 2;
			ОблСтрокаТЧ.Параметры.Номенклатура = ВыборкаРезультат.Номенклатура;
			ОблСтрокаТЧ.Параметры.НомерСтроки  = НомерСтроки;
			ОблСтрокаТЧ.Параметры.Начислено    = ВыборкаРезультат.СуммаНачисления;
			ОблСтрокаТЧ.Параметры.Оплачено     = ВыборкаРезультат.СуммаОплаты;
			ОблСтрокаТЧ.Параметры.Баланс       = ВыборкаРезультат.СуммаОплаты - ВыборкаРезультат.СуммаНачисления;
			
			НомерСтроки = НомерСтроки + 1;
			
			СтрокаТаблицыЗатрат = ТаблицаЗатрат.Найти(ВыборкаРезультат.Номенклатура, "Номенклатура");
			ИтогВыполненоРаботФакт = 0;
			
			Если СтрокаТаблицыЗатрат <> Неопределено Тогда
				
				ИтогВыполненоРаботФакт = СтрокаТаблицыЗатрат.ВыполненоРаботФакт;
				
				ОблСтрокаТЧ.Параметры.ВыполненоРаботФакт = ИтогВыполненоРаботФакт;
				
				ОблСтрокаТЧ.Параметры.БалансФакт         = ВыборкаРезультат.СуммаНачисления - ИтогВыполненоРаботФакт;
				ОблСтрокаТЧ.Параметры.Задолженность      = (ВыборкаРезультат.СуммаОплаты - ВыборкаРезультат.СуммаНачисления)
														 + (ВыборкаРезультат.СуммаНачисления - ИтогВыполненоРаботФакт);
				ОблСтрокаТЧ.Параметры.УдельныйВесФакт    = ?(Не ВыборкаРезультат.Площадь = 0, 
															ИтогВыполненоРаботФакт / ВыборкаРезультат.Площадь,
															0);
				СтрокаТаблицыЗатрат.ЗатратыВыведены = Истина;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОблСтрокаТЧ, Уровень);
			
			ВыборкаЛС = ВыборкаРезультат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЛС.Следующий() Цикл
				ОблСтрокаТЧ = Макет.ПолучитьОбласть("СтрокаТЧ");
				ОблСтрокаТЧ.Область(ЯчейкаЗатраты).Отступ = (Уровень + 1) * 2;
				ОблСтрокаТЧ.Параметры.Номенклатура = ВыборкаЛС.ЛицевойСчет;
				ОблСтрокаТЧ.Параметры.НомерСтроки  = НомерСтроки;
				ОблСтрокаТЧ.Параметры.Начислено    = ВыборкаЛС.СуммаНачисления;
				ОблСтрокаТЧ.Параметры.Оплачено     = ВыборкаЛС.СуммаОплаты;
				ОблСтрокаТЧ.Параметры.Баланс       = ВыборкаЛС.СуммаОплаты - ВыборкаЛС.СуммаНачисления;
				
				НомерСтроки = НомерСтроки + 1;
				
				ТабличныйДокумент.Вывести(ОблСтрокаТЧ, Уровень + 1);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВыполненоРаботФакт = 0;
	Если Не ТаблицаЗатрат = Неопределено Тогда
		
		ПредУровень = 0;
		ТекУровень  = 0;
		ПредГруппа  = Неопределено;
		ПредЭлемент = Неопределено;
		
		Для Каждого ТекСтрока Из ТаблицаЗатрат Цикл
			
			Если ТекСтрока.ЗатратыВыведены = Ложь Тогда
				ОблСтрокаТЧ = Макет.ПолучитьОбласть("СтрокаТЧ");
				ОблСтрокаТЧ.Параметры.Заполнить(ТекСтрока);
				
				Если ПредГруппа = Неопределено Тогда
					ТекУровень = 0;
				КонецЕсли;
				
				Если ТекСтрока.Номенклатура.Родитель = ПредГруппа И ПредГруппа = ПредЭлемент Тогда
					ТекУровень = ПредУровень + 1;
				ИначеЕсли ТекСтрока.Номенклатура.Родитель <> ПредГруппа Тогда
					Пока Истина Цикл
						Если ТекУровень = 0 Тогда
							ПредГруппа = Неопределено;
							Прервать;
						Иначе
							Если ТекСтрока.Номенклатура.Родитель <> ПредГруппа Тогда
								ПредГруппа = ПредГруппа.Родитель;
								ТекУровень = ТекУровень - 1;
							Иначе
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ОблСтрокаТЧ.Область(ЯчейкаЗатраты).Отступ = (ТекУровень) * 2;
				ОблСтрокаТЧ.Область(ЯчейкаЗатраты).ЦветТекста = ЦветаСтиля.ЦветОтрицательногоЧисла;
				ОблСтрокаТЧ.Параметры.НомерСтроки = НомерСтроки;
				
				ТабличныйДокумент.Вывести(ОблСтрокаТЧ, ТекУровень);
				
				НомерСтроки = НомерСтроки + 1;
				ПредУровень = ТекУровень;
				ПредЭлемент = ТекСтрока.Номенклатура;
				
				Если ТекСтрока.ЭтоГруппа Тогда
					ПредГруппа = ТекСтрока.Номенклатура;
				КонецЕсли;
				
			КонецЕсли;
			
			Если НЕ ТекСтрока.ЭтоГруппа Тогда
				ВыполненоРаботФакт = ВыполненоРаботФакт + ТекСтрока.ВыполненоРаботФакт;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	СтруктураИтогов.ВыполненоРаботФакт = ВыполненоРаботФакт;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	
	ОблСтрокаИтого.Параметры.Заполнить(СтруктураИтогов);
	ОблСтрокаИтого.Параметры.Баланс        = СтруктураИтогов.Оплачено - СтруктураИтогов.Начислено;
	ОблСтрокаИтого.Параметры.БалансФакт    = СтруктураИтогов.Начислено - СтруктураИтогов.ВыполненоРаботФакт;
	ОблСтрокаИтого.Параметры.Задолженность = (СтруктураИтогов.Оплачено - СтруктураИтогов.Начислено)
										   + (СтруктураИтогов.Начислено - СтруктураИтогов.ВыполненоРаботФакт);
	ОблСтрокаИтого.Параметры.УдельныйВесФакт = ?(Не СтруктураИтогов.Площадь = 0, 
													СтруктураИтогов.ВыполненоРаботФакт / СтруктураИтогов.Площадь,
													0);
	
	ТабличныйДокумент.Вывести(ОблСтрокаИтого);
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ТабличныйДокумент.ИмяПараметровПечати = "ДействующиеНачисленияКВП";
	
	ПоместитьВоВременноеХранилище(ТабличныйДокумент, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли