#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт 
	
	Возврат "Регистр информации об объекте основных средств на " + ПредставлениеПериода(НачалоДня(ПараметрыОтчета.ДатаСведений), КонецДня(ПараметрыОтчета.ДатаСведений), "ФП = Истина"); 
	
КонецФункции

Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Для Каждого Вариант из Схема.ВариантыНастроек Цикл
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.Отчеты.Подсистемы.НалогНаПрибыль.Подсистемы.РегистрыУчетаСостоянияЕдиницыНалоговогоУчета, 
			НСтр("ru = 'Информация об объекте основных средств'"));
	КонецЦикла;
	
КонецПроцедуры

//Процедура используется подсистемой варианты отчетов
//
Процедура НастройкиОтчета(Настройки) Экспорт
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Для Каждого Вариант из Схема.ВариантыНастроек Цикл
		 Настройки.ОписаниеВариантов.Вставить(Вариант.Имя, Вариант.Представление);
	КонецЦикла;	
	
КонецПроцедуры

// Функция формирует табличный документ 
// Утверждена постановлением Госкомстата России от 21.01.2003 № 7
// Возвращаемое значение:
//  Табличный документ - печатная форма инвентарной карточки ОС
Процедура СформироватьТабличныйДокумент(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	ОбластьЗаголовок = Неопределено;
	ОбластьОрганизация = Неопределено;
	
	Если ПараметрыОтчета.ВыводитьЗаголовок Тогда
		Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
		ОбластьЗаголовок        = Макет.ПолучитьОбласть("ОбластьЗаголовок");
		ОбластьОрганизация      = Макет.ПолучитьОбласть("Организация");
		
		//Организация
		ТекстОрганизация = БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(ПараметрыОтчета.Организация, Ложь);
		ОбластьОрганизация.Параметры.НазваниеОрганизации = ТекстОрганизация;		
		
		//Заголовок
		ОбластьЗаголовок.Параметры.ЗаголовокОтчета = "" + ПолучитьТекстЗаголовка(ПараметрыОтчета);
	КонецЕсли;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.РегистрИнформацииОбОбъектеОС.РегистрИнформацииОбОбъектеОС");
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ШапкаРазделов1и2  = Макет.ПолучитьОбласть("ШапкаРазделов1и2");
	ШапкаРаздела3     = Макет.ПолучитьОбласть("ШапкаРаздела3");
	СтрокаРаздела3    = Макет.ПолучитьОбласть("СтрокаРаздела3");
	ШапкаРаздела4     = Макет.ПолучитьОбласть("ШапкаРаздела4");
	СтрокаРаздела4    = Макет.ПолучитьОбласть("СтрокаРаздела4");
	ШапкаРаздела5     = Макет.ПолучитьОбласть("ШапкаРаздела5");
	СтрокаРаздела5    = Макет.ПолучитьОбласть("СтрокаРаздела5");
	ИтогРаздела5      = Макет.ПолучитьОбласть("ИтогРаздела5");
	ПодвалСтраницы   = Макет.ПолучитьОбласть("ПодвалСтраницы");
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.ДатаСведений) Тогда
		ДатаСведений = КонецДня(ПараметрыОтчета.ДатаСведений);
	Иначе
		ДатаСведений = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ПараметрыОтчета.ВыводитьПодвал Тогда
		
		РеквизитыОтветственныхЛиц = ОтветственныеЛицаБП.ОтветственныеЛица(ПараметрыОтчета.Организация, ДатаСведений);
	
		Если ЗначениеЗаполнено(РеквизитыОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистры) Тогда
			
			ПодвалСтраницы.Параметры.ДолжностьОтветственного = РеквизитыОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистрыДолжностьПредставление;
			ПодвалСтраницы.Параметры.ФИООтветственного = РеквизитыОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистрыПредставление;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаОбъектов = Новый ТаблицаЗначений;
	ТаблицаОбъектов.Колонки.Добавить("ОС", Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТаблицаОбъектов.Колонки.Добавить("Номер", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	НомерСтроки = 1;
	Для каждого ОС Из ПараметрыОтчета.МассивОбъектов Цикл
		СтрокаТаблицы = ТаблицаОбъектов.Добавить();
		СтрокаТаблицы.ОС = ОС;
		СтрокаТаблицы.Номер = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбъектов", ТаблицаОбъектов);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	Запрос.УстановитьПараметр("МассивОбъектов", ПараметрыОтчета.МассивОбъектов);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОС КАК ОС,
	|	ТаблицаОС.Номер КАК Порядок
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОбъектов КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияПоОрганизации.ОсновноеСредство КАК ОС,
	|	СведенияПоОрганизации.Организация КАК Организация
	|ПОМЕСТИТЬ СведенияПоОрганизации
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&ДатаСведений,
	|			ОсновноеСредство В (&МассивОбъектов)
	|				И Организация = &Организация) КАК СведенияПоОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновныеСредства.Ссылка КАК Ссылка,
	|	ОсновныеСредства.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ОсновныеСредства.ДатаВыпуска КАК ДатаВыпуска,
	|	ОсновныеСредства.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ОсновныеСредства.Изготовитель КАК Изготовитель,
	|	ОсновныеСредства.НаименованиеПолное КАК НаименованиеПолное,
	|	ОсновныеСредства.НомерПаспорта КАК НомерПаспорта,
	|	ЕСТЬNULL(СведенияПоОрганизации.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ТаблицаОС.Порядок КАК Порядок,
	|	ОсновныеСредства.Наименование
	|ИЗ
	|	СведенияПоОрганизации КАК СведенияПоОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|			ПО ТаблицаОС.ОС = ОсновныеСредства.Ссылка
	|		ПО (ТаблицаОС.ОС = СведенияПоОрганизации.ОС)
	|ГДЕ
	|	ОсновныеСредства.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	РезультатЗапрос = Запрос.Выполнить();
	
	Если РезультатЗапрос.Пустой() Тогда
		ПоместитьВоВременноеХранилище(Новый Структура("Результат,ДанныеРасшифровки", Результат, Неопределено), АдресХранилища);
		Возврат;
	КонецЕсли;
	
	ВыборкаОбъектов = РезультатЗапрос.Выбрать();
	
	Пока ВыборкаОбъектов.Следующий() Цикл
		
		Если ПараметрыОтчета.ВыводитьЗаголовок Тогда
			//Заголовок
			Результат.Вывести(ОбластьОрганизация);
			Результат.Вывести(ОбластьЗаголовок);
		КонецЕсли;
		
		//Последние сведения об ОС
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Организация", ВыборкаОбъектов.Организация);
		Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
		Запрос.УстановитьПараметр("ОсновноеСредство", ВыборкаОбъектов.Ссылка);
		Запрос.УстановитьПараметр("СубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
		|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации,
		|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследних
		|ИЗ
		|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
		|			&ДатаСведений,
		|			Организация = &Организация
		|				И ОсновноеСредство = &ОсновноеСредство) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации,
		|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.Период,
		|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
		|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации,
		|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимость,
		|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение.Наименование,
		|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство,
		|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ИнвентарныйНомер,
		|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУОстаток, 0) КАК Остаток,
		|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.СтоимостьДо2002 - ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.АмортизацияДо2002 КАК ОстаточнаяСтоимостьНа2002
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
		|			&ДатаСведений,
		|			Организация = &Организация
		|				И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
		|				&ДатаСведений,
		|				Организация = &Организация
		|					И ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
		|		ПО ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
		|		ПО ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&ДатаСведений,
		|				Организация = &Организация
		|					И ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
		|		ПО ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|				&ДатаСведений,
		|				Организация = &Организация
		|					И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних
		|		ПО ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство = ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&ДатаСведений,
		|				Счет В
		|					(ВЫБРАТЬ
		|						СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета
		|					ИЗ
		|						СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних),
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|				Организация = &Организация
		|					И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|		ПО ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1
		|ГДЕ
		|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.Организация = &Организация";
		ТекущиеСведенияОС = Запрос.Выполнить().Выбрать();
		ТекущиеСведенияОС.Следующий();
					
		СчетУчетаСтоимостиНУ = ТекущиеСведенияОС.СчетУчета;
		СрокИспользования   = ТекущиеСведенияОС.СрокПолезногоИспользования;
		
		Отбор  = Новый Структура( "ОсновноеСредство", ВыборкаОбъектов.Ссылка);
		Подразделение  = ТекущиеСведенияОС.МестонахождениеНаименование;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаОбъектов.Организация, ДатаСведений);
		
		Шапка.Параметры.НаименованиеОС     = ?(НЕ ЗначениеЗаполнено(ВыборкаОбъектов.НаименованиеПолное),
		ВыборкаОбъектов.Наименование, ВыборкаОбъектов.НаименованиеПолное);
		
		Шапка.Параметры.МестоНахождениеОС 		= Подразделение;
		Шапка.Параметры.ИзготовительОС    		= ВыборкаОбъектов.Изготовитель;
		Шапка.Параметры.НомерГруппы       		= ВыборкаОбъектов.АмортизационнаяГруппа;
		Шапка.Параметры.НомерПаспорта     		= ВыборкаОбъектов.НомерПаспорта;
		Шапка.Параметры.ЗаводскойНомер    		= ВыборкаОбъектов.ЗаводскойНомер;
		Шапка.Параметры.ИнвентарныйНомер  		= ТекущиеСведенияОС.ИнвентарныйНомер;
		Шапка.Параметры.СубСчет           		= Строка(СчетУчетаСтоимостиНУ);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостоянияОСОрганизаций.Состояние,
		|	СостоянияОСОрганизаций.ДатаСостояния,
		|	СобытияОСОрганизаций.НазваниеДокумента,
		|	СобытияОСОрганизаций.НомерДокумента,
		|	СобытияОСОрганизаций.Событие,
		|	СостоянияОСОрганизаций.Регистратор
		|ИЗ
		|	РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
		|		ПО СобытияОСОрганизаций.Период = СостоянияОСОрганизаций.ДатаСостояния
		|			И СобытияОСОрганизаций.Регистратор = СостоянияОСОрганизаций.Регистратор
		|ГДЕ
		|	СобытияОСОрганизаций.Организация = &Организация
		|	И СостоянияОСОрганизаций.Организация = &Организация
		|	И СобытияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство
		|	И СостоянияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство
		|	И СобытияОСОрганизаций.Период <= &ДатаСведений
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	СобытияОСОрганизацийСрезПоследних.Период,
		|	СобытияОСОрганизацийСрезПоследних.НазваниеДокумента,
		|	СобытияОСОрганизацийСрезПоследних.НомерДокумента,
		|	СобытияОСОрганизацийСрезПоследних.Событие,
		|	СобытияОСОрганизацийСрезПоследних.Регистратор
		|ИЗ
		|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
		|			&ДатаСведений,
		|			ОсновноеСредство = &ОсновноеСредство
		|				И Организация = &Организация
		|				И Событие.ВидСобытияОС В (&МодернизацияИКапРемонт)) КАК СобытияОСОрганизацийСрезПоследних";
		
		Запрос.УстановитьПараметр("Организация", ВыборкаОбъектов.Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", ВыборкаОбъектов.Ссылка);
		Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
		
		ВидыСобытий = Новый СписокЗначений;
		ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
		ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Достройка);
		ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
		ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.КапитальныйРемонт);
		
		Запрос.УстановитьПараметр("МодернизацияИКапРемонт", ВидыСобытий);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДатаПринятия     = '00010101';
		ДокументПринятия = "";
		
		ДатаВвода     = '00010101';
		ДокументВвода = "";
		ДокументВводаНомер = "";
		
		ДатаСписания       = '00010101';
		ДокументСписания   = "";
		РегистраторСписания = Неопределено;
		
		АмортизационнаяПремия = Ложь;
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.Состояние   = Перечисления.СостоянияОС.ПринятоКУчету Тогда
				 ДатаПринятия        = Макс('20020101', Выборка.ДатаСостояния);
				 ДокументПринятия    = Выборка.НазваниеДокумента;
			ИначеЕсли Выборка.Состояние = Перечисления.СостоянияОС.СнятоСУчета Тогда
				 ДатаСписания        = Выборка.ДатаСостояния;
				 ДокументСписания    = Выборка.НазваниеДокумента;
				 РегистраторСписания = Выборка.Регистратор;
			Иначе
				ДатаПоследнейМодернизации     = Выборка.ДатаСостояния;
				ДокументПоследнейМодернизации = Выборка.НазваниеДокумента;
			КонецЕсли; 
			
			Если Выборка.Событие.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию или Выборка.Событие.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчету Тогда
				ДокументВводаНомер	 = Выборка.НомерДокумента;
				ДокументВвода 		 = Выборка.НазваниеДокумента;
				ДатаВвода 			 = Выборка.ДатаСостояния;
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаМесяцевЭксплуатацииОС = Новый ТаблицаЗначений;
		ТаблицаМесяцевЭксплуатацииОС.Колонки.Добавить("Месяц", Новый ОписаниеТипов("Дата"));
		//Заполнение таблицы всеми месяцами интервала
		КурсорТаблицыМесяцев = НачалоМесяца(ДатаПринятия);
		ГраницаТаблицыМесяцев = НачалоМесяца(ДатаСведений);
		Пока КурсорТаблицыМесяцев <= ГраницаТаблицыМесяцев Цикл
			СтрокаТаблицыМесяцев = ТаблицаМесяцевЭксплуатацииОС.Добавить();
			СтрокаТаблицыМесяцев.Месяц = НачалоМесяца(КурсорТаблицыМесяцев);
			КурсорТаблицыМесяцев = КонецМесяца(КурсорТаблицыМесяцев) + 1;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",           	ДатаСведений);
		Запрос.УстановитьПараметр("Организация",      	ВыборкаОбъектов.Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", 	ВыборкаОбъектов.Ссылка);
		Запрос.УстановитьПараметр("ДатаПринятияКУчету", ДатаПринятия);
		Запрос.УстановитьПараметр("СчетаАмортизацияОсновныхСредств",		 
			БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств));
		Запрос.УстановитьПараметр("ТаблицаМесяцевЭксплуатацииОС",ТаблицаМесяцевЭксплуатацииОС);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Месяцы.Месяц КАК ДАТА) КАК Месяц
		|ПОМЕСТИТЬ Месяцы
		|ИЗ
		|	&ТаблицаМесяцевЭксплуатацииОС КАК Месяцы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеАмортизацииОСНалоговыйУчет.Период КАК Период,
		|	НачислениеАмортизацииОСНалоговыйУчет.Регистратор,
		|	НачислениеАмортизацииОСНалоговыйУчет.НачислятьАмортизацию
		|ПОМЕСТИТЬ НачислениеАмортизацииОСНалоговыйУчет
		|ИЗ
		|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизацииОСНалоговыйУчет
		|ГДЕ
		|	НачислениеАмортизацииОСНалоговыйУчет.ОсновноеСредство = &ОсновноеСредство
		|	И НачислениеАмортизацииОСНалоговыйУчет.Организация = &Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаМесяцев.Месяц,
		|	МАКСИМУМ(НачислениеАмортизацииОСНалоговыйУчет.Период) КАК Период
		|ПОМЕСТИТЬ ПериодыЗначащихЗаписейПоМесяцам
		|ИЗ
		|	Месяцы КАК ТаблицаМесяцев
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизацииОСНалоговыйУчет
		|		ПО ТаблицаМесяцев.Месяц >= НачислениеАмортизацииОСНалоговыйУчет.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаМесяцев.Месяц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыЗначащихЗаписейПоМесяцам.Месяц,
		|	МАКСИМУМ(НачислениеАмортизацииОСНалоговыйУчет.Регистратор) КАК Регистратор
		|ПОМЕСТИТЬ РегистраторыЗначащихЗаписейПоМесяцам
		|ИЗ
		|	ПериодыЗначащихЗаписейПоМесяцам КАК ПериодыЗначащихЗаписейПоМесяцам
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизацииОСНалоговыйУчет
		|		ПО ПериодыЗначащихЗаписейПоМесяцам.Период = НачислениеАмортизацииОСНалоговыйУчет.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыЗначащихЗаписейПоМесяцам.Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистраторыЗначащихЗаписейПоМесяцам.Месяц КАК Месяц,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА НачислениеАмортизацииОСНалоговыйУчет.НачислятьАмортизацию
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(3, 0)) КАК НачислятьАмортизацию
		|ПОМЕСТИТЬ НачислятьАмортизациюПоМесяцам
		|ИЗ
		|	РегистраторыЗначащихЗаписейПоМесяцам КАК РегистраторыЗначащихЗаписейПоМесяцам
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизацииОСНалоговыйУчет
		|		ПО РегистраторыЗначащихЗаписейПоМесяцам.Регистратор = НачислениеАмортизацииОСНалоговыйУчет.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПериодыЗначащихЗаписейПоМесяцам
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РегистраторыЗначащихЗаписейПоМесяцам
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислятьАмортизациюПоМесяцам.Месяц КАК Месяц,
		|	СУММА(НачислятьАмортизациюПоМесяцам1.НачислятьАмортизацию) КАК СрокИспользования
		|ПОМЕСТИТЬ СрокиИспользованияПоМесяцам
		|ИЗ
		|	НачислятьАмортизациюПоМесяцам КАК НачислятьАмортизациюПоМесяцам
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислятьАмортизациюПоМесяцам КАК НачислятьАмортизациюПоМесяцам1
		|		ПО НачислятьАмортизациюПоМесяцам.Месяц >= НачислятьАмортизациюПоМесяцам1.Месяц
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислятьАмортизациюПоМесяцам.Месяц
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Период КАК Период,
		|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Регистратор,
		|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СпециальныйКоэффициент
		|ПОМЕСТИТЬ НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет
		|ИЗ
		|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет
		|ГДЕ
		|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.ОсновноеСредство = &ОсновноеСредство
		|	И НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Организация = &Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаМесяцев.Месяц,
		|	МАКСИМУМ(НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Период) КАК Период
		|ПОМЕСТИТЬ ПериодыЗначащихЗаписейПоМесяцам
		|ИЗ
		|	Месяцы КАК ТаблицаМесяцев
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет
		|		ПО ТаблицаМесяцев.Месяц >= НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаМесяцев.Месяц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыЗначащихЗаписейПоМесяцам.Месяц,
		|	МАКСИМУМ(НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Регистратор) КАК Регистратор
		|ПОМЕСТИТЬ РегистраторыЗначащихЗаписейПоМесяцам
		|ИЗ
		|	ПериодыЗначащихЗаписейПоМесяцам КАК ПериодыЗначащихЗаписейПоМесяцам
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет
		|		ПО ПериодыЗначащихЗаписейПоМесяцам.Период = НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыЗначащихЗаписейПоМесяцам.Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистраторыЗначащихЗаписейПоМесяцам.Месяц КАК Месяц,
		|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СпециальныйКоэффициент
		|ПОМЕСТИТЬ СпециальныеКоэффициентыПоМесяцам
		|ИЗ
		|	РегистраторыЗначащихЗаписейПоМесяцам КАК РегистраторыЗначащихЗаписейПоМесяцам
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет
		|		ПО РегистраторыЗначащихЗаписейПоМесяцам.Регистратор = НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпециальныеКоэффициентыПоМесяцам.СпециальныйКоэффициент,
		|	ХозрасчетныйОборотыДтКт.СуммаНУОборотКт КАК СуммаАмортизации,
		|	ХозрасчетныйОборотыДтКт.Период КАК Период,
		|	СрокиИспользованияПоМесяцам.СрокИспользования КАК МесяцПолезногоИспользования
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			,
		|			&Период,
		|			Регистратор,
		|			НЕ СчетДт В (&СчетаАмортизацияОсновныхСредств),
		|			,
		|			СчетКт В (&СчетаАмортизацияОсновныхСредств),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			СубконтоКт1 = &ОсновноеСредство
		|				И Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|		ЛЕВОЕ СОЕДИНЕНИЕ СрокиИспользованияПоМесяцам КАК СрокиИспользованияПоМесяцам
		|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ) = СрокиИспользованияПоМесяцам.Месяц)
		|		ЛЕВОЕ СОЕДИНЕНИЕ СпециальныеКоэффициентыПоМесяцам КАК СпециальныеКоэффициентыПоМесяцам
		|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ) = СпециальныеКоэффициентыПоМесяцам.Месяц)
		|
		|УПОРЯДОЧИТЬ ПО
		|	МесяцПолезногоИспользования";
		
		АмортизацияЗапрос = Запрос.Выполнить();
		НачисленнаяАмортизация = АмортизацияЗапрос.Выгрузить().Итог("СуммаАмортизации");
		
		
		Шапка.Параметры.ДатаВвода    = ДатаПринятия;
		Шапка.Параметры.ДатаСписания = ДатаСписания;

		Результат.Вывести(Шапка);

		// Балансовая стоимость ОС на момент поступления и первоначально принятый срок полезного использования
		ШапкаРазделов1и2.Параметры.ПервоначальнаяСтоимость 		= ТекущиеСведенияОС.ПервоначальнаяСтоимость;
		ШапкаРазделов1и2.Параметры.СрокПолезногоИспользования 	= СрокИспользования;
		ШапкаРазделов1и2.Параметры.ДокументВводаДата 			= ДатаВвода;
		ШапкаРазделов1и2.Параметры.ДокументВводаНомер 			= ДокументВводаНомер;
		ШапкаРазделов1и2.Параметры.ДокументВвода 				= ДокументВвода;
		
		ШапкаРазделов1и2.Параметры.ДатаВыпуска 					= ВыборкаОбъектов.Ссылка.ДатаВыпуска;
		ШапкаРазделов1и2.Параметры.СуммаНачисленнойАммортизации = НачисленнаяАмортизация;
		ШапкаРазделов1и2.Параметры.ОстаточнаяСтоимость			= Макс((?(ЗначениеЗаполнено(ТекущиеСведенияОС.Остаток), ТекущиеСведенияОС.Остаток, 0) - НачисленнаяАмортизация), 0);
		
		Результат.Вывести(ШапкаРазделов1и2);
		Результат.Вывести(ШапкаРаздела3);

		// Сведения о приемке, внутренних перемещениях и выбытии	

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",           ДатаСведений);
		Запрос.УстановитьПараметр("Организация",      ВыборкаОбъектов.Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", ВыборкаОбъектов.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СобытияОСОрганизаций.НазваниеДокумента,
		|	СобытияОСОрганизаций.НомерДокумента,
		|	СобытияОСОрганизаций.Период,
		|	ВЫБОР
		|		КОГДА СобытияОСОрганизаций.Регистратор ССЫЛКА Документ.ПередачаОС
		|				И ВЫРАЗИТЬ(СобытияОСОрганизаций.Регистратор КАК Документ.ПередачаОС).ДокПодготовкаКПередачеОС <> ЗНАЧЕНИЕ(Документ.ПодготовкаКПередачеОС.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(СобытияОСОрганизаций.Регистратор КАК Документ.ПередачаОС).ДокПодготовкаКПередачеОС.Дата
		|		ИНАЧЕ СобытияОСОрганизаций.Период
		|	КОНЕЦ КАК ПериодОстатков,
		|	СобытияОСОрганизаций.Событие,
		|	СобытияОСОрганизаций.Событие.ВидСобытияОС КАК ВидСобытияОС,
		|	СобытияОСОрганизаций.Регистратор
		|ПОМЕСТИТЬ СобытияОС
		|ИЗ
		|	РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
		|ГДЕ
		|	СобытияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство
		|	И СобытияОСОрганизаций.Период < &Период
		|	И СобытияОСОрганизаций.Организация = &Организация
		|	И СобытияОСОрганизаций.Событие.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.ПринятиеКУчету), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.ВнутреннееПеремещение), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Списание), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Передача))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестонахождениеОСБухгалтерскийУчет.Период,
		|	МестонахождениеОСБухгалтерскийУчет.МОЛ,
		|	МестонахождениеОСБухгалтерскийУчет.Местонахождение
		|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчет
		|ИЗ
		|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
		|ГДЕ
		|	МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство = &ОсновноеСредство
		|	И МестонахождениеОСБухгалтерскийУчет.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияОС.Период,
		|	МАКСИМУМ(МестонахождениеОСБухгалтерскийУчет.Период) КАК ПоследнийПериод
		|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов
		|ИЗ
		|	СобытияОС КАК СобытияОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
		|		ПО СобытияОС.Период >= МестонахождениеОСБухгалтерскийУчет.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	СобытияОС.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов.Период,
		|	МестонахождениеОСБухгалтерскийУчет.МОЛ,
		|	МестонахождениеОСБухгалтерскийУчет.Местонахождение
		|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчетСрезПоследних
		|ИЗ
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов КАК МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов
		|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
		|		ПО МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов.ПоследнийПериод = МестонахождениеОСБухгалтерскийУчет.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаБухгалтерскогоУчетаОС.Период,
		|	СчетаБухгалтерскогоУчетаОС.СчетУчета,
		|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
		|ИЗ
		|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
		|ГДЕ
		|	СчетаБухгалтерскогоУчетаОС.ОсновноеСредство = &ОсновноеСредство
		|	И СчетаБухгалтерскогоУчетаОС.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияОС.ПериодОстатков,
		|	МАКСИМУМ(СчетаБухгалтерскогоУчетаОС.Период) КАК ПоследнийПериод
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов
		|ИЗ
		|	СобытияОС КАК СобытияОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
		|		ПО СобытияОС.ПериодОстатков >= СчетаБухгалтерскогоУчетаОС.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	СобытияОС.ПериодОстатков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов.ПериодОстатков,
		|	СчетаБухгалтерскогоУчетаОС.СчетУчета,
		|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследних
		|ИЗ
		|	СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов КАК СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
		|		ПО СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов.ПоследнийПериод = СчетаБухгалтерскогоУчетаОС.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Период,
		|	ХозрасчетныйОстаткиИОбороты.Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНУОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНУОборотКт КАК СуммаОборотКт
		|ПОМЕСТИТЬ ХозрасчетныйОстаткиИОбороты
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			,
		|			&Период,
		|			Регистратор,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета
		|				ИЗ
		|					СчетаБухгалтерскогоУчетаОССрезПоследних
		|			
		|				ОБЪЕДИНИТЬ
		|			
		|				ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
		|				ИЗ
		|					СчетаБухгалтерскогоУчетаОССрезПоследних),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	НЕ ХозрасчетныйОстаткиИОбороты.Регистратор = НЕОПРЕДЕЛЕНО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияОС.ПериодОстатков,
		|	ХозрасчетныйОстаткиИОбороты.Счет,
		|	МАКСИМУМ(ХозрасчетныйОстаткиИОбороты.Период) КАК ПоследнийПериод
		|ПОМЕСТИТЬ ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов
		|ИЗ
		|	СобытияОС КАК СобытияОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОбороты КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СобытияОС.ПериодОстатков >= ХозрасчетныйОстаткиИОбороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	СобытияОС.ПериодОстатков,
		|	ХозрасчетныйОстаткиИОбороты.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов.ПериодОстатков,
		|	ХозрасчетныйОстаткиИОбороты.Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|ПОМЕСТИТЬ ХозрасчетныйОстаткиИОборотыСрезПоследних
		|ИЗ
		|	ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов КАК ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОбороты КАК ХозрасчетныйОстаткиИОбороты
		|		ПО ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов.ПоследнийПериод = ХозрасчетныйОстаткиИОбороты.Период
		|			И ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов.Счет = ХозрасчетныйОстаткиИОбороты.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияОС.НазваниеДокумента,
		|	СобытияОС.НомерДокумента,
		|	СобытияОС.Период,
		|	СобытияОС.Событие,
		|	СобытияОС.Регистратор,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
		|	СтоимостьОС.СуммаОборотКт КАК СтоимостьОборот,
		|	СтоимостьОС.СуммаОборотДт КАК АмортизацияОборот,
		|	ВЫБОР
		|		КОГДА СобытияОС.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Списание), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Передача))
		|			ТОГДА ЕСТЬNULL(СтоимостьОС.СуммаОборотКт, 0) - ЕСТЬNULL(АмортизацияОС.СуммаОборотДт, 0)
		|		ИНАЧЕ ЕСТЬNULL(СтоимостьОС.СуммаКонечныйОстатокДт, 0) - ЕСТЬNULL(АмортизацияОС.СуммаКонечныйОстатокКт, 0)
		|	КОНЕЦ КАК ОстаточнаяСтоимость
		|ИЗ
		|	СобытияОС КАК СобытияОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчетСрезПоследних КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
		|		ПО СобытияОС.Период = МестонахождениеОСБухгалтерскийУчетСрезПоследних.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
		|		ПО СобытияОС.ПериодОстатков = СчетаБухгалтерскогоУчетаОССрезПоследних.ПериодОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОборотыСрезПоследних КАК СтоимостьОС
		|		ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.ПериодОстатков = СтоимостьОС.ПериодОстатков)
		|			И (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = СтоимостьОС.Счет)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОборотыСрезПоследних КАК АмортизацияОС
		|		ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.ПериодОстатков = АмортизацияОС.ПериодОстатков)
		|			И (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет)";
		ВыборкаЗаписей = Запрос.Выполнить().Выбрать();
		Пока ВыборкаЗаписей.Следующий() Цикл
			
			ТекущаяОперация = ВыборкаЗаписей.Событие;
			
			Если ВыборкаЗаписей.Период < '20020101' Тогда

				СтрокаРаздела3.Параметры.ДатаНомерДокумента = "Бухгалтерская справка от 01.01.2002";
				СтрокаРаздела3.Параметры.ВидОперации        = "Ввод остатков";
				СтрокаРаздела3.Параметры.ОстаточнаяСтоимость = ТекущиеСведенияОС.ОстаточнаяСтоимостьНа2002;
				
			Иначе
				
				СтрокаРаздела3.Параметры.ДатаНомерДокумента = ВыборкаЗаписей.НазваниеДокумента + " № "+ВыборкаЗаписей.НомерДокумента+" от "+Формат(ВыборкаЗаписей.Период,"ДФ=dd.MM.yyyy");
				СтрокаРаздела3.Параметры.ВидОперации        = ТекущаяОперация;
				
				Если ВыборкаЗаписей.СтоимостьОборот = NULL И ВыборкаЗаписей.АмортизацияОборот = NULL Тогда // ввод начальных остатков
					СтрокаРаздела3.Параметры.ОстаточнаяСтоимость = ТекущиеСведенияОС.ПервоначальнаяСтоимость;
				Иначе
					СтрокаРаздела3.Параметры.ОстаточнаяСтоимость = ВыборкаЗаписей.ОстаточнаяСтоимость;
				КонецЕсли;
				
			КонецЕсли;
				
			СтрокаРаздела3.Параметры.ФИОМОЛДвижения     = "";
			СтрокаРаздела3.Параметры.Подразделение      = "";
			СтрокаРаздела3.Параметры.ФИОМОЛДвижения     = ВыборкаЗаписей.МОЛ;
			СтрокаРаздела3.Параметры.Подразделение      = ВыборкаЗаписей.Местонахождение;
			
			Результат.Вывести(СтрокаРаздела3);
			
		КонецЦикла;
		
		// модернизация ос и ремонт
		ТаблицаМодернизаций = Новый ТаблицаЗначений;
		ТаблицаМодернизаций.Колонки.Добавить("ВидОперации");
		ТаблицаМодернизаций.Колонки.Добавить("Название");
		ТаблицаМодернизаций.Колонки.Добавить("Дата");
		ТаблицаМодернизаций.Колонки.Добавить("Номер");
		ТаблицаМодернизаций.Колонки.Добавить("Сумма");
		ТаблицаМодернизаций.Колонки.Добавить("ДатаДокумента");
		
		Результат.Вывести(ШапкаРаздела4);
		
		СписокМодернизаций = Новый Массив;
		СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
		СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Достройка);
		СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Реконструкция);
		СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
		СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.ЧастичнаяЛиквидация);
		
		СписокРемонтов = Новый Массив;
		СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.СреднийРемонт);
		СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.ТекущийРемонт);
		СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.КапитальныйРемонт);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", 		 ВыборкаОбъектов.Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", 	 ВыборкаОбъектов.Ссылка);
		Запрос.УстановитьПараметр("УсловиеМодернизаций", СписокМодернизаций);
		Запрос.УстановитьПараметр("УсловиеРемонтов", 	 СписокРемонтов);
		Запрос.УстановитьПараметр("ВидСобытияОС", 		 Перечисления.ВидыСобытийОС.ПринятиеКУчету);
		Запрос.УстановитьПараметр("ДатаСведений", 		 ДатаСведений);
		Запрос.УстановитьПараметр("ДатаПринятия", 		 ДатаПринятия);
		Запрос.УстановитьПараметр("СчетаРасходыНаКапитальныеВложения",		 
				БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасходыНаКапитальныеВложения));
		
		ОСИДокументыАмортизационнойПремии = Новый Массив;
		ОСИДокументыАмортизационнойПремии.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		ОСИДокументыАмортизационнойПремии.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии);
		Запрос.УстановитьПараметр("ОСИДокументыАмортизационнойПремии", ОСИДокументыАмортизационнойПремии);
		
		Запрос.Текст = 
				"ВЫБРАТЬ
				|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
				|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации,
				|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследних
				|ИЗ
				|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
				|			&ДатаСведений,
				|			Организация = &Организация
				|				И ОсновноеСредство = &ОсновноеСредство) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ХозрасчетныйОстаткиИОбороты.Регистратор,
				|	ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт
				|ПОМЕСТИТЬ СтоимостьОС
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
				|			&ДатаПринятия,
				|			&ДатаСведений,
				|			Регистратор,
				|			,
				|			Счет В
				|				(ВЫБРАТЬ
				|					СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета
				|				ИЗ
				|					СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних),
				|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
				|			Организация = &Организация
				|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстаткиИОбороты
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВЫБОР
				|		КОГДА СобытияОСОрганизаций.Событие.ВидСобытияОС В (&УсловиеМодернизаций)
				|			ТОГДА СобытияОСОрганизаций.СуммаЗатратНУ
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК СуммаЗатратНУМодернизаций,
				|	СобытияОСОрганизаций.Регистратор КАК Регистратор,
				|	СобытияОСОрганизаций.Период КАК Период,
				|	СобытияОСОрганизаций.Событие КАК Операция,
				|	СобытияОСОрганизаций.НомерДокумента КАК НомерДокумента,
				|	ВЫРАЗИТЬ(СобытияОСОрганизаций.НазваниеДокумента КАК СТРОКА(200)) КАК НазваниеДокумента,
				|	СобытияОСОрганизаций.Регистратор.Дата КАК ДатаДокумента,
				|	СтоимостьОС.СуммаНУКонечныйОстатокДт КАК Остаток
				|ИЗ
				|	РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
				|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
				|		ПО СобытияОСОрганизаций.Регистратор = СтоимостьОС.Регистратор
				|ГДЕ
				|	СобытияОСОрганизаций.Организация = &Организация
				|	И СобытияОСОрганизаций.Событие.ВидСобытияОС <> &ВидСобытияОС
				|	И СобытияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство
				|	И СобытияОСОрганизаций.Период < &ДатаСведений
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ                                             
				|	-ХозрасчетныйОборотыДтКт.СуммаНУОборотКт,
				|	ХозрасчетныйОборотыДтКт.Регистратор,
				|	ХозрасчетныйОборотыДтКт.Период,
				|	""Амортизационная премия"",
				|	ДанныеПервичныхДокументов.НомерРегистратора,
				|	ПРЕДСТАВЛЕНИЕ(ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор)),
				|	ДанныеПервичныхДокументов.ДатаРегистратора,
				|	СтоимостьОС.СуммаНУКонечныйОстатокДт
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
				|			&ДатаПринятия,
				|			&ДатаСведений,
				|			Запись,
				|			,
				|			,
				|			СчетКт В (&СчетаРасходыНаКапитальныеВложения),
				|			&ОСИДокументыАмортизационнойПремии,
				|			Организация = &Организация
				|				И СубконтоКт1 = &ОсновноеСредство) КАК ХозрасчетныйОборотыДтКт
				|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
				|		ПО ХозрасчетныйОборотыДтКт.Регистратор = СтоимостьОС.Регистратор
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
				|		ПО (ДанныеПервичныхДокументов.Организация = &Организация)
				|			И ХозрасчетныйОборотыДтКт.Регистратор = ДанныеПервичныхДокументов.Документ
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период,
				|	Регистратор";

		
		РезультатМодернизация = Запрос.Выполнить();
		
		СпособВыборки = ОбходРезультатаЗапроса.Прямой;
		ВыборкаРегистраторов = РезультатМодернизация.Выбрать(СпособВыборки);
		Пока ВыборкаРегистраторов.Следующий() Цикл
			
			СуммаМодернизаций = ?(ВыборкаРегистраторов.СуммаЗатратНУМодернизаций = NULL, 0, ВыборкаРегистраторов.СуммаЗатратНУМодернизаций);
			
			Если СуммаМодернизаций <> 0 Тогда
				СтрокаТаблицыМодернизаций = ТаблицаМодернизаций.Добавить();
				СтрокаРаздела4.Параметры.Модернизация  			= ВыборкаРегистраторов.Операция;
				СтрокаРаздела4.Параметры.ДокМодернизации    	= ВыборкаРегистраторов.НазваниеДокумента;
				СтрокаРаздела4.Параметры.ДокМодернизацииНомер	= ВыборкаРегистраторов.НомерДокумента;
				СтрокаРаздела4.Параметры.ДокМодернизацииДата    = ВыборкаРегистраторов.ДатаДокумента;
				СтрокаРаздела4.Параметры.ЗатратыНаМодернизацию  = СуммаМодернизаций;
				СтрокаРаздела4.Параметры.Остаток				= ВыборкаРегистраторов.Остаток;
				Результат.Вывести(СтрокаРаздела4);
			КонецЕсли;
			
		КонецЦикла;
		
		Амортизация = АмортизацияЗапрос.Выбрать();
		
		ШапкаРаздела5.Параметры.МетодНачисленияАмортизации = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(ВыборкаОбъектов.Организация,ДатаСведений);
		
		Результат.Вывести(ШапкаРаздела5);
		
		Пока Амортизация.Следующий() Цикл
			
			СтрокаРаздела5.Параметры.Период =  Формат(Амортизация.Период,"ДФ='ММММ гггг ""г.""'");
			СтрокаРаздела5.Параметры.МесяцПолезногоИспользования =  Амортизация.МесяцПолезногоИспользования;
			СтрокаРаздела5.Параметры.СуммаАмортизации =  Амортизация.СуммаАмортизации;
			СтрокаРаздела5.Параметры.Коэффициент =  Амортизация.СпециальныйКоэффициент;
			Результат.Вывести(СтрокаРаздела5);
			                                                                                                                                            
		КонецЦикла;
		
		ИтогРаздела5.Параметры.СуммаАмортизации = НачисленнаяАмортизация;
		Результат.Вывести(ИтогРаздела5);
		
		Результат.Вывести(ПодвалСтраницы);
		
		Результат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Новый Структура("Результат,ДанныеРасшифровки", Результат, Неопределено), АдресХранилища);
	
КонецПроцедуры

Функция ПолучитьНаборПоказателей() Экспорт
	
	НаборПоказателей = Новый Массив;
	НаборПоказателей.Добавить("БУ");
	НаборПоказателей.Добавить("НУ");
	НаборПоказателей.Добавить("ПР");
	НаборПоказателей.Добавить("ВР");
	
	Возврат НаборПоказателей;
	
КонецФункции

#КонецЕсли