#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДатаНачалаНП, ДатаКонцаНП;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаРасчетФСС";
			
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ЗначениеПараметра <> Неопределено Тогда
		ДатаНачалаНП = Дата(ЗначениеПараметра.Значение.ДатаНачала);
		ДатаКонцаНП  = Дата(ЗначениеПараметра.Значение.ДатаОкончания);
	КонецЕсли;
	
	Если ДатаНачалаНП = '00010101' Тогда
		ДатаНачалаНП = НачалоГода(ТекущаяДатаСеанса());
	КонецЕсли;
	Если ДатаКонцаНП = '00010101' Тогда
		ДатаКонцаНП = НачалоМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаЗначений =  Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаЗначений.Количество() > 0 Тогда
		СформироватьМакет(ДокументРезультат, ТаблицаЗначений);
	Иначе
		СформироватьПустографку(ДокументРезультат);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

КонецПроцедуры

Процедура СформироватьМакет(ДокументРезультат, ТаблицаОрганизаций)
	
	НачалоПериода = НачалоГода(ДатаКонцаНП);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаНП);
	НачалоТекущегоКвартала = НачалоКвартала(ДатаКонцаНП);
	
	// Области макета
	Макет =	УправлениеПечатью.МакетПечатнойФормы("Отчет.СправкаРасчетФСС.ПФ_MXL_СправкаРасчет");
	ОбластьЗаявление = Макет.ПолучитьОбласть("Заявление");
	ОбластьСтраницаПриложения1 = Макет.ПолучитьОбласть("СтраницаПриложения1");
	ОбластьСтраницаПриложения2 = Макет.ПолучитьОбласть("СтраницаПриложения2");

	// Создание запроса и установка параметров.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; 
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода",	ОкончаниеПериода);
	Запрос.УстановитьПараметр("Месяц1",					Месяц(НачалоТекущегоКвартала));
	Запрос.УстановитьПараметр("Месяц2",					Месяц(НачалоТекущегоКвартала) + 1);
	Запрос.УстановитьПараметр("Месяц3",					Месяц(НачалоТекущегоКвартала) + 2);
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	НачальныйОстатокТекст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Расчеты.СуммаОстаток > 0
	|			ТОГДА Расчеты.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010001003,
	|	ВЫБОР
	|		КОГДА Расчеты.СуммаОстаток < 0
	|			ТОГДА -Расчеты.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010011003
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(
	|			&НачалоОтчетногоПериода,
	|			Организация = &Организация
	|				И ЭтоСтраховыеВзносы
	|				И ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)) КАК Расчеты";
	
	КонечныйОстатокТекст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Расчеты.СуммаОстаток < 0
	|			ТОГДА -Расчеты.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010010003,
	|	ВЫБОР
	|		КОГДА Расчеты.СуммаОстаток > 0
	|			ТОГДА Расчеты.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010021003
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(
	|			&КонецОтчетногоПериода,
	|			Организация = &Организация
	|				И ЭтоСтраховыеВзносы
	|				И ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)) КАК Расчеты";
	
	РасчетыСФондомТекст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|				И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И НЕ Расчеты.ЭтоДоначислениеПоАктуПроверки
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПустаяСсылка)
	|			ТОГДА Расчеты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНачислено,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|				И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И Расчеты.ЭтоДоначислениеПоАктуПроверки
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПустаяСсылка)
	|			ТОГДА Расчеты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССДоНачислено,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|				И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПустаяСсылка)
	|			ТОГДА Расчеты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССУплачено,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию)
	|			ТОГДА Расчеты.Сумма * ВЫБОР
	|					КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						ТОГДА 1
	|					ИНАЧЕ -1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССПроизведеноРасходов,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.НеПринято)
	|			ТОГДА Расчеты.Сумма * ВЫБОР
	|					КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА 1
	|					ИНАЧЕ -1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНеПринятоРасходов,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПолученоИзФонда)
	|			ТОГДА Расчеты.Сумма * ВЫБОР
	|					КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА 1
	|					ИНАЧЕ -1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССВозмещеноРасходов,
	|	НАЧАЛОПЕРИОДА(Расчеты.Период, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТРасчетыСФондом
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК Расчеты
	|ГДЕ
	|	Расчеты.ЭтоСтраховыеВзносы
	|	И Расчеты.Организация = &Организация
	|	И Расчеты.ВидОбязательногоСтрахованияСотрудников В (ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС), ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи))
	|	И Расчеты.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССНачислено), 0) КАК П000010002101,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|					ТОГДА РасчетыСФондом.ФССНачислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010002301,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|					ТОГДА РасчетыСФондом.ФССНачислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010002401,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|					ТОГДА РасчетыСФондом.ФССНачислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010002501,
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССДоНачислено), 0) КАК П000010003101,
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССНеПринятоРасходов), 0) КАК П000010005101,
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССВозмещеноРасходов), 0) КАК П000010006101,
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССУплачено), 0) КАК П000010016101,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|					ТОГДА РасчетыСФондом.ФССПроизведеноРасходов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010015301,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|					ТОГДА РасчетыСФондом.ФССПроизведеноРасходов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010015401,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|					ТОГДА РасчетыСФондом.ФССПроизведеноРасходов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010015501,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|					ТОГДА РасчетыСФондом.ФССУплачено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010016301,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|					ТОГДА РасчетыСФондом.ФССУплачено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010016401,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|					ТОГДА РасчетыСФондом.ФССУплачено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010016501
	|ИЗ
	|	ВТРасчетыСФондом КАК РасчетыСФондом";
	
	АдресаОрганизаций = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресаОрганизаций(ТаблицаОрганизаций.ВыгрузитьКолонку("Организация"));
	
	Для каждого СтрокаТЗ Из ТаблицаОрганизаций Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Организация = СтрокаТЗ.Организация;
		
		// -----------------------------------------------------------------------------
		// ВЫПОЛНЕНИЕ ЗАПРОСОВ
		
		ОписаниеТаблиц = Новый Структура("ПособияПоНетрудоспособности2017,ПособияПоУходу2017,ПолучателейПособияПоУходу2017");
		УчетПособийСоциальногоСтрахования.РасчетПоказателейРСВ("РасчетПоказателей_РСВ_2017Кв1", НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, Ложь, Макс(ОкончаниеПериода, КонецМесяца(ТекущаяДатаСеанса())));
	
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст = НачальныйОстатокТекст;
		ВыборкаНачальныйОстаток = Запрос.Выполнить().Выбрать();
		ВыборкаНачальныйОстаток.Следующий();
		Запрос.Текст = КонечныйОстатокТекст;
		ВыборкаКонечныйОстатокТекст = Запрос.Выполнить().Выбрать();
		ВыборкаКонечныйОстатокТекст.Следующий();
		Запрос.Текст = РасчетыСФондомТекст;
		ВыборкаРасчетыСФондом = Запрос.Выполнить().Выбрать();
		ВыборкаРасчетыСФондом.Следующий();
		ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, "ВТРасчетыСФондом");
		
		// -----------------------------------------------------------------------------
		// ЗАПОЛНЕНИЕ ФОРМЫ
		
		ПараметрыЗаявления = ОбластьЗаявление.Параметры;
		ПараметрыРасчетовСФондом = ОбластьСтраницаПриложения1.Параметры;
		ПараметрыРасходовПоСтрахованию = ОбластьСтраницаПриложения2.Параметры;
		
		СтрокаРеквизитыОрганизации = "НаименованиеПолное, РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС, ИНН";									
		ПараметрыЗаявления.Заполнить(ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, СтрокаРеквизитыОрганизации));
		
		СтрокаСведенийОбОрганизации = "КППЮЛ,ФИОРук,ТелРук,ДолжнРук,ФИОБух,ТелБух,ФИОУпПред,БанкСчетНомер,БанкСчетНаимБанка,БанкСчетКоррСчетБанка,БанкСчетБИКБанка";									
		ПараметрыЗаявления.Заполнить(РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ОкончаниеПериода, СтрокаСведенийОбОрганизации));
		
		ОписаниеФактическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
			АдресаОрганизаций,
			Организация,
			Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		ПараметрыЗаявления.АдресФактический = ОписаниеФактическогоАдреса.Представление;
		
		// Если что-то указали в параметрах отчета - выведем в заявление.
		
		ПараметрыОтчета = Новый Массив;
		ПараметрыОтчета.Добавить("РуководительКонтрольногоОргана");
		ПараметрыОтчета.Добавить("БанкСчетНомер");
		ПараметрыОтчета.Добавить("НаименованиеОрганаФК");
		ПараметрыОтчета.Добавить("ЛицевойСчет");
		Для каждого Параметр Из ПараметрыОтчета Цикл
			Если Не ЗначениеЗаполнено(ПараметрыЗаявления[Параметр]) Тогда
				ПараметрКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(Параметр));
				Если ПараметрКомпоновщика.Использование Тогда
					ПараметрыЗаявления[Параметр] = ПараметрКомпоновщика.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ПараметрыЗаявления.БанкСчетНаимБанка) Тогда
			ПараметрКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Банк"));
			Если ПараметрКомпоновщика.Использование И ЗначениеЗаполнено(ПараметрКомпоновщика.Значение) Тогда
				РеквизитыБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрКомпоновщика.Значение,"Наименование, Код, ИНН, КоррСчет");
				ПараметрыЗаявления.БанкСчетНаимБанка = РеквизитыБанка.Наименование;
				ПараметрыЗаявления.БанкСчетБИКБанка = РеквизитыБанка.Код;
				ПараметрыЗаявления.БанкСчетКоррСчетБанка = РеквизитыБанка.КоррСчет;
				ПараметрыЗаявления.БанкСчетИНН = РеквизитыБанка.ИНН;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Исполнитель"));
		Если ПараметрКомпоновщика.Использование И ЗначениеЗаполнено(ПараметрКомпоновщика.Значение) Тогда
			ТаблицаФИО = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ПараметрКомпоновщика.Значение, "ФИОПолные", ОкончаниеПериода);
			Если ТаблицаФИО.Количество() > 0 Тогда
				ПараметрыЗаявления.Исполнитель = ТаблицаФИО[0].ФИОПолные;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыРасчетовСФондом.Заполнить(ВыборкаНачальныйОстаток);
		ПараметрыРасчетовСФондом.Заполнить(ВыборкаКонечныйОстатокТекст);
		ПараметрыРасчетовСФондом.Заполнить(ВыборкаРасчетыСФондом);
		
		Если ОписаниеТаблиц.ПособияПоНетрудоспособности2017.Количество() > 0 Тогда
			ПараметрыРасходовПоСтрахованию.Заполнить(ОписаниеТаблиц.ПособияПоНетрудоспособности2017[0]);
		КонецЕсли;
		Если ОписаниеТаблиц.ПособияПоУходу2017.Количество() > 0 Тогда
			ПараметрыРасходовПоСтрахованию.Заполнить(ОписаниеТаблиц.ПособияПоУходу2017[0]);
		КонецЕсли;
		Если ОписаниеТаблиц.ПолучателейПособияПоУходу2017.Количество() > 0 Тогда
			ПараметрыРасходовПоСтрахованию.Заполнить(ОписаниеТаблиц.ПолучателейПособияПоУходу2017[0]);
		КонецЕсли;
		
		ПараметрыРасходовПоСтрахованию.ВсегоРасходов = ?(ЗначениеЗаполнено(ПараметрыРасходовПоСтрахованию.ВсегоРасходов), ПараметрыРасходовПоСтрахованию.ВсегоРасходов, 0) + ?(ЗначениеЗаполнено(ПараметрыРасходовПоСтрахованию.ВсегоПоУходу), ПараметрыРасходовПоСтрахованию.ВсегоПоУходу, 0);
		ПараметрыРасходовПоСтрахованию.ВсегоСверхНорм = ?(ЗначениеЗаполнено(ПараметрыРасходовПоСтрахованию.ВсегоСверхНорм), ПараметрыРасходовПоСтрахованию.ВсегоСверхНорм, 0) + ?(ЗначениеЗаполнено(ПараметрыРасходовПоСтрахованию.СверхНормПоУходу), ПараметрыРасходовПоСтрахованию.СверхНормПоУходу, 0);	
		ПараметрыРасчетовСФондом.ВсегоРасходов = ПараметрыРасходовПоСтрахованию.ВсегоРасходов;
		
		СредстваКВыделению = Макс(0, Мин(?(ЗначениеЗаполнено(ПараметрыРасчетовСФондом.П000010010003), ПараметрыРасчетовСФондом.П000010010003, 0),
			ПараметрыРасчетовСФондом.ВсегоРасходов - ?(ЗначениеЗаполнено(ПараметрыРасчетовСФондом.П000010005101), ПараметрыРасчетовСФондом.П000010005101, 0) - ?(ЗначениеЗаполнено(ПараметрыРасчетовСФондом.П000010006101), ПараметрыРасчетовСФондом.П000010006101, 0)));
		Если ЗначениеЗаполнено(СредстваКВыделению) Тогда
			ПараметрыЗаявления.СредстваКВыделению = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СредстваКВыделению, ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты(), Истина);
		Иначе
			ПараметрыЗаявления.ПодписьРуб = "  руб."
		КонецЕсли;
			
		ДокументРезультат.Вывести(ОбластьЗаявление);
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ДокументРезультат.Вывести(ОбластьСтраницаПриложения1);
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ДокументРезультат.Вывести(ОбластьСтраницаПриложения2);
		
	КонецЦикла; 
	
	// -----------------------------------------------------------------------------
	// Параметры документа
	
	УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат);
	
КонецПроцедуры

Процедура СформироватьПустографку(ДокументРезультат)
	
	Макет =	УправлениеПечатью.МакетПечатнойФормы("Отчет.СправкаРасчетФСС.ПФ_MXL_СправкаРасчет");
	
	ОбластьЗаявление = Макет.ПолучитьОбласть("Заявление");
	ОбластьЗаявление.Параметры.ПодписьРуб = "  руб.";
	ДокументРезультат.Вывести(ОбластьЗаявление);
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("СтраницаПриложения1"));
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("СтраницаПриложения2"));
	
	// Параметры документа
	УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат);
	
КонецПроцедуры

Процедура УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат)
	ДокументРезультат.Автомасштаб 			= 	Истина;
	ДокументРезультат.ОриентацияСтраницы 	= 	ОриентацияСтраницы.Портрет;
	ДокументРезультат.ТолькоПросмотр		= 	Ложь;
КонецПроцедуры

#КонецОбласти

#КонецЕсли