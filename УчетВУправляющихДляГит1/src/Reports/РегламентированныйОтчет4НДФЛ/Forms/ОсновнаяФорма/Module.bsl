#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мСкопированаФорма = Параметры.мСкопированаФорма;
	мСохраненныйДок   = Параметры.мСохраненныйДок;
	
	Организация = Параметры.Организация;
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации").ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПолучитьСписокДоступныхИндивидуальныхПредпринимателей(Элементы.Организация.СписокВыбора);
	Если Элементы.Организация.СписокВыбора.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Декларацию представляют: %1'"), КтоСдаетОтчет()));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) И Элементы.Организация.СписокВыбора.НайтиПоЗначению(Организация) = Неопределено Тогда
		Организация = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации").ПустаяСсылка();
	КонецЕсли;
	
	ИсточникОтчета = РегламентированнаяОтчетностьВызовСервера.ИсточникОтчета(ИмяФормы);
	мТаблицаФормОтчета.Загрузить(РегламентированнаяОтчетностьВызовСервера.ОтчетОбъект(ИсточникОтчета).ТаблицаФормОтчета());
	
	мПериодичность = Перечисления.Периодичность.Год;
	
	Если ЗначениеЗаполнено(Параметры.мДатаНачалаПериодаОтчета) И ЗначениеЗаполнено(Параметры.мДатаКонцаПериодаОтчета) Тогда
		мДатаНачалаПериодаОтчета = НачалоГода(Параметры.мДатаНачалаПериодаОтчета);
		мДатаКонцаПериодаОтчета  = КонецГода(Параметры.мДатаКонцаПериодаОтчета);
	Иначе
		Период = ОбщегоНазначения.РабочаяДатаПользователя();
		Если Не ЗначениеЗаполнено(Период) Тогда
			Период = ТекущаяДатаСеанса();
		КонецЕсли;
		мДатаНачалаПериодаОтчета = НачалоГода(Период);
		мДатаКонцаПериодаОтчета  = КонецГода(Период);
	КонецЕсли;
	ПриИзмененииПериода(ЭтотОбъект);
	
	НадписьКтоСдаетОтчет = КтоСдаетОтчет();
	
	ПолеСсылкаИзмененияЗаконодательства = РегламентированнаяОтчетность.ПредставлениеСсылкиИзмененияЗаконодательства();
	ОбщаяЧастьСсылкиНаИзмененияЗаконодательства = РегламентированнаяОтчетность.ОбщаяЧастьСсылкиНаИзмененияЗаконодательства(ИсточникОтчета);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = "Активизировать" И ИмяСобытия = Заголовок Тогда
		Активизировать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЗначениеЗаполнено(Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеРедакцияФормыПриИзменении(Элемент)
	
	НайденныеСтроки = мТаблицаФормОтчета.НайтиСтроки(Новый Структура("РедакцияФормы", ПолеРедакцияФормы));
	Если НайденныеСтроки.Количество() <> 0 Тогда
		мВыбраннаяФорма = НайденныеСтроки[0].ФормаОтчета;
		ОписаниеНормативДок = НайденныеСтроки[0].ОписаниеОтчета;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСсылкаИзмененияЗаконодательстваНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ПустаяСтрока(ОбщаяЧастьСсылкиНаИзмененияЗаконодательства) Тогда
		СсылкаИзмененияЗаконодательства = ОбщаяЧастьСсылкиНаИзмененияЗаконодательства
			+ СтрШаблон("&currentYear=%1", Формат(Год(мДатаКонцаПериодаОтчета), "ЧГ=0"));
		ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПопытатьсяПерейтиПоНавигационнойСсылке(СсылкаИзмененияЗаконодательства);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	
	ИзменитьПериод(ЭтотОбъект, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	
	ИзменитьПериод(ЭтотОбъект, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчета(Команда)
	
	Если мСкопированаФорма <> Неопределено Тогда
		Если ВРег(мВыбраннаяФорма) <> ВРег(мСкопированаФорма) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Форма отчета изменилась, копирование невозможно!'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = РегламентированнаяОтчетностьКлиент.НовыеПараметрыФормы();
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, ЭтотОбъект);
	ОткрытьФорму(СтрЗаменить(ИмяФормы, "ОсновнаяФорма", мВыбраннаяФорма), ПараметрыФормы, , Истина);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФорму(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВыбратьФормуОтчетаИзДействующегоСписка(ЭтотОбъект,
		Новый ОписаниеОповещения("ВыбратьФормуЗавершение", ЭтотОбъект),
		СтрШаблон(НСтр("ru = 'Декларацию представляют: %1'"), НадписьКтоСдаетОтчет));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФормуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		мВыбраннаяФорма = Результат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ОткрытьФормуОтчета.Доступность = ЗначениеЗаполнено(Форма.Организация);
	Элементы.ГруппаПериод.Доступность = ЗначениеЗаполнено(Форма.Организация);
	
	Элементы.ПолеСсылкаИзмененияЗаконодательства.Видимость = Не ПустаяСтрока(Форма.ОбщаяЧастьСсылкиНаИзмененияЗаконодательства)
		И РегламентированнаяОтчетностьКлиентСервер.ДоступенМониторингИзмененияЗаконодательства(Форма.мДатаКонцаПериодаОтчета);
	
	КоличествоФорм = РегламентированнаяОтчетностьКлиентСервер.КоличествоФормСоответствующихВыбранномуПериоду(Форма);
	Элементы.ПолеРедакцияФормы.Видимость = (КоличествоФорм > 1);
	Элементы.ОписаниеНормативДок.Видимость = (КоличествоФорм = 1);
	Элементы.ОткрытьФормуОтчета.Доступность = (КоличествоФорм > 0);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПериод(Форма, Шаг)
	
	Форма.мДатаКонцаПериодаОтчета  = КонецГода(ДобавитьМесяц(Форма.мДатаКонцаПериодаОтчета, Шаг * 12));
	Форма.мДатаНачалаПериодаОтчета = НачалоГода(Форма.мДатаКонцаПериодаОтчета);
	
	ПриИзмененииПериода(Форма);
	
	УправлениеФормой(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииПериода(Форма)
	
	Форма.ПолеВыбораПериодичностиПоказаПериода = ПредставлениеПериода(
		НачалоДня(Форма.мДатаНачалаПериодаОтчета), КонецДня(Форма.мДатаКонцаПериодаОтчета), "ФП = Истина");
	
	Форма.НадписьСрокПредставленияОтчета = СрокПредставленияОтчетности(Форма);
	
	РегламентированнаяОтчетностьКлиентСервер.ВыборФормыРегламентированногоОтчетаПоУмолчанию(Форма);
	
	Форма.Элементы.ПолеРедакцияФормы.СписокВыбора.Очистить();
	Для Каждого ЭлФорма Из Форма.РезультирующаяТаблица Цикл
		Форма.Элементы.ПолеРедакцияФормы.СписокВыбора.Добавить(ЭлФорма.РедакцияФормы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СрокПредставленияОтчетности(Форма)
	
	Возврат НСтр("ru = 'В пятидневный срок по истечении месяца со дня появления дохода, а также в случае увеличения или уменьшения дохода более чем на 50%.'");
	
КонецФункции

&НаСервереБезКонтекста
Функция КтоСдаетОтчет()
	
	Возврат НСтр("ru = 'Индивидуальные предприниматели и лица, занимающиеся частной практикой (нотариусы, адвокаты, учредившие адвокатские кабинеты).'");
	
КонецФункции

#КонецОбласти