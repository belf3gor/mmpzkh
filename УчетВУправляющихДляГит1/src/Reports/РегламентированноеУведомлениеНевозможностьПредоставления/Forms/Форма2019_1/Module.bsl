&НаКлиенте
Перем ОТД;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗагрузитьДанные()
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	СтруктураРеквизитов = СтруктураПараметров.СтруктураРеквизитов;
	Реквизиты = ПолучитьРеквизиты();
	Для Каждого Рекв Из Реквизиты Цикл 
		Если СтруктураРеквизитов.Свойство(Рекв.Имя) Тогда 
			Если ТипЗнч(СтруктураРеквизитов[Рекв.Имя]) = Тип("ТаблицаЗначений")
				Или ТипЗнч(СтруктураРеквизитов[Рекв.Имя]) = Тип("ДеревоЗначений") Тогда 
				ЗначениеВРеквизитФормы(СтруктураРеквизитов[Рекв.Имя], Рекв.Имя);
			Иначе
				ЭтотОбъект[Рекв.Имя] = СтруктураРеквизитов[Рекв.Имя];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПараметров.Свойство("РазрешитьВыгружатьСОшибками", РазрешитьВыгружатьСОшибками);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.НевозможностьПредоставленияДокументов;
		Объект.Организация = Организация;
		Объект.Дата = ТекущаяДатаСеанса() 
	КонецЕсли;
	
	Реквизиты = ПолучитьРеквизиты();
	СтруктураРеквизитов = Новый Структура();
	Для Каждого Рекв Из Реквизиты Цикл 
		Если СтрНачинаетсяС(Рекв.Имя, "_") Тогда 
			Если ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("ДанныеФормыКоллекция")
				Или ТипЗнч(ЭтотОбъект[Рекв.Имя]) = Тип("ДанныеФормыДерево") Тогда 
				СтруктураРеквизитов.Вставить(Рекв.Имя, РеквизитФормыВЗначение(Рекв.Имя));
			Иначе
				СтруктураРеквизитов.Вставить(Рекв.Имя, ЭтотОбъект[Рекв.Имя]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура("СтруктураРеквизитов, РазрешитьВыгружатьСОшибками", СтруктураРеквизитов, РазрешитьВыгружатьСОшибками);
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	
	РегламентированнаяОтчетность.СохранитьСтатусОтправкиУведомления(ЭтаФорма);
	
	Модифицированность = Ложь;
	ЭтотОбъект.Заголовок = СтрЗаменить(ЭтотОбъект.Заголовок, " (создание)", "");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Данные = Неопределено;
	Параметры.Свойство("Данные", Данные);
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Организация = Объект.Организация;
	Иначе
		Организация = Параметры.Организация;
		Объект.Организация = Параметры.Организация;
		Если Параметры.Свойство("НалоговыйОрган") И ЗначениеЗаполнено(Параметры.НалоговыйОрган) Тогда 
			Объект.РегистрацияВИФНС = Параметры.НалоговыйОрган;
		Иначе
			Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Организация);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Данные) И ТипЗнч(Данные) = Тип("СправочникСсылка.ДокументыРеализацииПолномочийНалоговыхОрганов") Тогда
			ЗаполнитьДаннымиТребования(Данные);
		КонецЕсли;
		
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
	
	НачальнаяИнициализация();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаПодписи = ТекущаяДатаСеанса();
		ЭтотОбъект.Заголовок = ЭтотОбъект.Заголовок + " (создание)";
	КонецЕсли;
	
	Разложение = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЭтаФорма.ИмяФормы, ".");
	Объект.ИмяФормы = Разложение[3];
	Объект.ИмяОтчета = Разложение[1];
	
	ЗагрузитьДанные();
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтаФорма);
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект);
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	КонецЕсли;
	
	Элементы.ГруппаЮЛ.Видимость = (_ОтпрЮЛ = 0);
	Элементы.ГруппаФЛ.Видимость = (_ОтпрЮЛ = 1);
	Элементы.ПриложенныеДокументы.Видимость = ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами");
	Элементы.ФормаРазрешитьВыгружатьСОшибками.Пометка = РазрешитьВыгружатьСОшибками;
	Элементы._НаимДокПодп.АвтоОтметкаНезаполненного = (_ПрПодп = 2 Или _ПрПодп = 4);
КонецПроцедуры

&НаСервере
Процедура НачальнаяИнициализация()
	ЭтоЮрЛицо = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
	_ПризОтпрУП = 1;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда 
		Элементы._ПрПодп.СписокВыбора.Добавить(3, "руководитель организации");
		Элементы._ПрПодп.СписокВыбора.Добавить(4, "представитель организации");
		_ПрПодп = 3;
	Иначе 
		Элементы._ПрПодп.СписокВыбора.Добавить(1, "физическое лицо");
		Элементы._ПрПодп.СписокВыбора.Добавить(2, "представитель физического лица");
		_ПрПодп = 1;
	КонецЕсли;
	
	Элементы._Номер.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ДатаТреб.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._НомТреб.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ИмяФайлТреб.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._НаимОргОтпр.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ИННЮЛОтпр.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._КППОтпр.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ИННФЛОтпр.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ФамилияОтпр.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ИмяОтпр.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ОтчествоОтпр.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ДолжнПодп.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._Тлф.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._Email.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ИННФЛПодп.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ФамилияПодп.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ИмяПодп.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ОтчествоПодп.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._НаимДокПодп.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
	Элементы._ПрПодп.УстановитьДействие("ПриИзменении", "ПриИзмененииРеквизитов");
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	СохранитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПечатьСразу();
КонецФункции

&НаКлиенте
Процедура ПечатьУведомления(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ТекстВопроса = "Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьУведомленияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
	Иначе
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУведомленияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

#Область ОтправкаВФНС
////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС
&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры
#КонецОбласти

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтаФорма);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru='Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	ТаблицаОшибок = ПроверитьВыгрузкуНаСервере();
	Если ТаблицаОшибок.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибок не обнаружено");
	Иначе
		ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.НавигацияПоОшибкам", Новый Структура("ТаблицаОшибок", ТаблицаОшибок), ЭтотОбъект, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизитов(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура _ПризОтпрУППриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура _ОтпрЮЛПриИзменении(Элемент)
	Элементы.ГруппаЮЛ.Видимость = (_ОтпрЮЛ = 0);
	Элементы.ГруппаФЛ.Видимость = (_ОтпрЮЛ = 1);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОснованииТребования(Команда)
	ВидыТребований = Новый Массив;
	ВидыТребований.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНалоговыхДокументов.ТребованиеОПредставленииДокументов"));
	
	ПараметрыВыбораТребования = Новый Структура("РежимВыбора, Организация, ВидыТребований", Истина, Организация, ВидыТребований);
	ОО = Новый ОписаниеОповещения("СоздатьНаОснованииТребованияЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ДокументыРеализацииПолномочийНалоговыхОрганов.ФормаВыбора", ПараметрыВыбораТребования, ЭтотОбъект,,,, ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОснованииТребованияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда 
		ЗаполнитьДаннымиТребования(РезультатЗакрытия);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиТребования(Требование)
	Реквизиты = "НалоговыйОрган,Организация,Идентификатор,ИдентификаторОснования,";
	Реквизиты = Реквизиты + "ВидДокумента,НомерДокумента,ДатаДокумента,ДатаСообщения,ДатаОтправки";
	РеквизитыТребования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Требование, Реквизиты);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	РегистрацииВНалоговомОргане.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НалоговыеОрганы КАК НалоговыеОрганы
	|		ПО РегистрацииВНалоговомОргане.Код = НалоговыеОрганы.Код
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &Организация
	|	И НалоговыеОрганы.Ссылка = &НалоговыйОрган";
		
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", РеквизитыТребования.НалоговыйОрган);
	
	Объект.РегистрацияВИФНС = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Объект.РегистрацияВИФНС = Выборка.Ссылка;
	КонецЦикла;
	
	_ИмяФайлТреб = "";
	Если РеквизитыТребования.ВидДокумента = Перечисления.ВидыНалоговыхДокументов.ТребованиеОПредставленииДокументов Тогда 
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
		ИменаФайлов = КонтекстЭДОСервер.ПолучитьФайлыДокументовРеализацииПолномочийНалоговыхОрганов(Требование);
		_ИмяФайлТреб = КонтекстЭДОСервер.ИмяФайлаБезРасширения(ИменаФайлов[0].ИмяФайла);
	КонецЕсли;
	_НомТреб = РеквизитыТребования.НомерДокумента;
	_ДатаТреб = РеквизитыТребования.ДатаДокумента;
	Элементы._НаимДокПодп.АвтоОтметкаНезаполненного = (_ПрПодп = 2 Или _ПрПодп = 4);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВИФНСПриИзменении(Элемент)
	УстановитьДанныеПоРегистрацииВИФНС();
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоФизЛицу(Физлицо)
	Если ЗначениеЗаполнено(Физлицо) Тогда 
		ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Физлицо, , Объект.ДатаПодписи);
		_ИННФЛПодп = ДанныеПредставителя.ИНН;
		Объект.ПодписантФамилия = СокрЛП(ДанныеПредставителя.Фамилия);
		Объект.ПодписантИмя = СокрЛП(ДанныеПредставителя.Имя);
		Объект.ПодписантОтчество = СокрЛП(ДанныеПредставителя.Отчество);
	Иначе
		Объект.ПодписантФамилия = "";
		Объект.ПодписантИмя = "";
		Объект.ПодписантОтчество = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоОрганизации()
	Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьДанныеРуководителя(Объект);
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.РегистрацияВИФНС, "Код,Представитель,ДокументПредставителя");
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УстановитьПредставителяПоФизЛицу(Реквизиты.Представитель);
		_ПрПодп = ?(ЭтоЮрЛицо, 4, 2);
		_НаимДокПодп = Реквизиты.ДокументПредставителя;
	Иначе
		УстановитьПредставителяПоОрганизации();
		_ПрПодп = ?(ЭтоЮрЛицо, 3, 1);
		_НаимДокПодп = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(ЭтотОбъект, , Ложь, СтруктураРеквизитовУведомления.СписокПечатаемыхЛистов);
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	РазрешитьВыгружатьСОшибками = Не РазрешитьВыгружатьСОшибками;
	Элементы.ФормаРазрешитьВыгружатьСОшибками.Пометка = РазрешитьВыгружатьСОшибками;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда 
		Попытка
			Элементы.ГруппаЗакладки.ТекущаяСтраница = Элементы[Параметр.ИмяСтраницы];
			ТекущийЭлемент = Элементы[Параметр.ИмяОбласти];
			
			Если Параметр.ИмяОбласти = "_СвНевозмПред" И ЗначениеЗаполнено(Параметр.УИДСтраницы) Тогда 
				НС = _СвНевозмПред.НайтиСтроки(Новый Структура("УИД", Параметр.УИДСтраницы));
				Если НС.Количество() > 0 Тогда 
					Элементы._СвНевозмПред.ТекущаяСтрока = НС[0].ПолучитьИдентификатор();
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		Активизировать();
		Источник.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ПрПодпПриИзменении(Элемент)
	Элементы._НаимДокПодп.АвтоОтметкаНезаполненного = (_ПрПодп = 2 Или _ПрПодп = 4);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыКодПричиныОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Элементы._СвНевозмПред.ТекущиеДанные.Причина = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение).Представление;
	Элементы._СвНевозмПред.ТекущиеДанные.Описание = "";
	Элементы._СвНевозмПред.ТекущиеДанные.Данные.Очистить();
	Элементы._СвНевозмПред.ТекущиеДанные._ИмяДокР.Очистить();
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВыборСведенийОПравоохранительномОрганеЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) <> Тип("Структура")
		Или Элементы._СвНевозмПред.ТекущиеДанные = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	СЗ = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
	СЗ.Очистить();
	СЗ.Добавить("_АдрПОДокПрд", Ответ._АдрПОДокПрд);
	СЗ.Добавить("_НаимПОДокПрд", Ответ._НаимПОДокПрд);
	Элементы._СвНевозмПред.ТекущиеДанные.Описание = Ответ.ТекстовоеОписание;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПродлениеСроковЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) <> Тип("Структура")
		Или Элементы._СвНевозмПред.ТекущиеДанные = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	СЗ = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
	СЗ.Очистить();
	СЗ.Добавить("_ОписПрич", Ответ._ОписПрич);
	СЗ.Добавить("_СрокПредст", Формат(Ответ._СрокПредст, "ДФ=yyyyMMdd"));
	Элементы._СвНевозмПред.ТекущиеДанные.Описание = Ответ.ТекстовоеОписание;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СведенияОбАудитореЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) <> Тип("Структура")
		Или Элементы._СвНевозмПред.ТекущиеДанные = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	СЗ = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
	СЗ.Очистить();
	Для Каждого КЗ Из Ответ Цикл 
		СЗ.Добавить(КЗ.Ключ, КЗ.Значение);
	КонецЦикла;
	Элементы._СвНевозмПред.ТекущиеДанные.Описание = Ответ.ТекстовоеОписание;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбстоятельстваУтратыЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) <> Тип("Структура")
		Или Элементы._СвНевозмПред.ТекущиеДанные = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	СЗ = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
	СЗ.Очистить();
	СЗ.Добавить("_ОбстоятУтрат", Ответ._ОбстоятУтрат);
	Элементы._СвНевозмПред.ТекущиеДанные.Описание = Ответ.ТекстовоеОписание;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СведенияОРанееПредоставленныхДокументахЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) <> Тип("Структура")
		Или Элементы._СвНевозмПред.ТекущиеДанные = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	СЗ = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
	СЗ.Очистить();
	Для Каждого ЭлтКлюч Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ЭБФорма,_ТипДокОтв,_СведДокО,_Период,_ОтчетГод,_НомКорр,_НомДокОтв,_НаимДокОтв,_КодНОДокПред,_КНДПредДок,_ИмяФайлОтв,_ИмяОпис", ",") Цикл 
		СЗ.Добавить(ЭлтКлюч, Ответ[ЭлтКлюч]);
	КонецЦикла;
	Для Каждого ЭлтКлюч Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("_ДатаПрмЭ,_ДатаПрмБ,_ДатаДокОтв", ",") Цикл 
		СЗ.Добавить(ЭлтКлюч, Формат(Ответ[ЭлтКлюч], "ДФ=yyyyMMdd"));
	КонецЦикла;
	
	Элементы._СвНевозмПред.ТекущиеДанные._ИмяДокР.Очистить();
	Для Каждого Стр Из Ответ._ИмяДокР Цикл 
		ЗаполнитьЗначенияСвойств(Элементы._СвНевозмПред.ТекущиеДанные._ИмяДокР.Добавить(), Стр);
	КонецЦикла;
	Элементы._СвНевозмПред.ТекущиеДанные.Описание = Ответ.ТекстовоеОписание;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеОтсутсвияЗавершение(Текст, Параметры) Экспорт
	Если ТипЗнч(Текст) = Тип("Строка") Тогда 
		Элементы._СвНевозмПред.ТекущиеДанные.Описание = Текст;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элементы._СвНевозмПред.ТекущиеДанные.КодПричины = "24" Тогда 
		СписокПараметров = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
		ПараметрыОткрытия = Новый Структура;
		Элт = СписокПараметров.НайтиПоЗначению("_АдрПОДокПрд");
		Если Элт <> Неопределено Тогда 
			ПараметрыОткрытия.Вставить("_АдрПОДокПрд", Элт.Представление);
		КонецЕсли;
		Элт = СписокПараметров.НайтиПоЗначению("_НаимПОДокПрд");
		Если Элт <> Неопределено Тогда 
			ПараметрыОткрытия.Вставить("_НаимПОДокПрд", Элт.Представление);
		КонецЕсли;
		
		ОО = Новый ОписаниеОповещения("ВыборСведенийОПравоохранительномОрганеЗавершение", ЭтотОбъект);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаСведенийОПравоохранительномОргане", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли Элементы._СвНевозмПред.ТекущиеДанные.КодПричины = "21" Тогда
		СписокПараметров = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
		ПараметрыОткрытия = Новый Структура;
		
		Элт = СписокПараметров.НайтиПоЗначению("_ОбстоятУтрат");
		Если Элт <> Неопределено Тогда 
			ПараметрыОткрытия.Вставить("_ОбстоятУтрат", Элт.Представление);
		КонецЕсли;
		
		ОО = Новый ОписаниеОповещения("ОбстоятельстваУтратыЗавершение", ЭтотОбъект);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаОбстоятельстваУтраты", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли Элементы._СвНевозмПред.ТекущиеДанные.КодПричины = "30" Тогда 
		СписокПараметров = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
		ПараметрыОткрытия = Новый Структура;
		Для Каждого ЭлтКлюч Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ЭБФорма,_ТипДокОтв,_СведДокО,_Период,_ОтчетГод,_НомКорр,_НомДокОтв,_НаимДокОтв,_КодНОДокПред,_КНДПредДок,_ИмяФайлОтв,_ИмяОпис", ",") Цикл 
			Элт = СписокПараметров.НайтиПоЗначению(ЭлтКлюч);
			Если Элт <> Неопределено Тогда 
				ПараметрыОткрытия.Вставить(ЭлтКлюч, Элт.Представление);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ЭлтКлюч Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("_ДатаПрмЭ,_ДатаПрмБ,_ДатаДокОтв", ",") Цикл 
			Элт = СписокПараметров.НайтиПоЗначению(ЭлтКлюч);
			Если Элт <> Неопределено Тогда 
				ПараметрыОткрытия.Вставить(ЭлтКлюч, ОТД.ПривестиЗначение(Элт.Представление));
			КонецЕсли;
		КонецЦикла;
		
		ПараметрыОткрытия.Вставить("_ИмяДокР", Элементы._СвНевозмПред.ТекущиеДанные._ИмяДокР);
		ОО = Новый ОписаниеОповещения("СведенияОРанееПредоставленныхДокументахЗавершение", ЭтотОбъект);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаСведенийОРанееПредоставленныхДокументах", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли Элементы._СвНевозмПред.ТекущиеДанные.КодПричины = "22" Тогда 
		ОО = Новый ОписаниеОповещения("ОписаниеОтсутсвияЗавершение", ЭтотОбъект);
		ПоказатьВводСтроки(ОО, Элементы._СвНевозмПред.ТекущиеДанные.Описание, "Причина отсутствия");
	ИначеЕсли Элементы._СвНевозмПред.ТекущиеДанные.КодПричины = "23" Тогда 
		СписокПараметров = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
		ПараметрыОткрытия = Новый Структура;
		Для Каждого ЭлтКлюч Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ЮрФиз,_ОРНЗ,_ИННЮЛ,_КПП,_НаимОрг,_ИННФЛ,_Фамилия,_Имя,_Отчество", ",") Цикл 
			Элт = СписокПараметров.НайтиПоЗначению(ЭлтКлюч);
			Если Элт <> Неопределено Тогда 
				ПараметрыОткрытия.Вставить(ЭлтКлюч, Элт.Представление);
			КонецЕсли;
		КонецЦикла;
		
		ОО = Новый ОписаниеОповещения("СведенияОбАудитореЗавершение", ЭтотОбъект);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаСведенийОбАудиторе", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли Элементы._СвНевозмПред.ТекущиеДанные.КодПричины = "10" Тогда 
		СписокПараметров = Элементы._СвНевозмПред.ТекущиеДанные.Данные;
		ПараметрыОткрытия = Новый Структура;
		
		Элт = СписокПараметров.НайтиПоЗначению("_ОписПрич");
		Если Элт <> Неопределено Тогда 
			ПараметрыОткрытия.Вставить("_ОписПрич", Элт.Представление);
		КонецЕсли;
		Элт = СписокПараметров.НайтиПоЗначению("_СрокПредст");
		Если Элт <> Неопределено Тогда 
			ПараметрыОткрытия.Вставить("_СрокПредст", ОТД.ПривестиЗначение(Элт.Представление));
		КонецЕсли;
		
		ОО = Новый ОписаниеОповещения("ПродлениеСроковЗавершение", ЭтотОбъект);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаПродлениеСроков", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыКодПричиныПриИзменении(Элемент)
	Элементы._СвНевозмПред.ТекущиеДанные.Данные.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ВыборСпискаДокументовЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) = Тип("Структура")
		И Ответ.Свойство("_ДокИнф") Тогда 
		
		Модифицированность = Истина;
		Элементы._СвНевозмПред.ТекущиеДанные.ДокументыПредставление = Ответ.ТекстовоеОписание;
		ДЗ = Элементы._СвНевозмПред.ТекущиеДанные.ДокИнф;
		ДЗ.ПолучитьЭлементы().Очистить();
		Для Каждого Стр1 Из Ответ._ДокИнф.ПолучитьЭлементы() Цикл 
			НовСтр = ДЗ.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Стр1);
			Для Каждого Стр2 Из Стр1.ПолучитьЭлементы() Цикл 
				НовСтр2 = НовСтр.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр2, Стр2);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыОткрытия = Новый Структура("_ДокИнф", Элементы._СвНевозмПред.ТекущиеДанные.ДокИнф);
	
	ОО = Новый ОписаниеОповещения("ВыборСпискаДокументовЗавершение", ЭтотОбъект);
	ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаСведенияОДокументах", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыСканированныеДокументыОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элементы._СвНевозмПред.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(Элементы._СвНевозмПред.ТекущиеДанные.УИД) Тогда 
		Элементы._СвНевозмПред.ТекущиеДанные.УИД = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Если Модифицированность Или Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ТекстВопроса = "Для добавления файла необходимо сохранить уведомление. Сохранить?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ДокументыСканированныеДокументыОписаниеНачалоВыбораПослеСохранения", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
	Иначе
		ТД = Элементы._СвНевозмПред.ТекущиеДанные;
		ПараметрыОткрытия = Новый Структура("Уведомление, РедактируемыйУИД, ПриложенныеФайлы", Объект.Ссылка, ТД.УИД, ТД.ПриложенныеФайлы);
		
		ОО = Новый ОписаниеОповещения("ВыборСпискаДокументовЗавершение", ЭтотОбъект);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаПриложенныхСканированныхДокументов", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыСканированныеДокументыОписаниеНачалоВыбораПослеСохранения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		ТД = Элементы._СвНевозмПред.ТекущиеДанные;
		ПараметрыОткрытия = Новый Структура("Уведомление, РедактируемыйУИД, ПриложенныеФайлы", Объект.Ссылка, ТД.УИД, ТД.ПриложенныеФайлы);
		
		ОО = Новый ОписаниеОповещения("ВыборСпискаДокументовЗавершение", ЭтотОбъект);
		ОткрытьФорму("Отчет.РегламентированноеУведомлениеНевозможностьПредоставления.Форма.ФормаПриложенныхСканированныхДокументов", ПараметрыОткрытия, ЭтотОбъект,,,,ОО,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция СформироватьОписаниеСканКопий()
	ДЗ = Элементы._СвНевозмПред.ТекущиеДанные.ПриложенныеФайлы.ПолучитьЭлементы();
	ВсегоД = 0;
	ВсегоФ = 0;
	Для Каждого Стр1 Из ДЗ Цикл
		ВсегоД = ВсегоД + 1;
		Для Каждого Стр2 Из Стр1.ПолучитьЭлементы() Цикл
			ВсегоФ = ВсегоФ + 1;
		КонецЦикла;
	КонецЦикла;
	
	Если ВсегоД = 0 Тогда 
		Возврат "Нет приложенных скан-копий";
	Иначе
		Возврат "Приложено " + ВсегоД + " документов и " + ВсегоФ + " файлов";
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбработкаПослеДобавленияПрисоединенногоФайла(ИмяДокумент, УИДДокумент, УИДФайл, ПрисоединенныйФайл, ПрисоединенныйФайлИмя) Экспорт
	Модифицированность = Истина;
	ДЗ = Элементы._СвНевозмПред.ТекущиеДанные.ПриложенныеФайлы.ПолучитьЭлементы();
	НовСтр = Неопределено;
	Для Каждого Стр Из ДЗ Цикл 
		Если Стр.УИДДокумент = УИДДокумент Тогда 
			НовСтр = Стр;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если НовСтр = Неопределено Тогда
		НовСтр = ДЗ.Добавить();
		НовСтр.УИДДокумент = УИДДокумент;
		НовСтр.Документ = ИмяДокумент;
	КонецЕсли;
	
	НовСтрФайл = НовСтр.ПолучитьЭлементы().Добавить();
	НовСтрФайл.УИДФайл = УИДФайл;
	НовСтрФайл.Документ = ПрисоединенныйФайлИмя;
	НовСтрФайл.ПрисоединенныйФайл = ПрисоединенныйФайл;
	НовСтрФайл.ИндексКартинки = 2;
	
	Элементы._СвНевозмПред.ТекущиеДанные.СканированныеДокументыОписание = СформироватьОписаниеСканКопий();
	СохранитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПослеУдаленияПрисоединенногоФайла(УИДДокумент, УИДФайл) Экспорт
	НовСтр = Неопределено;
	Для Каждого Стр Из Элементы._СвНевозмПред.ТекущиеДанные.ПриложенныеФайлы.ПолучитьЭлементы() Цикл 
		Если Стр.УИДДокумент = УИДДокумент Тогда 
			НовСтр = Стр;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если НовСтр = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	Для Каждого Стр Из НовСтр.ПолучитьЭлементы() Цикл 
		Если Стр.УИДФайл = УИДФайл Тогда 
			НовСтр.ПолучитьЭлементы().Удалить(Стр);
			Элементы._СвНевозмПред.ТекущиеДанные.СканированныеДокументыОписание = СформироватьОписаниеСканКопий();
			Модифицированность = Истина;
			СохранитьДанные();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПослеУдаленияДокумента(УИДДокумент) Экспорт
	Для Каждого Стр Из Элементы._СвНевозмПред.ТекущиеДанные.ПриложенныеФайлы.ПолучитьЭлементы() Цикл 
		Если Стр.УИДДокумент = УИДДокумент Тогда 
			Элементы._СвНевозмПред.ТекущиеДанные.ПриложенныеФайлы.ПолучитьЭлементы().Удалить(Стр);
			Элементы._СвНевозмПред.ТекущиеДанные.СканированныеДокументыОписание = СформироватьОписаниеСканКопий();
			Модифицированность = Истина;
			СохранитьДанные();
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура _СвНевозмПредПередУдалением(Элемент, Отказ)
	_СвНевозмПредПередУдалениемНаСервере(Элемент.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура _СвНевозмПредПередУдалениемНаСервере(ТекущаяСтрока)
	Для Каждого Стр1 Из _СвНевозмПред.НайтиПоИдентификатору(ТекущаяСтрока).ПриложенныеФайлы.ПолучитьЭлементы() Цикл 
		Для Каждого Стр2 Из Стр1.ПолучитьЭлементы() Цикл 
			Попытка
				ПрисоединенныйФайлОбъект = Стр2.ПрисоединенныйФайл.ПолучитьОбъект();
				ПрисоединенныйФайлОбъект.ПометкаУдаления = Истина;
				ПрисоединенныйФайлОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОТД = Новый ОписаниеТипов("Дата");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПричину(Команда)
	НовСтр = _СвНевозмПред.Добавить();
	Элементы._СвНевозмПред.ТекущаяСтрока = НовСтр.ПолучитьИдентификатор();
	НовСтр.УИД = Новый УникальныйИдентификатор;
	НовСтр.СканированныеДокументыОписание = СформироватьОписаниеСканКопий();
КонецПроцедуры

&НаКлиенте
Процедура _СвНевозмПредВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ДокументыОписание" Тогда
		СтандартнаяОбработка = Ложь;
		ДокументыОписаниеНачалоВыбора(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	ИначеЕсли Поле.Имя = "ДокументыПредставление" Тогда 
		СтандартнаяОбработка = Ложь;
		ДокументыПредставлениеНачалоВыбора(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	ИначеЕсли Поле.Имя = "ДокументыСканированныеДокументыОписание" Тогда 
		СтандартнаяОбработка = Ложь;
		ДокументыСканированныеДокументыОписаниеНачалоВыбора(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры
