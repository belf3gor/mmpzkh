////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
// Процедура заполняет неизменяемые значения в табличных частях настройки соответствия льгот.
Процедура ЗаполнитьНастройкиСоответствияЛьгот()
	
	СтруктураПараметров = УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекЗагрузить("СтатистикаФормаN1_ПУ_ЖКХ_НастройкиОтчета");
	
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		мКатегории = Новый ТаблицаЗначений;
		СтруктураПараметров.Свойство("ТаблицаСоответствияУслуг", мКатегории);
	Иначе
		мКатегории = Новый СписокЗначений;
		мКатегории.Добавить("ХВС",       "Холодная вода");
		мКатегории.Добавить("ГВС",       "Горячая вода");
		мКатегории.Добавить("Отопление", "Отопление");
		мКатегории.Добавить("ЭлЭн",      "Электрическая энергия");
		мКатегории.Добавить("Газ",       "Газ");
	КонецЕсли;
		
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.КВП_Услуги"));
	
	ТаблицаСоответствияУслуг.Очистить();
	
	Для Каждого Категория Из мКатегории Цикл
		
		НоваяСтрока = ТаблицаСоответствияУслуг.Добавить();
		
		Попытка
			НоваяСтрока.Категория              = Категория.Значение;
			НоваяСтрока.КатегорияПредставление = Категория.Представление;
		Исключение
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Категория);
		КонецПопытки;
		
		НоваяСтрока.СписокУслуг.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройкиСоответствияЛьгот()

&НаСервере
// Процедура сохраняет настройки отчета в хранилище.
Процедура СохранитьНастройки()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТаблицаСоответствияУслуг", ТаблицаСоответствияУслуг.Выгрузить());
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ХранилищеОбщихНастроекСохранить("СтатистикаФормаN1_ПУ_ЖКХ_НастройкиОтчета",,
																	СтруктураПараметров);
	
КонецПроцедуры

#КонецОбласти 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНастройкиСоответствияЛьгот();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПередЗакрытием" формы.
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И НЕ ОтключитьПроверкуМодифицированностиФормы Тогда
		
		Отказ = Истина;
		
		ОповещениеОВыбореОтвета = Новый ОписаниеОповещения("ОбработчикОтветаПользователя", ЭтотОбъект);
		ТекстВопроса = "Настройки были изменены. Сохранить изменения?";
		ПоказатьВопрос(ОповещениеОВыбореОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обрабатывает ответ пользователя.
Процедура ОбработчикОтветаПользователя(РезультатОтвета, ДопПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		
		СохранитьНастройки();
		
	ИначеЕсли РезультатОтвета = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОтключитьПроверкуМодифицированностиФормы = Истина;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "Сохранить".
Процедура Сохранить(Команда)
	
	СохранитьНастройки();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти 
