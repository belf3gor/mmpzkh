&НаСервере
Перем мОбъектОтчета;

&НаКлиенте
Перем ОбработкаКС Экспорт;

&НаСервере
Перем СписокРасшифровкиПоказателей;

&НаСервере
Перем СписокРасшифровкиформулы;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обход ошибки платформы Параметр сеанса отсутствует или удален
	ТабличныйДокумент.Очистить();
	
	СформироватьСтруктуруРеквизитовФормы();
	
	СтруктураРеквизитовФормы.СписокПечатаемыхЛистов = Новый СписокЗначений;
	
	СтруктураРеквизитовФормы.мСоставПоказателей = "СоставПоказателей2014Кв3";
	
	СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2));
	
	СтруктураДанныхТитульный = Новый Структура;
	СтруктураДанныхСведения  = Новый Структура;
	
	// ОПИСАНИЕ ПАРАМЕТРОВ МНОГОСТРОЧНЫХ ГРУПП
	
	// Структура многострочных разделов формы.
	мСтруктураМногострочныхРазделов = Новый Структура;
	
	// Структура исходных строк (минимального кол-ва) многострочных разделов формы.
	мСтруктураИсхКолвоСтрокРазделов = Новый Структура;
	
	мСтруктураИменаКолонокРазделов  = Новый Структура;
	
	ИнициализацияМногостраничныхРазделов();
	
	// Структура содержит данные дополнительных страниц.
	мСтруктураМногостраничныхРазделов = Новый Структура;
	мСтруктураМногостраничныхРазделов.Вставить("Раздел1", "ТаблицаСтраницыРаздел1");

	ЦветЗаполняетсяТолькоВручную                           = Новый Цвет(255, 255, 225);
	ЦветЗаполняетсяАвтоКорректир                           = Новый Цвет(255, 240, 200);
	ЦветЗаполняетсяАвтоБезКорректир                        = Новый Цвет(230, 240, 220);
	СтруктураРеквизитовФормы.ЦветЗаполняетсяАвтоАрифметика = Новый Цвет(192, 220, 192); // зеленый
	ЦветЗаполняетсяОднозначноВручную                       = Новый Цвет(255, 255, 192); // желтый
	ЦветЗаполняетсяАвтоматически                           = Новый Цвет(255, 255, 255); // белый, ввод запрещен

	// Структура цветов раскраски автозаполняемых ячеек.
	мСтруктураЦветовРаскраски = Новый Структура;
	мСтруктураЦветовРаскраски.Вставить("_1", ЦветЗаполняетсяТолькоВручную);
	мСтруктураЦветовРаскраски.Вставить("_2", ЦветЗаполняетсяАвтоКорректир);
	мСтруктураЦветовРаскраски.Вставить("_3", ЦветЗаполняетсяАвтоБезКорректир);
	мСтруктураЦветовРаскраски.Вставить("_4", СтруктураРеквизитовФормы.ЦветЗаполняетсяАвтоАрифметика);
	мСтруктураЦветовРаскраски.Вставить("_0", ЦветЗаполняетсяОднозначноВручную);
	мСтруктураЦветовРаскраски.Вставить("_5", ЦветЗаполняетсяАвтоматически);
	
	мСтруктураВариантыЗаполнения       = Новый Структура;
	мСтруктураВариантыЗаполненияЭталон = Новый Структура;
	
	// ОПИСАНИЕ ПАРАМЕТРОВ ФОРМЫ ОТЧЕТА
	
	// Версия формы.
	СтруктураРеквизитовФормы.мВерсияФормы = "13/11/2014";
	
	// Код отчета, равен КНД.
	СтруктураРеквизитовФормы.мКодОтчета = 1151091;
	
	СтруктураРеквизитовФормы.ВариантыФорматовВыгрузки = Новый СписокЗначений;
	СтруктураРеквизитовФормы.ВариантыФорматовВыгрузки.Добавить(
		СтруктураРеквизитовФормы.мСоставПоказателей, "Формат 5.02", Истина);
	
	СтруктураРеквизитовФормы.КНД = "1151091";
	
	СтруктураРеквизитовФормы.мПечатныеформы = Новый СписокЗначений;
	СтруктураРеквизитовФормы.мПечатаемыеРазделы = Новый СписокЗначений;
	
	ИмяРаздела = "Титульный";
	
	ТабличныйДокумент.Вывести(
		ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(
		Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела;
	
	СтруктураРеквизитовФормы.мВыбраннаяФорма          = Параметры.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мПериодичность           = Параметры.мПериодичность;
	СтруктураРеквизитовФормы.мСкопированаФорма        = Параметры.мСкопированаФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок          = Параметры.мСохраненныйДок;
	СтруктураРеквизитовФормы.Организация              = Параметры.Организация;
	СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417
		= Параметры.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417;
	
	ДатаПодписи	= Параметры.ДатаПодписи; 
	
	ПорядкиОкругленияОтчетности = Новый Структура;
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1000);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000000",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1000000);
	
	СтруктураРеквизитовФормы.СправочникиВидыКонтактнойИнформацииФактАдресОрганизации = Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица;
	
	Инициализация(Параметры.БезОткрытияФормы);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруРеквизитовФормы()
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("КНД");
	СтруктураРеквизитовФормы.Вставить("мАвтоВыборКодов");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы");
	СтруктураРеквизитовФормы.Вставить("мВерсияФормы");
	СтруктураРеквизитовФормы.Вставить("мДелитель");
	СтруктураРеквизитовФормы.Вставить("мЗаписываетсяНовыйДокумент");
	СтруктураРеквизитовФормы.Вставить("мЗаписьЗапрещена");
	СтруктураРеквизитовФормы.Вставить("мКодОтчета");
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мСоставПоказателей");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");
	СтруктураРеквизитовФормы.Вставить("ОтключитьВыполнениеРасчета", Ложь);
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения");
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);
	СтруктураРеквизитовФормы.Вставить("ВариантыФорматовВыгрузки");
	СтруктураРеквизитовФормы.Вставить("ВидДокумента");
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитовФормы.Вставить("мВариант");
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мОписаниеТиповЧислоЕ");
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мПечатаемыеРазделы");
	СтруктураРеквизитовФормы.Вставить("мПечатныеФормы");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мПечатьБезШтрихкодаРазрешена");
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("ЦветЗаполняетсяАвтоАрифметика");
	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов");
	СтруктураРеквизитовФормы.Вставить("НаимОрганизации");
	СтруктураРеквизитовФормы.Вставить("СтрПериодОтчета");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");
	СтруктураРеквизитовФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417");
	СтруктураРеквизитовФормы.Вставить("ТекстДляЗаголовочнойЧасти");
	СтруктураРеквизитовФормы.Вставить("СправочникиВидыКонтактнойИнформацииФактАдресОрганизации");
	СтруктураРеквизитовФормы.Вставить("мПроверятьСоотношенияПриПечатиИВыгрузки");
	СтруктураРеквизитовФормы.Вставить("ИсходныйКодПоМесту");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияМногостраничныхРазделов()
	
	СтрПерваяСтраница = ТаблицаСтраницыРаздел1.Добавить();
	СтрПерваяСтраница.Представление               = "Новая страница";
	СтрПерваяСтраница.АктивнаяСтраница            = Истина;
	СтрПерваяСтраница.АвтоматическоеПредставление = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(ВыполняемоеОповещение = Неопределено) Экспорт
	
	РегламентированнаяОтчетностьКлиент.Очистить(ЭтаФорма, ВыполняемоеОповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеОперацииПослеОчисткиЛистаНаКлиенте(ИмяСтраницы, УдалениДопЭкз = Истина) Экспорт

	СпециальныеОперацииПослеОчисткиЛиста(ЭтаФорма, ИмяСтраницы, УдалениДопЭкз);
	
КонецПроцедуры

&НаСервере
Процедура СпециальныеОперацииПослеОчисткиЛистаНаСервере(ИмяСтраницы, УдалениДопЭкз = Истина) Экспорт
	
	СпециальныеОперацииПослеОчисткиЛиста(ЭтаФорма, ИмяСтраницы, УдалениДопЭкз);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СпециальныеОперацииПослеОчисткиЛиста(Форма, ИмяСтраницы, УдалениДопЭкз) Экспорт
	
	Расчет(Форма, ИмяСтраницы);
	
КонецПроцедуры

&НаСервере
Процедура ФормироватьСтруктуруСвойствСтраниц() Экспорт
	
	мСвойстваРазделовДекларации.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();
	
	СтрокаУровня1.ИмяСтраницы                          = "Титульный";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.МаксКолвоЭкз                         = 0;
	СтрокаУровня1.ОчищатьРаздел                        = Ложь;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Истина;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Ложь;
	
	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();
	
	СтрокаУровня1.ИмяСтраницы                          = "Сведения";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.МаксКолвоЭкз                         = 0;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Истина;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Ложь;
	
	СтрокаУровня1 = мСвойстваРазделовДекларации.ПолучитьЭлементы().Добавить();
	
	СтрокаУровня1.ИмяСтраницы                          = "Раздел1";
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Истина;
	СтрокаУровня1.МаксКолвоЭкз                         = 0;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Истина;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьТабличноеПолеПоИдМногострочногоРазделаНаСервере(ИдГруппы) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ОпределитьТабличноеПолеПоИдМногострочногоРазделаНаКлиенте(ИдГруппы) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ИмяЛиста = Неопределено) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаКлиенте(ИмяЛиста = Неопределено) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция СобратьДанныеТекущегоТаблПоляНаСервере(ИмяТабличногоПоля) Экспорт
	
	Возврат СобратьДанныеТекущегоТаблПоля(ЭтаФорма, ИмяТабличногоПоля);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СобратьДанныеТекущегоТаблПоля(Форма, ИмяТабличногоПоля)
	
	// Собираем в список значений имена вычисляемых показателей,
	// которые участвуют в расчете других показателей отчета по
	// внутренним связям между страницами декларации.
	// При создании коллекции значений редактируемых полей табличного
	// документа они не будут игнорированы, а их значения будут собраны
	// в структуру. Такой алгоритм имеет назначение ускорить вычислительные
	// процессы.
	//
	// В противном случае нам пришлось для получения итогового значения
	// вычисляемого показателя по всем страницам многостраничного раздела
	// вызвать процедуру расчета по каждой странице.
	//
	
	ТабличноеПоле = Форма[ИмяТабличногоПоля];
	
	СтруктураДанныхПоля = Новый Структура;
	
	Для Инд = 0 По ТабличноеПоле.Области.Количество() - 1 Цикл
		ТекущаяОбласть = ТабличноеПоле.Области[Инд];
		
		Если Не ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекущаяОбласть.СодержитЗначение <> Истина Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяПоказателя      = ТекущаяОбласть.Имя;
		ЗначениеПоказателя = ТекущаяОбласть.Значение;
		
		СтруктураДанныхПоля.Вставить(ИмяПоказателя, ЗначениеПоказателя);
		
	КонецЦикла;
	
	Возврат СтруктураДанныхПоля;
	
КонецФункции

&НаСервере
Процедура ОбнулитьПеременныеМодуляХранящиеЗначенияКвадратногоПредставленияПоРазделуНаСервере(Знач ИмяРаздела) Экспорт
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбнулитьПеременныеМодуляХранящиеЗначенияКвадратногоПредставленияПоРазделуНаКлиенте(Знач ИмяРаздела) Экспорт
	
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеЗначенийВКвадратикахНаСервере(Знач ИмяСтраницы) Экспорт
	
	ЗаполнениеЗначенийВКвадратиках(ЭтаФорма, ИмяСтраницы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнениеЗначенийВКвадратиках(Форма, Знач ИмяСтраницы)
	
	Возврат;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьПеременныеМодуляНаСервере(ИмяПоказателя, ЗначениеПоказателя) Экспорт
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ПоказатьПериод()
				 
	СтруктураРеквизитовФормы.СтрПериодОтчета = ПредставлениеПериода(НачалоДня(ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение), КонецДня(ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение), "ФП = Истина" );	 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуВЯчейкахНаСервере() Экспорт
	
	ЗаполнитьДатуВЯчейках(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДатуВЯчейках(Форма)
	
	Форма.ТабличныйДокумент.Области.ДатаПодписи.Значение = Форма.ДатаПодписи;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЛистамиНаСервере(ТипНП = Неопределено) Экспорт

	УправлениеЛистами(ЭтаФорма, ТипНП);

КонецПроцедуры

&НаКлиенте
Процедура УправлениеЛистамиНаКлиенте(ТипНП = Неопределено) Экспорт

	УправлениеЛистами(ЭтаФорма, ТипНП);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЛистами(Форма, ТипНП = Неопределено)
	
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОбОрганизацииНаСервере(ВПрограммеИзмененаДатаПодписи = Ложь)
	
	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
		
		СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, ТипНП, ТелОрганизации, ФИО, ОКТМО";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		ТабличныйДокумент.Области.ИНН1.Значение = СведенияОбОрганизации.ИННЮЛ;
		ТабличныйДокумент.Области.КПП1.Значение = СведенияОбОрганизации.КППЮЛ;
		
		// Заполняем код ИФНС.
		КодНО = СведенияОбОрганизации.КодНО;
		Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
			КодНО = " " + КодНО;
		КонецЦикла;
		ТабличныйДокумент.Области.НалоговыйОрган.Значение = КодНО;
		
		// Заполняем наименование организации.
		Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация) Тогда
			НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
		Иначе
			НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
		КонецЕсли;
		ТабличныйДокумент.Области.НаимОрг.Значение = НаименованиеОрганизации;
		
		// Заполняем код по ОКТМО.
		ТаблицаСтраницыРаздел1[0].Данные[0].Значение.П000010002001 = ТолькоЦифрыИзСтроки(СведенияОбОрганизации.ОКТМО);
		
		// Заполняем телефон организации.
		ТабличныйДокумент.Области.ТелОрганизации.Значение = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
		
		ЗаполнитьДатуВЯчейках(ЭтаФорма);
		
	КонецЕсли;
	
	// Заполняем сведения о подписантах.
	ЗаполнитьСведенияОПодписантах();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТолькоЦифрыИзСтроки(Знач ИсходнаяСтрока)
	
	Результат = "";
	
	Для Инд = 1 По СтрДлина(ИсходнаяСтрока) Цикл
		СимволСтроки = Сред(ИсходнаяСтрока, Инд, 1);
		КодСимвола = КодСимвола(СимволСтроки);
		Если КодСимвола >= 48 И КодСимвола <= 57 Тогда
			Результат = Результат + СимволСтроки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСведенияОПодписантах() Экспорт
	
	ТипПодписанта = "1";
	Подписант = "";
	НаименованиеОрганизацииПредставителя = "";
	ДокументПредставителя = "";
	
	// Выясним, есть ли представитель.
	КодНО = СокрЛП(ТабличныйДокумент.Области.НалоговыйОрган.Значение);
	КПП   = СокрЛП(ТабличныйДокумент.Области.КПП1.Значение);

	СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
		СтруктураРеквизитовФормы.Организация, КодНО, КПП);
	
	ТипПодписанта = СведенияОПредставителе.ТипПодписанта;
	
	Если ТипПодписанта = "1" Тогда
		// Представителя нет.
		Если РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация) Тогда
			// Подписант - руководитель.
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
				СтруктураРеквизитовФормы.Организация, ДатаПодписи, "ФИОРук, ФИО");
			Подписант = СокрЛП(?(ЗначениеЗаполнено(СведенияОбОрганизации.ФИОРук), СведенияОбОрганизации.ФИОРук, СведенияОбОрганизации.ФИО));
		КонецЕсли;
	Иначе
		// Есть представитель, подписант - он.
		Подписант                            = СведенияОПредставителе.ФИОПредставителя;
		НаименованиеОрганизацииПредставителя = СведенияОПредставителе.НаименованиеОрганизацииПредставителя;
		ДокументПредставителя                = СведенияОПредставителе.ДокументПредставителя;
	КонецЕсли;
	
	ТабличныйДокумент.Области.ПрПодп.Значение = ТипПодписанта;
	ТабличныйДокумент.Области.ОргПодписант.Значение = Подписант;
	ТабличныйДокумент.Области.ОргУп.Значение = НаименованиеОрганизацииПредставителя;
	ТабличныйДокумент.Области.ДокУпПред.Значение = ДокументПредставителя;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраниц(ВариантВыбора)
	Перем ТекущийРазделОтчетаСокрНаим;
	Перем НомерСтраницыРазделаОтчета;
	
	// Запоминаем текущий раздел, установленный в дереве разделов отчета.
	Если НЕ Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		ТекущийРазделОтчетаСокрНаим = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
		НомерСтраницыРазделаОтчета  = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета;
	КонецЕсли;
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ПроверкаСоотношений", Истина);
	мПараметры.Вставить("Автосохранение", Ложь);
	мПараметры.Вставить("ПараметрыОтображенияСумм", Ложь);
	мПараметры.Вставить("СчетчикСтраниц", Истина);
	мПараметры.Вставить("ИмеетсяРеквизитДеревоВыбранныхСтраниц", Истина);
	
	Если СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417 Тогда
		мПараметры.Вставить("РазрешитьВстроеннуюПечать", Истина);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФлажокОтклАвтоРасчет", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	ПараметрыФормы.Вставить("мПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	ПараметрыФормы.Вставить("мСчетчикСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	ПараметрыФормы.Вставить("мАвтоВыборКодов", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	ПараметрыФормы.Вставить("мПроверятьСоотношенияПриПечатиИВыгрузки", СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	ПараметрыФормы.Вставить("мПараметры", мПараметры);
	
	ФормаНастройкиОтчета = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("НастройкиОтчета", ПараметрыФормы, ЭтаФорма);

	мДеревоВыбранныхСтраниц.ПолучитьЭлементы().Очистить();

	КопироватьДанныеФормы(мДеревоСтраницОтчета, ФормаНастройкиОтчета.Дерево);
	
	ЗначениеАвторасчета = СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет;
	ЗначениеЕдИзм       = СтруктураРеквизитовФормы.ЕдиницаИзмерения;
	ЗначениеЗпт         = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;
	
	ДополнительныеПараметры = Новый Структура("ЗначениеАвторасчета, ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим", ЗначениеАвторасчета, ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраницЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаНастройкиОтчета.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаНастройкиОтчета.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаНастройкиОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраницЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ЗначениеАвторасчета = ДополнительныеПараметры.ЗначениеАвторасчета;
	ЗначениеЕдИзм = ДополнительныеПараметры.ЗначениеЕдИзм;
	ЗначениеЗпт = ДополнительныеПараметры.ЗначениеЗпт;
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	
	РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтаФорма);
	
	Модифицированность = Истина;
	
	флЗначенияИдентичны = Истина;
	
	Для Индекс = 0 По мДеревоСтраницОтчета.ПолучитьЭлементы().Количество() - 1 Цикл
		
		Если НЕ мДеревоСтраницОтчета.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу = мДеревоВыбранныхСтраниц.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу Тогда
			флЗначенияИдентичны = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеАвторасчета <> СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		Если СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Ложь Тогда
			ДополнительныеПараметры = Новый Структура("ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны", ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
			ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПерерасчетВсехПоказателейЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр("ru='Будет произведен перерасчет всех рассчитываемых показателей. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Иначе
			#Если ВебКлиент Тогда
				ИзменитьТаблицуВариантовЗаполненияНаСервере();
			#Иначе
				РегламентированнаяОтчетностьКлиентСервер.ИзменитьТаблицуВариантовЗаполнения(ЭтаФорма, НЕ СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
			#КонецЕсли
			ПоказатьСтраницыОтчета(ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
			УстановитьДоступностьОбластей(ЭтаФорма, ТекущийРазделОтчетаСокрНаим);
		КонецЕсли;
	Иначе
		ПоказатьСтраницыОтчета(ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПерерасчетВсехПоказателейЗавершение(РезультатВопроса, ДополнительныеПараметры1) Экспорт
	
	ЗначениеЕдИзм = ДополнительныеПараметры1.ЗначениеЕдИзм;
	ЗначениеЗпт = ДополнительныеПараметры1.ЗначениеЗпт;
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры1.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры1.ТекущийРазделОтчетаСокрНаим;
	флЗначенияИдентичны = ДополнительныеПараметры1.флЗначенияИдентичны;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		#Если ВебКлиент Тогда
			ИзменитьТаблицуВариантовЗаполненияНаСервере();
		#Иначе
			РегламентированнаяОтчетностьКлиентСервер.ИзменитьТаблицуВариантовЗаполнения(ЭтаФорма, НЕ СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
		#КонецЕсли
		РасчетНаКлиенте("", "");
		ПоказатьСтраницыОтчета(ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
	Иначе
		СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Истина;
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтаФорма, ТекущийРазделОтчетаСокрНаим);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтраницыОтчета(ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны)
	
	Если ЗначениеЕдИзм <> СтруктураРеквизитовФормы.ЕдиницаИзмерения
		ИЛИ ЗначениеЗпт <> СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения Тогда
		ПослеСменыЕдИзмеренияИТочности();
	КонецЕсли;
	
	// Управляем видимостью страниц основной панели формы.
	РегламентированнаяОтчетностьКлиент.ПоказатьСтраницыОтчетаНаКлиенте(ЭтаФорма);
	
	Если НЕ флЗначенияИдентичны Тогда
		
		СформироватьДеревоРазделовОтчетаНаКлиенте();
		
		Если НЕ ТекущийРазделОтчетаСокрНаим = Неопределено Тогда
			
			// Пытаемся найти ранее запомненный раздел.
			НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ТекущийРазделОтчетаСокрНаим);
			
			Если НЕ НайденнаяСтрока = Неопределено 
				И НЕ НомерСтраницыРазделаОтчета = Неопределено 
				И НайденнаяСтрока.ПолучитьЭлементы().Количество() > 0 Тогда
				
				НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(НайденнаяСтрока.ПолучитьЭлементы(), "КолонкаНомерСтраницыРазделаОтчета", НомерСтраницыРазделаОтчета);
				
			КонецЕсли;
			
			// В случае успешного поиска, устанавливаем курсор на найденный раздел.
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТаблицуВариантовЗаполненияНаСервере()
	
	РегламентированнаяОтчетностьКлиентСервер.ИзменитьТаблицуВариантовЗаполнения(ЭтаФорма, НЕ СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиНаПечатьЛист(Парам1, ОбщиеРеквизитыРазделов, СтрПоля = Неопределено)
	
	ПрефиксИменМакетов = "ПечатныйБланк2014Кв3_";
	
	СоответствиеРазделовМакетам = Новый Соответствие;
	
	СоответствиеРазделовМакетам.Вставить("Титульный", ПрефиксИменМакетов + "Титульный");
	СоответствиеРазделовМакетам.Вставить("Сведения",  ПрефиксИменМакетов + "Сведения");
	СоответствиеРазделовМакетам.Вставить("Раздел1",   ПрефиксИменМакетов + "Раздел1");
	
	МЧБРаздела = СоответствиеРазделовМакетам[Парам1.ИмяСтраницы];
	
	МакетМЧБ = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(МЧБРаздела);
	МакетМЧБ.ПолеСверху = 5;
	МакетМЧБ.ПолеСправа = 5;
	МакетМЧБ.ПолеСнизу  = 5;
	МакетМЧБ.ПолеСлева  = 5;
	
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьМакетМЧБ(Парам1, МакетМЧБ, ОбщиеРеквизитыРазделов);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(МакетМЧБ);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетМЧБ, СтрПоля, "Макет");
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(ЭтаФорма.Заголовок, Парам1, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакетМЧБ(ПараметрыПечати, МакетМЧБ, ОбщиеРеквизитыРазделов)
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("Имя");
	Показатели.Колонки.Добавить("Значение");
	Показатели.Колонки.Добавить("ЗначениеМЧБ");
	
	Показатели.Индексы.Добавить("Имя");
	
	ИсходныйМакет = ТабличныйДокумент;
	Для Каждого Область Из ИсходныйМакет.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Область.СодержитЗначение = Истина Тогда
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = Область.Имя;
			НовСтр.Значение = Область.Значение;
			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(Область);
		КонецЕсли;
	КонецЦикла;
	
	НайденноеЗначение = Показатели.Найти("ИНН1", "Имя");
	
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	
	ИНН = "";
	Для Ном = 0 По 11 Цикл
		ИНН = ИНН + ОбщиеРеквизитыРазделов.ИНН[Ном];
	КонецЦикла;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН1";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	
	НайденноеЗначение = Показатели.Найти("КПП1", "Имя");
	
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	
	КПП = "";
	Для Ном = 0 По 8 Цикл
		КПП = КПП + ОбщиеРеквизитыРазделов.КПП[Ном];
	КонецЦикла;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП1";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	
	НайденноеЗначение = Показатели.Найти("ДатаПодписи", "Имя");
	
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	
	ДатаПодписиСтр = "";
	Для Ном = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Ном];
	КонецЦикла;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписи";
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	// Особая обработка ФИО на титульном листе.
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		Если ПокПодписант <> Неопределено Тогда
			
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Особая обработка ИНН.
	ИНН = Новый Массив(12);
	Для Инд = 1 По 9 Цикл
		Для Знакоместо = 0 По 11 Цикл
			ИНН[Знакоместо] = Показатели.Найти("ИНН" + Инд + "_" + (Знакоместо + 1), "Имя");
		КонецЦикла;
		Если ИНН[0] = Неопределено ИЛИ ИНН[1] = Неопределено ИЛИ ИНН[10] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыПечати.ИмяСтраницы = "Раздел1" Тогда
		СтрокаСерия1 = Показатели.Найти("П000010018001", "Имя");
		СтрокаСерия2 = Показатели.Найти("П000010018002", "Имя");
		СтрокаНомер  = Показатели.Найти("П000010018003", "Имя");
		
		СерияНомерЗаполнены = ЗначениеЗаполнено(СтрокаСерия1.Значение)
		                  ИЛИ ЗначениеЗаполнено(СтрокаСерия2.Значение)
		                  ИЛИ ЗначениеЗаполнено(СтрокаНомер.Значение);
		Если СерияНомерЗаполнены Тогда
			СтрокаСерия1.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(СтрокаСерия1.Значение, 2);
			СтрокаСерия2.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(СтрокаСерия2.Значение, 2);
			СтрокаНомер.ЗначениеМЧБ  = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(СтрокаНомер.Значение, 6);
		КонецЕсли;
		
	КонецЕсли;
	
	ИндексТочкиПоКорню=Новый Структура;
	Для каждого Область Из МакетМЧБ.Области Цикл
		Если Область.Текст="." Тогда
			ТекАдресЗначенияОбласти = АдресЗначенияОбласти(Область);
			Корень=ТекАдресЗначенияОбласти.Корень;
			ИндексТочкиЧислаНаМЧБ=ТекАдресЗначенияОбласти.ИндексЗнакоместа;
			ИндексТочкиПоКорню.Вставить(Корень,ИндексТочкиЧислаНаМЧБ);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Область Из МакетМЧБ.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			ИмяОбласти = Область.Имя;
			
			Если СтрЧислоВхождений(ИмяОбласти, "НомСтр") > 0
			 ИЛИ СтрЧислоВхождений(ИмяОбласти, "СоставленаНа") > 0 Тогда
				Продолжить;
			КонецЕсли;
					
			РезультатПоиска = Показатели.Найти(ИмяОбласти, "Имя");
			Если РезультатПоиска = Неопределено Тогда
				ТекАдресЗначенияОбласти = АдресЗначенияОбласти(Область);
				ЗначениеВыведено = Ложь;
				Если ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда
					РезультатПоиска = Показатели.Найти(ТекАдресЗначенияОбласти.Корень, "Имя");
					Если РезультатПоиска <> Неопределено Тогда
						Если ТипЗнч(РезультатПоиска.Значение)=Тип("Число") Тогда
							// Разделение числа на 2 части.
							ЦелаяЧасть = Цел(РезультатПоиска.Значение);
							СтрЦелаяЧасть = Формат(Цел(РезультатПоиска.Значение), "ЧГ=0");
							СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),3);
							// Разделение областей показателя на 2 части.
							
							ИндексТочкиЧислаНаМЧБ = Неопределено;
							Если ИндексТочкиПоКорню.Свойство(ТекАдресЗначенияОбласти.Корень,ИндексТочкиЧислаНаМЧБ) = Ложь Тогда
								// На МЧБ нет разделения на целую и дробную части.
								ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ, ТекАдресЗначенияОбласти.ИндексЗнакоместа);
								ЗначениеВыведено = Истина;
							Иначе
								// Определяем какая часть выводится (Целая, дробная или точка).
								Если ТекАдресЗначенияОбласти.ИндексЗнакоместа<ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится целая часть.
									ПрисвоитьЗначениеОбласти(Область, ?(РезультатПоиска.ЗначениеМЧБ = "-","-",СтрЦелаяЧасть), ТекАдресЗначенияОбласти.ИндексЗнакоместа);
									ЗначениеВыведено = Истина;	
								ИначеЕсли ТекАдресЗначенияОбласти.ИндексЗнакоместа > ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится дробная часть.
									ПрисвоитьЗначениеОбласти(Область, СтрДробнаяЧасть, ТекАдресЗначенияОбласти.ИндексЗнакоместа - ИндексТочкиЧислаНаМЧБ);
									ЗначениеВыведено = Истина;
								Иначе
									// Выводится точка.
									// Присваивать ничего не будем, но считаем, что область заполненяется корректно.
									ЗначениеВыведено = Истина;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ, ТекАдресЗначенияОбласти.ИндексЗнакоместа,
								ТипЗнч(РезультатПоиска.Значение) <> Тип("Строка") ИЛИ НЕ ЗначениеЗаполнено(РезультатПоиска.Значение));
							ЗначениеВыведено = Истина;
						КонецЕсли;
					КонецЕсли;
					
					Если НЕ ЗначениеВыведено
						И ПараметрыПечати.ИмяСтраницы = "Раздел1" Тогда
						
						ЗначениеВыведено = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если НЕ ЗначениеВыведено
					  И ИмяОбласти <> "ОпределениеВысотыСтрокиМногострочнойЧасти" Тогда //служебное поле
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Не удалось заполнить область ""%1""!'"), ИмяОбласти);
					Сообщение.Сообщить();
					
				КонецЕсли;
			Иначе
				ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеМЧБ(Область)
	
	ТипЗначения = ТипЗнч(Область.Значение);
	Если ТипЗначения = Тип("Число") Тогда
		ФорматОбласти = Область.Формат;
		СоотвСтрокаФормата = РазобратьСтрокуФормата(ФорматОбласти);
		СоотвСтрокаФормата.Вставить("ЧРД", ".");
		СоотвСтрокаФормата.Вставить("ЧГ", "");
		Результат = Формат(Область.Значение, СобратьСтрокуФормата(СоотвСтрокаФормата));
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		Результат = СокрЛП(Область.Значение);
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		Результат = Формат(Область.Значение, ?(ПустаяСтрока(Область.Формат), "ДФ=ddMMyyyy", Область.Формат));
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		Результат = Формат(Область.Значение, Область.Формат);
	КонецЕсли;
	
	Возврат СокрЛП(Результат);
	
КонецФункции

&НаСервере
Функция АдресЗначенияОбласти(Область)
	
	Имя = Область.Имя;
	КореньИмениОбласти = Неопределено;
	СтрИндексЗнакоместа = "";
	ИндексЗнакоместа = 0;
	ДлинаИмени = СтрДлина(Имя);
	Для ИндексВхождения = 1 По ДлинаИмени Цикл
		СтрИндексЗнакоместа = Сред(Имя, ДлинаИмени - ИндексВхождения + 1);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
			КореньИмениОбласти = Лев(Имя, ДлинаИмени - ИндексВхождения);
			ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Прав(КореньИмениОбласти, 1) = "_" Тогда
		КореньИмениОбласти = Лев(КореньИмениОбласти, СтрДлина(КореньИмениОбласти) - 1);
	КонецЕсли;
		
	Возврат Новый Структура("Корень, ИндексЗнакоместа", КореньИмениОбласти, ИндексЗнакоместа);
	
КонецФункции

&НаСервере
Процедура ПрисвоитьЗначениеОбласти(Область, Знач Значение, ИндексЗнакоместа = 0, ДополнятьСправа_ = Истина)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(Значение) >= ИндексЗнакоместа Тогда
			Значение = Сред(Значение, ИндексЗнакоместа, 1);
		Иначе
			Значение = ?(ДополнятьСправа_, "-", "");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = "-";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(Значение);
	Иначе
		Область.Текст = ВРЕГ(Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РазобратьСтрокуФормата(Знач СтрокаФормата)
	
	ЗначенияПараметров = Новый Соответствие;
	Пока СтрНайти(СтрокаФормата, ";") <> 0 Цикл
		ВхождениеРазделителя = СтрНайти(СтрокаФормата, ";");
		ДоРазделителя = Лев(СтрокаФормата, ВхождениеРазделителя - 1);
		ВхождениеРавно = СтрНайти(ДоРазделителя, "=");
		Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
			ЗначенияПараметров.Вставить(Лев(ДоРазделителя, ВхождениеРавно - 1), Сред(ДоРазделителя, ВхождениеРавно + 1));
		КонецЕсли;
		СтрокаФормата = Сред(СтрокаФормата, ВхождениеРазделителя + 1);
	КонецЦикла;
	ВхождениеРавно = СтрНайти(СтрокаФормата, "=");
	Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
		ЗначенияПараметров.Вставить(Лев(СтрокаФормата, ВхождениеРавно - 1), Сред(СтрокаФормата, ВхождениеРавно + 1));
	КонецЕсли;
	Возврат ЗначенияПараметров;
	
КонецФункции

&НаСервере
Функция СобратьСтрокуФормата(ПараметрыФормата)
	
	СтрокаФормата = "";
	Для Каждого Параметр Из ПараметрыФормата Цикл
		СтрокаФормата = СтрокаФормата + "; " + Параметр.Ключ + "=" + Параметр.Значение;
	КонецЦикла;
	Если НЕ ПустаяСтрока(СтрокаФормата) Тогда
		СтрокаФормата = Сред(СтрокаФормата, 3);
	КонецЕсли;
	Возврат СтрокаФормата;
	
КонецФункции

&НаСервере
Процедура ВывестиРазделВТабличныйДокументНаСервере(ИмяГруппы, СтруктураГруппы) Экспорт
	
	ВывестиРазделВТабличныйДокумент(ЭтаФорма, ИмяГруппы, СтруктураГруппы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиРазделВТабличныйДокументНаКлиенте(ИмяГруппы, СтруктураГруппы) Экспорт
	
	ВывестиРазделВТабличныйДокумент(ЭтаФорма, ИмяГруппы, СтруктураГруппы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВывестиРазделВТабличныйДокумент(Форма, ИмяГруппы, СтруктураГруппы)
	
	Перем ИсходноеКоличествоСтрокГруппы;

	#Если НаКлиенте Тогда
		ТекущаяСтраница = Форма.ОпределитьТабличноеПолеПоИдМногострочногоРазделаНаКлиенте(ИмяГруппы);
	#Иначе
		ТекущаяСтраница = Форма.ОпределитьТабличноеПолеПоИдМногострочногоРазделаНаСервере(ИмяГруппы);
	#КонецЕсли

	// Определим исходное колво строк многострочного раздела,
	// соответствующее бумажной форме отчета.
	Форма.мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, ИсходноеКоличествоСтрокГруппы);

	// Реальное кол-во строк (колво заполненных строк).
	ТекущееКоличествоСтрокГруппы = СтруктураГруппы.Количество();

	ТекТабличноеПолеИмя = "ТабличныйДокумент";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];

	НастройкиМнгЧ = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСвойствоРаздела(Форма, ТекущаяСтраница, "МногострочностьВРазделе").НайтиСтроки(Новый Структура("ИдГруппы", ИмяГруппы))[0];
	ВысотаСтроки = НастройкиМнгЧ.ВысотаСтроки;
	
	// При восстановлении сохраненных данных отчета сравниваем исходное кол-во
	// отображаемых в форме строк многострочного раздела с реальным количеством
	// созданных строк в сохраненном отчете.
	Если ТекущееКоличествоСтрокГруппы > ИсходноеКоличествоСтрокГруппы Тогда
		
		// При превышении реального кол-ва строк над исходным кол-вом (по шаблону),
		// автоматически добавляем необходимое колво строк.
		Форма.ДобавитьНеобходимоеКоличествоДопСтрокНаСервере(ТекТабличноеПоле, ТекТабличноеПолеИмя, ИсходноеКоличествоСтрокГруппы, ТекущееКоличествоСтрокГруппы, ИмяГруппы, СтруктураГруппы, ВысотаСтроки);

		Форма[ТекТабличноеПолеИмя] = ТекТабличноеПоле;
		
	КонецЕсли;
	
	// Выводим значения строк.
	Для Каждого СтрокаТаблицы Из СтруктураГруппы Цикл
		
		НомерСтрокиВТаблице      = СтруктураГруппы.Индекс(СтрокаТаблицы);
		НомерСтрокиВФормеТаблицы = НомерСтрокиВТаблице + 1;
		
		СписокИменКолонокРаздела = Форма.мСтруктураИменаКолонокРазделов[ИмяГруппы];
		
		Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
			
			КолонкаТаблицыИмя = СписокИменКолонокРаздела.Получить(НомерГрафы - 1).Значение;
			
			Если СтруктураГруппы[0].Свойство(КолонкаТаблицыИмя) Тогда
				
				ИмяЯчейки                = КолонкаТаблицыИмя + "_" + НомерСтрокиВФормеТаблицы;
				ОбластьЯчейкиТаблицы     = ТекТабличноеПоле.Области[ИмяЯчейки];
				ЗначениеЯчейки           = СтрокаТаблицы[КолонкаТаблицыИмя];
				Если ОбластьЯчейкиТаблицы.СодержитЗначение = Истина Тогда
					ОбластьЯчейкиТаблицы.Значение = ЗначениеЯчейки;
				Иначе
					// Устанавливаем порядковый номер строки.
					ОбластьЯчейкиТаблицы.Текст = ЗначениеЯчейки;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНеобходимоеКоличествоДопСтрокНаСервере(ТекТабличноеПоле, ТекТабличноеПолеИмя, ИсходноеКоличествоСтрокГруппы, ТекущееКоличествоСтрокГруппы, ИмяГруппы, СтруктураГруппы, ВысотаСтроки) Экспорт
	
	ОбластьДопСтроки = ТекТабличноеПоле.ПолучитьОбласть("МногострочнаяЧасть");
	
	КоординатыОбластей = Новый Структура();
	
	Для Каждого Область Из ТекТабличноеПоле.Области Цикл
		
		Если СтрНайти(Область.Имя, "_") Тогда
			
			КоординатыОбластей.Вставить(Область.Имя, Область.Верх);
			
		КонецЕсли;
		
	КонецЦикла;
	
	МногострочнаяЧастьВерх = ТекТабличноеПоле.Области.МногострочнаяЧасть.Верх;
	
	МногострочнаяЧастьНиз = ТекТабличноеПоле.Области.МногострочнаяЧасть.Низ;
	
	ТекТабличноеПоле.ВставитьОбласть(ОбластьДопСтроки.Область(), ТекТабличноеПоле.Область(МногострочнаяЧастьНиз + 1, ,
		МногострочнаяЧастьНиз + (ТекущееКоличествоСтрокГруппы - 1) * ВысотаСтроки), ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	Для НомНовойСтроки = ИсходноеКоличествоСтрокГруппы По ТекущееКоличествоСтрокГруппы Цикл
		
		Для Каждого Область Из ОбластьДопСтроки.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			
				ОбластьТаблДок = ТекТабличноеПоле.Область(КоординатыОбластей[Область.Имя] + (ТекущееКоличествоСтрокГруппы - НомНовойСтроки) * ВысотаСтроки,
					Область.Лево, КоординатыОбластей[Область.Имя] + (ТекущееКоличествоСтрокГруппы - НомНовойСтроки) * ВысотаСтроки, Область.Право);
				
				Если ОбластьТаблДок.СодержитЗначение Тогда
					ОбластьТаблДок.Очистить();
				КонецЕсли;
				
				ОбластьТаблДок.Имя = Лев(Область.Имя, СтрНайти(Область.Имя, "_")) + Строка(ТекущееКоличествоСтрокГруппы - НомНовойСтроки + 1);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТекТабличноеПоле.Область(ТекТабличноеПоле.Области.МногострочнаяЧасть.Верх, , ТекТабличноеПоле.Области.МногострочнаяЧасть.Низ).Имя = "";
	
	ТекТабличноеПоле.Область(МногострочнаяЧастьВерх, , МногострочнаяЧастьНиз).Имя = "МногострочнаяЧасть";
	
КонецПроцедуры

&НаСервере
Процедура ВывестиРазделВТабличныйДокументСпецНаСервере(Знач НастройкиМнгЧ, ИмяГруппы, Раздел, СтруктураГруппы, мСтруктураКолвоКолонокРазделов) Экспорт
	
	// Реальное кол-во строк (колво заполненных строк).
	ТекущееКоличествоСтрокГруппы = СтруктураГруппы.Количество();
	
	// Режим восстановления многострочных блоков. Из процедуры ВосстановитьСохраненныеДанные.
	НастройкиМнгЧ = ДанныеФормыВЗначение(НастройкиМнгЧ, Тип("ТаблицаЗначений")).Скопировать();
	
	НазвОбласти = НастройкиМнгЧ.Найти(ИмяГруппы, "ИдГруппы").Область;
	
	НастройкиМнгЧ.Колонки.Добавить("НизМногострочнойЧасти");
	НастройкиМнгЧ.Колонки.Добавить("ВерхМногострочнойЧасти");
	
	// Определим координаты всех многострочных блоков, для последующего восстановления.
	Для каждого Зап Из НастройкиМнгЧ Цикл
		КоординатаНиз  = Раздел.Области[Зап.Область].Низ;
		КоординатаВерх = Раздел.Области[Зап.Область].Верх;
		Зап.НизМногострочнойЧасти    = КоординатаНиз;
		Зап.ВерхМногострочнойЧасти   = КоординатаВерх;
		// Координаты текущей области.
		Если Зап.Область = НазвОбласти Тогда
			Низ           = КоординатаНиз;
			Верх          = КоординатаВерх;
		КонецЕсли;
	КонецЦикла;
	
	ВысотаСтроки = НастройкиМнгЧ.Найти(ИмяГруппы, "ИдГруппы").ВысотаСтроки;
	
	// Скопируем верхнюю часть документа, не включая многострочную часть.
	ТаблДок = Раздел.ПолучитьОбласть(1, , Верх - 1);
	// Скопируем подвал, все, что ниже области многострочного блока.
	Подвал = Раздел.ПолучитьОбласть(Низ + 1, , Раздел.ВысотаТаблицы);
	
	Строка = Раздел.ПолучитьОбласть(Верх, , Верх + ВысотаСтроки - 1);
	
	Если ВысотаСтроки > 1 Тогда
		ОбластьОпределениеВысотыСтрокиМногострочнойЧасти=Строка.Области.Найти("ОпределениеВысотыСтрокиМногострочнойЧасти");
		Если ОбластьОпределениеВысотыСтрокиМногострочнойЧасти<>Неопределено Тогда
			ОбластьОпределениеВысотыСтрокиМногострочнойЧасти.Имя = "";
		КонецЕсли;
	КонецЕсли;
	
	Если Строка.Области.Найти(НазвОбласти) <> Неопределено Тогда
		Строка.Области[НазвОбласти].Имя = "";
	КонецЕсли;
	
	// При превышении реального кол-ва строк над исходным кол-вом (по шаблону),
	// автоматически добавляем необходимое колво строк.
	
	Для НомНовойСтроки = 1 По ТекущееКоличествоСтрокГруппы Цикл
		// Переопределим именнованность.
		Строка1 = Строка.ПолучитьОбласть(1, , Строка.ВысотаТаблицы);
		НомСтр = Формат(НомНовойСтроки, "ЧГ=0");
		
		СписокИменКолонокРаздела = мСтруктураИменаКолонокРазделов[ИмяГруппы];
		
		Для НомерГрафы = 1 По мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
			
			КолИмя = СписокИменКолонокРаздела.Получить(НомерГрафы - 1).Значение;
			
			Если СтруктураГруппы[0].Свойство(КолИмя) Тогда
				
				Строка1.Области[КолИмя + "_1"].Имя = КолИмя + "_" + НомСтр;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаполнитьСтрокуДаннымиИзТаблицы(ДанныеФормыВЗначение(
			СтруктураГруппы, Тип("ТаблицаЗначений")), Строка1, СтруктураГруппы[НомНовойСтроки - 1], НомСтр);
		ТаблДок.Вывести(Строка1);
		
	КонецЦикла;
	
	ТаблДок.Вывести(Подвал);
	
	Раздел.Очистить();
	Раздел.Вывести(ТаблДок);
	
	// Восстановим области.
	Для каждого Зап Из НастройкиМнгЧ Цикл
		Раздел.Область("R" + Формат(Зап.НизМногострочнойЧасти, "ЧГ=0") + ":R" + Формат(Зап.ВерхМногострочнойЧасти, "ЧГ=0")).Имя = Зап.Область;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуДаннымиИзТаблицы(ТаблицаРаздела, Строка1, СтрокаТаблицы, НомерНаФорме)
	
	// Заполняем строку.
	Для каждого Колонка Из ТаблицаРаздела.Колонки Цикл
		КолонкаИмя = Колонка.Имя;
		НазвЯчейки = КолонкаИмя + "_" + НомерНаФорме;
		
		ЗначениеПоказателя = СтрокаТаблицы[КолонкаИмя];
		
		Если Строка1.Области[НазвЯчейки].СодержитЗначение = Истина Тогда
			Строка1.Области[НазвЯчейки].Значение = ЗначениеПоказателя;
		Иначе
			Строка1.Области[НазвЯчейки].Текст = ЗначениеПоказателя;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ИзменитьТаблицуПараметровАвтозаполнения(Парам, Лист)
	Перем МассивВариантовЗаполненияСтраниц;
	Перем ТаблицаВариантыЗаполнения;
	Перем ТаблицаСтраницРаздела;
	
	ИмяТекущейСтраницыПанели = Лист;

	Если Не мСтруктураВариантыЗаполнения.Свойство(ИмяТекущейСтраницыПанели, МассивВариантовЗаполненияСтраниц) Тогда
		Возврат;
	КонецЕсли;
	
	МассивВариантовЗаполненияСтраниц = ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяТекущейСтраницыПанели];

	НомерТекущейСтраницы = 1;

	Если мСтруктураМногостраничныхРазделов.Свойство(ИмяТекущейСтраницыПанели, ТаблицаСтраницРаздела) Тогда
		
		ТаблицаСтраницРаздела = ЭтаФорма[ТаблицаСтраницРаздела];
		
		// Раздел является многостраничным, определим активную страницу раздела:
		СтрТаблицаСтраницы = ТаблицаСтраницРаздела.НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина));
		Если СтрТаблицаСтраницы.Количество() > 0 Тогда
			НомерТекущейСтраницы = ТаблицаСтраницРаздела.Индекс(СтрТаблицаСтраницы[0]) + 1;
		КонецЕсли;
	КонецЕсли;

	Если Парам = 1 Тогда // создаем таблицу параметров автозаполнения ячеек добавленного листа

		// При добавлении новой страницы параметры автозаполнения ее ячеек определяем
		// по эталонной модели
		НоваяТаблицаВариантыЗаполнения = РегламентированнаяОтчетностьВызовСервера.ПолучитьТаблицуВариантовЗаполненияНаСервере(ЭтаФорма, ИмяТекущейСтраницыПанели, НЕ СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет, СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ);

		Если НоваяТаблицаВариантыЗаполнения <> Неопределено Тогда
			
			ТаблВариантов = МассивВариантовЗаполненияСтраниц.Добавить();	
			
			Если ТипЗнч(НоваяТаблицаВариантыЗаполнения) = Тип("ДанныеФормыКоллекция") Тогда
				
				КопироватьДанныеФормы(НоваяТаблицаВариантыЗаполнения, ТаблВариантов.ТаблицаВариантовЗаполнения);
				
			Иначе
				
				ЗначениеВДанныеФормы(НоваяТаблицаВариантыЗаполнения, ТаблВариантов.ТаблицаВариантовЗаполнения);
				
			КонецЕсли;
			
		КонецЕсли;

	Иначе // Парам = -1. Удаляем таблицу параметров автозаполнения ячеек удаленного листа

		Если МассивВариантовЗаполненияСтраниц.Количество() > 1 Тогда 
			МассивВариантовЗаполненияСтраниц.Удалить(НомерТекущейСтраницы - 1);
		КонецЕсли;

	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличноеПолеНаСервере(ВыбТабличноеПолеИмя) Экспорт

	ОчиститьТабличноеПоле(ЭтаФорма, ВыбТабличноеПолеИмя);

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТабличноеПолеНаКлиенте(ВыбТабличноеПолеИмя) Экспорт

	ОчиститьТабличноеПоле(ЭтаФорма, ВыбТабличноеПолеИмя);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОчиститьТабличноеПоле(Форма, ВыбТабличноеПолеИмя)
	
	РегламентированнаяОтчетностьКлиентСервер.ОчиститьТабличноеПоле(Форма, ВыбТабличноеПолеИмя);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(ВидПечати, НеИзФормыОтчета = Ложь) Экспорт
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1. Формируется печатная форма...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Печать);
	
	Если СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Истина Тогда // возможны 3 состояния флага
		РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения(ЭтаФорма, ОбработкаКС, Истина);
	КонецЕсли;
	
	Если НЕ ПечатьНаСервере(ВидПечати) Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтаФорма, ВидПечати, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере(ВидПечати)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");

		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ТипЗнч(мДеревоВыбранныхСтраниц) <> Тип("ДанныеФормыДерево") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	СтруктураРеквизитовФормы.мРежимПечати = Истина;
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела, Ложь, Ложь);
	
	сохрТаблДок = ТабличныйДокумент.ПолучитьОбласть();
	
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	
	ВывестиМакетВТаблДокНаСервере("Титульный", 0);
	
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста();
	
	Для Каждого СтрокаУровня1 Из мДеревоВыбранныхСтраниц.ПолучитьЭлементы() Цикл
		
		Если СтрокаУровня1.ВыводНаПечать = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  СтрокаУровня1.Представление);
		СтруктураПараметров.Вставить("ОриентацияЛиста",    СтрокаУровня1.ОриентацияСтраницы);
		СтруктураПараметров.Вставить("ИмяСтраницы",        СтрокаУровня1.ИмяСтраницы);
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтрокаУровня1.ИмяОбластиТабличногоПоля);
		СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
		
		Если НЕ мСтруктураМногостраничныхРазделов.Свойство(СтрокаУровня1.ИмяСтраницы) Тогда
			
			ВывестиМакетВТаблДокНаСервере(СтрокаУровня1.ИмяСтраницы, 0);
			ВывестиНаПечатьЛист(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля);
			
		Иначе
			
			СтруктураПараметров.Вставить("ИмяСтраницыПанели", СтрокаУровня1.ИмяСтраницы);
			ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметров, ОбщиеРеквизитыРазделов);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(сохрТаблДок);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ВремПоля, СтрПоля);
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(ЭтаФорма, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	КопироватьДанныеФормы(мДеревоВыбранныхСтраниц, мДеревоСтраницОтчета);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметровСтраницы, ОбщиеРеквизитыРазделов)
	
	Перем ИмяСтраницы;
	Перем ТаблицаСтраницРаздела;
	
	СтруктураПараметровСтраницы.Свойство("ИмяСтраницыПанели", ИмяСтраницы);
	
	Если Не мСтруктураМногостраничныхРазделов.Свойство(ИмяСтраницы, ТаблицаСтраницРаздела) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСтраницРаздела = ЭтаФорма[ТаблицаСтраницРаздела];
	
	МассивПризнаковАктивности = Новый Массив;
	Для Каждого Страница Из ТаблицаСтраницРаздела Цикл
		ТекущийИндекс = ТаблицаСтраницРаздела.Индекс(Страница);
		МассивПризнаковАктивности.Добавить(ТаблицаСтраницРаздела[ТекущийИндекс].АктивнаяСтраница);
	КонецЦикла;
	
	Для Каждого Страница Из ТаблицаСтраницРаздела Цикл
		ТекущийИндекс = ТаблицаСтраницРаздела.Индекс(Страница);
		ВывестиМакетВТаблДокНаСервере(ИмяСтраницы, ТекущийИндекс + 1);
		ВывестиНаПечатьЛист(СтруктураПараметровСтраницы, ОбщиеРеквизитыРазделов);
	КонецЦикла;
	
	Для Каждого Страница Из ТаблицаСтраницРаздела Цикл
		ТекущийИндекс = ТаблицаСтраницРаздела.Индекс(Страница);
		ТаблицаСтраницРаздела[ТекущийИндекс].АктивнаяСтраница = МассивПризнаковАктивности[ТекущийИндекс];
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста()
	
	МассивИНН            = Новый Массив(12);
	МассивКПП            = Новый Массив(9);
	МассивДатаПодписи    = Новый Массив(8);
	
	ИсходныйМакет = ТабличныйДокумент;
	
	Область = ИсходныйМакет.Области.Найти("ИНН1");
	
	Если НЕ Область = Неопределено Тогда
		
		СтрИНН = Область.Значение;
		
		Если СтрДлина(СтрИНН) = 10 Тогда
			СтрИНН = СтрИНН + "--";
		КонецЕсли;
			
		Для Ном = 1 По СтрДлина(СтрИНН) Цикл
			
			МассивИНН[Ном - 1] = Сред(СтрИНН, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Область = ИсходныйМакет.Области.Найти("КПП1");
	
	Если НЕ Область = Неопределено Тогда
		
		Для Ном = 1 По СтрДлина(Область.Значение) Цикл
			
			МассивКПП[Ном - 1] = Сред(Область.Значение, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Область = ИсходныйМакет.Области.Найти("ДатаПодписи");
	
	Если НЕ Область = Неопределено Тогда
		
		Если ТипЗнч(Область.Значение) = Тип("Строка") Тогда 
			СтрДатаПодписи = Лев(СтрЗаменить(Область.Значение, ".", ""), 8);
		ИначеЕсли ТипЗнч(Область.Значение) = Тип("Дата") Тогда 
			Если ЗначениеЗаполнено(Область.Значение) Тогда 
				СтрДатаПодписи = Лев(СтрЗаменить(Формат(Область.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
			Иначе
				СтрДатаПодписи = "        ";
			КонецЕсли;
		КонецЕсли;
		
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь, ВыполняемоеОповещение = Неопределено) Экспорт
	
	Вариант = СтруктураРеквизитовФормы.ВидДокумента * НомерКорректировки;

	Если СтруктураДанныхТитульный.Количество() = 0 
	 ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		СтруктураДанныхТитульный.Вставить("НалоговыйОрган", ТабличныйДокумент.Области.НалоговыйОрган.Значение);
		СтруктураДанныхТитульный.Вставить("КПП1",           ТабличныйДокумент.Области.КПП1.Значение);
		
	КонецЕсли;
	
	КодИФНС = СтруктураДанныхТитульный.НалоговыйОрган;
	КПП = СтруктураДанныхТитульный.КПП1;
                       
	Если НЕ РегламентированнаяОтчетностьКлиент.ПриЗаписиРегламентированногоОтчетаНаКлиенте(ЭтаФорма, КодИФНС, Автосохранение, Вариант) Тогда
		Возврат;
	КонецЕсли;
	
	ПодобныйОтчетСуществует = Ложь;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Ложь;
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		НаименованиеТекущегоРаздела = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	Иначе
		НаименованиеТекущегоРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	КонецЕсли;
	
	РезультатСохранения = ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаименованиеТекущегоРаздела);
	
	ВидДокументаНомерКорректировкиИзменен = Неопределено;
	
	Если ПодобныйОтчетСуществует И Автосохранение Тогда
		Возврат;
	КонецЕсли;
	
	НуженВопросПередСохранением = (ПодобныйОтчетСуществует ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
	
	Если НуженВопросПередСохранением Тогда
		
		СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП);
		
	Иначе
		
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП)
	
	Если ПодобныйОтчетСуществует Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Сохранить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отчет с видом %1 уже существует.
			|Сохранить отчет с таким же видом?'"), ?(Вариант = 0, """Первичный""", """Корректирующий/" + Вариант + """"));
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросСохранитьОтчетСТакимЖеВидомЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , Кнопки.Получить(1).Значение);
		
	Иначе
		
		СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьОтчетСТакимЖеВидомЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = ДополнительныеПараметры.ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки;
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП)
	
	Если ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидОтчета", Вариант);
		
		ФормаВопроса = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ВопросПриИзмененииВидаДокументаНомераКорректировки", ПараметрыФормы);
		ФормаВопроса.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение,КодИФНС, КПП );
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииВидаДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВопроса.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВопроса.Открыть();
	Иначе
		Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
		РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, Неопределено, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииВидаДокументаЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	Если КодВозврата = КодВозвратаДиалога.Да
		ИЛИ КодВозврата = КодВозвратаДиалога.Нет Тогда
		ВидДокументаНомерКорректировкиИзменен = ?(КодВозврата = КодВозвратаДиалога.Да, Истина, Ложь);
	Иначе
		Возврат;
	КонецЕсли;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
	РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения)
	
	КлючУникальности = СтруктураРеквизитовФормы.мСохраненныйДок;
	
	Если РезультатСохранения Тогда
		
		РегламентированнаяОтчетностьКлиент.ПослеЗаписиРегламентированногоОтчета(ЭтаФорма);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаимТекРаздела)
	
	Если РегламентированнаяОтчетность.БылиИзмененыКлючевыеРеквизитыОтчета(ЭтаФорма, КодИФНС, КПП)
	   И РегламентированнаяОтчетность.СуществуетДокументСАналогичнымиРеквизитами(ЭтаФорма, КодИФНС, КПП) Тогда
		
		ПодобныйОтчетСуществует = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мЗаписываетсяНовыйДокумент
		= (СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено);
	
	Если Вариант <> Неопределено И ((СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено)
		ИЛИ (СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено) ИЛИ (Вариант <> СтруктураРеквизитовФормы.мВариант)) Тогда
		
		Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			
		ИначеЕсли Вариант <> СтруктураРеквизитовФормы.мВариант Тогда
			
			ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Истина;
			
		КонецЕсли;

	КонецЕсли;
	
	Если ПодобныйОтчетСуществует
	 ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
	
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Сохранить(Автосохранение, КодИФНС, КПП, Вариант, , НаимТекРаздела);
	
КонецФункции

&НаСервере
Функция Сохранить(Автосохранение = Ложь, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен = Неопределено, НаимТекРаздела) Экспорт
	
	ДанныеДляРазблокирования = Неопределено;
	
	Если НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы Тогда
			ДанныеДляРазблокирования = Новый Структура("Ключ,ИдФормы",
			СтруктураРеквизитовФормы.мСохраненныйДок, ЭтаФорма.УникальныйИдентификатор);
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.ПолучитьОбъект();
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ПриЗаписиРегламентированногоОтчетаНаСервере(ЭтаФорма, КодИФНС, Автосохранение, Вариант, ВидДокументаНомерКорректировкиИзменен, СтруктураРеквизитовФормы.мСохраненныйДок) Тогда
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецЕсли;

	// Установим текущие значения реквизитов документа.
	СтруктураРеквизитовФормы.мСохраненныйДок.ИсточникОтчета = Метаданные.Отчеты[ИмяОтчета(ЭтаФорма.ИмяФормы)].Имя;
	СтруктураРеквизитовФормы.мСохраненныйДок.НаименованиеОтчета = Метаданные.Отчеты[ИмяОтчета(ЭтаФорма.ИмяФормы)].ОсновнаяФорма.Синоним;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			
		СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала    = ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение;
		СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания = ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение;	
		
	Иначе
		
		СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала    = СтруктураДанныхТитульный.ДатаСоставленияРасчета;
		СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания = СтруктураДанныхТитульный.ДатаСоставленияРасчета;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мСохраненныйДок.Периодичность            = СтруктураРеквизитовФормы.мПериодичность;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВыбраннаяФорма           = СтруктураРеквизитовФормы.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок.Организация              = СтруктураРеквизитовФормы.Организация;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи              = ДатаПодписи;
	СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий              = Комментарий;
	СтруктураРеквизитовФормы.мСохраненныйДок.КодНалоговогоОргана      = КодИФНС;
	СтруктураРеквизитовФормы.мСохраненныйДок.КПП        			  = КПП;
	СтруктураРеквизитовФормы.мСохраненныйДок.Вид                      = Вариант;
	СтруктураРеквизитовФормы.мСохраненныйДок.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(СтруктураРеквизитовФормы.мСохраненныйДок.Вид);
	СтруктураРеквизитовФормы.мВариант                                 = Вариант;

	СтруктураРеквизитовФормы.мСохраненныйДок.ФорматВыгрузки = "Автоматически";
	
	СохранитьДанныеРаздела(НаимТекРаздела, Ложь, Ложь);
	
	ЗаполнитьПустыеСтруктурыДанных();
	
	// формируем данные редактируемых ячеек таблицы.
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчетаНаСервере(ПоказателиОтчета);
	
	// формируем список сохранения.
	СписокСохранения = Новый Структура();
	
	// Вставляем данные редактируемых ячеек таблицы.
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого ЭлементСтруктуры Из мСтруктураМногострочныхРазделов Цикл
		
		ДанныеМногострочныхРазделов.Вставить(
			ЭлементСтруктуры.Ключ, ДанныеФормыВЗначение(ЭтаФорма[ЭлементСтруктуры.Значение], Тип("ТаблицаЗначений")));
		
	КонецЦикла;
	
	// Вставляем данные многострочных разделов.
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	МассивТиповНеопределено = Новый Массив; 
	МассивТиповНеопределено.Добавить(Тип("Неопределено"));
	ОписаниеТиповНеопределено = Новый ОписаниеТипов(МассивТиповНеопределено);
	
	Для Каждого ЭлементСтруктуры Из мСтруктураМногостраничныхРазделов Цикл
		
		ДанныеМногостраничныхРазделов.Вставить(ЭлементСтруктуры.Ключ, ДанныеФормыВЗначение(ЭтаФорма[ЭлементСтруктуры.Значение], Тип("ТаблицаЗначений")));
		
		ТаблЗнач = Неопределено;
		
		Если ДанныеМногостраничныхРазделов.Свойство(ЭлементСтруктуры.Ключ, ТаблЗнач) Тогда
			
			Если НЕ ТаблЗнач.Колонки.Найти("Данные") = Неопределено Тогда
				
				ТаблЗнач.Колонки.Удалить("Данные");
				ТаблЗнач.Колонки.Добавить("Данные", ОписаниеТиповНеопределено);
				
				Ном = 0;
				
				Для Каждого СтрокаТаблЗнач Из ТаблЗнач Цикл
					
					СтрокаТаблЗнач.Данные = ЭтаФорма[ЭлементСтруктуры.Значение][Ном].Данные[0].Значение;
					
					Ном = Ном + 1;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если НЕ ТаблЗнач.Колонки.Найти("ДанныеДопСтрок") = Неопределено Тогда
				
				ТаблЗнач.Колонки.Удалить("ДанныеДопСтрок");
				ТаблЗнач.Колонки.Добавить("ДанныеДопСтрок", ОписаниеТиповНеопределено);
				
				Ном = 0;
				
				Для Каждого СтрокаТаблЗнач Из ТаблЗнач Цикл
					
					Если (ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок.Количество() > 0)
					   И (ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела") Тогда
						
						СтрокаТаблЗнач.ДанныеДопСтрок = ДанныеФормыВЗначение(
							ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок[0].Значение, Тип("ТаблицаЗначений"));
						
						Ном = Ном + 1;
						
						Продолжить;
						
					КонецЕсли;
					
					СтруктураДанныхДопСтрок = Новый Структура;
					
					Для Каждого ЭлСтруктуры Из ЭтаФорма[ЭлементСтруктуры.Значение][Ном].ДанныеДопСтрок Цикл
						
						СтруктураДанныхДопСтрок.Вставить(ДанныеФормыВЗначение(ЭлСтруктуры.Значение, Тип("ТаблицаЗначений")));
						
					КонецЦикла;
					
					СтрокаТаблЗнач.ДанныеДопСтрок = СтруктураДанныхДопСтрок;
			
					Ном = Ном + 1;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Вставляем данные многостраничных разделов.
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	ДанныеВариантовАвтоЗаполнения = Новый Структура;
	
	Для Каждого ЭлементСтруктуры Из мСтруктураВариантыЗаполнения Цикл
		
		МассивТаблЗнач = Новый Массив;
		
		ДанныеВариантовАвтоЗаполнения.Вставить(ЭлементСтруктуры.Ключ, МассивТаблЗнач);
		
		Для Каждого ЭлементМассива Из ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ] Цикл
			
			МассивТаблЗнач.Добавить(ДанныеФормыВЗначение(ЭлементМассива.ТаблицаВариантовЗаполнения, Тип("ТаблицаЗначений")));
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Вставляем данные вариантов автозаполнения ячеек.
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);

	// Вставляем версию формы.
	СписокСохранения.Вставить("ВерсияФормы", СтруктураРеквизитовФормы.мВерсияФормы);
	
	// Вставляем флажок пересчета страниц.
	СписокСохранения.Вставить("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	
	// Вставляем флажок отключения выбора из справочника.
	СписокСохранения.Вставить("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	
	// Вставляем флажок отключения авторасчета.
	СписокСохранения.Вставить("Автозаполнение", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);

	// Вставляем флажок разрешения печати без штрихкода.
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	
	ХранилищеДанных = Новый ХранилищеЗначения(СписокСохранения);
	СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета = ХранилищеДанных;

	// Записываем документ, хранящий данные отчета.
	Попытка
		СтруктураРеквизитовФормы.мСохраненныйДок.Записать();
		РегламентированнаяОтчетность.СохранитьСтатусОтправкиРеглОтчета(ЭтаФорма);
	Исключение
		Если НЕ Автосохранение Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
			Сообщение.Сообщить();
			
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецПопытки;
		
	СохранитьДеревоСтраницОтчета(СтруктураРеквизитовФормы.мСохраненныйДок);

	Модифицированность = Ложь;
	
	СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
	
	Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы
       И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
				   
    	ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);

    КонецЕсли;
	
	Если ДанныеДляРазблокирования <> Неопределено Тогда
		РазблокироватьДанныеДляРедактирования(ДанныеДляРазблокирования.Ключ, ДанныеДляРазблокирования.ИдФормы);
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаСервере
Процедура ЗаполнитьПоказателиОтчетаНаСервере(ПоказателиОтчета)
	
	Префикс = "ПолеТабличногоДокумента";
	
	Для Каждого Раздел Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл
			
		Если НЕ Раздел.МногостраничностьВРазделе Тогда
			ПоказателиОтчета.Вставить(Префикс + Раздел.ИмяСтраницы, ЭтаФорма["СтруктураДанных" + Раздел.ИмяСтраницы]);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПустыеСтруктурыДанных()
	
	СохрТабличныйДокумент = Новый ТабличныйДокумент;
	
	СохрТабличныйДокумент.Вывести(ТабличныйДокумент);
	
	Для Каждого Раздел Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл
		
		Если НЕ Раздел.МногостраничностьВРазделе
			И (ЭтаФорма["СтруктураДанных" + Раздел.ИмяСтраницы].Количество() = 0) Тогда
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(
				Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + Раздел.ИмяСтраницы));
			
			СохранитьДанныеРаздела(Раздел.ИмяСтраницы, Ложь);
			
		ИначеЕсли Раздел.МногостраничностьВРазделе
			И (ЭтаФорма[мСтруктураМногостраничныхРазделов[Раздел.ИмяСтраницы]][0].Данные.Количество() = 0) Тогда
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(
				Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + Раздел.ИмяСтраницы));
			
			ЗаполнитьПоказателиЗначениямиПоУмолчанию(Раздел.ИмяСтраницы);
			
			СохранитьДанныеРаздела(Раздел.ИмяСтраницы, Ложь);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДеревоСтраницОтчета(Знач мСохраненныйДок)
	
	Если мСохраненныйДок <> Неопределено Тогда
		
		Если ТипЗнч(мСохраненныйДок) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			мСохраненныйДок = мСохраненныйДок.ПолучитьОбъект();
		КонецЕсли;
		
		Если Не мСохраненныйДок.ЭтоНовый() Тогда
			// Сохраняем выбранные листы для печати в хранилище.
			ХранилищеДанных = Новый ХранилищеЗначения(РеквизитФормыВЗначение("мДеревоСтраницОтчета"));
			мСохраненныйДок.ДеревоНастройкиСтраниц = ХранилищеДанных;
			Попытка
				мСохраненныйДок.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьСохраненныеДанные()
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариановАвтоЗаполнения;
	Перем ПоказателиОтчета;
	Перем Автозаполнение;
	Перем ТаблицаМногостраничногоДокумента;
	
	// В случае, если формы была скопирована по F9, то проверим, не изменилась ли организация.
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация) Тогда
		СтруктураРеквизитовФормы.Организация = СтруктураРеквизитовФормы.мСохраненныйДок.Организация;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения;
	ДатаПодписи = СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи;
	Комментарий	= СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий;
	
	// Восстанавливаем сохраненные данные отчета.
	СписокСохранения = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
	
	// Список листов, выводимых на печать.
	ДеревоНастройкиСтраниц = СтруктураРеквизитовФормы.мСохраненныйДок.ДеревоНастройкиСтраниц.Получить();
	ЗначениеВРеквизитФормы(ДеревоНастройкиСтраниц.Скопировать(), "мДеревоСтраницОтчета");
	
	// Восстанавливаем сохраненные данные многострочных разделов.
	Если СписокСохранения.Свойство( "ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		
		Для Каждого ЭлементСтруктуры Из ДанныеМногострочныхРазделов Цикл
			
			НайденноеЗначение = Неопределено;
			
			мСтруктураМногострочныхРазделов.Свойство(ЭлементСтруктуры.Ключ, НайденноеЗначение);
			
			Если НЕ НайденноеЗначение = Неопределено Тогда
				
				ЗначениеВДанныеФормы(ЭлементСтруктуры.Значение, ЭтаФорма[НайденноеЗначение])
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Восстанавливаем сохраненные данные вариантов автозаполнения ячеек.
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариановАвтоЗаполнения) Тогда
		
		Если НЕ ДанныеВариановАвтоЗаполнения = Неопределено Тогда
			
			мСтруктураВариантыЗаполнения.Очистить();
			
			Для Каждого ЭлементСтруктуры Из ДанныеВариановАвтоЗаполнения Цикл
				
				мСтруктураВариантыЗаполнения.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Ключ);
				
				ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ].Очистить();
				
				Для Каждого ЭлементМассива Из ЭлементСтруктуры.Значение Цикл
					
					ТаблВарЗаполнения = ЭтаФорма["ТаблицаВариантыЗаполнения" + ЭлементСтруктуры.Ключ].Добавить().ТаблицаВариантовЗаполнения;
					
					ЗначениеВДанныеФормы(ЭлементМассива, ТаблВарЗаполнения);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Восстановим сохраненные данные редактируемых ячеек.
	СписокСохранения.Свойство( "ПоказателиОтчета", ПоказателиОтчета );
	
	// Восстанавливаем сохраненные данные многостраничных разделов.
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		
		Для Каждого ЭлементСтруктуры Из ДанныеМногостраничныхРазделов Цикл
			
			НайденноеЗначение = Неопределено;
			
			мСтруктураМногостраничныхРазделов.Свойство(ЭлементСтруктуры.Ключ, НайденноеЗначение);
			
			Если НЕ НайденноеЗначение = Неопределено Тогда
				
				НайденноеЗначение = ЭтаФорма[НайденноеЗначение];
				
				// Учет разнизы между версиями 8.2 и 8.3 в организации хранения данных,
				// необходимый для перехода с версии 8.2 на 8.3.
				Если ЭлементСтруктуры.Значение.Колонки.Найти("ДанныеДопСтрок") = Неопределено Тогда
					ЭлементСтруктуры.Значение.Колонки.Добавить("ДанныеДопСтрок");
				КонецЕсли;
				
				ЗначениеВДанныеФормы(ЭлементСтруктуры.Значение, НайденноеЗначение);
				
				Если НайденноеЗначение[0].Свойство("Данные") Тогда
					
					Для Каждого СтрокаТаблЗнач Из НайденноеЗначение Цикл
						
						Если ТипЗнч(СтрокаТаблЗнач.Данные) = Тип("СписокЗначений") Тогда
							
							СтрокаТаблЗнач.Данные.Очистить();
							СтрокаТаблЗнач.Данные.Добавить(ЭлементСтруктуры.Значение[НайденноеЗначение.Индекс(СтрокаТаблЗнач)].Данные);
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				Если НайденноеЗначение[0].Свойство("ДанныеДопСтрок") Тогда
					
					Ном = 0;
					
					Для Каждого СтрокаТаблЗнач Из ЭлементСтруктуры.Значение Цикл
						
						Если ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("Структура") Тогда
							
							Для Каждого ЭлСтруктуры Из СтрокаТаблЗнач.ДанныеДопСтрок Цикл
								
								ТаблЗнач = ЭлСтруктуры.Значение;
								
								ЭлСтруктуры.Значение = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(
									ЭлементСтруктуры.Ключ)].Добавить().Таблица;
								
								ЗначениеВДанныеФормы(ТаблЗнач, ЭлСтруктуры.Значение);
								
								НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(ЭлСтруктуры.Значение);
								
							КонецЦикла;
							
						ИначеЕсли ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("ТаблицаЗначений") Тогда
							
							СтрокаТаблЗначДанныеДопСтрок = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(
								ЭлементСтруктуры.Ключ)].Добавить().Таблица;
							
							ЗначениеВДанныеФормы(СтрокаТаблЗнач.ДанныеДопСтрок, СтрокаТаблЗначДанныеДопСтрок);
							
							НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(СтрокаТаблЗначДанныеДопСтрок, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
							
						КонецЕсли;
						
						Ном = Ном + 1;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого Раздел Из мСтруктураМногостраничныхРазделов Цикл
		Для Каждого Страница Из ЭтаФорма[Раздел.Значение] Цикл
			Страница.АктивнаяСтраница = Ложь;
		КонецЦикла;
	КонецЦикла;
	
	// Восстанавливаем флажок подсчета страниц.
	СписокСохранения.Свойство("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	
	СписокСохранения.Свойство("ФлПроверятьСоотношенияПриПечатиИВыгрузки", СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = ?(СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Неопределено, Ложь, СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	
	СписокСохранения.Свойство("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	Если СтруктураРеквизитовФормы.мАвтоВыборКодов = Неопределено Тогда
		СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	КонецЕсли;
	
	СписокСохранения.Свойство("Автозаполнение", Автозаполнение);
	СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Автозаполнение;
	
	Если НЕ СписокСохранения.Свойство("ПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена) Тогда
		СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена = Ложь;
	КонецЕсли;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	Префикс = "ПолеТабличногоДокумента";
	
	Для Каждого Раздел Из мСвойстваРазделовДекларации.ПолучитьЭлементы() Цикл	
		
		Если НЕ Раздел.МногостраничностьВРазделе Тогда
			ЭтаФорма["СтруктураДанных" + Раздел.ИмяСтраницы] = ПоказателиОтчета[Префикс + Раздел.ИмяСтраницы];
		КонецЕсли;
		
	КонецЦикла;
	
	ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразца(ПоказателиОтчета);
	
	ИмяТекРаздела = "Титульный";
	
	Для Каждого ЭлСтруктуры Из ЭтаФорма["СтруктураДанных" + ИмяТекРаздела] Цикл
		Попытка
			ТабличныйДокумент.Области[ЭлСтруктуры.Ключ].Значение = ЭлСтруктуры.Значение;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	РегламентированнаяОтчетность.ОперацииПриВосстановленииРегламентированногоОтчета(ЭтаФорма);
	
	КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразца(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		Если ИмяПоказателя = "ИНН1_1" Тогда
			СтруктураДанныхТитульный.Вставить("ИНН1");
			Для Ном = 1 По 12 Цикл
				СтруктураДанныхТитульный.ИНН1 = СокрЛП(СтруктураДанныхТитульный.ИНН1) + ПоказателиТаблПоле["ИНН1_" + Ном];
				СтруктураДанныхТитульный.Удалить("ИНН1_" + Ном);
			КонецЦикла;
			Если Лев(СтруктураДанныхТитульный.ИНН1, 2) = "00" Тогда
				СтруктураДанныхТитульный.ИНН1 = Сред(СтруктураДанныхТитульный.ИНН1, 3);
			КонецЕсли;
			СтруктураДанныхТитульный.ИНН1 = СтрЗаменить(СтруктураДанныхТитульный.ИНН1, "-", "");
		ИначеЕсли ИмяПоказателя = "КПП1_1" Тогда
			СтруктураДанныхТитульный.Вставить("КПП1");
			Для Ном = 1 По 9 Цикл
				СтруктураДанныхТитульный.КПП1 = СокрЛП(СтруктураДанныхТитульный.КПП1) + ПоказателиТаблПоле["КПП1_" + Ном];
				СтруктураДанныхТитульный.Удалить("КПП1_" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НалоговыйОрган1" Тогда
			СтруктураДанныхТитульный.Вставить("НалоговыйОрган");
			Для Ном = 1 По 4 Цикл
				СтруктураДанныхТитульный.НалоговыйОрган = СокрЛП(СтруктураДанныхТитульный.НалоговыйОрган) + ПоказателиТаблПоле["НалоговыйОрган" + Ном];
				СтруктураДанныхТитульный.Удалить("НалоговыйОрган" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			СтруктураДанныхТитульный.Вставить("НомерКорректировки");
			Для Ном = 1 По 3 Цикл
				НомерКорр = СокрЛП(ПоказателиТаблПоле["НомерКорректировки" + Ном]);
				Если СтрНайти("0123456789", НомерКорр) > 0 Тогда
					СтруктураДанныхТитульный.НомерКорректировки = СокрЛП(СтруктураДанныхТитульный.НомерКорректировки) + НомерКорр;
				КонецЕсли; 
				СтруктураДанныхТитульный.Удалить("НомерКорректировки" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ПоМесту1" Тогда
			СтруктураДанныхТитульный.Вставить("ПоМесту");
			Для Ном = 1 По 3 Цикл
				СтруктураДанныхТитульный.ПоМесту = СокрЛП(СтруктураДанныхТитульный.ПоМесту) + ПоказателиТаблПоле["ПоМесту" + Ном];
				СтруктураДанныхТитульный.Удалить("ПоМесту" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			СтруктураДанныхТитульный.Вставить("Прил");
			Для Ном = 1 По 3 Цикл
				СтруктураДанныхТитульный.Прил = СокрЛП(СтруктураДанныхТитульный.Прил) + ПоказателиТаблПоле["Прил" + Ном];
				СтруктураДанныхТитульный.Удалить("Прил" + Ном);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьДатуВЯчейкахНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета()
	
	СтруктураЗависимыхЯчеекДляАвторасчета = Новый Структура;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруИменКолонокМногострочныхРазделов()
	
	Для каждого ЭлементСтруктуры Из мСтруктураМногострочныхРазделов Цикл
		
		СписокИменРаздела = мСтруктураИменаКолонокРазделов[ЭлементСтруктуры.Ключ];
		ТаблицаРаздела = ДанныеФормыВЗначение(ЭтаФорма[ЭлементСтруктуры.Значение], Тип("ТаблицаЗначений"));
		
		СписокИменРаздела.Очистить();
		
		Для каждого КолонкаТаблицы Из ТаблицаРаздела.Колонки Цикл
			СписокИменРаздела.Добавить(КолонкаТаблицы.Имя);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура Инициализация(БезОткрытияФормы = Ложь) Экспорт
	
	Перем ИсходноеКоличествоСтрокГруппы;
	
	СтруктураРеквизитовФормы.мБезОткрытияФормы = БезОткрытияФормы;
	
	ЗаполнитьНачальныеНастройки();
	
	ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета();
	
	ЗаполнитьСтруктуруИменКолонокМногострочныхРазделов();
	
	ФормироватьСтруктуруСтраницОтчета();
	
	ФормироватьСтруктуруСвойствСтраниц();
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
	СтруктураРеквизитовФормы.ВидДокумента = 0;
	НомерКорректировки = 1;
	
	Если НЕ БезОткрытияФормы Тогда
		
		СформироватьСпискиВыбора();
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		
		ЗаполнитьЗначенияВНовомЭкземпляреОтчета();
		
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			
			// Документ скопирован.
			ВосстановитьСохраненныеДанные();
			
		Иначе
			
			Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы Тогда
				СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Ложь;
			КонецЕсли;
			
			СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;
			
			ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение = ДатаПодписи;
			
			КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
			
		КонецЕсли;
		
		Модифицированность = Истина;
		
	Иначе
		
		// При открытии или при копировании сохраненного
		// отчета восстанавливаем сохраненные данные.
		ВосстановитьСохраненныеДанные();
		
		Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма) Тогда
			
			СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено;
			
			ДатаПодписи	= Параметры.ДатаПодписи; 
			
			ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение = ДатаПодписи;
						
		КонецЕсли;
		
		Если НЕ БезОткрытияФормы
           И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
				   
        	ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);

        КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьПустыеСтруктурыДанных();
	
	ПоказатьПериод();
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено
		ИЛИ ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма) Тогда
		
		ЗаполнитьСведенияОбОрганизацииНаСервере();
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.НаимОрганизации = СтруктураРеквизитовФормы.Организация.Наименование;
	
	Если НЕ БезОткрытияФормы Тогда
		РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтаФорма);
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ИсходныйКодПоМесту = ТабличныйДокумент.Области.ПоМесту.Значение;
	
	НомерКорректировки = НомерКорректировки * СтруктураРеквизитовФормы.ВидДокумента;
	ТабличныйДокумент.Области.НомерКорректировки.Значение = НомерКорректировки;
	ТабличныйДокумент.Области.ДатаПодписи.Значение = ДатаПодписи;
	мСкопированаФорма = Неопределено;
	Параметры.Свойство("мСкопированаФорма", мСкопированаФорма);
	Если ЗначениеЗаполнено(мСкопированаФорма) Тогда 
		Модифицированность = Истина;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
	УстановитьФорматВыводаНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	УстановитьДоступностьОбластей(ЭтаФорма, "Титульный");
	
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтаФорма);
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
	СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета  = ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение;
	СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета = ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияВНовомЭкземпляреОтчета()
	
	ЭтоПБОЮЛ = Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация);
	Если ЭтоПБОЮЛ Тогда
		ТабличныйДокумент.Области["ПоМесту"].Значение = "120";
	Иначе
		ТабличныйДокумент.Области["ПоМесту"].Значение = "210";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФормироватьСтруктуруСтраницОтчета() Экспорт
	
	// Дерево содержит коллекцию страниц отчета.
	// В колонках дерева хранятся следующие данные:
	//    - представление листа;
	//    - имя страницы основной панели формы, содержащей выводимый на печать лист;
	//    - имя поля табличного документа;
	//    - имя области ячеек табличного документа (используется в случае вывода
	//      на печать отдельных страниц титульного листа);
	//    - ориентация страницы при печати;
	//    - число, метка вывода страницы на печать;
	//    - число, метка показа страницы на основной панели формы;
	//    - число, метка выгрузки данных страницы в ИМНС.
	//
	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Сведения";
	СтрокаУровня1.Представление            = "Сведения";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 0;
	СтрокаУровня1.ПоказатьСтраницу         = 0;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Раздел1";
	СтрокаУровня1.Представление            = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	МакетСоставаПоказателей = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(
		СтруктураРеквизитовФормы.мСоставПоказателей);
	
	Для Инд = 0 По МакетСоставаПоказателей.Области.Количество() - 1 Цикл
		
		ТекОбласть    = МакетСоставаПоказателей.Области[Инд];
		ИмяСтраницы   = ТекОбласть.Имя;
		
		ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы].Добавить();
		
		// Таблица значений содержит информацию о вариантах заполнения показателя отчета.
		// В колонках таблицы значений отображается следующая информация:
		//   - имя ячейки (код показателя);
		//   - вариант заполнения ячейки;
		//   - вычисленное по данным ИБ значение ячейки;
		//   - величина автокорректировки значения ячейки;
		//   - примечание к ячейке.
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			// Перебираем строки макета.
			// Код показателя (по составу показателей) определяется по первой колонке макета.
			КодПоказателя = СокрП(МакетСоставаПоказателей.Область(Ном, 1).Текст);
			ИмяПоказателя = КодПоказателя;
			
			Если КодПоказателя = "===" Тогда         // признак конечной строки
				Прервать;
			КонецЕсли;
			
			Если Лев(КодПоказателя, 2) = "//" Тогда  // пропускаем комментарии
				Продолжить;
			КонецЕсли;
			
			// Код показателя по форме отчете (имя ячейки в полях табличного документа формы).
			КодПоказателяПоФорме = СокрЛП(МакетСоставаПоказателей.Область(Ном, 2).Текст);
			// Признак многострочности определяется по третьей колонке макета.
			ПризнМногострочность = СокрЛП(МакетСоставаПоказателей.Область(Ном, 3).Текст);
			// По четвертой колонке определяется тип данных реквизита.
			ТипДанныхРеквизита   = СокрЛП(МакетСоставаПоказателей.Область(Ном, 4).Текст);
			// По колонке 5 определяется исходное количество строк многострочного раздела.
			стрКолСтрокИсходный  = СокрЛП(МакетСоставаПоказателей.Область(Ном, 5).Текст);
			// Вариант заполнения ячейки определяется по колонке 6 макета.
			стрВариантЗаполнения = РегламентированнаяОтчетность.ПолучитьВариантЗаполненияПоказателяРегОтчета(МакетСоставаПоказателей, Ном);
			// Код показателя из структуры, берется из колонки 9.
			КодПоказателяПоСтруктуре = СокрЛП(МакетСоставаПоказателей.Область(Ном, 9).Текст);
			
			чКолСтрокИсходный  = ? (ПустаяСтрока(стрКолСтрокИсходный),  0, Число(стрКолСтрокИсходный));
			чВариантЗаполнения = ? (ПустаяСтрока(стрВариантЗаполнения), 0, Число(стрВариантЗаполнения));
			
			// Формируем таблицу значений, содержащей состав показателей отчета.
			НоваяСтрока = мТаблицаСоставПоказателей.Добавить();
			НоваяСтрока.ИмяПоляТаблДокумента   = ИмяСтраницы;
			НоваяСтрока.КодПоказателяПоСоставу = КодПоказателя;
			НоваяСтрока.КодПоказателяПоФорме   = КодПоказателяПоФорме;
			НоваяСтрока.ПризнМногострочности   = ПризнМногострочность;
			НоваяСтрока.ТипДанныхПоказателя    = ТипДанныхРеквизита;
			НоваяСтрока.КодПоказателяПоСтруктуре = КодПоказателяпоСтруктуре;
			
			Если чВариантЗаполнения <> 0 Тогда
				// Если в колонке 6 задан вариант заполнения показателя,
				// то его значение может определяться по данным ИБ.
				// Дополняем таблицу значений вариантов заполнения
				НоваяСтрока = ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы][0].ТаблицаВариантовЗаполнения.Добавить();
				НоваяСтрока.КодПоказателя      = ? (Не ПустаяСтрока(КодПоказателяПоФорме), КодПоказателяПоФорме, КодПоказателя);
				НоваяСтрока.ВариантЗаполнения  = чВариантЗаполнения;
				НоваяСтрока.КодПоказателяПоСтруктуре  = КодПоказателяПоСтруктуре;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЭтаФорма["ТаблицаВариантыЗаполнения" + ИмяСтраницы][0].ТаблицаВариантовЗаполнения.Количество() > 0 Тогда
			// Имеются автоматически заполняемые ячейки.
			// Создаем структуру, содержащей варианты заполнения показателей отчета.
			// В качестве ключа используется имя страницы основной панели формы, содержащей
			//   табличный документ с автоматически заполняемыми показателями.
			// В качестве значения принимаем Массив из таблицы значений - вариантов заполнения
			//   показателей по каждой странице многостраничного раздела.
			мСтруктураВариантыЗаполнения.Вставить(ИмяСтраницы, ИмяСтраницы);
			мСтруктураВариантыЗаполненияЭталон.Вставить(ИмяСтраницы, ИмяСтраницы);
		Конецесли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСпискиВыбора()
	
	МакетСоставаПоказателей = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет("СпискиВыбора2014Кв3");
	
	КоллекцияСписковВыбора = Новый Соответствие;
	Для Каждого Область Из МакетСоставаПоказателей.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			ВерхОбласти = Область.Верх;
			НизОбласти = Область.Низ;
			ТаблСписка = Новый ТаблицаЗначений;
			ТаблСписка.Колонки.Добавить("Код",,, МакетСоставаПоказателей.Область(ВерхОбласти, 1, ВерхОбласти, 1).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("Название",,, МакетСоставаПоказателей.Область(ВерхОбласти, 2, ВерхОбласти, 2).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("РезультатПроверки",,, 0);
			Для НомСтр = ВерхОбласти По НизОбласти Цикл
				КодПоказателя = СокрП(МакетСоставаПоказателей.Область(НомСтр, 1).Текст);
				Если КодПоказателя <> "###" Тогда
					НовСтрока = ТаблСписка.Добавить();
					НовСтрока.Код = КодПоказателя;
					НовСтрока.Название = СокрП(МакетСоставаПоказателей.Область(НомСтр, 2).Текст);
					НовСтрока.РезультатПроверки = СокрП(МакетСоставаПоказателей.Область(НомСтр, 3).Текст);
				КонецЕсли;
			КонецЦикла;
			КоллекцияСписковВыбора.Вставить(Область.Имя, ТаблСписка);
		КонецЕсли;
	КонецЦикла;
	
	СвойстваПоказателей.Очистить();
	
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "ПоМесту", 3, ,
		"Выбор кода представления по месту нахождения (учета)", КоллекцияСписковВыбора["КодыПоМесту"]);
		
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "ПрПодп", 1, ,
		"Выбор типа подписанта", КоллекцияСписковВыбора["ТипыПодписантов"]);
	
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "КодВидаДокумента", 2, ,
		"Выбор кода вида документа", КоллекцияСписковВыбора["КодыВидовДокументов"]);
		
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010001001", 20, ,
		"Выбор КБК", КоллекцияСписковВыбора["КодыБюджетнойКлассификации_Раздел1"]);
	
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010004001", 2, ,
		"Выбор вида транспортного средства", КоллекцияСписковВыбора["КодыВидовТС"]);
		
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010009001", 3, ,
		"Выбор категории транспортного средства", КоллекцияСписковВыбора["КодыКатегорийТС"]);
		
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010011001", 1, ,
		"Выбор типа двигателя", КоллекцияСписковВыбора["КодыТиповДвигателей"]);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказатель(Элемент, Область, КодПоказателя, Знач ЭтоСумма, Знач ТекстВыбора, ТаблицаВыбора, СтандартнаяОбработка, КолонкаПоиска = "Код", ИсходныйКодПоМесту) Экспорт
	
	Если ТаблицаВыбора = Неопределено ИЛИ СтруктураРеквизитовФормы.мАвтоВыборКодов Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Область.Имя = КодПоказателя ИЛИ РегламентированнаяОтчетностьКлиентСервер.ПоказательВходитВМногострочнуюЧасть(ЭтаФорма, КодПоказателя) > 0 Тогда
		ИсходноеЗначение = ?(ТипЗнч(Область.Значение) = Тип("Строка"), СокрЛП(Область.Значение), Область.Значение);
	Иначе
		Разделитель = ?(Лев(Область.Имя, СтрДлина(КодПоказателя) + 1) = КодПоказателя + "_", "_", "");
		ИндексОбласти = 1;
		ИсходноеЗначение = "";
		Пока ЭтаФорма[ТекущийЭлемент.Имя].Области.Найти(КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")) <> Неопределено Цикл
			ИсходноеЗначение = ИсходноеЗначение + Строка(ЭтаФорма[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")].Значение);
			ИндексОбласти = ИндексОбласти + 1;
		КонецЦикла;
		ИсходноеЗначение = СокрЛП(ИсходноеЗначение);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          ТекстВыбора);
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ТаблицаВыбора);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура(КолонкаПоиска, ИсходноеЗначение));
	
	ДополнительныеПараметры = Новый Структура("ИндексОбласти, ИсходныйКодПоМесту, КодПоказателя, КолонкаПоиска, Область, Разделитель", ИндексОбласти, ИсходныйКодПоМесту, КодПоказателя, КолонкаПоиска, Область, Разделитель);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиПоказательЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму(
		"Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказательЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИндексОбласти = ДополнительныеПараметры.ИндексОбласти;
	ИсходныйКодПоМесту = ДополнительныеПараметры.ИсходныйКодПоМесту;
	КодПоказателя = ДополнительныеПараметры.КодПоказателя;
	КолонкаПоиска = ДополнительныеПараметры.КолонкаПоиска;
	Область = ДополнительныеПараметры.Область;
	Разделитель = ДополнительныеПараметры.Разделитель;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = КодПоказателя
		ИЛИ РегламентированнаяОтчетностьКлиентСервер.ПоказательВходитВМногострочнуюЧасть(ЭтаФорма, КодПоказателя) > 0 Тогда
		Область.Значение = РезультатВыбора[КолонкаПоиска];
	Иначе
		СтрокаРезультатВыбора = Строка(РезультатВыбора[КолонкаПоиска]);
		Для Инд = СтрДлина(СтрокаРезультатВыбора) + 1 По ИндексОбласти - 1 Цикл
			СтрокаРезультатВыбора = " " + РезультатВыбора[КолонкаПоиска];
		КонецЦикла;
		Для Инд = 1 По ИндексОбласти - 1 Цикл
			ЭтаФорма[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(Инд, "ЧГ=")].Значение
			= СокрЛП(Сред(РезультатВыбора[КолонкаПоиска], Инд, 1));
		КонецЦикла;
	КонецЕсли;
	
	Расчет(ЭтаФорма, "", "");
	
	Модифицированность = Истина;
	
	ТабличныйДокументВыборЗавершение(ИсходныйКодПоМесту);
	
КонецПроцедуры

&НаСервере
Процедура СообщитьВТС(Описание, Раздел, ИмяЯчейки, ФИО = "")
	
	РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, Описание, Раздел, ИмяЯчейки, ФИО);
	
КонецПроцедуры

&НаСервере
Функция ИзвлечьСтруктуруXML()
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Код");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Формат");
	ДеревоСтруктуры.Колонки.Добавить("МинРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("МаксРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("Обязательность");
	ДеревоСтруктуры.Колонки.Добавить("Многостраничность");
	ДеревоСтруктуры.Колонки.Добавить("Многострочность");
	ДеревоСтруктуры.Колонки.Добавить("Раздел");
	ДеревоСтруктуры.Колонки.Добавить("Ключ");
	ДеревоСтруктуры.Колонки.Добавить("Условие");
	ДеревоСтруктуры.Колонки.Добавить("ЗначениеПоУмолчанию");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	ДеревоСтруктуры.Колонки.Добавить("Представление");
	ДеревоСтруктуры.Колонки.Добавить("Показатели");
	
	Макет = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет("СтруктураXML502");

	ВысотаТаблицы = Макет.ВысотаТаблицы;
	
	УчтенныеГруппы = Новый Соответствие;
	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 1).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = ДеревоСтруктуры;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.Код = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.Раздел = СокрЛП(Макет.Область(НомСтр, 2, НомСтр, 2).Текст);
				НовСтр.Ключ = СокрЛП(Макет.Область(НомСтр, 3, НомСтр, 3).Текст);
				НовСтр.Тип = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст);
				НовСтр.Формат = СокрЛП(Макет.Область(НомСтр, 5, НомСтр, 5).Текст);
				МинРазмерность = СокрЛП(Макет.Область(НомСтр, 6, НомСтр, 6).Текст);
				НовСтр.МинРазмерность = ?(ПустаяСтрока(МинРазмерность), ?(НовСтр.Формат = "N", 99999, 0), Число(МинРазмерность));
				МаксРазмерность = СокрЛП(Макет.Область(НомСтр, 7, НомСтр, 7).Текст);
				НовСтр.МаксРазмерность = ?(ПустаяСтрока(МаксРазмерность), 99999, Число(МаксРазмерность));
				НовСтр.Обязательность = СокрЛП(Макет.Область(НомСтр, 8, НомСтр, 8).Текст);
				НовСтр.Многостраничность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 9, НомСтр, 9).Текст);
				НовСтр.Многострочность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 10, НомСтр, 10).Текст);
				НовСтр.Условие = СокрЛП(Макет.Область(НомСтр, 11, НомСтр, 11).Текст);
				НовСтр.ЗначениеПоУмолчанию = СокрЛП(Макет.Область(НомСтр, 12, НомСтр, 12).Текст);
				НовСтр.Представление = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции

&НаСервере
Функция ПроверитьПоказатели() Экспорт
	
	СформироватьСтруктуруПоказателей();
	ДеревоВыгрузки = ИзвлечьСтруктуруXML();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки);
	Если НЕ ПроверитьДанные(ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПоказателей()
	
	мДанныеОтчета = Новый Структура;
	
	СохрСтруктура = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		мДанныеОтчета.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
			РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
	КонецЦикла;
	
	ТекущийРаздел = Неопределено;
	Если мСтруктураМногостраничныхРазделов.Свойство(СтруктураРеквизитовФормы.НаимТекущегоРаздела, ТекущийРаздел) Тогда
		АктивнаяСтраница = ЭтаФорма[ТекущийРаздел].НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина));
		Если АктивнаяСтраница.Количество() > 0 Тогда
			АктивнаяСтраница = АктивнаяСтраница[0];
			ИндексАктивнойСтраницы = ЭтаФорма[ТекущийРаздел].Индекс(АктивнаяСтраница);
		КонецЕсли;
	КонецЕсли;

	Для Каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногостраничныхРазделов Цикл
		
		НайденноеЗначение = Неопределено;
		
		мСтруктураМногостраничныхРазделов.Свойство(ЭлементСтруктуры.Ключ, НайденноеЗначение);
		
		Если НЕ НайденноеЗначение = Неопределено Тогда
			
			НайденноеЗначение = ЭтаФорма[НайденноеЗначение];
			
			// Учет разнизы между версиями 8.2 и 8.3 в организации хранения данных,
			// необходимый для перехода с версии 8.2 на 8.3.
			Если ЭлементСтруктуры.Значение.Колонки.Найти("ДанныеДопСтрок") = Неопределено Тогда
				ЭлементСтруктуры.Значение.Колонки.Добавить("ДанныеДопСтрок");
			КонецЕсли;
			
			ЗначениеВДанныеФормы(ЭлементСтруктуры.Значение, НайденноеЗначение);
			
			Если НайденноеЗначение[0].Свойство("Данные") Тогда
				
				Для Каждого СтрокаТаблЗнач Из НайденноеЗначение Цикл
					
					Если ТипЗнч(СтрокаТаблЗнач.Данные) = Тип("СписокЗначений") Тогда
						
						СтрокаТаблЗнач.Данные.Очистить();
						СтрокаТаблЗнач.Данные.Добавить(ЭлементСтруктуры.Значение[НайденноеЗначение.Индекс(СтрокаТаблЗнач)].Данные);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если НайденноеЗначение[0].Свойство("ДанныеДопСтрок") Тогда
				
				Ном = 0;
				
				Для Каждого СтрокаТаблЗнач Из ЭлементСтруктуры.Значение Цикл
					
					Если ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("Структура") Тогда
						
						Для Каждого ЭлСтруктуры Из СтрокаТаблЗнач.ДанныеДопСтрок Цикл
							
							ТаблЗнач = ЭлСтруктуры.Значение;
							
							ЭлСтруктуры.Значение = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ЭлементСтруктуры.Ключ)].Добавить().Таблица;
							
							ЗначениеВДанныеФормы(ТаблЗнач, ЭлСтруктуры.Значение);
							
							НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(ЭлСтруктуры.Значение);
							
						КонецЦикла;
						
					ИначеЕсли ТипЗнч(СтрокаТаблЗнач.ДанныеДопСтрок) = Тип("ТаблицаЗначений") Тогда
						
						СтрокаТаблЗначДанныеДопСтрок = ЭтаФорма["Хранилище" + ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ЭлементСтруктуры.Ключ)].Добавить().Таблица;
						
						ЗначениеВДанныеФормы(СтрокаТаблЗнач.ДанныеДопСтрок, СтрокаТаблЗначДанныеДопСтрок);
						
						НайденноеЗначение[Ном].ДанныеДопСтрок.Добавить(СтрокаТаблЗначДанныеДопСтрок, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
						
					КонецЕсли;
					
					Ном = Ном + 1;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Раздел Из мСтруктураМногостраничныхРазделов Цикл
		Для Каждого Страница Из ЭтаФорма[Раздел.Значение] Цикл
			Страница.АктивнаяСтраница = Ложь;
		КонецЦикла;
	КонецЦикла;

	ТекущийРаздел = Неопределено;
	Если мСтруктураМногостраничныхРазделов.Свойство(СтруктураРеквизитовФормы.НаимТекущегоРаздела, ТекущийРаздел) Тогда
		Если ИндексАктивнойСтраницы <> Неопределено Тогда
			ЭтаФорма[ТекущийРаздел][ИндексАктивнойСтраницы].АктивнаяСтраница = Истина;
		КонецЕсли;
	КонецЕсли;

	Для Каждого Раздел Из мСтруктураМногостраничныхРазделов Цикл
		ТаблицаЛистовРаздела = ЭтаФорма[Раздел.Значение];
		Для Каждого Лист Из ТаблицаЛистовРаздела Цикл
			Лист.Данные[0].Значение = РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Лист.Данные[0].Значение);
		КонецЦикла;
		мДанныеОтчета.Вставить(Раздел.Ключ, ЭтаФорма[Раздел.Значение]);
	КонецЦикла;
	
	ДополнитьСохраненныеПоказателиОтчета();
	
КонецФункции

&НаСервере
Процедура ДополнитьСохраненныеПоказателиОтчета()
	
	Для Каждого Раздел Из мСтруктураМногостраничныхРазделов Цикл
		
		ТаблицаЛистовРаздела = ЭтаФорма[Раздел.Значение];
		
		Для Каждого Лист Из ТаблицаЛистовРаздела Цикл
			
			Серия1 = Лист.Данные[0].Значение.П000010018001;
			Серия2 = Лист.Данные[0].Значение.П000010018002;
			Номер  = Лист.Данные[0].Значение.П000010018003;
			
			СерияНомер = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(Серия1 + Серия2 + Номер, 10);
			
			Лист.Данные[0].Значение.Вставить("П100010018001", СерияНомер);
			
		КонецЦикла;
		
		мДанныеОтчета.Вставить(Раздел.Ключ, ЭтаФорма[Раздел.Значение]);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СформироватьСтруктуруПараметров()
	
	Титульный = мДанныеОтчета.Титульный;
	
	ПараметрыВыгрузки = Новый Структура;
	
	КодПоМесту = СокрЛП(Титульный.ПоМесту);
	
	ВключитьСведенияФЛ = (КодПоМесту = "112");
	ЭтоПБОЮЛ = (Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(
		СтруктураРеквизитовФормы.Организация) ИЛИ ВключитьСведенияФЛ);
	
	ПараметрыВыгрузки.Вставить("ЭтоПБОЮЛ", ЭтоПБОЮЛ);
	ПараметрыВыгрузки.Вставить("ВключитьСведенияФЛ", ВключитьСведенияФЛ);
	
	ПараметрыВыгрузки.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	ПараметрыВыгрузки.Вставить("ДатаДок", Формат(ТекущаяДатаСеанса(), "ДФ=дд.ММ.гггг"));
	ПараметрыВыгрузки.Вставить("КодНО", СокрЛП(Титульный.НалоговыйОрган));
	ПараметрыВыгрузки.Вставить("НомКорр", Строка(СтруктураРеквизитовФормы.мСохраненныйДок.Вид));
	ПараметрыВыгрузки.Вставить("ПоМесту", КодПоМесту);
	ПараметрыВыгрузки.Вставить("ДатаРасч", Титульный.ДатаСоставленияРасчета);
	ПараметрыВыгрузки.Вставить("Тлф", СокрЛП(Титульный.ТелОрганизации));
	
	Если ЭтоПБОЮЛ Тогда
		ИНН = СокрЛП(Титульный.ИНН1);
		ПараметрыВыгрузки.Вставить("ИНН", ИНН);
		
		ФИО = РегламентированнаяОтчетность.РазложитьФИО(Титульный.НаимОрг);
		ПараметрыВыгрузки.Вставить("ФЛФамилия",  ФИО.Фамилия);
		ПараметрыВыгрузки.Вставить("ФЛИмя",      ФИО.Имя);
		ПараметрыВыгрузки.Вставить("ФЛОтчество", ФИО.Отчество);
		
		Если НЕ ЗначениеЗаполнено(ИНН) Тогда
			Сведения = мДанныеОтчета.Сведения;
			ПараметрыВыгрузки.Вставить("ВидДокумента", СокрЛП(Сведения.КодВидаДокумента));
			ПараметрыВыгрузки.Вставить("СерияНомер", СокрЛП(Сведения.СерияНомерДокумента));
			ПараметрыВыгрузки.Вставить("КемВыдан", СокрЛП(Сведения.КемВыданДокумент));
			ПараметрыВыгрузки.Вставить("ДатаВыдачи", Сведения.ДатаВыдачи);
			
			ПараметрыВыгрузки.Вставить("Индекс", СокрЛП(Сведения.АдресИндекс));
			ПараметрыВыгрузки.Вставить("КодРегион", СокрЛП(Сведения.АдресКодРегиона));
			ПараметрыВыгрузки.Вставить("Район", СокрЛП(Сведения.АдресРайон));
			ПараметрыВыгрузки.Вставить("Город", СокрЛП(Сведения.АдресГород));
			ПараметрыВыгрузки.Вставить("НаселПункт", СокрЛП(Сведения.АдресНаселенныйПункт));
			ПараметрыВыгрузки.Вставить("Улица", СокрЛП(Сведения.АдресУлица));
			ПараметрыВыгрузки.Вставить("Дом", СокрЛП(Сведения.АдресНомерДома));
			ПараметрыВыгрузки.Вставить("Корпус", СокрЛП(Сведения.АдресНомерКорпуса));
			ПараметрыВыгрузки.Вставить("Кварт", СокрЛП(Сведения.АдресНомерКвартиры));
		КонецЕсли;
		
	Иначе
		ПараметрыВыгрузки.Вставить("НаимОрг", СокрЛП(Титульный.НаимОрг));
		ПараметрыВыгрузки.Вставить("ИНН",  СокрЛП(СтруктураРеквизитовФормы.Организация.ИНН));
		ПараметрыВыгрузки.Вставить("КПП",  СокрЛП(Титульный.КПП1));
		
	КонецЕсли;
	
	ПараметрыВыгрузки.Вставить("ПрПодп", СокрЛП(Титульный.ПрПодп));
	
	ФИОПодписанта = РегламентированнаяОтчетность.РазложитьФИО(Титульный.ОргПодписант);
	ПараметрыВыгрузки.Вставить("ПодпФамилия",  ФИОПодписанта.Фамилия);
	ПараметрыВыгрузки.Вставить("ПодпИмя",      ФИОПодписанта.Имя);
	ПараметрыВыгрузки.Вставить("ПодпОтчество", ФИОПодписанта.Отчество);
	
	ПараметрыВыгрузки.Вставить("ПодпНаимДок", СокрЛП(Титульный.ДокУпПред));
	ПараметрыВыгрузки.Вставить("ПодпНаимОрг", СокрЛП(Титульный.ОргУп));
	
	ПараметрыВыгрузки.Вставить("ПрефиксИмениФайлаВыгрузки", "NO_UTILSB");
	ПараметрыВыгрузки.Вставить("КодИФНСПосредника", ?(СтруктураРеквизитовФормы.Организация.КрупнейшийНалогоплательщик,
		СокрЛП(СтруктураРеквизитовФормы.Организация.КодНалоговогоОрганаПолучателя), ""));
	ПараметрыВыгрузки.Вставить("ИдФайл", СформироватьИдФайл(ПараметрыВыгрузки));
	
	Раздел1 = мДанныеОтчета.Раздел1[0];
	КБК       = СокрЛП(Раздел1.Данные[0].Значение.П000010001001);
	ОКТМО     = СокрЛП(Раздел1.Данные[0].Значение.П000010002001);
	СборПУОбщ = Раздел1.Данные[0].Значение.П000010003001;
	
	ПараметрыВыгрузки.Вставить("КБК", КБК);
	ПараметрыВыгрузки.Вставить("ОКТМО", ОКТМО);
	ПараметрыВыгрузки.Вставить("СборПУОбщ", СборПУОбщ);
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

&НаСервере
Функция СформироватьИдФайл(ПараметрыВыгрузки)
	
	ИНН = ПараметрыВыгрузки.ИНН;
	Если ПараметрыВыгрузки.ПоМесту = "112" И НЕ ЗначениеЗаполнено(ИНН) Тогда
		ИНН = "000000000000";
	КонецЕсли;
	
	Возврат ПараметрыВыгрузки.ПрефиксИмениФайлаВыгрузки
			+ "_" + ?(ЗначениеЗаполнено(ПараметрыВыгрузки.КодИФНСПосредника), ПараметрыВыгрузки.КодИФНСПосредника, ПараметрыВыгрузки.КодНО)
			+ "_" + ПараметрыВыгрузки.КодНО
			+ "_" + ?(ПараметрыВыгрузки.Свойство("ЭтоПБОЮЛ") И ПараметрыВыгрузки.ЭтоПБОЮЛ, ИНН, ИНН + СокрЛП(ПараметрыВыгрузки.КПП))
			+ "_" + Формат(ТекущаяДатаСеанса(), "ДФ=ггггММдд")
			+ "_" + Строка(Новый УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки)
	
	СтатусПроверки = Истина;
	
	ПроверитьЗаполнение_ТитульныйЛист(ПараметрыВыгрузки, СтатусПроверки);
	
	Если ПараметрыВыгрузки.ПоМесту = "112" И НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИНН) Тогда
		ПроверитьЗаполнение_Сведения(ПараметрыВыгрузки, СтатусПроверки);
	КонецЕсли;
	
	ПроверитьЗаполнение_Раздел1(ПараметрыВыгрузки, СтатусПроверки);
	
	Возврат СтатусПроверки;
	
КонецФункции

&НаСервере
Процедура ПроверитьЗаполнение_ТитульныйЛист(Параметры, СтатусПроверки)
	
	КодПоМесту = Параметры.ПоМесту;
	ЭтоФизлицоБезИНН = (КодПоМесту = "112");
	ЭтоПБОЮЛ = Параметры.ЭтоПБОЮЛ;
	
	Если НЕ ЗначениеЗаполнено(Параметры.КодНО) Тогда
		СообщитьВТС("На титульном листе не задан код налогового органа!", "Титульный", "НалоговыйОрган1");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	ДопустимыеЗначения = "112,120,210,222,331";
	Если НЕ ЗначениеЗаполнено(КодПоМесту) Тогда
		СообщитьВТС("На титульном листе не задан по месту нахождения (учета)!", "Титульный", "ПоМесту1");
		СтатусПроверки = Ложь;
	ИначеЕсли НЕ ЗначениеСодержитсяВСписке(КодПоМесту, ДопустимыеЗначения) Тогда
		ТекстОписанияОшибки = "Код по месту нахождения (учета) на титульном листе должен принимать значение "
		+ ПредставлениеМассиваВОписании(СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДопустимыеЗначения));
		СообщитьВТС(ТекстОписанияОшибки, "Титульный", "ПоМесту1");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ДатаРасч) Тогда
		СообщитьВТС("На титульном листе не задана дата составления расчета!", "Титульный", "ДатаСоставленияРасчета");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЭтоФизлицоБезИНН Тогда
		Если ЗначениеЗаполнено(Параметры.ИНН) И СтрДлина(Параметры.ИНН) <> 12 Тогда
			СообщитьВТС("Неверно задан ИНН физического лица!", "Титульный", "ИНН1_1");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Параметры.ФЛФамилия) Тогда
			СообщитьВТС("На титульном листе  не указана фамилия физического лица!", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Параметры.ФЛИмя) Тогда
			СообщитьВТС("На титульном листе  не указано имя физического лица!", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
	ИначеЕсли ЭтоПБОЮЛ Тогда
		Если НЕ ЗначениеЗаполнено(Параметры.ИНН) Тогда
			СообщитьВТС("Не задан ИНН индивидуального предпринимателя!", "Титульный", "ИНН1_1");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(Параметры.ИНН) <> 12 Тогда
			СообщитьВТС("Неверно задан ИНН индивидуального предпринимателя!", "Титульный", "ИНН1_1");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Параметры.ФЛФамилия) Тогда
			СообщитьВТС("На титульном листе  не указана фамилия индивидуального предпринимателя!", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Параметры.ФЛИмя) Тогда
			СообщитьВТС("На титульном листе  не указано имя индивидуального предпринимателя!", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
	Иначе
		Если НЕ ЗначениеЗаполнено(Параметры.ИНН) Тогда
			СообщитьВТС("Не задан ИНН организации!", "Титульный", "ИНН1_1");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(Параметры.ИНН) <> 10 Тогда
			СообщитьВТС("Неверно задан ИНН организации!", "Титульный", "ИНН1_1");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Параметры.КПП) Тогда
			СообщитьВТС("Не задан КПП организации!", "Титульный", "КПП1_1");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(Параметры.КПП) <> 9 Тогда
			СообщитьВТС("Неверно задан КПП организации!", "Титульный", "КПП1_1");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Параметры.НаимОрг) Тогда
			СообщитьВТС("Не указано полное наименование организации!", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ПодписаноИндивидуальнымПредпринимателем = (ЭтоПБОЮЛ И Параметры.ПрПодп = "1");
	Если НЕ ПодписаноИндивидуальнымПредпринимателем Тогда
		Если ПустаяСтрока(Параметры.ПодпФамилия) Тогда
			СообщитьВТС("Не задана фамилия подписанта!", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(Параметры.ПодпИмя) Тогда
			СообщитьВТС("Не задано имя подписанта!", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.ПрПодп = "2" И ПустаяСтрока(Параметры.ПодпНаимДок) Тогда
		СообщитьВТС("Не задано наименование документа, удостоверяющего полномочия представителя!", "Титульный", "ДокУпПред");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнение_Сведения(Параметры, СтатусПроверки)
	
	КодВидаДокумента = Параметры.ВидДокумента;
	ДопустимыеЗначения = "03,07,08,10,11,12,13,14,15,18,21,23,24,91";
	Если НЕ ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда
		СообщитьВТС("В разделе Сведения не указан код вида документа!", "Сведения", "КодВидаДокумента");
		СтатусПроверки = Ложь;
	ИначеЕсли НЕ ЗначениеСодержитсяВСписке(КодВидаДокумента, ДопустимыеЗначения) Тогда
		ТекстОписанияОшибки = "Код вида документа в разделе Сведения должен принимать значение  "
		+ ПредставлениеМассиваВОписании(СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДопустимыеЗначения));
		СообщитьВТС(ТекстОписанияОшибки, "Сведения", "КодВидаДокумента");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.СерияНомер) Тогда
		СообщитьВТС("В разделе Сведения не указаны серия и номер документа!", "Сведения", "СерияНомерДокумента");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.КемВыдан) Тогда
		СообщитьВТС("В разделе Сведения не указано кем выдан документ!", "Сведения", "КемВыданДокумент");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ДатаВыдачи) Тогда
		СообщитьВТС("В разделе Сведения не указана дата выдачи документа!", "Сведения", "ДатаВыдачи");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.КодРегион) Тогда
		СообщитьВТС("В разделе Сведения не указан код региона!", "Сведения", "АдресКодРегиона");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(Параметры.КодРегион) <> 2 Тогда
		СообщитьВТС("В разделе Сведения неверно указан код региона!", "Сведения", "АдресКодРегиона");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнение_Раздел1(Параметры, СтатусПроверки)
	
	Если НЕ ЗначениеЗаполнено(Параметры.КБК) Тогда
		СообщитьВТС("На странице 1 раздела 1 не указан код бюджетной классификации!", "Раздел1", "П000010001001", 1);
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(Параметры.КБК) <> 20 Тогда
		СообщитьВТС("На странице 1 раздела 1 неверно указан код бюджетной классификации!", "Раздел1", "П000010001001", 1);
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ОКТМО) Тогда
		СообщитьВТС("На странице 1 раздела 1 не указан код ОКТМО!", "Раздел1", "П000010002001", 1);
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(Параметры.ОКТМО) <> 8 И СтрДлина(Параметры.ОКТМО) <> 11 Тогда
		СообщитьВТС("На странице 1 раздела 1 неверно указан код ОКТМО!", "Раздел1", "П000010002001", 1);
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	ДанныеРаздела = мДанныеОтчета.Раздел1;
	
	Для Каждого Лист Из ДанныеРаздела Цикл
		
		ДанныеЛиста = Лист.Данные;
		НомерЛиста = ДанныеРаздела.Индекс(Лист) + 1;
		
		ЛистЗаполнен = ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010001001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010002001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010003001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010004001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010005001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010006001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010007001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010008001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010009001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010010001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010011001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010012001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010013001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010014001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010015001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010016001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010017001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П100010018001)
		           ИЛИ ЗначениеЗаполнено(ДанныеЛиста[0].Значение.П000010019001);
		Если НЕ ЛистЗаполнен Тогда
			Продолжить;
		КонецЕсли;
		
		// Признак транспортного средства.
		ПризнакТС = СокрЛП(ДанныеЛиста[0].Значение.П000010004001);
		ДопустимыеЗначения = "10,11,12,20";
		Если НЕ ЗначениеЗаполнено(ПризнакТС) Тогда
			СообщитьВТС("На странице " + НомерЛиста + " раздела 1 не задан признак транспортного средства!", "Раздел1", "П000010004001", НомерЛиста);
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ ЗначениеСодержитсяВСписке(ПризнакТС, ДопустимыеЗначения) Тогда
			ТекстОписанияОшибки = "На странице " + НомерЛиста
			+ " раздела 1 признак транспортного средства должен принимать значение "
			+ ПредставлениеМассиваВОписании(СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДопустимыеЗначения));
			СообщитьВТС(ТекстОписанияОшибки, "Раздел1", "П000010004001", НомерЛиста);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		// Дата выпуска транспортного средства.
		ДатаВыпускаТС = ДанныеЛиста[0].Значение.П000010008001;
		Если НЕ ЗначениеЗаполнено(ДатаВыпускаТС) Тогда
			СообщитьВТС("На странице " + НомерЛиста + " раздела 1 не указана дата выпуска транспортного средства!", "Раздел1", "П000010008001", НомерЛиста);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		// Категория (вид) транспортного средства.
		КатегорияТС = ДанныеЛиста[0].Значение.П000010009001;
		ДопустимыеЗначения = "M1,M2,M3,M1G,M2G,M3G,N1,N2,N3,N1G,N2G,N3G,X";
		Если НЕ ЗначениеЗаполнено(КатегорияТС) Тогда
			СообщитьВТС("На странице " + НомерЛиста + " раздела 1 не указана категория (вид) транспортного средства!", "Раздел1", "П000010009001", НомерЛиста);
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ ЗначениеСодержитсяВСписке(КатегорияТС, ДопустимыеЗначения) Тогда
			ТекстОписанияОшибки = "На странице " + НомерЛиста
			+ " раздела 1 категория (вид) транспортного средства должна принимать значение "
			+ ПредставлениеМассиваВОписании(СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДопустимыеЗначения));
			СообщитьВТС(ТекстОписанияОшибки, "Раздел1", "П000010009001", НомерЛиста);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		// Идентификационный номер транспортного средства (VIN).
		ИдентНомерТС = ДанныеЛиста[0].Значение.П000010005001;
		Если НЕ ЗначениеЗаполнено(ИдентНомерТС) И ЗначениеЗаполнено(КатегорияТС) И КатегорияТС <> "X" Тогда
			СообщитьВТС("На странице " + НомерЛиста + " раздела 1 не указан идентификационный номер транспортного средства (VIN)!", "Раздел1", "П000010005001", НомерЛиста);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		// Рабочий объем двигателя.
		Если ЗначениеСодержитсяВСписке(КатегорияТС, "M1,M2,M3,M1G,M2G,M3G") И ДанныеЛиста[0].Значение.П000010010001 <= 0 Тогда
			ТекстОписанияОшибки = "На странице " + НомерЛиста + " раздела 1 не указан рабочий объем двигателя";
			СообщитьВТС(ТекстОписанияОшибки, "Раздел1", "П000010010001", НомерЛиста);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		// Тип двигателя.
		ТипДвигателя = ДанныеЛиста[0].Значение.П000010011001;
		Если НЕ ЗначениеЗаполнено(ТипДвигателя) Тогда
			СообщитьВТС("На странице " + НомерЛиста + " раздела 1 не указан тип двигателя!", "Раздел1", "П000010011001", НомерЛиста);
			СтатусПроверки = Ложь;
		Иначе
			РазрешенныеТипыДвигателя = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("0,3");
			Если РазрешенныеТипыДвигателя.Найти(ТипДвигателя) = Неопределено Тогда
				СообщитьВТС("На странице " + НомерЛиста + " раздела 1 тип двигателя должен принимать значение 0 или 3!", "Раздел1", "П000010011001", НомерЛиста);
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		// Полная масса.
		Если ЗначениеСодержитсяВСписке(КатегорияТС, "N1,N2,N3,N1G,N2G,N3G") И ДанныеЛиста[0].Значение.П000010012001 <= 0 Тогда
			ТекстОписанияОшибки = "На странице " + НомерЛиста + " раздела 1 не указана полная масса";
			СообщитьВТС(ТекстОписанияОшибки, "Раздел1", "П000010012001", НомерЛиста);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		// Серия, номер паспорта.
		СерияНомерПаспорта = ДанныеЛиста[0].Значение.П100010018001;
		Если НЕ ЗначениеЗаполнено(СерияНомерПаспорта) Тогда
			СообщитьВТС("На странице " + НомерЛиста + " раздела 1 не указаны серия и номер паспорта транспортного средства", "Раздел1", "П000010018001", НомерЛиста);
			СтатусПроверки = Ложь;
		Иначе
			Серия1 = СокрЛП(ДанныеЛиста[0].Значение.П000010018001);
			Серия2 = СокрЛП(ДанныеЛиста[0].Значение.П000010018002);
			Номер  = СокрЛП(ДанныеЛиста[0].Значение.П000010018003);
			
			СерияЗаполненаВерно = (СтрДлина(Серия1) = 0 И СтрДлина(Серия2) = 2)
			                  ИЛИ (СтрДлина(Серия1) = 2 И СтрДлина(Серия2) = 2);
			СерияНезаполнена    = (СтрДлина(Серия1) = 0 И СтрДлина(Серия2) = 0);
			
			Если НЕ СерияЗаполненаВерно Тогда
				СообщениеОбОшибке = "На странице " + НомерЛиста + " раздела не" + ?(СерияНезаполнена, "", "верно") + " указана серия паспорта транспортного средства";
				СообщитьВТС(СообщениеОбОшибке, "Раздел1", "П000010018001", НомерЛиста);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если СтрДлина(Номер) <> 6 Тогда
				СообщениеОбОшибке = "На странице " + НомерЛиста + " раздела не" + ?(СтрДлина(Номер) = 0, "", "верно") + " указан нормер паспорта транспортного средства";
				СообщитьВТС(СообщениеОбОшибке, "Раздел1", "П000010018003", НомерЛиста);
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		// Дата выдачи паспорта.
		ДатаВыдачиПаспорта = ДанныеЛиста[0].Значение.П000010019001;
		Если НЕ ЗначениеЗаполнено(ДатаВыдачиПаспорта) Тогда
			СообщитьВТС("На странице " + НомерЛиста + " раздела 1 не указана дата выдачи паспорта!", "Раздел1", "П000010019001", НомерЛиста);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗначениеСодержитсяВСписке(ПроверяемоеЗначение, КонтрольныйСписок)
	
	Результат = Ложь;
	
	Значения = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КонтрольныйСписок, ",");
	Для Инд = 0 По Значения.ВГраница() Цикл
		Значения[Инд] = СокрЛП(Значения[Инд]);
	КонецЦикла;
	
	Результат = (Значения.Найти(ПроверяемоеЗначение) <> Неопределено);
	
	Возврат Результат
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки)
	
	ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ДеревоВыгрузки);
	
	ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, ДеревоВыгрузки);
	
	ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьДанные(Узел)
	
	СтатусПроверки = Истина;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если НЕ ЗначениеСоответствуетФормату(Узел) Тогда
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Стр из Узел.Строки Цикл
		СтатусПроверки = (ПроверитьДанные(Стр) И СтатусПроверки);
	КонецЦикла;
	
	Возврат СтатусПроверки;
	
КонецФункции

&НаСервере
Функция СкопироватьУзел(Родитель, Узел)
	
	// Находим узел с максимальным индексом и с тем же кодом, что
	// и у копируемого, и добавляем новый сразу после найденного.
	СтрокиСТемЖеКодом = Родитель.Строки.НайтиСтроки(Новый Структура("Код", Узел.Код), Ложь);
	МаксИндекс = -1;
	Для Каждого СтрокаСТемЖеКодом Из СтрокиСТемЖеКодом Цикл
		ТекИндекс = Родитель.Строки.Индекс(СтрокаСТемЖеКодом);
		Если ТекИндекс > МаксИндекс Тогда
			МаксИндекс = ТекИндекс;
		КонецЕсли;
	КонецЦикла;
	
	ИндексСоздаваемогоУзла = МаксИндекс + 1;
	Если ИндексСоздаваемогоУзла >= Родитель.Строки.Количество() ИЛИ ИндексСоздаваемогоУзла = 0 Тогда
		// Аналогичный узел не найден или найденный узел - последний.
		НовыйУзел = Родитель.Строки.Добавить();
	Иначе
		НовыйУзел = Родитель.Строки.Вставить(ИндексСоздаваемогоУзла);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйУзел, Узел, , "Родитель, Строки");
	Для Каждого Стр из Узел.Строки Цикл
		СкопироватьУзел(НовыйУзел, Стр);
	КонецЦикла;
	Возврат НовыйУзел;
	
КонецФункции

&НаСервере
Процедура ОтсечьНезаполненныеНеобязательныеУзлы(Узел)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Стр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		ОтсечьНезаполненныеНеобязательныеУзлы(Стр);
	КонецЦикла;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		// Учтем оба варианта: кириллицу и латиницу.
		Если (СтрНайти(Узел.Обязательность, "Н") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "H") <> 0) И УзелПуст(Узел) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		ИначеЕсли (СтрНайти(Узел.Обязательность, "М") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "M") <> 0) И УзелПуст(Узел)
			И ?(СтрНайти(Узел.Обязательность, "О") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "O") <> 0, РегламентированнаяОтчетность.ИмеютсяАналогичныеСоседниеУзлыКлюч(Узел), Истина) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УзелПуст(Узел, ПоказателиНеанализируемыеНаЗаполненность = Неопределено)
	
	ПустойУзел = ?(	Узел.Формат = "N",
				Узел.Значение = "0" ИЛИ (НЕ ЗначениеЗаполнено(Узел.Значение)),
				НЕ ЗначениеЗаполнено(Узел.Значение));
	Для Каждого Стр из Узел.Строки Цикл
		Если НЕ УзелПуст(Стр) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПустойУзел;
	
КонецФункции

&НаСервере
Процедура ОбработатьУсловныеЭлементы(Знач ПараметрыВыгрузки, Узел)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		ТекСтр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		Если НЕ ПустаяСтрока(ТекСтр.Условие) Тогда
			Если НЕ РегламентированнаяОтчетность.УсловиеВыполнено(ЭтаФорма, ПараметрыВыгрузки, ТекСтр.Условие) Тогда
				Узел.Строки.Удалить(ТекСтр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ТекСтр);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВывестиПоказательВXML(Узел, ЗначениеПоказателя)
	
	МинШирина = Узел.МинРазмерность;
	МаксШирина = Узел.МаксРазмерность;
	
	Если Узел.Формат = "T" ИЛИ Узел.Формат = "Т" Тогда // учтем оба варианта: кириллицу и латиницу
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") И НЕ ЗначениеЗаполнено(ЗначениеПоказателя) Тогда
			ЗначениеПоказателя = "";
		ИначеЕсли Узел.Код = "СерНомПасп" Тогда
			ЗначениеПоказателя = ЗначениеПоказателя; // Особая обработка 
		Иначе
			ЗначениеПоказателя = СокрЛП(ЗначениеПоказателя);
		КонецЕсли;
		Узел.Значение = ?(МаксШирина < СтрДлина(ЗначениеПоказателя), Лев(СокрЛП(ЗначениеПоказателя), МаксШирина), ЗначениеПоказателя);
	ИначеЕсли Узел.Формат = "N" Тогда
		СтрокаФормата = "ЧРД=.;ЧН=0;ЧГ=;";
		Если Узел.МаксРазмерность <> 0 И Узел.МаксРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧЦ=" + Формат(Узел.МаксРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Если Узел.МинРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧДЦ=" + Формат(Узел.МинРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, СтрокаФормата));
	ИначеЕсли Узел.Формат = "gYear" Тогда
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, "ДФ=гггг"));
		Иначе
			Узел.Значение = Прав(СокрЛП(ЗначениеПоказателя), 4);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ИмяПервогоПоказателяМногострочнойЧастиВыгрузки(Узел)
	
	Результат = Неопределено;
	
	Для Каждого СтрокаУзла из Узел.Строки Цикл
		
		// Учтем оба варианта: кириллицу и латиницу.
		Если СтрокаУзла.Тип = "С" ИЛИ СтрокаУзла.Тип = "C" Тогда
			Результат = ИмяПервогоПоказателяМногострочнойЧастиВыгрузки(СтрокаУзла);
		Иначе
			Если ЗначениеЗаполнено(СтрокаУзла.Ключ) Тогда
				Результат = СокрЛП(СтрокаУзла.Ключ);
			КонецЕсли;
		КонецЕсли;
		
		Если Результат <> Неопределено Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ДополнитьИменаПоказателейМногострочнойЧастиВыгрузки(Узел, Постфикс)
	
	Для Каждого СтрокаУзла из Узел.Строки Цикл
		// Учтем оба варианта: кириллицу и латиницу.
		Если СтрокаУзла.Тип = "С" ИЛИ СтрокаУзла.Тип = "C" Тогда
			ДополнитьИменаПоказателейМногострочнойЧастиВыгрузки(СтрокаУзла, Постфикс);
		Иначе
			Если ЗначениеЗаполнено(СтрокаУзла.Ключ) Тогда
				СтрокаУзла.Ключ = СокрЛП(СтрокаУзла.Ключ) + Постфикс;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НовыйУзелИзПрототипа(ПрототипУзла);
	
	РодительУзла = ПрототипУзла.Родитель;
	
	ПозицияИсходногоУзла = РодительУзла.Строки.Индекс(ПрототипУзла);
	НовыйУзел = РодительУзла.Строки.Вставить(ПозицияИсходногоУзла);
	ЗаполнитьЗначенияСвойств(НовыйУзел, ПрототипУзла, , "Родитель, Строки");
	Для Каждого Стр из ПрототипУзла.Строки Цикл
		СкопироватьУзел(НовыйУзел, Стр);
	КонецЦикла;
	
	Возврат НовыйУзел;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Узел, НомерСтроки = Неопределено)
	
	КоличествоВставленныхУзлов = 0;
	
	Для Каждого Стр из Узел.Строки Цикл
		
		Если КоличествоВставленныхУзлов > 0 Тогда
			КоличествоВставленныхУзлов = КоличествоВставленныхУзлов - 1;
			Продолжить;
		КонецЕсли;
		
		// Учтем оба варианта: кириллицу и латиницу.
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность Тогда
				ДанныеРаздела = мДанныеОтчета[Стр.Раздел];
				Для Каждого СтраницаРаздела Из ДанныеРаздела Цикл
					УзелСтраницы = НовыйУзелИзПрототипа(Стр);
					УзелСтраницы.Многостраничность = Ложь;
					ВиртуальныеДанные = Новый Структура(Стр.Раздел, СтраницаРаздела.Данные);
					ЗаполнитьДаннымиУзел(ВиртуальныеДанные, УзелСтраницы);
					КоличествоВставленныхУзлов = КоличествоВставленныхУзлов + 1;
				КонецЦикла;
				РегламентированнаяОтчетность.УдалитьУзел(Стр);
				КоличествоВставленныхУзлов = Макс(0, КоличествоВставленныхУзлов - 1);
				
			ИначеЕсли Стр.Многострочность Тогда
				Если НЕ ПустаяСтрока(Стр.Раздел) Тогда
					Если ПараметрыВыгрузки.Свойство(Стр.Раздел) Тогда
						ДанныеРаздела = ПараметрыВыгрузки[Стр.Раздел];
					Иначе
						ДанныеРаздела = мДанныеОтчета[Стр.Раздел];
					КонецЕсли;
				Иначе
					ДанныеРаздела = ПараметрыВыгрузки;
				КонецЕсли;
				ИмяКонтрольногоПоказателя = ИмяПервогоПоказателяМногострочнойЧастиВыгрузки(Стр);
				
				НомерСтроки = 1;
				Постфикс = "_" + Формат(НомерСтроки, "ЧГ=0");
				
				Пока ДанныеРаздела.Свойство(ИмяКонтрольногоПоказателя + Постфикс) Цикл
					УзелСтроки = НовыйУзелИзПрототипа(Стр);
					УзелСтроки.Многострочность = Ложь;
					ДополнитьИменаПоказателейМногострочнойЧастиВыгрузки(УзелСтроки, Постфикс);
					ЗаполнитьДаннымиУзел(ДанныеРаздела, УзелСтроки);
					КоличествоВставленныхУзлов = КоличествоВставленныхУзлов + 1;
					
					НомерСтроки = НомерСтроки + 1;
					Постфикс = "_" + Формат(НомерСтроки, "ЧГ=0");
				КонецЦикла;
				
				РегламентированнаяОтчетность.УдалитьУзел(Стр);
				КоличествоВставленныхУзлов = Макс(0, КоличествоВставленныхУзлов - 1);
				
			Иначе
				ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Стр);
				
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
				Если НЕ ПустаяСтрока(Стр.Раздел) И НЕ ПустаяСтрока(Стр.Ключ) Тогда
					Если ПараметрыВыгрузки.Свойство(Стр.Раздел) Тогда
						// Данные представлены в виде раздела в параметрах.
						ЗначениеЭлемента = ПараметрыВыгрузки[Стр.Раздел][0].Значение[Стр.Ключ];
					ИначеЕсли ПараметрыВыгрузки.Свойство(Стр.Ключ) Тогда
						// Данные заданы в виде значения в параметрах.
						ЗначениеЭлемента = ПараметрыВыгрузки[Стр.Ключ];
					Иначе
						// Данные находятся в сохраненных данных отчета.
						ЗначениеЭлемента = мДанныеОтчета[Стр.Раздел][Стр.Ключ];
					КонецЕсли;
					ВывестиПоказательВXML(Стр, ЗначениеЭлемента);
				Иначе
					Стр.Значение = "";
				КонецЕсли;
			ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
				Ключ = Сред(Стр.ЗначениеПоУмолчанию, 2);
				Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки, Ключ) Тогда
					ВывестиПоказательВXML(Стр, ПараметрыВыгрузки[Ключ]);
				КонецЕсли;
			Иначе
				Стр.Значение = Стр.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗначениеСоответствуетФормату(Стр)
	
	СтатусПроверки = Истина;
	// Учтем оба варианта: кириллицу и латиницу.
	Если Стр.Формат = "Т" ИЛИ Стр.Формат = "T" Тогда
		ДлинаЗначения = СтрДлина(Стр.Значение);
		Если ДлинаЗначения < Стр.МинРазмерность Тогда
			СтатусПроверки = Ложь;
			СообщитьВТС("Длина значения показателя """ + РегламентированнаяОтчетность.ПредставлениеПоказателя(Стр)
				+ """ меньше минимально возможной (" + ДлинаЗначения + " < " + Стр.МинРазмерность + ")", "Титульный", "");
		КонецЕсли;
		Если ДлинаЗначения > Стр.МаксРазмерность Тогда
			СтатусПроверки = Ложь;
			СообщитьВТС("Длина значения показателя """ + РегламентированнаяОтчетность.ПредставлениеПоказателя(Стр)
				+ """ больше максимально возможной (" + ДлинаЗначения + " > " + Стр.МаксРазмерность + ")", "Титульный", "");
		КонецЕсли;
	КонецЕсли;
	Возврат СтатусПроверки;
	
КонецФункции

&НаСервере
Функция ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки)
	
	ПотокXML = РегламентированнаяОтчетность.СоздатьНовыйПотокXML("windows-1251");
	
	ЗаписатьУзелДереваВXML(ДеревоВыгрузки, ПотокXML, ПараметрыВыгрузки);
	
	ТекстДляЗаписи = ПотокXML.Закрыть();
	
	Возврат ТекстДляЗаписи;
	
КонецФункции

&НаСервере
Функция ЗаписатьУзелДереваВXML(СтрокаДерева, ПотокXML, ПараметрыВыгрузки) Экспорт
	
	Если ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
		ПотокXML.ЗаписатьНачалоЭлемента("Файл");
		ПотокXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		Для каждого Стр Из СтрокаДерева.Строки Цикл
			ЗаписатьУзелДереваВXML(Стр, ПотокXML, ПараметрыВыгрузки);
		КонецЦикла;
		ПотокXML.ЗаписатьКонецЭлемента();
	Иначе
		Если СтрокаДерева.Тип = "А" ИЛИ СтрокаДерева.Тип = "A" Тогда 
			ПотокXML.ЗаписатьАтрибут(СтрокаДерева.Код, Строка(СтрокаДерева.Значение));
		Иначе
			ПотокXML.ЗаписатьНачалоЭлемента(СтрокаДерева.Код);
			Для каждого Лист из СтрокаДерева.Строки Цикл
				ЗаписатьУзелДереваВXML(Лист, ПотокXML, ПараметрыВыгрузки);
			КонецЦикла;
			ПотокXML.ЗаписатьТекст(Строка(СтрокаДерева.Значение));
			ПотокXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ВыгрузитьОтчет() Экспорт
	
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Организация не выбрана! Выгрузка невозможна.'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.СформироватьИЗаписать(СпДокОсн);
	
КонецПроцедуры

&НаКлиенте
Функция УниверсальнаяВыгрузка(ТекстВыгрузки = Неопределено, ПроверятьБлокировки = Истина) Экспорт
	
	Перем ПараметрыВыгрузки;
	
	Если Модифицированность Тогда
		ТекстЗаголовка = ЗаголовокРегламентированногоОтчета(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ОргСтр = " (" + СтруктураРеквизитовФормы.Организация + ")";
		Если СтрНайти(ТекстЗаголовка, ОргСтр) = 0 Тогда
			ТекстЗаголовка = ТекстЗаголовка + ОргСтр;
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отчет """ + ТекстЗаголовка + """ не сохранен.";
		Сообщение.Сообщить();
		
		Возврат Ложь;
	КонецЕсли;
	
	Если Открыта() Тогда
		Если СтруктураРеквизитовФормы.ЕдиницаИзмерения <> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Перед выгрузкой необходимо установить единицу измерения ""в рублях"".'");
			Сообщение.Сообщить();
			
			Возврат Ложь;
			
		КонецЕсли;
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Перед выгрузкой необходимо установить точность ""0"".'");
			Сообщение.Сообщить();
			
			Возврат Ложь;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Истина Тогда // возможны 3 состояния
		РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения(ЭтаФорма, ОбработкаКС, Истина);
	КонецЕсли;
	
	Если НЕ УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки, ПараметрыВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ЗаголовокРегламентированногоОтчета(ДатаНач, ДатаКон, Периодичность = Неопределено) Экспорт
		
	СтрПериодОтчета = ПредставлениеПериода( НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета), КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина" );
		
	Если СтрНайти(ЭтаФорма.Заголовок, СтрПериодОтчета) = 0 Тогда
		Возврат ЭтаФорма.Заголовок + " за " + СтрПериодОтчета;
	Иначе
		Возврат ЭтаФорма.Заголовок;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки, ПараметрыВыгрузки)
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	ДеревоВыгрузки = ИзвлечьСтруктуруXML();
	
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗаполнитьДанными(ДеревоВыгрузки, ПараметрыВыгрузки);
	Если НЕ ПроверитьДанные(ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстВыгрузки = ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки);
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура АктивизироватьЯчейку(Ячейка) Экспорт
	
	РегламентированнаяОтчетностьКлиент.АктивизироватьЯчейку(ЭтаФорма, Ячейка);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоРазделовОтчетаНаСервере() Экспорт
	
	СформироватьДеревоРазделовОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьДеревоРазделовОтчета(Форма)
	
	Форма["РазделыОтчета"].ПолучитьЭлементы().Очистить();
	
	Для Каждого ЭлементДереваСтраницОтчета Из Форма["мДеревоСтраницОтчета"].ПолучитьЭлементы() Цикл
		
		Если ЭлементДереваСтраницОтчета.ПоказатьСтраницу = 1 Тогда
			
			ЭлементРазделовОтчета = Форма["РазделыОтчета"].ПолучитьЭлементы().Добавить();
			ЭлементРазделовОтчета.КолонкаРазделыОтчета         = ЭлементДереваСтраницОтчета.Представление;
			ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			ЭлементРазделовОтчета.ИндексКартинки               = 1;
			ЭлементРазделовОтчета.РазделМногостраничный        = Ложь;
			ЭлементРазделовОтчета.РазделМногострочный          = Ложь;
			
			НайденноеЗначение = Неопределено;
			
			Если Форма["мСтруктураМногостраничныхРазделов"].Свойство(ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим, НайденноеЗначение) Тогда
				
				Если НЕ НайденноеЗначение = Неопределено Тогда
					
					НайденноеЗначение = Форма[НайденноеЗначение];
					
					ЭлементРазделовОтчета.ИндексКартинки        = 0;
					ЭлементРазделовОтчета.РазделМногостраничный = Истина;
					
					Для НомерСтраницы = 1 По НайденноеЗначение.Количество() Цикл
						
						СтраницаРазделаОтчета = ЭлементРазделовОтчета.ПолучитьЭлементы().Добавить();
						
						СтраницаРазделаОтчета.КолонкаРазделыОтчета              = "Стр. " + НомерСтраницы;
						СтраницаРазделаОтчета.КолонкаРазделыОтчетаСокрНаим      = ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим;
						СтраницаРазделаОтчета.КолонкаНомерСтраницыРазделаОтчета = НомерСтраницы;
						СтраницаРазделаОтчета.ИндексКартинки                    = 1;
						СтраницаРазделаОтчета.РазделМногостраничный             = ЭлементРазделовОтчета.РазделМногостраничный;
						СтраницаРазделаОтчета.РазделМногострочный               = ЭлементРазделовОтчета.РазделМногострочный;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыОтчетаПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено
	 ИЛИ Элемент.ТекущаяСтрока = СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	
	Если СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере Тогда
		
		Если Элемент.ТекущиеДанные.РазделМногостраничный Тогда
			
			Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = ?(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = Неопределено
															        ИЛИ Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = 0, 1, Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			
		КонецЕсли;
		
		ВывестиМакетСтраницыВТабличныйДокументНаСервере(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим, Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		
	Иначе
		
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
		
	КонецЕсли;
	
	КМенюРО = Элементы.РазделыОтчета.КонтекстноеМеню;
	Если Элемент.ТекущиеДанные.РазделМногостраничный Тогда
		Элемент.Развернуть(Элемент.ТекущаяСтрока);
		КМенюРО.Видимость = Истина;
		
		Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
		ИначеЕсли Элемент.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы().Количество() = 1 Тогда
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
		Иначе
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Истина;
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
		КонецЕсли;
		
		Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим <> "Раздел1" Тогда
			КМенюРО.Видимость = Ложь;
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
		КонецЕсли;
	Иначе
		КМенюРО.Видимость = Ложь;
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Титульный" Тогда
		Элементы.Обновить.Доступность                  = Истина;
	Иначе
		Элементы.Обновить.Доступность                  = Ложь;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Сведения" Тогда
		
		Если ЭтаФорма.СтруктураДанныхТитульный.ПоМесту = "112"
			И Не ЗначениеЗаполнено(ЭтаФорма.СтруктураДанныхТитульный.ИНН1) Тогда
			
			ЗаполнитьФИОРазделаСведения();
			
		Иначе
			
			ЭтаФорма.ТабличныйДокумент.Области["ФизлицоФамилия"].Значение  = "";
			ЭтаФорма.ТабличныйДокумент.Области["ФизлицоИмя"].Значение      = "";
			ЭтаФорма.ТабличныйДокумент.Области["ФизлицоОтчество"].Значение = "";
			
		КонецЕсли;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.СпрятатьСсылкуУдалитьСтраницу(ЭтаФорма);
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеРаздела(НаимРаздела, ОчищатьРазделЕслиЕстьМногострочность, ИзменятьАктивнуюСтраницу = Истина)
	
	// Многостраничные разделы.
	Если  НаимРаздела = "Раздел1" Тогда
		
		ТаблицаСтраницРаздела = Неопределено;
		
		мСтруктураМногостраничныхРазделов.Свойство(НаимРаздела, ТаблицаСтраницРаздела);
		
		ТаблицаСтраницРаздела = ЭтаФорма[ТаблицаСтраницРаздела];
		
		СтрТаблицыСтраниц = ТаблицаСтраницРаздела.НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина));
		
		Если СтрТаблицыСтраниц.Количество() > 0 Тогда
			
			СтрТаблицаСтраницы = СтрТаблицыСтраниц[0];
			
			// Сохраним данные активной страницы, с присвоением Представления страницы и с очистной многострочных частей (Истина).
			РегламентированнаяОтчетностьКлиентСервер.СохранитьДанныеМногостраничногоРазделаВактивнойСтранице(ЭтаФорма, НаимРаздела, ОчищатьРазделЕслиЕстьМногострочность);
			
			СтрТаблицаСтраницы.АктивнаяСтраница = НЕ ИзменятьАктивнуюСтраницу;
			
		КонецЕсли;

	// Обычные разделы.
	Иначе
		
		ЭтаФорма["СтруктураДанных" + НаимРаздела] = СобратьДанныеТекущегоТаблПоля(ЭтаФорма, "ТабличныйДокумент");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиМакетСтраницыВТабличныйДокументНаСервере(ИмяТекРаздела, НомерСтраницыРазделаОтчета)
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела, Истина);
	
	ВывестиМакетВТаблДокНаСервере(ИмяТекРаздела, НомерСтраницыРазделаОтчета);
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяТекРаздела;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиМакетВТаблДокНаСервере(ИмяТекРаздела, НомерСтраницыРазделаОтчета)
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(
		Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела));
	
	// Многостраничные разделы.
	Если ИмяТекРаздела = "Раздел1" Тогда
		
		СтруктураДанных = Новый Структура;
		
		НаимТаблицыСтраницы = мСтруктураМногостраничныхРазделов[ИмяТекРаздела];
		
		СписокДанных = ЭтаФорма[НаимТаблицыСтраницы][НомерСтраницыРазделаОтчета - 1].Данные;
		
		Для каждого ТаблицаСтраницы Из ЭтаФорма[НаимТаблицыСтраницы] Цикл
			ТаблицаСтраницы.АктивнаяСтраница = Ложь;
		КонецЦикла;
		
		ЭтаФорма[НаимТаблицыСтраницы][НомерСтраницыРазделаОтчета - 1].АктивнаяСтраница = Истина;
		
		Если СписокДанных.Количество() > 0 Тогда
			СтруктураДанных = СписокДанных[0].Значение;
		КонецЕсли;
		
		Для Каждого ЭлСтруктуры Из СтруктураДанных Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено И Обл.СодержитЗначение Тогда 
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
		Обл = ТабличныйДокумент.Области.Найти("УдалитьСтраницуЗначок");
		Если Обл <> Неопределено Тогда 
			Если ЭтаФорма[НаимТаблицыСтраницы].Количество() = 1 Тогда 
				Обл.Гиперссылка = Ложь;
				Обл.Текст = "";
				Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
				Обл.Гиперссылка = Ложь;
				Обл.Текст = "";
			Иначе
				Обл.Гиперссылка = Истина;
				Обл.Текст = "х";
				Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
				Обл.Гиперссылка = Истина;
				Обл.Текст = "Удалить страницу";
			КонецЕсли;
		КонецЕсли;
	// Обычные разделы.
	Иначе
		
		Для Каждого ЭлСтруктуры Из ЭтаФорма["СтруктураДанных" + ИмяТекРаздела] Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено И Обл.СодержитЗначение Тогда 
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИмяТекРаздела <> "Титульный" Тогда
		
		ЗаполнитьПоказателиЗначениямиПоУмолчанию(ИмяТекРаздела);
		
		УстановитьФорматВыводаНаСервере(ИмяТекРаздела);
		
		УстановитьЦветФонаЯчейкиНаСервере(,, ИмяТекРаздела);
		
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтаФорма, ИмяТекРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказателиЗначениямиПоУмолчанию(НаимРаздела)
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтчет(Команда)
	
	РегламентированнаяОтчетностьКлиент.МеханизмыОчисткиРегламентированныхОтчетов(ЭтаФорма, "ОчиститьВесьОтчет");
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОтчет(Команда)
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	
	ВставитьДополнительнуюСтраницуНаСервере(Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	Обл = ТабличныйДокумент.Области["УдалитьСтраницуЗначок"];
	Обл.Гиперссылка = Истина;
	Обл.Текст = "х";
	Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
	Обл.Гиперссылка = Истина;
	Обл.Текст = "Удалить страницу";
	
КонецПроцедуры

&НаСервере
Процедура ВставитьДополнительнуюСтраницуНаСервере(ИмяТекущейСтраницыПанели = Неопределено )
	
	ИзменитьТаблицуПараметровАвтозаполнения(1, ИмяТекущейСтраницыПанели);
	
	СтруктураРеквизитовФормы.ОтключитьВыполнениеРасчета = Истина;
	
	РегламентированнаяОтчетность.ВставитьДополнительнуюСтраницуНаСервере(ЭтаФорма, ИмяТекущейСтраницыПанели);
	РегламентированнаяОтчетность.ПослеВставкиДополнительнойСтраницыНаСервере(ЭтаФорма, ИмяТекущейСтраницыПанели);
	
	СтруктураРеквизитовФормы.ОтключитьВыполнениеРасчета = Ложь;
	
	СохранитьДанныеРаздела(ИмяТекущейСтраницыПанели, Ложь, Ложь);
	
	РасчетНаСервере(ИмяТекущейСтраницыПанели);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
	УстановитьДоступностьОбластей(ЭтаФорма, ИмяТекущейСтраницыПанели);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДополнительнуюСтраницуНаСервере(ИмяТекущейСтраницыПанели = Неопределено)
	
	ИзменитьТаблицуПараметровАвтозаполнения(-1, ИмяТекущейСтраницыПанели);
	
	РегламентированнаяОтчетность.УдалитьДополнительнуюСтраницуНаСервере(ЭтаФорма, ИмяТекущейСтраницыПанели);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
	УстановитьДоступностьОбластей(ЭтаФорма, ИмяТекущейСтраницыПанели);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтраницуЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='Удалить текущую страницу?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.РазделыОтчета.ТекущиеДанные;
	
	КопияТекущиеДанные = ТекущиеДанные;
	
	ТекущиеДанные = ТекущиеДанные.ПолучитьРодителя();
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПолучитьЭлементы().Количество() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтраницаРазделаПослеУдаления = Неопределено;
	Если КопияТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = ТекущиеДанные.ПолучитьЭлементы().Количество() Тогда
		ТекущаяСтраницаРазделаПослеУдаления = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(ТекущиеДанные.ПолучитьЭлементы(), "КолонкаНомерСтраницыРазделаОтчета", КопияТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета - 1);
	КонецЕсли;
	
	УдалитьДополнительнуюСтраницуНаСервере(Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	
	ТекущиеДанные.ПолучитьЭлементы().Удалить(ТекущиеДанные.ПолучитьЭлементы().Индекс(КопияТекущиеДанные));
	
	НомерСтраницы = 1;
	
	Для Каждого СтраницаРаздела Из ТекущиеДанные.ПолучитьЭлементы() Цикл
		
		СтраницаРаздела.КолонкаРазделыОтчета              = "Стр. " + НомерСтраницы;
		СтраницаРаздела.КолонкаНомерСтраницыРазделаОтчета = НомерСтраницы;
		
		НомерСтраницы = НомерСтраницы + 1;
		
	КонецЦикла;
	
	Если НЕ ТекущаяСтраницаРазделаПослеУдаления = Неопределено Тогда
		Элементы.РазделыОтчета.ТекущаяСтрока = ТекущаяСтраницаРазделаПослеУдаления.ПолучитьИдентификатор();
	КонецЕсли;
	Обл = ТабличныйДокумент.Области.Найти("УдалитьСтраницуЗначок");
	Если Обл <> Неопределено Тогда 
		Если ТекущиеДанные.ПолучитьЭлементы().Количество() = 1 Тогда 
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
			Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
		Иначе
			Обл.Гиперссылка = Истина;
			Обл.Текст = "х";
			Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
			Обл.Гиперссылка = Истина;
			Обл.Текст = "Удалить страницу";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СобратьДанныеТекущегоТаблПоляНаКлиенте(ИмяТабличногоПоля) Экспорт
	
	Возврат СобратьДанныеТекущегоТаблПоля(ЭтаФорма, ИмяТабличногоПоля);
	
КонецФункции

&НаСервере
Процедура ОбновитьСтруктуруМногострочногоРазделаНаСервере(ИмяГруппы) Экспорт
	
	ОбновитьСтруктуруМногострочногоРаздела(ЭтаФорма, ИмяГруппы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтруктуруМногострочногоРазделаНаКлиенте(ИмяГруппы) Экспорт
	
	ОбновитьСтруктуруМногострочногоРаздела(ЭтаФорма, ИмяГруппы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСтруктуруМногострочногоРаздела(Форма, ИмяГруппы)
	
	Перем СтруктураГруппы;
	
	Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
	
	СтруктураГруппы = Форма[СтруктураГруппы];
	
	ТекТабличноеПолеИмя = "ТабличныйДокумент";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];
	
	Для НСтр = 1 По СтруктураГруппы.Количество() Цикл
		
		ТекСтрокаТаблицы = СтруктураГруппы[НСтр - 1];
		
		СписокИменКолонокРаздела = Форма.мСтруктураИменаКолонокРазделов[ИмяГруппы];
		
		Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
			
			ИмяКолонки = СписокИменКолонокРаздела.Получить(НомерГрафы - 1).Значение;
			
			Если СтруктураГруппы[0].Свойство(ИмяКолонки) Тогда
				
				ИмяЯчейки     = ИмяКолонки + "_" + НСтр;
				ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяЯчейки];
				
				Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
					ЗначениеЯчейки = ОбластьЯчейки.Значение;
				Иначе
					ЗначениеЯчейки = ОбластьЯчейки.Текст;
				КонецЕсли;
				
				ТекСтрокаТаблицы[ИмяКолонки] = ЗначениеЯчейки;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеЗначенийВКвадратикахНаКлиенте(Знач ИмяСтраницы) Экспорт
	
	ЗаполнениеЗначенийВКвадратиках(ЭтаФорма, ИмяСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетНаКлиенте(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтаФорма, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаСервере
Процедура РасчетНаСервере(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтаФорма, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Расчет(Форма, ИмяТекущейСтраницы = "", ОбластьИмя = "") Экспорт
	
	Перем ТаблицаБлока;
	
	Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет ИЛИ Форма.СтруктураРеквизитовФормы.мРежимПечати Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.СтруктураРеквизитовФормы.ОтключитьВыполнениеРасчета Тогда
		Возврат;
	КонецЕсли;
	
	СтраницыРаздела1 = Форма.ТаблицаСтраницыРаздел1;
	
	ЗначениеСтроки030 = 0;
	
	Для Каждого Страница Из СтраницыРаздела1 Цикл
		
		Данные = Страница.Данные[0].Значение;
		
		Если Страница.АктивнаяСтраница Тогда
			
			Строка090 = ВРег(СокрЛП(Форма.ТабличныйДокумент.Области["П000010009001"].Значение));
			
			Если Строка090 = "M1" ИЛИ Строка090 = "M1G"
			 ИЛИ Строка090 = "М1" ИЛИ Строка090 = "М1G" Тогда // учтем оба варианта: кириллицу и латиницу
				ЗначениеСтроки140 = 20000;
			ИначеЕсли ЗначениеЗаполнено(Строка090) Тогда
				ЗначениеСтроки140 = 150000;
			Иначе
				ЗначениеСтроки140 = 0;
			КонецЕсли;
			
			Форма.ТабличныйДокумент.Области["П000010014001"].Значение = ЗначениеСтроки140;
			
			Строка140 = Форма.ТабличныйДокумент.Области["П000010014001"].Значение;
			Строка150 = Форма.ТабличныйДокумент.Области["П000010015001"].Значение;
			
			ЗначениеСтроки160 = Строка140 * Строка150;
			
			Форма.ТабличныйДокумент.Области["П000010016001"].Значение = ЗначениеСтроки160;
			
			Строка130 = Форма.ТабличныйДокумент.Области["П000010013001"].Значение;
			Строка160 = Форма.ТабличныйДокумент.Области["П000010016001"].Значение;
			
			ЗначениеСтроки170 = Строка160 - Строка130;
			
			Форма.ТабличныйДокумент.Области["П000010017001"].Значение = ЗначениеСтроки170;
			
			Строка170 = Форма.ТабличныйДокумент.Области["П000010017001"].Значение;
			
		Иначе
			
			Строка090 = ВРег(СокрЛП(Данные.П000010009001));
			
			Если Строка090 = "M1" ИЛИ Строка090 = "M1G"
			 ИЛИ Строка090 = "М1" ИЛИ Строка090 = "М1G" Тогда // учтем оба варианта: кириллицу и латиницу
				ЗначениеСтроки140 = 20000;
			ИначеЕсли ЗначениеЗаполнено(Строка090) Тогда
				ЗначениеСтроки140 = 150000;
			Иначе
				ЗначениеСтроки140 = 0;
			КонецЕсли;
			
			Данные.П000010014001 = ЗначениеСтроки140;
			
			Строка140 = Данные.П000010014001;
			Строка150 = Данные.П000010015001;
			
			ЗначениеСтроки160 = Строка140 * Строка150;
			
			Данные.П000010016001 = ЗначениеСтроки160;
			
			Строка130 = Данные.П000010013001;
			Строка160 = Данные.П000010016001;
			
			ЗначениеСтроки170 = Строка160 - Строка130;
			
			Данные.П000010017001 = ЗначениеСтроки170;
			
			Строка170 = Данные.П000010017001;
			
		КонецЕсли;
		
		ЗначениеСтроки030 = ЗначениеСтроки030 + Макс(0, Строка170);
		
	КонецЦикла;
	
	Если СтраницыРаздела1[0].АктивнаяСтраница Тогда
		
		Форма.ТабличныйДокумент.Области["П000010003001"].Значение = ЗначениеСтроки030;
		
	Иначе
		
		Форма.ТаблицаСтраницыРаздел1[0].Данные[0].Значение.П000010003001 = ЗначениеСтроки030;
		Форма.ТаблицаСтраницыРаздел1[0].Данные[0].Пометка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДеревоРазделовОтчетаНаКлиенте() Экспорт
	
	СформироватьДеревоРазделовОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	Если ЭтаФорма.ТабличныйДокумент.Области["ПоМесту"].Значение <> "112" Тогда

	ЗаполнитьСведенияОбОрганизацииНаСервере();
	
	Модифицированность = Истина;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДатуВЯчейкахНаКлиенте() Экспорт
	
	ЗаполнитьДатуВЯчейках(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветФонаЯчейкиНаСервере(ИмяЯчейки = Неопределено, ВариантЗаполнения = Неопределено, ИмяТекущейСтраницыПанели = "") Экспорт
	
	УстановитьЦветФонаЯчейки(ЭтаФорма, ИмяЯчейки, ВариантЗаполнения, ИмяТекущейСтраницыПанели);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЦветФонаЯчейкиНаКлиенте(ИмяЯчейки = Неопределено, ВариантЗаполнения = Неопределено, ИмяТекущейСтраницыПанели = "") Экспорт
	
	УстановитьЦветФонаЯчейки(ЭтаФорма, ИмяЯчейки, ВариантЗаполнения, ИмяТекущейСтраницыПанели);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЦветФонаЯчейки(Форма, ИмяЯчейки = Неопределено, ВариантЗаполнения = Неопределено, ИмяТекущейСтраницыПанели = "")
	
	Перем ЦветФона;
	Перем Комментарий;

	// Не нужно разукрашивать табличные поля, если открывается без открытия формы (например печать или просмотр).
	Если Форма.СтруктураРеквизитовФормы.мБезОткрытияФормы Или Форма.СтруктураРеквизитовФормы.мРежимПечати Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ИмяЯчейки = Неопределено Тогда

		ИмяПоляТаблДокумента = "ТабличныйДокумент";

		Ключ = "_" + ВариантЗаполнения;
		Форма.мСтруктураЦветовРаскраски.Свойство(Ключ, ЦветФона);

		Если ВариантЗаполнения = 4 Тогда
			Форма[ИмяПоляТаблДокумента].Области[ИмяЯчейки].Защита = Истина;
		Иначе
			Форма[ИмяПоляТаблДокумента].Области[ИмяЯчейки].Защита = Ложь;
		КонецЕсли;

		// Установим цвет ячейки.
		Форма[ИмяПоляТаблДокумента].Области[ИмяЯчейки].ЦветФона = ЦветФона;

	Иначе
		
		// Устанавливаем цвет фона всех автозаполняемых ячеек активной страницы.
		ТаблицаВариантыЗаполнения = ПолучитьТаблицуВариантовЗаполнения(Форма, ИмяТекущейСтраницыПанели);
		Если ТаблицаВариантыЗаполнения = Неопределено Тогда
			Возврат;
		КонецЕсли;

		Для Каждого Строка Из ТаблицаВариантыЗаполнения Цикл
			ИмяПоказателя     = Строка.КодПоказателя;
			ВариантЗаполнения = Строка.ВариантЗаполнения;
			Комментарий       = Строка.Комментарий;
			КодПоказателяПоСтруктуре = Строка.КодПоказателяПоСтруктуре;
			
			КолвоСтрокВМногострочнойЧасти = ПоказательВходитВМногострочнуюЧасть(Форма, ИмяПоказателя);
			
			Если КолвоСтрокВМногострочнойЧасти > 0 Тогда
				Многострочность = Истина;
				БазоваяЧасть = ИмяПоказателя;
			Иначе
				Многострочность = Ложь;
				КолвоСтрокВМногострочнойЧасти = 1;
			КонецЕсли;
			
			Для Инд = 1 по КолвоСтрокВМногострочнойЧасти Цикл
				
				Если Многострочность Тогда
					ИмяПоказателя = БазоваяЧасть + "_" + Строка(Инд);
				КонецЕсли;
				
				ТекОбластьЯчеек = Форма.ТабличныйДокумент.Области[ИмяПоказателя];
				Если (Не ПустаяСтрока(Комментарий)) ИЛИ (Не ПустаяСтрока(ТекОбластьЯчеек.Примечание.Текст)) Тогда
					ТекОбластьЯчеек.Примечание.Текст = Комментарий;
				КонецЕсли;
				
				Ключ = "_" + ВариантЗаполнения;
				Форма.мСтруктураЦветовРаскраски.Свойство(Ключ, ЦветФона);
				
				Если ВариантЗаполнения = 4 Тогда
					Форма.ТабличныйДокумент.Области[ИмяПоказателя].Защита = Истина;
				Иначе
					Форма.ТабличныйДокумент.Области[ИмяПоказателя].Защита = Ложь;
				КонецЕсли;
				
				Форма.ТабличныйДокумент.Области[ИмяПоказателя].ЦветФона = ЦветФона;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ОткрытьФормуВыбораСтраниц("ВыбратьДляНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФорму(ЭтаФорма, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланк(Команда)
	
	Отказ = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьБланкЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередПечатьюРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланкЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Команда = ДополнительныеПараметры.Команда;
		
	Печать(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСменыЕдИзмеренияИТочности()
	
	ПроверитьТочность();
	
	// Итоговые поля надо пересчитывать, потому что при расчете они округлются
	// в соответствии с установленной единицей изменения и точностью.
	#Если ВебКлиент Тогда
		УстановитьФорматВыводаНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	#Иначе
		УстановитьФорматВыводаНаКлиенте(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	#КонецЕсли
	
	РасчетНаКлиенте(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТочность()
	
	Если СтруктураРеквизитовФормы.ЕдиницаИзмерения
		= ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда

		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 2 Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1: при выводе сумм в рублях точность не может превышать 2 знака'"), ЭтаФорма.Заголовок);

			Сообщение.Сообщить();
			
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 2;
			
		КонецЕсли;

	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения
		= ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000 Тогда

		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 3 Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1: при выводе сумм в тысячах рублей точность не может превышать 3 знака'"), ЭтаФорма.Заголовок);

			Сообщение.Сообщить();
			
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 3;
			
		КонецЕсли;

	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения
		= ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000000 Тогда

		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 6 Тогда
			
			Сообщение = Новый СообщениеПользователю;

			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1: при выводе сумм в миллионах рублей точность не может превышать 6 знаков'"), ЭтаФорма.Заголовок);

			Сообщение.Сообщить();
			
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 6;
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьФорматВыводаНаСервере(НаимРаздела)
	
	УстановитьФорматВывода(ЭтаФорма, НаимРаздела);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФорматВыводаНаКлиенте(НаимРаздела)
	
	УстановитьФорматВывода(ЭтаФорма, НаимРаздела);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьФорматВывода(Форма, НаимРаздела) Экспорт
	
	Перем СтруктураГруппы;
	Перем РазмерностьПрописьюТекст;

	Если Форма.СтруктураРеквизитовФормы.ЕдиницаИзмерения
			= Форма.ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
			
			Форма.СтруктураРеквизитовФормы.мДелитель = 1;
			РазмерностьПрописьюТекст = "в рублях";
			Форма.СтруктураРеквизитовФормы.мСтрокаФормата = "ЧЦ = 14; ЧДЦ = "
				+ Форма.СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 0";
		
		ИначеЕсли Форма.СтруктураРеквизитовФормы.ЕдиницаИзмерения
			= Форма.ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000 Тогда
			
			Форма.СтруктураРеквизитовФормы.мДелитель = 1000;
			РазмерностьПрописьюТекст = "в тыс. рублей";
			Форма.СтруктураРеквизитовФормы.мСтрокаФормата = "ЧЦ = 14; ЧДЦ = "
				+ Форма.СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 3";
		
		ИначеЕсли Форма.СтруктураРеквизитовФормы.ЕдиницаИзмерения
			= Форма.ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000000 Тогда
			
			Форма.СтруктураРеквизитовФормы.мДелитель = 1000000;
			РазмерностьПрописьюТекст = "в млн. рублей";
			Форма.СтруктураРеквизитовФормы.мСтрокаФормата = "ЧЦ = 14; ЧДЦ = "
				+ Форма.СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 6";
		
	КонецЕсли;
		
	Для Каждого СтрПоказатели Из Форма.мТаблицаСоставПоказателей Цикл

		Если НЕ НаимРаздела = СтрПоказатели.ИмяПоляТаблДокумента Тогда
			Продолжить;
		КонецЕсли;
		
		КодПоказателя        = СокрП(СтрПоказатели.КодПоказателяПоСоставу);
		ПризнМногострочность = СокрП(СтрПоказатели.ПризнМногострочности);
		КодПоказателяПоСтруктуре = СокрП(СтрПоказатели.КодПоказателяПоСтруктуре);

		Если КодПоказателя = "===" Тогда
			Прервать;
		КонецЕсли;

		Если (Лев(КодПоказателя, 2) = "//") ИЛИ (КодПоказателя = "###") ИЛИ ПустаяСтрока(КодПоказателя) Тогда
			Продолжить;
		КонецЕсли;

		КодПоказателяВФорме = СокрП(СтрПоказатели.КодПоказателяПоФорме);

		ИмяПоказателя = КодПоказателя;
		Если Не ПустаяСтрока(КодПоказателяВФорме) Тогда
			ИмяПоказателя = КодПоказателяВФорме;
		КонецЕсли;

		ТипДанныхПоказателя = СокрП(СтрПоказатели.ТипДанныхПоказателя);
		
		Если (ТипДанныхПоказателя = "E" ИЛИ ТипДанныхПоказателя = "Е") И ПустаяСтрока(КодПоказателяПоСтруктуре) Тогда
			
			ТекТабличноеПоле = Форма.ТабличныйДокумент;
			
			Если ПризнМногострочность <> "/" Тогда
				ФорматируемаяОбласть = ТекТабличноеПоле.Области[ИмяПоказателя];
				ФорматируемаяОбласть.ТипЗначения = Форма.СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ;
				ФорматируемаяОбласть.Формат = Форма.СтруктураРеквизитовФормы.мСтрокаФормата;
			Иначе
				// Определяем кол-во строк многострочного раздела
				// и применяем процедуру форматирования к данной графе
				// по всем строкам.
				ИмяГруппы = Лев(ИмяПоказателя, 11);
				Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
				
				СтруктураГруппы = Форма[СтруктураГруппы];
				
				Для НСтр = 1 По СтруктураГруппы.Количество() Цикл
					ФорматируемаяОбласть = ТекТабличноеПоле.Области[ИмяПоказателя + "_" + НСтр];
					ФорматируемаяОбласть.ТипЗначения = Форма.СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ;
					ФорматируемаяОбласть.Формат = Форма.СтруктураРеквизитовФормы.мСтрокаФормата;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗагрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзФайлаОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РегламентированнаяОтчетностьЗагрузкаКлиент.ЗагрузитьИзФайлаОтчет(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаОтчетаИзФайла(ДанныеДляЗагрузки) Экспорт
	
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон(НСтр("ru='Отчет ""%1"" не сохранен.'"), ЭтотОбъект.Заголовок);
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки)
	
	СформироватьСтруктуруПоказателей();
	
	ПараметрыОтчета = СформироватьСтруктуруПараметров();
	
	ДеревоДляЗагрузки = ИзвлечьСтруктуруXML();
	
	Если НЕ РегламентированнаяОтчетностьЗагрузка.ЗагрузкаОтчетаИзФайла(
		ЭтотОбъект, ПараметрыОтчета, ДанныеДляЗагрузки, ДеревоДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВыгрузкуОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчета()
	
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Организация не выбрана! Выгрузка невозможна.'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуОтчетаЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.Проверить(СпДокОсн);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
				
		Возврат;
		
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	РегламентированнаяОтчетность.ПриЗакрытииРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СтрНайти(Заголовок, СтруктураРеквизитовФормы.СтрПериодОтчета) = 0 Тогда
		Заголовок = Заголовок + " от " + СтруктураРеквизитовФормы.СтрПериодОтчета;
	КонецЕсли;
	
	ОргСтр = " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")";
	Если СтрНайти(Заголовок, ОргСтр) = 0 Тогда
		Заголовок = Заголовок + ОргСтр;
	КонецЕсли;
	

	Заголовок = Заголовок + ?(СтрНайти(ЭтаФорма.ИмяФормы, "Внешний") > 0, " - внешний отчет", "");

	ПодключитьОбработчикОжидания("ВыполнитьПроверкуПередОткрытием", 0.1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуПередОткрытием()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОткрытиемФормыРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОпределитьИдМногострочногоРазделаПоТабличномуПолю(Форма, ИмяТекущейСтраницы) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПоказательВходитВМногострочнуюЧасть(Форма, ИмяПоказателя)
	
	ИмяГруппы = Лев(ИмяПоказателя, 11);
	
	СтруктураГруппы = Неопределено;
	
	Если НЕ Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы) Тогда
		Возврат 0;
	Иначе
		СтруктураГруппы = Форма[СтруктураГруппы];
		Возврат СтруктураГруппы.Количество();
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТаблицуВариантовЗаполнения(Форма, ИмяСтраницыПанели, ПолучитьЭталонную = Ложь)

	#Если НаКлиенте Тогда
		Возврат РегламентированнаяОтчетностьКлиент.ПолучитьТаблицуВариантовЗаполненияНаКлиенте(Форма, ИмяСтраницыПанели, ПолучитьЭталонную);
	#Иначе
		Возврат РегламентированнаяОтчетностьВызовСервера.ПолучитьТаблицуВариантовЗаполненияНаСервере(Форма, ИмяСтраницыПанели, ПолучитьЭталонную);
	#КонецЕсли
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УдалитьДополнительнуюСтроку(Форма, СпециальноеДобавление = Ложь, ИмяКолонкиНомера = Неопределено, ТекущаяСтраница) Экспорт
	Перем ИсходноеКоличествоСтрокГруппы;
	Перем СтруктураГруппы;
	
	// Сначала выполним проверку на активную страницу панели формы,
	// которая содержит многострочный раздел.
	#Если НаКлиенте Тогда
		ИмяГруппы = Форма.ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаКлиенте(ТекущаяСтраница);
	#Иначе
		ИмяГруппы = Форма.ОпределитьИдМногострочногоРазделаПоАктивнойСтраницеНаСервере(ТекущаяСтраница);
	#КонецЕсли
	
	// Исходное количество строк группы.
	Форма.мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, ИсходноеКоличествоСтрокГруппы);
	
	Форма.мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);
	
	ТекТабличноеПолеИмя = "ТабличныйДокумент";
	
	ТекТабличноеПоле = Форма[ТекТабличноеПолеИмя];
	ТекущаяОбласть = Форма.Элементы[ТекТабличноеПолеИмя].ТекущаяОбласть;
	ИмяЯчейки      = ТекущаяОбласть.Имя;
	
	#Если НаКлиенте ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
		ИмяГруппы = РегламентированнаяОтчетностьКлиент.РазделТекущейОбласти(Форма, ТекущаяОбласть);
	#Иначе
		ИмяГруппы = РегламентированнаяОтчетностьВызовСервера.РазделТекущейОбластиНаСервере(Форма, ТекущаяОбласть);
	#КонецЕсли
	
	// Предварительно обновим структуру многострочных разделов.
	РегламентированнаяОтчетностьКлиентСервер.ОбновитьСтруктуруМногострочногоРаздела(Форма, ИмяГруппы);
	
	// Номер строки многострочного раздела определим по имени выделенной ячейки.
	НомУдаляемойСтроки = Число( Сред( ИмяЯчейки, СтрНайти( ИмяЯчейки, "_") + 1));
	НомерСтрокиТаблицы = НомУдаляемойСтроки - 1; // нумерация строк в таблице значений начинается с нуля
	СтруктураГруппы = Форма[СтруктураГруппы];
	
	ИмяПервойЯчейки = Форма.мСтруктураИменаКолонокРазделов[ИмяГруппы][0].Значение;
	
	Если СтруктураГруппы.Количество() > ИсходноеКоличествоСтрокГруппы Тогда
		// Удаляется добавленная строка.
		ИмяПервойЯчейкиУдаляемойСтроки= ИмяПервойЯчейки + "_" + НомУдаляемойСтроки;
		// Область первой ячейки удаляемой строки многострочного раздела.
		ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяПервойЯчейкиУдаляемойСтроки];
		
		НастройкиМнгЧ = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСвойствоРаздела(
			Форма, ТекущаяСтраница, "МногострочностьВРазделе").НайтиСтроки(Новый Структура("ИдГруппы", ИмяГруппы))[0];
		ВысотаСтроки = НастройкиМнгЧ.ВысотаСтроки;
		
		// Номера строк удаляемой области.
		НомерВерхЯчейкиОбласти = ОбластьЯчейки.Верх;
		НомерНижнЯчейкиОбласти = ОбластьЯчейки.Верх + ВысотаСтроки - 1;
		
		РегламентированнаяОтчетностьВызовСервера.СпециальногоУдаленияСтроки(ТекТабличноеПоле, ТекТабличноеПолеИмя, ИмяГруппы, НомерВерхЯчейкиОбласти, НомерНижнЯчейкиОбласти);
		
		Форма[ТекТабличноеПолеИмя] = ТекТабличноеПоле;
		
		КолвоСдвигаемыхСтрок = СтруктураГруппы.Количество() - НомУдаляемойСтроки;
		
		// Обновим имена ячеек сдвинутых строк.
		Если КолвоСдвигаемыхСтрок > 0 Тогда
			
			Для НСтр = НомУдаляемойСтроки + 1 По СтруктураГруппы.Количество() Цикл
				
				ТекСтрока = СтруктураГруппы[НСтр-1];
				
				СписокИменКолонокРаздела = Форма.мСтруктураИменаКолонокРазделов[ИмяГруппы];
				
				Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
					
					КолонкаИмя = СписокИменКолонокРаздела.Получить(НомерГрафы - 1).Значение;
					
					Если СтруктураГруппы[0].Свойство(КолонкаИмя) Тогда
						
						ИмяСдвинутойЯчейки = КолонкаИмя + "_" + НСтр;
						НовоеИмяСдвинутойЯчейки = КолонкаИмя + "_" + (НСтр - 1);
						
						ОбластьСдвинутойЯчейки     = ТекТабличноеПоле.Области[ИмяСдвинутойЯчейки];
						ОбластьСдвинутойЯчейки.Имя = НовоеИмяСдвинутойЯчейки;
						
						Если ОбластьСдвинутойЯчейки.СодержитЗначение <> Истина Тогда
							// Обновляем порядковый номер строки.
							
							СтарыйНомер = Число(ТекСтрока[КолонкаИмя]);
							НовыйПорядковыйНомер = Строка(Макс(СтарыйНомер - 1, 0));
							ОбластьСдвинутойЯчейки.Текст = НовыйПорядковыйНомер + ".";
							
							// Обновляем значение элемента таблицы значений.
							ТекСтрока[КолонкаИмя] = НовыйПорядковыйНомер;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;
		
		// Обновляем структуру многострочного раздела.
		СтруктураГруппы.Удалить(НомерСтрокиТаблицы);
		
	Иначе
		// Строка не удаляется в форме табличного документа,
		// должнен осуществляться сдвиг строк.
		
		// Обновляем структуру многострочного раздела
		// методом удаления выбранной строки и добавления пустой строки.
		СтруктураГруппы.Удалить(НомерСтрокиТаблицы);
		
		ДобавляемаяСтрока = СтруктураГруппы.Добавить();
		
		СписокИменКолонокРаздела = Форма.мСтруктураИменаКолонокРазделов[ИмяГруппы];
		
		// Обновляем порядковые номера строк, выводимых в табличный документ.
		Для Каждого СтрокаТаблицы Из СтруктураГруппы Цикл
			
			НомерСтрокиВТаблице = СтруктураГруппы.Индекс(СтрокаТаблицы);
			НомерСтрокиВФормеТаблицы = Формат(НомерСтрокиВТаблице + 1, "ЧГ=0");
			
			Для НомерГрафы = 1 По Форма.мСтруктураКолвоКолонокРазделов[ИмяГруппы] Цикл
				
				КолонкаТаблицыИмя = СписокИменКолонокРаздела.Получить(НомерГрафы - 1).Значение;
				
				Если СтруктураГруппы[0].Свойство(КолонкаТаблицыИмя) Тогда
					
					ИмяЯчейки                = КолонкаТаблицыИмя + "_" + НомерСтрокиВФормеТаблицы;
					ОбластьЯчейкиТаблицы     = ТекТабличноеПоле.Области[ИмяЯчейки];
					
					Если ОбластьЯчейкиТаблицы.СодержитЗначение <> Истина Тогда
						
						ПервыйНомерВГруппе = 1;
						
						// Обновляем порядковый номер строки.
						НовыйПорядковыйНомер = Строка(ПервыйНомерВГруппе + НомерСтрокиВТаблице);
						
						СтрокаТаблицы[КолонкаТаблицыИмя] = НовыйПорядковыйНомер;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		// Данные в многострочном блоке обновляются в декларациях.
		// Обновляем экранную форму табличного документа.
		#Если НаКлиенте Тогда
			Форма.ВывестиРазделВТабличныйДокументНаКлиенте(ИмяГруппы, СтруктураГруппы);
		#Иначе
			Форма.ВывестиРазделВТабличныйДокументНаСервере(ИмяГруппы, СтруктураГруппы);
		#КонецЕсли
		
	КонецЕсли;
	
	Расчет(Форма, ТекущаяСтраница);
	
	// Назначим текущей областью таблицы первую редактируемую ячейку
	// удаленной строки, если ее порядковый номер меньше кол-ва строк
	// многострочного раздела, или последней строки раздела в противном случае.
	
	// Определяем текущую область таблицы.
	НомТекущейСтроки  = Мин(НомУдаляемойСтроки, СтруктураГруппы.Количество());
	
	ИмяТекущейОбласти = ИмяПервойЯчейки + "_" + НомТекущейСтроки;
	
	Форма.Элементы[ТекТабличноеПолеИмя].ТекущаяОбласть = ТекТабличноеПоле.Области[ИмяТекущейОбласти];
	
	// Установим фокус на поле табличн. документа.
	ТекущийЭлемент = Форма.Элементы[ТекТабличноеПолеИмя];
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОчисткаРегламентированногоОтчетаНаСервере(ИмяСтраницы, ЗапускатьОтдельнуюОбработкуПослеОчисткиЛиста, РежимОчистки, Многостраничность, КолВоСтраницВРазделе) Экспорт
	
	УдалятьсяВсеДопЭкземпляры = Ложь;
	
	Если СтрНайти(РежимОчистки, "ОчиститьТекущийРаздел") > 0 Тогда
		
		Если (Многостраничность) И (КолВоСтраницВРазделе > 1) Тогда
			
			РегламентированнаяОтчетностьКлиентСервер.ОчиститьПоказателиОтчетаЗаполняемыеИзИБ(ЭтаФорма, ИмяСтраницы);

			УдалятьсяВсеДопЭкземпляры = Истина;
			
		Иначе
			
			ОчиститьТабличноеПолеНаСервере(ИмяСтраницы);
			
		КонецЕсли;
		
		Если ИмяСтраницы = "Раздел1" Тогда
			
			УстановитьДоступностьОбластей(ЭтаФорма, ИмяСтраницы);
			
		КонецЕсли;
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
	ИначеЕсли СтрНайти(РежимОчистки, "ОчиститьТекущийЭкземплярМногостраничногоРаздела") > 0 Тогда
		
		СтруктураРеквизитовФормы.ОтключитьВыполнениеРасчета = Истина;
		
		ОчиститьТабличноеПолеНаСервере(ИмяСтраницы);
		
		СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела, Истина, Ложь);
		
		СтруктураРеквизитовФормы.ОтключитьВыполнениеРасчета = Ложь;
		
	КонецЕсли;
	
	Если ИмяСтраницы = "Титульный" Тогда
		Если Элементы.Найти("ДатаПодписи") = Неопределено Тогда
			Область = ТабличныйДокумент.Области.Найти("ДатаПодписи");
			Если НЕ Область = Неопределено Тогда
				Если ТипЗнч(Область.Значение) = Тип("Строка") Тогда
					ДатаПодписи = Лев(СтрЗаменить(Область.Значение, ".", ""), 8);
				ИначеЕсли ТипЗнч(Область.Значение) = Тип("Дата") Тогда
					Если ЗначениеЗаполнено(Область.Значение) Тогда
						ДатаПодписи = Лев(СтрЗаменить(Формат(Область.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
					Иначе
						ДатаПодписи = "        ";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПослеОчисткиРегламентированногоОтчета(
		ЭтаФорма, ИмяСтраницы, ЗапускатьОтдельнуюОбработкуПослеОчисткиЛиста);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаРегламентированногоОтчетаНаКлиенте(ИмяСтраницы, ЗапускатьОтдельнуюОбработкуПослеОчисткиЛиста, РежимОчистки, Многостраничность, КолВоСтраницВРазделе) Экспорт
	
	УдалятьсяВсеДопЭкземпляры = Ложь;
	
	Если СтрНайти(РежимОчистки, "ОчиститьТекущийРаздел") > 0 Тогда
		
		Если (Многостраничность) И (КолВоСтраницВРазделе > 1) Тогда

			РегламентированнаяОтчетностьКлиентСервер.ОчиститьПоказателиОтчетаЗаполняемыеИзИБ(ЭтаФорма, ИмяСтраницы);

			УдалятьсяВсеДопЭкземпляры = Истина;
			
		Иначе

			ОчиститьТабличноеПолеНаКлиенте(ИмяСтраницы);

		КонецЕсли;
		
		СформироватьДеревоРазделовОтчетаНаКлиенте();
		
	ИначеЕсли СтрНайти(РежимОчистки, "ОчиститьТекущийЭкземплярМногостраничногоРаздела") > 0 Тогда
		
		ОчиститьТабличноеПолеНаКлиенте(ИмяСтраницы);
		
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПослеОчисткиРегламентированногоОтчета(
		ЭтаФорма, ИмяСтраницы, ЗапускатьОтдельнуюОбработкуПослеОчисткиЛиста);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораИФНС()
	
	НалоговыйОрган = СокрЛП(ТабличныйДокумент.Области.НалоговыйОрган.Значение);
	КПП = СокрЛП(ТабличныйДокумент.Области.КПП1.Значение);
	ЗначенияДляОтбора = Новый Массив;
	ЗначенияДляОтбора.Добавить(Новый Структура("КодНО, КПП", НалоговыйОрган, КПП));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыФормы.Вставить("ЗначенияДляОтбора", ЗначенияДляОтбора);
	
	ФормаВыбораНалоговогоОргана = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени(
		"ФормаВыбораНалоговогоОргана", ПараметрыФормы, ЭтаФорма);
	
	Если ФормаВыбораНалоговогоОргана.ТаблицаНО.Количество() <> 0 Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораИФНСЗавершение", ЭтотОбъект);
		ФормаВыбораНалоговогоОргана.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбораНалоговогоОргана.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбораНалоговогоОргана.Открыть();
		
	ИначеЕсли НЕ ЗначениеЗаполнено(НалоговыйОрган) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Код налогового органа необходимо задать в справочнике ""Организации"".'");
		Сообщение.Сообщить();
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Для выбора инспекции, необходимо завести соответствующую запись в справочнике ""Регистрации в налоговом органе"".'");
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораИФНСЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		
		ВыбранныйКодНО = РезультатВыбора.КодНО;
		ДлинаКодаНО = СтрДлина(ВыбранныйКодНО);
		
		Для Инд = ДлинаКодаНО + 1 По 4 Цикл
			ВыбранныйКодНО = "0" + ВыбранныйКодНО;
		КонецЦикла;
		
		ТабличныйДокумент.Области["НалоговыйОрган"].Значение = ВыбранныйКодНО;
		
		ТабличныйДокумент.Области["КПП1"].Значение = РезультатВыбора.КПП;
		
		ЗаполнитьСведенияОПодписантах();
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если СтрЧислоВхождений(Область.Имя, "ДобавитьСтраницу") > 0 И Область.Текст <> "" Тогда
		ДобавитьСтраницу("");
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтраницу") > 0 И Область.Текст <> "" Тогда
		УдалитьСтраницу("");
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьКлиент.ВыбраннаяОбластьРегламентированногоОтчетаНеВерна(ЭтаФорма, Область, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбласти = Область.Имя;
	ИсходныйКодПоМесту = Неопределено;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		ИсходныйКодПоМесту = РегламентированнаяОтчетностьКлиентСервер.ВернутьЗначениеПараметраСЛиста(ЭтаФорма, "Титульный", "ПоМесту");
		
		КодПоМесту = ИсходныйКодПоМесту;
		
		Если КодПоМесту <> "112" Тогда
			
			Если СтрНайти(Область.Имя, "НалоговыйОрган") = 1 Тогда
				СтандартнаяОбработка = Ложь;
				ОбработкаВыбораИФНС();
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Сведения" Тогда
		
		// Форма заполнения адреса раздела Сведения.
		Если (ИмяОбласти = "АдресКодРегиона")
		 ИЛИ (ИмяОбласти = "АдресИндекс")
		 ИЛИ (ИмяОбласти = "АдресРайон")
		 ИЛИ (ИмяОбласти = "АдресГород")
		 ИЛИ (ИмяОбласти = "АдресНаселенныйПункт")
		 ИЛИ (ИмяОбласти = "АдресУлица")
		 ИЛИ (ИмяОбласти = "АдресНомерДома")
		 ИЛИ (ИмяОбласти = "АдресНомерКорпуса")
		 ИЛИ (ИмяОбласти = "АдресНомерКвартиры") Тогда
		 
		    СтандартнаяОбработка = Ложь;
			
			РоссийскийАдрес = Новый Соответствие;
			
			РоссийскийАдрес.Вставить("Индекс",          ТабличныйДокумент.Области.АдресИндекс.Значение);
			РоссийскийАдрес.Вставить("КодРегиона",      ТабличныйДокумент.Области.АдресКодРегиона.Значение);
			РоссийскийАдрес.Вставить("Район",           ТабличныйДокумент.Области.АдресРайон.Значение);
			РоссийскийАдрес.Вставить("Город",           ТабличныйДокумент.Области.АдресГород.Значение);
			РоссийскийАдрес.Вставить("НаселенныйПункт", ТабличныйДокумент.Области.АдресНаселенныйПункт.Значение);
			РоссийскийАдрес.Вставить("Улица",           ТабличныйДокумент.Области.АдресУлица.Значение);
			РоссийскийАдрес.Вставить("Дом",             ТабличныйДокумент.Области.АдресНомерДома.Значение);
			РоссийскийАдрес.Вставить("Корпус",          ТабличныйДокумент.Области.АдресНомерКорпуса.Значение);
			РоссийскийАдрес.Вставить("Квартира",        ТабличныйДокумент.Области.АдресНомерКвартиры.Значение);
			
			ЗначенияПолей = Новый СписокЗначений;
			
			ЗначенияПолей.Добавить(РоссийскийАдрес["Индекс"],          "Индекс");
			ЗначенияПолей.Добавить(РоссийскийАдрес["КодРегиона"],      "КодРегиона");
			ЗначенияПолей.Добавить(РоссийскийАдрес["Район"],           "Район");
			ЗначенияПолей.Добавить(РоссийскийАдрес["Город"],           "Город");
			ЗначенияПолей.Добавить(РоссийскийАдрес["НаселенныйПункт"], "НаселенныйПункт");
			ЗначенияПолей.Добавить(РоссийскийАдрес["Улица"],           "Улица");
			ЗначенияПолей.Добавить(РоссийскийАдрес["Дом"],             "Дом");
			ЗначенияПолей.Добавить(РоссийскийАдрес["Корпус"],          "Корпус");
			ЗначенияПолей.Добавить(РоссийскийАдрес["Квартира"],        "Квартира");
			
			ПредставлениеАдреса = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых("643," + РоссийскийАдрес["Индекс"] + ","
																													  + РоссийскийАдрес["КодРегиона"] + ","
																													  + РоссийскийАдрес["Район"] + ","
																													  + РоссийскийАдрес["Город"] + ","
																													  + РоссийскийАдрес["НаселенныйПункт"] + ","
																													  + РоссийскийАдрес["Улица"] + ","
																													  + РоссийскийАдрес["Дом"] + ","
																													  + РоссийскийАдрес["Корпус"] + ","
																													  + РоссийскийАдрес["Квартира"]);
									
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Заголовок",               "Ввод адреса");
			ПараметрыФормы.Вставить("ЗначенияПолей", 		   ЗначенияПолей);
			ПараметрыФормы.Вставить("Представление", 		   ПредставлениеАдреса);
			ПараметрыФормы.Вставить("ВидКонтактнойИнформации", СтруктураРеквизитовФормы.СправочникиВидыКонтактнойИнформацииФактАдресОрганизации);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("РоссийскийАдрес", РоссийскийАдрес);
			ДополнительныеПараметры.Вставить("Префикс", "Адрес");
			
			ТипЗначения = Тип("ОписаниеОповещения");
			ПараметрыКонструктора = Новый Массив(3);
			ПараметрыКонструктора[0] = "ОткрытьФормуКонтактнойИнформацииЗавершение";
			ПараметрыКонструктора[1] = ЭтаФорма;
			ПараметрыКонструктора[2] = ДополнительныеПараметры;
			
			Оповещение = Новый (ТипЗначения, ПараметрыКонструктора);
			
			ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент").ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, , Оповещение);
			
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		
		Если ИмяОбласти = "П000010014001" Тогда
			
			ИсходноеЗначение = Область.Значение;
			
			СписокВыбора = Новый СписокЗначений;
			СписокВыбора.Добавить(0, "Не заполнено");
			СписокВыбора.Добавить(20000, "20000");
			СписокВыбора.Добавить(150000, "150000");
			СтандартнаяОбработка = Ложь;
		
			ИсходнаяСтрокаСписка = СписокВыбора.НайтиПоЗначению(ИсходноеЗначение);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Область", Область);
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьЭлементБазоваяСтавкаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Укажите базовую ставку (руб)", ИсходнаяСтрокаСписка);
			Возврат;
			
		ИначеЕсли ИмяОбласти = "П000010018001" Или ИмяОбласти = "П000010018002" Тогда
			
			СтандартнаяОбработка = Ложь;
			ВвестиСериюПаспорта();
			Возврат;
			
		ИначеЕсли ИмяОбласти = "П000010018003" Тогда
			
			СтандартнаяОбработка = Ложь;
			ВвестиНомерПаспорта();
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
		
	ПараметрВводаПоля = РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(ЭтаФорма, Область.Имя);
	
	Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
		
		КодПоказателя = ПараметрВводаПоля.Показатель;
		
		КопироватьДанныеФормы(ПараметрВводаПоля.ТаблицаЗначений, ТЗВыбора);
		
		ВвестиПоказатель(Элемент, Область, КодПоказателя, Ложь, ПараметрВводаПоля.ТекстПриВыборе, ТЗВыбора, СтандартнаяОбработка,,ИсходныйКодПоМесту);
		
	Иначе
			
		ТабличныйДокументВыборЗавершение(ИсходныйКодПоМесту);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЭлементБазоваяСтавкаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт

	Область = ДополнительныеПараметры.Область;
	Если РезультатВыбора <> Неопределено Тогда
		Область.Значение = РезультатВыбора.Значение;
		Расчет(ЭтаФорма, "", "");
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыборЗавершение(Знач ИсходныйКодПоМесту)
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		КодПоМесту = РегламентированнаяОтчетностьКлиентСервер.ВернутьЗначениеПараметраСЛиста(ЭтаФорма, "Титульный", "ПоМесту");
		
		Если КодПоМесту = "112" И ИсходныйКодПоМесту <> "112" Тогда
			
			ДополнительныеПараметры = Новый Структура("ИсходныйКодПоМесту", ИсходныйКодПоМесту);
			ОписаниеОповещения = Новый ОписаниеОповещения("ВопросКодПоМесту112Завершение", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр(
			"ru='Внимание! Перед входом в режим заполнения для физического лица
			|будут очищены сведения титульного листа отчета.
			|Продолжить операцию?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			
		ИначеЕсли КодПоМесту <> "112" И ИсходныйКодПоМесту = "112" Тогда
			
			ДополнительныеПараметры = Новый Структура("ИсходныйКодПоМесту", ИсходныйКодПоМесту);
			ОписаниеОповещения = Новый ОписаниеОповещения("ВопросИсходныйКодПоМесту112", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр(
			"ru='Внимание! Перед входом в основной режим заполнения
			|будут перезаполнены сведения титульного листа отчета.
			|Продолжить операцию?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Иначе
			УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
			СтруктураРеквизитовФормы.ИсходныйКодПоМесту = ЭтаФорма.ТабличныйДокумент.Области["ПоМесту"].Значение;
		КонецЕсли;
	Иначе
		УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросИсходныйКодПоМесту112(РезультатВопроса, ДополнительныеПараметры1) Экспорт
	
	ИсходныйКодПоМесту = ДополнительныеПараметры1.ИсходныйКодПоМесту;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЗаполнитьСведенияОбОрганизацииНаСервере();
		
		СтраницаСведения = мДеревоСтраницОтчета.ПолучитьЭлементы()[1];
		СтраницаСведения.ПоказатьСтраницу = 0;
		СтраницаСведения.ВыводНаПечать    = 0;
		РегламентированнаяОтчетностьКлиент.ОбновитьДеревоРазделовВФормеОтчета(ЭтаФорма);
		
	Иначе
		
		ЭтаФорма.ТабличныйДокумент.Области["ПоМесту"].Значение = ИсходныйКодПоМесту;
		
	КонецЕсли;
	УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	СтруктураРеквизитовФормы.ИсходныйКодПоМесту = ЭтаФорма.ТабличныйДокумент.Области["ПоМесту"].Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросКодПоМесту112Завершение(РезультатВопроса, ДополнительныеПараметры1) Экспорт
	
	ИсходныйКодПоМесту = ДополнительныеПараметры1.ИсходныйКодПоМесту;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЭтаФорма.ТабличныйДокумент.Области["ИНН1"].Значение           = "";
		ЭтаФорма.ТабличныйДокумент.Области["КПП1"].Значение           = "";
		ЭтаФорма.ТабличныйДокумент.Области["НаимОрг"].Значение        = "";
		ЭтаФорма.ТабличныйДокумент.Области["НалоговыйОрган"].Значение = "";
		ЭтаФорма.ТабличныйДокумент.Области["ПрПодп"].Значение         = "1";
		ЭтаФорма.ТабличныйДокумент.Области["ОргПодписант"].Значение   = "";
		ЭтаФорма.ТабличныйДокумент.Области["ОргУп"].Значение          = "";
		ЭтаФорма.ТабличныйДокумент.Области["ДокУпПред"].Значение      = "";
		ЭтаФорма.ТабличныйДокумент.Области["ТелОрганизации"].Значение = "";
		
		ЭтаФорма.ТаблицаСтраницыРаздел1[0].Данные[0].Значение.П000010002001 = "";
		
		СтраницаСведения = мДеревоСтраницОтчета.ПолучитьЭлементы()[1];
		СтраницаСведения.ПоказатьСтраницу = 1;
		СтраницаСведения.ВыводНаПечать    = 1;
		РегламентированнаяОтчетностьКлиент.ОбновитьДеревоРазделовВФормеОтчета(ЭтаФорма);
		
	Иначе
		
		ЭтаФорма.ТабличныйДокумент.Области["ПоМесту"].Значение = ИсходныйКодПоМесту;
		
	КонецЕсли;
	УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	СтруктураРеквизитовФормы.ИсходныйКодПоМесту = ЭтаФорма.ТабличныйДокумент.Области["ПоМесту"].Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформацииЗавершение(Результат, Параметры) Экспорт
	
	ОбновитьАдресВТабличномДокументе(Результат, Параметры.РоссийскийАдрес, Параметры.Префикс);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАдресВТабличномДокументе(Результат, РоссийскийАдрес, Префикс)
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		// Обход ошибки платформы: в веб-клиенте, в результате выполнения процедуры "СформироватьАдрес"
		// общего модуля "РегламентированнаяОтчетностьВызовСервера", не изменяются значения ключей
		// соответствия "РоссийскийАдрес", передаваемого в качестве параметра.
		РоссийскийАдрес_ = РоссийскийАдрес;
		
		РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.КонтактнаяИнформация, РоссийскийАдрес_);
		
		ТабличныйДокумент.Области[Префикс + "Индекс"].Значение          = РоссийскийАдрес_["Индекс"];
		ТабличныйДокумент.Области[Префикс + "КодРегиона"].Значение      = РоссийскийАдрес_["КодРегиона"];
		ТабличныйДокумент.Области[Префикс + "Район"].Значение           = РоссийскийАдрес_["Район"];
		ТабличныйДокумент.Области[Префикс + "Город"].Значение           = РоссийскийАдрес_["Город"];
		ТабличныйДокумент.Области[Префикс + "НаселенныйПункт"].Значение = РоссийскийАдрес_["НаселенныйПункт"];
		ТабличныйДокумент.Области[Префикс + "Улица"].Значение           = РоссийскийАдрес_["Улица"];
		ТабличныйДокумент.Области[Префикс + "НомерДома"].Значение       = РоссийскийАдрес_["Дом"];
		ТабличныйДокумент.Области[Префикс + "НомерКорпуса"].Значение    = РоссийскийАдрес_["Корпус"];
		ТабличныйДокумент.Области[Префикс + "НомерКвартиры"].Значение   = РоссийскийАдрес_["Квартира"];
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиСериюПаспорта()
	
	ВведенноеЗначение = СокрЛП(ЭтаФорма.ТабличныйДокумент.Области["П000010018001"].Значение)
					  + СокрЛП(ЭтаФорма.ТабличныйДокумент.Области["П000010018002"].Значение);
					  
	ДополнительныеПараметры = Новый Структура("ВведенноеЗначение", ВведенноеЗначение);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиСериюПаспортаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВводСтроки(ОписаниеОповещения, ВведенноеЗначение, "Введите серию паспорта", 4);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиСериюПаспортаЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	ВведенноеЗначение = ?(Строка = Неопределено, ДополнительныеПараметры.ВведенноеЗначение, Строка);
	
	
	Если (Строка <> Неопределено) Тогда
		
		ВведенноеЗначение = СокрЛП(ВведенноеЗначение);
		
		Если (ВведенноеЗначение = "") ИЛИ (СтрДлина(ВведенноеЗначение) <= 4) Тогда
			
			Пока СтрДлина(ВведенноеЗначение) < 4 Цикл
				ВведенноеЗначение = " " + ВведенноеЗначение;
			КонецЦикла;
			
			ЭтаФорма.ТабличныйДокумент.Области["П000010018001"].Значение =  Лев(ВведенноеЗначение, 2);
			ЭтаФорма.ТабличныйДокумент.Области["П000010018002"].Значение = Прав(ВведенноеЗначение, 2);
			
			Модифицированность = Истина;
			
		Иначе
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Серия паспорта должна состоять не более чем из 4 знаков.'");
			Сообщение.Сообщить();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНомерПаспорта()
	
	ВведенноеЗначение = СокрЛП(ЭтаФорма.ТабличныйДокумент.Области["П000010018003"].Значение);
	
	ДополнительныеПараметры = Новый Структура("ВведенноеЗначение", ВведенноеЗначение);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиНомерПаспортаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВводСтроки(ОписаниеОповещения, ВведенноеЗначение, "Введите номер паспорта", 6);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНомерПаспортаЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	ВведенноеЗначение = ?(Строка = Неопределено, ДополнительныеПараметры.ВведенноеЗначение, Строка);
	
	Если (Строка <> Неопределено) Тогда
		
		ВведенноеЗначение = СокрЛП(ВведенноеЗначение);
		
		Если (ВведенноеЗначение = "") ИЛИ (СтрДлина(ВведенноеЗначение) <= 6) Тогда
			
			Пока СтрДлина(ВведенноеЗначение) < 6 Цикл
				ВведенноеЗначение = " " + ВведенноеЗначение;
			КонецЦикла;
			
			ЭтаФорма.ТабличныйДокумент.Области["П000010018003"].Значение = ВведенноеЗначение;
			
			Модифицированность = Истина;
			
		Иначе
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Номер паспорта должен состоять не более чем из 6 знаков.'");
			Сообщение.Сообщить();
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	Если Область.Имя = "ИНН1" Тогда
		
		ВведенноеЗначение = СокрЛП(ЭтаФорма.ТабличныйДокумент.Области["ИНН1"].Значение);
		
		Если (ВведенноеЗначение = "") ИЛИ (СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ВведенноеЗначение) И СтрДлина(ВведенноеЗначение) = 12) Тогда
			
			ВведенноеЗначение = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(ВведенноеЗначение, 12);
			
			ЭтаФорма.ТабличныйДокумент.Области["ИНН1"].Значение = ВведенноеЗначение;
			
			СтраницаСведения = мДеревоСтраницОтчета.ПолучитьЭлементы()[1];
			
			Если ЗначениеЗаполнено(ВведенноеЗначение) Тогда
				СтраницаСведения.ПоказатьСтраницу = 0;
				СтраницаСведения.ВыводНаПечать    = 0;
			Иначе
				СтраницаСведения.ПоказатьСтраницу = 1;
				СтраницаСведения.ВыводНаПечать    = 1;
			КонецЕсли;
			
			РегламентированнаяОтчетностьКлиент.ОбновитьДеревоРазделовВФормеОтчета(ЭтаФорма);
			
			Модифицированность = Истина;
			
		Иначе
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='ИНН должен состоять из 12 цифр.'");
			Сообщение.Сообщить();
			
		КонецЕсли;
		
	ИначеЕсли Область.Имя = "НалоговыйОрган" Тогда
		
		ВведенноеЗначение = СокрЛП(ЭтаФорма.ТабличныйДокумент.Области["НалоговыйОрган"].Значение);
		
		Если (ВведенноеЗначение = "") ИЛИ (СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ВведенноеЗначение) И СтрДлина(ВведенноеЗначение) = 4) Тогда
			
			ВведенноеЗначение = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(ВведенноеЗначение, 4);
			
			ЭтаФорма.ТабличныйДокумент.Области["НалоговыйОрган"].Значение = ВведенноеЗначение;
			
			Модифицированность = Истина;
			
		Иначе
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Код налогового органа должен состоять из 4 цифр.'");
			Сообщение.Сообщить();
			
		КонецЕсли;
		
	ИначеЕсли Область.Имя = "ПоМесту" Тогда
		
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			
			КодПоМесту = РегламентированнаяОтчетностьКлиентСервер.ВернутьЗначениеПараметраСЛиста(ЭтаФорма, "Титульный", "ПоМесту");
			
			Если КодПоМесту <> СтруктураРеквизитовФормы.ИсходныйКодПоМесту Тогда
				
				ТабличныйДокументВыборЗавершение(СтруктураРеквизитовФормы.ИсходныйКодПоМесту);
				
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли Область.Имя = "НомерКорректировки" Тогда
		НомерКорректировки = Область.Значение;
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		Модифицированность = Истина;
		Возврат;
	ИначеЕсли Область.Имя = "ДатаПодписи" Тогда 
		ДатаПодписи = Область.Значение;
		ЗаполнитьСведенияОбОрганизацииНаСервере(Истина);
		Модифицированность = Истина;
		Возврат;
		
	ИначеЕсли Область.Имя = "ДатаСоставленияРасчета" Тогда
		
		Заголовок = СтрЗаменить(Заголовок, СтруктураРеквизитовФормы.СтрПериодОтчета, ПредставлениеПериода(НачалоДня(ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение), КонецДня(ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение), "ФП = Истина" ));
		
		СтруктураРеквизитовФормы.СтрПериодОтчета = ПредставлениеПериода(НачалоДня(ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение), КонецДня(ТабличныйДокумент.Области.ДатаСоставленияРасчета.Значение), "ФП = Истина");
		
		Возврат;
		
	КонецЕсли;
	
	Расчет(ЭтаФорма, "", "");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФИОРазделаСведения()
	
	Плательщик = СокрЛП(ЭтаФорма.СтруктураДанныхТитульный.НаимОрг);
	ФИО = РазложитьФИО(Плательщик);
	
	ЭтаФорма.ТабличныйДокумент.Области.ФизлицоФамилия.Значение = ФИО.Фамилия;
	
	ИнициалИмени = Лев(ФИО.Имя, 1);
	ИнициалИмени = ?(ЗначениеЗаполнено(ИнициалИмени), ИнициалИмени + ".", ИнициалИмени);
	ЭтаФорма.ТабличныйДокумент.Области.ФизлицоИмя.Значение = ИнициалИмени;
	
	ИнициалОтчества = Лев(ФИО.Отчество, 1);
	ИнициалОтчества = ?(ЗначениеЗаполнено(ИнициалОтчества), ИнициалОтчества + ".", ИнициалОтчества);
	ЭтаФорма.ТабличныйДокумент.Области.ФизлицоОтчество.Значение = ИнициалОтчества;
	
КонецПроцедуры

&НаСервере
Функция РазложитьФИО(Плательщик)
	
	Возврат РегламентированнаяОтчетность.РазложитьФИО(Плательщик);
	
КонецФункции

&НаСервере
Процедура ОчиститьНаСервере() Экспорт
	
	СтруктураДанныхСведения.Очистить();
	
	ТаблицаСтраницыРаздел1.Очистить();
	
	ИнициализацияМногостраничныхРазделов();
	
	Для Каждого мнгРаздел Из мСтруктураМногострочныхРазделов Цикл
		ЭтаФорма[мнгРаздел.Ключ].Очистить();
	КонецЦикла;
	
	ЗаполнитьПустыеСтруктурыДанных();
	
	Если НЕ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		ОчиститьТабличноеПолеНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	КонецЕсли;
	
	ВывестиМакетСтраницыВТабличныйДокументНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела, 1);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	
	РегламентированнаяОтчетностьКлиентСервер.ОчиститьВариантыЗаполнения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗапретитьВводДанныхВОбласть(ОбрабатываемаяОбласть, мСтруктураЦветовРаскраски, Очистка = Истина)
	
	ЦветНедоступнойОбласти = мСтруктураЦветовРаскраски["_5"];
	
	ОбрабатываемаяОбласть.Защита   = Истина;
	ОбрабатываемаяОбласть.ЦветФона = ЦветНедоступнойОбласти;
	
	Если Очистка Тогда
		
		ТипЗначенияОбласти = ТипЗнч(ОбрабатываемаяОбласть.Значение);
		
		Если ТипЗначенияОбласти = Тип("Число") Тогда
			ОбрабатываемаяОбласть.Значение = 0;
		ИначеЕсли ТипЗначенияОбласти = Тип("Строка") Тогда
			ОбрабатываемаяОбласть.Значение = "";
		Иначе
			ОбрабатываемаяОбласть.Значение = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РазрешитьВводДанныхВОбласть(ОбрабатываемаяОбласть, мСтруктураЦветовРаскраски)
	
	ЦветОбластиРучногоВвода = мСтруктураЦветовРаскраски["_0"];
	
	ОбрабатываемаяОбласть.Защита   = Ложь;
	ОбрабатываемаяОбласть.ЦветФона = ЦветОбластиРучногоВвода;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьОбластей(Форма, ИмяСтраницыПанели) Экспорт
	
	Если ИмяСтраницыПанели = "Раздел1" Тогда
		
		СтраницыРаздела = Форма[Форма.мСтруктураМногостраничныхРазделов.Раздел1];
		
		ЭтоПерваяСтраница = Ложь;
		
		Если СтраницыРаздела.НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина)).Количество() > 0 Тогда
			
			АктивнаяСтраница = СтраницыРаздела.НайтиСтроки(Новый Структура("АктивнаяСтраница", Истина))[0];
			
			ЭтоПерваяСтраница = (СтраницыРаздела.Индекс(АктивнаяСтраница) = 0);
			
		КонецЕсли;
		
		Если ЭтоПерваяСтраница Тогда
			
			// Обработка КБК (стр. 010).
			ОбрабатываемаяОбласть = Форма.ТабличныйДокумент.Области["П000010001001"];
			РазрешитьВводДанныхВОбласть(ОбрабатываемаяОбласть, Форма.мСтруктураЦветовРаскраски);
		
			// Обработка кода по ОКТМО (стр. 020).
			ОбрабатываемаяОбласть = Форма.ТабличныйДокумент.Области["П000010002001"];
			РазрешитьВводДанныхВОбласть(ОбрабатываемаяОбласть, Форма.мСтруктураЦветовРаскраски);
			
			// Обработка "Общая сумма утилизационного сбора,
			// подлежащий уплате в бюджет (стр. 030).
			ОбрабатываемаяОбласть = Форма.ТабличныйДокумент.Области["П000010003001"];
			// Восстанавливаем цвет стр. 030 на первой странице раздела 1,
			// исходя из текущего значения реквизита ФлажокОтклАвтоРасчет.
			Если Не Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
				ОбрабатываемаяОбласть.Защита   = Истина;
				ОбрабатываемаяОбласть.ЦветФона = Форма.мСтруктураЦветовРаскраски["_4"];
			Иначе
				РазрешитьВводДанныхВОбласть(ОбрабатываемаяОбласть, Форма.мСтруктураЦветовРаскраски);
			КонецЕсли;
			ОбрабатываемаяОбласть.Формат = "ЧН=";
			
		Иначе
			
			// Обработка КБК (стр. 010).
			ОбрабатываемаяОбласть = Форма.ТабличныйДокумент.Области["П000010001001"];
			ЗапретитьВводДанныхВОбласть(ОбрабатываемаяОбласть, Форма.мСтруктураЦветовРаскраски);
			ОбрабатываемаяОбласть.Значение = "";
		
			// Обработка кода по ОКТМО (стр. 020).
			ОбрабатываемаяОбласть = Форма.ТабличныйДокумент.Области["П000010002001"];
			ЗапретитьВводДанныхВОбласть(ОбрабатываемаяОбласть, Форма.мСтруктураЦветовРаскраски);
			
			// Обработка "Общая сумма утилизационного сбора,
			// подлежащий уплате в бюджет (стр. 030).
			ОбрабатываемаяОбласть = Форма.ТабличныйДокумент.Области["П000010003001"];
			ЗапретитьВводДанныхВОбласть(ОбрабатываемаяОбласть, Форма.мСтруктураЦветовРаскраски);
			ОбрабатываемаяОбласть.Формат = "";
			
		КонецЕсли;
		
	ИначеЕсли ИмяСтраницыПанели = "Титульный" Тогда
		
		Если Форма.ТабличныйДокумент.Области["ПоМесту"].Значение = "112" Тогда
			
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ИНН1"],         Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["НаимОрг"],      Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ПрПодп"],       Форма.мСтруктураЦветовРаскраски);
			
			Если Форма.ТабличныйДокумент.Области["ПрПодп"].Значение = "2" Тогда
				
				РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ОргПодписант"], Форма.мСтруктураЦветовРаскраски);
				РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ОргУп"],        Форма.мСтруктураЦветовРаскраски);
				РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ДокУпПред"],    Форма.мСтруктураЦветовРаскраски);
				
			Иначе
				
				ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ОргПодписант"], Форма.мСтруктураЦветовРаскраски);
				ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ОргУп"],        Форма.мСтруктураЦветовРаскраски);
				ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ДокУпПред"],    Форма.мСтруктураЦветовРаскраски);
				
			КонецЕсли;
			
		Иначе
			
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ИНН1"],         Форма.мСтруктураЦветовРаскраски, Ложь);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["НаимОрг"],      Форма.мСтруктураЦветовРаскраски, Ложь);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ПрПодп"],       Форма.мСтруктураЦветовРаскраски, Ложь);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ОргПодписант"], Форма.мСтруктураЦветовРаскраски, Ложь);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ОргУп"],        Форма.мСтруктураЦветовРаскраски, Ложь);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ДокУпПред"],    Форма.мСтруктураЦветовРаскраски, Ложь);
			
		КонецЕсли;
		
	ИначеЕсли ИмяСтраницыПанели = "Сведения" Тогда
		
		Если Форма.СтруктураДанныхТитульный.ПоМесту = "112"
			И Не ЗначениеЗаполнено(Форма.СтруктураДанныхТитульный.ИНН1) Тогда
			
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["КодВидаДокумента"],    Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["СерияНомерДокумента"], Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["КемВыданДокумент"],    Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ДатаВыдачи"],          Форма.мСтруктураЦветовРаскраски);
			
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресИндекс"],          Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресКодРегиона"],      Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресРайон"],           Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресГород"],           Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНаселенныйПункт"], Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресУлица"],           Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНомерДома"],       Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНомерКорпуса"],    Форма.мСтруктураЦветовРаскраски);
			РазрешитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНомерКвартиры"],   Форма.мСтруктураЦветовРаскраски);
			
		Иначе
			
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["КодВидаДокумента"],    Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["СерияНомерДокумента"], Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["КемВыданДокумент"],    Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["ДатаВыдачи"],          Форма.мСтруктураЦветовРаскраски);
			
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресИндекс"],          Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресКодРегиона"],      Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресРайон"],           Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресГород"],           Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНаселенныйПункт"], Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресУлица"],           Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНомерДома"],       Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНомерКорпуса"],    Форма.мСтруктураЦветовРаскраски);
			ЗапретитьВводДанныхВОбласть(Форма.ТабличныйДокумент.Области["АдресНомерКвартиры"],   Форма.мСтруктураЦветовРаскраски);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СТЫКОВКИ С СЕРВИСОМ СДАЧИ ОТЧЕТНОСТИ ЧЕРЕЗ ПРЕДСТАВИТЕЛЯ

&НаКлиенте
Процедура ОтправитьЧерезПредставителя(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезПредставителяЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезПредставителяЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиЧерезПредставителяВРегламентированномОтчете(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект);

	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернетеЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтаФорма);
	ПараметрыИзменения.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОтправкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганЗавершение", ЭтотОбъект);
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	Оповещение = Новый ОписаниеОповещения("ПослеСохраненияФормыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьНаКлиенте(, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ДополнительныеПараметры.Форма.Закрыть();
КонецПроцедуры

#Область МеханизмПроверкиКонтрольныхСоотношений

&НаКлиенте
Процедура Проверить(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения(ЭтаФорма, ОбработкаКС);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьКонтрольныеСоотношенияВОтчете() Экспорт
	
	СформироватьСтруктуруПоказателей();
	
	СтруктураРеквизитовФормы.ТекстДляЗаголовочнойЧасти = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", 0);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", 0);
	СтруктураРезультата.Вставить("СтруктураОшибок", Новый Структура);
	
	Если СписокРасшифровкиПоказателей = Неопределено Тогда
		СписокРасшифровкиПоказателей = РегламентированнаяОтчетность.СоздатьСписокРасшифровкиПоказателей();
	Иначе
		СписокРасшифровкиПоказателей.Очистить();
	КонецЕсли;
	
	Если СписокРасшифровкиформулы = Неопределено Тогда
		СписокРасшифровкиформулы = РегламентированнаяОтчетность.СоздатьСписокРасшифровкиформулы();
	Иначе
		СписокРасшифровкиформулы.Очистить();
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = 0;
	
	ПроверитьКС_1(СтруктураРезультата);
	ПроверитьКС_2(СтруктураРезультата);
	ПроверитьКС_3(СтруктураРезультата);
	ПроверитьКС_4(СтруктураРезультата);
	ПроверитьКС_5(СтруктураРезультата);
	ПроверитьКС_6(СтруктураРезультата);
	ПроверитьКС_7(СтруктураРезультата);
	ПроверитьКС_8(СтруктураРезультата);
	ПроверитьКС_9(СтруктураРезультата);
	ПроверитьКС_10(СтруктураРезультата);
	ПроверитьКС_11(СтруктураРезультата);
	ПроверитьКС_12(СтруктураРезультата);
	ПроверитьКС_13(СтруктураРезультата);
	ПроверитьКС_14(СтруктураРезультата);
	ПроверитьКС_15(СтруктураРезультата);
	ПроверитьКС_16(СтруктураРезультата);
	ПроверитьКС_17(СтруктураРезультата);
	ПроверитьКС_18(СтруктураРезультата);
	ПроверитьКС_19(СтруктураРезультата);
	ПроверитьКС_20(СтруктураРезультата);
	ПроверитьКС_21(СтруктураРезультата);
	ПроверитьКС_22(СтруктураРезультата);
	ПроверитьКС_23(СтруктураРезультата);
	ПроверитьКС_24(СтруктураРезультата);
	ПроверитьКС_25(СтруктураРезультата);
	ПроверитьКС_26(СтруктураРезультата);
	ПроверитьКС_27(СтруктураРезультата);
	ПроверитьКС_28(СтруктураРезультата);
	ПроверитьКС_29(СтруктураРезультата);
	ПроверитьКС_30(СтруктураРезультата);
	ПроверитьКС_31(СтруктураРезультата);
	ПроверитьКС_32(СтруктураРезультата);
	ПроверитьКС_33(СтруктураРезультата);
	ПроверитьКС_34(СтруктураРезультата);
	ПроверитьКС_35(СтруктураРезультата);
	ПроверитьКС_36(СтруктураРезультата);
	ПроверитьКС_37(СтруктураРезультата);
	ПроверитьКС_38(СтруктураРезультата);
	ПроверитьКС_39(СтруктураРезультата);
	ПроверитьКС_40(СтруктураРезультата);
	ПроверитьКС_41(СтруктураРезультата);
	ПроверитьКС_42(СтруктураРезультата);
	ПроверитьКС_43(СтруктураРезультата);
	ПроверитьКС_44(СтруктураРезультата);
	ПроверитьКС_45(СтруктураРезультата);
	ПроверитьКС_46(СтруктураРезультата);
	ПроверитьКС_47(СтруктураРезультата);
	ПроверитьКС_48(СтруктураРезультата);
	ПроверитьКС_49(СтруктураРезультата);
	ПроверитьКС_50(СтруктураРезультата);
	ПроверитьКС_51(СтруктураРезультата);
	ПроверитьКС_52(СтруктураРезультата);
	ПроверитьКС_53(СтруктураРезультата);
	ПроверитьКС_54(СтруктураРезультата);
	ПроверитьКС_55(СтруктураРезультата);
	ПроверитьКС_56(СтруктураРезультата);
	ПроверитьКС_57(СтруктураРезультата);
	ПроверитьКС_58(СтруктураРезультата);
	ПроверитьКС_59(СтруктураРезультата);
	ПроверитьКС_60(СтруктураРезультата);
	ПроверитьКС_61(СтруктураРезультата);
	ПроверитьКС_62(СтруктураРезультата);
	ПроверитьКС_63(СтруктураРезультата);
	ПроверитьКС_64(СтруктураРезультата);
	ПроверитьКС_65(СтруктураРезультата);
	ПроверитьКС_66(СтруктураРезультата);
	ПроверитьКС_67(СтруктураРезультата);
	ПроверитьКС_68(СтруктураРезультата);
	ПроверитьКС_69(СтруктураРезультата);
	ПроверитьКС_70(СтруктураРезультата);
	ПроверитьКС_71(СтруктураРезультата);
	ПроверитьКС_72(СтруктураРезультата);
	ПроверитьКС_73(СтруктураРезультата);
	ПроверитьКС_74(СтруктураРезультата);
	ПроверитьКС_75(СтруктураРезультата);
	ПроверитьКС_76(СтруктураРезультата);
	ПроверитьКС_77(СтруктураРезультата);
	
	Если СписокРасшифровкиПоказателей.Количество() > 0 Тогда 
		СтруктураРезультата.Вставить("СписокРасшифровкиПоказателей", 
			ПоместитьВоВременноеХранилище(СписокРасшифровкиПоказателей, Новый УникальныйИдентификатор));
	КонецЕсли;
	
	Если СписокРасшифровкиформулы.Количество() > 0 Тогда
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(СписокРасшифровкиформулы, Новый УникальныйИдентификатор);
		СтруктураРезультата.Вставить("СписокРасшифровкиформулы", АдресВоВременномХранилище);
	КонецЕсли;
	
	Возврат СтруктураРезультата;
	
КонецФункции

&НаСервере
Процедура ПроверитьКС_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы = "Проверка раздела 1 (КС 1.1)";
	ОписаниеКС = "Код бюджетной классификации (строка 010 Раздела 1) должен соответствовать КБК 18211208000012000120 или 18211208000016000120";
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		Если НомерСтраницы <> "1" Тогда
			Прервать;
		КонецЕсли;
		
		ЛеваяЧасть = Страница.Данные[0].Значение.П000010001001;
		ЛеваяЧастьСтр = СокрЛП(Строка(ЛеваяЧасть));
		НазваниеСтроки010 = "Код бюджетной классификации (строка № 010)";
		НазваниеПоказателя = СтрЗаменить(НазваниеСтроки010, ")", ", страница № " + НомерСтраницы + ")");
		ЗарегистрироватьПоказательДляРасшифровки("П000010001001", НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", "1");
		
		ПраваяЧасть = "18211208000012000120";
		ПраваяЧасть2016 = "18211208000016000120";
		ПраваяЧастьСтр = "18211208000012000120 или 18211208000016000120";
		
		Если (ЛеваяЧастьСтр = ПраваяЧасть) ИЛИ (ЛеваяЧастьСтр = ПраваяЧасть2016) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе 
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЛеваяЧастьСтр + " = " + ПраваяЧастьСтр;
		Описание    = НСтр("ru='Допущена ошибка при определении КБК'");
		Нарушение   = НСтр("ru='Постановление РФ'");
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, Описание, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы = "Проверка раздела 1 (КС 1.2)";
	ОписаниеКС = "Общая сумма утилизационного сбора, подлежащая уплате в бюджет (строка 030 Раздела 1) должна быть равна сумме положительных значений по всем строкам 170 Раздела 1";
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ИмяР1Стр030 = "П000010003001";
	НазваниеР1Стр030 = "Общая сумма утилизационного сбора, подлежащий уплате в бюджет (строка № 030)";
	
	ИмяР1Стр170 = "П000010017001";
	НазваниеР1Стр170 = "Сумма утилизационного сбора, подлежащий уплате (строка № 170)";
	
	ЛеваяЧасть = 0;
	СуммаР1Стр170 = 0;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		Если НомерСтраницы = "1" Тогда
			ЛеваяЧасть = Страница.Данные[0].Значение[ИмяР1Стр030];
			ЛеваяЧастьСтр = СокрЛП(Строка(ЛеваяЧасть));
			НазваниеПоказателя = СтрЗаменить(НазваниеР1Стр030, ")", ", страница № " + НомерСтраницы + ")");
			ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр030, НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", НомерСтраницы);
			Расшифровка = ЛеваяЧастьСтр + " = ";
		КонецЕсли;
		
		ЗначениеПоказателя = Страница.Данные[0].Значение[ИмяР1Стр170];
		Если ЗначениеПоказателя > 0 Тогда
			НазваниеПоказателя = СтрЗаменить(НазваниеР1Стр170, ")", ", страница № " + НомерСтраницы + ")");
			ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр170, НазваниеПоказателя, ЗначениеПоказателя, "Раздел1", НомерСтраницы);
			СуммаР1Стр170 = СуммаР1Стр170 + ЗначениеПоказателя;
			Расшифровка = Расшифровка + Формат(ЗначениеПоказателя, "ЧРД=.;ЧН=0") + " + ";
		КонецЕсли;
		
	КонецЦикла;
	
	ПраваяЧасть = СуммаР1Стр170;
	ПраваяЧастьСтр = Формат(ПраваяЧасть, "ЧРД=.;ЧН=0");
	
	Если ЛеваяЧасть = ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе 
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	Если ПраваяЧасть <> 0 Тогда 
		Расшифровка = Лев(Расшифровка, СтрДлина(Расшифровка) - 3) + " Итог [" + ПраваяЧастьСтр + "]";
	Иначе
		Расшифровка = Расшифровка + " 0";
	КонецЕсли;
	
	Описание  = НСтр("ru='Допущена ошибка при определении общей суммы утилизационного сбора.'");
	Нарушение = НСтр("ru='Постановление РФ'");
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, Описание, Нарушение);
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_3(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = Нстр("ru='Проверка раздела 1 (КС 1.3)'");
	ОписаниеКС     = Нстр("ru='Значение коэффициента (строка 150 Раздела 1) должно быть равно 0,8 или 1,25 или 1 или 1,6 или 1,1 или 4,56 или 1,34 или 6,91 или 1,47 или 10,06 или 2,9 или 11,8 или 1,6 или 4,4 или 2 или 5,2, если признак транспортного средства (строка 040 Раздела 1) не равен 10 или 11 или 12'");
	ОписаниеОшибки = Нстр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр040 = "П000010004001";
	НазваниеР1Стр040 = "Признак транспортного средства (строка № 040)";
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = "Коэффициент (строка № 150)";
	
	ПроверяемыеПризнакиТС   = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("10,11,12");
	РазрешенныеКоэффициенты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("0,8;1,25;1;1,6;1,1;4,56;1,34;6,91;1,47;10,06;2,9;11,8;4,4;2;5,2", ";");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр040 = Страница.Данные[0].Значение[ИмяР1Стр040];
		Если ПроверяемыеПризнакиТС.Найти(ЗначениеР1Стр040) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЛеваяЧасть = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЛеваяЧастьСтр = Формат(ЛеваяЧасть, "ЧРД=,;ЧН=0");
		НазваниеПоказателя = СтрЗаменить(НазваниеР1Стр150, ")", ", страница № " + НомерСтраницы + ")");
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрЗаменить(НазваниеР1Стр040, ")", ", страница № " + НомерСтраницы + ")");
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр040, НазваниеПоказателя, ЗначениеР1Стр040, "Раздел1", НомерСтраницы);
		
		Если РазрешенныеКоэффициенты.Найти(Строка(ЛеваяЧасть)) <> Неопределено Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе 
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЛеваяЧастьСтр + " = [0,8;1,25;1;1,6;1,1;4,56;1,34;6,91;1,47;10,06;2,9;11,8;1,6;4,4;2;5,2], когда "
		            + ЗначениеР1Стр040 + " <> [10;11;12]";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_4(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.4)'");
	ОписаниеКС     = НСтр("ru='Базовая ставка (строка 140 Раздела 1) должна быть равна 150 000, если признак транспортного средства (строка 040 Раздела 1) не равен 10 или 11 или 12'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении базовой ставки'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр040 = "П000010004001";
	НазваниеР1Стр040 = Нстр("ru='Признак транспортного средства (строка 040%1)'");
	
	ИмяР1Стр140 = "П000010014001";
	НазваниеР1Стр140 = Нстр("ru='Базовая ставка (руб) (строка 140%1)'");
	
	ПроверяемыеПризнакиТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("10,11,12");
	БазоваяСтавка = 150000;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр040 = Страница.Данные[0].Значение[ИмяР1Стр040];
		Если ПроверяемыеПризнакиТС.Найти(ЗначениеР1Стр040) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЛеваяЧасть = Страница.Данные[0].Значение[ИмяР1Стр140];
		ЛеваяЧастьСтр = Формат(ЛеваяЧасть, "ЧРД=,;ЧН=0");
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр140, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр140, НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр040, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр040, НазваниеПоказателя, ЗначениеР1Стр040, "Раздел1", НомерСтраницы);
		
		Если ЛеваяЧасть = БазоваяСтавка Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе 
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЛеваяЧастьСтр + " = " + БазоваяСтавка + ", когда " + ЗначениеР1Стр040 + " <> [10;11;12]";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.5)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,86 или 1,34 или 2,56 или 3,47 или 5,5 или 0,5 или 0,8 или 1 или 1,1 или 1,47 или 2,9 или 1 или 3 или 0,6 или 1,2 или 1,6 или 2 или 13,6 или 25 или 37 или 0,8 или 2,9 или 1,6 или 2, если с момента выпуска транспортного средства прошло не более трех лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяДатаСоставленияРасчета = "ДатаСоставленияРасчета";
	НазваниеДатаСоставленияРасчета = НСтр("ru='Дата составления расчета'");
	ДатаСоставленияРасчета = мДанныеОтчета.Титульный[ИмяДатаСоставленияРасчета];
	
	ИмяР1Стр080 = "П000010008001";
	НазваниеР1Стр080 = НСтр("ru='Дата выпуска транспортного средства (строка080%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	РазрешенныеКоэффициенты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("0,86;1,34;2,56;3,47;5,5;0,5;0,8;1;1,1;1,47;2,9;1;3;0,6;1,2;1,6;2;13,6;25;37;0,8;2,9;1,6;2", ";");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр080 = Страница.Данные[0].Значение[ИмяР1Стр080];
		ЗначениеР1Стр080Стр = Формат(ЗначениеР1Стр080, "ДЛФ=D");
		
		РазностьГод = СрокВыпускаТС(ЗначениеР1Стр080);
		Если РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЛеваяЧасть = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЛеваяЧастьСтр = Формат(ЛеваяЧасть, "ЧРД=,;ЧН=0");
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр080, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр080, НазваниеПоказателя, ЗначениеР1Стр080Стр, "Раздел1", НомерСтраницы);
		
		Если РазрешенныеКоэффициенты.Найти(Формат(ЛеваяЧастьСтр)) = Неопределено Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе 
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЛеваяЧастьСтр + " = [0,86;1,34;2,56;3,47;5,5;0,5;0,8;1;1,1;1,47;2,9;1;3;0,6;1,2;1,6;2;13,6;25;37;0,8;2,9;1,6;2] при условии, что " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_6(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.6)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 5,3 или 8,26 или 16,12 или 28,5 или 35,01 или 0,88 или 1,25 или 1,6 или 4,56 или 6,91 или 10,06 или 11,8 или 10 или 13 или 1 или 3 или 4,4 или 5,2 или 30,98 или 32 или 40 или 1,25 или 1,6 или 4,56 или 6,91 или 10,06 или 11,8, если с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяДатаСоставленияРасчета = "ДатаСоставленияРасчета";
	НазваниеДатаСоставленияРасчета = НСтр("ru='Дата составления расчета'");
	ДатаСоставленияРасчета = мДанныеОтчета.Титульный[ИмяДатаСоставленияРасчета];
	
	ИмяР1Стр080 = "П000010008001";
	НазваниеР1Стр080 = НСтр("ru='Дата выпуска транспортного средства (строка080%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	РазрешенныеКоэффициенты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("5,3;8,26;16,12;28,5;35,01;0,88;1,25;1,6;4,56;6,91;10,06;11,8;10;13;1;3;4,4;5,2;30,98;32;40;1,25;1,6;4,56;6,91;10,06;11,8", ";");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр080 = Страница.Данные[0].Значение[ИмяР1Стр080];
		ЗначениеР1Стр080Стр = Формат(ЗначениеР1Стр080, "ДЛФ=D");
		
		РазностьГод = СрокВыпускаТС(ЗначениеР1Стр080);
		Если РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЛеваяЧасть = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЛеваяЧастьСтр = Формат(ЛеваяЧасть, "ЧРД=,;ЧН=0");
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр080, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр080, НазваниеПоказателя, ЗначениеР1Стр080Стр, "Раздел1", НомерСтраницы);
		
		Если РазрешенныеКоэффициенты.Найти(Формат(ЛеваяЧастьСтр)) = Неопределено Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе 
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЛеваяЧастьСтр + " = [5,3;8,26;16,12;28,5;35,01;0,88;1,25;1,6;4,56;6,91;10,06;11,8;10;13;1;3;4,4;5,2;30,98;32;40;1,25;1,6;4,56;6,91;10,06;11,8] при условии, что " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_7(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.7)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 13,6 или 30,98 или 25 или 32 или 37 или 40, если значение категории (вида) транспортного средства (строка 090 Раздела 1) равно ""Х"" и признак транспортного средства (строка 040 Раздела 1) равен 10'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр090 = "П000010009001";
	НазваниеР1Стр090 = НСтр("ru='Категория (вид) транспортного средства (строка090%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	
	РазрешенныеКоэффициенты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("13,6;30,98;25;32;37;40", ";");
	КатегорияТС = "X";
	ПризнакТС = "10";
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр090 = ВРег(ДанныеСтраницы[ИмяР1Стр090]);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		
		Если ЗначениеР1Стр090 <> КатегорияТС
		 ИЛИ Р1Стр040.Значение <> ПризнакТС Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЛеваяЧасть = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЛеваяЧастьСтр = Формат(ЛеваяЧасть, "ЧРД=,;ЧН=0");
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр090, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр090, НазваниеПоказателя, ЗначениеР1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		
		Если РазрешенныеКоэффициенты.Найти(Формат(ЛеваяЧастьСтр)) = Неопределено Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе 
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЛеваяЧастьСтр + " = " + ПредставлениеМассива(РазрешенныеКоэффициенты) + " при условии, что "
		            + """" + ЗначениеР1Стр090 + """ = """ + КатегорияТС + """"
		            + " и """ + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_8(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.8)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,86 или 5,3 или 0,6 или 1, если значение типа двигателя (строка 110 Раздела 1) равно ""3""'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр110 = "П000010011001";
	НазваниеР1Стр110 = НСтр("ru='Тип двигателя (строка110%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	РазрешенныеКоэффициенты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("0,86;5,3;0,6;1", ";");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр110 = ВРег(Страница.Данные[0].Значение[ИмяР1Стр110]);
		
		Если ЗначениеР1Стр110 <> "3" Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЛеваяЧасть = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЛеваяЧастьСтр = Формат(ЛеваяЧасть, "ЧРД=,;ЧН=0");
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЛеваяЧастьСтр, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр110, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр110, НазваниеПоказателя, ЗначениеР1Стр110, "Раздел1", НомерСтраницы);
		
		Если РазрешенныеКоэффициенты.Найти(Формат(ЛеваяЧастьСтр)) = Неопределено Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе 
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЛеваяЧастьСтр + " = [0,86;5,3;0,6;1] при условии, что """ + ЗначениеР1Стр110 + """ = ""3""";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_9(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.9)'");
	ОписаниеКС     = НСтр("ru='Сумма утилизационного сбора (строка 160 Раздела 1) должна быть равна произведению значений по строкам 140 и 150 Раздела 1'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении суммы утилизационного сбора, уплаченной за базовое транспортное средство (шасси)'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр140 = "П000010014001";
	НазваниеР1Стр140 = Нстр("ru='Базовая ставка (руб) (строка 140%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	ИмяР1Стр160 = "П000010016001";
	НазваниеР1Стр160 = Нстр("ru='Сумма утилизационного сбора (руб) (строка 160%1)'");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЗначениеР1Стр160 = Страница.Данные[0].Значение[ИмяР1Стр160];
		ЗначениеР1Стр160Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр160);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр160, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр160, НазваниеПоказателя, ЗначениеР1Стр160Стр, "Раздел1", НомерСтраницы);
		
		ЗначениеР1Стр140 = Страница.Данные[0].Значение[ИмяР1Стр140];
		ЗначениеР1Стр140Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр140);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр140, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр140, НазваниеПоказателя, ЗначениеР1Стр140Стр, "Раздел1", НомерСтраницы);
		
		ЗначениеР1Стр150 = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЗначениеР1Стр150Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр150);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЗначениеР1Стр150Стр, "Раздел1", НомерСтраницы);
		
		Если ЗначениеР1Стр160 <> ЗначениеР1Стр140 * ЗначениеР1Стр150 Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе 
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЗначениеР1Стр160Стр + " = " + ЗначениеР1Стр140Стр + " * " + ЗначениеР1Стр150Стр
		            + " Итог [" + ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр140 * ЗначениеР1Стр150) + "]";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_10(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = Нстр("ru='Проверка раздела 1 (КС 1.10)'");
	ОписаниеКС     = Нстр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,86 или 5,3 или 0,86 или 5,3 или 1,34 или 8,26 или 2,56 или 16,12 или 3,47 или 28,5 или 5,5 или 35,01, если базовая ставка (строка 140 Раздела 1) равно ""20 000""'");
	ОписаниеОшибки = Нстр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр140 = "П000010014001";
	НазваниеР1Стр140 = Нстр("ru='Базовая ставка (руб) (строка 140%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	БазоваяСтавка = 20000;
	РазрешенныеКоэффициенты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("0,86;5,3;0,86;5,3;1,34;8,26;2,56;16,12;3,47;28,5;5,5;35,01", ";");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр140 = Страница.Данные[0].Значение[ИмяР1Стр140];
		ЗначениеР1Стр140Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр140);
		
		Если ЗначениеР1Стр140 <> БазоваяСтавка Тогда
			Продолжить;
		КонецЕсли;
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр140, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр140, НазваниеПоказателя, ЗначениеР1Стр140Стр, "Раздел1", НомерСтраницы);
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр140, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр140, НазваниеПоказателя, ЗначениеР1Стр140Стр, "Раздел1", НомерСтраницы);
		
		ЗначениеР1Стр150 = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЗначениеР1Стр150Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр150);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЗначениеР1Стр150Стр, "Раздел1", НомерСтраницы);
		
		Если РазрешенныеКоэффициенты.Найти(Строка(ЗначениеР1Стр150)) <> Неопределено Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе 
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Нстр("ru='%1 = [0,86;5,3;0,86;5,3;1,34;8,26;2,56;16,12;3,47;28,5;5,5;35,01] при условии, что %2 = %3'");
		Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Расшифровка, ЗначениеР1Стр150, ЗначениеР1Стр140, БазоваяСтавка);
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_11(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.11)'");
	ОписаниеКС     = НСтр("ru='Значение базовой ставки в строке 140 Раздела 1 должно быть равно ""20 000"" или ""150 000""'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении базовой ставки'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр140 = "П000010014001";
	НазваниеР1Стр140 = Нстр("ru='Базовая ставка (руб) (строка 140%1)'");
	
	БазоваяСтавка20000 = 20000;
	БазоваяСтавка150000 = 150000;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЗначениеР1Стр140 = Страница.Данные[0].Значение[ИмяР1Стр140];
		ЗначениеР1Стр140Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр140);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр140, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр140, НазваниеПоказателя, ЗначениеР1Стр140Стр, "Раздел1", НомерСтраницы);
		
		Если ЗначениеР1Стр140 <> БазоваяСтавка20000 И ЗначениеР1Стр140 <> БазоваяСтавка150000 Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе 
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЗначениеР1Стр140Стр + " = " + БазоваяСтавка20000 + " или " + ЗначениеР1Стр140Стр + " = " + БазоваяСтавка150000;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_12(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.12)'");
	ОписаниеКС     = НСтр("ru='Значение суммы утилизационного сбора в строке 170 Раздела 1 должно быть равно разнице значений строки 160 и строки 130 Раздела 1'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении суммы утилизационного сбора, подлежащей уплате'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяР1Стр130 = "П000010013001";
	НазваниеР1Стр130 = Нстр("ru='Размер утилизационного сбора, уплаченный за базовое транспортное средство (шасси) (руб) (строка 130%1)'");
	
	ИмяР1Стр160 = "П000010016001";
	НазваниеР1Стр160 = Нстр("ru='Сумма утилизационного сбора (руб) (строка 160%1)'");
	
	ИмяР1Стр170 = "П000010017001";
	НазваниеР1Стр170 = Нстр("ru='Сумма утилизационного сбора, подлежащий уплате (руб) (строка 170%1)'");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЗначениеР1Стр170 = Страница.Данные[0].Значение[ИмяР1Стр170];
		ЗначениеР1Стр170Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр170);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр170, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр170, НазваниеПоказателя, ЗначениеР1Стр170Стр, "Раздел1", НомерСтраницы);
		
		ЗначениеР1Стр160 = Страница.Данные[0].Значение[ИмяР1Стр160];
		ЗначениеР1Стр160Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр160);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр160, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр160, НазваниеПоказателя, ЗначениеР1Стр160Стр, "Раздел1", НомерСтраницы);
		
		ЗначениеР1Стр130 = Страница.Данные[0].Значение[ИмяР1Стр130];
		ЗначениеР1Стр130Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр130);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр130, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр130, НазваниеПоказателя, ЗначениеР1Стр130Стр, "Раздел1", НомерСтраницы);
		
		Если ЗначениеР1Стр170 <> ЗначениеР1Стр160 - ЗначениеР1Стр130 Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе 
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЗначениеР1Стр170Стр + " = " + ЗначениеР1Стр160Стр + " - " + ЗначениеР1Стр130Стр
		            + " Итог [" + ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр160 - ЗначениеР1Стр130) + "]";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_13(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.13)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,86, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 110 Раздела 1 равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяДатаСоставленияРасчета = "ДатаСоставленияРасчета";
	НазваниеДатаСоставленияРасчета = НСтр("ru='Дата составления расчета'");
	ДатаСоставленияРасчета = мДанныеОтчета.Титульный[ИмяДатаСоставленияРасчета];
	
	ИмяР1Стр040 = "П000010004001";
	НазваниеР1Стр040 = Нстр("ru='Признак транспортного средства (строка 040%1)'");

	ИмяР1Стр080 = "П000010008001";
	НазваниеР1Стр080 = НСтр("ru='Дата выпуска транспортного средства (строка080%1)'");
	
	ИмяР1Стр090 = "П000010009001";
	НазваниеР1Стр090 = НСтр("ru='Категория (вид) транспортного средства (строка090%1)'");
	
	ИмяР1Стр110 = "П000010011001";
	НазваниеР1Стр110 = НСтр("ru='Тип двигателя (строка110%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 0.86;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр040 = Страница.Данные[0].Значение[ИмяР1Стр040];
		Если ЗначениеР1Стр040 <> ПризнакТС Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеР1Стр090 = ВРег(Страница.Данные[0].Значение[ИмяР1Стр090]);
		Если ЗначениеР1Стр090 <> КатегорияТС Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеР1Стр110 = ВРег(Страница.Данные[0].Значение[ИмяР1Стр110]);
		Если ЗначениеР1Стр110 <> ТипДвигателя Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеР1Стр080 = Страница.Данные[0].Значение[ИмяР1Стр080];
		ЗначениеР1Стр080Стр = Формат(ЗначениеР1Стр080, "ДЛФ=D");
		
		РазностьГод = СрокВыпускаТС(ЗначениеР1Стр080);
		Если РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЗначениеР1Стр150 = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЗначениеР1Стр150Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр150);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЗначениеР1Стр150, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр080, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр080, НазваниеПоказателя, ЗначениеР1Стр080, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр040, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр040, НазваниеПоказателя, ЗначениеР1Стр040, "Раздел1", НомерСтраницы);
		
		Если ЗначениеР1Стр150 <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЗначениеР1Стр150Стр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
	                + """" + ЗначениеР1Стр040 + """ = ""10"""
	                + " и """ + ЗначениеР1Стр090 + """ = ""М1"""
	                + " и """ + ЗначениеР1Стр110 + """ = ""3"""
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_14(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.14)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 5,3, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 110 Раздела 1 равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	ИмяДатаСоставленияРасчета = "ДатаСоставленияРасчета";
	НазваниеДатаСоставленияРасчета = НСтр("ru='Дата составления расчета'");
	ДатаСоставленияРасчета = мДанныеОтчета.Титульный[ИмяДатаСоставленияРасчета];
	
	ИмяР1Стр040 = "П000010004001";
	НазваниеР1Стр040 = Нстр("ru='Признак транспортного средства (строка 040%1)'");
	
	ИмяР1Стр080 = "П000010008001";
	НазваниеР1Стр080 = НСтр("ru='Дата выпуска транспортного средства (строка080%1)'");
	
	ИмяР1Стр090 = "П000010009001";
	НазваниеР1Стр090 = НСтр("ru='Категория (вид) транспортного средства (строка090%1)'");
	
	ИмяР1Стр110 = "П000010011001";
	НазваниеР1Стр110 = НСтр("ru='Тип двигателя (строка110%1)'");
	
	ИмяР1Стр150 = "П000010015001";
	НазваниеР1Стр150 = Нстр("ru='Коэффициент (строка 150%1)'");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 5.3;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ЗначениеР1Стр040 = Страница.Данные[0].Значение[ИмяР1Стр040];
		Если ЗначениеР1Стр040 <> ПризнакТС Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеР1Стр090 = ВРег(Страница.Данные[0].Значение[ИмяР1Стр090]);
		Если ЗначениеР1Стр090 <> КатегорияТС Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеР1Стр110 = ВРег(Страница.Данные[0].Значение[ИмяР1Стр110]);
		Если ЗначениеР1Стр110 <> ТипДвигателя Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеР1Стр080 = Страница.Данные[0].Значение[ИмяР1Стр080];
		ЗначениеР1Стр080Стр = Формат(ЗначениеР1Стр080, "ДЛФ=D");
		
		РазностьГод = СрокВыпускаТС(ЗначениеР1Стр080);
		Если РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЗначениеР1Стр150 = Страница.Данные[0].Значение[ИмяР1Стр150];
		ЗначениеР1Стр150Стр = ПредставлениеЧисловогоПоказателя(ЗначениеР1Стр150);
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр150, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр150, НазваниеПоказателя, ЗначениеР1Стр150, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр080, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр080, НазваниеПоказателя, ЗначениеР1Стр080, "Раздел1", НомерСтраницы);
		
		НазваниеПоказателя = СтрокаСНомеромСтраницы(НазваниеР1Стр040, НомерСтраницы);
		ЗарегистрироватьПоказательДляРасшифровки(ИмяР1Стр040, НазваниеПоказателя, ЗначениеР1Стр040, "Раздел1", НомерСтраницы);
		
		Если ЗначениеР1Стр150 <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = ЗначениеР1Стр150Стр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
	                + """" + ЗначениеР1Стр040 + """ = ""10"""
	                + " и """ + ЗначениеР1Стр090 + """ = ""М1"""
	                + " и """ + ЗначениеР1Стр110 + """ = ""3"""
	                + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_15(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.15)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,86, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 меньше или равно ""1000"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателя = 1000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 0.86;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_16(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.16)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 5,3, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 меньше или равно ""1000"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателя = 1000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 5.3;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_17(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.17)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 1,34, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""1000"", но меньше или равно ""2000"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателяМин  = 1000;
	ОбъемДвигателяМакс = 2000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.34;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_18(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.18)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 8,26, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""1000"", но меньше или равно ""2000"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателяМин  = 1000;
	ОбъемДвигателяМакс = 2000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 8.26;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_19(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.19)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 2,56, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""2000"", но меньше или равно ""3000"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателяМин  = 2000;
	ОбъемДвигателяМакс = 3000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 2.56;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_20(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.20)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 16,12, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""2000"", но меньше или равно ""3000"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателяМин  = 2000;
	ОбъемДвигателяМакс = 3000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 16.12;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_21(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.21)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 3,47, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""3000"", но меньше или равно ""3500"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателяМин  = 3000;
	ОбъемДвигателяМакс = 3500;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 3.47;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_22(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.22)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 28,5, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""3000"", но меньше или равно ""3500"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателяМин  = 3000;
	ОбъемДвигателяМакс = 3500;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 28.5;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_23(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.23)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 5,5, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""3500"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателя = 3500;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 5.5;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ > """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_24(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.24)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 35,01, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""М1"";
	                          |- значение строки 100 Раздела 1 больше ""3500"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорияТС = "M1";
	ОбъемДвигателя = 3500;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 35.01;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ Р1Стр090.Значение <> КатегорияТС
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + КатегорияТС + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ > """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_25(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.25)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,5, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 меньше или равно ""2,5"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМасса = 2.5;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 0.5;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение > ПолнаяМасса
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_26(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.26)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,88, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 меньше или равно ""2,5"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМасса = 2.5;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 0.88;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение > ПолнаяМасса
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_27(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.27)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 0,8, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 больше ""2,5"", но меньше или равно ""3,5"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 2.5;
	ПолнаяМассаМакс = 3.5;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 0.8;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_28(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.28)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 1,25 если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"" ;
	                          |- значение строки 120 Раздела 1 больше ""2,5"", но меньше или равно ""3,5"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 2.5;
	ПолнаяМассаМакс = 3.5;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.25;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_29(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.29)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 1, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 больше ""3,5"", но меньше или равно ""5"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 3.5;
	ПолнаяМассаМакс = 5;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_30(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.30)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 1,6 если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"" ;
	                          |- значение строки 120 Раздела 1 больше ""3,5"", но меньше или равно ""5"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 3.5;
	ПолнаяМассаМакс = 5;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.6;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_31(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.31)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 1,1, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 больше ""5"", но меньше или равно ""8"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 5;
	ПолнаяМассаМакс = 8;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.1;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_32(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.32)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 4,56 если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"" ;
	                          |- значение строки 120 Раздела 1 больше ""5"", но меньше или равно ""8"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 5;
	ПолнаяМассаМакс = 8;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 4.56;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_33(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.33)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 1,34, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 больше ""8"", но меньше или равно ""12"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 8;
	ПолнаяМассаМакс = 12;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.34;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_34(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.34)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 6,91 если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"" ;
	                          |- значение строки 120 Раздела 1 больше ""8"", но меньше или равно ""12"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 8;
	ПолнаяМассаМакс = 12;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 6.91;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_35(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.35)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 1,47, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 больше ""12"", но меньше или равно ""20"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 12;
	ПолнаяМассаМакс = 20;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.47;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_36(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.36)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 10,06 если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"" ;
	                          |- значение строки 120 Раздела 1 больше ""12"", но меньше или равно ""20"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 12;
	ПолнаяМассаМакс = 20;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 10.06;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_37(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.37)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 2,9, если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"";
	                          |- значение строки 120 Раздела 1 больше ""20"", но меньше или равно ""50"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 20;
	ПолнаяМассаМакс = 50;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 2.9;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_38(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.38)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен 11,8 если:
	                          |- значение строки 040 Раздела 1 равно ""10"";
	                          |- значение строки 090 Раздела 1 равно ""N1"" или ""N2"" или ""N3"" ;
	                          |- значение строки 120 Раздела 1 больше ""20"", но меньше или равно ""50"";
	                          |- значение строки 110 Раздела 1 не равно ""3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1,N2,N3");
	ПолнаяМассаМин = 20;
	ПолнаяМассаМакс = 50;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 11.8;
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_39(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "11";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M2G,M3,M3G,N1,N1G,N2,N2G,N3,N3G");
	РазрешенныйКоэффициент = 1;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.39)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС, РазрешенныйКоэффициент, ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_40(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "11";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M2G,M3,M3G,N1,N1G,N2,N2G,N3,N3G");
	РазрешенныйКоэффициент = 10;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.40)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС, РазрешенныйКоэффициент, ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_41(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "12";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M2G,M3,M3G,N1,N1G,N2,N2G,N3,N3G");
	РазрешенныйКоэффициент = 3;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.41)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС, РазрешенныйКоэффициент, ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_42(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "12";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M2G,M3,M3G,N1,N1G,N2,N2G,N3,N3G");
	РазрешенныйКоэффициент = 13;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.42)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС, РазрешенныйКоэффициент, ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_43(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателя = 2500;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 0.6;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.43)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 меньше или равно ""%4"";
	                          |- значение строки 110 Раздела 1 не равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателя), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ < """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_44(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателя = 2500;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.44)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 меньше или равно ""%4"";
	                          |- значение строки 110 Раздела 1 не равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателя), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ < """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_45(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 0.6;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.45)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 110 Раздела 1 равно ""%4"";
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение <> ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ = """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_46(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.46)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 110 Раздела 1 равно ""%4"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение <> ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ = """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_47(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателяМин = 2500;
	ОбъемДвигателяМакс = 5000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.2;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.47)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 больше ""%4"", но меньше или равно ""%5"";
	                          |- значение строки 110 Раздела 1 не равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМакс), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_48(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателяМин = 2500;
	ОбъемДвигателяМакс = 5000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 3;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.48)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 больше ""%4"", но меньше или равно ""%5"";
	                          |- значение строки 110 Раздела 1 не равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМакс), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_49(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателяМин = 5000;
	ОбъемДвигателяМакс = 10000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 1.6;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.49)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 больше ""%4"", но меньше или равно ""%5"";
	                          |- значение строки 110 Раздела 1 не равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМакс), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_50(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателяМин = 5000;
	ОбъемДвигателяМакс = 10000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 4.4;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.50)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 больше ""%4"", но меньше или равно ""%5"";
	                          |- значение строки 110 Раздела 1 не равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателяМакс), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателяМин
		 ИЛИ Р1Стр100.Значение > ОбъемДвигателяМакс
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ОбъемДвигателяМин + """" + " < """ + Р1Стр100.ЗначениеСтр + """ <= """ + ОбъемДвигателяМакс + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_51(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателя = 10000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 2;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.51)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 больше ""%4"";
	                          |- значение строки 110 Раздела 1 не равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателя), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ > """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_52(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ПризнакТС = "10";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2,M3");
	ОбъемДвигателя = 10000;
	ТипДвигателя = "3";
	РазрешенныйКоэффициент = 5.2;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.52)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1 если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно %3;
	                          |- значение строки 100 Раздела 1 больше ""%4"";
	                          |- значение строки 110 Раздела 1 не равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ОбъемДвигателя), ТипДвигателя);
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр100 = ПоказательПоСтроке("Р1Стр100");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр100);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр100.Значение <= ОбъемДвигателя
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр100, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр100.ЗначениеСтр + """ > """ + ОбъемДвигателя + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_53(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 13.6;
	
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("X");
	ПолнаяМассаМин = 50;
	ПолнаяМассаМакс = 80;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.53)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 090 Раздела 1 равно ""%2"";
	                          |- значение строки 120 Раздела 1 больше ""%3"", но меньше или равно ""%4"" ;
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_54(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 30.98;
	
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("X");
	ПолнаяМассаМин = 50;
	ПолнаяМассаМакс = 80;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.54)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 090 Раздела 1 равно ""%2"";
	                          |- значение строки 120 Раздела 1 больше ""%3"", но меньше или равно ""%4"" ;
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_55(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 25;
	
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("X");
	ПолнаяМассаМин = 80;
	ПолнаяМассаМакс = 350;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.55)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 090 Раздела 1 равно ""%2"";
	                          |- значение строки 120 Раздела 1 больше ""%3"", но меньше или равно ""%4"" ;
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_56(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 32;
	
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("X");
	ПолнаяМассаМин = 80;
	ПолнаяМассаМакс = 350;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.56)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 090 Раздела 1 равно ""%2"";
	                          |- значение строки 120 Раздела 1 больше ""%3"", но меньше или равно ""%4"" ;
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_57(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 37;
	
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("X");
	ПолнаяМасса = 350;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.57)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 090 Раздела 1 равно ""%2"";
	                          |- значение строки 120 Раздела 1 больше ""%3"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр120.Значение <= ПолнаяМасса
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ > """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_58(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 40;
	
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("X");
	ПолнаяМасса = 350;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.58)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 090 Раздела 1 равно ""%2"";
	                          |- значение строки 120 Раздела 1 больше ""%3"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПредставлениеМассиваВОписании(КатегорииТС),
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр120.Значение <= ПолнаяМасса
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ > """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_59(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 0.8;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1");
	ТипДвигателя = "3";
	ПолнаяМасса = 3.5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.59)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 не равно ""%4"";
	                          |- значение строки 120 Раздела 1 меньше или равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ТипДвигателя, ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение > ПолнаяМасса
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_60(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 1.25;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N1");
	ТипДвигателя = "3";
	ПолнаяМасса = 3.5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.60)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 не равно ""%4"";
	                          |- значение строки 120 Раздела 1 меньше или равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ТипДвигателя, ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение > ПолнаяМасса
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_61(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 1;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N2");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 3.5;
	ПолнаяМассаМакс = 5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.61)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_62(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 1.6;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N2");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 3.5;
	ПолнаяМассаМакс = 5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.62)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_63(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 1.1;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N2");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 5;
	ПолнаяМассаМакс = 8;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.63)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_64(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 4.56;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N2");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 5;
	ПолнаяМассаМакс = 8;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.64)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_65(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 1.34;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N2");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 8;
	ПолнаяМассаМакс = 12;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.65)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_66(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 6.91;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N2");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 8;
	ПолнаяМассаМакс = 12;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.66)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_67(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 1.47;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N3");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 12;
	ПолнаяМассаМакс = 20;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.67)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_68(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 10.06;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N3");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 12;
	ПолнаяМассаМакс = 20;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.68)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_69(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 2.9;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N3");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 20;
	ПолнаяМассаМакс = 50;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.69)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло менее 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_70(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 11.8;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("N3");
	ТипДвигателя = "3";
	ПолнаяМассаМин = 20;
	ПолнаяМассаМакс = 50;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.70)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 должно быть не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"", но меньше или равно ""%6"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС), ТипДвигателя,
		ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМин), ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМассаМакс));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМассаМин
		 ИЛИ Р1Стр120.Значение > ПолнаяМассаМакс
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + ПолнаяМассаМин + """" + " < """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМассаМакс + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_71(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 1.6;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2");
	ТипДвигателя = "3";
	ПолнаяМасса = 5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.71)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 не равно ""%4"";
	                          |- значение строки 120 Раздела 1 меньше или равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ТипДвигателя, ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение > ПолнаяМасса
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_72(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 4.4;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M2");
	ТипДвигателя = "3";
	ПолнаяМасса = 5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.72)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 не равно ""%4"";
	                          |- значение строки 120 Раздела 1 меньше или равно ""%5"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ТипДвигателя, ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение > ПолнаяМасса
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ <= """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_73(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 2;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M3");
	ТипДвигателя = "3";
	ПолнаяМасса = 5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.73)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"";
	                          |- с момента выпуска транспортного средства прошло не более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ТипДвигателя, ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМасса
		 ИЛИ РазностьГод > 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ > """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " <= 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_74(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныйКоэффициент = 5.2;
	ПризнакТС = "20";
	КатегорииТС = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("M3");
	ТипДвигателя = "3";
	ПолнаяМасса = 5;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.74)'");
	ОписаниеКС     = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если:
	                          |- значение строки 040 Раздела 1 равно ""%2"";
	                          |- значение строки 090 Раздела 1 равно ""%3"";
	                          |- значение строки 110 Раздела 1 не равно ""%4"";
	                          |- значение строки 120 Раздела 1 больше ""%5"";
	                          |- с момента выпуска транспортного средства прошло более 3 лет'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС,
		ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент), ПризнакТС, ПредставлениеМассиваВОписании(КатегорииТС),
		ТипДвигателя, ПредставлениеЧисловогоПоказателяБезГруппировки(ПолнаяМасса));
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр080 = ПоказательПоСтроке("Р1Стр080");
	Р1Стр090 = ПоказательПоСтроке("Р1Стр090");
	Р1Стр110 = ПоказательПоСтроке("Р1Стр110");
	Р1Стр120 = ПоказательПоСтроке("Р1Стр120");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр080);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр090);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр110);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр120);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		РазностьГод = СрокВыпускаТС(Р1Стр080.Значение);
		
		Если Р1Стр040.Значение <> ПризнакТС
		 ИЛИ КатегорииТС.Найти(Р1Стр090.Значение) = Неопределено
		 ИЛИ Р1Стр110.Значение = ТипДвигателя
		 ИЛИ Р1Стр120.Значение <= ПолнаяМасса
		 ИЛИ РазностьГод <= 3 Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр080, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр090, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр110, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр120, "Раздел1", НомерСтраницы);
		
		Если Р1Стр150.Значение <> РазрешенныйКоэффициент Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеЧисловогоПоказателя(РазрешенныйКоэффициент) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """"
		            + " и """ + Р1Стр090.ЗначениеСтр + """ = """ + ПредставлениеМассива(КатегорииТС) + """"
		            + " и """ + Р1Стр110.ЗначениеСтр + """ <> """ + ТипДвигателя + """"
		            + " и """ + Р1Стр120.ЗначениеСтр + """ > """ + ПолнаяМасса + """"
		            + " и " + РазностьГод + " > 3";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_75(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ДатаСоставленияРасчетаИмя = "ДатаСоставленияРасчета";
	ДатаСоставленияРасчетаПредставление = НСтр("ru='Дата составления расчета'");
	ДатаСоставленияРасчетаЗначение = мДанныеОтчета.Титульный[ДатаСоставленияРасчетаИмя];
	ДатаСоставленияРасчетаЗначениеСтр = Формат(ДатаСоставленияРасчетаЗначение, "ДЛФ=D");
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.75)'");
	ОписаниеКС     = НСтр("ru='Дата составления расчета на Титульном листе должна быть позже или равна дате выдачи паспорта (строка 190 Раздела 1)'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при составлении Расчета'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр190 = ПоказательПоСтроке("Р1Стр190");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр190);
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ЗарегистрироватьПоказательДляРасшифровки(ДатаСоставленияРасчетаИмя, ДатаСоставленияРасчетаПредставление, ДатаСоставленияРасчетаЗначениеСтр, "Титульный");
		ВнестиПоказательВРасшифровку(Р1Стр190, "Раздел1", НомерСтраницы);
		
		Если ДатаСоставленияРасчетаЗначение < Р1Стр190.Значение Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр190.ЗначениеСтр + " >= " + ДатаСоставленияРасчетаЗначениеСтр;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_76(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка раздела 1 (КС 1.76)'");
	ОписаниеКС     = НСтр("ru='Данные о транспортном средстве (строка 050 Раздела 1) представлены в единственном экземпляре'");
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при составлении Расчета в VIN-номере'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр050 = ПоказательПоСтроке("Р1Стр050");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	ТаблицаVIN = Новый ТаблицаЗначений;
	ТаблицаVIN.Колонки.Добавить("VIN");
	ТаблицаVIN.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаVIN.Индексы.Добавить("VIN");
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр050);
		
		Если НЕ ЗначениеЗаполнено(Р1Стр050.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйVIN = ТаблицаVIN.Добавить();
		НовыйVIN.VIN = СокрЛП(Р1Стр050.Значение);
		НовыйVIN.Количество = 1;
	КонецЦикла;
	
	ТаблицаVIN.Свернуть("VIN", "Количество");
		
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр050);
		
		Если НЕ ЗначениеЗаполнено(Р1Стр050.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаVIN = ТаблицаVIN.Найти(СокрЛП(Р1Стр050.Значение));
		
		Если СтрокаVIN = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр050, "Раздел1", НомерСтраницы);
		
		Если СтрокаVIN.Количество <> 1 Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр050.Значение + " представлен в единственном экземпляре";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_77(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	РазрешенныеКоэффициенты = МассивЧисел("1,10");
	ПризнакТС = "11";
	
	ТекстФормулы = НСтр("ru='Проверка раздела 1 (КС 1.77)'");
	
	ОписаниеКС = НСтр("ru='Коэффициент (строка 150 Раздела 1) должен быть равен %1, если признак в строке 040 Раздела 1 равен ""%2""'");
	ОписаниеКС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеКС, ПредставлениеМассиваВОписании(РазрешенныеКоэффициенты), ПризнакТС);
	
	ОписаниеОшибки = НСтр("ru='Допущена ошибка при определении коэффициента'");
	Нарушение      = НСтр("ru='Постановление РФ'");
	
	Р1Стр040 = ПоказательПоСтроке("Р1Стр040");
	Р1Стр150 = ПоказательПоСтроке("Р1Стр150");
	
	СведенияРаздела1 = мДанныеОтчета.Раздел1;
	
	Для Каждого Страница Из СведенияРаздела1 Цикл
		ДанныеСтраницы = Страница.Данные[0].Значение;
		НомерСтраницы = Строка(СведенияРаздела1.Индекс(Страница) + 1);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр040);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Стр150);
		
		Если Р1Стр040.Значение <> ПризнакТС Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВнестиПоказательВРасшифровку(Р1Стр150, "Раздел1", НомерСтраницы);
		ВнестиПоказательВРасшифровку(Р1Стр040, "Раздел1", НомерСтраницы);
		
		Если РазрешенныеКоэффициенты.Найти(Р1Стр150.Значение) = Неопределено Тогда
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		Иначе
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		КонецЕсли;
		
		Расшифровка = Р1Стр150.ЗначениеСтр + " = " + ПредставлениеМассива(РазрешенныеКоэффициенты) + " при условии, что "
		            + """" + Р1Стр040.ЗначениеСтр + """ = """ + ПризнакТС + """";
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение);
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	СтруктураРезультата.Вставить("СтруктураОшибок", СтруктураОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	РегламентированнаяОтчетность.ЗарегистрироватьФормулуДляРасшифровки(СписокРасшифровкиФормулы, ОписаниеКС, , СчетчикФормулДляРасшифровок);
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьПоказательДляРасшифровки(ИмяПоказателя, ПредставлениеПоказателя, ЗначениеПоказателя, ИмяСтраницы, НомерСтраницы = Неопределено)
	
	РегламентированнаяОтчетность.ЗарегистрироватьПоказательДляРасшифровки(
		СписокРасшифровкиПоказателей,
		ИмяПоказателя,
		ПредставлениеПоказателя,
		ЗначениеПоказателя,
		"",
		СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка,
		ИмяСтраницы,
		Неопределено,
		НомерСтраницы,
		СчетчикФормулДляРасшифровок);
	
КонецПроцедуры

&НаСервере
Процедура ВнестиПоказательВРасшифровку(Показатель, ИмяСтраницы, НомерСтраницы = Неопределено)
	
	НомерСтраницыДляЗамены = ?(ЗначениеЗаполнено(НомерСтраницы), НомерСтраницы, "");
	ПредставлениеПоказателя = СтрокаСНомеромСтраницы(Показатель.Представление, НомерСтраницыДляЗамены);
	
	ЗначениеПоказателя = ?(ТипЗнч(Показатель.Значение) = Тип ("Дата"), Показатель.ЗначениеСтр, Показатель.Значение);
	
	РегламентированнаяОтчетность.ЗарегистрироватьПоказательДляРасшифровки(
		СписокРасшифровкиПоказателей,
		Показатель.Имя,
		ПредставлениеПоказателя,
		ЗначениеПоказателя,
		"",
		СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка,
		ИмяСтраницы,
		Неопределено,
		НомерСтраницы,
		СчетчикФормулДляРасшифровок);
	
КонецПроцедуры

&НаСервере
Функция СтрокаСНомеромСтраницы (ИсходнаяСтрока, НомерСтраницы)
	
	ТекстСтраница = Нстр("ru='страница №'");
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ИсходнаяСтрока, ", " + ТекстСтраница + " " + НомерСтраницы + ")");
	
КонецФункции

&НаСервере
Функция ПредставлениеЧисловогоПоказателя(ЗначениеПоказателя)
	
	Возврат Формат(ЗначениеПоказателя, "ЧРД=,;ЧН=0");
	
КонецФункции

&НаСервере
Функция ПредставлениеЧисловогоПоказателяБезГруппировки(ЗначениеПоказателя)
	
	Возврат Формат(ЗначениеПоказателя, "ЧРД=,; ЧН=0; ЧГ=0");
	
КонецФункции

&НаСервере
Функция ПредставлениеМассива(МассивСведений)
	
	Результат = "";
	
	Для Каждого ЭлементМассива Из МассивСведений Цикл
		Результат = Результат + ЭлементМассива + ",";
	КонецЦикла;
	
	Результат = Лев(Результат, СтрДлина(Результат) - 1);
	
	Если МассивСведений.Количество() > 1 Тогда
		Результат = "[" + Результат + "]";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПредставлениеМассиваВОписании(МассивСведений)
	
	Результат = "";
	
	Для Каждого ЭлементМассива Из МассивСведений Цикл
		Если ТипЗнч(ЭлементМассива) = Тип("Число") Тогда
			Результат = Результат + ЭлементМассива + " или ";
		Иначе
			Результат = Результат + """" + ЭлементМассива + """ или ";
		КонецЕсли;
	КонецЦикла;
	
	Результат = Лев(Результат, СтрДлина(Результат) - 5);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция МассивЧисел(Значения)
	
	ПредставленияЗначений = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Значения);
	
	Результат = Новый Массив;
	
	Для Каждого ПредставлениеЗначения Из ПредставленияЗначений Цикл
		Результат.Добавить(Число(ПредставлениеЗначения));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СрокВыпускаТС(ДатаВыпускаТС)
	
	ИмяДатаСоставленияРасчета = "ДатаСоставленияРасчета";
	НазваниеДатаСоставленияРасчета = НСтр("ru='Дата составления расчета'");
	ДатаСоставленияРасчета = мДанныеОтчета.Титульный[ИмяДатаСоставленияРасчета];
	
	МоментВыпускаТС = Дата(Год(ДатаВыпускаТС), 7, 1);
	ПервоеИюляГодаСоставленияОтчета = Дата(Год(ДатаСоставленияРасчета), 7, 1);
	
	ПолнаяРазницаЛет = Год(ПервоеИюляГодаСоставленияОтчета) - Год(МоментВыпускаТС);
	РазницаВПределахГода = Окр((ДатаСоставленияРасчета - ПервоеИюляГодаСоставленияОтчета) / 86400 / 365, 3);
	
	РазностьГод = Макс(0, ПолнаяРазницаЛет + РазницаВПределахГода);
	
	Возврат РазностьГод;
	
КонецФункции

&НаСервере
Функция ПоказательПоСтроке(УсловныйКодПоказателя)
	
	Результат = Новый Структура;
	Результат.Вставить("Имя");
	Результат.Вставить("Представление");
	
	Если УсловныйКодПоказателя = "Р1Стр040" Тогда
		Результат.Вставить("Имя", "П000010004001");
		Результат.Вставить("Представление", Нстр("ru='Признак транспортного средства (строка 040%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр050" Тогда
		Результат.Вставить("Имя", "П000010005001");
		Результат.Вставить("Представление", НСтр("ru='Идентификационный номер транспортного средства (VIN) (строка 050%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр080" Тогда
		Результат.Вставить("Имя", "П000010008001");
		Результат.Вставить("Представление", НСтр("ru='Дата выпуска транспортного средства (строка 080%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр090" Тогда
		Результат.Вставить("Имя", "П000010009001");
		Результат.Вставить("Представление", НСтр("ru='Категория (вид) транспортного средства (строка 090%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр100" Тогда
		Результат.Вставить("Имя", "П000010010001");
		Результат.Вставить("Представление", НСтр("ru='Рабочий объем двигателя (куб.см) (строка 100%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр110" Тогда
		Результат.Вставить("Имя", "П000010011001");
		Результат.Вставить("Представление", НСтр("ru='Тип двигателя (строка 110%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр120" Тогда
		Результат.Вставить("Имя", "П000010012001");
		Результат.Вставить("Представление", НСтр("ru='Полная масса (тонн) (строка 120%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр150" Тогда
		Результат.Вставить("Имя", "П000010015001");
		Результат.Вставить("Представление", Нстр("ru='Коэффициент (строка 150%1)'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Стр190" Тогда
		Результат.Вставить("Имя", "П000010019001");
		Результат.Вставить("Представление", Нстр("ru='Дата выдачи паспорта (строка 190%1)'"));
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ВставитьЗначениеПоказателя(ИсточникДанных, Показатель, СтрокаФормата = "")
	
	ЗначениеПоказателя = ИсточникДанных[Показатель.Имя];
	
	Если ЗначениеЗаполнено(СтрокаФормата) Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, СтрокаФормата);
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		ПредставлениеЗначения = ЗначениеПоказателя;
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ДЛФ=D");
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ЧРД=,; ЧН=");
	Иначе
		ПредставлениеЗначения = Строка(ЗначениеПоказателя);
	КонецЕсли;
	
	Показатель.Вставить("Значение", ЗначениеПоказателя);
	Показатель.Вставить("ЗначениеСтр", ПредставлениеЗначения);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок, Расшифровка, ЭтоОшибка, Описание = Неопределено, Нарушение = Неопределено)
	
	ТекстовоеПредставлениеФормулы = ?(ПустаяСтрока(ТекстФормулы), "", ТекстФормулы + ". ") + ОписаниеКС;
	СтруктураОшибок.Вставить("Описание" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), Описание));
	СтруктураОшибок.Вставить("Нарушение" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), Нарушение));
	СтруктураОшибок.Вставить("Расшифровка" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), Расшифровка));
	СтруктураОшибок.Вставить("ЭтоОшибка" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), ЭтоОшибка);
	СтруктураОшибок.Вставить("ТекстовоеПредставлениеФормулы" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстовоеПредставлениеФормулы));
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьОтчетИОткрытьФормуПрисоединенныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Функция ОбъектОтчета(ЭтаФормаИмя) Экспорт
	Если мОбъектОтчета = Неопределено Тогда
		мОбъектОтчета = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ЭтаФормаИмя);
	КонецЕсли;
	Возврат мОбъектОтчета;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяОтчета(ЭтаФормаИмя)
	Форма_Имя = СтрЗаменить(ЭтаФормаИмя, "Внешний", "");
	Возврат Сред(Лев(Форма_Имя, СтрНайти(Форма_Имя, ".Форма.") - 1), 7);
КонецФункции