#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СформироватьОтчет(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	// ПОДГОТОВКА ОТЧЕТА ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	ПодготовитьДанныеОтчета(ПараметрыОтчета);
	
	// ПОСТРОЕНИЕ ОТЧЕТА
	
	СписокТаблиц = ПараметрыОтчета.СписокТаблиц.Скопировать();
	
	Для Каждого Таблица Из СписокТаблиц Цикл
		
		Если НЕ Таблица.Формировать Или Не ЭтоАдресВременногоХранилища(Таблица.АдресХранилища) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Таблица.КодТаблицы = 1 Тогда
		
			ТабличныйДокумент = СформироватьТитульныйЛист(ПараметрыОтчета, Таблица.КодТаблицы);
		
		ИначеЕсли Таблица.КодТаблицы = 2 Тогда
		
			ТабличныйДокумент = СформироватьСодержание(ПараметрыОтчета, Таблица.КодТаблицы);
		
		ИначеЕсли Таблица.КодТаблицы = 3 Тогда
		
			ТабличныйДокумент = СформироватьСведения(ПараметрыОтчета, Таблица.КодТаблицы);
		
		ИначеЕсли Таблица.КодТаблицы = 11 ИЛИ Таблица.КодТаблицы = 12 ИЛИ Таблица.КодТаблицы = 13 Тогда
			
			ТабличныйДокумент = СформироватьТаблицу11_12_13(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли Таблица.КодТаблицы = 14 Тогда
			
			ТабличныйДокумент = СформироватьТаблицу14(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли Таблица.КодТаблицы = 15 Тогда
			
			ТабличныйДокумент = СформироватьТаблицу15(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли Таблица.КодТаблицы = 16 ИЛИ (Таблица.КодТаблицы = 17) Тогда
			
			ТабличныйДокумент = СформироватьТаблицу16_17(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли (Таблица.КодТаблицы = 21) ИЛИ (Таблица.КодТаблицы = 22) Тогда
			
			ТабличныйДокумент = СформироватьТаблицу21_22(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли (Таблица.КодТаблицы = 41) ИЛИ (Таблица.КодТаблицы = 42) Тогда
			
			ТабличныйДокумент = СформироватьТаблицу41_42(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли Таблица.КодТаблицы = 50 Тогда
			
			ТабличныйДокумент = СформироватьТаблицу50(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли Таблица.КодТаблицы = 61 Тогда
			
			ТабличныйДокумент = СформироватьТаблицу61(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли Таблица.КодТаблицы = 62 Тогда
			
			ТабличныйДокумент = СформироватьТаблицу62_63(ПараметрыОтчета, Таблица.КодТаблицы);
			
		ИначеЕсли Таблица.КодТаблицы = 63 Тогда
			
			ТабличныйДокумент = СформироватьТаблицу62_63(ПараметрыОтчета, Таблица.КодТаблицы);
			
		КонецЕсли;
		
		ПоместитьВоВременноеХранилище(ТабличныйДокумент,Таблица.АдресХранилища)
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(СписокТаблиц, АдресХранилища);
	
КонецПроцедуры

Процедура ПодготовитьДанныеОтчета(Знач ПараметрыОтчета) Экспорт
	
	Если Не ПараметрыОтчета.Свойство("ВыводитьРеквизиты") Тогда
		ПараметрыОтчета.Вставить("ВыводитьРеквизиты", Ложь);
	КонецЕсли;
	
	Если Не ПараметрыОтчета.Свойство("НалоговаяБазаПоПериодам") Тогда
		ПараметрыОтчета.Вставить("НалоговаяБазаПоПериодам", Ложь);
	КонецЕсли;
	
	ПараметрыОтчета.НачалоПериода = НачалоДня(ПараметрыОтчета.НачалоПериода);
	ПараметрыОтчета.КонецПериода  = КонецДня(ПараметрыОтчета.КонецПериода);
	
	НалоговыйПериод = УчетДоходовИРасходовПредпринимателя.НалоговыйПериод(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
	ПараметрыОтчета.Вставить("НачалоНалоговогоПериода", НалоговыйПериод.Начало);
	ПараметрыОтчета.Вставить("КонецНалоговогоПериода", НалоговыйПериод.Конец);
	
	ПараметрыОтчета.Вставить("ВыводитьНачОстатки", (ПараметрыОтчета.НачалоПериода = ПараметрыОтчета.НачалоНалоговогоПериода));
	ПараметрыОтчета.Вставить("ВыводитьКонОстатки", (ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода));
	ПараметрыОтчета.Вставить("СНачалаНалоговогоПериода", ПараметрыОтчета.ВыводитьНачОстатки);
	
	Если Не ПараметрыОтчета.Свойство("ВидДеятельности")
		Или Не УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода) Тогда
		ПараметрыОтчета.Вставить("ВидДеятельности", Справочники.ВидыДеятельностиПредпринимателей.ПустаяСсылка());
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ПараметрыОтчета.Вставить("ВидДеятельностиНаименованиеПолное", Строка(ПараметрыОтчета.ВидДеятельности));
	Иначе
		ПараметрыОтчета.Вставить("ВидДеятельностиНаименованиеПолное", "");
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ВидДеятельности", ПараметрыОтчета.ВидДеятельности);
	Запрос.УстановитьПараметр("ОблагаетсяНДС", ПараметрыОтчета.ОблагаетсяНДС);
	
	Запрос.УстановитьПараметр("КонецПредыдущегоНалоговогоПериода", ПараметрыОтчета.НачалоНалоговогоПериода - 1);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода", ПараметрыОтчета.НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецПредыдущегоПериода", ПараметрыОтчета.НачалоПериода - 1);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыОтчета.КонецПериода);
	Запрос.УстановитьПараметр("ГраницаКонцаПериода", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецНалоговогоПериода", ПараметрыОтчета.КонецНалоговогоПериода);
	
	Запрос.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);
	
	Запрос.УстановитьПараметр("Материал",                Перечисления.ВидыМПЗ.Материалы);
	Запрос.УстановитьПараметр("Полуфабрикат",            Перечисления.ВидыМПЗ.Полуфабрикаты);
	Запрос.УстановитьПараметр("ВспомогательныйМатериал", Перечисления.ВидыМПЗ.ВспомогательныеМатериалы);
	Запрос.УстановитьПараметр("ИныеМатериальныеРасходы", Перечисления.ВидыМПЗ.ИныеМатериальныеРасходы);
	Запрос.УстановитьПараметр("Продукция",               Перечисления.ВидыМПЗ.Продукция);
	Запрос.УстановитьПараметр("Товар",                   Перечисления.ВидыМПЗ.Товары);
	Запрос.УстановитьПараметр("ПрочиеРасходы",           Перечисления.ВидыМПЗ.ПрочиеРасходы);
	Запрос.УстановитьПараметр("КапитальныеВложения",     Перечисления.ВидыМПЗ.КапитальныеВложения);
	Запрос.УстановитьПараметр("ОС",                      Перечисления.ВидыМПЗ.ОС);
	Запрос.УстановитьПараметр("НМА",                     Перечисления.ВидыМПЗ.НМА);
	Запрос.УстановитьПараметр("РБП",                     Перечисления.ВидыМПЗ.РБП);
	
	Запрос.УстановитьПараметр("Субсчета69", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию));
	
	ВнеоборотныеАктивы = Новый Массив;
	ВнеоборотныеАктивы.Добавить(Перечисления.ВидыМПЗ.КапитальныеВложения);
	ВнеоборотныеАктивы.Добавить(Перечисления.ВидыМПЗ.ОС);
	ВнеоборотныеАктивы.Добавить(Перечисления.ВидыМПЗ.НМА);
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ВнеоборотныеАктивы);
	
	ТоварыПолуфабрикаты = Новый Массив;
	ТоварыПолуфабрикаты.Добавить(Перечисления.ВидыМПЗ.Товары);
	ТоварыПолуфабрикаты.Добавить(Перечисления.ВидыМПЗ.Полуфабрикаты);
	Запрос.УстановитьПараметр("ТоварыПолуфабрикаты", ТоварыПолуфабрикаты);
	
	ПродукцияТоварыПолуфабрикаты = Новый Массив;
	ПродукцияТоварыПолуфабрикаты.Добавить(Перечисления.ВидыМПЗ.Продукция);
	ПродукцияТоварыПолуфабрикаты.Добавить(Перечисления.ВидыМПЗ.Товары);
	ПродукцияТоварыПолуфабрикаты.Добавить(Перечисления.ВидыМПЗ.Полуфабрикаты);
	Запрос.УстановитьПараметр("ПродукцияТоварыПолуфабрикаты", ПродукцияТоварыПолуфабрикаты);
	
	Запрос.УстановитьПараметр("ГрафаНачислено", 4);
	
	ВидыНачислений = Новый Массив;
	ВидыНачислений.Добавить(Перечисления.ИПВидыНачисленийУдержаний.НачисленоДругое);
	ВидыНачислений.Добавить(Перечисления.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход);
	ВидыНачислений.Добавить(Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно);
	ВидыНачислений.Добавить(Перечисления.ИПВидыНачисленийУдержаний.НачисленоСдельно);
	Запрос.УстановитьПараметр("ВидыНачислений", ВидыНачислений);
	
	ВидыУдержаний = Новый Массив;
	ВидыУдержаний.Добавить(Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое);
	ВидыУдержаний.Добавить(Перечисления.ИПВидыНачисленийУдержаний.УдержаноИсполнительныйЛист);
	ВидыУдержаний.Добавить(Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ);
	Запрос.УстановитьПараметр("ВидыУдержаний", ВидыУдержаний);
	
	ХарактерыДеятельностиОСН       = УчетДоходовИРасходовПредпринимателя.ХарактерыДеятельностиОСН();
	ХарактерыДеятельностиЕНВД      = УчетДоходовИРасходовПредпринимателя.ХарактерыДеятельностиЕНВД();
	ХарактерыДеятельностиУСНПатент = УчетДоходовИРасходовПредпринимателя.ХарактерыДеятельностиУСНПатент();
	
	ВсеХарактерыДеятельности = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ХарактерыДеятельностиОСН);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеХарактерыДеятельности, ХарактерыДеятельностиЕНВД);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеХарактерыДеятельности, ХарактерыДеятельностиУСНПатент);
	
	Запрос.УстановитьПараметр("ВсеХарактерыДеятельности", ВсеХарактерыДеятельности);
	Запрос.УстановитьПараметр("ПустаяНоменклатурнаяГруппа", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		
		Запрос.УстановитьПараметр("ХарактерыДеятельностиОСН", ХарактерыДеятельностиОСН);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВидыДеятельностиОрганизаций.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ВидыДеятельностиОрганизаций.ХарактерДеятельности КАК ХарактерДеятельности,
		|	ВидыДеятельностиОрганизаций.ВидДеятельности КАК ВидДеятельности
		|ИЗ
		|	РегистрСведений.ВидыДеятельностиПредпринимателей КАК ВидыДеятельностиОрганизаций
		|ГДЕ
		|	ВидДеятельности = &ВидДеятельности
		|		И ХарактерДеятельности В (&ХарактерыДеятельностиОСН)";
		
		ТаблицаВидовДеятельности = Запрос.Выполнить().Выгрузить();
		
		Запрос.УстановитьПараметр("СписокХарактеровДеятельности",
			ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаВидовДеятельности, "ХарактерДеятельности", Истина));
		Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп",
			ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаВидовДеятельности, "НоменклатурнаяГруппа", Истина));
		
	Иначе
		
		Запрос.УстановитьПараметр("СписокХарактеровДеятельности", ХарактерыДеятельностиОСН);
		
	КонецЕсли;
	
	СформироватьПоТоварам                   = Ложь;
	СформироватьПоПолуфабрикатам            = Ложь;
	СформироватьПоВспомогательнымМатериалам = Ложь;
	СформироватьПоИМР                       = Ложь;
	СформироватьПоОборотам                  = Ложь;
	СформироватьПоДоходамРасходам           = Ложь;
	СформироватьПоДоходамРасходамСводно     = Ложь;
	СформироватьПоОС                        = Ложь;
	СформироватьПоНМА                       = Ложь;
	СформироватьПоЗарплате                  = Ложь;
	СформироватьНалоговуюБазу               = Ложь;
	СформироватьПоПрочимРасходам            = Ложь;
	СформироватьПоРБП                       = Ложь;
	
	Для Каждого Таблица Из ПараметрыОтчета.СписокТаблиц Цикл
		
		Если НЕ Таблица.Формировать Тогда
			Продолжить;
		КонецЕсли;
		
		Если Таблица.КодТаблицы = 11 Тогда
			СформироватьПоТоварам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 12 Тогда
			СформироватьПоПолуфабрикатам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 13 Тогда
			СформироватьПоВспомогательнымМатериалам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 14 Тогда
			СформироватьПоИМР = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 15 Тогда
			СформироватьПоОборотам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 16 Тогда
			СформироватьПоДоходамРасходам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 17 Тогда
			СформироватьПоДоходамРасходамСводно = Истина;
			
		ИначеЕсли (Таблица.КодТаблицы = 21) ИЛИ (Таблица.КодТаблицы = 22) Тогда
			СформироватьПоОС = Истина;
			
		ИначеЕсли (Таблица.КодТаблицы = 41) ИЛИ (Таблица.КодТаблицы = 42) Тогда
			СформироватьПоНМА = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 50 Тогда
			СформироватьПоЗарплате = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 61 Тогда
			СформироватьНалоговуюБазу = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 62 Тогда
			СформироватьПоПрочимРасходам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 63 Тогда
			СформироватьПоРБП = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если СформироватьПоЗарплате ИЛИ СформироватьПоПрочимРасходам ИЛИ СформироватьПоРБП ИЛИ СформироватьНалоговуюБазу Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиЗатрат.Ссылка КАК СтатьяЗатрат
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|ГДЕ
		|	(НЕ СтатьиЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрочиеДоходыИРасходы.Ссылка
		|ИЗ
		|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
		|ГДЕ
		|	ПрочиеДоходыИРасходы.ПринятиеКналоговомуУчету";
		
		СтатьиЗатратПринимаемые = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СтатьяЗатрат");
		
		// Не заполненные статьи затрат считаем принимаемыми.
		СтатьиЗатратПринимаемые.Добавить(Справочники.СтатьиЗатрат.ПустаяСсылка());
		СтатьиЗатратПринимаемые.Добавить(Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());
		
		Запрос.УстановитьПараметр("СтатьиЗатратПринимаемые", СтатьиЗатратПринимаемые);
	
	КонецЕсли;
	
	ДляПризнанияРасходовТребуетсяПолучениеДоходаИП =
		УчетнаяПолитика.ДляПризнанияРасходовТребуетсяПолучениеДоходаИП(ПараметрыОтчета.Организация, ПараметрыОтчета.НачалоПериода);
	
	НомераТаблиц = Новый Структура;
	
	ТекстЗапроса = "";
	
	Если СформироватьПоТоварам Тогда
		ТекстЗапроса = ТекстЗапроса
			+ ТекстЗапросаОстаткиМПЗ(ПараметрыОтчета, НомераТаблиц, "НачОстаткиТоваров", "(ВидМПЗ = &Товар ИЛИ ВидМПЗ = &Материал)")
			+ ТекстЗапросаОборотыМПЗ(ПараметрыОтчета, НомераТаблиц, "ОборотыТоваров", "(ВидМПЗ = &Товар ИЛИ ВидМПЗ = &Материал)");
	КонецЕсли;
	
	Если СформироватьПоПолуфабрикатам Тогда
		ТекстЗапроса = ТекстЗапроса
			+ ТекстЗапросаОстаткиМПЗ(ПараметрыОтчета, НомераТаблиц, "НачОстаткиПолуфабрикатов", "ВидМПЗ = &Полуфабрикат")
			+ ТекстЗапросаОборотыМПЗ(ПараметрыОтчета, НомераТаблиц, "ОборотыПолуфабрикатов", "ВидМПЗ = &Полуфабрикат");
	КонецЕсли;
	
	Если СформироватьПоВспомогательнымМатериалам Тогда
		ТекстЗапроса = ТекстЗапроса
			+ ТекстЗапросаОстаткиМПЗ(ПараметрыОтчета, НомераТаблиц, "НачОстаткиВспомогательныхМатериалов", "ВидМПЗ = &ВспомогательныйМатериал")
			+ ТекстЗапросаОборотыМПЗ(ПараметрыОтчета, НомераТаблиц, "ОборотыВспомогательныхМатериалов", "ВидМПЗ = &ВспомогательныйМатериал");
	КонецЕсли;
	
	Если СформироватьПоИМР Тогда
		ТекстЗапроса = ТекстЗапроса
			+ ТекстЗапросаОстаткиИМР(ПараметрыОтчета, НомераТаблиц) + ТекстЗапросаОборотыИМР(ПараметрыОтчета, НомераТаблиц);
	КонецЕсли;
	
	Если СформироватьПоОборотам Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаОбороты(ПараметрыОтчета, НомераТаблиц);
	КонецЕсли;
	
	Если СформироватьПоДоходамРасходам ИЛИ СформироватьПоДоходамРасходамСводно Тогда
		
		Если ПараметрыОтчета.ВыводитьНачОстатки Тогда
			ТекстЗапроса = ТекстЗапроса
				+ ТекстЗапросаОстаткиМПЗ(ПараметрыОтчета, НомераТаблиц, "НачОстаткиМПЗ", "(ВидМПЗ = &Товар ИЛИ ВидМПЗ = &Продукция)", Истина)
				+ ТекстЗапросаОстаткиМПЗОтгруженные(ПараметрыОтчета, НомераТаблиц, "НачОстаткиМПЗОтгруженные", "(ВидМПЗ = &Товар ИЛИ ВидМПЗ = &Продукция)", Истина);
		КонецЕсли;
	
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаВТДоходыИРасходы(ПараметрыОтчета, НомераТаблиц, ДляПризнанияРасходовТребуетсяПолучениеДоходаИП);
	
		Если СформироватьПоДоходамРасходам Тогда
			ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДоходыИРасходы(ПараметрыОтчета, НомераТаблиц, Ложь);
		КонецЕсли;
	
		Если СформироватьПоДоходамРасходамСводно Тогда
			ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДоходыИРасходы(ПараметрыОтчета, НомераТаблиц, Истина);
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаВТДоходыИРасходыУничтожить(ПараметрыОтчета, НомераТаблиц);
		
		Если ПараметрыОтчета.ВыводитьКонОстатки Тогда
			ТекстЗапроса = ТекстЗапроса
				 + ТекстЗапросаОстаткиМПЗ(ПараметрыОтчета, НомераТаблиц, "КонОстаткиМПЗ", "(ВидМПЗ = &Товар ИЛИ ВидМПЗ = &Продукция)", Ложь)
				 + ТекстЗапросаОстаткиМПЗОтгруженные(ПараметрыОтчета, НомераТаблиц, "КонОстаткиМПЗОтгруженные", "(ВидМПЗ = &Товар ИЛИ ВидМПЗ = &Продукция)", Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Если СформироватьПоОС Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаОС(ПараметрыОтчета, НомераТаблиц);
	КонецЕсли;
	
	Если СформироватьПоНМА Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаНМА(ПараметрыОтчета, НомераТаблиц);
	КонецЕсли;
		
	Если СформироватьПоЗарплате Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасходыНаОплатуТруда(ПараметрыОтчета, НомераТаблиц);
	КонецЕсли;
	
	Если СформироватьНалоговуюБазу Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаНалоговаяБаза(ПараметрыОтчета, НомераТаблиц, ДляПризнанияРасходовТребуетсяПолучениеДоходаИП);
	КонецЕсли;
	
	Если СформироватьПоПрочимРасходам Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаПрочиеРасходы(ПараметрыОтчета, НомераТаблиц);
	КонецЕсли;
	
	Если СформироватьПоРБП Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасходыБудущихПериодов(ПараметрыОтчета, НомераТаблиц);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.ВыполнитьПакет();

		Для каждого НомерТаблицы Из НомераТаблиц Цикл
			
			Если Результат[НомерТаблицы.Значение] <> Неопределено Тогда
				ПараметрыОтчета.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение]);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьСписокТаблиц(СписокТаблиц, РежимРасшифровки = Ложь) Экспорт
	
	ФормироватьВсе = Не РежимРасшифровки;
	
	ДобавитьТаблицу(
		СписокТаблиц,
		1,
		"ТитульныйЛист", ,
		НСтр("ru='Титульный лист'"), ,
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		2,
		"Содержание", ,
		НСтр("ru='Содержание'"), ,
		ФормироватьВсе);
		
	ДобавитьТаблицу(
		СписокТаблиц,
		3,
		"Сведения", ,
		НСтр("ru='Сведения об индивидуальном предпринимателе'"), ,
		ФормироватьВсе);
		
	ДобавитьТаблицу(
		СписокТаблиц,
		11,
		"Т11",
		НСтр("ru='Таблица № 1-1'"),
		НСтр("ru='Учет сырья'"),
		НСтр("ru='Учет приобретенного и израсходованного сырья по видам товаров (работ, услуг)'"),
		ФормироватьВсе);
		
	ДобавитьТаблицу(
		СписокТаблиц,
		12,
		"Т12",
		НСтр("ru='Таблица № 1-2'"),
		НСтр("ru='Учет полуфабрикатов'"),
		НСтр("ru='Учет выработанных и израсходованных полуфабрикатов по видам товаров (работ, услуг)'"),
		ФормироватьВсе);
		
	ДобавитьТаблицу(
		СписокТаблиц,
		13,
		"Т11",
		НСтр("ru='Таблица № 1-3'"),
		НСтр("ru='Учет вспомогательных материалов'"),
		НСтр("ru='Учет приобретенного и израсходованного вспомогательного сырья" +
			" и материалов по видам товаров (работ, услуг)'"),
		ФормироватьВсе);
		
	ДобавитьТаблицу(
		СписокТаблиц,
		14,
		"Т14",
		НСтр("ru='Таблица № 1-4'"),
		НСтр("ru='Иные материальные расходы'"),
		НСтр("ru='Учет иных материальных расходов (в т.ч. топливо, электроэнергия, транспортные услуги и т.п.)" +
			" и их распределение по видам деятельности'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		15,
		"Т15",
		НСтр("ru='Таблица № 1-5'"),
		НСтр("ru='Учет материалов, переданных в производство'"),
		НСтр("ru='Количественно-суммовой учет израсходованных материальных ресурсов на выпущенную готовую продукцию" +
			" по видам товаров (работ, услуг)'"),
		ФормироватьВсе);
		
	ДобавитьТаблицу(
		СписокТаблиц,
		16,
		"Т16",
		НСтр("ru='Таблица № 1-6'"),
		НСтр("ru='Учет доходов и расходов'"),
		НСтр("ru='Учет доходов и расходов по видам товаров (работ, услуг) в момент их совершения'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		17,
		"Т16",
		НСтр("ru='Таблица № 1-7'"),
		НСтр("ru='Доходы и расходы от реализации'"),
		НСтр("ru='Учет доходов и расходов по всем видам товаров (работ, услуг) за месяц'"),
		ФормироватьВсе);
		
	ДобавитьТаблицу(
		СписокТаблиц,
		21,
		"Т21",
		НСтр("ru='Таблица № 2-1'"),
		НСтр("ru='Амортизация ОС'"),
		НСтр("ru='Расчет амортизации основных средств, непосредственно используемых" +
			" для осуществления предпринимательской деятельности'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		22,
		"Т22",
		НСтр("ru='Таблица № 2-2'"),
		НСтр("ru='Амортизация ОС, приобретенных до 01.01.2002 г.'"),
		НСтр("ru='Расчет амортизации по основным средствам, приобретенным до 1 января 2002 г." +
			" и используемым для осуществления предпринимательской деятельности'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		41,
		"Т41",
		НСтр("ru='Таблица № 4-1'"),
		НСтр("ru='Амортизация НМА'"),
		НСтр("ru='Расчет амортизации нематериальных активов, непосредственно используемых" +
			" для осуществления предпринимательской деятельности'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		42,
		"Т42",
		НСтр("ru='Таблица № 4-2'"),
		НСтр("ru='Амортизация НМА, приобретенных до 01.01.2002 г.'"),
		НСтр("ru='Расчет амортизации по нематериальным активам, приобретенным до 1 января 2002 г." +
			" и используемым для осуществления предпринимательской деятельности'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		50,
		"Т5",
		НСтр("ru='Таблица № 5'"),
		НСтр("ru='Расходы на оплату труда'"),
		НСтр("ru='Расчет начисленных (выплаченных) в виде оплаты труда доходов и удержанных с них налогов'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		61,
		"Т61",
		НСтр("ru='Таблица № 6-1'"),
		НСтр("ru='Налоговая база'"),
		НСтр("ru='Определение налоговой базы по налогу на доходы физических лиц'"),
		Истина);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		62,
		"Т62",
		НСтр("ru='Таблица № 6-2'"),
		НСтр("ru='Прочие расходы'"),
		НСтр("ru='Регистр прочих расходов, связанных с осуществлением предпринимательской деятельности'"),
		ФормироватьВсе);
	
	ДобавитьТаблицу(
		СписокТаблиц,
		63,
		"Т63",
		НСтр("ru='Таблица № 6-3'"),
		НСтр("ru='Расходы будущих периодов'"),
		НСтр("ru='Регистр расходов, произведенных в отчетном налоговом периоде," +
			" но связанных с получением доходов в следующих налоговых периодах'"),
		ФормироватьВсе);
	
	Для Каждого Таблица Из СписокТаблиц Цикл
		Если Таблица.КодТаблицы = 0 Или ПустаяСтрока(Таблица.ИмяМакета) Тогда
			СписокТаблиц.Удалить(СписокТаблиц.Индекс(Таблица));
		КонецЕсли;
	КонецЦикла;
	
	СписокТаблиц.Сортировать("КодТаблицы");
	
КонецПроцедуры

Процедура ДобавитьТаблицу(СписокТаблиц, КодТаблицы, ИмяМакета, ЗаголовокТаблицы = "", Наименование = "", НаименованиеПолное = "", Формировать = Истина)
	
	НайденныеСтроки = СписокТаблиц.НайтиСтроки(Новый Структура("КодТаблицы", КодТаблицы));
	Если НайденныеСтроки.Количество() = 0 Тогда
		// При создании формы или таблица добавлена
		Таблица = СписокТаблиц.Добавить();
		Таблица.КодТаблицы  = КодТаблицы;
		Таблица.Формировать = Формировать;
	Иначе
		// При загрузке пользовательских настроек
		Таблица = НайденныеСтроки[0];
	КонецЕсли;
	
	Таблица.ЗаголовокТаблицы   = ЗаголовокТаблицы;
	Таблица.Наименование       = Наименование;
	Таблица.НаименованиеПолное = ?(ПустаяСтрока(НаименованиеПолное), Наименование, НаименованиеПолное);
	Таблица.ИмяМакета          = ИмяМакета;
	
КонецПроцедуры

#Область ТекстыЗапросов

Функция ТекстЗапросаОстаткиМПЗ(ПараметрыОтчета, НомераТаблиц, ИмяТаблицы, УловиеПоВидуМПЗ, ОстаткиНачальные = Истина)
	
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы,                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "Цены",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить(ИмяТаблицы,                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "ЦеныУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "Уничтожить",     НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИПМПЗОстатки.ДокументОплаты = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Оплачено,
	|	ИПМПЗОстатки.ВидМПЗ,
	|	ИПМПЗОстатки.Номенклатура,
	|	ИПМПЗОстатки.Партия,
	|	ИПМПЗОстатки.ДокументОплаты,
	|	ИПМПЗОстатки.КоличествоОстаток,
	|	ИПМПЗОстатки.СуммаОстаток,
	|	ИПМПЗОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТМПЗОстатки
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Остатки(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И &УловиеПоВидуМПЗ) КАК ИПМПЗОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПМПЗОстатки.Номенклатура,
	|	ИПМПЗОстатки.ВидМПЗ,
	|	ИПМПЗОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МПЗ.ВидМПЗ,
	|	МПЗ.Номенклатура,
	|	МПЗ.Партия,
	|	ВЫБОР
	|		КОГДА СУММА(МПЗ.КоличествоОстаток) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗ.СуммаОстаток) / СУММА(МПЗ.КоличествоОстаток) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА СУММА(МПЗ.КоличествоОстаток) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗ.СуммаОстаток + МПЗ.НДСОстаток) / СУММА(МПЗ.КоличествоОстаток) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницыСНДС
	|ПОМЕСТИТЬ ВТМПЗОстаткиЦены
	|ИЗ
	|	ВТМПЗОстатки КАК МПЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	МПЗ.ВидМПЗ,
	|	МПЗ.Номенклатура,
	|	МПЗ.Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МПЗ.Номенклатура,
	|	МПЗ.ВидМПЗ,
	|	МПЗ.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МПЗ.ВидМПЗ,
	|	МПЗ.Номенклатура,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА МПЗ.Номенклатура.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Наименование, ""-"") КАК ЕдиницаИзмерения,
	|	МПЗ.Партия,
	|	РеквизитыПартий.Номер КАК НомерПартии,
	|	РеквизитыПартий.Дата КАК ДатаПартии,
	|	РеквизитыПартий.ДатаРегистратора КАК ДатаРегистратораПартии,
	|	МПЗ.ДокументОплаты,
	|	РеквизитыДокументовОплаты.Номер КАК НомерДокументаОплаты,
	|	РеквизитыДокументовОплаты.Дата КАК ДатаДокументаОплаты,
	|	РеквизитыДокументовОплаты.ДатаРегистратора КАК ДатаРегистратораДокументаОплаты,
	|	МПЗ.КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницы
	|		ИНАЧЕ Цены.СтоимостьЕдиницыСНДС
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницыСНДС - Цены.СтоимостьЕдиницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСЕдиницы,
	|	Цены.СтоимостьЕдиницыСНДС КАК СтоимостьЕдиницыСНДС,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗ.СуммаОстаток
	|		ИНАЧЕ МПЗ.СуммаОстаток + МПЗ.НДСОстаток
	|	КОНЕЦ КАК СуммаОстаток,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗ.НДСОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСОстаток
	|ИЗ
	|	ВТМПЗОстатки КАК МПЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМПЗОстаткиЦены КАК Цены
	|		ПО МПЗ.Номенклатура = Цены.Номенклатура
	|			И МПЗ.ВидМПЗ = Цены.ВидМПЗ
	|			И МПЗ.Партия = Цены.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО МПЗ.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыПартий
	|		ПО (РеквизитыПартий.Организация = &Организация)
	|			И МПЗ.Партия = РеквизитыПартий.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И МПЗ.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|ГДЕ
	|	МПЗ.Оплачено
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураПредставление,
	|	ДатаПартии,
	|	ДатаРегистратораПартии,
	|	ДатаДокументаОплаты,
	|	ДатаРегистратораДокументаОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМПЗОстаткиЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМПЗОстатки";
	
	Если НЕ ОстаткиНачальные Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НачалоПериода", "&ГраницаКонцаПериода");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТМПЗОстатки", "ВТ" + ИмяТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УловиеПоВидуМПЗ", УловиеПоВидуМПЗ);
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОборотыМПЗ(ПараметрыОтчета, НомераТаблиц, ИмяТаблицы, УловиеПоВидуМПЗ)
	
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы,                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "Цены",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить(ИмяТаблицы,                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "ЦеныУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "Уничтожить",     НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИПМПЗ.ДокументОплаты = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Оплачено,
	|	ИПМПЗ.Период,
	|	ИПМПЗ.Регистратор,
	|	ИПМПЗ.Номенклатура,
	|	ИПМПЗ.Партия,
	|	ИПМПЗ.ДокументОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ИПМПЗ.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ИПМПЗ.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПриход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПМПЗ.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА ИПМПЗ.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоРасход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПМПЗ.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ИПМПЗ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПриход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПМПЗ.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА ИПМПЗ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаРасход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПМПЗ.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ИПМПЗ.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСПриход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПМПЗ.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА ИПМПЗ.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСРасход,
	|	ИПМПЗ.Корректировка
	|ПОМЕСТИТЬ ВТМПЗОбороты
	|ИЗ
	|	РегистрНакопления.ИПМПЗ КАК ИПМПЗ
	|ГДЕ
	|	ИПМПЗ.Активность
	|	И ИПМПЗ.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИПМПЗ.Организация = &Организация
	|	И ИПМПЗ.ХарактерДеятельности В(&СписокХарактеровДеятельности)
	|	И ИПМПЗ.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
	|	И &УловиеПоВидуМПЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПМПЗ.Период,
	|	ИПМПЗ.Регистратор,
	|	ИПМПЗ.Номенклатура,
	|	ИПМПЗ.Партия,
	|	ИПМПЗ.ДокументОплаты,
	|	ИПМПЗ.Корректировка";
	
	Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
	
		ТекстЗапроса = ТекстЗапроса +
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|" + 
		"ВЫБРАТЬ
		|	ИСТИНА КАК Оплачено,
		|	NULL КАК Период,
		|	NULL КАК Регистратор,
		|	NULL КАК Номенклатура,
		|	NULL КАК Партия,
		|	NULL КАК ДокументОплаты,
		|	ИПМПЗОбороты.КоличествоПриход,
		|	ИПМПЗОбороты.КоличествоРасход,
		|	ИПМПЗОбороты.СуммаПриход,
		|	ИПМПЗОбороты.СуммаРасход,
		|	ИПМПЗОбороты.НДСПриход,
		|	ИПМПЗОбороты.НДСРасход,
		|	ЛОЖЬ КАК Корректировка
		|ИЗ
		|	РегистрНакопления.ИПМПЗ.Обороты(
		|			&НачалоНалоговогоПериода,
		|			&КонецПредыдущегоПериода,
		|			,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И &УловиеПоВидуМПЗ
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Партия, Регистратор, Корректировка";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	МПЗ.Регистратор,
	|	МПЗ.Номенклатура,
	|	МПЗ.Партия,
	|	ВЫБОР
	|		КОГДА СУММА(МПЗ.СуммаРасход) <> 0
	|				И СУММА(МПЗ.КоличествоРасход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗ.СуммаРасход) / СУММА(МПЗ.КоличествоРасход) КАК ЧИСЛО(15, 2))
	|		КОГДА СУММА(МПЗ.СуммаПриход) <> 0
	|				И СУММА(МПЗ.КоличествоПриход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗ.СуммаПриход) / СУММА(МПЗ.КоличествоПриход) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА СУММА(МПЗ.СуммаРасход + МПЗ.НДСРасход) <> 0
	|				И СУММА(МПЗ.КоличествоРасход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗ.СуммаРасход + МПЗ.НДСРасход) / СУММА(МПЗ.КоличествоРасход) КАК ЧИСЛО(15, 2))
	|		КОГДА СУММА(МПЗ.СуммаПриход + МПЗ.НДСПриход) <> 0
	|				И СУММА(МПЗ.КоличествоПриход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗ.СуммаПриход + МПЗ.НДСПриход) / СУММА(МПЗ.КоличествоПриход) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницыСНДС,
	|	МПЗ.Корректировка
	|ПОМЕСТИТЬ ВТМПЗОборотыЦены
	|ИЗ
	|	ВТМПЗОбороты КАК МПЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	МПЗ.Номенклатура,
	|	МПЗ.Партия,
	|	МПЗ.Регистратор,
	|	МПЗ.Корректировка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МПЗ.Номенклатура,
	|	МПЗ.Партия,
	|	МПЗ.Регистратор,
	|	МПЗ.Корректировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА МПЗ.Период ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПериодОтчета,
	|	НАЧАЛОПЕРИОДА(МПЗ.Период, МЕСЯЦ) КАК Месяц,
	|	МПЗ.Период КАК Период,
	|	МПЗ.Регистратор КАК Регистратор,
	|	МПЗ.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА МПЗ.Номенклатура.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Наименование, ""-"") КАК ЕдиницаИзмерения,
	|	МПЗ.Партия КАК Партия,
	|	РеквизитыПартий.Номер КАК НомерПартии,
	|	РеквизитыПартий.Дата КАК ДатаПартии,
	|	РеквизитыПартий.ДатаРегистратора КАК ДатаРегистратораПартии,
	|	МПЗ.ДокументОплаты,
	|	РеквизитыДокументовОплаты.Номер КАК НомерДокументаОплаты,
	|	РеквизитыДокументовОплаты.Дата КАК ДатаДокументаОплаты,
	|	РеквизитыДокументовОплаты.ДатаРегистратора КАК ДатаРегистратораДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницы
	|		ИНАЧЕ Цены.СтоимостьЕдиницыСНДС
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницыСНДС - Цены.СтоимостьЕдиницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСЕдиницы,
	|	Цены.СтоимостьЕдиницыСНДС КАК СтоимостьЕдиницыСНДС,
	|	МПЗ.КоличествоПриход КАК КоличествоПриход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗ.СуммаПриход
	|		ИНАЧЕ МПЗ.СуммаПриход + МПЗ.НДСПриход
	|	КОНЕЦ КАК СуммаПриход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗ.НДСПриход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСПриход,
	|	МПЗ.СуммаПриход + МПЗ.НДСПриход КАК СуммаПриходСНДС,
	|	МПЗ.КоличествоРасход КАК КоличествоРасход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗ.СуммаРасход
	|		ИНАЧЕ МПЗ.СуммаРасход + МПЗ.НДСРасход
	|	КОНЕЦ КАК СуммаРасход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗ.НДСРасход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСРасход,
	|	МПЗ.СуммаРасход + МПЗ.НДСРасход КАК СуммаРасходСНДС,
	|	МПЗ.Корректировка КАК Корректировка
	|ИЗ
	|	ВТМПЗОбороты КАК МПЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМПЗОборотыЦены КАК Цены
	|		ПО МПЗ.Номенклатура = Цены.Номенклатура
	|			И МПЗ.Партия = Цены.Партия
	|			И МПЗ.Регистратор = Цены.Регистратор
	|			И МПЗ.Корректировка = Цены.Корректировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО МПЗ.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И МПЗ.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыПартий
	|		ПО (РеквизитыПартий.Организация = &Организация)
	|			И МПЗ.Партия = РеквизитыПартий.Документ
	|ГДЕ
	|	МПЗ.Оплачено
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодОтчета,
	|	МПЗ.Период,
	|	МПЗ.Регистратор,
	|	НоменклатураПредставление,
	|	ДатаПартии,
	|	ДатаРегистратораПартии,
	|	ДатаДокументаОплаты,
	|	ДатаРегистратораДокументаОплаты,
	|	МПЗ.Корректировка УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(Период),
	|	СУММА(КоличествоПриход),
	|	СУММА(СуммаПриход),
	|	СУММА(НДСПриход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(КоличествоРасход),
	|	СУММА(СуммаРасход),
	|	СУММА(НДСРасход),
	|	СУММА(СуммаРасходСНДС)
	|ПО
	|	ОБЩИЕ,
	|	ПериодОтчета,
	|	Месяц,
	|	Регистратор,
	|	Корректировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМПЗОборотыЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМПЗОбороты";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТМПЗОбороты", "ВТ" + ИмяТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УловиеПоВидуМПЗ", УловиеПоВидуМПЗ);
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИПМПЗ.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОстаткиМПЗОтгруженные(ПараметрыОтчета, НомераТаблиц, ИмяТаблицы, УловиеПоВидуМПЗ, ОстаткиНачальные = Истина)
	
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы,                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "Цены",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить(ИмяТаблицы,                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "ЦеныУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ" + ИмяТаблицы + "Уничтожить",     НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИПМПЗОтгруженныеОстатки.ДокументОплаты = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Оплачено,
	|	ИПМПЗОтгруженныеОстатки.Номенклатура,
	|	ИПМПЗОтгруженныеОстатки.Партия,
	|	ИПМПЗОтгруженныеОстатки.ДокументОплаты,
	|	ИПМПЗОтгруженныеОстатки.ДокументОтгрузки,
	|	ИПМПЗОтгруженныеОстатки.КоличествоОстаток,
	|	ИПМПЗОтгруженныеОстатки.СуммаОстаток,
	|	ИПМПЗОтгруженныеОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТМПЗОстаткиОтгруженные
	|ИЗ
	|	РегистрНакопления.ИПМПЗОтгруженные.Остатки(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И &УловиеПоВидуМПЗ) КАК ИПМПЗОтгруженныеОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПМПЗОтгруженныеОстатки.Номенклатура,
	|	ИПМПЗОтгруженныеОстатки.Партия,
	|	ИПМПЗОтгруженныеОстатки.ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МПЗОтгруженные.Номенклатура,
	|	МПЗОтгруженные.Партия,
	|	МПЗОтгруженные.ДокументОтгрузки,
	|	ВЫБОР
	|		КОГДА СУММА(МПЗОтгруженные.КоличествоОстаток) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗОтгруженные.СуммаОстаток) / СУММА(МПЗОтгруженные.КоличествоОстаток) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА СУММА(МПЗОтгруженные.КоличествоОстаток) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(МПЗОтгруженные.СуммаОстаток + МПЗОтгруженные.НДСОстаток) / СУММА(МПЗОтгруженные.КоличествоОстаток) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницыСНДС
	|ПОМЕСТИТЬ ВТМПЗОтгруженныеЦены
	|ИЗ
	|	ВТМПЗОстаткиОтгруженные КАК МПЗОтгруженные
	|
	|СГРУППИРОВАТЬ ПО
	|	МПЗОтгруженные.Номенклатура,
	|	МПЗОтгруженные.Партия,
	|	МПЗОтгруженные.ДокументОтгрузки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МПЗОтгруженные.Номенклатура,
	|	МПЗОтгруженные.Партия,
	|	МПЗОтгруженные.ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МПЗОтгруженные.Номенклатура,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА МПЗОтгруженные.Номенклатура.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Наименование, ""-"") КАК ЕдиницаИзмерения,
	|	МПЗОтгруженные.Партия,
	|	РеквизитыПартий.Номер КАК НомерПартии,
	|	РеквизитыПартий.Дата КАК ДатаПартии,
	|	РеквизитыПартий.ДатаРегистратора КАК ДатаРегистратораПартии,
	|	МПЗОтгруженные.ДокументОплаты,
	|	РеквизитыДокументовОплаты.Номер КАК НомерДокументаОплаты,
	|	РеквизитыДокументовОплаты.Дата КАК ДатаДокументаОплаты,
	|	РеквизитыДокументовОплаты.ДатаРегистратора КАК ДатаРегистратораДокументаОплаты,
	|	МПЗОтгруженные.ДокументОтгрузки,
	|	РеквизитыДокументовОтгрузки.Номер КАК НомерДокументаОтгрузки,
	|	РеквизитыДокументовОтгрузки.Дата КАК ДатаДокументаОтгрузки,
	|	РеквизитыДокументовОтгрузки.ДатаРегистратора КАК ДатаРегистратораДокументаОтгрузки,
	|	МПЗОтгруженные.КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницы
	|		ИНАЧЕ Цены.СтоимостьЕдиницыСНДС
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницыСНДС - Цены.СтоимостьЕдиницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСЕдиницы,
	|	Цены.СтоимостьЕдиницыСНДС КАК СтоимостьЕдиницыСНДС,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗОтгруженные.СуммаОстаток
	|		ИНАЧЕ МПЗОтгруженные.СуммаОстаток + МПЗОтгруженные.НДСОстаток
	|	КОНЕЦ КАК СуммаОстаток,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА МПЗОтгруженные.НДСОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСОстаток
	|ИЗ
	|	ВТМПЗОстаткиОтгруженные КАК МПЗОтгруженные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМПЗОтгруженныеЦены КАК Цены
	|		ПО МПЗОтгруженные.Номенклатура = Цены.Номенклатура
	|			И МПЗОтгруженные.Партия = Цены.Партия
	|			И МПЗОтгруженные.ДокументОтгрузки = Цены.ДокументОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО МПЗОтгруженные.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыПартий
	|		ПО (РеквизитыПартий.Организация = &Организация)
	|			И МПЗОтгруженные.Партия = РеквизитыПартий.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И МПЗОтгруженные.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОтгрузки
	|		ПО (РеквизитыДокументовОтгрузки.Организация = &Организация)
	|			И МПЗОтгруженные.ДокументОтгрузки = РеквизитыДокументовОтгрузки.Документ
	|ГДЕ
	|	МПЗОтгруженные.Оплачено
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураПредставление,
	|	ДатаПартии,
	|	ДатаРегистратораПартии,
	|	ДатаДокументаОплаты,
	|	ДатаРегистратораДокументаОплаты,
	|	ДатаДокументаОтгрузки,
	|	ДатаРегистратораДокументаОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМПЗОтгруженныеЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМПЗОстаткиОтгруженные";
	
	Если НЕ ОстаткиНачальные Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НачалоПериода", "&ГраницаКонцаПериода");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТМПЗОстаткиОтгруженные", "ВТ" + ИмяТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УловиеПоВидуМПЗ", УловиеПоВидуМПЗ);
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаОстаткиИМР(ПараметрыОтчета, НомераТаблиц)

	НомераТаблиц.Вставить("ВТИМРОстатки",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НачОстаткиИМР",          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТИМРОстаткиУничтожить", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИМРОстатки.СтатьяЗатрат,
	|	ИМРОстатки.Партия,
	|	ИМРОстатки.ДокументОплаты,
	|	ИМРОстатки.КоличествоОстаток,
	|	ИМРОстатки.СуммаОстаток,
	|	ИМРОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТИМРОстатки
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Остатки(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&ВсеХарактерыДеятельности)
	|				И НоменклатурнаяГруппа <> &ПустаяНоменклатурнаяГруппа
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИМРОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИМРОстатки.СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИМР.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА ИМР.СтатьяЗатрат.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК СтатьяЗатратПредставление,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Наименование, ""-"") КАК ЕдиницаИзмерения,
	|	ИМР.Партия,
	|	РеквизитыПартий.Номер КАК НомерПартии,
	|	РеквизитыПартий.Дата КАК ДатаПартии,
	|	РеквизитыПартий.ДатаРегистратора КАК ДатаРегистратораПартии,
	|	ИМР.ДокументОплаты,
	|	РеквизитыДокументовОплаты.Номер КАК НомерДокументаОплаты,
	|	РеквизитыДокументовОплаты.Дата КАК ДатаДокументаОплаты,
	|	РеквизитыДокументовОплаты.ДатаРегистратора КАК ДатаРегистратораДокументаОплаты,
	|	ИМР.КоличествоОстаток КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИМР.СуммаОстаток
	|		ИНАЧЕ ИМР.СуммаОстаток + ИМР.НДСОстаток
	|	КОНЕЦ КАК СуммаОстаток,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИМР.НДСОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСОстаток
	|ИЗ
	|	ВТИМРОстатки КАК ИМР
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ИМР.СтатьяЗатрат = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыПартий
	|		ПО (РеквизитыПартий.Организация = &Организация)
	|			И ИМР.Партия = РеквизитыПартий.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И ИМР.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатьяЗатратПредставление,
	|	ДатаПартии,
	|	ДатаРегистратораПартии,
	|	ДатаДокументаОплаты,
	|	ДатаРегистратораДокументаОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИМРОстатки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОборотыИМР(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТИМРОбороты",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТИМРОборотыЦены",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОборотыИМР",                 НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВидыДеятельностиИМР",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТИМРОборотыЦеныУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТИМРОборотыУничтожить",     НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИПИМР.ДокументОплаты = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Оплачено,
	|	ИПИМР.Период,
	|	ИПИМР.Регистратор,
	|	ВидыДеятельности.ВидДеятельности,
	|	ИПИМР.СтатьяЗатрат,
	|	ИПИМР.Партия,
	|	ИПИМР.ДокументОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ИПИМР.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ИПИМР.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПриход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПИМР.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА ИПИМР.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоРасход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПИМР.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ИПИМР.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПриход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПИМР.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА ИПИМР.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаРасход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПИМР.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ИПИМР.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСПриход,
	|	СУММА(ВЫБОР
	|			КОГДА ИПИМР.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА ИПИМР.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСРасход,
	|	ИПИМР.Корректировка
	|ПОМЕСТИТЬ ВТИМРОбороты
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы КАК ИПИМР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыДеятельностиПредпринимателей КАК ВидыДеятельности
	|		ПО ИПИМР.НоменклатурнаяГруппа = ВидыДеятельности.НоменклатурнаяГруппа
	|			И ИПИМР.ХарактерДеятельности = ВидыДеятельности.ХарактерДеятельности
	|ГДЕ
	|	ИПИМР.Активность
	|	И ИПИМР.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИПИМР.Организация = &Организация
	|	И ИПИМР.ХарактерДеятельности В(&ВсеХарактерыДеятельности)
	|	И ИПИМР.НоменклатурнаяГруппа <> &ПустаяНоменклатурнаяГруппа
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПИМР.Период,
	|	ИПИМР.Регистратор,
	|	ВидыДеятельности.ВидДеятельности,
	|	ИПИМР.СтатьяЗатрат,
	|	ИПИМР.Партия,
	|	ИПИМР.ДокументОплаты,
	|	ИПИМР.Корректировка";
	
	Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
	
		ТекстЗапроса = ТекстЗапроса +
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|" + 
		"ВЫБРАТЬ
		|	ИСТИНА КАК Оплачено,
		|	NULL КАК Период,
		|	NULL КАК Регистратор,
		|	ВидыДеятельности.ВидДеятельности КАК ВидДеятельности,
		|	NULL КАК СтатьяЗатрат,
		|	NULL КАК Партия,
		|	NULL КАК ДокументОплаты,
		|	ИПИМРОбороты.КоличествоПриход,
		|	ИПИМРОбороты.КоличествоРасход,
		|	ИПИМРОбороты.СуммаПриход,
		|	ИПИМРОбороты.СуммаРасход,
		|	ИПИМРОбороты.НДСПриход,
		|	ИПИМРОбороты.НДСРасход,
		|	ЛОЖЬ КАК Корректировка
		|ИЗ
		|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
		|			&НачалоНалоговогоПериода,
		|			&КонецПредыдущегоПериода,
		|			,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&ВсеХарактерыДеятельности)
		|				И НоменклатурнаяГруппа <> &ПустаяНоменклатурнаяГруппа
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПИМРОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыДеятельностиПредпринимателей КАК ВидыДеятельности
		|		ПО ИПИМРОбороты.НоменклатурнаяГруппа = ВидыДеятельности.НоменклатурнаяГруппа
		|			И ИПИМРОбороты.ХарактерДеятельности = ВидыДеятельности.ХарактерДеятельности";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат, Партия, Регистратор, Корректировка";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	ИМР.Регистратор,
	|	ИМР.СтатьяЗатрат,
	|	ИМР.Партия,
	|	ВЫБОР
	|		КОГДА СУММА(ИМР.СуммаРасход) <> 0
	|				И СУММА(ИМР.КоличествоРасход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ИМР.СуммаРасход) / СУММА(ИМР.КоличествоРасход) КАК ЧИСЛО(15, 2))
	|		КОГДА СУММА(ИМР.СуммаПриход) <> 0
	|				И СУММА(ИМР.КоличествоПриход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ИМР.СуммаПриход) / СУММА(ИМР.КоличествоПриход) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА СУММА(ИМР.СуммаРасход + ИМР.НДСРасход) <> 0
	|				И СУММА(ИМР.КоличествоРасход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ИМР.СуммаРасход + ИМР.НДСРасход) / СУММА(ИМР.КоличествоРасход) КАК ЧИСЛО(15, 2))
	|		КОГДА СУММА(ИМР.СуммаПриход + ИМР.НДСПриход) <> 0
	|				И СУММА(ИМР.КоличествоПриход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ИМР.СуммаПриход + ИМР.НДСПриход) / СУММА(ИМР.КоличествоПриход) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницыСНДС,
	|	ИМР.Корректировка
	|ПОМЕСТИТЬ ВТИМРОборотыЦены
	|ИЗ
	|	ВТИМРОбороты КАК ИМР
	|
	|СГРУППИРОВАТЬ ПО
	|	ИМР.СтатьяЗатрат,
	|	ИМР.Партия,
	|	ИМР.Регистратор,
	|	ИМР.Корректировка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИМР.СтатьяЗатрат,
	|	ИМР.Партия,
	|	ИМР.Регистратор,
	|	ИМР.Корректировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИМР.Период ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПериодОтчета,
	|	НАЧАЛОПЕРИОДА(ИМР.Период, МЕСЯЦ) КАК Месяц,
	|	ИМР.Период,
	|	ИМР.Регистратор,
	|	ЕСТЬNULL(ИМР.ВидДеятельности, НЕОПРЕДЕЛЕНО) КАК ВидДеятельности,
	|	ИМР.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА ИМР.СтатьяЗатрат.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК СтатьяЗатратПредставление,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Наименование, ""-"") КАК ЕдиницаИзмерения,
	|	ИМР.Партия,
	|	РеквизитыПартий.Номер КАК НомерПартии,
	|	РеквизитыПартий.Дата КАК ДатаПартии,
	|	РеквизитыПартий.ДатаРегистратора КАК ДатаРегистратораПартии,
	|	ИМР.ДокументОплаты,
	|	РеквизитыДокументовОплаты.Номер КАК НомерДокументаОплаты,
	|	РеквизитыДокументовОплаты.Дата КАК ДатаДокументаОплаты,
	|	РеквизитыДокументовОплаты.ДатаРегистратора КАК ДатаРегистратораДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницы
	|		ИНАЧЕ Цены.СтоимостьЕдиницыСНДС
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницыСНДС - Цены.СтоимостьЕдиницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСЕдиницы,
	|	Цены.СтоимостьЕдиницыСНДС КАК СтоимостьЕдиницыСНДС,
	|	ИМР.КоличествоПриход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИМР.СуммаПриход
	|		ИНАЧЕ ИМР.СуммаПриход + ИМР.НДСПриход
	|	КОНЕЦ КАК СуммаПриход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИМР.НДСПриход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСПриход,
	|	ИМР.СуммаПриход + ИМР.НДСПриход КАК СуммаПриходСНДС,
	|	ИМР.КоличествоРасход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИМР.СуммаРасход
	|		ИНАЧЕ ИМР.СуммаРасход + ИМР.НДСРасход
	|	КОНЕЦ КАК СуммаРасход,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИМР.НДСРасход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСРасход,
	|	ИМР.СуммаРасход + ИМР.НДСРасход КАК СуммаРасходСНДС,
	|	ИМР.Корректировка
	|ИЗ
	|	ВТИМРОбороты КАК ИМР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИМРОборотыЦены КАК Цены
	|		ПО ИМР.СтатьяЗатрат = Цены.СтатьяЗатрат
	|			И ИМР.Партия = Цены.Партия
	|			И ИМР.Регистратор = Цены.Регистратор
	|			И ИМР.Корректировка = Цены.Корректировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ИМР.СтатьяЗатрат = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И ИМР.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыПартий
	|		ПО (РеквизитыПартий.Организация = &Организация)
	|			И ИМР.Партия = РеквизитыПартий.Документ
	|ГДЕ
	|	ИМР.Оплачено
	|	И (ИМР.СуммаПриход + ИМР.НДСПриход <> 0
	|			ИЛИ ИМР.СуммаРасход + ИМР.НДСРасход <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодОтчета,
	|	ИМР.Период,
	|	ИМР.Регистратор,
	|	СтатьяЗатратПредставление,
	|	ДатаПартии,
	|	ДатаРегистратораПартии,
	|	ДатаДокументаОплаты,
	|	ДатаРегистратораДокументаОплаты,
	|	ИМР.Корректировка УБЫВ
	|ИТОГИ
	|	СУММА(СуммаПриход),
	|	СУММА(НДСПриход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(СуммаРасход),
	|	СУММА(НДСРасход),
	|	СУММА(СуммаРасходСНДС)
	|ПО
	|	ОБЩИЕ,
	|	ПериодОтчета,
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ИМР.ВидДеятельности, НЕОПРЕДЕЛЕНО) КАК ВидДеятельности,
	|	ИМР.ВидДеятельности.Наименование КАК ВидДеятельностиПредставление
	|ИЗ
	|	ВТИМРОбороты КАК ИМР
	|ГДЕ
	|	ИМР.Оплачено
	|	И (ИМР.КоличествоРасход <> 0
	|			ИЛИ ИМР.СуммаРасход <> 0
	|			ИЛИ ИМР.НДСРасход <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидДеятельностиПредставление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИМРОборотыЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИМРОбороты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОбороты(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТОбороты",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Обороты",                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПолуфабрикатыВОборотах", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТОборотыУничтожить",    НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИПМПЗОборотыОбороты.Период,
	|	ИПМПЗОборотыОбороты.ВидСписанногоМПЗ,
	|	ИПМПЗОборотыОбороты.НоменклатураСписанная,
	|	ИПМПЗОборотыОбороты.ПартияСписаннойНоменклатуры,
	|	ИПМПЗОборотыОбороты.НоменклатураПоступившая,
	|	ИПМПЗОборотыОбороты.ПартияПоступившейНоменклатуры,
	|	ИПМПЗОборотыОбороты.КоличествоОборот,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИПМПЗОборотыОбороты.СуммаОборот
	|		ИНАЧЕ ИПМПЗОборотыОбороты.СуммаОборот + ИПМПЗОборотыОбороты.НДСОборот
	|	КОНЕЦ КАК СуммаОборот,
	|	ВЫБОР
	|		КОГДА ИПМПЗОборотыОбороты.СуммаОборот < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ЗнакОборота
	|ПОМЕСТИТЬ ВТОбороты
	|ИЗ
	|	РегистрНакопления.ИПМПЗОбороты.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			Организация = &Организация
	|				И ВидПоступившегоМПЗ = &Продукция
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОборотыОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПМПЗОборотыОбороты.НоменклатураПоступившая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Обороты.Период, МЕСЯЦ) КАК Месяц,
	|	Обороты.Период КАК День,
	|	Обороты.ВидСписанногоМПЗ КАК ВидПолуфабриката,
	|	Обороты.НоменклатураСписанная КАК Полуфабрикат,
	|	Обороты.ПартияСписаннойНоменклатуры КАК ПартияПолуфабриката,
	|	Обороты.НоменклатураПоступившая КАК Номенклатура,
	|	Обороты.ПартияПоступившейНоменклатуры КАК Партия,
	|	РеквизитыПартий.Дата КАК ДатаПартии,
	|	РеквизитыПартий.ДатаРегистратора КАК ДатаРегистратораПартии,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА Обороты.НоменклатураПоступившая.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	Обороты.КоличествоОборот КАК Количество,
	|	Обороты.СуммаОборот КАК Сумма
	|ИЗ
	|	ВТОбороты КАК Обороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Обороты.НоменклатураПоступившая = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыПартий
	|		ПО (РеквизитыПартий.Организация = &Организация)
	|			И Обороты.ПартияПоступившейНоменклатуры = РеквизитыПартий.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	День,
	|	НоменклатураПредставление,
	|	ДатаПартии,
	|	ДатаРегистратораПартии
	|ИТОГИ
	|	МАКСИМУМ(ДатаПартии),
	|	МАКСИМУМ(НоменклатураПредставление),
	|	СУММА(Количество),
	|	СУММА(Сумма)
	|ПО
	|	Месяц,
	|	День,
	|	Номенклатура,
	|	Партия,
	|	ВидПолуфабриката,
	|	Полуфабрикат,
	|	ПартияПолуфабриката
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Обороты.ВидСписанногоМПЗ КАК ВидПолуфабриката,
	|	Обороты.НоменклатураСписанная КАК Полуфабрикат,
	|	ВЫБОР
	|		КОГДА Обороты.НоменклатураСписанная ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(Обороты.НоменклатураСписанная.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Обороты.НоменклатураСписанная)
	|	КОНЕЦ КАК ПолуфабрикатПредставление
	|ИЗ
	|	ВТОбороты КАК Обороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Полуфабрикат,
	|	ВидПолуфабриката
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОбороты";
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВТДоходыИРасходы(ПараметрыОтчета, НомераТаблиц, ДляПризнанияРасходовТребуетсяПолучениеДоходаИП)
	Перем ТекстЗапроса;
	
	Если НЕ ДляПризнанияРасходовТребуетсяПолучениеДоходаИП Тогда
		
		НомераТаблиц.Вставить("ВТРасходы",            НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТДоходыИРасходы",     НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТДоходыИРасходыЦены", НомераТаблиц.Количество());
		
		// Собираем расходы
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИПМПЗ.ДокументОплаты = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Оплачено,
		|	ИПМПЗ.Период,
		|	ИПМПЗ.Регистратор,
		|	ИПМПЗ.ВидМПЗ,
		|	ИПМПЗ.Номенклатура,
		|	ИПМПЗ.Партия,
		|	ИПМПЗ.ДокументОплаты,
		|	СУММА(ВЫБОР
		|			КОГДА ИПМПЗ.ВидМПЗ = &Продукция
		|				ТОГДА ИПМПЗ.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоПриход,
		|	СУММА(ВЫБОР
		|			КОГДА ИПМПЗ.ВидМПЗ = &Продукция
		|				ТОГДА ИПМПЗ.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПриход,
		|	СУММА(ВЫБОР
		|			КОГДА ИПМПЗ.ВидМПЗ = &Продукция
		|				ТОГДА ИПМПЗ.НДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НДСПриход,
		|	СУММА(ИПМПЗ.Количество) КАК КоличествоОборот,
		|	СУММА(ИПМПЗ.Сумма) КАК СуммаОборот,
		|	СУММА(ИПМПЗ.НДС) КАК НДСОборот,
		|	ИПМПЗ.Корректировка
		|ПОМЕСТИТЬ ВТРасходы
		|ИЗ
		|	РегистрНакопления.ИПМПЗ КАК ИПМПЗ
		|ГДЕ
		|	ИПМПЗ.Активность
		|	И ИПМПЗ.ВидДвижения = &ВидДвиженияПриход
		|	И ИПМПЗ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ИПМПЗ.Организация = &Организация
		|	И ИПМПЗ.ХарактерДеятельности В(&СписокХарактеровДеятельности)
		|	И ИПМПЗ.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
		|	И ИПМПЗ.ВидМПЗ В(&ПродукцияТоварыПолуфабрикаты)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПМПЗ.Период,
		|	ИПМПЗ.Регистратор,
		|	ИПМПЗ.ВидМПЗ,
		|	ИПМПЗ.Номенклатура,
		|	ИПМПЗ.Партия,
		|	ИПМПЗ.ДокументОплаты,
		|	ИПМПЗ.Корректировка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИПМПЗОборотыОбороты.ДокументОплаты = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ИПМПЗОборотыОбороты.Период,
		|	ИПМПЗОборотыОбороты.Регистратор,
		|	ИПМПЗОборотыОбороты.ВидСписанногоМПЗ,
		|	ИПМПЗОборотыОбороты.НоменклатураСписанная,
		|	ИПМПЗОборотыОбороты.ПартияСписаннойНоменклатуры,
		|	ИПМПЗОборотыОбороты.ДокументОплаты,
		|	0,
		|	0,
		|	0,
		|	-ИПМПЗОборотыОбороты.КоличествоОборот,
		|	-ИПМПЗОборотыОбороты.СуммаОборот,
		|	-ИПМПЗОборотыОбороты.НДСОборот,
		|	ЛОЖЬ
		|ИЗ
		|	РегистрНакопления.ИПМПЗОбороты.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И ВидСписанногоМПЗ В (&ТоварыПолуфабрикаты)) КАК ИПМПЗОборотыОбороты";
		
		Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
			// Расходы предыдущих месяцев года
			ТекстЗапроса = ТекстЗапроса +
			"
			|ОБЪЕДИНИТЬ ВСЕ
			|" + 
			"ВЫБРАТЬ
			|	ИСТИНА КАК Оплачено,
			|	NULL КАК Период,
			|	NULL КАК Регистратор,
			|	NULL КАК ВидМПЗ,
			|	NULL КАК Номенклатура,
			|	NULL КАК Партия,
			|	NULL КАК ДокументОплаты,
			|	ВЫБОР
			|		КОГДА ИПМПЗОбороты.ВидМПЗ = &Продукция
			|			ТОГДА ИПМПЗОбороты.КоличествоПриход
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПриход,
			|	ВЫБОР
			|		КОГДА ИПМПЗОбороты.ВидМПЗ = &Продукция
			|			ТОГДА ИПМПЗОбороты.СуммаПриход
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаПриход,
			|	ВЫБОР
			|		КОГДА ИПМПЗОбороты.ВидМПЗ = &Продукция
			|			ТОГДА ИПМПЗОбороты.НДСПриход
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК НДСПриход,
			|	ИПМПЗОбороты.КоличествоПриход КАК КоличествоОборот,
			|	ИПМПЗОбороты.СуммаПриход КАК СуммаОборот,
			|	ИПМПЗОбороты.НДСПриход КАК НДСОборот,
			|	ЛОЖЬ КАК Корректировка
			|ИЗ
			|	РегистрНакопления.ИПМПЗ.Обороты(
			|			&НачалоНалоговогоПериода,
			|			&КонецПредыдущегоПериода,
			|			,
			|			Организация = &Организация
			|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
			|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
			|				И ВидМПЗ В (&ПродукцияТоварыПолуфабрикаты)
			|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИСТИНА,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	0,
			|	0,
			|	0,
			|	-ИПМПЗОборотыОбороты.КоличествоОборот,
			|	-ИПМПЗОборотыОбороты.СуммаОборот,
			|	-ИПМПЗОборотыОбороты.НДСОборот,
			|	ЛОЖЬ
			|ИЗ
			|	РегистрНакопления.ИПМПЗОбороты.Обороты(
			|			&НачалоНалоговогоПериода,
			|			&КонецПредыдущегоПериода,
			|			,
			|			Организация = &Организация
			|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
			|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
			|				И ВидСписанногоМПЗ В (&ТоварыПолуфабрикаты)
			|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОборотыОбороты";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИПДоходы.ДокументОплаты = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Оплачено,
		|	ЛОЖЬ КАК ЭтоИМР,
		|	ИПДоходы.Период,
		|	ИПДоходы.Регистратор,
		|	ИПДоходы.ВидМПЗ,
		|	ИПДоходы.Номенклатура,
		|	ИПДоходы.ДокументОтгрузки,
		|	ИПДоходы.Партия,
		|	ИПДоходы.ДокументОплаты,
		|	СУММА(ИПДоходы.Количество) КАК КоличествоОборот,
		|	СУММА(ИПДоходы.Выручка) КАК ВыручкаОборот,
		|	СУММА(ИПДоходы.НДСНачисленный) КАК НДСНачисленныйОборот,
		|	0 КАК СуммаОборот,
		|	0 КАК НДСОборот,
		|	0 КАК КоличествоОплаченоПоставщикуОборот,
		|	0 КАК КоличествоПриход,
		|	0 КАК СуммаПриход,
		|	0 КАК НДСПриход,
		|	ИПДоходы.Корректировка
		|ПОМЕСТИТЬ ВТДоходыИРасходы
		|ИЗ
		|	РегистрНакопления.ИПДоходы КАК ИПДоходы
		|ГДЕ
		|	ИПДоходы.Активность
		|	И ИПДоходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ИПДоходы.Организация = &Организация
		|	И ИПДоходы.ХарактерДеятельности В(&СписокХарактеровДеятельности)
		|	И ИПДоходы.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПДоходы.Период,
		|	ИПДоходы.Регистратор,
		|	ИПДоходы.ВидМПЗ,
		|	ИПДоходы.Номенклатура,
		|	ИПДоходы.ДокументОтгрузки,
		|	ИПДоходы.Партия,
		|	ИПДоходы.ДокументОплаты,
		|	ИПДоходы.Корректировка
		|
		|ИМЕЮЩИЕ
		|	СУММА(ИПДоходы.Выручка) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТРасходы.Оплачено,
		|	ЛОЖЬ,
		|	ВТРасходы.Период,
		|	ВТРасходы.Регистратор,
		|	ВТРасходы.ВидМПЗ,
		|	ВТРасходы.Номенклатура,
		|	НЕОПРЕДЕЛЕНО,
		|	ВТРасходы.Партия,
		|	ВТРасходы.ДокументОплаты,
		|	0,
		|	0,
		|	0,
		|	СУММА(ВТРасходы.СуммаОборот),
		|	СУММА(ВТРасходы.НДСОборот),
		|	СУММА(ВТРасходы.КоличествоОборот),
		|	СУММА(ВТРасходы.КоличествоПриход),
		|	СУММА(ВТРасходы.СуммаПриход),
		|	СУММА(ВТРасходы.НДСПриход),
		|	ВТРасходы.Корректировка
		|ИЗ
		|	ВТРасходы КАК ВТРасходы
		|ГДЕ
		|	(ВТРасходы.СуммаОборот <> 0
		|			ИЛИ ВТРасходы.НДСОборот <> 0
		|			ИЛИ ВТРасходы.СуммаПриход <> 0
		|			ИЛИ ВТРасходы.НДСПриход <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТРасходы.Оплачено,
		|	ВТРасходы.Период,
		|	ВТРасходы.Регистратор,
		|	ВТРасходы.ВидМПЗ,
		|	ВТРасходы.Номенклатура,
		|	ВТРасходы.Партия,
		|	ВТРасходы.ДокументОплаты,
		|	ВТРасходы.Корректировка";
		
		Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
			// Добавляем доходы предыдущих месяцев
			ТекстЗапроса = ТекстЗапроса +
			"
			|ОБЪЕДИНИТЬ ВСЕ
			|" + 
			"ВЫБРАТЬ
			|	ИСТИНА КАК Оплачено,
			|	ЛОЖЬ КАК ИМР,
			|	NULL КАК Период,
			|	NULL КАК Регистратор,
			|	NULL КАК ВидМПЗ,
			|	NULL КАК Номенклатура,
			|	NULL КАК ДокументОтгрузки,
			|	NULL КАК Партия,
			|	NULL КАК ДокументОплаты,
			|	ИПДоходыОбороты.КоличествоОборот,
			|	ИПДоходыОбороты.ВыручкаОборот,
			|	ИПДоходыОбороты.НДСНачисленныйОборот,
			|	0 КАК СуммаОборот,
			|	0 КАК НДСОборот,
			|	0 КАК КоличествоОплаченоПоставщикуОборот,
			|	0 КАК КоличествоПриход,
			|	0 КАК СуммаПриход,
			|	0 КАК НДСПриход,
			|	ЛОЖЬ КАК Корректировка
			|ИЗ
			|	РегистрНакопления.ИПДоходы.Обороты(
			|			&НачалоНалоговогоПериода,
			|			&КонецПредыдущегоПериода,
			|			,
			|			Организация = &Организация
			|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
			|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
			|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПДоходыОбороты";
			
		КонецЕсли;
		
	Иначе
		
		НомераТаблиц.Вставить("ВТДоходыИРасходы",     НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТДоходыИРасходыЦены", НомераТаблиц.Количество());
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИПДоходы.ДокументОплаты = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Оплачено,
		|	ЛОЖЬ КАК ЭтоИМР,
		|	ИПДоходы.Период,
		|	ИПДоходы.Регистратор,
		|	ИПДоходы.ВидМПЗ,
		|	ИПДоходы.Номенклатура,
		|	ИПДоходы.ДокументОтгрузки,
		|	ИПДоходы.Партия,
		|	ИПДоходы.ДокументОплаты,
		|	СУММА(ИПДоходы.Количество) КАК КоличествоОборот,
		|	СУММА(ИПДоходы.Выручка) КАК ВыручкаОборот,
		|	СУММА(ИПДоходы.НДСНачисленный) КАК НДСНачисленныйОборот,
		|	СУММА(ИПДоходы.Сумма) КАК СуммаОборот,
		|	СУММА(ИПДоходы.НДС) КАК НДСОборот,
		|	СУММА(ИПДоходы.КоличествоОплаченоПоставщику) КАК КоличествоОплаченоПоставщикуОборот,
		|	0 КАК КоличествоПриход,
		|	0 КАК СуммаПриход,
		|	0 КАК НДСПриход,
		|	ИПДоходы.Корректировка
		|ПОМЕСТИТЬ ВТДоходыИРасходы
		|ИЗ
		|	РегистрНакопления.ИПДоходы КАК ИПДоходы
		|ГДЕ
		|	ИПДоходы.Активность
		|	И ИПДоходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ИПДоходы.Организация = &Организация
		|	И ИПДоходы.ХарактерДеятельности В(&СписокХарактеровДеятельности)
		|	И ИПДоходы.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПДоходы.Период,
		|	ИПДоходы.Регистратор,
		|	ИПДоходы.ВидМПЗ,
		|	ИПДоходы.Номенклатура,
		|	ИПДоходы.ДокументОтгрузки,
		|	ИПДоходы.Партия,
		|	ИПДоходы.ДокументОплаты,
		|	ИПДоходы.Корректировка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИПМПЗ.ДокументОплаты = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ЛОЖЬ,
		|	ИПМПЗ.Период,
		|	ИПМПЗ.Регистратор,
		|	&Продукция,
		|	ИПМПЗ.Номенклатура,
		|	НЕОПРЕДЕЛЕНО,
		|	ИПМПЗ.Партия,
		|	ИПМПЗ.ДокументОплаты,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	СУММА(ИПМПЗ.Количество),
		|	СУММА(ИПМПЗ.Сумма),
		|	СУММА(ИПМПЗ.НДС),
		|	ИПМПЗ.Корректировка
		|ИЗ
		|	РегистрНакопления.ИПМПЗ КАК ИПМПЗ
		|ГДЕ
		|	ИПМПЗ.Активность
		|	И ИПМПЗ.ВидДвижения = &ВидДвиженияПриход
		|	И ИПМПЗ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ИПМПЗ.Организация = &Организация
		|	И ИПМПЗ.ХарактерДеятельности В(&СписокХарактеровДеятельности)
		|	И ИПМПЗ.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
		|	И ИПМПЗ.ВидМПЗ = &Продукция
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПМПЗ.Период,
		|	ИПМПЗ.Регистратор,
		|	ИПМПЗ.Номенклатура,
		|	ИПМПЗ.Партия,
		|	ИПМПЗ.ДокументОплаты,
		|	ИПМПЗ.Корректировка";

		Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
			// Добавляем доходы и расходы предыдущих месяцев
			ТекстЗапроса = ТекстЗапроса +
			"
			|ОБЪЕДИНИТЬ ВСЕ
			|" + 
			"ВЫБРАТЬ
			|	ИСТИНА КАК Оплачено,
			|	ЛОЖЬ КАК ЭтоИМР,
			|	NULL КАК Период,
			|	NULL КАК Регистратор,
			|	NULL КАК ВидМПЗ,
			|	NULL КАК Номенклатура,
			|	NULL КАК ДокументОтгрузки,
			|	NULL КАК Партия,
			|	NULL КАК ДокументОплаты,
			|	ИПДоходыОбороты.КоличествоОборот,
			|	ИПДоходыОбороты.ВыручкаОборот,
			|	ИПДоходыОбороты.НДСНачисленныйОборот,
			|	ИПДоходыОбороты.СуммаОборот,
			|	ИПДоходыОбороты.НДСОборот,
			|	ИПДоходыОбороты.КоличествоОплаченоПоставщикуОборот,
			|	0 КАК КоличествоПриход,
			|	0 КАК СуммаПриход,
			|	0 КАК НДСПриход,
			|	ЛОЖЬ КАК Корректировка
			|ИЗ
			|	РегистрНакопления.ИПДоходы.Обороты(
			|			&НачалоНалоговогоПериода,
			|			&КонецПредыдущегоПериода,
			|			,
			|			Организация = &Организация
			|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
			|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
			|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПДоходыОбороты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИСТИНА,
			|	ЛОЖЬ,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	ИПМПЗОбороты.КоличествоПриход,
			|	ИПМПЗОбороты.СуммаПриход,
			|	ИПМПЗОбороты.НДСПриход,
			|	ЛОЖЬ
			|ИЗ
			|	РегистрНакопления.ИПМПЗ.Обороты(
			|			&НачалоНалоговогоПериода,
			|			&КонецПредыдущегоПериода,
			|			,
			|			Организация = &Организация
			|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
			|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
			|				И ВидМПЗ = &Продукция
			|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты";
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Добавляем ИМР
	ТекстЗапроса = ТекстЗапроса +
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|" + 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИПИМР.ДокументОплаты = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Оплачено,
	|	ИСТИНА КАК ЭтоИМР,
	|	ИПИМР.Период,
	|	ИПИМР.Регистратор,
	|	&ИныеМатериальныеРасходы,
	|	ИПИМР.СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки,
	|	ИПИМР.Партия,
	|	ИПИМР.ДокументОплаты,
	|	0 КАК КоличествоОборот,
	|	0 КАК ВыручкаОборот,
	|	0 КАК НДСНачисленныйОборот,
	|	СУММА(ИПИМР.Сумма) КАК СуммаОборот,
	|	СУММА(ИПИМР.НДС) КАК НДСОборот,
	|	СУММА(ИПИМР.Количество) КАК КоличествоОплаченоПоставщикуОборот,
	|	0 КАК КоличествоПриход,
	|	0 КАК СуммаПриход,
	|	0 КАК НДСПриход,
	|	ИПИМР.Корректировка
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы КАК ИПИМР
	|ГДЕ
	|	ИПИМР.Активность
	|	И ИПИМР.ВидДвижения = &ВидДвиженияРасход
	|	И ИПИМР.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИПИМР.Организация = &Организация
	|	И ИПИМР.ХарактерДеятельности В(&СписокХарактеровДеятельности)
	|	И ИПИМР.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПИМР.Период,
	|	ИПИМР.Регистратор,
	|	ИПИМР.СтатьяЗатрат,
	|	ИПИМР.Партия,
	|	ИПИМР.ДокументОплаты,
	|	ИПИМР.Корректировка";
	
	Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
		// Добавляем ИМР предыдущих месяцев
		ТекстЗапроса = ТекстЗапроса  +
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|" + 
		"ВЫБРАТЬ
		|	ИСТИНА КАК Оплачено,
		|	ИСТИНА КАК ЭтоИМР,
		|	NULL КАК Период,
		|	NULL КАК Регистратор,
		|	NULL КАК ВидМПЗ,
		|	NULL КАК Номенклатура,
		|	NULL КАК ДокументОтгрузки,
		|	NULL КАК Партия,
		|	NULL КАК ДокументОплаты,
		|	0 КАК КоличествоОборот,
		|	0 КАК ВыручкаОборот,
		|	0 КАК НДСНачисленныйОборот,
		|	ИПИМРОбороты.СуммаРасход КАК СуммаОборот,
		|	ИПИМРОбороты.НДСРасход КАК НДСОборот,
		|	ИПИМРОбороты.КоличествоРасход КАК КоличествоОплаченоПоставщикуОборот,
		|	0 КАК КоличествоПриход,
		|	0 КАК СуммаПриход,
		|	0 КАК НДСПриход,
		|	ЛОЖЬ КАК Корректировка
		|ИЗ
		|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
		|			&НачалоНалоговогоПериода,
		|			&КонецПредыдущегоПериода,
		|			,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПИМРОбороты";
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИПДоходы.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИПМПЗ.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИПИМР.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + 
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, ЭтоИМР, ДокументОтгрузки, Партия, Регистратор, Корректировка";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	ДоходыИРасходы.Регистратор,
	|	ДоходыИРасходы.Номенклатура,
	|	ДоходыИРасходы.ЭтоИМР,
	|	ДоходыИРасходы.ДокументОтгрузки,
	|	ДоходыИРасходы.Партия,
	|	ВЫБОР
	|		КОГДА СУММА(ДоходыИРасходы.КоличествоПриход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДоходыИРасходы.СуммаПриход) / СУММА(ДоходыИРасходы.КоличествоПриход) КАК ЧИСЛО(15, 2))
	|		КОГДА СУММА(ДоходыИРасходы.КоличествоОплаченоПоставщикуОборот) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДоходыИРасходы.СуммаОборот) / СУММА(ДоходыИРасходы.КоличествоОплаченоПоставщикуОборот) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА СУММА(ДоходыИРасходы.КоличествоПриход) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДоходыИРасходы.СуммаПриход + ДоходыИРасходы.НДСПриход) / СУММА(ДоходыИРасходы.КоличествоПриход) КАК ЧИСЛО(15, 2))
	|		КОГДА СУММА(ДоходыИРасходы.КоличествоОплаченоПоставщикуОборот) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДоходыИРасходы.СуммаОборот + ДоходыИРасходы.НДСОборот) / СУММА(ДоходыИРасходы.КоличествоОплаченоПоставщикуОборот) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЕдиницыСНДС,
	|	ВЫБОР
	|		КОГДА СУММА(ДоходыИРасходы.КоличествоОборот) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДоходыИРасходы.ВыручкаОборот - ДоходыИРасходы.НДСНачисленныйОборот) / СУММА(ДоходыИРасходы.КоличествоОборот) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЦенаЕдиницы,
	|	ВЫБОР
	|		КОГДА СУММА(ДоходыИРасходы.КоличествоОборот) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДоходыИРасходы.ВыручкаОборот) / СУММА(ДоходыИРасходы.КоличествоОборот) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЦенаЕдиницыСНДС,
	|	ДоходыИРасходы.Корректировка
	|ПОМЕСТИТЬ ВТДоходыИРасходыЦены
	|ИЗ
	|	ВТДоходыИРасходы КАК ДоходыИРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходы.Номенклатура,
	|	ДоходыИРасходы.ЭтоИМР,
	|	ДоходыИРасходы.ДокументОтгрузки,
	|	ДоходыИРасходы.Партия,
	|	ДоходыИРасходы.Регистратор,
	|	ДоходыИРасходы.Корректировка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДоходыИРасходы.Номенклатура,
	|	ДоходыИРасходы.ЭтоИМР,
	|	ДоходыИРасходы.ДокументОтгрузки,
	|	ДоходыИРасходы.Партия,
	|	ДоходыИРасходы.Регистратор,
	|	ДоходыИРасходы.Корректировка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВТДоходыИРасходыУничтожить(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТДоходыИРасходыУничтожить",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТДоходыИРасходыЦеныУничтожить", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"УНИЧТОЖИТЬ ВТДоходыИРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДоходыИРасходыЦены";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаДоходыИРасходы(ПараметрыОтчета, НомераТаблиц, Сводно)
	
	НомераТаблиц.Вставить("ДоходыИРасходы" + ?(Сводно, "Сводно", ""), НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДоходыИРасходы.Период ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПериодОтчета,
	|	НАЧАЛОПЕРИОДА(ДоходыИРасходы.Период, МЕСЯЦ) КАК Месяц,
	|	ДоходыИРасходы.Период,
	|	ДоходыИРасходы.Регистратор,
	|	ДоходыИРасходы.Номенклатура,
	|	ДоходыИРасходы.ЭтоИМР,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА ДоходыИРасходы.Номенклатура.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНоменклатура.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Наименование, ""-"") КАК ЕдиницаИзмерения,
	|	ДоходыИРасходы.ДокументОтгрузки,
	|	РеквизитыДокументовОтгрузки.Номер КАК НомерДокументаОтгрузки,
	|	РеквизитыДокументовОтгрузки.Дата КАК ДатаДокументаОтгрузки,
	|	ДоходыИРасходы.Партия,
	|	РеквизитыПартий.Номер КАК НомерПартии,
	|	РеквизитыПартий.Дата КАК ДатаПартии,
	|	ДоходыИРасходы.ДокументОплаты,
	|	РеквизитыДокументовОплаты.Номер КАК НомерДокументаОплаты,
	|	РеквизитыДокументовОплаты.Дата КАК ДатаДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницы
	|		ИНАЧЕ Цены.СтоимостьЕдиницыСНДС
	|	КОНЕЦ КАК СтоимостьЕдиницы,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.СтоимостьЕдиницыСНДС - Цены.СтоимостьЕдиницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСЕдиницы,
	|	Цены.СтоимостьЕдиницыСНДС КАК СтоимостьЕдиницыСНДС,
	|	ДоходыИРасходы.КоличествоПриход КАК КоличествоПродукции,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ДоходыИРасходы.СуммаПриход
	|		ИНАЧЕ ДоходыИРасходы.СуммаПриход + ДоходыИРасходы.НДСПриход
	|	КОНЕЦ КАК СтоимостьПродукции,
	|	ДоходыИРасходы.КоличествоОплаченоПоставщикуОборот КАК Количество,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ДоходыИРасходы.СуммаОборот
	|		ИНАЧЕ ДоходыИРасходы.СуммаОборот + ДоходыИРасходы.НДСОборот
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ДоходыИРасходы.НДСОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.ЦенаЕдиницы
	|		ИНАЧЕ Цены.ЦенаЕдиницыСНДС
	|	КОНЕЦ КАК ЦенаЕдиницы,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА Цены.ЦенаЕдиницыСНДС - Цены.ЦенаЕдиницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСНачисленныйЕдиницы,
	|	Цены.ЦенаЕдиницыСНДС КАК ЦенаЕдиницыСНДС,
	|	ДоходыИРасходы.КоличествоОборот КАК КоличествоРеализовано,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ДоходыИРасходы.ВыручкаОборот - ДоходыИРасходы.НДСНачисленныйОборот
	|		ИНАЧЕ ДоходыИРасходы.ВыручкаОборот
	|	КОНЕЦ КАК ВыручкаБезНДС,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ДоходыИРасходы.НДСНачисленныйОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСНачисленный,
	|	ДоходыИРасходы.ВыручкаОборот КАК Выручка,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ДоходыИРасходы.ВыручкаОборот - ДоходыИРасходы.НДСНачисленныйОборот - ДоходыИРасходы.СуммаОборот
	|		ИНАЧЕ ДоходыИРасходы.ВыручкаОборот - ДоходыИРасходы.СуммаОборот - ДоходыИРасходы.НДСОборот
	|	КОНЕЦ КАК Результат,
	|	ДоходыИРасходы.Корректировка
	|ИЗ
	|	ВТДоходыИРасходы КАК ДоходыИРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыИРасходыЦены КАК Цены
	|		ПО ДоходыИРасходы.Номенклатура = Цены.Номенклатура
	|			И ДоходыИРасходы.ЭтоИМР = Цены.ЭтоИМР
	|			И ДоходыИРасходы.ДокументОтгрузки = Цены.ДокументОтгрузки
	|			И ДоходыИРасходы.Партия = Цены.Партия
	|			И ДоходыИРасходы.Регистратор = Цены.Регистратор
	|			И ДоходыИРасходы.Корректировка = Цены.Корректировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ДоходыИРасходы.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОтгрузки
	|		ПО (РеквизитыДокументовОтгрузки.Организация = &Организация)
	|			И ДоходыИРасходы.ДокументОтгрузки = РеквизитыДокументовОтгрузки.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыПартий
	|		ПО (РеквизитыПартий.Организация = &Организация)
	|			И ДоходыИРасходы.Партия = РеквизитыПартий.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И ДоходыИРасходы.ДокументОплаты = РеквизитыДокументовОплаты.Документ";
	
	Если Сводно Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ГДЕ
		|	ДоходыИРасходы.Оплачено
		|
		|УПОРЯДОЧИТЬ ПО
		|	Месяц,
		|	ДоходыИРасходы.ЭтоИМР,
		|	НоменклатураПредставление,
		|	ДоходыИРасходы.Период,
		|	ДоходыИРасходы.Регистратор,
		|	ДатаДокументаОплаты,
		|	НомерДокументаОплаты,
		|	ДатаПартии,
		|	НомерПартии,
		|	ДатаДокументаОтгрузки,
		|	НомерДокументаОтгрузки,
		|	ДоходыИРасходы.Корректировка УБЫВ
		|
		|ИТОГИ
		|	МАКСИМУМ(Период),
		|	МАКСИМУМ(НоменклатураПредставление),
		|	МАКСИМУМ(ЕдиницаИзмерения),
		|	СУММА(КоличествоПродукции),
		|	СУММА(СтоимостьПродукции),
		|	СУММА(Количество),
		|	СУММА(Сумма),
		|	СУММА(КоличествоРеализовано),
		|	СУММА(ВыручкаБезНДС),
		|	СУММА(НДСНачисленный),
		|	СУММА(Выручка),
		|	СУММА(Результат)
		|ПО
		|	ОБЩИЕ,
		|	ПериодОтчета,
		|	Месяц,
		|	ДоходыИРасходы.ЭтоИМР,
		|	ДоходыИРасходы.Номенклатура,
		|	ДоходыИРасходы.Регистратор,
		|	ДоходыИРасходы.Корректировка";
		
	Иначе
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ГДЕ
		|	ДоходыИРасходы.Оплачено
		|	И НЕ ДоходыИРасходы.ЭтоИМР
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДоходыИРасходы.Период,
		|	ДоходыИРасходы.Регистратор,
		|	НоменклатураПредставление,
		|	ДатаДокументаОплаты,
		|	НомерДокументаОплаты,
		|	ДатаПартии,
		|	НомерПартии,
		|	ДатаДокументаОтгрузки,
		|	НомерДокументаОтгрузки,
		|	ДоходыИРасходы.Корректировка УБЫВ
		|
		|ИТОГИ
		|	МАКСИМУМ(Период),
		|	СУММА(КоличествоПродукции),
		|	СУММА(СтоимостьПродукции),
		|	СУММА(Количество),
		|	СУММА(Сумма),
		|	СУММА(КоличествоРеализовано),
		|	СУММА(ВыручкаБезНДС),
		|	СУММА(НДСНачисленный),
		|	СУММА(Выручка),
		|	СУММА(Результат)
		|ПО
		|	ОБЩИЕ,
		|	ПериодОтчета,
		|	Месяц,
		|	ДоходыИРасходы.Регистратор,
		|	ДоходыИРасходы.Корректировка";
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОС(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТОстаткиИОборотыОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыОСТекПериод", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыОСПредПериод", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПараметрыАмортизацииОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТСобытияВыбытияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПервоначальныеСведенияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТСпециальныйКоэффициентОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ИсторияНачисленияАмортизации", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТОстаткиИОборотыОСУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыОСТекПериодУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыОСПредПериодУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПараметрыАмортизацииОСУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТСобытияВыбытияОСУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПервоначальныеСведенияОСУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТСпециальныйКоэффициентОСУничтожить", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИПМПЗОстаткиИОбороты.Номенклатура,
	|	ИПМПЗОстаткиИОбороты.Партия,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты,
	|	ИПМПЗОстаткиИОбороты.СуммаНачальныйОстаток + ИПМПЗОстаткиИОбороты.СуммаПриход КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ ВТОстаткиИОборотыОС
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.ОстаткиИОбороты(
	|			&НачалоНалоговогоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			Организация = &Организация
	|				И ВидМПЗ = &ОС
	|				И Номенклатура ССЫЛКА Справочник.ОсновныеСредства
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОстаткиИОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПМПЗОстаткиИОбороты.Номенклатура,
	|	ИПМПЗОстаткиИОбороты.Партия,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|					И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				ТОГДА ИППрочиеРасходыОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего
	|ПОМЕСТИТЬ ВТПрочиеРасходыОСТекПериод
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			&НачалоНалоговогоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И СтатьяЗатрат ССЫЛКА Справочник.ОсновныеСредства
	|				И СтатьяЗатрат В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыОС.Номенклатура КАК СтатьяЗатрат
	|					ИЗ
	|						ВТОстаткиИОборотыОС)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|					И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				ТОГДА ИППрочиеРасходыОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего
	|ПОМЕСТИТЬ ВТПрочиеРасходыОСПредПериод
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			,
	|			&КонецПредыдущегоНалоговогоПериода,
	|			,
	|			Организация = &Организация
	|				И СтатьяЗатрат ССЫЛКА Справочник.ОсновныеСредства
	|				И СтатьяЗатрат В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыОС.Номенклатура КАК СтатьяЗатрат
	|					ИЗ
	|						ВТОстаткиИОборотыОС)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования > 0
	|			ТОГДА 1 / ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МесячнаяНормаАмортизации
	|ПОМЕСТИТЬ ВТПараметрыАмортизацииОС
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыОС.Номенклатура КАК ОсновноеСредство
	|					ИЗ
	|						ВТОстаткиИОборотыОС)) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобытияОСОрганизацийСрезПоследних.Регистратор КАК Регистратор,
	|	СобытияОСОрганизацийСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СобытияОСОрганизацийСрезПоследних.Событие КАК Событие,
	|	СобытияОСОрганизацийСрезПоследних.НазваниеДокумента КАК НазваниеДокумента,
	|	СобытияОСОрганизацийСрезПоследних.НомерДокумента КАК НомерДокумента
	|ПОМЕСТИТЬ ВТСобытияВыбытияОС
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыОС.Номенклатура КАК ОсновноеСредство
	|					ИЗ
	|						ВТОстаткиИОборотыОС)
	|				И (Событие.ВидСобытияОС = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Передача)
	|					ИЛИ Событие.ВидСобытияОС = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Списание))) КАК СобытияОСОрганизацийСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК МетодНачисленияАмортизацииЛинейный
	|ПОМЕСТИТЬ ВТПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыОС.Номенклатура КАК ОсновноеСредство
	|					ИЗ
	|						ВТОстаткиИОборотыОС)) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент КАК СпециальныйКоэффициент
	|ПОМЕСТИТЬ ВТСпециальныйКоэффициентОС
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыОС.Номенклатура КАК ОсновноеСредство
	|					ИЗ
	|						ВТОстаткиИОборотыОС)) КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиИОборотыОС.Номенклатура КАК ОС,
	|	ВЫБОР
	|		КОГДА СправочникОсновныеСредства.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА ОстаткиИОборотыОС.Номенклатура.Наименование
	|		КОГДА СправочникОсновныеСредства.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА СправочникОсновныеСредства.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникОсновныеСредства.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК ОСПредставление,
	|	ОстаткиИОборотыОС.Номенклатура.КодПоОКОФ.Код КАК ОКОФ,
	|	ОстаткиИОборотыОС.Партия КАК Партия,
	|	ОстаткиИОборотыОС.ДокументОплаты КАК ДокументОплаты,
	|	СведенияОбОплатеОСиНМА.РеквизитыДокументаОплаты КАК РеквизитыДокументаОплаты,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ОстаткиИОборотыОС.ПервоначальнаяСтоимость + ВЫБОР
	|		КОГДА СобытияВыбытияОС.Событие ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) + ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|	КОНЕЦ КАК ПервоначальнаяСтоимость,
	|	ПараметрыАмортизацииОС.МесячнаяНормаАмортизации * 100 КАК МесячнаяНормаАмортизации,
	|	ВЫБОР
	|		КОГДА ПараметрыАмортизацииОС.СрокПолезногоИспользования > 0
	|			ТОГДА ВЫРАЗИТЬ((ОстаткиИОборотыОС.ПервоначальнаяСтоимость + ВЫБОР
	|						КОГДА СобытияВыбытияОС.Событие ЕСТЬ NULL 
	|							ТОГДА 0
	|						ИНАЧЕ ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) + ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|					КОНЕЦ) / ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МесячнаяСуммаАмортизации,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.Сумма, 0) КАК АмортизацияПредыдущихПериодов,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) КАК АмортизацияПредыдущихПериодовВсего,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОС.МетодНачисленияАмортизацииЛинейный
	|				ИЛИ СпециальныйКоэффициентОС.СпециальныйКоэффициент <= 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизации,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОС.МетодНачисленияАмортизацииЛинейный
	|				ИЛИ СпециальныйКоэффициентОС.СпециальныйКоэффициент <= 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизацииВсего,
	|	ВЫБОР
	|		КОГДА НЕ ПервоначальныеСведенияОС.МетодНачисленияАмортизацииЛинейный
	|				И СпециальныйКоэффициентОС.СпециальныйКоэффициент > 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизацииУскоренная,
	|	ВЫБОР
	|		КОГДА НЕ ПервоначальныеСведенияОС.МетодНачисленияАмортизацииЛинейный
	|				И СпециальныйКоэффициентОС.СпециальныйКоэффициент > 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизацииУскореннаяВсего,
	|	ПараметрыАмортизацииОС.КоэффициентАмортизации КАК ГодоваяНормаПоЕНАОФ,
	|	ВЫРАЗИТЬ(ПараметрыАмортизацииОС.КоэффициентАмортизации / 12 КАК ЧИСЛО(17, 4)) КАК МесячнаяНормаПоЕНАОФ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СпециальныйКоэффициентОС.СпециальныйКоэффициент > 1
	|				ТОГДА ПараметрыАмортизацииОС.КоэффициентАмортизации * СпециальныйКоэффициентОС.СпециальныйКоэффициент
	|			ИНАЧЕ 0
	|		КОНЕЦ / 12 КАК ЧИСЛО(17, 4)) КАК МесячнаяНормаПоЕНАОФУскоренная,
	|	ВЫБОР
	|		КОГДА СпециальныйКоэффициентОС.СпециальныйКоэффициент > 1
	|			ТОГДА ПараметрыАмортизацииОС.КоэффициентАмортизации * СпециальныйКоэффициентОС.СпециальныйКоэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ГодоваяНормаПоЕНАОФУскоренная,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ВЫРАЗИТЬ(ПараметрыАмортизацииОС.СрокПолезногоИспользования / 12 КАК ЧИСЛО(17, 4)) КАК СрокПолезногоИспользованияЛет,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(СостоянияПринятоКУчетуОС.ДатаСостояния, МЕСЯЦ, 1), МЕСЯЦ) КАК МесяцНачалаАмортизации,
	|	МЕСЯЦ(&КонецПериода) - ВЫБОР
	|		КОГДА ГОД(ДОБАВИТЬКДАТЕ(СостоянияПринятоКУчетуОС.ДатаСостояния, МЕСЯЦ, 1)) < ГОД(&КонецПериода)
	|			ТОГДА 0
	|		ИНАЧЕ МЕСЯЦ(ДОБАВИТЬКДАТЕ(СостоянияПринятоКУчетуОС.ДатаСостояния, МЕСЯЦ, 1)) - 1
	|	КОНЕЦ КАК КоличествоМесяцевВПериоде,
	|	ЕСТЬNULL(СобытияВыбытияОС.Регистратор, НЕОПРЕДЕЛЕНО) КАК ДокументВыбытия,
	|	ЕСТЬNULL(СобытияВыбытияОС.Событие, НЕОПРЕДЕЛЕНО) КАК СобытиеВыбытия,
	|	ПРЕДСТАВЛЕНИЕ(СобытияВыбытияОС.Событие) КАК СобытиеПредставление,
	|	СобытияВыбытияОС.НазваниеДокумента КАК НазваниеДокументаВыбытия,
	|	СобытияВыбытияОС.НомерДокумента КАК НомерДокументаВыбытия
	|ИЗ
	|	ВТОстаткиИОборотыОС КАК ОстаткиИОборотыОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК СправочникОсновныеСредства
	|			ПО ОстаткиИОборотыОС.Номенклатура = СправочникОсновныеСредства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПСведенияОбОплатеОСиНМА КАК СведенияОбОплатеОСиНМА
	|		ПО (СведенияОбОплатеОСиНМА.Организация = &Организация)
	|			И ОстаткиИОборотыОС.Номенклатура = СведенияОбОплатеОСиНМА.ВнеоборотныйАктив
	|			И ОстаткиИОборотыОС.ДокументОплаты = СведенияОбОплатеОСиНМА.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрочиеРасходыОСТекПериод КАК ИППрочиеРасходыТекПериод
	|		ПО ОстаткиИОборотыОС.Номенклатура = ИППрочиеРасходыТекПериод.СтатьяЗатрат
	|			И ОстаткиИОборотыОС.Партия = ИППрочиеРасходыТекПериод.РасчетныйДокумент
	|			И ОстаткиИОборотыОС.ДокументОплаты = ИППрочиеРасходыТекПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрочиеРасходыОСПредПериод КАК ИППрочиеРасходыПредПериод
	|		ПО ОстаткиИОборотыОС.Номенклатура = ИППрочиеРасходыПредПериод.СтатьяЗатрат
	|			И ОстаткиИОборотыОС.Партия = ИППрочиеРасходыПредПериод.РасчетныйДокумент
	|			И ОстаткиИОборотыОС.ДокументОплаты = ИППрочиеРасходыПредПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыАмортизацииОС КАК ПараметрыАмортизацииОС
	|		ПО ОстаткиИОборотыОС.Номенклатура = ПараметрыАмортизацииОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ОстаткиИОборотыОС.Номенклатура = ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСпециальныйКоэффициентОС КАК СпециальныйКоэффициентОС
	|		ПО ОстаткиИОборотыОС.Номенклатура = СпециальныйКоэффициентОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСобытияВыбытияОС КАК СобытияВыбытияОС
	|		ПО ОстаткиИОборотыОС.Номенклатура = СобытияВыбытияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияПринятоКУчетуОС
	|		ПО ОстаткиИОборотыОС.Номенклатура = СостоянияПринятоКУчетуОС.ОсновноеСредство
	|			И (СостоянияПринятоКУчетуОС.Организация = &Организация)
	|			И (СостоянияПринятоКУчетуОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОС
	|ИТОГИ
	|	МАКСИМУМ(ОС),
	|	МАКСИМУМ(ОСПредставление),
	|	МАКСИМУМ(ОКОФ),
	|	СУММА(ПервоначальнаяСтоимость),
	|	МАКСИМУМ(МесячнаяНормаАмортизации),
	|	СУММА(МесячнаяСуммаАмортизации),
	|	СУММА(АмортизацияПредыдущихПериодов),
	|	СУММА(АмортизацияПредыдущихПериодовВсего),
	|	СУММА(СуммаАмортизации),
	|	СУММА(СуммаАмортизацииВсего),
	|	СУММА(СуммаАмортизацииУскоренная),
	|	СУММА(СуммаАмортизацииУскореннаяВсего),
	|	МАКСИМУМ(ГодоваяНормаПоЕНАОФ),
	|	МАКСИМУМ(МесячнаяНормаПоЕНАОФ),
	|	МАКСИМУМ(МесячнаяНормаПоЕНАОФУскоренная),
	|	МАКСИМУМ(ГодоваяНормаПоЕНАОФУскоренная),
	|	МАКСИМУМ(СрокПолезногоИспользования),
	|	МАКСИМУМ(СрокПолезногоИспользованияЛет),
	|	МАКСИМУМ(МесяцНачалаАмортизации),
	|	МАКСИМУМ(КоличествоМесяцевВПериоде),
	|	МАКСИМУМ(ДокументВыбытия),
	|	МАКСИМУМ(СобытиеВыбытия),
	|	МАКСИМУМ(СобытиеПредставление),
	|	МАКСИМУМ(НазваниеДокументаВыбытия),
	|	МАКСИМУМ(НомерДокументаВыбытия)
	|ПО
	|	МетодНачисленияАмортизации,
	|	ОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииОС.МоментВремени КАК МоментВремени,
	|	НАЧАЛОПЕРИОДА(НачислениеАмортизацииОС.Период, МЕСЯЦ) КАК НачалоПериода,
	|	НачислениеАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииОС.Организация,
	|	НачислениеАмортизацииОС.НачислятьАмортизацию КАК НачислятьАмортизацию
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизацииОС
	|ГДЕ
	|	НачислениеАмортизацииОС.Период < &НачалоНалоговогоПериода
	|	И НачислениеАмортизацииОС.Организация = &Организация
	|	И НачислениеАмортизацииОС.ОсновноеСредство В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТОстаткиИОборотыОС.Номенклатура КАК ОсновноеСредство
	|			ИЗ
	|				ВТОстаткиИОборотыОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеАмортизацииОС.МоментВремени,
	|	НАЧАЛОПЕРИОДА(НачислениеАмортизацииОС.Период, МЕСЯЦ),
	|	НачислениеАмортизацииОС.ОсновноеСредство,
	|	НачислениеАмортизацииОС.Организация,
	|	НачислениеАмортизацииОС.НачислятьАмортизацию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода,
	|	МоментВремени УБЫВ
	|ИТОГИ ПО
	|	ОсновноеСредство,
	|	НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОстаткиИОборотыОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрочиеРасходыОСТекПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрочиеРасходыОСПредПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПараметрыАмортизацииОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСобытияВыбытияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПервоначальныеСведенияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСпециальныйКоэффициентОС";
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНМА(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТОстаткиИОборотыНМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыНМАТекПериод", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыНМАПредПериод", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТСведенияНМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТОстаткиИОборотыНМАУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыНМАТекПериодУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыНМАПредПериодУничтожить", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТСведенияНМАУничтожить", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИПМПЗОстаткиИОбороты.Номенклатура,
	|	ИПМПЗОстаткиИОбороты.Партия,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты,
	|	ИПМПЗОстаткиИОбороты.СуммаНачальныйОстаток + ИПМПЗОстаткиИОбороты.СуммаПриход КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ ВТОстаткиИОборотыНМА
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.ОстаткиИОбороты(
	|			&НачалоНалоговогоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			Организация = &Организация
	|				И ВидМПЗ = &НМА
	|				И Номенклатура ССЫЛКА Справочник.НематериальныеАктивы
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОстаткиИОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПМПЗОстаткиИОбороты.Номенклатура,
	|	ИПМПЗОстаткиИОбороты.Партия,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|					И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				ТОГДА ИППрочиеРасходыОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего
	|ПОМЕСТИТЬ ВТПрочиеРасходыНМАТекПериод
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			&НачалоНалоговогоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И СтатьяЗатрат ССЫЛКА Справочник.НематериальныеАктивы
	|				И СтатьяЗатрат В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыНМА.Номенклатура КАК СтатьяЗатрат
	|					ИЗ
	|						ВТОстаткиИОборотыНМА)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|					И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				ТОГДА ИППрочиеРасходыОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего
	|ПОМЕСТИТЬ ВТПрочиеРасходыНМАПредПериод
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			,
	|			&КонецПредыдущегоНалоговогоПериода,
	|			,
	|			Организация = &Организация
	|				И СтатьяЗатрат ССЫЛКА Справочник.НематериальныеАктивы
	|				И СтатьяЗатрат В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыНМА.Номенклатура КАК СтатьяЗатрат
	|					ИЗ
	|						ВТОстаткиИОборотыНМА)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НематериальныйАктив,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.ДатаПриобретения,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования > 0
	|			ТОГДА 1 / ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МесячнаяНормаАмортизации,
	|	ВЫБОР
	|		КОГДА ГОД(ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.ДатаПриобретения) < 2002
	|			ТОГДА 42
	|		ИНАЧЕ 41
	|	КОНЕЦ КАК До2002
	|ПОМЕСТИТЬ ВТСведенияНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТОстаткиИОборотыНМА.Номенклатура КАК НематериальныйАктив
	|					ИЗ
	|						ВТОстаткиИОборотыНМА)) КАК ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиИОборотыНМА.Номенклатура КАК НМА,
	|	ВЫБОР
	|		КОГДА СправочникНематериальныеАктивы.НаименованиеПолное ЕСТЬ NULL 
	|			ТОГДА ОстаткиИОборотыНМА.Номенклатура.Наименование
	|		КОГДА СправочникНематериальныеАктивы.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА СправочникНематериальныеАктивы.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СправочникНематериальныеАктивы.НаименованиеПолное, 1, 200)
	|	КОНЕЦ КАК НМАПредставление,
	|	ОстаткиИОборотыНМА.Партия КАК Партия,
	|	ОстаткиИОборотыНМА.ДокументОплаты КАК ДокументОплаты,
	|	СведенияОбОплатеОСиНМА.РеквизитыДокументаОплаты КАК РеквизитыДокументаОплаты,
	|	СведенияНМА.До2002 КАК До2002,
	|	ОстаткиИОборотыНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	СведенияНМА.МесячнаяНормаАмортизации * 100 КАК МесячнаяНормаАмортизации,
	|	ВЫРАЗИТЬ(ОстаткиИОборотыНМА.ПервоначальнаяСтоимость * СведенияНМА.МесячнаяНормаАмортизации КАК ЧИСЛО(15, 2)) КАК МесячнаяСуммаАмортизации,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.Сумма, 0) КАК АмортизацияПредыдущихПериодов,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) КАК АмортизацияПредыдущихПериодовВсего,
	|	ЕСТЬNULL(ИППрочиеРасходыТекПериод.Сумма, 0) КАК СуммаАмортизации,
	|	ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0) КАК СуммаАмортизацииВсего,
	|	СведенияНМА.ДатаПриобретения КАК ДатаПриобретения,
	|	СведенияНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(СостоянияПринятоКУчетуНМА.Период, МЕСЯЦ, 1), МЕСЯЦ) КАК МесяцНачалаАмортизации,
	|	МЕСЯЦ(&КонецПериода) - ВЫБОР
	|		КОГДА ГОД(ДОБАВИТЬКДАТЕ(СостоянияПринятоКУчетуНМА.Период, МЕСЯЦ, 1)) < ГОД(&КонецПериода)
	|			ТОГДА 0
	|		ИНАЧЕ МЕСЯЦ(ДОБАВИТЬКДАТЕ(СостоянияПринятоКУчетуНМА.Период, МЕСЯЦ, 1)) - 1
	|	КОНЕЦ КАК КоличествоМесяцевВПериоде,
	|	ЕСТЬNULL(СостоянияСписанНМА.Регистратор, НЕОПРЕДЕЛЕНО) КАК ДокументВыбытия
	|ИЗ
	|	ВТОстаткиИОборотыНМА КАК ОстаткиИОборотыНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК СправочникНематериальныеАктивы
	|		ПО ОстаткиИОборотыНМА.Номенклатура = СправочникНематериальныеАктивы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПСведенияОбОплатеОСиНМА КАК СведенияОбОплатеОСиНМА
	|		ПО (СведенияОбОплатеОСиНМА.Организация = &Организация)
	|			И ОстаткиИОборотыНМА.Номенклатура = СведенияОбОплатеОСиНМА.ВнеоборотныйАктив
	|			И ОстаткиИОборотыНМА.ДокументОплаты = СведенияОбОплатеОСиНМА.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрочиеРасходыНМАТекПериод КАК ИППрочиеРасходыТекПериод
	|		ПО ОстаткиИОборотыНМА.Номенклатура = ИППрочиеРасходыТекПериод.СтатьяЗатрат
	|			И ОстаткиИОборотыНМА.Партия = ИППрочиеРасходыТекПериод.РасчетныйДокумент
	|			И ОстаткиИОборотыНМА.ДокументОплаты = ИППрочиеРасходыТекПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрочиеРасходыНМАПредПериод КАК ИППрочиеРасходыПредПериод
	|		ПО ОстаткиИОборотыНМА.Номенклатура = ИППрочиеРасходыПредПериод.СтатьяЗатрат
	|			И ОстаткиИОборотыНМА.Партия = ИППрочиеРасходыПредПериод.РасчетныйДокумент
	|			И ОстаткиИОборотыНМА.ДокументОплаты = ИППрочиеРасходыПредПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияНМА КАК СведенияНМА
	|		ПО ОстаткиИОборотыНМА.Номенклатура = СведенияНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияСписанНМА
	|		ПО ОстаткиИОборотыНМА.Номенклатура = СостоянияСписанНМА.НематериальныйАктив
	|			И (СостоянияСписанНМА.Организация = &Организация)
	|			И (СостоянияСписанНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияПринятоКУчетуНМА
	|		ПО ОстаткиИОборотыНМА.Номенклатура = СостоянияПринятоКУчетуНМА.НематериальныйАктив
	|			И (СостоянияПринятоКУчетуНМА.Организация = &Организация)
	|			И (СостоянияПринятоКУчетуНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
	|ГДЕ
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.Сумма, 0) + ЕСТЬNULL(ИППрочиеРасходыТекПериод.Сумма, 0) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	До2002,
	|	НМА
	|ИТОГИ
	|	МАКСИМУМ(НМА),
	|	МАКСИМУМ(НМАПредставление),
	|	СУММА(ПервоначальнаяСтоимость),
	|	МАКСИМУМ(МесячнаяНормаАмортизации),
	|	СУММА(МесячнаяСуммаАмортизации),
	|	СУММА(АмортизацияПредыдущихПериодов),
	|	СУММА(АмортизацияПредыдущихПериодовВсего),
	|	СУММА(СуммаАмортизации),
	|	СУММА(СуммаАмортизацииВсего),
	|	МАКСИМУМ(ДатаПриобретения),
	|	МАКСИМУМ(СрокПолезногоИспользования),
	|	МАКСИМУМ(МесяцНачалаАмортизации),
	|	МАКСИМУМ(КоличествоМесяцевВПериоде)
	|ПО
	|	До2002,
	|	НМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОстаткиИОборотыНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрочиеРасходыНМАТекПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрочиеРасходыНМАПредПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияНМА";
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРасходыНаОплатуТруда(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТРасходыНаОплатуТруда",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РасходыНаОплатуТруда",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТРасходыНаОплатуТрудаУничтожить",   НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИПРасходыНаОплатуТрудаОбороты.Период КАК Период,
	|	ИПРасходыНаОплатуТрудаОбороты.Регистратор КАК Регистратор,
	|	ИПРасходыНаОплатуТрудаОбороты.Организация КАК Организация,
	|	ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
	|	ИПРасходыНаОплатуТрудаОбороты.ФизЛицо КАК ФизЛицо,
	|	ИПРасходыНаОплатуТрудаОбороты.ДокументОплаты КАК ДокументОплаты,
	|	ИПРасходыНаОплатуТрудаОбороты.СуммаОборот КАК СуммаОборот,
	|	ВЫБОР
	|		КОГДА ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания В (&ВидыНачислений)
	|			ТОГДА ИПРасходыНаОплатуТрудаОбороты.СуммаОборот
	|		КОГДА ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания В (&ВидыУдержаний)
	|			ТОГДА -ИПРасходыНаОплатуТрудаОбороты.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КВыплате
	|ПОМЕСТИТЬ ВТРасходыНаОплатуТруда
	|ИЗ
	|	РегистрНакопления.ИПРасходыНаОплатуТруда.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (ВидНачисленияУдержания В (&ВидыНачислений)
	|					ИЛИ ВидНачисленияУдержания В (&ВидыУдержаний))
	|				И СтатьяЗатрат В (&СтатьиЗатратПринимаемые)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПРасходыНаОплатуТрудаОбороты";
	
	Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
		
		ТекстЗапроса = ТекстЗапроса +
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		"ВЫБРАТЬ
		|	NULL,
		|	NULL,
		|	NULL,
		|	ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|	NULL,
		|	NULL,
		|	ИПРасходыНаОплатуТрудаОбороты.СуммаОборот КАК СуммаОборот,
		|	ВЫБОР
		|		КОГДА ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания В (&ВидыНачислений)
		|			ТОГДА ИПРасходыНаОплатуТрудаОбороты.СуммаОборот
		|		КОГДА ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания В (&ВидыУдержаний)
		|			ТОГДА -ИПРасходыНаОплатуТрудаОбороты.СуммаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КВыплате
		|ИЗ
		|	РегистрНакопления.ИПРасходыНаОплатуТруда.Обороты(
		|			&НачалоНалоговогоПериода,
		|			&КонецПредыдущегоПериода,
		|			,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И (ВидНачисленияУдержания В (&ВидыНачислений)
		|					ИЛИ ВидНачисленияУдержания В (&ВидыУдержаний))
		|				И СтатьяЗатрат В (&СтатьиЗатратПринимаемые)
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПРасходыНаОплатуТрудаОбороты";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходыНаОплатуТруда.Период ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПериодОтчета,
	|	НАЧАЛОПЕРИОДА(РасходыНаОплатуТруда.Период, МЕСЯЦ) КАК Месяц,
	|	РасходыНаОплатуТруда.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
	|	ВЫБОР
	|		КОГДА РасходыНаОплатуТруда.ВидНачисленияУдержания В (&ВидыНачислений)
	|			ТОГДА ЛОЖЬ
	|		КОГДА РасходыНаОплатуТруда.ВидНачисленияУдержания В (&ВидыУдержаний)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЭтоУдержание,
	|	РасходыНаОплатуТруда.ФизЛицо КАК ФизЛицо,
	|	ПРЕДСТАВЛЕНИЕ(РасходыНаОплатуТруда.ФизЛицо) КАК ФизЛицоПредставление,
	|	РасходыНаОплатуТруда.СуммаОборот КАК Сумма,
	|	РасходыНаОплатуТруда.КВыплате КАК КВыплате,
	|	ВЫБОР
	|		КОГДА РасходыНаОплатуТруда.ВидНачисленияУдержания = ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.УдержаноНДФЛ)
	|				ИЛИ СписаниеСРасчетногоСчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РасходыНаОплатуТруда.ДокументОплаты
	|	КОНЕЦ КАК ДокументОплаты,
	|	НАЧАЛОПЕРИОДА(РеквизитыДокументовОплаты.Дата, ДЕНЬ) КАК ДатаДокументаОплаты
	|ИЗ
	|	ВТРасходыНаОплатуТруда КАК РасходыНаОплатуТруда
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ПО РасходыНаОплатуТруда.ДокументОплаты = СписаниеСРасчетногоСчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И РасходыНаОплатуТруда.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодОтчета,
	|	Месяц,
	|	ДатаДокументаОплаты,
	|	ФизЛицо,
	|	ЭтоУдержание,
	|	ВидНачисленияУдержания
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(КВыплате)
	|ПО
	|	ОБЩИЕ,
	|	ПериодОтчета,
	|	Месяц,
	|	ДатаДокументаОплаты,
	|	ФизЛицо,
	|	ЭтоУдержание,
	|	ВидНачисленияУдержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРасходыНаОплатуТруда";
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНалоговаяБаза(ПараметрыОтчета, НомераТаблиц, ДляПризнанияРасходовТребуетсяПолучениеДоходаИП)
	Перем ТекстЗапроса;
	
	НомераТаблиц.Вставить("ВТНалоговаяБазаМатериальныеРасходы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТНалоговаяБазаДоходы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТНалоговаяБазаИМР", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТНалоговаяБазаАмортизация", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТНалоговаяБазаРасходыНаОплатуТруда", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТНалоговаяБазаПрочиеРасходы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТНалоговаяБазаРасходыБудущихПериодов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТНалоговаяБазаПрочиеДоходы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НалоговаяБаза", НомераТаблиц.Количество());
	
	Если НЕ ДляПризнанияРасходовТребуетсяПолучениеДоходаИП Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИПМПЗОбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА &ОблагаетсяНДС
		|			ТОГДА ИПМПЗОбороты.СуммаПриход
		|		ИНАЧЕ ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВТНалоговаяБазаМатериальныеРасходы
		|ИЗ
		|	РегистрНакопления.ИПМПЗ.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			МЕСЯЦ,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И (ВидМПЗ = &Продукция
		|					ИЛИ ВидМПЗ В (&ТоварыПолуфабрикаты))
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИПМПЗОборотыОбороты.Период,
		|	ВЫБОР
		|		КОГДА &ОблагаетсяНДС
		|			ТОГДА -ИПМПЗОборотыОбороты.СуммаОборот
		|		ИНАЧЕ -ИПМПЗОборотыОбороты.СуммаОборот - ИПМПЗОборотыОбороты.НДСОборот
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ИПМПЗОбороты.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			МЕСЯЦ,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И ВидСписанногоМПЗ В (&ТоварыПолуфабрикаты)
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОборотыОбороты";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИПДоходыОбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА &ОблагаетсяНДС
		|			ТОГДА ИПДоходыОбороты.СуммаОборот
		|		ИНАЧЕ ИПДоходыОбороты.СуммаОборот + ИПДоходыОбороты.НДСОборот
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВТНалоговаяБазаМатериальныеРасходы
		|ИЗ
		|	РегистрНакопления.ИПДоходы.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			МЕСЯЦ,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПДоходыОбороты";
	
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	ИПДоходыОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИПДоходыОбороты.ВыручкаОборот - ИПДоходыОбороты.НДСНачисленныйОборот
	|		ИНАЧЕ ИПДоходыОбороты.ВыручкаОборот
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ВТНалоговаяБазаДоходы
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			МЕСЯЦ,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПДоходыОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИМРОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИМРОбороты.СуммаРасход
	|		ИНАЧЕ ИМРОбороты.СуммаРасход + ИМРОбороты.НДСРасход
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ВТНалоговаяБазаИМР
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			МЕСЯЦ,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИМРОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИППрочиеРасходы.Период КАК Период,
	|	ИППрочиеРасходы.СуммаОборот КАК Сумма
	|ПОМЕСТИТЬ ВТНалоговаяБазаАмортизация
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			МЕСЯЦ,
	|			Организация = &Организация
	|				И (СтатьяЗатрат ССЫЛКА Справочник.ОсновныеСредства
	|					ИЛИ СтатьяЗатрат ССЫЛКА Справочник.НематериальныеАктивы)
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИПРасходыНаОплатуТрудаОбороты.Период КАК Период,
	|	ИПРасходыНаОплатуТрудаОбороты.СуммаОборот КАК Сумма,
	|	ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания КАК ВидНачисленияУдержания
	|ПОМЕСТИТЬ ВТНалоговаяБазаРасходыНаОплатуТруда
	|ИЗ
	|	РегистрНакопления.ИПРасходыНаОплатуТруда.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			МЕСЯЦ,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидНачисленияУдержания В (&ВидыНачислений)
	|				И СтатьяЗатрат В (&СтатьиЗатратПринимаемые)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПРасходыНаОплатуТрудаОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИППрочиеРасходыОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИППрочиеРасходыОбороты.СуммаОборот
	|		ИНАЧЕ ИППрочиеРасходыОбороты.СуммаОборот + ИППрочиеРасходыОбороты.НДСОборот
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ВТНалоговаяБазаПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			МЕСЯЦ,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И СтатьяЗатрат В (&СтатьиЗатратПринимаемые)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИПРБПОстаткиИОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ИПРБПОстаткиИОбороты.СуммаОборот
	|		ИНАЧЕ ИПРБПОстаткиИОбороты.СуммаОборот + ИПРБПОстаткиИОбороты.НДСОборот
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ВТНалоговаяБазаРасходыБудущихПериодов
	|ИЗ
	|	РегистрНакопления.ИПРБП.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			МЕСЯЦ,
	|			,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (ВидРасхода ССЫЛКА Справочник.РасходыБудущихПериодов
	|					ИЛИ ВидРасхода ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|						И ВидРасхода В (&СтатьиЗатратПринимаемые))
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПРБПОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИППрочиеДоходыОбороты.Период КАК Период,
	|	ИППрочиеДоходыОбороты.СуммаОборот КАК Сумма
	|ПОМЕСТИТЬ ВТНалоговаяБазаПрочиеДоходы
	|ИЗ
	|	РегистрНакопления.ИППрочиеДоходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			МЕСЯЦ,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ЕСТЬNULL(ВЫРАЗИТЬ(СтатьяДоходов КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету, ИСТИНА)) КАК ИППрочиеДоходыОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИМР.Период КАК Период,
	|	ИМР.Сумма КАК МатериальныеРасходы,
	|	0 КАК Доходы,
	|	0 КАК Амортизация,
	|	0 КАК РасходыНаОплатуТруда,
	|	0 КАК НомерГрафыРОТ,
	|	0 КАК ПрочиеРасходы,
	|	0 КАК РасходыБудущихПериодов,
	|	0 КАК ПрочиеДоходы,
	|	0 КАК ИтогоДоходов,
	|	ИМР.Сумма КАК ИтогоРасходов
	|ИЗ
	|	ВТНалоговаяБазаИМР КАК ИМР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МатериальныеРасходы.Период,
	|	МатериальныеРасходы.Сумма,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	МатериальныеРасходы.Сумма
	|ИЗ
	|	ВТНалоговаяБазаМатериальныеРасходы КАК МатериальныеРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Доходы.Период,
	|	0,
	|	Доходы.Сумма,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	Доходы.Сумма,
	|	0
	|ИЗ
	|	ВТНалоговаяБазаДоходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Амортизация.Период,
	|	0,
	|	0,
	|	Амортизация.Сумма,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	Амортизация.Сумма
	|ИЗ
	|	ВТНалоговаяБазаАмортизация КАК Амортизация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыНаОплатуТруда.Период,
	|	0,
	|	0,
	|	0,
	|	РасходыНаОплатуТруда.Сумма,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	РасходыНаОплатуТруда.Сумма
	|ИЗ
	|	ВТНалоговаяБазаРасходыНаОплатуТруда КАК РасходыНаОплатуТруда
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НачалоПериода,
	|	0,
	|	0,
	|	0,
	|	0,
	|	&ГрафаНачислено + КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасходыНаОплатуТруда.ВидНачисленияУдержания),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ВТНалоговаяБазаРасходыНаОплатуТруда КАК РасходыНаОплатуТруда
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Период,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ПрочиеРасходы.Сумма,
	|	0,
	|	0,
	|	0,
	|	ПрочиеРасходы.Сумма
	|ИЗ
	|	ВТНалоговаяБазаПрочиеРасходы КАК ПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыБудущихПериодов.Период,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	РасходыБудущихПериодов.Сумма,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ВТНалоговаяБазаРасходыБудущихПериодов КАК РасходыБудущихПериодов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеДоходы.Период,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ПрочиеДоходы.Сумма,
	|	ПрочиеДоходы.Сумма,
	|	0
	|ИЗ
	|	ВТНалоговаяБазаПрочиеДоходы КАК ПрочиеДоходы
	|ИТОГИ
	|	СУММА(МатериальныеРасходы),
	|	СУММА(Доходы),
	|	СУММА(Амортизация),
	|	СУММА(РасходыНаОплатуТруда),
	|	МАКСИМУМ(НомерГрафыРОТ),
	|	СУММА(ПрочиеРасходы),
	|	СУММА(РасходыБудущихПериодов),
	|	СУММА(ПрочиеДоходы),
	|	СУММА(ИтогоДоходов),
	|	СУММА(ИтогоРасходов)
	|ПО
	|	ОБЩИЕ";
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Если ПараметрыОтчета.НалоговаяБазаПоПериодам Тогда
		ТекстЗапроса = ТекстЗапроса + ", Период";
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПрочиеРасходы(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТПрочиеРасходы",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрочиеРасходы",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТПрочиеРасходыУничтожить", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИППрочиеРасходы.Период,
	|	ИППрочиеРасходы.Регистратор,
	|	ИППрочиеРасходы.СтатьяЗатрат,
	|	ИППрочиеРасходы.СчетУчета,
	|	ИППрочиеРасходы.РасчетныйДокумент,
	|	ИППрочиеРасходы.ДокументОплаты,
	|	СУММА(ИППрочиеРасходы.Сумма) КАК СуммаОборот,
	|	СУММА(ИППрочиеРасходы.НДС) КАК НДСОборот,
	|	ИППрочиеРасходы.Корректировка
	|ПОМЕСТИТЬ ВТПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы КАК ИППрочиеРасходы
	|ГДЕ
	|	ИППрочиеРасходы.Активность
	|	И ИППрочиеРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИППрочиеРасходы.Организация = &Организация
	|	И ИППрочиеРасходы.ХарактерДеятельности В(&СписокХарактеровДеятельности)
	|	И ИППрочиеРасходы.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
	|	И СтатьяЗатрат В (&СтатьиЗатратПринимаемые)
	|	И ИППрочиеРасходы.ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ИППрочиеРасходы.Период,
	|	ИППрочиеРасходы.Регистратор,
	|	ИППрочиеРасходы.СтатьяЗатрат,
	|	ИППрочиеРасходы.СчетУчета,
	|	ИППрочиеРасходы.РасчетныйДокумент,
	|	ИППрочиеРасходы.ДокументОплаты,
	|	ИППрочиеРасходы.Корректировка";
	
	Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
	
		ТекстЗапроса = ТекстЗапроса +
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		"ВЫБРАТЬ
		|	NULL КАК Период,
		|	NULL КАК Регистратор,
		|	NULL КАК СтатьяЗатрат,
		|	NULL КАК СчетУчета,
		|	NULL КАК Партия,
		|	NULL КАК ДокументОплаты,
		|	ИППрочиеРасходыОбороты.СуммаОборот,
		|	ИППрочиеРасходыОбороты.НДСОборот,
		|	ЛОЖЬ КАК Корректировка
		|ИЗ
		|	РегистрНакопления.ИППрочиеРасходы.Обороты(
		|			&НачалоНалоговогоПериода,
		|			&КонецПредыдущегоПериода,
		|			,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И СтатьяЗатрат В (&СтатьиЗатратПринимаемые)
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.Период ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПериодОтчета,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.СчетУчета,
	|	ПрочиеРасходы.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.СчетУчета В (&Субсчета69)
	|			ТОГДА ПрочиеРасходы.СчетУчета.Наименование
	|		ИНАЧЕ ПрочиеРасходы.СтатьяЗатрат.Наименование
	|	КОНЕЦ КАК СтатьяЗатратПредставление,
	|	ПрочиеРасходы.РасчетныйДокумент,
	|	ПрочиеРасходы.ДокументОплаты,
	|	ЕСТЬNULL(РеквизитыДокументовОплаты.Номер, """") КАК НомерДокументаОплаты,
	|	ЕСТЬNULL(РеквизитыДокументовОплаты.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокументаОплаты,
	|	ЕСТЬNULL(РеквизитыДокументовОплаты.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРегистратораДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА ПрочиеРасходы.СуммаОборот
	|		ИНАЧЕ ПрочиеРасходы.СуммаОборот + ПрочиеРасходы.НДСОборот
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВТПрочиеРасходы КАК ПрочиеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И ПрочиеРасходы.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодОтчета,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.Регистратор,
	|	ДатаДокументаОплаты,
	|	ДатаРегистратораДокументаОплаты,
	|	СтатьяЗатратПредставление,
	|	ПрочиеРасходы.Корректировка УБЫВ
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	ПериодОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрочиеРасходы";
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИППрочиеРасходы.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРасходыБудущихПериодов(ПараметрыОтчета, НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТРасходыБудущихПериодов",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РасходыБудущихПериодов",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТРасходыБудущихПериодовУничтожить", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИПРБП.Период,
	|	ИПРБП.Регистратор,
	|	ИПРБП.ВидРасхода,
	|	ИПРБП.Партия,
	|	ИПРБП.ДокументОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ИПРБП.ВидДвижения = &ВидДвиженияПриход
	|				ТОГДА ИПРБП.Сумма
	|			ИНАЧЕ -ИПРБП.Сумма
	|		КОНЕЦ) КАК СуммаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА ИПРБП.ВидДвижения = &ВидДвиженияРасход
	|				ТОГДА ИПРБП.НДС
	|			ИНАЧЕ -ИПРБП.НДС
	|		КОНЕЦ) КАК НДСОборот
	|ПОМЕСТИТЬ ВТРасходыБудущихПериодов
	|ИЗ
	|	РегистрНакопления.ИПРБП КАК ИПРБП
	|ГДЕ
	|	ИПРБП.Активность
	|	И ИПРБП.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИПРБП.Организация = &Организация
	|	И ИПРБП.ХарактерДеятельности В(&СписокХарактеровДеятельности)
	|	И ИПРБП.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
	|	И (ИПРБП.ВидРасхода ССЫЛКА Справочник.РасходыБудущихПериодов
	|			ИЛИ ИПРБП.ВидРасхода ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|				И ИПРБП.ВидРасхода В (&СтатьиЗатратПринимаемые))
	|	И ИПРБП.ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПРБП.Период,
	|	ИПРБП.Регистратор,
	|	ИПРБП.ВидРасхода,
	|	ИПРБП.Партия,
	|	ИПРБП.ДокументОплаты";
	
	Если НЕ ПараметрыОтчета.СНачалаНалоговогоПериода Тогда
		
		ТекстЗапроса = ТекстЗапроса +
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		"ВЫБРАТЬ
		|	NULL КАК Период,
		|	NULL КАК Регистратор,
		|	NULL КАК ВидРасхода,
		|	NULL КАК Партия,
		|	NULL КАК ДокументОплаты,
		|	ИПРБПОбороты.СуммаОборот,
		|	ИПРБПОбороты.НДСОборот
		|ИЗ
		|	РегистрНакопления.ИПРБП.Обороты(
		|			&НачалоНалоговогоПериода,
		|			&КонецПредыдущегоПериода,
		|			,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И (ВидРасхода ССЫЛКА Справочник.РасходыБудущихПериодов
		|					ИЛИ ВидРасхода ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|						И ВидРасхода В (&СтатьиЗатратПринимаемые))
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПРБПОбороты";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходыБудущихПериодов.Период ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПериодОтчета,
	|	РасходыБудущихПериодов.Период,
	|	РасходыБудущихПериодов.Регистратор,
	|	РасходыБудущихПериодов.ВидРасхода,
	|	РасходыБудущихПериодов.ВидРасхода.Наименование КАК ВидРасходаПредставление,
	|	РасходыБудущихПериодов.Партия КАК Партия,
	|	РасходыБудущихПериодов.ДокументОплаты КАК ДокументОплаты,
	|	РеквизитыДокументовОплаты.Номер КАК НомерДокументаОплаты,
	|	РеквизитыДокументовОплаты.Дата КАК ДатаДокументаОплаты,
	|	РеквизитыДокументовОплаты.ДатаРегистратора КАК ДатаРегистратораДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &ОблагаетсяНДС
	|			ТОГДА РасходыБудущихПериодов.СуммаОборот
	|		ИНАЧЕ РасходыБудущихПериодов.СуммаОборот + РасходыБудущихПериодов.НДСОборот
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВТРасходыБудущихПериодов КАК РасходыБудущихПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовОплаты
	|		ПО (РеквизитыДокументовОплаты.Организация = &Организация)
	|			И РасходыБудущихПериодов.ДокументОплаты = РеквизитыДокументовОплаты.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодОтчета,
	|	РасходыБудущихПериодов.Период,
	|	РасходыБудущихПериодов.Регистратор,
	|	ВидРасходаПредставление,
	|	ДатаДокументаОплаты,
	|	ДатаРегистратораДокументаОплаты
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	ПериодОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРасходыБудущихПериодов";
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИПРБП.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#Область ПроцедурыФормированияТаблиц

Функция СформироватьТитульныйЛист(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_ТитульныйЛист";
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	ТабличныйДокумент.Вывести(Макет);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьСодержание(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Содержание";
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	ТабличныйДокумент.Вывести(Макет);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьСведения(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Сведения";
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("", "ФИО");
	СписокПоказателей.Добавить("", "ИННФЛ");
	СписокПоказателей.Добавить("", "НаимНО");
	СписокПоказателей.Добавить("", "КодНО");
	СписокПоказателей.Добавить("", "СвидСН");
	СписокПоказателей.Добавить("", "СвидДВ");
	СписокПоказателей.Добавить("", "СвидНО");
	СписокПоказателей.Добавить("", "БанкСчетНомер");
	СписокПоказателей.Добавить("", "БанкСчетНаимБанка");
	СписокПоказателей.Добавить("", "ТелСлуж");
	СписокПоказателей.Добавить("", "ТелДом");
	
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода, СписокПоказателей);
		
	РеквизитыВидаДеятельности = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.ВидДеятельности,
		"МестоОсуществления, Лицензия, НаименованиеПолное");
	
	Области = Макет.Области;
	
	Если НЕ ЗначениеЗаполнено(Области.ФИО.Значение) Тогда
		Области.ФИО.Значение = СведенияОбОрганизации.ФИО;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.ИНН.Значение) Тогда
		Области.ИНН.Значение = СведенияОбОрганизации.ИННФЛ;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.ИМНС.Значение) Тогда
		Области.ИМНС.Значение = СокрЛП(СведенияОбОрганизации.КодНО)
			+ ?(ПустаяСтрока(СведенияОбОрганизации.КодНО), "", ", ")
			+ СокрЛП(СведенияОбОрганизации.НаимНО);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.НомерСвидетельства.Значение) Тогда
		Области.НомерСвидетельства.Значение = СведенияОбОрганизации.СвидСН;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.Администрация.Значение) Тогда
		Области.Администрация.Значение = СведенияОбОрганизации.СвидНО;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.Счета.Значение) Тогда
		Области.Счета.Значение = СведенияОбОрганизации.БанкСчетНомер;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.Банки.Значение) Тогда
		Области.Банки.Значение = СведенияОбОрганизации.БанкСчетНаимБанка;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.ТелефонДомашний.Значение) Тогда
		Области.ТелефонДомашний.Значение = СведенияОбОрганизации.ТелДом;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.ТелефонРабочий.Значение) Тогда
		Области.ТелефонРабочий.Значение = СведенияОбОрганизации.ТелСлуж;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.МестоОсуществленияДеятельности.Значение) Тогда
		Области.МестоОсуществленияДеятельности.Значение = РеквизитыВидаДеятельности.МестоОсуществления;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.Лицензия.Значение) Тогда
		Области.Лицензия.Значение = РеквизитыВидаДеятельности.Лицензия;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.ВидыДеятельности.Значение) Тогда
		Области.ВидыДеятельности.Значение = РеквизитыВидаДеятельности.НаименованиеПолное;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Области.ПечДата.Значение) Тогда
		Области.ПечДата.Значение = Формат(ПараметрыОтчета.КонецПериода, "ДЛФ=DD");
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Макет);
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьТаблицу11_12_13(ПараметрыОтчета, КодТаблицы)
	
	Перем ТаблицаОстатки;
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Если КодТаблицы = 11 Тогда
		НачОстаткиМПЗ = ПараметрыОтчета.НачОстаткиТоваров;
		ОборотыМПЗ    = ПараметрыОтчета.ОборотыТоваров;
	ИначеЕсли КодТаблицы = 12 Тогда
		НачОстаткиМПЗ = ПараметрыОтчета.НачОстаткиПолуфабрикатов;
		ОборотыМПЗ    = ПараметрыОтчета.ОборотыПолуфабрикатов;
	ИначеЕсли КодТаблицы = 13 Тогда
		НачОстаткиМПЗ = ПараметрыОтчета.НачОстаткиВспомогательныхМатериалов;
		ОборотыМПЗ    = ПараметрыОтчета.ОборотыВспомогательныхМатериалов;
	Иначе
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ОписаниеПериода = ОписаниеПериода(ПараметрыОтчета);
	ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	// Печать шапки
	Если Таблица.КодТаблицы = 12 Тогда
		ПечНомерТаблицы = "Таблица № 1-2 (по операциям, " + ?(ПараметрыОтчета.ОблагаетсяНДС, "", "не ") + "облагаемым НДС)";
	Иначе
		ПечНомерТаблицы = Таблица.ЗаголовокТаблицы + ?(ПараметрыОтчета.ОблагаетсяНДС, "А", "Б") + "*";
	КонецЕсли;
	
	ОбластьШапкаНач = Макет.ПолучитьОбласть("Шапка|ОсновнаяНач");
	ОбластьШапкаДоб = Макет.ПолучитьОбласть("Шапка|Добавочная");
	ОбластьШапкаКон = Макет.ПолучитьОбласть("Шапка|ОсновнаяКон");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаНач);
	Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
		ТабличныйДокумент.Присоединить(ОбластьШапкаДоб);
	КонецЕсли;
	ОбластьШапкаКон.Параметры.НомерТаблицы = ПечНомерТаблицы;
	ТабличныйДокумент.Присоединить(ОбластьШапкаКон);
	
	// Печать начальных остатков
	Если НЕ НачОстаткиМПЗ.Пустой() Тогда
		
		ТаблицаОстатки = НачОстаткиМПЗ.Выгрузить();
		
		Если ПараметрыОтчета.ВыводитьНачОстатки Тогда
			
			ОбластьОстатокНач = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			ОбластьОстатокДоб = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
			ОбластьОстатокКон = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			
			Для каждого Остаток Из ТаблицаОстатки Цикл
				
				ОбластьОстатокНач.Параметры.Заполнить(Остаток);
				ОбластьОстатокНач.Параметры.РеквизитыДокументаОплаты = 
					ПолучитьРеквизитыДокумента(Остаток.НомерДокументаОплаты, Остаток.ДатаДокументаОплаты);
				ТабличныйДокумент.Вывести(ОбластьОстатокНач);
				
				Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
					ОбластьОстатокДоб.Параметры.Заполнить(Остаток);
					ОбластьОстатокДоб.Параметры.РеквизитыПартии = 
						ПолучитьРеквизитыДокумента(Остаток.НомерПартии, Остаток.ДатаПартии);
					ТабличныйДокумент.Присоединить(ОбластьОстатокДоб);
				КонецЕсли;
				
				ОбластьОстатокКон.Параметры.Заполнить(Остаток);
				ТабличныйДокумент.Присоединить(ОбластьОстатокКон);
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		ТаблицаОстатки = Новый ТаблицаЗначений;
		ТаблицаОстатки.Колонки.Добавить("Номенклатура",      Справочники.ТипВсеСсылки());
		ТаблицаОстатки.Колонки.Добавить("Партия",            Документы.ТипВсеСсылки());
		ТаблицаОстатки.Колонки.Добавить("СуммаОстаток",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		ТаблицаОстатки.Колонки.Добавить("НДСОстаток",        ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		ТаблицаОстатки.Колонки.Добавить("КоличествоОстаток", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	КонецЕсли;
	
	// Печать оборотов
	Если НЕ ОборотыМПЗ.Пустой() Тогда
		
		ТаблицаОстатки.Свернуть("Номенклатура, Партия", "СуммаОстаток, НДСОстаток, КоличествоОстаток");
		ТаблицаОстатки.Индексы.Добавить("Номенклатура, Партия");
		ОтборОстатки = Новый Структура("Номенклатура, Партия");
		
		СуммаКонечныйОстаток = ТаблицаОстатки.Итог("СуммаОстаток");
		
		ОбластьСтрокаНач = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
		ОбластьСтрокаДоб = Макет.ПолучитьОбласть("Строка|Добавочная");
		ОбластьСтрокаКон = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
		
		ОбластьМесяцНач = Макет.ПолучитьОбласть("Месяц|ОсновнаяНач");
		ОбластьМесяцДоб = Макет.ПолучитьОбласть("Месяц|Добавочная");
		ОбластьМесяцКон = Макет.ПолучитьОбласть("Месяц|ОсновнаяКон");
		
		ОбластьГодНач = Макет.ПолучитьОбласть("Год|ОсновнаяНач");
		ОбластьГодДоб = Макет.ПолучитьОбласть("Год|Добавочная");
		ОбластьГодКон = Макет.ПолучитьОбласть("Год|ОсновнаяКон");
		
		НПП = 1;
		
		ВыборкаОбщие = ОборотыМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если ВыборкаОбщие.Следующий() Тогда 
			
			ВыборкаПериодОтчета = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПериодОтчета");
			Если ВыборкаПериодОтчета.НайтиСледующий(1, "ПериодОтчета") Тогда
			
				ВыборкаМесяц = ВыборкаПериодОтчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
				Пока ВыборкаМесяц.Следующий() Цикл
					
					СуммаКонечныйОстаток = СуммаКонечныйОстаток + ВыборкаМесяц.СуммаПриход - ВыборкаМесяц.СуммаРасход;
					
					ВыборкаРегистратор = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Регистратор");
					Пока ВыборкаРегистратор.Следующий() Цикл
						
						ВыборкаКорректировка = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Корректировка");
						Пока ВыборкаКорректировка.Следующий() Цикл
							
							Выборка = ВыборкаКорректировка.Выбрать();
							Пока Выборка.Следующий() Цикл
								
								СтоимостьЕдиницы     = Выборка.СтоимостьЕдиницы;
								НДСЕдиницы           = Выборка.НДСЕдиницы;
								СтоимостьЕдиницыСНДС = Выборка.СтоимостьЕдиницыСНДС;
								
								Если СтоимостьЕдиницы = 0 Тогда
									Если Выборка.СуммаРасход <> 0 И Выборка.КоличествоРасход <> 0 Тогда
										СтоимостьЕдиницы     = Окр(Выборка.СуммаРасход / Выборка.КоличествоРасход, 2, 1);
										СтоимостьЕдиницыСНДС = Окр((Выборка.СуммаРасход + Выборка.НДСРасход) / Выборка.КоличествоРасход, 2, 1);
									ИначеЕсли Выборка.СуммаПриход <> 0 И Выборка.КоличествоПриход <> 0 Тогда
										СтоимостьЕдиницы     = Окр(Выборка.СуммаПриход / Выборка.КоличествоПриход, 2, 1);
										СтоимостьЕдиницыСНДС = Окр((Выборка.СуммаПриход + Выборка.НДСПриход) / Выборка.КоличествоПриход, 2, 1);
									Иначе
										СтоимостьЕдиницы     = 0;
										СтоимостьЕдиницыСНДС = 0;
									КонецЕсли;
									НДСЕдиницы = СтоимостьЕдиницыСНДС - СтоимостьЕдиницы;
								КонецЕсли;
								
								ЗаполнитьЗначенияСвойств(ОтборОстатки, Выборка);
								НайденныеСтроки = ТаблицаОстатки.НайтиСтроки(ОтборОстатки);
								
								Если НайденныеСтроки.Количество() = 0 Тогда
									Остаток = ТаблицаОстатки.Добавить();
									ЗаполнитьЗначенияСвойств(Остаток, Выборка);
									Остаток.СуммаОстаток      = Выборка.СуммаПриход - Выборка.СуммаРасход;
									Остаток.НДСОстаток        = Выборка.НДСПриход - Выборка.НДСРасход;
									Остаток.КоличествоОстаток = Выборка.КоличествоПриход - Выборка.КоличествоРасход;
								Иначе
									Остаток = НайденныеСтроки[0];
									Остаток.СуммаОстаток      = Остаток.СуммаОстаток + Выборка.СуммаПриход - Выборка.СуммаРасход;
									Остаток.НДСОстаток        = Остаток.НДСОстаток + Выборка.НДСПриход - Выборка.НДСРасход;
									Остаток.КоличествоОстаток = Остаток.КоличествоОстаток + Выборка.КоличествоПриход - Выборка.КоличествоРасход;
								КонецЕсли;
								
								ОбластьСтрокаНач.Параметры.Заполнить(Выборка);
								ОбластьСтрокаНач.Параметры.НПП = НПП;
								ОбластьСтрокаНач.Параметры.РеквизитыДокументаОплаты = 
									ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
								ТабличныйДокумент.Вывести(ОбластьСтрокаНач);
								
								Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
									ОбластьСтрокаДоб.Параметры.Заполнить(Выборка);
									ОбластьСтрокаДоб.Параметры.РеквизитыПартии = 
										ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
									ТабличныйДокумент.Присоединить(ОбластьСтрокаДоб);
								КонецЕсли;
								
								ОбластьСтрокаКон.Параметры.Заполнить(Выборка);
								
								ОбластьСтрокаКон.Параметры.СтоимостьЕдиницы = СтоимостьЕдиницы;
								Если ПараметрыОтчета.ОблагаетсяНДС И Таблица.КодТаблицы <> 12 Тогда
									ОбластьСтрокаКон.Параметры.СтоимостьЕдиницыСНДС = СтоимостьЕдиницыСНДС;
									ОбластьСтрокаКон.Параметры.НДСЕдиницы           = НДСЕдиницы;
								КонецЕсли;
								ОбластьСтрокаКон.Параметры.СуммаОстаток      = Остаток.СуммаОстаток;
								ОбластьСтрокаКон.Параметры.КоличествоОстаток = Остаток.КоличествоОстаток;
								ТабличныйДокумент.Присоединить(ОбластьСтрокаКон);
								
								НПП = НПП + 1;
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЦикла;
					
					// Итоги за месяц
					ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
					ПоследняяСтрока.ВместеСоСледующим = Истина;
					
					ОбластьМесяцНач.Параметры.НазваниеИтогов = "Итого за " + НРег(Формат(ВыборкаМесяц.Месяц, "ДФ='ММMM гггг'")) + " г.";
					ТабличныйДокумент.Вывести(ОбластьМесяцНач);
					
					Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
						ТабличныйДокумент.Присоединить(ОбластьМесяцДоб);
					КонецЕсли;
					
					ОбластьМесяцКон.Параметры.Заполнить(ВыборкаМесяц);
					ОбластьМесяцКон.Параметры.СуммаОстаток = СуммаКонечныйОстаток;
					ТабличныйДокумент.Присоединить(ОбластьМесяцКон);
					
				КонецЦикла;
				
			КонецЕсли;
			
			ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, , ТабличныйДокумент.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
				ТабличныйДокумент.Вывести(ОбластьГодНач);
				Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
					ТабличныйДокумент.Присоединить(ОбластьГодДоб);
				КонецЕсли;
				
				ОбластьГодКон.Параметры.Заполнить(ВыборкаОбщие);
				ОбластьГодКон.Параметры.СуммаОстаток = СуммаКонечныйОстаток;
				ТабличныйДокумент.Присоединить(ОбластьГодКон);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, , ТабличныйДокумент.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
		ОбластьПримечание = Макет.ПолучитьОбласть("Примечание");
		
		Если Таблица.КодТаблицы <> 12 Тогда
			ОбластьПримечание.Параметры.ЗаголовокТаблицы = Таблица.ЗаголовокТаблицы;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьПримечание);
	КонецЕсли;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 9, 8);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ВысотаШапки,, ВысотаШапки,);
	ТабличныйДокумент.ОбластьПечати            = ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьТаблицу14(ПараметрыОтчета, КодТаблицы)
	
	Перем ТаблицаОстатки, ТаблицаВидовДеятельности;
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	НачОстаткиИМР       = ПараметрыОтчета.НачОстаткиИМР;
	ОборотыИМР          = ПараметрыОтчета.ОборотыИМР;
	ВидыДеятельностиИМР = ПараметрыОтчета.ВидыДеятельностиИМР;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ОписаниеПериода = ОписаниеПериода(ПараметрыОтчета);
	ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
		
	// Печать шапки
	Если НЕ ВидыДеятельностиИМР.Пустой() Тогда
		ТаблицаВидовДеятельности = ВидыДеятельностиИМР.Выгрузить();
	Иначе
		
		ТаблицаВидовДеятельности = Новый ТаблицаЗначений;
		ТаблицаВидовДеятельности.Колонки.Добавить("ВидДеятельности");
		ТаблицаВидовДеятельности.Колонки.Добавить("ВидДеятельностиПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
		Если НЕ ОборотыИМР.Пустой() Тогда
			ТаблицаВидовДеятельности.Добавить();
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаВидовДеятельности.Колонки.Добавить("КоличествоРасход", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаВидовДеятельности.Колонки.Добавить("НДСРасход",        ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаВидовДеятельности.Колонки.Добавить("СуммаРасход",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаВидовДеятельности.Колонки.Добавить("СуммаРасходМесяц", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаВидовДеятельности.Колонки.Добавить("СуммаРасходГод",   ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	ТаблицаВидовДеятельности.Индексы.Добавить("ВидДеятельности");
	
	КоличествоВидовДеятельности = ТаблицаВидовДеятельности.Количество();
	
	ОбластьШапкаНач             = Макет.ПолучитьОбласть("Шапка|ОсновнаяНач");
	ОбластьШапкаДоб             = Макет.ПолучитьОбласть("Шапка|Добавочная");
	ОбластьШапкаКон             = Макет.ПолучитьОбласть("Шапка|ОсновнаяКон");
	ОбластьШапкаВидДеятельности = Макет.ПолучитьОбласть("Шапка|ВидДеятельности");
	ОбластьШапкаСтоимость       = Макет.ПолучитьОбласть("Шапка|Стоимость");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаНач);
	Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
		ТабличныйДокумент.Присоединить(ОбластьШапкаДоб);
	КонецЕсли;
	ТабличныйДокумент.Присоединить(ОбластьШапкаКон);
	
	НомГрафы = ?(ПараметрыОтчета.ОблагаетсяНДС, 18, 13);
	
	Для каждого ВидДеятельностиИМР Из ТаблицаВидовДеятельности Цикл
		ОбластьШапкаВидДеятельности.Параметры.Заполнить(ВидДеятельностиИМР);
		ОбластьШапкаВидДеятельности.Параметры.НомГрафы1 = НомГрафы;
		ОбластьШапкаВидДеятельности.Параметры.НомГрафы2 = НомГрафы + 1;
		ТабличныйДокумент.Присоединить(ОбластьШапкаВидДеятельности);
		
		НомГрафы = НомГрафы + 2;
	КонецЦикла;
	
	Если КоличествоВидовДеятельности > 0 Тогда
		Столб   = ?(ПараметрыОтчета.ОблагаетсяНДС, 19, 14);
		Столб   = ?(ПараметрыОтчета.ВыводитьРеквизиты, Столб + 1, Столб);
		Стр     = ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 6, 5);
		Область = ТабличныйДокумент.Область(Стр, Столб, Стр, Столб + (2 * КоличествоВидовДеятельности) - 1);
		Область.Объединить();
	КонецЕсли;
	
	ОбластьШапкаСтоимость.Параметры.НомГрафы1         = НомГрафы;
	ОбластьШапкаСтоимость.Параметры.НомГрафы2         = НомГрафы + 1;
	ОбластьШапкаСтоимость.Параметры.ИмяГрафыСтоимости = "Общая стоимость (гр.8 х гр."+НомГрафы+") (руб.)";
	ОбластьШапкаСтоимость.Параметры.НомерТаблицы      = Таблица.ЗаголовокТаблицы + ?(ПараметрыОтчета.ОблагаетсяНДС, "А", "Б") + "*";
	ТабличныйДокумент.Присоединить(ОбластьШапкаСтоимость);
	
	// Печать нач остатков
	Если НЕ НачОстаткиИМР.Пустой() Тогда
		
		ТаблицаОстатки = НачОстаткиИМР.Выгрузить();
		
		Если ПараметрыОтчета.ВыводитьНачОстатки Тогда
			
			ОбластьОстатокНач             = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			ОбластьОстатокДоб             = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
			ОбластьОстатокКон             = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			ОбластьОстатокВидДеятельности = Макет.ПолучитьОбласть("ОстатокНач|ВидДеятельности");
			ОбластьОстатокСтоимость       = Макет.ПолучитьОбласть("ОстатокНач|Стоимость");
			
			Для каждого Остаток Из ТаблицаОстатки Цикл
				
				ОбластьОстатокНач.Параметры.Заполнить(Остаток);
				ОбластьОстатокНач.Параметры.РеквизитыДокументаОплаты = 
					ПолучитьРеквизитыДокумента(Остаток.НомерДокументаОплаты, Остаток.ДатаДокументаОплаты);
				ТабличныйДокумент.Вывести(ОбластьОстатокНач);
				
				Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
					ОбластьОстатокДоб.Параметры.Заполнить(Остаток);
					ОбластьОстатокДоб.Параметры.РеквизитыПартии = 
						ПолучитьРеквизитыДокумента(Остаток.НомерПартии, Остаток.ДатаПартии);
					ТабличныйДокумент.Присоединить(ОбластьОстатокДоб);
				КонецЕсли;
				
				ОбластьОстатокКон.Параметры.Заполнить(Остаток);
				Если Остаток.КоличествоОстаток <> 0 Тогда
					СтоимостьЕдиницы     = Окр(Остаток.СуммаОстаток / Остаток.КоличествоОстаток, 2, 1);
					СтоимостьЕдиницыСНДС = Окр((Остаток.СуммаОстаток + Остаток.НДСОстаток) / Остаток.КоличествоОстаток, 2, 1);
				Иначе
					СтоимостьЕдиницы     = Остаток.СуммаОстаток;
					СтоимостьЕдиницыСНДС = Остаток.СуммаОстаток + Остаток.НДСОстаток;
				КонецЕсли;
				ОбластьОстатокКон.Параметры.СтоимостьЕдиницы     = СтоимостьЕдиницы;
				Если ПараметрыОтчета.ОблагаетсяНДС Тогда
					ОбластьОстатокКон.Параметры.СтоимостьЕдиницыСНДС = СтоимостьЕдиницыСНДС;
					ОбластьОстатокКон.Параметры.НДСЕдиницы           = СтоимостьЕдиницыСНДС - СтоимостьЕдиницы;
				КонецЕсли;
				ТабличныйДокумент.Присоединить(ОбластьОстатокКон);
				
				Для н = 1 По КоличествоВидовДеятельности Цикл
					ТабличныйДокумент.Присоединить(ОбластьОстатокВидДеятельности);
				КонецЦикла;
				
				ОбластьОстатокСтоимость.Параметры.Заполнить(Остаток);
				ТабличныйДокумент.Присоединить(ОбластьОстатокСтоимость);
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		ТаблицаОстатки	= Новый ТаблицаЗначений;
		ТаблицаОстатки.Колонки.Добавить("СтатьяЗатрат",      Справочники.ТипВсеСсылки());
		ТаблицаОстатки.Колонки.Добавить("Партия",            Документы.ТипВсеСсылки());
		ТаблицаОстатки.Колонки.Добавить("СуммаОстаток",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		ТаблицаОстатки.Колонки.Добавить("НДСОстаток",        ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		ТаблицаОстатки.Колонки.Добавить("КоличествоОстаток", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	КонецЕсли;
	
	// Печать оборотов
	Если НЕ ОборотыИМР.Пустой() Тогда
		
		ТаблицаОстатки.Свернуть("СтатьяЗатрат, Партия", "СуммаОстаток, НДСОстаток, КоличествоОстаток");
		ТаблицаОстатки.Индексы.Добавить("СтатьяЗатрат, Партия");
		ОтборОстатки = Новый Структура("СтатьяЗатрат, Партия");
		
		СуммаКонечныйОстаток = ТаблицаОстатки.Итог("СуммаОстаток");
		
		ОбластьСтрокаНач             = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
		ОбластьСтрокаДоб             = Макет.ПолучитьОбласть("Строка|Добавочная");
		ОбластьСтрокаКон             = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
		ОбластьСтрокаВидДеятельности = Макет.ПолучитьОбласть("Строка|ВидДеятельности");
		ОбластьСтрокаСтоимость       = Макет.ПолучитьОбласть("Строка|Стоимость");
		
		ОбластьМесяцНач             = Макет.ПолучитьОбласть("Месяц|ОсновнаяНач");
		ОбластьМесяцДоб             = Макет.ПолучитьОбласть("Месяц|Добавочная");
		ОбластьМесяцКон             = Макет.ПолучитьОбласть("Месяц|ОсновнаяКон");
		ОбластьМесяцВидДеятельности = Макет.ПолучитьОбласть("Месяц|ВидДеятельности");
		ОбластьМесяцСтоимость       = Макет.ПолучитьОбласть("Месяц|Стоимость");
		
		НПП = 1;
		
		ВыборкаОбщие = ОборотыИМР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если ВыборкаОбщие.Следующий() Тогда
			
			ВыборкаПериодОтчета = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПериодОтчета");
			Пока ВыборкаПериодОтчета.Следующий() Цикл
				
				Если ВыборкаПериодОтчета.ПериодОтчета = 0 Тогда
					// Период с начала года
					ВыборкаМесяц = ВыборкаПериодОтчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
					Пока ВыборкаМесяц.Следующий() Цикл
						Выборка = ВыборкаМесяц.Выбрать();
						Пока Выборка.Следующий() Цикл
							ВидДеятельностиИМР = ТаблицаВидовДеятельности.Найти(Выборка.ВидДеятельности, "ВидДеятельности");
							Если ВидДеятельностиИМР <> Неопределено Тогда
								ВидДеятельностиИМР.СуммаРасходГод   = ВидДеятельностиИМР.СуммаРасходГод + Выборка.СуммаРасход;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
					
				Иначе
					// Выбранный период
					ВыборкаМесяц = ВыборкаПериодОтчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
					Пока ВыборкаМесяц.Следующий() Цикл
						
						ТаблицаВидовДеятельности.ЗаполнитьЗначения(0, "СуммаРасходМесяц"); // Очистка итоговых полей
						
						СуммаКонечныйОстаток = СуммаКонечныйОстаток + ВыборкаМесяц.СуммаПриход - ВыборкаМесяц.СуммаРасход;
						
						Регистратор    = Неопределено;
						ДокументОплаты = Неопределено;
						Партия         = Неопределено;
						Корректировка  = Неопределено;
						СтатьяЗатрат              = Неопределено;
						СтатьяЗатратПредставление = "";
						ЕдиницаИзмерения          = Неопределено;
						
						Остаток        = Неопределено;
						
						СтоимостьЕдиницы     = 0;
						НДСЕдиницы           = 0;
						СтоимостьЕдиницыСНДС = 0;
						
						КоличествоПриход = 0;
						СуммаПриход      = 0;
						НДСПриход        = 0;
						
						КоличествоРасход = 0;
						СуммаРасход      = 0;
						НДСРасход        = 0;
						
						ТаблицаВидовДеятельности.ЗаполнитьЗначения(0, "КоличествоРасход, СуммаРасход, НДСРасход");
						
						Выборка = ВыборкаМесяц.Выбрать();
						Пока Выборка.Следующий() Цикл
							
							Если Выборка.Регистратор = Регистратор
								И Выборка.ДокументОплаты = ДокументОплаты
								И Выборка.Партия = Партия
								И Выборка.СтатьяЗатрат = СтатьяЗатрат
								И Выборка.Корректировка = Корректировка Тогда
								
								КоличествоПриход = КоличествоПриход + Выборка.КоличествоПриход;
								СуммаПриход      = СуммаПриход + Выборка.СуммаПриход;
								НДСПриход        = НДСПриход + Выборка.НДСПриход;
								
								КоличествоРасход = КоличествоРасход + Выборка.КоличествоРасход;
								СуммаРасход      = СуммаРасход + Выборка.СуммаРасход;
								НДСРасход        = НДСРасход + Выборка.НДСРасход;
								
								ВидДеятельностиИМР = ТаблицаВидовДеятельности.Найти(Выборка.ВидДеятельности, "ВидДеятельности");
								Если ВидДеятельностиИМР <> Неопределено Тогда
									ВидДеятельностиИМР.КоличествоРасход = ВидДеятельностиИМР.КоличествоРасход + Выборка.КоличествоРасход;
									ВидДеятельностиИМР.СуммаРасход      = ВидДеятельностиИМР.СуммаРасход + Выборка.СуммаРасход;
									ВидДеятельностиИМР.НДСРасход        = ВидДеятельностиИМР.НДСРасход + Выборка.НДСРасход;
									ВидДеятельностиИМР.СуммаРасходМесяц = ВидДеятельностиИМР.СуммаРасходМесяц + Выборка.СуммаРасход;
									ВидДеятельностиИМР.СуммаРасходГод   = ВидДеятельностиИМР.СуммаРасходГод + Выборка.СуммаРасход;
								КонецЕсли;
								
								Продолжить;
								
							КонецЕсли;
							
							Если Регистратор <> Неопределено Тогда
								
								СуммаОстаток              = Остаток.СуммаОстаток + СуммаПриход - СуммаРасход;
								НДСОстаток                = Остаток.НДСОстаток + НДСПриход - НДСРасход;
								КоличествоОстаток         = Остаток.КоличествоОстаток + КоличествоПриход - КоличествоРасход;
								Остаток.СуммаОстаток      = СуммаОстаток;
								Остаток.НДСОстаток        = НДСОстаток;
								Остаток.КоличествоОстаток = КоличествоОстаток;
								
								Если СтоимостьЕдиницы = 0 Тогда
									Если СуммаРасход <> 0 И КоличествоРасход <> 0 Тогда
										СтоимостьЕдиницы     = Окр(СуммаРасход / КоличествоРасход, 2, 1);
										СтоимостьЕдиницыСНДС = Окр((СуммаРасход + НДСРасход) / КоличествоРасход, 2, 1);
									ИначеЕсли СуммаПриход <> 0 И КоличествоПриход <> 0 Тогда
										СтоимостьЕдиницы     = Окр(СуммаПриход / КоличествоПриход, 2, 1);
										СтоимостьЕдиницыСНДС = Окр((СуммаПриход + НДСПриход) / КоличествоПриход, 2, 1);
									ИначеЕсли СуммаОстаток <> 0 И КоличествоОстаток <> 0 Тогда
										СтоимостьЕдиницы     = Окр(СуммаОстаток / КоличествоОстаток, 2, 1);
										СтоимостьЕдиницыСНДС = Окр((СуммаОстаток + НДСОстаток) / КоличествоОстаток, 2, 1);
									Иначе
										СтоимостьЕдиницы     = 0;
										СтоимостьЕдиницыСНДС = 0;
									КонецЕсли;
									НДСЕдиницы = СтоимостьЕдиницыСНДС - СтоимостьЕдиницы;
								КонецЕсли;
								
								ОбластьСтрокаКон.Параметры.СтатьяЗатрат              = СтатьяЗатрат;
								ОбластьСтрокаКон.Параметры.СтатьяЗатратПредставление = СтатьяЗатратПредставление;
								ОбластьСтрокаКон.Параметры.ЕдиницаИзмерения          = ЕдиницаИзмерения;
								
								ОбластьСтрокаКон.Параметры.СтоимостьЕдиницы = СтоимостьЕдиницы;
								ОбластьСтрокаКон.Параметры.КоличествоПриход = КоличествоПриход;
								ОбластьСтрокаКон.Параметры.КоличествоРасход = КоличествоРасход;
								ОбластьСтрокаКон.Параметры.СуммаПриход      = СуммаПриход;
								ОбластьСтрокаКон.Параметры.СуммаРасход      = СуммаРасход;
								Если ПараметрыОтчета.ОблагаетсяНДС Тогда
									ОбластьСтрокаКон.Параметры.СтоимостьЕдиницыСНДС = СтоимостьЕдиницыСНДС;
									ОбластьСтрокаКон.Параметры.НДСЕдиницы           = НДСЕдиницы;
									ОбластьСтрокаКон.Параметры.НДСПриход            = НДСПриход;
									ОбластьСтрокаКон.Параметры.СуммаПриходСНДС      = СуммаПриход + НДСПриход;
									ОбластьСтрокаКон.Параметры.НДСРасход            = НДСРасход;
								КонецЕсли;
								ТабличныйДокумент.Присоединить(ОбластьСтрокаКон);
								
								Для каждого ВидДеятельностиИМР Из ТаблицаВидовДеятельности Цикл
									ОбластьСтрокаВидДеятельности.Параметры.Заполнить(ВидДеятельностиИМР);
									ТабличныйДокумент.Присоединить(ОбластьСтрокаВидДеятельности);
								КонецЦикла;
								
								ОбластьСтрокаСтоимость.Параметры.СуммаОстаток      = СуммаОстаток;
								ОбластьСтрокаСтоимость.Параметры.КоличествоОстаток = КоличествоОстаток;
								ТабличныйДокумент.Присоединить(ОбластьСтрокаСтоимость);
								
							КонецЕсли;
							
							Регистратор               = Выборка.Регистратор;
							ДокументОплаты            = Выборка.ДокументОплаты;
							Партия                    = Выборка.Партия;
							СтатьяЗатрат              = Выборка.СтатьяЗатрат;
							СтатьяЗатратПредставление = Выборка.СтатьяЗатратПредставление;
							ЕдиницаИзмерения          = Выборка.ЕдиницаИзмерения;
							Корректировка             = Выборка.Корректировка;
							
							ОбластьСтрокаНач.Параметры.Заполнить(Выборка);
							ОбластьСтрокаНач.Параметры.НПП = НПП;
							ОбластьСтрокаНач.Параметры.РеквизитыДокументаОплаты = ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
							ТабличныйДокумент.Вывести(ОбластьСтрокаНач);
							
							Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
								ОбластьСтрокаДоб.Параметры.Заполнить(Выборка);
								ОбластьСтрокаДоб.Параметры.РеквизитыПартии = ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
								ТабличныйДокумент.Присоединить(ОбластьСтрокаДоб);
							КонецЕсли;
							
							СтоимостьЕдиницы     = Выборка.СтоимостьЕдиницы;
							НДСЕдиницы           = Выборка.НДСЕдиницы;
							СтоимостьЕдиницыСНДС = Выборка.СтоимостьЕдиницыСНДС;
							
							КоличествоПриход = Выборка.КоличествоПриход;
							СуммаПриход      = Выборка.СуммаПриход;
							НДСПриход        = Выборка.НДСПриход;
							
							КоличествоРасход = Выборка.КоличествоРасход;
							СуммаРасход      = Выборка.СуммаРасход;
							НДСРасход        = Выборка.НДСРасход;
							
							Для каждого ВидДеятельностиИМР Из ТаблицаВидовДеятельности Цикл
								Если ВидДеятельностиИМР.ВидДеятельности = Выборка.ВидДеятельности Тогда
									ВидДеятельностиИМР.КоличествоРасход = Выборка.КоличествоРасход;
									ВидДеятельностиИМР.СуммаРасход      = Выборка.СуммаРасход;
									ВидДеятельностиИМР.НДСРасход        = Выборка.НДСРасход;
									ВидДеятельностиИМР.СуммаРасходМесяц = ВидДеятельностиИМР.СуммаРасходМесяц + Выборка.СуммаРасход;
									ВидДеятельностиИМР.СуммаРасходГод   = ВидДеятельностиИМР.СуммаРасходГод + Выборка.СуммаРасход;
								Иначе
									ВидДеятельностиИМР.КоличествоРасход = 0;
									ВидДеятельностиИМР.СуммаРасход      = 0;
									ВидДеятельностиИМР.НДСРасход        = 0;
								КонецЕсли;
							КонецЦикла;
							
							ЗаполнитьЗначенияСвойств(ОтборОстатки, Выборка);
							НайденныеСтроки = ТаблицаОстатки.НайтиСтроки(ОтборОстатки);
							Если НайденныеСтроки.Количество() = 0 Тогда
								Остаток = ТаблицаОстатки.Добавить();
								ЗаполнитьЗначенияСвойств(Остаток, Выборка);
								Остаток.СуммаОстаток      = 0;
								Остаток.НДСОстаток        = 0;
								Остаток.КоличествоОстаток = 0;
							Иначе
								Остаток = НайденныеСтроки[0];
							КонецЕсли;
							
							НПП = НПП + 1;
							
						КонецЦикла;
						
						Если Регистратор <> Неопределено Тогда
							
							СуммаОстаток              = Остаток.СуммаОстаток + СуммаПриход - СуммаРасход;
							НДСОстаток                = Остаток.НДСОстаток + НДСПриход - НДСРасход;
							КоличествоОстаток         = Остаток.КоличествоОстаток + КоличествоПриход - КоличествоРасход;
							Остаток.СуммаОстаток      = СуммаОстаток;
							Остаток.НДСОстаток        = НДСОстаток;
							Остаток.КоличествоОстаток = КоличествоОстаток;
							
							Если СтоимостьЕдиницы = 0 Тогда
								Если СуммаРасход <> 0 И КоличествоРасход <> 0 Тогда
									СтоимостьЕдиницы     = Окр(СуммаРасход / КоличествоРасход, 2, 1);
									СтоимостьЕдиницыСНДС = Окр((СуммаРасход + НДСРасход) / КоличествоРасход, 2, 1);
								ИначеЕсли СуммаПриход <> 0 И КоличествоПриход <> 0 Тогда
									СтоимостьЕдиницы     = Окр(СуммаПриход / КоличествоПриход, 2, 1);
									СтоимостьЕдиницыСНДС = Окр((СуммаПриход + НДСПриход) / КоличествоПриход, 2, 1);
								ИначеЕсли СуммаОстаток <> 0 И КоличествоОстаток <> 0 Тогда
									СтоимостьЕдиницы     = Окр(СуммаОстаток / КоличествоОстаток, 2, 1);
									СтоимостьЕдиницыСНДС = Окр((СуммаОстаток + НДСОстаток) / КоличествоОстаток, 2, 1);
								Иначе
									СтоимостьЕдиницы     = 0;
									СтоимостьЕдиницыСНДС = 0;
								КонецЕсли;
								НДСЕдиницы = СтоимостьЕдиницыСНДС - СтоимостьЕдиницы;
							КонецЕсли;
							
							ОбластьСтрокаКон.Параметры.СтатьяЗатрат              = СтатьяЗатрат;
							ОбластьСтрокаКон.Параметры.СтатьяЗатратПредставление = СтатьяЗатратПредставление;
							ОбластьСтрокаКон.Параметры.ЕдиницаИзмерения          = ЕдиницаИзмерения;
							
							ОбластьСтрокаКон.Параметры.СтоимостьЕдиницы     = СтоимостьЕдиницы;
							ОбластьСтрокаКон.Параметры.КоличествоПриход = КоличествоПриход;
							ОбластьСтрокаКон.Параметры.КоличествоРасход = КоличествоРасход;
							ОбластьСтрокаКон.Параметры.СуммаПриход      = СуммаПриход;
							ОбластьСтрокаКон.Параметры.СуммаРасход      = СуммаРасход;
							Если ПараметрыОтчета.ОблагаетсяНДС Тогда
								ОбластьСтрокаКон.Параметры.СтоимостьЕдиницыСНДС = СтоимостьЕдиницыСНДС;
								ОбластьСтрокаКон.Параметры.НДСЕдиницы           = НДСЕдиницы;
								ОбластьСтрокаКон.Параметры.НДСПриход            = НДСПриход;
								ОбластьСтрокаКон.Параметры.СуммаПриходСНДС      = СуммаПриход + НДСПриход;
								ОбластьСтрокаКон.Параметры.НДСРасход            = НДСРасход;
							КонецЕсли;
							ТабличныйДокумент.Присоединить(ОбластьСтрокаКон);
							
							Для каждого ВидДеятельностиИМР Из ТаблицаВидовДеятельности Цикл
								ОбластьСтрокаВидДеятельности.Параметры.Заполнить(ВидДеятельностиИМР);
								ТабличныйДокумент.Присоединить(ОбластьСтрокаВидДеятельности);
							КонецЦикла;
							
							ОбластьСтрокаСтоимость.Параметры.СуммаОстаток      = СуммаОстаток;
							ОбластьСтрокаСтоимость.Параметры.КоличествоОстаток = КоличествоОстаток;
							ТабличныйДокумент.Присоединить(ОбластьСтрокаСтоимость);
							
						КонецЕсли;
						
						// Итоги за месяц
						ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
						ПоследняяСтрока.ВместеСоСледующим = Истина;
						
						ОбластьМесяцНач.Параметры.НазваниеИтогов = "Итого за " + НРег(Формат(ВыборкаМесяц.Месяц, "ДФ='ММMM гггг'")) + " г.";
						ТабличныйДокумент.Вывести(ОбластьМесяцНач);
						
						Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
							ТабличныйДокумент.Присоединить(ОбластьМесяцДоб);
						КонецЕсли;
						
						ОбластьМесяцКон.Параметры.Заполнить(ВыборкаМесяц);
						ТабличныйДокумент.Присоединить(ОбластьМесяцКон);
						
						Для каждого ВидДеятельностиИМР Из ТаблицаВидовДеятельности Цикл
							ОбластьМесяцВидДеятельности.Параметры.Заполнить(ВидДеятельностиИМР);
							ТабличныйДокумент.Присоединить(ОбластьМесяцВидДеятельности);
						КонецЦикла;
						
						ОбластьМесяцСтоимость.Параметры.СуммаОстаток = СуммаКонечныйОстаток;
						ТабличныйДокумент.Присоединить(ОбластьМесяцСтоимость);
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
				ОбластьГодНач              = Макет.ПолучитьОбласть("Год|ОсновнаяНач");
				ОбластьГодДоб              = Макет.ПолучитьОбласть("Год|Добавочная");
				ОбластьГодКон              = Макет.ПолучитьОбласть("Год|ОсновнаяКон");
				ОбластьГодВидДеятельности  = Макет.ПолучитьОбласть("Год|ВидДеятельности");
				ОбластьГодСтоимость        = Макет.ПолучитьОбласть("Год|Стоимость");
				
				ТабличныйДокумент.Вывести(ОбластьГодНач);
				Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
					ТабличныйДокумент.Присоединить(ОбластьГодДоб);
				КонецЕсли;
				
				ОбластьГодКон.Параметры.Заполнить(ВыборкаОбщие);
				ТабличныйДокумент.Присоединить(ОбластьГодКон);
				
				Для каждого ВидДеятельностиИМР Из ТаблицаВидовДеятельности Цикл
					ОбластьГодВидДеятельности.Параметры.Заполнить(ВидДеятельностиИМР);
					ТабличныйДокумент.Присоединить(ОбластьГодВидДеятельности);
				КонецЦикла;
				
				ОбластьГодСтоимость.Параметры.СуммаОстаток = СуммаКонечныйОстаток;
				ТабличныйДокумент.Присоединить(ОбластьГодСтоимость);
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, , ТабличныйДокумент.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
		ОбластьПримечание = Макет.ПолучитьОбласть("Примечание");
		ТабличныйДокумент.Вывести(ОбластьПримечание);
	КонецЕсли;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 9, 8);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ВысотаШапки, , ВысотаШапки,);
	ТабличныйДокумент.ОбластьПечати            = ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьТаблицу15(ПараметрыОтчета, КодТаблицы)
	
	Перем ТаблицаПолуфабрикатов;
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	Обороты = ПараметрыОтчета.Обороты;
	
	ПолуфабрикатыВОборотах = ПараметрыОтчета.ПолуфабрикатыВОборотах;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ОписаниеПериода = ОписаниеПериода(ПараметрыОтчета);
	ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	Если НЕ ПолуфабрикатыВОборотах.Пустой() Тогда
		ТаблицаПолуфабрикатов = ПолуфабрикатыВОборотах.Выгрузить();
	Иначе
		
		ТаблицаПолуфабрикатов = Новый ТаблицаЗначений;
		ТаблицаПолуфабрикатов.Колонки.Добавить("ВидПолуфабриката");
		ТаблицаПолуфабрикатов.Колонки.Добавить("Полуфабрикат");
		Если НЕ Обороты.Пустой() Тогда
			ТаблицаПолуфабрикатов.Добавить();
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаПолуфабрикатов.Колонки.Добавить("Количество",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ТаблицаПолуфабрикатов.Колонки.Добавить("КоличествоДень",  ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ТаблицаПолуфабрикатов.Колонки.Добавить("КоличествоМесяц", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	ТаблицаПолуфабрикатов.Колонки.Добавить("Сумма",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПолуфабрикатов.Колонки.Добавить("СуммаДень",  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПолуфабрикатов.Колонки.Добавить("СуммаМесяц", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	КоличествоПолуфабрикатов = ТаблицаПолуфабрикатов.Количество();
	
	ТаблицаПолуфабрикатов.Индексы.Добавить("ВидПолуфабриката, Полуфабрикат");
	ОтборПолуфабрикатов = Новый Структура("ВидПолуфабриката, Полуфабрикат");
	
	ПартииПолуфабрикатов = Новый ТаблицаЗначений;
	ПартииПолуфабрикатов.Колонки.Добавить("ВидПолуфабриката",    Новый ОписаниеТипов("ПеречислениеСсылка.ВидыМПЗ"));
	ПартииПолуфабрикатов.Колонки.Добавить("Полуфабрикат",        Справочники.ТипВсеСсылки());
	ПартииПолуфабрикатов.Колонки.Добавить("ПартияПолуфабриката", Документы.ТипВсеСсылки());
	ПартииПолуфабрикатов.Колонки.Добавить("Количество",          ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ПартииПолуфабрикатов.Колонки.Добавить("Сумма",               ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	ПартииПолуфабрикатов.Индексы.Добавить("ВидПолуфабриката, Полуфабрикат");
	ОтборПартий	= Новый Структура("ВидПолуфабриката, Полуфабрикат");
	
	// Печать шапки
	ОбластьШапкаОбщее        = Макет.ПолучитьОбласть("Шапка|Общее");
	ОбластьШапкаПолуфабрикат = Макет.ПолучитьОбласть("Шапка|Полуфабрикат");
	ОбластьШапкаСтоимость    = Макет.ПолучитьОбласть("Шапка|СтоимостьПродукции");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаОбщее);
	Для каждого Полуфабрикат Из ТаблицаПолуфабрикатов Цикл
		ОбластьШапкаПолуфабрикат.Параметры.Заполнить(Полуфабрикат);
		ТабличныйДокумент.Присоединить(ОбластьШапкаПолуфабрикат);
	КонецЦикла;
	ОбластьШапкаСтоимость.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы + ?(ПараметрыОтчета.ОблагаетсяНДС, "А", "Б") + "*";
	ТабличныйДокумент.Присоединить(ОбластьШапкаСтоимость);
	
	// Печать таблицы
	
	ОбластьНовыйДеньОбщее        = Макет.ПолучитьОбласть("НовыйДень|Общее");
	ОбластьНовыйДеньПолуфабрикат = Макет.ПолучитьОбласть("НовыйДень|Полуфабрикат");
	ОбластьНовыйДеньСтоимость    = Макет.ПолучитьОбласть("НовыйДень|СтоимостьПродукции");
	
	ОбластьЦенаОбщее        = Макет.ПолучитьОбласть("Цена|Общее");
	ОбластьЦенаПолуфабрикат = Макет.ПолучитьОбласть("Цена|Полуфабрикат");
	ОбластьЦенаСтоимость    = Макет.ПолучитьОбласть("Цена|СтоимостьПродукции");
	
	ОбластьШапка_2Общее        = Макет.ПолучитьОбласть("Шапка_2|Общее");
	ОбластьШапка_2Полуфабрикат = Макет.ПолучитьОбласть("Шапка_2|Полуфабрикат");
	ОбластьШапка_2Стоимость    = Макет.ПолучитьОбласть("Шапка_2|СтоимостьПродукции");
	
	ОбластьПродукцияОбщее        = Макет.ПолучитьОбласть("Продукция|Общее");
	ОбластьПродукцияПолуфабрикат = Макет.ПолучитьОбласть("Продукция|Полуфабрикат");
	ОбластьПродукцияСтоимость    = Макет.ПолучитьОбласть("Продукция|СтоимостьПродукции");
	
	ОбластьДеньОбщее        = Макет.ПолучитьОбласть("День|Общее");
	ОбластьДеньПолуфабрикат = Макет.ПолучитьОбласть("День|Полуфабрикат");
	ОбластьДеньСтоимость    = Макет.ПолучитьОбласть("День|СтоимостьПродукции");
	
	ОбластьМесяцОбщее        = Макет.ПолучитьОбласть("Месяц|Общее");
	ОбластьМесяцПолуфабрикат = Макет.ПолучитьОбласть("Месяц|Полуфабрикат");
	ОбластьМесяцСтоимость    = Макет.ПолучитьОбласть("Месяц|СтоимостьПродукции");
	
	ТаблицаЦен	= Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ТаблицаЦен.Колонки.Добавить("Цена",       ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	ВыборкаМесяц = Обороты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
	Пока ВыборкаМесяц.Следующий() Цикл
		
		ТаблицаПолуфабрикатов.ЗаполнитьЗначения(0, "КоличествоМесяц, СуммаМесяц"); // Очистка итоговых полей
	
		ВыборкаДень = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "День");
		Пока ВыборкаДень.Следующий() Цикл
			
			ТаблицаПолуфабрикатов.ЗаполнитьЗначения(0, "КоличествоДень, СуммаДень"); // Очистка итоговых полей
			
			ПартииПолуфабрикатов.Очистить();
			
			ВыборкаВидПолуфабриката = ВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПолуфабриката");
			Пока ВыборкаВидПолуфабриката.Следующий() Цикл
				ВыборкаПолуфабрикат = ВыборкаВидПолуфабриката.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Полуфабрикат");
				Пока ВыборкаПолуфабрикат.Следующий() Цикл
					ВыборкаПартияПолуфабриката = ВыборкаПолуфабрикат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПартияПолуфабриката");
					Пока ВыборкаПартияПолуфабриката.Следующий() Цикл
						ПартияПолуфабриката = ПартииПолуфабрикатов.Добавить();
						ЗаполнитьЗначенияСвойств(ПартияПолуфабриката, ВыборкаПартияПолуфабриката);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
			// Раздел 1
			НПП = 1;
			
			ТабличныйДокумент.Вывести(ОбластьНовыйДеньОбщее);
			Для н = 1 По КоличествоПолуфабрикатов Цикл
				ТабличныйДокумент.Присоединить(ОбластьНовыйДеньПолуфабрикат);
			КонецЦикла;
			ТабличныйДокумент.Присоединить(ОбластьНовыйДеньСтоимость);
			
			ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			ВыборкаВидПолуфабриката = ВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПолуфабриката");
			Пока ВыборкаВидПолуфабриката.Следующий() Цикл
				
				ВидЦены = "Цены с налогами из ";
				Если ВыборкаВидПолуфабриката.ВидПолуфабриката = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
					ВидЦены = ВидЦены + "гр.6 таб.№ 1-2 (руб.)";
				ИначеЕсли ВыборкаВидПолуфабриката.ВидПолуфабриката = Перечисления.ВидыМПЗ.ВспомогательныеМатериалы Тогда
					ВидЦены = ВидЦены + "гр.8 таб.№ 1-3 (руб.)";
				ИначеЕсли ВыборкаВидПолуфабриката.ВидПолуфабриката = Перечисления.ВидыМПЗ.Продукция Тогда
					ВидЦены = ВидЦены + "гр.6 таб.№ 1-6 (руб.)";
				Иначе
					ВидЦены = ВидЦены + "гр.8 таб.№ 1-1 (руб.)";
				КонецЕсли;
				
				ОбластьЦенаОбщее.Параметры.Ном = "1." + НПП;
				ОбластьЦенаОбщее.Параметры.ВидЦены = ВидЦены;
				ТабличныйДокумент.Вывести(ОбластьЦенаОбщее);
				
				Для каждого Полуфабрикат Из ТаблицаПолуфабрикатов Цикл
					
					СтоимостьЕдиницы  = "";
					РасшифровкаПартий = Неопределено;
					
					Если Полуфабрикат.ВидПолуфабриката = ВыборкаВидПолуфабриката.ВидПолуфабриката Тогда
						// Цена полуфабриката отображается в текуще строке
						
						ЗаполнитьЗначенияСвойств(ОтборПартий, Полуфабрикат);
						НайденныеСтроки	= ПартииПолуфабрикатов.НайтиСтроки(ОтборПартий);
						
						Если НайденныеСтроки.Количество() = 1 Тогда
							// Полуфабрикат списан из одной партии
							ПартияПолуфабриката	= НайденныеСтроки[0];
							
							СтоимостьЕдиницы	= Формат(?(ПартияПолуфабриката.Количество = 0, ПартияПолуфабриката.Сумма, ПартияПолуфабриката.Сумма / ПартияПолуфабриката.Количество), "ЧЦ=15; ЧДЦ=2");
							
							РасшифровкаПартий	= ПартияПолуфабриката.ПартияПолуфабриката;
							
						ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
							// Полуфабрикат списан из нескольких партий
							
							ТаблицаЦен.Очистить();
							
							РасшифровкаПартий = Новый СписокЗначений;
							Для каждого ПартияПолуфабриката Из НайденныеСтроки Цикл
								СтрокаЦен = ТаблицаЦен.Добавить();
								СтрокаЦен.Количество = ПартияПолуфабриката.Количество;
								СтрокаЦен.Цена       = ?(ПартияПолуфабриката.Количество = 0, ПартияПолуфабриката.Сумма, ПартияПолуфабриката.Сумма / ПартияПолуфабриката.Количество);
								
								РасшифровкаПартий.Добавить(ПартияПолуфабриката.ПартияПолуфабриката);
							КонецЦикла;
							
							ТаблицаЦен.Свернуть("Цена", "Количество");
							Для каждого СтрокаЦен Из ТаблицаЦен Цикл
								СтоимостьЕдиницы = СтоимостьЕдиницы + ?(ПустаяСтрока(СтоимостьЕдиницы), "", "; ") + Формат(СтрокаЦен.Цена, "ЧЦ=15; ЧДЦ=2");
							КонецЦикла;
							
						КонецЕсли;
							
					КонецЕсли;
					
					ОбластьЦенаПолуфабрикат.Параметры.СтоимостьЕдиницы  = СтоимостьЕдиницы;
					ОбластьЦенаПолуфабрикат.Параметры.РасшифровкаПартий = РасшифровкаПартий;
					
					ТабличныйДокумент.Присоединить(ОбластьЦенаПолуфабрикат);
				КонецЦикла;
				
				ТабличныйДокумент.Присоединить(ОбластьЦенаСтоимость);
				
				НПП = НПП + 1;
				
			КонецЦикла;
			
			// Раздел 2
			НПП = 1;
			
			ТабличныйДокумент.Вывести(ОбластьШапка_2Общее);
			Для н = 1 По КоличествоПолуфабрикатов Цикл
				ТабличныйДокумент.Присоединить(ОбластьШапка_2Полуфабрикат);
			КонецЦикла;
			ТабличныйДокумент.Присоединить(ОбластьШапка_2Стоимость);
			
			ВыборкаНоменклатура = ВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				ТаблицаПолуфабрикатов.ЗаполнитьЗначения(0, "Количество, Сумма"); // Очистка итоговых полей
				
				ДатаПартии = "";
				
				РасшифровкаПартий = Неопределено;
				
				ВыборкаПартия = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Партия");
				Если ВыборкаПартия.Количество() = 1 И ВыборкаПартия.Следующий() Тогда
					РасшифровкаПартий = ВыборкаПартия.Партия;
					Датапартии = ДатаПартии + ?(ПустаяСтрока(ДатаПартии), "", "; ") + Формат(ВыборкаПартия.ДатаПартии, "ДЛФ=D");
				ИначеЕсли ВыборкаПартия.Количество() > 1 Тогда
					РасшифровкаПартий = Новый СписокЗначений;
					Пока ВыборкаПартия.Следующий() Цикл
						Датапартии = ДатаПартии + ?(ПустаяСтрока(ДатаПартии), "", "; ") + Формат(ВыборкаПартия.ДатаПартии, "ДЛФ=D");
						РасшифровкаПартий.Добавить(ВыборкаПартия.Партия);
					КонецЦикла;
				КонецЕсли;
				
				ОбластьПродукцияОбщее.Параметры.Заполнить(ВыборкаНоменклатура);
				ОбластьПродукцияОбщее.Параметры.Ном	= "2." + НПП;
				ОбластьПродукцияОбщее.Параметры.ДатаПартии        = ДатаПартии;
				ОбластьПродукцияОбщее.Параметры.РасшифровкаПартий = РасшифровкаПартий;
				ТабличныйДокумент.Вывести(ОбластьПродукцияОбщее);
				
				ВыборкаВидПолуфабриката = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПолуфабриката");
				Пока ВыборкаВидПолуфабриката.Следующий() Цикл
				
					ВыборкаПолуфабрикат = ВыборкаВидПолуфабриката.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Полуфабрикат");
					Пока ВыборкаПолуфабрикат.Следующий() Цикл
						
						ЗаполнитьЗначенияСвойств(ОтборПолуфабрикатов, ВыборкаПолуфабрикат);
						НайденныеСтроки = ТаблицаПолуфабрикатов.НайтиСтроки(ОтборПолуфабрикатов);
						Если НайденныеСтроки.Количество() = 0 Тогда
							Продолжить;
						КонецЕсли;
						
						Полуфабрикат = НайденныеСтроки[0];
						Полуфабрикат.Количество      = ВыборкаПолуфабрикат.Количество;
						Полуфабрикат.Сумма           = ВыборкаПолуфабрикат.Сумма;
						Полуфабрикат.КоличествоДень  = Полуфабрикат.КоличествоДень + ВыборкаПолуфабрикат.Количество;
						Полуфабрикат.СуммаДень       = Полуфабрикат.СуммаДень + ВыборкаПолуфабрикат.Сумма;
						Полуфабрикат.КоличествоМесяц = Полуфабрикат.КоличествоМесяц + ВыборкаПолуфабрикат.Количество;
						Полуфабрикат.СуммаМесяц      = Полуфабрикат.СуммаМесяц + ВыборкаПолуфабрикат.Сумма;
						
					КонецЦикла;
					
				КонецЦикла;
				
				Для каждого Полуфабрикат Из ТаблицаПолуфабрикатов Цикл
					ОбластьПродукцияПолуфабрикат.Параметры.Заполнить(Полуфабрикат);
					ТабличныйДокумент.Присоединить(ОбластьПродукцияПолуфабрикат);
				КонецЦикла;
				
				ОбластьПродукцияСтоимость.Параметры.Заполнить(ВыборкаНоменклатура);
				ТабличныйДокумент.Присоединить(ОбластьПродукцияСтоимость);
				
				НПП = НПП + 1;
				
			КонецЦикла;
			
			// Раздел 3, 4
			ОбластьДеньОбщее.Параметры.ТекстЗаДень = "Общее количество израсходованного сырья за " + Формат(ВыборкаДень.День, "ДФ=dd.MM.yyyy");
			ТабличныйДокумент.Вывести(ОбластьДеньОбщее);
			Для каждого Полуфабрикат Из ТаблицаПолуфабрикатов Цикл
				ОбластьДеньПолуфабрикат.Параметры.Заполнить(Полуфабрикат);
				ТабличныйДокумент.Присоединить(ОбластьДеньПолуфабрикат);
			КонецЦикла;
			ОбластьДеньСтоимость.Параметры.Заполнить(ВыборкаДень);
			ТабличныйДокумент.Присоединить(ОбластьДеньСтоимость);
			
		КонецЦикла;
		
		// Раздел 5, 6
		ОбластьМесяцОбщее.Параметры.ТекстЗаМесяц = "Итого за " +  Формат(ВыборкаМесяц.Месяц, "ДФ='MMMM yyyy'");
		ТабличныйДокумент.Вывести(ОбластьМесяцОбщее);
		Для каждого Полуфабрикат Из ТаблицаПолуфабрикатов Цикл
			ОбластьМесяцПолуфабрикат.Параметры.Заполнить(Полуфабрикат);
			ТабличныйДокумент.Присоединить(ОбластьМесяцПолуфабрикат);
		КонецЦикла;
		ОбластьМесяцСтоимость.Параметры.Заполнить(ВыборкаМесяц);
		ТабличныйДокумент.Присоединить(ОбластьМесяцСтоимость);
		
	КонецЦикла;
	
	ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
		ОбластьПримечание = Макет.ПолучитьОбласть("Примечание");
		
		ОбластьПримечание.Параметры.Примечание =
			"* "+ Таблица.ЗаголовокТаблицы + ?(ПараметрыОтчета.ОблагаетсяНДС, "А", "Б")
				+ " используется индивидуальным предпринимателем, осуществляющим  деятельность по операциям, "
				+ ?(ПараметрыОтчета.ОблагаетсяНДС, "", "не ") + "облагаемым НДС.";
			
		ТабличныйДокумент.Вывести(ОбластьПримечание);
	КонецЕсли;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 6, 5);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ВысотаШапки,, ВысотаШапки + 1,);
	ТабличныйДокумент.ОбластьПечати = ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьТаблицу16_17(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Если КодТаблицы = 16 Тогда
		ДоходыИРасходы = ПараметрыОтчета.ДоходыИРасходы;
	ИначеЕсли КодТаблицы = 17 Тогда
		ДоходыИРасходы = ПараметрыОтчета.ДоходыИРасходыСводно;
	Иначе
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Если ПараметрыОтчета.ВыводитьНачОстатки Тогда
		НачОстаткиМПЗ = ПараметрыОтчета.НачОстаткиМПЗ;
		НачОстаткиМПЗОтгруженные = ПараметрыОтчета.НачОстаткиМПЗОтгруженные;
	КонецЕсли;
	
	Если ПараметрыОтчета.ВыводитьКонОстатки Тогда
		КонОстаткиМПЗ = ПараметрыОтчета.КонОстаткиМПЗ;
		КонОстаткиМПЗОтгруженные = ПараметрыОтчета.КонОстаткиМПЗОтгруженные;
	КонецЕсли;
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ОписаниеПериода = ОписаниеПериода(ПараметрыОтчета);
	ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	// Печать шапки
	ОбластьШапкаНач = Макет.ПолучитьОбласть("Шапка|ОсновнаяНач");
	ОбластьШапкаДоб = Макет.ПолучитьОбласть("Шапка|Добавочная");
	ОбластьШапкаКон = Макет.ПолучитьОбласть("Шапка|ОсновнаяКон");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаНач);
	Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
		ТабличныйДокумент.Присоединить(ОбластьШапкаДоб);
	КонецЕсли;
	ОбластьШапкаКон.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы + ?(ПараметрыОтчета.ОблагаетсяНДС, "А", "Б") + "*";
	ТабличныйДокумент.Присоединить(ОбластьШапкаКон);
	
	// Печать начальных остатков МПЗ
	Если НЕ НачОстаткиМПЗ = Неопределено И НЕ НачОстаткиМПЗ.Пустой() Тогда
		
		ОбластьОстатокНач = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
		ОбластьОстатокДоб = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
		ОбластьОстатокКон = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
		
		Выборка = НачОстаткиМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбластьОстатокНач.Параметры.Заполнить(Выборка);
			ОбластьОстатокНач.Параметры.РеквизитыДокументаОплаты = 
				ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
			ТабличныйДокумент.Вывести(ОбластьОстатокНач);
			
			Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
				ОбластьОстатокДоб.Параметры.Заполнить(Выборка);
				ОбластьОстатокДоб.Параметры.РеквизитыПартии = 
					ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
				ТабличныйДокумент.Присоединить(ОбластьОстатокДоб);
			КонецЕсли;
			
			ОбластьОстатокКон.Параметры.Заполнить(Выборка);
			Если Выборка.КоличествоОстаток <> 0 Тогда
				СтоимостьЕдиницы     = Окр(Выборка.СуммаОстаток / Выборка.КоличествоОстаток, 2, 1);
			Иначе
				СтоимостьЕдиницы     = Выборка.СуммаОстаток;
			КонецЕсли;
			ОбластьОстатокКон.Параметры.СтоимостьЕдиницы = СтоимостьЕдиницы;
			ТабличныйДокумент.Присоединить(ОбластьОстатокКон);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ НачОстаткиМПЗОтгруженные = Неопределено И НЕ НачОстаткиМПЗОтгруженные.Пустой() Тогда
		
		ОбластьОстатокНач = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
		ОбластьОстатокДоб = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
		ОбластьОстатокКон = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
		
		Выборка = НачОстаткиМПЗОтгруженные.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбластьОстатокНач.Параметры.Заполнить(Выборка);
			ОбластьОстатокНач.Параметры.РеквизитыДокументаОплаты = 
				ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
			ТабличныйДокумент.Вывести(ОбластьОстатокНач);
			
			Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
				ОбластьОстатокДоб.Параметры.Заполнить(Выборка);
				ОбластьОстатокДоб.Параметры.РеквизитыПартии = 
					ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
				ОбластьОстатокДоб.Параметры.РеквизитыДокументаОтгрузки = 
					ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОтгрузки, Выборка.ДатаДокументаОтгрузки);
				ТабличныйДокумент.Присоединить(ОбластьОстатокДоб);
			КонецЕсли;
			
			ОбластьОстатокКон.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Присоединить(ОбластьОстатокКон);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Печать оборотов
	Если НЕ ДоходыИРасходы.Пустой() Тогда
		
		ОбластьСтрокаНач = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
		ОбластьСтрокаДоб = Макет.ПолучитьОбласть("Строка|Добавочная");
		ОбластьСтрокаКон = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
		
		ОбластьТоварНач = Макет.ПолучитьОбласть("Товар|ОсновнаяНач");
		ОбластьТоварДоб = Макет.ПолучитьОбласть("Товар|Добавочная");
		ОбластьТоварКон = Макет.ПолучитьОбласть("Товар|ОсновнаяКон");
		
		ОбластьИМРНач = Макет.ПолучитьОбласть("ИМР|ОсновнаяНач");
		ОбластьИМРДоб = Макет.ПолучитьОбласть("ИМР|Добавочная");
		ОбластьИМРКон = Макет.ПолучитьОбласть("ИМР|ОсновнаяКон");
		
		ОбластьМесяцНач = Макет.ПолучитьОбласть("Месяц|ОсновнаяНач");
		ОбластьМесяцДоб = Макет.ПолучитьОбласть("Месяц|Добавочная");
		ОбластьМесяцКон = Макет.ПолучитьОбласть("Месяц|ОсновнаяКон");
		
		ОбластьГодНач = Макет.ПолучитьОбласть("Год|ОсновнаяНач");
		ОбластьГодДоб = Макет.ПолучитьОбласть("Год|Добавочная");
		ОбластьГодКон = Макет.ПолучитьОбласть("Год|ОсновнаяКон");
		
		НПП = 1;
	
		ВыборкаОбщие = ДоходыИРасходы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если ВыборкаОбщие.Следующий() Тогда
		
			ВыборкаПериодОтчета = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПериодОтчета");
			Если ВыборкаПериодОтчета.НайтиСледующий(1, "ПериодОтчета") Тогда
		
				ВыборкаМесяц = ВыборкаПериодОтчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
				Пока ВыборкаМесяц.Следующий() Цикл
					
					Если Таблица.КодТаблицы = 16 Тогда
						
						ВыборкаРегистратор = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Регистратор");
						Пока ВыборкаРегистратор.Следующий() Цикл
							
							ВыборкаКорректировка = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Корректировка");
							Пока ВыборкаКорректировка.Следующий() Цикл
								
								Выборка = ВыборкаКорректировка.Выбрать();
								Пока Выборка.Следующий() Цикл
									
									СтоимостьЕдиницы = Выборка.СтоимостьЕдиницы;
									Если СтоимостьЕдиницы = 0 Тогда
										Если Выборка.КоличествоПродукции <> 0 Тогда
											СтоимостьЕдиницы = Окр(Выборка.СтоимостьПродукции / Выборка.КоличествоПродукции, 2, 1);
										ИначеЕсли Выборка.Количество <> 0 Тогда
											СтоимостьЕдиницы = Окр(Выборка.Сумма / Выборка.Количество, 2, 1);
										Иначе
											СтоимостьЕдиницы = 0;
										КонецЕсли;
									КонецЕсли;
									
									ЦенаЕдиницы          = Выборка.ЦенаЕдиницы;
									НДСНачисленныйЕдиницы = Выборка.НДСНачисленныйЕдиницы;
									ЦенаЕдиницыСНДС       = Выборка.ЦенаЕдиницыСНДС;
									Если ЦенаЕдиницы = 0 Тогда
										Если Выборка.КоличествоРеализовано <> 0 Тогда
											ЦенаЕдиницы     = Окр(Выборка.ВыручкаБезНДС / Выборка.КоличествоРеализовано, 2, 1);
											ЦенаЕдиницыСНДС = Окр(Выборка.Выручка / Выборка.КоличествоРеализовано, 2, 1);
										Иначе
											ЦенаЕдиницы     = 0;
											ЦенаЕдиницыСНДС = 0;
										КонецЕсли;
										НДСНачисленныйЕдиницы = ЦенаЕдиницыСНДС - ЦенаЕдиницы;
									КонецЕсли;
									
									ОбластьСтрокаНач.Параметры.Заполнить(Выборка);
									ОбластьСтрокаНач.Параметры.НПП = НПП;
									ОбластьСтрокаНач.Параметры.РеквизитыДокументаОплаты = 
										ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
									ТабличныйДокумент.Вывести(ОбластьСтрокаНач);
									
									Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
										ОбластьСтрокаДоб.Параметры.Заполнить(Выборка);
										ОбластьСтрокаДоб.Параметры.РеквизитыПартии = 
											ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
										ОбластьСтрокаДоб.Параметры.РеквизитыДокументаОтгрузки = 
											ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОтгрузки, Выборка.ДатаДокументаОтгрузки);
										ТабличныйДокумент.Присоединить(ОбластьСтрокаДоб);
									КонецЕсли;
									
									ОбластьСтрокаКон.Параметры.Заполнить(Выборка);
									
									ОбластьСтрокаКон.Параметры.СтоимостьЕдиницы = СтоимостьЕдиницы;
									ОбластьСтрокаКон.Параметры.ЦенаЕдиницы      = ЦенаЕдиницы;
									Если ПараметрыОтчета.ОблагаетсяНДС Тогда
										ОбластьСтрокаКон.Параметры.ЦенаЕдиницыСНДС      = ЦенаЕдиницыСНДС;
										ОбластьСтрокаКон.Параметры.НДСНачисленныйЕдиницы= НДСНачисленныйЕдиницы;
									КонецЕсли;
									ТабличныйДокумент.Присоединить(ОбластьСтрокаКон);
									
									НПП = НПП + 1;
									
								КонецЦикла;
								
							КонецЦикла;
							
						КонецЦикла;
						
					Иначе
						
						ВыборкаИМР = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоИМР");
						Пока ВыборкаИМР.Следующий() Цикл
							
							Если ВыборкаИМР.ЭтоИМР Тогда
								ТабличныйДокумент.Вывести(ОбластьИМРНач);
								Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
									ТабличныйДокумент.Присоединить(ОбластьИМРДоб);
								КонецЕсли;
								ТабличныйДокумент.Присоединить(ОбластьИМРКон);
							КонецЕсли;
							
							ВыборкаНоменклатура = ВыборкаИМР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
							Пока ВыборкаНоменклатура.Следующий() Цикл
								
								ВыборкаРегистратор = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Регистратор");
								Пока ВыборкаРегистратор.Следующий() Цикл
									
									ВыборкаКорректировка = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Корректировка");
									Пока ВыборкаКорректировка.Следующий() Цикл
										
										Выборка = ВыборкаКорректировка.Выбрать();
										Пока Выборка.Следующий() Цикл
											
											СтоимостьЕдиницы = Выборка.СтоимостьЕдиницы;
											Если СтоимостьЕдиницы = 0 Тогда
												Если Выборка.КоличествоПродукции <> 0 Тогда
													СтоимостьЕдиницы = Окр(Выборка.СтоимостьПродукции / Выборка.КоличествоПродукции, 2, 1);
												ИначеЕсли Выборка.Количество <> 0 Тогда
													СтоимостьЕдиницы = Окр(Выборка.Сумма / Выборка.Количество, 2, 1);
												Иначе
													СтоимостьЕдиницы = 0;
												КонецЕсли;
											КонецЕсли;
											
											ЦенаЕдиницы          = Выборка.ЦенаЕдиницы;
											НДСНачисленныйЕдиницы = Выборка.НДСНачисленныйЕдиницы;
											ЦенаЕдиницыСНДС       = Выборка.ЦенаЕдиницыСНДС;
											Если ЦенаЕдиницы = 0 Тогда
												Если Выборка.КоличествоРеализовано <> 0 Тогда
													ЦенаЕдиницы     = Окр(Выборка.ВыручкаБезНДС / Выборка.КоличествоРеализовано, 2, 1);
													ЦенаЕдиницыСНДС = Окр(Выборка.Выручка / Выборка.КоличествоРеализовано, 2, 1);
												Иначе
													ЦенаЕдиницы     = 0;
													ЦенаЕдиницыСНДС = 0;
												КонецЕсли;
												НДСНачисленныйЕдиницы = ЦенаЕдиницыСНДС - ЦенаЕдиницы;
											КонецЕсли;
											
											ОбластьСтрокаНач.Параметры.Заполнить(Выборка);
											ОбластьСтрокаНач.Параметры.НПП = НПП;
											ОбластьСтрокаНач.Параметры.РеквизитыДокументаОплаты = 
												ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
											ТабличныйДокумент.Вывести(ОбластьСтрокаНач);
											
											Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
												ОбластьСтрокаДоб.Параметры.Заполнить(Выборка);
												ОбластьСтрокаДоб.Параметры.РеквизитыПартии = 
													ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
												ОбластьСтрокаДоб.Параметры.РеквизитыДокументаОтгрузки = 
													ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОтгрузки, Выборка.ДатаДокументаОтгрузки);
												ТабличныйДокумент.Присоединить(ОбластьСтрокаДоб);
											КонецЕсли;
											
											ОбластьСтрокаКон.Параметры.Заполнить(Выборка);
											
											ОбластьСтрокаКон.Параметры.СтоимостьЕдиницы = СтоимостьЕдиницы;
											ОбластьСтрокаКон.Параметры.ЦенаЕдиницы      = ЦенаЕдиницы;
											Если ПараметрыОтчета.ОблагаетсяНДС Тогда
												ОбластьСтрокаКон.Параметры.ЦенаЕдиницыСНДС      = ЦенаЕдиницыСНДС;
												ОбластьСтрокаКон.Параметры.НДСНачисленныйЕдиницы= НДСНачисленныйЕдиницы;
											КонецЕсли;
											ТабличныйДокумент.Присоединить(ОбластьСтрокаКон);
											
											НПП = НПП + 1;
											
										КонецЦикла;
									
									КонецЦикла;
									
								КонецЦикла;
								
								Если НЕ ВыборкаИМР.ЭтоИМР Тогда
									ТабличныйДокумент.Вывести(ОбластьТоварНач);
									Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
										ТабличныйДокумент.Присоединить(ОбластьТоварДоб);
									КонецЕсли;
									ОбластьТоварКон.Параметры.Заполнить(ВыборкаНоменклатура);
									ТабличныйДокумент.Присоединить(ОбластьТоварКон);
								КонецЕсли;
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЕсли;
					
					// Итоги за месяц
					ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
					ПоследняяСтрока.ВместеСоСледующим = Истина;
					
					ОбластьМесяцНач.Параметры.НазваниеИтогов = "Итого за " + НРег(Формат(ВыборкаМесяц.Месяц, "ДФ='ММMM гггг'")) + " г.";
					ТабличныйДокумент.Вывести(ОбластьМесяцНач);
					Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
						ТабличныйДокумент.Присоединить(ОбластьМесяцДоб);
					КонецЕсли;
					ОбластьМесяцКон.Параметры.Заполнить(ВыборкаМесяц);
					ТабличныйДокумент.Присоединить(ОбластьМесяцКон);
					
				КонецЦикла;
				
			КонецЕсли;
			
			ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, , ТабличныйДокумент.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
				ТабличныйДокумент.Вывести(ОбластьГодНач);
				Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
					ТабличныйДокумент.Присоединить(ОбластьГодДоб);
				КонецЕсли;
				
				ОбластьГодКон.Параметры.Заполнить(ВыборкаОбщие);
				ТабличныйДокумент.Присоединить(ОбластьГодКон);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Печать конечных остатков МПЗ
	Если НЕ КонОстаткиМПЗ = Неопределено И НЕ КонОстаткиМПЗ.Пустой() Тогда
		
		ОбластьКонОстНач = Макет.ПолучитьОбласть("КонОст|ОсновнаяНач");
		ОбластьКонОстДоб = Макет.ПолучитьОбласть("КонОст|Добавочная");
		ОбластьКонОстКон = Макет.ПолучитьОбласть("КонОст|ОсновнаяКон");
		
		ОбластьОстатокНач = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
		ОбластьОстатокДоб = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
		ОбластьОстатокКон = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
		
		ТабличныйДокумент.Вывести(ОбластьКонОстНач);
		Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
			ТабличныйДокумент.Присоединить(ОбластьКонОстДоб);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьКонОстКон);
		
		Выборка = КонОстаткиМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбластьОстатокНач.Параметры.Заполнить(Выборка);
			ОбластьОстатокНач.Параметры.РеквизитыДокументаОплаты = 
				ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
			ТабличныйДокумент.Вывести(ОбластьОстатокНач);
			
			Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
				ОбластьОстатокДоб.Параметры.Заполнить(Выборка);
				ОбластьОстатокДоб.Параметры.РеквизитыПартии = 
					ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
				ТабличныйДокумент.Присоединить(ОбластьОстатокДоб);
			КонецЕсли;
			
			ОбластьОстатокКон.Параметры.Заполнить(Выборка);
			Если Выборка.КоличествоОстаток <> 0 Тогда
				СтоимостьЕдиницы     = Окр(Выборка.СуммаОстаток / Выборка.КоличествоОстаток, 2, 1);
			Иначе
				СтоимостьЕдиницы     = Выборка.СуммаОстаток;
			КонецЕсли;
			ОбластьОстатокКон.Параметры.СтоимостьЕдиницы = СтоимостьЕдиницы;
			ТабличныйДокумент.Присоединить(ОбластьОстатокКон);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ КонОстаткиМПЗОтгруженные = Неопределено И НЕ КонОстаткиМПЗОтгруженные.Пустой() Тогда
		
		ОбластьОстатокНач = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
		ОбластьОстатокДоб = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
		ОбластьОстатокКон = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
		
		Выборка = КонОстаткиМПЗОтгруженные.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбластьОстатокНач.Параметры.Заполнить(Выборка);
			ОбластьОстатокНач.Параметры.РеквизитыДокументаОплаты = 
				ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
			ТабличныйДокумент.Вывести(ОбластьОстатокНач);
			
			Если ПараметрыОтчета.ВыводитьРеквизиты Тогда
				ОбластьОстатокДоб.Параметры.Заполнить(Выборка);
				ОбластьОстатокДоб.Параметры.РеквизитыПартии = 
					ПолучитьРеквизитыДокумента(Выборка.НомерПартии, Выборка.ДатаПартии);
				ОбластьОстатокДоб.Параметры.РеквизитыДокументаОтгрузки = 
					ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОтгрузки, Выборка.ДатаДокументаОтгрузки);
				ТабличныйДокумент.Присоединить(ОбластьОстатокДоб);
			КонецЕсли;
			
			ОбластьОстатокКон.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Присоединить(ОбластьОстатокКон);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, , ТабличныйДокумент.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
		ОбластьПримечание = Макет.ПолучитьОбласть("Примечание");
		ОбластьПримечание.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы + ?(ПараметрыОтчета.ОблагаетсяНДС, "А", "Б") + "*";
		ТабличныйДокумент.Вывести(ОбластьПримечание);
	КонецЕсли;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 9, 8);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ВысотаШапки,, ВысотаШапки,);
	ТабличныйДокумент.ОбластьПечати = ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьТаблицу21_22(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ОС = ПараметрыОтчета.ОС;
	ИсторияНачисленияАмортизации = ПараметрыОтчета.ИсторияНачисленияАмортизации;
	
	ТабличныйДокумент	= Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ЧерноБелаяПечать		= Истина;
	ТабличныйДокумент.ТолькоПросмотр		= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Макет	= ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок	= Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ТекстЗаголовка	= Таблица.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ОписаниеПериода	= ОписаниеПериода(ПараметрыОтчета, Истина, Истина);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	// Печать шапки
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.НомерТаблицы	= Таблица.ЗаголовокТаблицы;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	// Печать таблицы
	ОбластьСтрока	= Макет.ПолучитьОбласть("Строка");
	ОбластьГод		= Макет.ПолучитьОбласть("Год");
	
	Если Таблица.КодТаблицы = 21 Тогда
		МетодНачисленияАмортизации	= Перечисления.МетодыНачисленияАмортизации.Линейный;
	Иначе
		МетодНачисленияАмортизации	= Перечисления.МетодыНачисленияАмортизации.ПоЕНАОФ;
	КонецЕсли;
	
	ВыборкаМетодНачисленияАмортизации	= ОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "МетодНачисленияАмортизации");
	Если ВыборкаМетодНачисленияАмортизации.НайтиСледующий(МетодНачисленияАмортизации, "МетодНачисленияАмортизации") Тогда
		
		ПервоначальнаяСтоимостьВсего	= 0;
		
		НПП = 1;
		
		ВыборкаОС	= ВыборкаМетодНачисленияАмортизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОС");
		Пока ВыборкаОС.Следующий() Цикл
			
			Если Таблица.КодТаблицы = 21 Тогда
				Если (ВыборкаОС.АмортизацияПредыдущихПериодов + ВыборкаОС.СуммаАмортизации) = 0 Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Если (ВыборкаОС.АмортизацияПредыдущихПериодов + ВыборкаОС.СуммаАмортизации + ВыборкаОС.СуммаАмортизацииУскоренная) = 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаОС);
			ОбластьСтрока.Параметры.НПП = НПП;
			
			МесяцыСписания	= "";
			Если ВыборкаОС.АмортизацияПредыдущихПериодов > 0 Тогда
				МесяцыСписания	= МесяцыНачисленияАмортизации(ПараметрыОтчета, ИсторияНачисленияАмортизации, ВыборкаОС.ОС, ВыборкаОС.МесяцНачалаАмортизации);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.МесяцыСписания	= МесяцыСписания;
			
			Если Таблица.КодТаблицы = 21 Тогда
				ОбластьСтрока.Параметры.ОстаточнаяСтоимость		= Макс(ВыборкаОС.ПервоначальнаяСтоимость - ВыборкаОС.АмортизацияПредыдущихПериодовВсего - ВыборкаОС.СуммаАмортизацииВсего, 0);
			Иначе
				ОбластьСтрока.Параметры.ОстаточнаяСтоимость		= Макс(ВыборкаОС.ПервоначальнаяСтоимость - ВыборкаОС.АмортизацияПредыдущихПериодовВсего - ВыборкаОС.СуммаАмортизацииВсего - ВыборкаОС.СуммаАмортизацииУскореннаяВсего, 0);
				ОбластьСтрока.Параметры.ОстаточнаяСтоимостьНач	= Макс(ВыборкаОС.ПервоначальнаяСтоимость - ВыборкаОС.АмортизацияПредыдущихПериодовВсего, 0);
			КонецЕсли;
			
			ОснованиеВыбытия	= "";
			Если ЗначениеЗаполнено(ВыборкаОС.СобытиеВыбытия) Тогда
				ОснованиеВыбытия	= СокрЛП(ВыборкаОС.НазваниеДокументаВыбытия) + " № " + СокрЛП(ВыборкаОС.НомерДокументаВыбытия);
			КонецЕсли;
			ОбластьСтрока.Параметры.ОснованиеВыбытия	= ОснованиеВыбытия; 
			
			РеквизитыДокументаОплаты	= "";
			РасшифровкаДокументаОплаты	= Новый СписокЗначений;
			РасшифровкаПартии			= Новый СписокЗначений;
			
			Выборка	= ВыборкаОС.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.ДокументОплаты) И РасшифровкаДокументаОплаты.НайтиПоЗначению(Выборка.ДокументОплаты) = Неопределено Тогда
					РеквизитыДокументаОплаты	= РеквизитыДокументаОплаты + ?(ПустаяСтрока(РеквизитыДокументаОплаты), "", "; ") + Выборка.РеквизитыДокументаОплаты;
					РасшифровкаДокументаОплаты.Добавить(Выборка.ДокументОплаты);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Партия) И РасшифровкаПартии.НайтиПоЗначению(Выборка.Партия) = Неопределено Тогда
					РасшифровкаПартии.Добавить(Выборка.Партия);
				КонецЕсли;
				
			КонецЦикла;
			
			ОбластьСтрока.Параметры.РеквизитыДокументаОплаты	= РеквизитыДокументаОплаты;
			ОбластьСтрока.Параметры.ДокументОплаты	= ?(РасшифровкаДокументаОплаты.Количество() = 1, РасшифровкаДокументаОплаты[0].Значение, РасшифровкаДокументаОплаты);
			ОбластьСтрока.Параметры.Партия	= ?(РасшифровкаПартии.Количество() = 1, РасшифровкаПартии[0].Значение, РасшифровкаПартии);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			НПП = НПП + 1;
			
			ПервоначальнаяСтоимостьВсего	= ПервоначальнаяСтоимостьВсего + ВыборкаОС.ПервоначальнаяСтоимость;
			
		КонецЦикла;
		
		ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
		
		ОбластьГод.Параметры.Заполнить(ВыборкаМетодНачисленияАмортизации);
		ОбластьГод.Параметры.ПервоначальнаяСтоимость	= ПервоначальнаяСтоимостьВсего;
		Если Таблица.КодТаблицы = 21 Тогда
			ОбластьГод.Параметры.ОстаточнаяСтоимость	= Макс(ПервоначальнаяСтоимостьВсего - ВыборкаМетодНачисленияАмортизации.АмортизацияПредыдущихПериодовВсего - ВыборкаМетодНачисленияАмортизации.СуммаАмортизацииВсего, 0);
		Иначе
			ОбластьГод.Параметры.ОстаточнаяСтоимость	= Макс(ПервоначальнаяСтоимостьВсего - ВыборкаМетодНачисленияАмортизации.АмортизацияПредыдущихПериодовВсего - ВыборкаМетодНачисленияАмортизации.СуммаАмортизацииВсего - ВыборкаМетодНачисленияАмортизации.СуммаАмортизацииУскореннаяВсего, 0);
			ОбластьГод.Параметры.ОстаточнаяСтоимостьНач	= Макс(ПервоначальнаяСтоимостьВсего - ВыборкаМетодНачисленияАмортизации.АмортизацияПредыдущихПериодовВсего, 0);
		КонецЕсли;
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГод);
	
	ПоследняяСтрока	= ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы - 1,, ТабличныйДокумент.ВысотаТаблицы - 1,);
	ПоследняяСтрока.ВместеСоСледующим	= Истина;
	
	Если Таблица.КодТаблицы = 21 Тогда
		ВысотаШапки	= ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 8, 7);
	Иначе
		ВысотаШапки	= ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 9, 8);
	КонецЕсли;
	
	ТабличныйДокумент.ПовторятьПриПечатиСтроки	= ТабличныйДокумент.Область(ВысотаШапки,, ВысотаШапки,);
	ТабличныйДокумент.ОбластьПечати	= ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция МесяцыНачисленияАмортизации(ПараметрыОтчета, ИсторияНачисленияАмортизации, ОсновноеСредство, МесяцНачалаАмортизации)
	
	ГодыМесяцы = "";
	
	ВыборкаОС = ИсторияНачисленияАмортизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОсновноеСредство");
	Если ВыборкаОС.НайтиСледующий(ОсновноеСредство, "ОсновноеСредство") Тогда
		
		Дата1 = МесяцНачалаАмортизации; // в месяц начала использования начислять никак не могли
		Дата2 = МесяцНачалаАмортизации;
		
		АмортизацияНачисляется = Истина;
			
		ВыборкаНачалоПериода	= ВыборкаОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НачалоПериода");
		Пока ВыборкаНачалоПериода.Следующий() Цикл
			
			Выборка	= ВыборкаНачалоПериода.Выбрать();
			Если Выборка.Следующий() Тогда
				
				Если АмортизацияНачисляется Тогда
					
					Если НЕ Выборка.НачислятьАмортизацию Тогда // перестали начислять
						
						АмортизацияНачисляется = Ложь;
						
						Если Месяц(Выборка.НачалоПериода) > Месяц(Дата1) Тогда
							
							ПоследнийМесяцНачисления	= НачалоМесяца(ДобавитьМесяц(Выборка.НачалоПериода, -1));
							ГодыМесяцы	= ГодыМесяцы + ?(ГодыМесяцы = "", "", ", ");
							
							Если НачалоМесяца(Дата1) = ПоследнийМесяцНачисления Тогда
								ГодыМесяцы	= ГодыМесяцы + Формат(Дата1, "ДФ=MMMyyyy");
							Иначе
								ГодыМесяцы	= ГодыМесяцы + Формат(Дата1, "ДФ=MMMyyyy") + " - " + Формат(ПоследнийМесяцНачисления, "ДФ=MMMyyyy");
							КонецЕсли;
							
						КонецЕсли;
						
					Иначе
						
						Дата2	= Выборка.НачалоПериода;
						
					КонецЕсли;
					
				Иначе // амортизация не начислялась
					
					Если Выборка.НачислятьАмортизацию Тогда // начали начислять
						АмортизацияНачисляется = Истина;
						Дата1	= Выборка.НачалоПериода;
						Дата2	= Выборка.НачалоПериода;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
			
		Если АмортизацияНачисляется Тогда
			ГодыМесяцы = ГодыМесяцы + ?(ГодыМесяцы = "", "", ", ");
			ГодыМесяцы = ГодыМесяцы + Формат(Дата1, "ДФ=MMMyyyy") + " - " + Формат(НачалоГода(ПараметрыОтчета.НачалоПериода) - 1, "ДФ=MMMyyyy");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ГодыМесяцы;
	
КонецФункции

Функция СформироватьТаблицу41_42(ПараметрыОтчета, КодТаблицы)
	
	Таблица	= ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	НМА	= ПараметрыОтчета.НМА;
	
	ТабличныйДокумент	= Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ЧерноБелаяПечать		= Истина;
	ТабличныйДокумент.ТолькоПросмотр		= Истина;
	Если КодТаблицы = 41 Тогда
		ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	Иначе
		ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Макет	= ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок	= Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ОписаниеПериода	= ОписаниеПериода(ПараметрыОтчета, Истина, Истина);
	ОбластьЗаголовок.Параметры.ТекстЗаголовка	= Таблица.НаименованиеПолное;
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	// Печать шапки
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.НомерТаблицы	= Таблица.ЗаголовокТаблицы;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	// Печать таблицы
	ОбластьСтрока	= Макет.ПолучитьОбласть("Строка");
	ОбластьГод		= Макет.ПолучитьОбласть("Год");
	
	ВыборкаДо2002	= НМА.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "До2002");
	Если ВыборкаДо2002.НайтиСледующий(Таблица.КодТаблицы, "До2002") Тогда
		
		НПП = 1;
		
		ВыборкаНМА	= ВыборкаДо2002.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НМА");
		Пока ВыборкаНМА.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаНМА);
			ОбластьСтрока.Параметры.НПП	= НПП;
			ОбластьСтрока.Параметры.ОстаточнаяСтоимость	= Макс(ВыборкаНМА.ПервоначальнаяСтоимость - ВыборкаНМА.АмортизацияПредыдущихПериодовВсего - ВыборкаНМА.СуммаАмортизацииВсего, 0);
			
			Если Таблица.КодТаблицы = 41 Тогда
				Если НЕ ВыборкаНМА.АмортизацияПредыдущихПериодов = 0 Тогда
					ОбластьСтрока.Параметры.МесяцыСписания	= Формат(ВыборкаНМА.МесяцНачалаАмортизации, "ДФ='MMM yyyy'") + " - " + Формат(НачалоГода(ПараметрыОтчета.НачалоПериода) - 1, "ДФ='MMM yyyy'");
				КонецЕсли;
			КонецЕсли;
			
			РеквизитыДокументаОплаты	= "";
			РасшифровкаДокументаОплаты	= Новый СписокЗначений;
			РасшифровкаПартии			= Новый СписокЗначений;
			
			Выборка	= ВыборкаНМА.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.ДокументОплаты) И РасшифровкаДокументаОплаты.НайтиПоЗначению(Выборка.ДокументОплаты) = Неопределено Тогда
					РеквизитыДокументаОплаты	= РеквизитыДокументаОплаты + ?(ПустаяСтрока(РеквизитыДокументаОплаты), "", "; ") + Выборка.РеквизитыДокументаОплаты;
					РасшифровкаДокументаОплаты.Добавить(Выборка.ДокументОплаты);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Партия) И РасшифровкаПартии.НайтиПоЗначению(Выборка.Партия) = Неопределено Тогда
					РасшифровкаПартии.Добавить(Выборка.Партия);
				КонецЕсли;
			
			КонецЦикла;
			
			ОбластьСтрока.Параметры.РеквизитыДокументаОплаты	= РеквизитыДокументаОплаты;
			ОбластьСтрока.Параметры.ДокументОплаты	= ?(РасшифровкаДокументаОплаты.Количество() = 1, РасшифровкаДокументаОплаты[0].Значение, РасшифровкаДокументаОплаты);
			ОбластьСтрока.Параметры.Партия	= ?(РасшифровкаПартии.Количество() = 1, РасшифровкаПартии[0].Значение, РасшифровкаПартии);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			НПП = НПП + 1;
			
		КонецЦикла;
		
		ПоследняяСтрока	= ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим	= Истина;
		
		ОбластьГод.Параметры.Заполнить(ВыборкаДо2002);
		ОбластьГод.Параметры.ОстаточнаяСтоимость	= Макс(ВыборкаДо2002.ПервоначальнаяСтоимость - ВыборкаДо2002.АмортизацияПредыдущихПериодовВсего - ВыборкаДо2002.СуммаАмортизацииВсего, 0);
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьГод);
	
	ПоследняяСтрока	= ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы - 1,, ТабличныйДокумент.ВысотаТаблицы - 1,);
	ПоследняяСтрока.ВместеСоСледующим	= Истина;
	
	ВысотаШапки	= ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 8, 7);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки	= ТабличныйДокумент.Область(ВысотаШапки,, ВысотаШапки,);
	
	ТабличныйДокумент.ОбластьПечати	= ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьТаблицу50(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	РасходыНаОплатуТруда = ПараметрыОтчета.РасходыНаОплатуТруда;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	ОбластьШапкаОбщее     = Макет.ПолучитьОбласть("Шапка|Общее");
	ОбластьШапкаНачислено = Макет.ПолучитьОбласть("Шапка|Начислено");
	ОбластьШапкаУдержано  = Макет.ПолучитьОбласть("Шапка|Удержано");
	ОбластьШапкаКВыплате  = Макет.ПолучитьОбласть("Шапка|КВыплате");
	
	ОбластьГодОбщее     = Макет.ПолучитьОбласть("Год|Общее");
	ОбластьГодНачислено = Макет.ПолучитьОбласть("Год|Начислено");
	ОбластьГодУдержано  = Макет.ПолучитьОбласть("Год|Удержано");
	ОбластьГодКВыплате  = Макет.ПолучитьОбласть("Год|КВыплате");
	
	Если НЕ РасходыНаОплатуТруда.Пустой() Тогда
		
		// Кадровые данные сотрудников
		ФизическиеЛица = Новый Массив;
		ВыборкаФизЛицо = РасходыНаОплатуТруда.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ФизЛицо");
		Пока ВыборкаФизЛицо.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаФизЛицо.ФизЛицо) Тогда
				ФизическиеЛица.Добавить(ВыборкаФизЛицо.ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		
		КадровыеДанныеСотрудников = УчетЗарплаты.ДанныеФизическихЛиц(
			ПараметрыОтчета.Организация, ФизическиеЛица, ПараметрыОтчета.КонецПериода, Ложь, Истина);
		КадровыеДанныеСотрудников.Индексы.Добавить("ФизическоеЛицо");
		ПараметрыОтчета.Вставить("КадровыеДанныеСотрудников", КадровыеДанныеСотрудников);
		
		
		ВыборкаОбщие = РасходыНаОплатуТруда.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если ВыборкаОбщие.Следующий() Тогда
			
			ВыборкаПериодОтчета = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПериодОтчета");
			Если ВыборкаПериодОтчета.НайтиСледующий(1, "ПериодОтчета") Тогда
				
				ВыборкаМесяц = ВыборкаПериодОтчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
				Пока ВыборкаМесяц.Следующий() Цикл
					
					СформироватьТаблицу50заМесяц(Таблица, ТабличныйДокумент, Макет, ВыборкаМесяц, ПараметрыОтчета);
					
				КонецЦикла;
				
			Иначе
				// Шапка пустого отчета за последний месяц, но с итогами за год
				
				// Печать заголовка
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьЗаголовок.Параметры.ОписаниеПериода = "за " + НРег(ПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода, "ФП = Истина"));
				ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				
				ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
				
				НомГрафы         = 5;
				НомерГрафыОтчета = 4;
				
				НомГрВсегоНачислено       = НомГрафы;
				НомГрВсегоНачисленоОтчета = НомерГрафыОтчета;
				
				НомГрВсегоУдержано       = НомГрафы;
				НомГрВсегоУдержаноОтчета = НомерГрафыОтчета;
				
				// Печать шапки
				ТабличныйДокумент.Вывести(ОбластьШапкаОбщее);
				
				ВыборкаУдержание = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
				Если ВыборкаУдержание.НайтиСледующий(Ложь, "ЭтоУдержание") Тогда
					
					ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
					Пока ВыборкаВидНачисления.Следующий() Цикл
						
						Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
							Продолжить;
						КонецЕсли;
						
						ОбластьШапкаНачислено.Параметры.ВидНачисленияУдержания = ВыборкаВидНачисления.ВидНачисленияУдержания;
						ОбластьШапкаНачислено.Параметры.НомГрафы = НомерГрафыОтчета;
						ТабличныйДокумент.Присоединить(ОбластьШапкаНачислено);
						
						НомГрафы = НомГрафы + 1;
						НомерГрафыОтчета = НомерГрафыОтчета + 1;
						
					КонецЦикла;
					
				КонецЕсли;
				
				НомГрВсегоНачислено       = НомГрафы;
				НомГрВсегоНачисленоОтчета = НомерГрафыОтчета;
				
				ОбластьШапкаНачислено.Параметры.ВидНачисленияУдержания = "Всего";
				ОбластьШапкаНачислено.Параметры.НомГрафы = НомГрВсегоНачисленоОтчета;
				
				ТабличныйДокумент.Присоединить(ОбластьШапкаНачислено);
				
				НомерГрафыОтчета = НомерГрафыОтчета + 1;
				НомГрафы = НомГрафы + 1;
				
				ОбластиНачислено = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы - 2, 5, ТабличныйДокумент.ВысотаТаблицы - 2, НомГрВсегоНачислено);
				ОбластиНачислено.Объединить();
				
				ВыборкаУдержание = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
				Если ВыборкаУдержание.НайтиСледующий(Истина, "ЭтоУдержание") Тогда
					
					ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
					Пока ВыборкаВидНачисления.Следующий() Цикл
						
						Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
							Продолжить;
						КонецЕсли;
						
						ОбластьШапкаУдержано.Параметры.ВидНачисленияУдержания = ВыборкаВидНачисления.ВидНачисленияУдержания;
						ОбластьШапкаУдержано.Параметры.НомГрафы = НомерГрафыОтчета;
						ТабличныйДокумент.Присоединить(ОбластьШапкаУдержано);
						
						НомГрафы = НомГрафы + 1;
						НомерГрафыОтчета = НомерГрафыОтчета + 1;
					КонецЦикла;
					
				КонецЕсли;
				
				НомГрВсегоУдержано       = НомГрафы;
				НомГрВсегоУдержаноОтчета = НомерГрафыОтчета;
				
				ОбластьШапкаУдержано.Параметры.ВидНачисленияУдержания = "Всего";
				ОбластьШапкаУдержано.Параметры.НомГрафы	= НомГрВсегоУдержаноОтчета;
				
				ТабличныйДокумент.Присоединить(ОбластьШапкаУдержано);
				
				НомерГрафыОтчета = НомерГрафыОтчета + 1;
				НомГрафы = НомГрафы + 1;
				
				ОбластиУдержано = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы - 2, НомГрВсегоНачислено + 1, ТабличныйДокумент.ВысотаТаблицы - 2, НомГрВсегоУдержано);
				ОбластиУдержано.Объединить();
				
				ОбластьШапкаКВыплате.Параметры.КВыплате     = "Сумма к выплате (гр." +  НомГрВсегоНачисленоОтчета + " - гр." + НомГрВсегоУдержаноОтчета + ") (руб.)";
				ОбластьШапкаКВыплате.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы;
				ОбластьШапкаКВыплате.Параметры.НомГрафы1    = НомГрВсегоУдержаноОтчета + 1;
				ОбластьШапкаКВыплате.Параметры.НомГрафы2    = НомГрВсегоУдержаноОтчета + 2;
				ОбластьШапкаКВыплате.Параметры.НомГрафы3    = НомГрВсегоУдержаноОтчета + 3;
				ТабличныйДокумент.Присоединить(ОбластьШапкаКВыплате);
				
			КонецЕсли;
			
			ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
				
				ТабличныйДокумент.Вывести(ОбластьГодОбщее);
				
				ВыборкаУдержание = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
				Если ВыборкаУдержание.НайтиСледующий(Ложь, "ЭтоУдержание") Тогда
				
					ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
					Пока ВыборкаВидНачисления.Следующий() Цикл
						
						Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
							Продолжить;
						КонецЕсли;
						
						ОбластьГодНачислено.Параметры.Заполнить(ВыборкаВидНачисления);
						ТабличныйДокумент.Присоединить(ОбластьГодНачислено);
						
					КонецЦикла;
					
					ОбластьГодНачислено.Параметры.Заполнить(ВыборкаУдержание);
					
				КонецЕсли;
				
				ТабличныйДокумент.Присоединить(ОбластьГодНачислено);
				
				ВыборкаУдержание = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
				Если ВыборкаУдержание.НайтиСледующий(Истина, "ЭтоУдержание") Тогда
				
					ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
					Пока ВыборкаВидНачисления.Следующий() Цикл
						
						Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
							Продолжить;
						КонецЕсли;
						
						ОбластьГодУдержано.Параметры.Заполнить(ВыборкаВидНачисления);
						ТабличныйДокумент.Присоединить(ОбластьГодУдержано);
						
					КонецЦикла;
					
					ОбластьГодУдержано.Параметры.Заполнить(ВыборкаУдержание);
					
				КонецЕсли;
				
				ТабличныйДокумент.Присоединить(ОбластьГодУдержано);
				
				ОбластьГодКВыплате.Параметры.Заполнить(ВыборкаОбщие);
				ТабличныйДокумент.Присоединить(ОбластьГодКВыплате);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
			// Шапка пустого отчета
			
			// Печать заголовка
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = Таблица.НаименованиеПолное;
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
			
			// Печать шапки
			НомГрВсегоНачисленоОтчета = 4;
			НомГрВсегоУдержаноОтчета  = 5;
			
			ТабличныйДокумент.Вывести(ОбластьШапкаОбщее);
			
			ОбластьШапкаНачислено.Параметры.ВидНачисленияУдержания = "Всего";
			ОбластьШапкаНачислено.Параметры.НомГрафы = НомГрВсегоНачисленоОтчета;
			ТабличныйДокумент.Присоединить(ОбластьШапкаНачислено);
			
			ОбластьШапкаУдержано.Параметры.ВидНачисленияУдержания = "Всего";
			ОбластьШапкаУдержано.Параметры.НомГрафы = НомГрВсегоУдержаноОтчета;
			ТабличныйДокумент.Присоединить(ОбластьШапкаУдержано);
			
			ОбластьШапкаКВыплате.Параметры.КВыплате     = "Сумма к выплате (гр." +  НомГрВсегоНачисленоОтчета + " - гр." + НомГрВсегоУдержаноОтчета + ") (руб.)";
			ОбластьШапкаКВыплате.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы;
			ОбластьШапкаКВыплате.Параметры.НомГрафы1    = НомГрВсегоУдержаноОтчета + 1;
			ОбластьШапкаКВыплате.Параметры.НомГрафы2    = НомГрВсегоУдержаноОтчета + 2;
			ОбластьШапкаКВыплате.Параметры.НомГрафы3    = НомГрВсегоУдержаноОтчета + 3;
			ТабличныйДокумент.Присоединить(ОбластьШапкаКВыплате);
			
			ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
				ТабличныйДокумент.Вывести(ОбластьГодОбщее);
				ТабличныйДокумент.Присоединить(ОбластьГодНачислено);
				ТабличныйДокумент.Присоединить(ОбластьГодУдержано);
				ТабличныйДокумент.Присоединить(ОбластьГодКВыплате);
			КонецЕсли;
			
	КонецЕсли;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 8, 7);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ВысотаШапки,, ВысотаШапки,);
	
	ТабличныйДокумент.ОбластьПечати = ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура СформироватьТаблицу50заМесяц(Таблица, ТабличныйДокумент, Макет, ВыборкаМесяц, ПараметрыОтчета)
	
	ОбластьШапкаОбщее     = Макет.ПолучитьОбласть("Шапка|Общее");
	ОбластьШапкаНачислено = Макет.ПолучитьОбласть("Шапка|Начислено");
	ОбластьШапкаУдержано  = Макет.ПолучитьОбласть("Шапка|Удержано");
	ОбластьШапкаКВыплате  = Макет.ПолучитьОбласть("Шапка|КВыплате");
	
	ДатаНачМесяца = НачалоМесяца(ВыборкаМесяц.Месяц);
	ДатаКонМесяца = КонецМесяца(ВыборкаМесяц.Месяц);
	
	Если ПараметрыОтчета.НачалоПериода < ДатаНачМесяца Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	// Печать заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ОписаниеПериода = "за " + НРег(ПредставлениеПериода(ДатаНачМесяца, ДатаКонМесяца, "ФП = Истина"));
	ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	НомГрафы         = 5;
	НомерГрафыОтчета = 4;
	
	НомГрВсегоНачислено       = НомГрафы;
	НомГрВсегоНачисленоОтчета = НомерГрафыОтчета;
	
	НомГрВсегоУдержано       = НомГрафы;
	НомГрВсегоУдержаноОтчета = НомерГрафыОтчета;
	
	// Печать шапки
	ТабличныйДокумент.Вывести(ОбластьШапкаОбщее);
	
	ВыборкаУдержание = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
	Если ВыборкаУдержание.НайтиСледующий(Ложь, "ЭтоУдержание") Тогда
		
		ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыборкаВидНачисления.Следующий() Цикл
			
			Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьШапкаНачислено.Параметры.ВидНачисленияУдержания = ВыборкаВидНачисления.ВидНачисленияУдержания;
			ОбластьШапкаНачислено.Параметры.НомГрафы = НомерГрафыОтчета;
			ТабличныйДокумент.Присоединить(ОбластьШапкаНачислено);
			
			НомГрафы = НомГрафы + 1;
			НомерГрафыОтчета = НомерГрафыОтчета + 1;
		КонецЦикла;
		
	КонецЕсли;
	
	НомГрВсегоНачислено       = НомГрафы;
	НомГрВсегоНачисленоОтчета = НомерГрафыОтчета;
	
	ОбластьШапкаНачислено.Параметры.ВидНачисленияУдержания = "Всего";
	ОбластьШапкаНачислено.Параметры.НомГрафы = НомГрВсегоНачисленоОтчета;
		
	ТабличныйДокумент.Присоединить(ОбластьШапкаНачислено);
	
	НомерГрафыОтчета = НомерГрафыОтчета + 1;
	НомГрафы = НомГрафы + 1;
	
	ОбластиНачислено = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы - 2, 5, ТабличныйДокумент.ВысотаТаблицы - 2, НомГрВсегоНачислено);
	ОбластиНачислено.Объединить();
	
	ВыборкаУдержание = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
	Если ВыборкаУдержание.НайтиСледующий(Истина, "ЭтоУдержание") Тогда
		
		ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыборкаВидНачисления.Следующий() Цикл
			
			Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьШапкаУдержано.Параметры.ВидНачисленияУдержания = ВыборкаВидНачисления.ВидНачисленияУдержания;
			ОбластьШапкаУдержано.Параметры.НомГрафы = НомерГрафыОтчета;
			ТабличныйДокумент.Присоединить(ОбластьШапкаУдержано);
			
			НомГрафы = НомГрафы + 1;
			НомерГрафыОтчета = НомерГрафыОтчета + 1;
		КонецЦикла;
		
	КонецЕсли;
	
	НомГрВсегоУдержано       = НомГрафы;
	НомГрВсегоУдержаноОтчета = НомерГрафыОтчета;
	
	ОбластьШапкаУдержано.Параметры.ВидНачисленияУдержания = "Всего";
	ОбластьШапкаУдержано.Параметры.НомГрафы = НомГрВсегоУдержаноОтчета;
	
	ТабличныйДокумент.Присоединить(ОбластьШапкаУдержано);
	
	НомерГрафыОтчета = НомерГрафыОтчета + 1;
	НомГрафы = НомГрафы + 1;
	
	ОбластиУдержано = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы - 2, НомГрВсегоНачислено + 1, ТабличныйДокумент.ВысотаТаблицы - 2, НомГрВсегоУдержано);
	ОбластиУдержано.Объединить();
	
	ОбластьШапкаКВыплате.Параметры.КВыплате     = "Сумма к выплате (гр." +  НомГрВсегоНачисленоОтчета + " - гр." + НомГрВсегоУдержаноОтчета + ") (руб.)";
	ОбластьШапкаКВыплате.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы;
	ОбластьШапкаКВыплате.Параметры.НомГрафы1    = НомГрВсегоУдержаноОтчета + 1;
	ОбластьШапкаКВыплате.Параметры.НомГрафы2    = НомГрВсегоУдержаноОтчета + 2;
	ОбластьШапкаКВыплате.Параметры.НомГрафы3    = НомГрВсегоУдержаноОтчета + 3;
	ТабличныйДокумент.Присоединить(ОбластьШапкаКВыплате);
	
	// Печать таблицы расходов за месяц
	ОбластьРаботникОбщее     = Макет.ПолучитьОбласть("Работник|Общее");
	ОбластьРаботникНачислено = Макет.ПолучитьОбласть("Работник|Начислено");
	ОбластьРаботникУдержано  = Макет.ПолучитьОбласть("Работник|Удержано");
	ОбластьРаботникКВыплате  = Макет.ПолучитьОбласть("Работник|КВыплате");
	
	КадровыеДанныеСотрудников = ПараметрыОтчета.КадровыеДанныеСотрудников;
	
	НПП = 1;
	
	ВыборкаДатаДокументаОплаты = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаДокументаОплаты");
	Пока ВыборкаДатаДокументаОплаты.Следующий() Цикл
		ВыборкаФизЛицо = ВыборкаДатаДокументаОплаты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ФизЛицо");
		Пока ВыборкаФизЛицо.Следующий() Цикл
			
			ОбластьРаботникОбщее.Параметры.Заполнить(ВыборкаФизЛицо);
			ОбластьРаботникОбщее.Параметры.НПП = НПП;
			
			НайденнаяСтрока = КадровыеДанныеСотрудников.Найти(ВыборкаФизЛицо.ФизЛицо, "ФизическоеЛицо");
			Если НайденнаяСтрока <> Неопределено Тогда
				УдЛичности = ?(НЕ ЗначениеЗаполнено(НайденнаяСтрока.ВидДокумента),"","" + НайденнаяСтрока.ВидДокумента + ", ") 
					+ ?(НЕ ЗначениеЗаполнено(НайденнаяСтрока.Серия),"","" + "Серия: "   + СокрЛП(НайденнаяСтрока.Серия))
					+ ?(НЕ ЗначениеЗаполнено(НайденнаяСтрока.Номер),"","" + ", № " + СокрЛП(НайденнаяСтрока.Номер))
					+ ?(НЕ ЗначениеЗаполнено(НайденнаяСтрока.ДатаВыдачи),"","" + ", выдан " + Формат(НайденнаяСтрока.ДатаВыдачи, "ДФ=dd.MM.yyyy"));
				ДатаДоговора = НайденнаяСтрока.ДатаПриема;
			Иначе
				УдЛичности   = "";
				ДатаДоговора = '00010101';
			КонецЕсли;
			
			ОбластьРаботникОбщее.Параметры.ФизЛицоПредставление =
				ВыборкаФизЛицо.ФизЛицоПредставление +  ?(НЕ ЗначениеЗаполнено(УдЛичности), "", Символы.ПС + УдЛичности);
			ОбластьРаботникОбщее.Параметры.ДатаДоговора = ДатаДоговора;
			
			ТабличныйДокумент.Вывести(ОбластьРаботникОбщее);
			
			НПП = НПП + 1;
			
			РасшифровкаДокументаОплаты = Новый СписокЗначений;
			
			ВыборкаУдержание = ВыборкаФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
			Если ВыборкаУдержание.НайтиСледующий(Ложь, "ЭтоУдержание") Тогда
				
				ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
				Пока ВыборкаВидНачисления.Следующий() Цикл
					
					Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
						Продолжить;
					КонецЕсли;
					
					ОбластьРаботникНачислено.Параметры.Заполнить(ВыборкаВидНачисления);
					ТабличныйДокумент.Присоединить(ОбластьРаботникНачислено);
					
					Выборка = ВыборкаВидНачисления.Выбрать();
					Пока Выборка.Следующий() Цикл
						Если ЗначениеЗаполнено(Выборка.ДокументОплаты) И РасшифровкаДокументаОплаты.НайтиПоЗначению(Выборка.ДокументОплаты) = Неопределено Тогда
							РасшифровкаДокументаОплаты.Добавить(Выборка.ДокументОплаты);
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
				ОбластьРаботникНачислено.Параметры.Заполнить(ВыборкаУдержание);
				
			Иначе
				ОбластьРаботникНачислено.Параметры.Сумма = 0;
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьРаботникНачислено);
			
			ВыборкаУдержание = ВыборкаФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
			Если ВыборкаУдержание.НайтиСледующий(Истина, "ЭтоУдержание") Тогда
				
				ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
				Пока ВыборкаВидНачисления.Следующий() Цикл
					
					Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
						Продолжить;
					КонецЕсли;
					
					ОбластьРаботникУдержано.Параметры.Заполнить(ВыборкаВидНачисления);
					ТабличныйДокумент.Присоединить(ОбластьРаботникУдержано);
					
					Выборка = ВыборкаВидНачисления.Выбрать();
					Пока Выборка.Следующий() Цикл
						Если ЗначениеЗаполнено(Выборка.ДокументОплаты) И РасшифровкаДокументаОплаты.НайтиПоЗначению(Выборка.ДокументОплаты) = Неопределено Тогда
							РасшифровкаДокументаОплаты.Добавить(Выборка.ДокументОплаты);
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
				ОбластьРаботникУдержано.Параметры.Заполнить(ВыборкаУдержание);
				
			Иначе
				ОбластьРаботникУдержано.Параметры.Сумма	= 0;
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьРаботникУдержано);
			
			ОбластьРаботникКВыплате.Параметры.Заполнить(ВыборкаФизЛицо);
			ОбластьРаботникКВыплате.Параметры.ДатаОплаты = ВыборкаДатаДокументаОплаты.ДатаДокументаОплаты;
			ОбластьРаботникКВыплате.Параметры.РасшифровкаДокументаОплаты =
				?(РасшифровкаДокументаОплаты.Количество() = 1, РасшифровкаДокументаОплаты[0].Значение, РасшифровкаДокументаОплаты);
			ТабличныйДокумент.Присоединить(ОбластьРаботникКВыплате);
			
		КонецЦикла;
	КонецЦикла;
	
	// Итоги за месяц
	ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	ОбластьМесяцОбщее     = Макет.ПолучитьОбласть("Месяц|Общее");
	ОбластьМесяцНачислено = Макет.ПолучитьОбласть("Месяц|Начислено");
	ОбластьМесяцУдержано  = Макет.ПолучитьОбласть("Месяц|Удержано");
	ОбластьМесяцКВыплате  = Макет.ПолучитьОбласть("Месяц|КВыплате");
	
	ТабличныйДокумент.Вывести(ОбластьМесяцОбщее);
	
	ВыборкаУдержание = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
	Если ВыборкаУдержание.НайтиСледующий(Ложь, "ЭтоУдержание") Тогда
		
		ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыборкаВидНачисления.Следующий() Цикл
			
			Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьМесяцНачислено.Параметры.Заполнить(ВыборкаВидНачисления);
			ТабличныйДокумент.Присоединить(ОбластьМесяцНачислено);
			
		КонецЦикла;
		
		ОбластьМесяцНачислено.Параметры.Заполнить(ВыборкаУдержание);
		
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(ОбластьМесяцНачислено);
	
	ВыборкаУдержание = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЭтоУдержание", "Все");
	Если ВыборкаУдержание.НайтиСледующий(Истина, "ЭтоУдержание") Тогда
		
		ВыборкаВидНачисления = ВыборкаУдержание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыборкаВидНачисления.Следующий() Цикл
			
			Если НЕ ВыборкаВидНачисления.ЭтоУдержание = ВыборкаУдержание.ЭтоУдержание Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьМесяцУдержано.Параметры.Заполнить(ВыборкаВидНачисления);
			ТабличныйДокумент.Присоединить(ОбластьМесяцУдержано);
			
		КонецЦикла;
		
		ОбластьМесяцУдержано.Параметры.Заполнить(ВыборкаУдержание);
		
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(ОбластьМесяцУдержано);
	
	ОбластьМесяцКВыплате.Параметры.Заполнить(ВыборкаМесяц);
	ТабличныйДокумент.Присоединить(ОбластьМесяцКВыплате);
	
КонецПроцедуры

Функция СформироватьТаблицу61(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ОписаниеПериода = ОписаниеПериода(ПараметрыОтчета, Истина);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	// Печать таблицы
	Область = Макет.ПолучитьОбласть("Область");
	Область.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы;
	
	ВыборкаОбщие = ПараметрыОтчета.НалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	Если ВыборкаОбщие.Следующий() Тогда
		Область.Параметры.Заполнить(ВыборкаОбщие);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Область);
	
	Если ПараметрыОтчета.НачалоПериода = ПараметрыОтчета.НачалоНалоговогоПериода
		И ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
		ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Подпись"));
	КонецЕсли;
	
	ТабличныйДокумент.ОбластьПечати = ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьТаблицу62_63(ПараметрыОтчета, КодТаблицы)
	
	Таблица = ПараметрыОтчета.СписокТаблиц.Найти(КодТаблицы, "КодТаблицы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать    = Истина;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходовПредпринимателя_Таблица" + Таблица.КодТаблицы;
	
	Если КодТаблицы = 62 Тогда
		Расходы = ПараметрыОтчета.ПрочиеРасходы;
	ИначеЕсли КодТаблицы = 63 Тогда
		Расходы = ПараметрыОтчета.РасходыБудущихПериодов;
	Иначе
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Макет = ПолучитьМакет(ПолучитьИмяМакета(ПараметрыОтчета, Таблица));
	
	// Печать заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ОписаниеПериода = ОписаниеПериода(ПараметрыОтчета, Истина);
	ОбластьЗаголовок.Параметры.ТекстЗаголовка  = Таблица.НаименованиеПолное;
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	// Печать шапки
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.НомерТаблицы = Таблица.ЗаголовокТаблицы;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	// Печать таблицы
	ВыборкаОбщие = Расходы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	Если ВыборкаОбщие.Следующий() Тогда
		
		ВыборкаПериодОтчета = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПериодОтчета");
		Если ВыборкаПериодОтчета.НайтиСледующий(1, "ПериодОтчета") Тогда
			
			НПП = 1;
			
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			
			Выборка = ВыборкаПериодОтчета.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				ОбластьСтрока.Параметры.НПП = НПП;
				ОбластьСтрока.Параметры.РеквизитыДокументаОплаты = ПолучитьРеквизитыДокумента(Выборка.НомерДокументаОплаты, Выборка.ДатаДокументаОплаты);
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				НПП = НПП + 1;
				
			КонецЦикла;
		
			ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			ОбластьЗаПериод = Макет.ПолучитьОбласть("ЗаПериод");
			ОбластьЗаПериод.Параметры.Заполнить(ВыборкаПериодОтчета);
			ТабличныйДокумент.Вывести(ОбластьЗаПериод);
		КонецЕсли;
		
		ПоследняяСтрока = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы,, ТабличныйДокумент.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
		
		Если ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
			ОбластьГод = Макет.ПолучитьОбласть("Год");
			ОбластьГод.Параметры.Заполнить(ВыборкаОбщие);
			ТабличныйДокумент.Вывести(ОбластьГод);
		КонецЕсли;
		
	КонецЕсли;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности), 6, 5);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ВысотаШапки,, ВысотаШапки,);
	
	ТабличныйДокумент.ОбластьПечати = ТабличныйДокумент.Область(2, 2, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьИмяМакета(ПараметрыОтчета, Таблица)
	
	Буква = "";
	Если Таблица.КодТаблицы = 11
		ИЛИ Таблица.КодТаблицы = 13
		ИЛИ Таблица.КодТаблицы = 14
		ИЛИ Таблица.КодТаблицы = 16
		ИЛИ Таблица.КодТаблицы = 17 Тогда
		
		Если ПараметрыОтчета.ОблагаетсяНДС Тогда
			Буква = "А";
		Иначе
			Буква = "Б";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Таблица.ИмяМакета + Буква;
	
КонецФункции

Функция ОписаниеПериода(ПараметрыОтчета, ПечататьНалоговыйПериод = Ложь, СНачалаНалоговогоПериода = Ложь)
	
	Если ПараметрыОтчета.НачалоПериода = ПараметрыОтчета.НачалоНалоговогоПериода
		И ПараметрыОтчета.КонецПериода = ПараметрыОтчета.КонецНалоговогоПериода Тогда
		
		ТекстПериода = ПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода, "ФП = Истина");
		
		Если ПечататьНалоговыйПериод Тогда
			ОписаниеПериода = СтрШаблон(НСтр("ru = 'за налоговый период %1'"), НРег(ТекстПериода));
		Иначе
			ОписаниеПериода = СтрШаблон(НСтр("ru = 'за %1'"), НРег(ТекстПериода));
		КонецЕсли;
		
	Иначе
		
		ТекстПериода = ПредставлениеПериода(
			?(СНачалаНалоговогоПериода, ПараметрыОтчета.НачалоНалоговогоПериода, ПараметрыОтчета.НачалоПериода),
			ПараметрыОтчета.КонецПериода,
			"ФП = Истина");
		
		ОписаниеПериода = СтрШаблон(НСтр("ru='за %1'"), НРег(ТекстПериода));
		
	КонецЕсли;
	
	Возврат ОписаниеПериода;
	
КонецФункции

Процедура ВывестиФильтры(ПараметрыОтчета, ТабличныйДокумент, Макет)
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.ВидДеятельности) Тогда
		Область	= Макет.ПолучитьОбласть("Фильтр");
		ЗаполнитьЗначенияСвойств(Область.Параметры, ПараметрыОтчета);
		ТабличныйДокумент.Вывести(Область);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьРеквизитыДокумента(НомерДокумента, ДатаДокумента)
	
	Возврат Строка(НомерДокумента)
			+ ?(ПустаяСтрока(Строка(НомерДокумента)), "", ", ")
			+ Формат(ДатаДокумента, "ДЛФ=D");
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли