#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
		
	Если НаДату > '20110101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.ВерсияФСГС;
	КонецЕсли;
		
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповДата    = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ОписаниеТиповЧисло3  = Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(3, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповСтрока  = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	ОписаниеТиповСтрока7 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(7));
	ОписаниеТиповБулево  = Новый ОписаниеТипов("Булево");
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",             ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",          ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия",      ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",       ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ИндексФормыОтчета",       ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("НаименованиеФормыОтчета", ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("СтрПериодичность",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("Периодичность",           ОписаниеТиповЧисло3);
	ТаблицаФормОтчета.Колонки.Добавить("НарастающимИтогом",       ОписаниеТиповБулево);
	ТаблицаФормОтчета.Колонки.Добавить("ОКУД",                    ОписаниеТиповСтрока7);
	ТаблицаФормОтчета.Колонки.Добавить("Версия",                  ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ИмяФайлаШаблона",         ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	ТаблицаФормОтчета.Индексы.Добавить("ОписаниеОтчета");

	ТаблицаТабельФормСтатистики = ТабельФормСтатистики();
	
	РезультатЗапросаШаблоныЭВФ = ЗапросКРегиструШаблоновЭВФ();
	
	ВыборкаШаблоныЭВФ = РезультатЗапросаШаблоныЭВФ.Выбрать();
	
	Пока ВыборкаШаблоныЭВФ.Следующий() Цикл
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета             = "ФормаОтчета" + "_" + ВыборкаШаблоныЭВФ.КодШаблона;
		НоваяФорма.ОписаниеОтчета          = "Форма " + ВыборкаШаблоныЭВФ.Наименование + ".";
		НоваяФорма.ИндексФормыОтчета       = ВыборкаШаблоныЭВФ.Наименование;
		НоваяФорма.ДатаНачалоДействия      = '20130101';
		НоваяФорма.ДатаКонецДействия       = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
		НоваяФорма.НаименованиеФормыОтчета = ВыборкаШаблоныЭВФ.Наименование;
		НоваяФорма.Периодичность           = ВыборкаШаблоныЭВФ.КодПериодичности;
		НоваяФорма.НарастающимИтогом       = Истина;
		
		ОКУД = Прав("0000000" + ВыборкаШаблоныЭВФ.ОКУД, 7);
		НоваяФорма.ОКУД                    = ОКУД;
		НоваяФорма.Версия                  = ВыборкаШаблоныЭВФ.Версия;
		НоваяФорма.ИмяФайлаШаблона         = ВыборкаШаблоныЭВФ.ИмяФайлаШаблона;
		
		СтрокиТаблицы = ТаблицаТабельФормСтатистики.НайтиСтроки(Новый Структура("ОКУД", ОКУД));
		
		Для каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
			
			Периодичность1 = СтрокаТаблицы.Периодичность % 2; // годовая
			Периодичность2 = СтрокаТаблицы.Периодичность - Периодичность1;
			
			Если ВыборкаШаблоныЭВФ.КодПериодичности = Периодичность1 ИЛИ ВыборкаШаблоныЭВФ.КодПериодичности = Периодичность2 Тогда
				
				НоваяФорма.ИндексФормыОтчета         = СтрокаТаблицы.ИндексФормыОтчета;
				НоваяФорма.НаименованиеФормыОтчета   = СтрокаТаблицы.НаименованиеФормыОтчета; // новое наименование из табеля
				НоваяФорма.СтрПериодичность          = СтрокаТаблицы.СтрПериодичность;
				НоваяФорма.НарастающимИтогом         = СтрокаТаблицы.НарастающимИтогом;
				НоваяФорма.ОписаниеОтчета = "Форма " + СтрокаТаблицы.ИндексФормыОтчета + " """ + СтрокаТаблицы.НаименованиеФормыОтчета + """"
													 + Символы.ПС + СтрокаТаблицы.ОписаниеОтчета + Символы.ПС + СтрокаТаблицы.СтрПериодичность + ".";
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла;
	
	ТаблицаФормОтчета.Сортировать("ОписаниеОтчета");
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

Функция ЗапросКРегиструШаблоновЭВФ(ИмяФайлаШаблона = Неопределено, СДанными = Ложь) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	ШаблоныЭВФОтчетовСтатистики.ИмяФайлаШаблона,";
	Если СДанными Тогда
		ТекстЗапроса = ТекстЗапроса + "
				   |	ШаблоныЭВФОтчетовСтатистики.Шаблон,";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
				   |	ШаблоныЭВФОтчетовСтатистики.ОКУД,
				   |	ШаблоныЭВФОтчетовСтатистики.Наименование,
				   |	ШаблоныЭВФОтчетовСтатистики.КодШаблона,
				   |	ШаблоныЭВФОтчетовСтатистики.КодФормы,
				   |	ШаблоныЭВФОтчетовСтатистики.КодПериодичности,
				   |	ШаблоныЭВФОтчетовСтатистики.Шифр,
				   |	ШаблоныЭВФОтчетовСтатистики.Версия
				   |ИЗ
				   |	РегистрСведений.ШаблоныЭВФОтчетовСтатистики КАК ШаблоныЭВФОтчетовСтатистики";

	Запрос = Новый Запрос(ТекстЗапроса);

	Если ИмяФайлаШаблона <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
				   |ГДЕ
				   |	ШаблоныЭВФОтчетовСтатистики.ИмяФайлаШаблона ПОДОБНО &ИмяФайлаШаблона
				   |УПОРЯДОЧИТЬ ПО
				   |	ШаблоныЭВФОтчетовСтатистики.Наименование УБЫВ";
		Запрос.УстановитьПараметр("ИмяФайлаШаблона", ИмяФайлаШаблона);
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТабельФормСтатистики()
	
	ОписаниеТиповСтрока  = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	ОписаниеТиповСтрока7 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(7));
	ОписаниеТиповЧисло3  = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповБулево  = Новый ОписаниеТипов("Булево");
	
	ТабФормСтатистики = Новый ТаблицаЗначений;
	ТабФормСтатистики.Колонки.Добавить("ОКУД",                    ОписаниеТиповСтрока7);
	ТабФормСтатистики.Колонки.Добавить("ОписаниеОтчета",          ОписаниеТиповСтрока);
	ТабФормСтатистики.Колонки.Добавить("ИндексФормыОтчета",       ОписаниеТиповСтрока);
	ТабФормСтатистики.Колонки.Добавить("НаименованиеФормыОтчета", ОписаниеТиповСтрока);
	ТабФормСтатистики.Колонки.Добавить("СтрПериодичность",        ОписаниеТиповСтрока);
	ТабФормСтатистики.Колонки.Добавить("Периодичность",           ОписаниеТиповЧисло3);
	ТабФормСтатистики.Колонки.Добавить("НарастающимИтогом",       ОписаниеТиповБулево);

	ТабельФормСтатистики = ПолучитьМакет("ТабельФормСтатистики");
	
	Для Инд = 2 По ТабельФормСтатистики.ВысотаТаблицы Цикл
		
		СтрОКУД              = СокрЛП(ТабельФормСтатистики.Область(Инд, 1).Текст);
		СтрНомерПриказа      = СокрЛП(ТабельФормСтатистики.Область(Инд, 2).Текст);
		СтрДатаПриказа       = СокрЛП(ТабельФормСтатистики.Область(Инд, 3).Текст);
		СтрНаимФормыОтчета   = СокрЛП(ТабельФормСтатистики.Область(Инд, 4).Текст);
		СтрИндексФормыОтчета = СокрЛП(ТабельФормСтатистики.Область(Инд, 5).Текст);
		СтрПериодичность     = СокрЛП(ТабельФормСтатистики.Область(Инд, 6).Текст);
		СтрНарастающимИтогом = СокрЛП(ТабельФормСтатистики.Область(Инд, 10).Текст);

		Если СтрОКУД = "" Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТабФормСтатистики.Добавить();
		НоваяСтрока.ОКУД                    = Прав("0000000" + СтрОКУД, 7);
		НоваяСтрока.ОписаниеОтчета          = "Утверждена приказом Росстата от " + СтрДатаПриказа + " № " + СтрНомерПриказа;
		НоваяСтрока.ИндексФормыОтчета       = СтрИндексФормыОтчета;
		НоваяСтрока.НаименованиеФормыОтчета = СтрНаимФормыОтчета;
		НоваяСтрока.СтрПериодичность        = СтрПериодичность;
		НоваяСтрока.Периодичность           = ПериодичностьИзСтроки(СтрПериодичность);
		НоваяСтрока.НарастающимИтогом       = ЗначениеЗаполнено(СтрНарастающимИтогом);
		
	КонецЦикла;
	
	Возврат ТабФормСтатистики;
	
КонецФункции

Функция ПериодичностьИзСтроки(СтрПериодичность)
	
	СтрокаПериодичность = НРег(СтрПериодичность);
	
	Периодичность = 0;
	
	Если СтрНайти(СтрокаПериодичность, "1 раз") > 0 ИЛИ СтрНайти(СтрокаПериодичность, "годовая") > 0 Тогда
		Периодичность = Периодичность + 1;
	КонецЕсли;
	Если СтрНайти(СтрокаПериодичность, "2 раза") > 0 ИЛИ СтрНайти(СтрокаПериодичность, "полугод") > 0 Тогда
		 Периодичность = Периодичность + 2;
	КонецЕсли;
	Если СтрНайти(СтрокаПериодичность, "квартальная") > 0 Тогда
		 Периодичность = Периодичность + 4;
	КонецЕсли;
	Если СтрНайти(СтрокаПериодичность, "месячная") > 0 Тогда
		 Периодичность = Периодичность + 12;
	КонецЕсли;
	Если СтрНайти(СтрокаПериодичность, "декадная") > 0 Тогда
		 Периодичность = Периодичность + 36;
	КонецЕсли;
	Если СтрНайти(СтрокаПериодичность, "недельная") > 0 Тогда
		 Периодичность = Периодичность + 56;
	КонецЕсли;
	
	Возврат ?(Периодичность = 0, 1, Периодичность);
	
КонецФункции

#КонецОбласти

#КонецЕсли