#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;  
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РегистрНалоговогоУчетаПоНДФЛ");
	НастройкиВарианта.Описание =
		НСтр("ru = 'Форма ведения учета, предусмотренная пунктом 1 статьи 230 НК РФ.'");
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти
	
#Область СлужебныйПрограммныйИнтерфейс

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РегистрНалоговогоУчетаПоНДФЛ") Тогда
		
		ПечатаемыйДокумент = Неопределено;
		Если МассивОбъектов.Количество() > 1 Тогда
			ПечатаемыйДокумент = МассивОбъектов[1];
			МассивОбъектов.Удалить(1);
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РегистрНалоговогоУчетаПоНДФЛ",
			НСтр("ru = 'Регистр налогового учета по НДФЛ'"),
			ПечатаемыйДокумент);
						
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьРегистрНалоговогоУчетаПоНДФЛПоСотруднику") Тогда
						
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьРегистрНалоговогоУчетаПоНДФЛПоСотруднику",
			НСтр("ru = 'Регистр налогового учета по НДФЛ'"),
			ПечатьРегистраПоСотрудникам(МассивОбъектов, ОбъектыПечати), , );
						
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьРегистраПоСотрудникам(МассивОбъектов, ОбъектыПечати) 
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	ОтчетРегистрНалоговогоУчетаПоНДФЛ = Отчеты.РегистрНалоговогоУчетаПоНДФЛ.Создать();
	Отбор = ОтчетРегистрНалоговогоУчетаПоНДФЛ.КомпоновщикНастроек.Настройки.Отбор;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, Истина, МассивОбъектов, "ГоловнаяОрганизация", ТекущаяДатаСеанса());
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КадровыеДанныеСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГоловнаяОрганизация,
		|	ФизическоеЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ГоловнаяОрганизация") Цикл
		
		Отбор.Элементы.Очистить();
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "ГоловнаяОрганизация", ВидСравненияКомпоновкиДанных.Равно, Выборка.ГоловнаяОрганизация);
		
		ОтчетРегистрНалоговогоУчетаПоНДФЛ.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(
			"ГоловнаяОрганизацияСотрудников", Выборка.ГоловнаяОрганизация);
		
		ФизическиеЛицаОтчета = Новый Массив;
		Пока Выборка.Следующий() Цикл
			ФизическиеЛицаОтчета.Добавить(Выборка.ФизическоеЛицо);
		КонецЦикла;
		
		ПромежуточныйДокументРезультат = Новый ТабличныйДокумент;
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "ФизическоеЛицо", ВидСравненияКомпоновкиДанных.ВСписке, ФизическиеЛицаОтчета);
		ОтчетРегистрНалоговогоУчетаПоНДФЛ.СкомпоноватьРезультат(ПромежуточныйДокументРезультат);
		
		Если ПромежуточныйДокументРезультат.ВысотаТаблицы = 0 Тогда
			ДокументРезультат = ПромежуточныйДокументРезультат;
		Иначе
			
			Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ДокументРезультат.Вывести(ПромежуточныйДокументРезультат);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

#КонецОбласти

#КонецЕсли