#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеФормаР14001.Форма.Форма2014_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2014_1";
	Стр.ОписаниеФормы = "В редакции от 25.01.2012 приказ ФНС России № ММВ-7-6/25@";
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ПечатьСразу_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьМакет_Форма2014_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы) Экспорт
	Если Объект.ИмяФормы = "Форма2014_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы);
	КонецЕсли;
КонецФункции

Функция ДанныеУведомления(ЭкземплярУведомления) Экспорт
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЮридическийАдрес", "");
	СтруктураДанных.Вставить("ЮридическийАдресЗначенияПолей", "");
	СтруктураДанных.Вставить("ПрежнийОсновнойКодОКВЭД", "");
	СтруктураДанных.Вставить("ОсновнойКодОКВЭД", "");
	СтруктураДанных.Вставить("ДобавленныеКодыОКВЭД", "");
	СтруктураДанных.Вставить("УдаленныеКодыОКВЭД", "");
	СтруктураДанных.Вставить("СпособРегистрации", "");
	
	Если ЭкземплярУведомления.ИмяФормы = "Форма2014_1" Тогда
		
		ДанныеУведомления = ЭкземплярУведомления.ДанныеУведомления.Получить();
		
		Если ТипЗнч(ДанныеУведомления) <> Тип("Структура") Тогда
			Возврат СтруктураДанных;
		КонецЕсли;
		
		Если ДанныеУведомления.ДанныеУведомления.Свойство("ЛистБ") Тогда
			
			ЛистБ = ДанныеУведомления.ДанныеУведомления.ЛистБ;
			
			СтруктураАдреса = РаботаСАдресамиКлиентСервер.СтруктураКонтактнойИнформацииПоТипу(
				Перечисления.ТипыКонтактнойИнформации.Адрес);
			ЗаполнитьЗначенияСвойств(СтруктураАдреса, ЛистБ);
			
			Если ЛистБ.Свойство("КодРегиона") И ЗначениеЗаполнено(ЛистБ.КодРегиона) Тогда
				// В заявлении есть код региона, но нет наименования региона
				СтруктураАдреса.Регион = АдресныйКлассификатор.НаименованиеРегионаПоКоду(ЛистБ.КодРегиона);
			КонецЕсли;
			СвернутьЗначенияИСокращения(СтруктураАдреса);
			
			ЮридическийАдресЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(
				СтруктураАдреса,
				,
				Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			ЮридическийАдрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
				ЮридическийАдресЗначенияПолей,
				Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			СтруктураДанных.Вставить("ЮридическийАдрес", ЮридическийАдрес);
			СтруктураДанных.Вставить("ЮридическийАдресЗначенияПолей", ЮридическийАдресЗначенияПолей);
			
		КонецЕсли;
		
		Если ДанныеУведомления.ДанныеУведомления.Свойство("ЛистН1") Тогда
			
			КодОсновнойКодОКВЭД = "А01010000";
			
			ЛистН = ДанныеУведомления.ДанныеУведомления.ЛистН1;
			
			Если ЛистН.Свойство(КодОсновнойКодОКВЭД) Тогда
				СтруктураДанных.Вставить("ОсновнойКодОКВЭД", ЛистН[КодОсновнойКодОКВЭД]);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеУведомления.ДанныеУведомления.Свойство("ЛистН2") Тогда
			
			КодОсновнойКодОКВЭД = "А01010000";
			
			ЛистЛ = ДанныеУведомления.ДанныеУведомления.ЛистН2;
			
			Если ЛистЛ.Свойство(КодОсновнойКодОКВЭД) Тогда
				СтруктураДанных.Вставить("ПрежнийОсновнойКодОКВЭД", ЛистЛ[КодОсновнойКодОКВЭД]);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеУведомления.Свойство("МногострочнаяЧасть1") Тогда
			КодыОКВЭД = Новый Массив;
			Для Каждого СтрокаОКВЭД Из ДанныеУведомления.МногострочнаяЧасть1 Цикл
				КодыОКВЭД.Добавить(СтрокаОКВЭД["А01020000"]);
			КонецЦикла;
			СтруктураДанных.Вставить("ДобавленныеКодыОКВЭД", СтрСоединить(КодыОКВЭД, ";"));
		КонецЕсли;
		
		Если ДанныеУведомления.Свойство("МногострочнаяЧасть2") Тогда
			КодыОКВЭД = Новый Массив;
			Для Каждого СтрокаОКВЭД Из ДанныеУведомления.МногострочнаяЧасть2 Цикл
				КодыОКВЭД.Добавить(СтрокаОКВЭД["А01020000"]);
			КонецЦикла;
			СтруктураДанных.Вставить("УдаленныеКодыОКВЭД", СтрСоединить(КодыОКВЭД, ";"));
		КонецЕсли;
		
		Если ДанныеУведомления.ДанныеУведомления.Свойство("ЛистР") Тогда
			
			КодСпособаРегистрации = "Р05000000";
			
			ЛистР = ДанныеУведомления.ДанныеУведомления.ЛистР;
			
			СпособРегистрации = Неопределено;
			Если ЛистР.Свойство(КодСпособаРегистрации, СпособРегистрации) Тогда
				СтруктураДанных.Вставить("СпособРегистрации", СпособРегистрации);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда 
					НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		
		Если Стр.ИДНаименования = "ЛистН1" Или Стр.ИДНаименования = "ЛистН2" Тогда 
			Если Стр.ИДНаименования = "ЛистН1" Тогда 
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть1;
			Иначе
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть2;
			КонецЕсли;
			
			А01010000 = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000;
			Если Не ЗначениеЗаполнено(А01010000) Тогда 
				Продолжить;
			КонецЕсли;
			
			ПечатнаяФорма = Отчеты.РегламентированноеУведомлениеФормаР14001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(А01010000, "А01010000", ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
			
			ВсегоНапечатаноСтрок = 0;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда 
					Продолжить;
				КонецЕсли;
				
				Если ВсегоНапечатаноСтрок = 56 Тогда 
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					ВсегоНапечатаноСтрок = 0;
					НомСтр = НомСтр + 1;
					ПечатнаяФорма = Отчеты.РегламентированноеУведомлениеФормаР14001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+(ВсегоНапечатаноСтрок+1), ПечатнаяФорма.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
			КонецЦикла;
			
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		Иначе 
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы)
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьМакет_Форма2014_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы)
	НомСтр = НомСтр + 1;
	МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР14001.ПолучитьМакет(ИмяМакета);

	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(КЗ.Ключ) Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
			Иначе 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области);
			КонецЕсли;
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Функция ПечатьСразу_Форма2014_1(Объект)
	ПечатнаяФорма = СформироватьМакет_Форма2014_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(СведенияОтправки)
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда 
		ДатаФормированияФайла = Формат(Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)), Число(Сред(СведенияОтправки.ДатаДок, 4, 2)), Число(Лев(СведенияОтправки.ДатаДок, 2))), "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R14001_0000_0000_000000000000000_" + ДатаФормированияФайла + "_" + Строка(Новый УникальныйИдентификатор);
	Возврат Префикс;
КонецФункции

Процедура Проверить_Форма2014_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	
	Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетностьПереопределяемый.КраткоеНазваниеПрограммы());
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2014_1");
	ЗаполнитьДанными_Форма2014_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2014_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Процедура ДополнитьПараметры(Параметры)
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ2_4 Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.В0503040501) И ЗначениеЗаполнено(ПарамСтр.В0503040502) Тогда 
			ПарамСтр.Вставить("В05030405", ПарамСтр.В0503040501 + "-" + ПарамСтр.В0503040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ3_5 Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Г0503040501) И ЗначениеЗаполнено(ПарамСтр.Г0503040502) Тогда 
			ПарамСтр.Вставить("Г05030405", ПарамСтр.Г0503040501 + "-" + ПарамСтр.Г0503040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистД Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Д03050501) И ЗначениеЗаполнено(ПарамСтр.Д03050502) Тогда 
			ПарамСтр.Вставить("Д03050500", ПарамСтр.Д03050501 + "-" + ПарамСтр.Д03050502);
		КонецЕсли;
		Если ЗначениеЗаполнено(ПарамСтр.Д06050501) И ЗначениеЗаполнено(ПарамСтр.Д06050502) Тогда 
			ПарамСтр.Вставить("Д06050500", ПарамСтр.Д06050501 + "-" + ПарамСтр.Д06050502);
		КонецЕсли;
		Если ЗначениеЗаполнено(ПарамСтр.Д0702040501) И ЗначениеЗаполнено(ПарамСтр.Д0702040502) Тогда 
			ПарамСтр.Вставить("Д07020405", ПарамСтр.Д0702040501 + "-" + ПарамСтр.Д0702040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистД3_5 Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Д0503040501) И ЗначениеЗаполнено(ПарамСтр.Д0503040502) Тогда 
			ПарамСтр.Вставить("Д05030405", ПарамСтр.Д0503040501 + "-" + ПарамСтр.Д0503040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЕ3_4 Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Е040203040501) И ЗначениеЗаполнено(ПарамСтр.Е040203040502) Тогда 
			ПарамСтр.Вставить("Е0402030405", ПарамСтр.Е040203040501 + "-" + ПарамСтр.Е040203040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЕ5_7 Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Е0503040501) И ЗначениеЗаполнено(ПарамСтр.Е0503040502) Тогда 
			ПарамСтр.Вставить("Е05030405", ПарамСтр.Е0503040501 + "-" + ПарамСтр.Е0503040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЖ3_5 Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Ж0503040501) И ЗначениеЗаполнено(ПарамСтр.Ж0503040502) Тогда 
			ПарамСтр.Вставить("Ж05030405", ПарамСтр.Ж0503040501 + "-" + ПарамСтр.Ж0503040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистК Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.К03050501) И ЗначениеЗаполнено(ПарамСтр.К03050502) Тогда 
			ПарамСтр.Вставить("К03050500", ПарамСтр.К03050501 + "-" + ПарамСтр.К03050502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЛ Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Л09040501) И ЗначениеЗаполнено(ПарамСтр.Л09040502) Тогда 
			ПарамСтр.Вставить("Л09040500", ПарамСтр.Л09040501 + "-" + ПарамСтр.Л09040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистМ Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.М03050501) И ЗначениеЗаполнено(ПарамСтр.М03050502) Тогда 
			ПарамСтр.Вставить("М03050500", ПарамСтр.М03050501 + "-" + ПарамСтр.М03050502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистР Цикл 
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Р04040501) И ЗначениеЗаполнено(ПарамСтр.Р04040502) Тогда 
			ПарамСтр.Вставить("Р04040500", ПарамСтр.Р04040501 + "-" + ПарамСтр.Р04040502);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьДеревоСтраниц_Форма2014_1()
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 001";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист А";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаА";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Б";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаБ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В-1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаВ1";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ1";
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Листы В 2-4";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаВ2_4";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ2_4";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаВ2;Печать_Форма2014_1_СтраницаВ3;Печать_Форма2014_1_СтраницаВ4";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г 1-2";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаГ1_2";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ1_2";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаГ1;Печать_Форма2014_1_СтраницаГ2";
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Листы Г 3-5";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаГ3_5";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ3_5";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаГ3;Печать_Форма2014_1_СтраницаГ4;Печать_Форма2014_1_СтраницаГ5";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д 1,2,6-9";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаД";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаД1;Печать_Форма2014_1_СтраницаД2;Печать_Форма2014_1_СтраницаД6;Печать_Форма2014_1_СтраницаД7;Печать_Форма2014_1_СтраницаД8;Печать_Форма2014_1_СтраницаД9";
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Листы Д 3-5";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаД3_5";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД3_5";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаД3;Печать_Форма2014_1_СтраницаД4;Печать_Форма2014_1_СтраницаД5";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е-1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЕ1";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ1";
	
	Стр002 = Стр001.Строки.Добавить();
	Стр002.Наименование = "Листы Е-2";
	Стр002.ИндексКартинки = 1;
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Ложь;
	
	Стр002 = Стр002.Строки.Добавить();
	Стр002.Наименование = "Стр. 1";
	Стр002.ИндексКартинки = 1;
	Стр002.ИмяМакета = "Форма2014_1_СтраницаЕ2";
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Ложь;
	Стр002.УИД = Новый УникальныйИдентификатор;
	Стр002.ИДНаименования = "ЛистЕ2";
	
	Стр002 = Стр001.Строки.Добавить();
	Стр002.Наименование = "Листы Е 3-4";
	Стр002.ИндексКартинки = 1;
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Ложь;
	
	Стр002 = Стр002.Строки.Добавить();
	Стр002.Наименование = "Стр. 1";
	Стр002.ИндексКартинки = 1;
	Стр002.ИмяМакета = "Форма2014_1_СтраницаЕ3_4";
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Ложь;
	Стр002.УИД = Новый УникальныйИдентификатор;
	Стр002.ИДНаименования = "ЛистЕ3_4";
	Стр002.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ3;Печать_Форма2014_1_СтраницаЕ4";
	
	Стр002 = Стр001.Строки.Добавить();
	Стр002.Наименование = "Листы Е 5-7";
	Стр002.ИндексКартинки = 1;
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Ложь;
	
	Стр002 = Стр002.Строки.Добавить();
	Стр002.Наименование = "Стр. 1";
	Стр002.ИндексКартинки = 1;
	Стр002.ИмяМакета = "Форма2014_1_СтраницаЕ5_7";
	Стр002.Многостраничность = Истина;
	Стр002.Многострочность = Ложь;
	Стр002.УИД = Новый УникальныйИдентификатор;
	Стр002.ИДНаименования = "ЛистЕ5_7";
	Стр002.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ5;Печать_Форма2014_1_СтраницаЕ6;Печать_Форма2014_1_СтраницаЕ7";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Ж 1-2";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЖ1_2";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЖ1_2";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ1;Печать_Форма2014_1_СтраницаЖ2";
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Листы Ж 3-5";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЖ3_5";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЖ3_5";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ3;Печать_Форма2014_1_СтраницаЖ4;Печать_Форма2014_1_СтраницаЖ5";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист З";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЗ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЗ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист И";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаИ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы К";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаК";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистК";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаК1;Печать_Форма2014_1_СтраницаК2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Л";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЛ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЛ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЛ1;Печать_Форма2014_1_СтраницаЛ2;Печать_Форма2014_1_СтраницаЛ3";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы М";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаМ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистМ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаМ1;Печать_Форма2014_1_СтраницаМ2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Н-1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаН1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистН1";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть1");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Н-2";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаН2";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистН2";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть2");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы О";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаО";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистО";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаО1;Печать_Форма2014_1_СтраницаО2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист П";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаП";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистП";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Р";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаР";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистР";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаР1;Печать_Форма2014_1_СтраницаР2;Печать_Форма2014_1_СтраницаР3;Печать_Форма2014_1_СтраницаР4";
	
	Возврат ДеревоСтраниц;
КонецФункции

Функция СформироватьДеревоСтраниц(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2014_1" Тогда 
		Возврат СформироватьДеревоСтраниц_Форма2014_1();
	КонецЕсли;
КонецФункции

Функция СформироватьКонтейнерДляАвтозаполнения(ДанныеУведомления, ДанныеМногостраничныхРазделов, МногострочнаяЧасть1, МногострочнаяЧасть2)
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ДанныеУведомления Цикл 
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Контейнер.Вставить("МногострочнаяЧасть1", МногострочнаяЧасть1);
	Контейнер.Вставить("МногострочнаяЧасть2", МногострочнаяЧасть2);
	
	СтруктураДерева = Новый Соответствие;
	Для Каждого КЗ Из ДанныеМногостраничныхРазделов Цикл 
		Для Каждого Стр Из КЗ.Значение Цикл 
			СтруктураДерева[Стр.Значение.УИД] = Новый Структура("Раздел, Данные", КЗ.Ключ, ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Стр.Значение));
		КонецЦикла;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(ДанныеУведомления, ДанныеМногостраничныхРазделов);
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		Если КЗ.Значение.Данные.Свойство("УИДРодителя") Тогда 
			Родитель = СтруктураДерева[КЗ.Значение.Данные.УИДРодителя];
			Если Не Родитель.Данные.Свойство(КЗ.Значение.Раздел) Тогда 
				Родитель.Данные.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
			КонецЕсли;
			Родитель.Данные[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		ИначеЕсли Не Контейнер.Свойство(КЗ.Значение.Раздел) Тогда 
			Контейнер.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		КЗ.Значение.Данные.Удалить("УИД");
		КЗ.Значение.Данные.Удалить("УИДРодителя");
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		Если Контейнер.Свойство(КЗ.Значение.Раздел) Тогда 
			Контейнер[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

Функция СоздатьЗаполненноеУведомление(Параметры, СуществующийДокументСсылка = Неопределено) Экспорт
	ИмяФормы = Неопределено;
	Если Не Параметры.Свойство("ИмяФормы", ИмяФормы) Тогда 
		ИмяФормы = "Форма2014_1";
	КонецЕсли;
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	ИмяОтчета = "РегламентированноеУведомлениеФормаР14001";
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	РезультатКонтейнер2 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииСКонтейнеромМногострочныхБлоков(ВходящийКонтейнер, РезультатКонтейнер2);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			     Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения",          Параметры.ДополнительныеПараметры);
	
	Контейнер = СформироватьКонтейнерДляАвтозаполнения(РезультатКонтейнер1.ДанныеУведомления
														,РезультатКонтейнер1.ДанныеМногостраничныхРазделов
														,РезультатКонтейнер2.МногострочнаяЧасть1
														,РезультатКонтейнер2.МногострочнаяЧасть2);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево);
	
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
		И СуществующийДокументСсылка.Свойство("Ссылка")
		И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда 
		
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
		И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ИмяФормы = ИмяФормы;
		НовыйДок.ИмяОтчета = ИмяОтчета;
		НовыйДок.Дата = ТекущаяДатаСеанса();
		НовыйДок.ДатаПодписи = ТекущаяДатаСеанса();
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР14001;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ДанныеУведомления, ДанныеМногостраничныхРазделов, ДеревоСтраниц, МногострочнаяЧасть1, МногострочнаяЧасть2",
			РезультатКонтейнер1.ДанныеУведомления, РезультатКонтейнер1.ДанныеМногостраничныхРазделов,
			Дерево, РезультатКонтейнер2["МногострочнаяЧасть1"], РезультатКонтейнер2["МногострочнаяЧасть2"]);
			
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
КонецФункции

Процедура ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево)
	КУдалению = Новый Массив;
	Для Каждого КЗ Из РезультатКонтейнер1.ДанныеМногостраничныхРазделов Цикл
		КЗ.Значение.Очистить();
	КонецЦикла;
	
	Для Каждого КЗ Из Контейнер Цикл 
		Если РезультатКонтейнер1.ДанныеУведомления.Свойство(КЗ.Ключ) Тогда 
			ЗаполнитьЗначенияСвойств(РезультатКонтейнер1.ДанныеУведомления[КЗ.Ключ], КЗ.Значение);
		ИначеЕсли РезультатКонтейнер1.ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда 
			Для Каждого Стр Из КЗ.Значение Цикл 
				ВставляемыеДанные = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Стр.Значение);
				ВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				РезультатКонтейнер1.ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ВставляемыеДанные, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
	
	РезультатКонтейнер2.МногострочнаяЧасть1 = Контейнер.МногострочнаяЧасть1;
	РезультатКонтейнер2.МногострочнаяЧасть2 = Контейнер.МногострочнаяЧасть2;
	СформироватьДеревоСтраницПоДанным(Дерево, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
КонецПроцедуры

Процедура ДобавитьДочерниеСтраницы(ВставляемыеДанные, ДанныеМногостраничныхРазделов)
	КУдалению = Новый Массив;
	
	Для Каждого КЗ Из ВставляемыеДанные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("СписокЗначений")
			И ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда
			
			Для Каждого Стр Из КЗ.Значение Цикл
				ДочерниеВставляемыеДанные = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Стр.Значение);
				ДочерниеВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				ДочерниеВставляемыеДанные.Вставить("УИДРодителя", ВставляемыеДанные.УИД);
				ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ДочерниеВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ДочерниеВставляемыеДанные, ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДеревоСтраницПоДанным(ДеревоСтраниц, ДанныеМногостраничныхРазделов) Экспорт 
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 001";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист А";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаА";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Б";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаБ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В-1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистВ1"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаВ1";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистВ1";
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы В 2-4";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистВ2_4"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;

			Стр002Нов = Стр002.Строки.Добавить();
			Стр002Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр002Нов.ИндексКартинки = 1;
			Стр002Нов.ИмяМакета = "Форма2014_1_СтраницаВ2_4";
			Стр002Нов.Многостраничность = Истина;
			Стр002Нов.Многострочность = Ложь;
			Стр002Нов.УИД = СтрПодч.Значение.УИД;
			Стр002Нов.ИДНаименования = "ЛистВ2_4";
			Стр002Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаВ2;Печать_Форма2014_1_СтраницаВ3;Печать_Форма2014_1_СтраницаВ4";
		КонецЦикла;
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г 1-2";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистГ1_2"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаГ1_2";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистГ1_2";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаГ1;Печать_Форма2014_1_СтраницаГ2";
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Г 3-5";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистГ3_5"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;

			Стр002Нов = Стр002.Строки.Добавить();
			Стр002Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр002Нов.ИндексКартинки = 1;
			Стр002Нов.ИмяМакета = "Форма2014_1_СтраницаГ3_5";
			Стр002Нов.Многостраничность = Истина;
			Стр002Нов.Многострочность = Ложь;
			Стр002Нов.УИД = СтрПодч.Значение.УИД;
			Стр002Нов.ИДНаименования = "ЛистГ3_5";
			Стр002Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаГ3;Печать_Форма2014_1_СтраницаГ4;Печать_Форма2014_1_СтраницаГ5";
		КонецЦикла;
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д 1,2,6-9";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистД"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаД";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистД";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаД1;Печать_Форма2014_1_СтраницаД2;Печать_Форма2014_1_СтраницаД6;Печать_Форма2014_1_СтраницаД7;Печать_Форма2014_1_СтраницаД8;Печать_Форма2014_1_СтраницаД9";
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Д 3-5";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистД3_5"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;

			Стр002Нов = Стр002.Строки.Добавить();
			Стр002Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр002Нов.ИндексКартинки = 1;
			Стр002Нов.ИмяМакета = "Форма2014_1_СтраницаД3_5";
			Стр002Нов.Многостраничность = Истина;
			Стр002Нов.Многострочность = Ложь;
			Стр002Нов.УИД = СтрПодч.Значение.УИД;
			Стр002Нов.ИДНаименования = "ЛистД3_5";
			Стр002Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаД3;Печать_Форма2014_1_СтраницаД4;Печать_Форма2014_1_СтраницаД5";
		КонецЦикла;
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е-1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЕ1"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЕ1";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЕ1";
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Е-2";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистЕ2"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;

			Стр002Нов = Стр002.Строки.Добавить();
			Стр002Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр002Нов.ИндексКартинки = 1;
			Стр002Нов.ИмяМакета = "Форма2014_1_СтраницаЕ2";
			Стр002Нов.Многостраничность = Истина;
			Стр002Нов.Многострочность = Ложь;
			Стр002Нов.УИД = СтрПодч.Значение.УИД;
			Стр002Нов.ИДНаименования = "ЛистЕ2";
		КонецЦикла;
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Е 3-4";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистЕ3_4"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;

			Стр002Нов = Стр002.Строки.Добавить();
			Стр002Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр002Нов.ИндексКартинки = 1;
			Стр002Нов.ИмяМакета = "Форма2014_1_СтраницаЕ3_4";
			Стр002Нов.Многостраничность = Истина;
			Стр002Нов.Многострочность = Ложь;
			Стр002Нов.УИД = СтрПодч.Значение.УИД;
			Стр002Нов.ИДНаименования = "ЛистЕ3_4";
			Стр002Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ3;Печать_Форма2014_1_СтраницаЕ4";
		КонецЦикла;
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Е 5-7";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистЕ5_7"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;

			Стр002Нов = Стр002.Строки.Добавить();
			Стр002Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр002Нов.ИндексКартинки = 1;
			Стр002Нов.ИмяМакета = "Форма2014_1_СтраницаЕ5_7";
			Стр002Нов.Многостраничность = Истина;
			Стр002Нов.Многострочность = Ложь;
			Стр002Нов.УИД = СтрПодч.Значение.УИД;
			Стр002Нов.ИДНаименования = "ЛистЕ5_7";
			Стр002Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ5;Печать_Форма2014_1_СтраницаЕ6;Печать_Форма2014_1_СтраницаЕ7";
		КонецЦикла;
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Ж 1-2";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЖ1_2"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЖ1_2";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЖ1_2";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ1;Печать_Форма2014_1_СтраницаЖ2";
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Ж 3-5";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистЖ3_5"] Цикл 
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;

			Стр002Нов = Стр002.Строки.Добавить();
			Стр002Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр002Нов.ИндексКартинки = 1;
			Стр002Нов.ИмяМакета = "Форма2014_1_СтраницаЖ3_5";
			Стр002Нов.Многостраничность = Истина;
			Стр002Нов.Многострочность = Ложь;
			Стр002Нов.УИД = СтрПодч.Значение.УИД;
			Стр002Нов.ИДНаименования = "ЛистЖ3_5";
			Стр002Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ3;Печать_Форма2014_1_СтраницаЖ4;Печать_Форма2014_1_СтраницаЖ5";
		КонецЦикла;
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист З";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЗ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЗ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист И";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаИ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы К";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистК"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаК";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистК";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаК1;Печать_Форма2014_1_СтраницаК2";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Л";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЛ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЛ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЛ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЛ1;Печать_Форма2014_1_СтраницаЛ2;Печать_Форма2014_1_СтраницаЛ3";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы М";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистМ"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаМ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистМ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаМ1;Печать_Форма2014_1_СтраницаМ2";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Н-1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаН1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистН1";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть1");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Н-2";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаН2";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистН2";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть2");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы О";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистО"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаО";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистО";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаО1;Печать_Форма2014_1_СтраницаО2";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист П";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаП";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистП";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Р";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистР"] Цикл 
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаР";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистР";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаР1;Печать_Форма2014_1_СтраницаР2;Печать_Форма2014_1_СтраницаР3;Печать_Форма2014_1_СтраницаР4";
	КонецЦикла;
КонецПроцедуры

Процедура СвернутьЗначенияИСокращения(СтруктураАдреса)
	
	СловоСокращение = "Сокращение";
	ДлинаСловаСокращение = СтрДлина(СловоСокращение);
	
	Для Каждого КлючИЗначение Из СтруктураАдреса Цикл
		
		Если Прав(КлючИЗначение.Ключ, ДлинаСловаСокращение) = СловоСокращение Тогда 
			
			КлючБезСокращения = Лев(КлючИЗначение.Ключ, СтрДлина(КлючИЗначение.Ключ) - ДлинаСловаСокращение);
			
			Если СтруктураАдреса.Свойство(КлючБезСокращения) Тогда
				СтруктураАдреса[КлючБезСокращения] = СтрШаблон("%1 %2", СтруктураАдреса[КлючБезСокращения], КлючИЗначение.Значение);
				СтруктураАдреса[КлючИЗначение.Ключ] = "";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СохранитьДанныеПомощника(Уведомление, ДанныеПомощникаЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(Уведомление) Тогда
		Возврат;
	КонецЕсли;
	
	УведомлениеОбъект = Уведомление.ПолучитьОбъект();
	ДанныеУведомления = УведомлениеОбъект.ДанныеУведомления.Получить();
	Если ТипЗнч(ДанныеУведомления) = Тип("Структура") Тогда
		ДанныеУведомления.Вставить("ДанныеПомощникаЗаполнения", ДанныеПомощникаЗаполнения);
	КонецЕсли;
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
	Попытка
		УведомлениеОбъект.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
#КонецЕсли