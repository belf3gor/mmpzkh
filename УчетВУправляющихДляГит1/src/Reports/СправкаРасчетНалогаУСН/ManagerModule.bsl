#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Процедура используется подсистемой варианты отчетов
//
Процедура НастройкиОтчета(Настройки) Экспорт
	
	ВариантыНастроек = ВариантыНастроек();
	Для Каждого Вариант Из ВариантыНастроек Цикл
		Настройки.ОписаниеВариантов.Вставить(Вариант.Имя,Вариант.Представление);
	КонецЦикла;
	
КонецПроцедуры

Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	ВариантыНастроек = ВариантыНастроек();
	Для Каждого Вариант Из ВариантыНастроек Цикл
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты.Подсистемы.БухгалтерскийУчет, "");
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты.Подсистемы.БухгалтерскийИНалоговыйУчет, "");
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.БухгалтерияПредприятияПодсистемы.Подсистемы.ПростойИнтерфейс.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты, "");
	КонецЦикла;
	
КонецПроцедуры

Функция ВариантыНастроек() Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Новый Структура("Имя, Представление","РасчетНалогаУСН", "Расчет налога УСН"));
	
	Возврат Массив;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	Результат.Вставить("ИспользоватьПослеКомпоновкиМакета",  Ложь);
	Результат.Вставить("ИспользоватьПослеВыводаРезультата",  Истина);
	Результат.Вставить("ИспользоватьДанныеРасшифровки",      Ложь);
	Результат.Вставить("ИспользоватьПриВыводеЗаголовка",     Истина);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьНаборПоказателей() Экспорт
	
	НаборПоказателей = Новый Массив;
	НаборПоказателей.Добавить("БУ");
	НаборПоказателей.Добавить("НУ");
	НаборПоказателей.Добавить("ПР");
	НаборПоказателей.Добавить("ВР");
	
	Возврат НаборПоказателей;
	
КонецФункции

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт
	
	НачалоПериода = НачалоГода(ПараметрыОтчета.НачалоПериода);
	КонецПериода  = КонецКвартала(ПараметрыОтчета.КонецПериода);
	
	ЭтоКонецГода = КонецПериода = КонецГода(КонецПериода);
	
	ЧастиЗаголовка = Новый Массив;
	
	ЧастиЗаголовка.Добавить(НСтр("ru = 'Справка-расчет'"));
	ЧастиЗаголовка.Добавить(?(ЭтоКонецГода, НСтр("ru = 'налога УСН'"), НСтр("ru = 'авансового платежа по налогу УСН'")));
	ЧастиЗаголовка.Добавить(НСтр("ru = 'за'"));
	
	ЧастиЗаголовка.Добавить(
		БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода, Истина));
	
	Если ПараметрыОтчета.НалоговыйПериодРасширен Тогда
		ЧастиЗаголовка.Добавить("*");
	КонецЕсли;
	
	Возврат СтрСоединить(ЧастиЗаголовка, " ");
	
КонецФункции

Процедура ПриВыводеЗаголовка(ПараметрыОтчета, КомпоновщикНастроек, Результат) Экспорт
	
	Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
	ОбластьЗаголовок        = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьОписаниеНастроек = Макет.ПолучитьОбласть("ОписаниеНастроек");
	ОбластьОрганизация      = Макет.ПолучитьОбласть("Организация");
	
	//Организация
	ТекстОрганизация = БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(ПараметрыОтчета.Организация);
	ОбластьОрганизация.Параметры.НазваниеОрганизации = ТекстОрганизация;
	Результат.Вывести(ОбластьОрганизация);
	
	//Заголовок
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = "" + ПолучитьТекстЗаголовка(ПараметрыОтчета);
	Результат.Вывести(ОбластьЗаголовок);
	
	Результат.Область("R1:R" + Результат.ВысотаТаблицы).Имя = "Заголовок";
	
	// Единица измерения
	Если ПараметрыОтчета.Свойство("ВыводитьЕдиницуИзмерения")
		И ПараметрыОтчета.ВыводитьЕдиницуИзмерения Тогда
		ОбластьОписаниеЕдиницыИзмерения = Макет.ПолучитьОбласть("ОписаниеЕдиницыИзмерения");
		Результат.Вывести(ОбластьОписаниеЕдиницыИзмерения);
	КонецЕсли;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(ПараметрыОтчета.НачалоПериода));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецКвартала(ПараметрыОтчета.КонецПериода));
		
		ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоГода(ПараметрыОтчета.КонецПериода), ПараметрыОтчета.КонецПериода);
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПредставлениеПериода", ПредставлениеПериода);
	КонецЕсли;
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(ПараметрыОтчета, КомпоновщикНастроек);
	
	ПараметрыОтчета.ПоказательНУ = Истина;
	
	ОтображатьТорговыйСбор = (ПараметрыОтчета.ОбъектНалогообложения = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы
		И ПараметрыОтчета.ПлательщикТорговогоСбора);
	
	ИмяГруппировки = ?(ПараметрыОтчета.ОбъектНалогообложения = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы,
		"Доходы", "ДоходыМинусРасходы");
	Если ОтображатьТорговыйСбор Тогда
		ИмяГруппировки = ИмяГруппировки + "ПлательщикТорговогоСбора";
	КонецЕсли;
	
	МассивКолонок = ИменаКолонокСправкиРасчета(ПараметрыОтчета.ОбъектНалогообложения, ОтображатьТорговыйСбор);
	
	Таблица = НайтиПоИмени(КомпоновщикНастроек.Настройки.Структура,"ТаблицаОбъектНалогообложения");
	ГруппировкаОбъектНалогообложения   = НайтиПоИмени(Таблица.Строки,"Объект"+ИмяГруппировки);
	
	Группа = ГруппировкаОбъектНалогообложения.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
	Группа.Расположение = РасположениеПоляКомпоновкиДанных.ОтдельнаяКолонка;
	
	Для Каждого ИмяКолонки Из МассивКолонок Цикл
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(Группа, "" + ИмяКолонки);
	КонецЦикла;
	
	ГруппировкаОбъектНалогообложения.Использование = Истина;
	
	// Для плательщика торгового сбора на УСН-доходы выведем расчет суммы вычитаемого из налога сбора
	Если ОтображатьТорговыйСбор Тогда
		
		// Заголовок таблицы
		ГруппировкаВычитаемыйСборЗаголовок = НайтиПоИмени(КомпоновщикНастроек.Настройки.Структура, "ВычитаемыйТорговыйСборЗаголовок");
		ГруппировкаВычитаемыйСборЗаголовок.Использование = Истина;
		
		// Таблица
		Таблица = НайтиПоИмени(КомпоновщикНастроек.Настройки.Структура,"ТаблицаРасчетВычитаемогоТорговогоСбора");
		Таблица.Использование = Истина;
		
		ГруппировкаВычитаемыйСбор = НайтиПоИмени(Таблица.Строки, "ВычитаемыйТорговыйСбор");
		
		Группа = ГруппировкаВычитаемыйСбор.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
		Группа.Расположение = РасположениеПоляКомпоновкиДанных.ОтдельнаяКолонка;
		
		МассивКолонок = ИменаКолонокВычетаТорговогоСбора();
		
		Для Каждого ИмяКолонки Из МассивКолонок Цикл
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(Группа, "" + ИмяКолонки);
		КонецЦикла;
		
		ГруппировкаВычитаемыйСбор.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
	Если ПараметрыОтчета.НалоговыйПериодРасширен Тогда
		
		ОбластьСноска = Результат.Область(Результат.ВысотаТаблицы, 1, Результат.ВысотаТаблицы, 1);
		
		ОбластьСноска.Текст = ПояснениеРасширенныйНалоговыйПериод(
			ПараметрыОтчета.ДатаНачалаДеятельности, ПараметрыОтчета.КонецПериода);
		ОбластьСноска.Шрифт = Новый Шрифт(, 8);
		ОбластьСноска.ВысотаСтроки = 16;
		
	КонецЕсли;
	
	Результат.ФиксацияСверху = 0;
	Результат.ФиксацияСлева  = 0;
	
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиПоИмени(Структура, Имя)
	Группировка = Неопределено;
	Для каждого Элемент Из Структура Цикл
		Если ТипЗнч(Элемент) = Тип("ТаблицаКомпоновкиДанных") Тогда
			Если Элемент.Имя = Имя Тогда
				Возврат Элемент;
			КонецЕсли;	
		Иначе
			Если Элемент.Имя = Имя Тогда
				Возврат Элемент;
			КонецЕсли;	
			Для каждого Поле Из Элемент.ПоляГруппировки.Элементы Цикл
				Если Не ТипЗнч(Поле) = Тип("АвтоПолеГруппировкиКомпоновкиДанных") Тогда
					Если Поле.Поле = Новый ПолеКомпоновкиДанных(Имя) Тогда
						Возврат Элемент;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если Элемент.Структура.Количество() = 0 Тогда
				Продолжить;
			Иначе
				Группировка = НайтиПоИмени(Элемент.Структура, Имя);
				Если Не Группировка = Неопределено Тогда
					Возврат	Группировка;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Группировка;
	
КонецФункции

Функция ИменаКолонокСправкиРасчета(ОбъектНалогообложения, ОтображатьТорговыйСбор = Ложь)
	
	МассивИмен = Новый Массив;
	
	Если ОбъектНалогообложения = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
		
		МассивИмен.Добавить("Доходы");
		МассивИмен.Добавить("СтавкаНалогаУСН");
		МассивИмен.Добавить("НалогВсего");
		МассивИмен.Добавить("ПроцентУменьшенияНалога");
		МассивИмен.Добавить("РасходыУменьшающиеНалог");
		МассивИмен.Добавить("УменьшениеНалогаФакт");
		Если ОтображатьТорговыйСбор Тогда
			МассивИмен.Добавить("ТорговыйСборУменьшающийНалог");
		КонецЕсли;
		МассивИмен.Добавить("НалогИсчисленныйВсего");
		МассивИмен.Добавить("АвансовыеПлатежи");
		МассивИмен.Добавить("НалогКУплате");
		МассивИмен.Добавить("НалогКУменьшению");
		
	ИначеЕсли ОбъектНалогообложения = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
		
		МассивИмен.Добавить("Доходы");
		МассивИмен.Добавить("Расходы");
		МассивИмен.Добавить("ПеренесенныеУбытки");
		МассивИмен.Добавить("НалоговаяБаза");
		МассивИмен.Добавить("СтавкаНалогаУСН");
		МассивИмен.Добавить("НалогИсчисленныйВсего");
		МассивИмен.Добавить("МинимальныйНалог");
		МассивИмен.Добавить("АвансовыеПлатежи");
		МассивИмен.Добавить("НалогКУплате");
		МассивИмен.Добавить("НалогКУменьшению");
		
	КонецЕсли;
	
	Возврат МассивИмен;
	
КонецФункции

Функция ИменаКолонокВычетаТорговогоСбора()
	
	МассивИмен = Новый Массив;
	
	МассивИмен.Добавить("Доходы");
	МассивИмен.Добавить("СтавкаНалогаУСН");
	МассивИмен.Добавить("НалогВсего");
	МассивИмен.Добавить("ПроцентУменьшенияНалога");
	МассивИмен.Добавить("РасходыУменьшающиеНалог");
	МассивИмен.Добавить("УменьшениеНалогаФакт");
	МассивИмен.Добавить("НалогИсчисленныйВсего");
	МассивИмен.Добавить("УплаченныйТорговыйСбор");
	МассивИмен.Добавить("ТорговыйСборУменьшающийНалог");
	
	Возврат МассивИмен;
	
КонецФункции

Функция ПояснениеРасширенныйНалоговыйПериод(ДатаРегистрации, КонецПериодаОтчета)
	
	ШаблонПояснения = НСтр("ru = '* %1 рассчитывается за %2 период с даты регистрации %3 по %4 (п.2 ст. 55 НК РФ)'");
	
	ЭтоНалоговыйПериод = КонецКвартала(КонецПериодаОтчета) = КонецГода(КонецПериодаОтчета);
	
	ФорматнаяСтрокаПериода = "ДФ=dd.MM.yyyy";
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПояснения,
		?(ЭтоНалоговыйПериод, НСтр("ru = 'Налог'"), НСтр("ru = 'Авансовый платеж'")),
		?(ЭтоНалоговыйПериод, НСтр("ru = 'налоговый'"), НСтр("ru = 'отчетный'")),
		Формат(ДатаРегистрации, ФорматнаяСтрокаПериода),
		Формат(КонецКвартала(КонецПериодаОтчета), ФорматнаяСтрокаПериода));
	
КонецФункции

#КонецОбласти

#КонецЕсли