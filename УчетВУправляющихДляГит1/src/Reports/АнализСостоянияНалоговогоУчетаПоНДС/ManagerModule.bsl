#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьПриВыводеЗаголовка",     Истина);
	Результат.Вставить("ИспользоватьДанныеРасшифровки",      Ложь);
	Результат.Вставить("ИспользоватьВнешниеНаборыДанных",    Ложь);
	Результат.Вставить("ИспользоватьПривилегированныйРежим", Ложь);

	Возврат Результат;
							
КонецФункции		

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт 
	
	ЗаголовокОтчета = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.ОрганизацияРасшифровки) Тогда		
		ЗаголовокОтчета = ЗаголовокОтчета + " " + БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(ПараметрыОтчета.ОрганизацияРасшифровки, Ложь);		
	КонецЕсли;
	
	Возврат ЗаголовокОтчета;
	
КонецФункции	

Процедура ПриВыводеЗаголовка(ПараметрыОтчета, КомпоновщикНастроек, Результат) Экспорт 
	
	ИдентификаторМакета = ПараметрыОтчета.КоллекцияНастроек["ИдентификаторМакета"];
	Если ИдентификаторМакета = "РасшифровкаНачислениеРеализация" Тогда
		ТекстЗаголовок = "Начисления по реализации";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеАвансыПолученные" Тогда
		ТекстЗаголовок = "Начисления по авансам полученным";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеИсполнениеОНА"  Тогда
		ТекстЗаголовок = "Начисления при исполнении обязанностей налогового агента";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеВосстановлениеСВыданныхАвансов" Тогда
		ТекстЗаголовок = "Восстановление с авансов выданных";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеСМРХозСпособом"  Тогда
		ТекстЗаголовок = "Начисления при выполнении строительно-монтажных работ хоз. способом";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетПриобретенныеЦенности" Тогда
		ТекстЗаголовок = "Вычет по приобретенным ценностям	";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетИсполнениеОНА" Тогда
		ТекстЗаголовок = "Вычет при исполнении обязанностей налогового агента";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетСАвансовПолученных"  Тогда
		ТекстЗаголовок = "Вычет с авансов полученных";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетСАвансовВыданных" Тогда
		ТекстЗаголовок = "Вычет с авансов выданных";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеРеализацияУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Начисления по реализации";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеАвансыПолученныеУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Начисления по авансам полученным";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Восстановление с авансов выданных";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеДругиеОперацииУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Начисления по прочим операциям";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетПоПриобретеннымЦенностямУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Вычет по приобретенным ценностям";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетАвансыВыданныеУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Вычет с авансов выданных";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетСАвансовПолученныхУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Вычет с авансов полученных";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетДругиеОперацииУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = "Вычет по прочим операциям";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетПоПриобретеннымЦенностям0" Тогда
		ТекстЗаголовок = "Вычет по приобретенным ценностям, реализованным по ставке 0%";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетИсполнениеОНА0" Тогда
		ТекстЗаголовок = "Вычет при исполнении обязанностей налогового агента при реализации по ставке 0%";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеРеализация0" Тогда
		ТекстЗаголовок = "Начисления по реализации по ставке 0%";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеВосстановлениеДругиеОперации" Тогда
		ТекстЗаголовок = "Восстановление НДС по прочим операциям";	
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеНеОтражаетсяВКнигеПродаж" Тогда
		ТекстЗаголовок = "Начисления, не отражающиеся в книге продаж";	
	Иначе 
		ТекстЗаголовок = "Не задан заголовок";
	КонецЕсли;	
	
КонецПроцедуры

Процедура СформироватьКарту(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	ВидКарты    = СтрЗаменить(ПараметрыОтчета.ВидКарты, "82", "");
	УчетНДС2012 = ПараметрыОтчета.УчетНДС2012;
	
	Запрос         = ПолучитьПараметрыЗапроса(ПараметрыОтчета);
	РезультатСхема = ПолучитьМакет(ВидКарты);
	ЭлементыСхемы  = РезультатСхема.ЭлементыГрафическойСхемы;
	
	ВыводитьПояснениеОшибок = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ВидКарты = "УпрощенныйУчетНДС" Тогда
		
		//	Получение необходимых наборов
		
		//	1 - НДС НАЧИСЛЕННЫЙ
		
		//	1.1 - Начисления по реализации
		НачислениеРеализация = ПолучитьНаборДанныхНачислениеРеализацияУпрощенныйУчетНДС(Запрос);
		
		Запрос.Текст = "УНИЧТОЖИТЬ ВТСоставКнигиПродаж";
		Запрос.Выполнить();
		
		//	1.2 - Начисления по авансам полученным
		НачислениеАвансыПолученные = ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС(Запрос);
		//	1.3 - Восстановление (начисление) по ранее выданным авансам
		НачислениеВосстановлениеСАвансовВыданных = ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС(Запрос);
		//	1.4 - Начисления по прочим операциям
		НачислениеДругиеОперации = ПолучитьНаборДанныхНачислениеДругиеОперацииУпрощенныйУчетНДС(Запрос);
		
		Запрос.Текст = "УНИЧТОЖИТЬ ВТОперацииСОшибками";
		Запрос.Выполнить();
		
		//	2 - НДС ВЫЧЕТЫ
		
		//	2.1 - Вычет по приобретенным ценностям
		ВычетПоПриобретеннымЦенностям = ПолучитьНаборДанныхВычетПоПриобретеннымЦенностямУпрощенныйУчетНДС(Запрос);
		//	2.2 - Вычет с авансов выданных
		ВычетАвансыВыданные = ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС(Запрос);
		//	2.3 - Вычет с авансов полученных (восстановление)
		ВычетСАвансовПолученных = ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС(Запрос);
		//	2.4 - Вычеты по прочим операциям
		ВычетДругиеОперации = ПолучитьНаборДанныхВычетДругиеОперацииУпрощенныйУчетНДС(Запрос);
		
		СуммаВсехНачислений = НачислениеРеализация.Включенные + НачислениеВосстановлениеСАвансовВыданных.Включенные
			+ НачислениеАвансыПолученные.Включенные + НачислениеДругиеОперации.Включенные;
		
		СуммаВсехВычетов = ВычетПоПриобретеннымЦенностям.Включенные + ВычетСАвансовПолученных.Включенные
			+ ВычетАвансыВыданные.Включенные + ВычетДругиеОперации.Включенные;
		
		//	Вывод параметров на карту
		
		//	Начисления по реализации
		ЭлементыСхемы.НачислениеРеализацияВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеРеализация.Включенные,
			НачислениеРеализация.ИмеютсяЗаписи);
		ЭлементыСхемы.НачислениеРеализацияНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеРеализация.НеВключенные,
			НачислениеРеализация.ИмеютсяЗаписи);
		
		
		Если НачислениеРеализация.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.Реализация.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Авансы полученные
		ЭлементыСхемы.АвансыПолученныеВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.Включенные,
			НачислениеАвансыПолученные.ИмеютсяЗаписи);
		ЭлементыСхемы.АвансыПолученныеНевключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.НеВключенные,
			НачислениеАвансыПолученные.ИмеютсяЗаписи);
		
		Если НачислениеАвансыПолученные.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыПолученныеНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Восстановление (начисление) по ранее выданным авансам
		ЭлементыСхемы.НачисленияВосстановлениеПоАвансамВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.Включенные,
			НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
		ЭлементыСхемы.НачисленияВосстановлениеПоАвансамНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.НеВключенные,
			НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
		
		Если НачислениеВосстановлениеСАвансовВыданных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыВыданныеНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Начисления по другим операциям
		ЭлементыСхемы.НачисленияДругиеОперацииВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеДругиеОперации.Включенные,
			НачислениеДругиеОперации.ИмеютсяЗаписи);
		
		Если НачислениеДругиеОперации.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ПрочиеОперацииНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		
		//	Вычет НДС по приобретенным ценностям
		ЭлементыСхемы.ВычетПриобретенныеЦенностиВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.Включенные,
			ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетПриобретенныеЦенностиНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.НеВключенные,
			ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
		
		Если ВычетПоПриобретеннымЦенностям.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ПриобретенныеЦенности.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет с авансов выданных
		ЭлементыСхемы.ВычетСАвансовВыданныхВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетАвансыВыданные.Включенные,
			ВычетАвансыВыданные.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетСАвансовВыданныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетАвансыВыданные.НеВключенные,
			ВычетАвансыВыданные.ИмеютсяЗаписи);
		
		Если ВычетАвансыВыданные.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыВыданныеВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет с авансов полученных (восстановление)
		ЭлементыСхемы.ВычетСАвансовПолученныхВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.Включенные,
			ВычетСАвансовПолученных.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетСАвансовПолученныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.НеВключенные,
			ВычетСАвансовПолученных.ИмеютсяЗаписи);
		
		Если ВычетСАвансовПолученных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыПолученныеВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет по другим операциям
		ЭлементыСхемы.ВычетДругиеОперацииВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетДругиеОперации.Включенные,
			ВычетДругиеОперации.ИмеютсяЗаписи);
		
		Если ВычетДругиеОперации.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ПрочиеОперацииВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		ВыводитьПояснениеОшибок = ВычетДругиеОперации.Свойство("НаличиеОшибок")
									ИЛИ ВычетАвансыВыданные.Свойство("НаличиеОшибок")
									ИЛИ ВычетСАвансовПолученных.Свойство("НаличиеОшибок")
									ИЛИ ВычетПоПриобретеннымЦенностям.Свойство("НаличиеОшибок")
									ИЛИ НачислениеДругиеОперации.Свойство("НаличиеОшибок")
									ИЛИ НачислениеВосстановлениеСАвансовВыданных.Свойство("НаличиеОшибок")
									ИЛИ НачислениеАвансыПолученные.Свойство("НаличиеОшибок")
									ИЛИ НачислениеРеализация.Свойство("НаличиеОшибок")
									ИЛИ Ложь;
		
	ИначеЕсли ВидКарты = "УчетСРегламентнымиДокументами" Тогда
		
		//	Получение необходимых наборов
		
		
		//	1 - НДС НАЧИСЛЕННЫЙ
		
		//	1.1 - Начисления по реализации
		НачислениеРеализация = ПолучитьНаборДанныхНачислениеРеализация(Запрос);
		
		//	1.2 - Начисления по авансам полученным
		НачислениеАвансыПолученные = ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		
		//	1.3 - Начисления при исполнении обязанностей налогового агента
		НачислениеИсполнениеОНА = ПолучитьНаборДанныхНачислениеНалоговыйАгент(Запрос);
		
		//	1.4 - Восстановление (начисление) по ранее выданным авансам
		НачислениеВосстановлениеСАвансовВыданных = ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		
		//	1.5 - Начисления при выполнении СМР хоз. способом
		НачислениеСМРХозСпособом = ПолучитьНаборДанныхНачислениеСМРХозСпособом(Запрос);
		
		//	2 - НДС ВЫЧЕТЫ
		
		Запрос.Текст = "УНИЧТОЖИТЬ ВТОперацииСОшибками";
		Запрос.Выполнить();
		
		//	2.1 - Вычет по приобретенным ценностям
		ВычетПоПриобретеннымЦенностям = ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям(
			Запрос, ПараметрыОтчета.ТолькоПоказателиДляРасчета);
		
		//	2.2 - Вычет при исполнении обязанностей налогового агента
		ВычетИсполнениеОНА = ПолучитьНаборДанныхВычетНалоговыйАгент(Запрос);
		
		//	2.3 - Вычет с авансов полученных (восстановление)
		ВычетСАвансовПолученных = ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		
		//	2.4 - Вычет с авансов выданных
		ВычетСАвансовВыданных   = ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		
		//	Итоги
		
		СуммаВсехНачислений = НачислениеРеализация.Включенные + НачислениеАвансыПолученные.Включенные + НачислениеИсполнениеОНА.Включенные
			+ НачислениеВосстановлениеСАвансовВыданных.Включенные + НачислениеСМРХозСпособом.Включенные;
		
		СуммаВсехВычетов    = ВычетПоПриобретеннымЦенностям.Включенные + ВычетИсполнениеОНА.Включенные + ВычетСАвансовПолученных.Включенные
			+ ВычетСАвансовВыданных.Включенные + ВычетПоПриобретеннымЦенностям.ПеренесенныеВычеты;
		
		//	Вывод параметров на карту
		
		//	Начисления по реализации
		ЭлементыСхемы.НачислениеРеализацияВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеРеализация.Включенные,
			НачислениеРеализация.ИмеютсяЗаписи);
		ЭлементыСхемы.НачислениеРеализацияНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеРеализация.НеВключенные,
			НачислениеРеализация.ИмеютсяЗаписи);
		
		Если НачислениеРеализация.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.Реализация.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Авансы полученные
		ЭлементыСхемы.АвансыПолученныеВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.Включенные,
			НачислениеАвансыПолученные.ИмеютсяЗаписи);
		ЭлементыСхемы.АвансыПолученныеНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.НеВключенные,
			НачислениеАвансыПолученные.ИмеютсяЗаписи);
		
		Если НачислениеАвансыПолученные.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыПолученныеНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Восстановление (начисление) по ранее выданным авансам
		ЭлементыСхемы.НачисленияВосстановлениеПоАвансамВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.Включенные,
			НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
		ЭлементыСхемы.НачисленияВосстановлениеПоАвансамНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.НеВключенные,
			НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
		
		Если НачислениеВосстановлениеСАвансовВыданных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыВыданныеНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Начисления при исполнении обязанностей налогового агента
		ЭлементыСхемы.НачисленияИсполнениеОНАВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеИсполнениеОНА.Включенные,
			НачислениеИсполнениеОНА.ИмеютсяЗаписи);
		ЭлементыСхемы.НачисленияИсполнениеОНАНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеИсполнениеОНА.НеВключенные,
			НачислениеИсполнениеОНА.ИмеютсяЗаписи);
		
		Если НачислениеИсполнениеОНА.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.НалоговыйАгентНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Начисление НДС при строительно-монтажных работах хоз. способом
		ЭлементыСхемы.НачислениеСМРХозСпособомВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеСМРХозСпособом.Включенные,
			НачислениеСМРХозСпособом.ИмеютсяЗаписи);
		ЭлементыСхемы.НачислениеСМРХозСпособомНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеСМРХозСпособом.НеВключенные,
			НачислениеСМРХозСпособом.ИмеютсяЗаписи);
		
		Если НачислениеСМРХозСпособом.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ВыполнениеСМР.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет НДС по приобретенным ценностям
		ЭлементыСхемы.ВычетПриобретенныеЦенностиВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.Включенные,
			ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетПриобретенныеЦенностиНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.НеВключенные,
			ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
		
		Если ВычетПоПриобретеннымЦенностям.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ПриобретенныеЦенности.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет с авансов выданных
		ЭлементыСхемы.ВычетСАвансовВыданныхВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетСАвансовВыданных.Включенные,
			ВычетСАвансовВыданных.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетСАвансовВыданныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовВыданных.НеВключенные,
			ВычетСАвансовВыданных.ИмеютсяЗаписи);
		
		Если ВычетСАвансовВыданных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыВыданныеВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет с авансов полученных (восстановление)
		ЭлементыСхемы.ВычетСАвансовПолученныхВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.Включенные,
			ВычетСАвансовПолученных.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетСАвансовПолученныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.НеВключенные,
			ВычетСАвансовПолученных.ИмеютсяЗаписи);
		
		Если ВычетСАвансовПолученных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыПолученныеВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет при исполнении обязанностей налогового агента
		ЭлементыСхемы.ВычетИсполнениеОНАВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА.Включенные,
			ВычетИсполнениеОНА.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетИсполнениеОНАНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА.НеВключенные,
			ВычетИсполнениеОНА.ИмеютсяЗаписи);
		
		Если ВычетИсполнениеОНА.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.НалоговыйАгентВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		ВыводитьПояснениеОшибок = ВычетИсполнениеОНА.Свойство("НаличиеОшибок") 
									ИЛИ ВычетСАвансовПолученных.Свойство("НаличиеОшибок")
									ИЛИ	ВычетСАвансовВыданных.Свойство("НаличиеОшибок")
									ИЛИ ВычетПоПриобретеннымЦенностям.Свойство("НаличиеОшибок")
									ИЛИ НачислениеСМРХозСпособом.Свойство("НаличиеОшибок")
									ИЛИ НачислениеИсполнениеОНА.Свойство("НаличиеОшибок")
									ИЛИ НачислениеВосстановлениеСАвансовВыданных.Свойство("НаличиеОшибок")
									ИЛИ НачислениеАвансыПолученные.Свойство("НаличиеОшибок")
									ИЛИ НачислениеРеализация.Свойство("НаличиеОшибок")
									ИЛИ Ложь;
		
	ИначеЕсли ВидКарты = "СложныйУчетНДС" Тогда
		
		//	Получение необходимых наборов
		
		//	1 - НДС НАЧИСЛЕННЫЙ
		
		//	1.1 - Начисления по реализации
		НачислениеРеализация = ПолучитьНаборДанныхНачислениеРеализация(Запрос);
		
		//	1.2 - Авансы полученные
		НачислениеАвансыПолученные = ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		
		//	1.3 - Начисления при исполнении обязанностей налогового агента
		НачислениеИсполнениеОНА = ПолучитьНаборДанныхНачислениеНалоговыйАгент(Запрос);
		
		//	1.4 - Восстановление (начисление) по ранее выданным авансам
		НачислениеВосстановлениеСАвансовВыданных = ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		
		//	1.5 - Начисления при выполнении СМР хоз. способом
		НачислениеСМРХозСпособом = ПолучитьНаборДанныхНачислениеСМРХозСпособом(Запрос);
		//	1.6 - Начисления по реализации по ставке 0%
		НачислениеРеализация0 = ПолучитьНаборДанныхНачислениеРеализация0(Запрос);
		//	1.7 - Восстановление по другим операциям
		НачислениеВосстановлениеДругиеОперации = ПолучитьНаборДанныхНачислениеВосстановлениеДругиеОперации(Запрос);
		//	1.8 - Операции, не отражающиеся в книге продаж
		НачислениеНеОтражаетсяВКнигеПродаж = ПолучитьНаборДанныхНачислениеНеОтражаетсяВКнигеПродаж(Запрос);
		
		//	2 - НДС ВЫЧЕТЫ
		
		Запрос.Текст = "УНИЧТОЖИТЬ ВТОперацииСОшибками";
		Запрос.Выполнить();
		
		//	2.1 - Вычет по приобретенным ценностям
		ВычетПоПриобретеннымЦенностям = ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям(Запрос);
		//	2.2 - Вычет при исполнении обязанностей налогового агента
		ВычетИсполнениеОНА = ПолучитьНаборДанныхВычетНалоговыйАгент(Запрос);
				
		//	2.3 - Вычет с авансов полученных (восстановление)
		ВычетСАвансовПолученных = ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		//	2.4 - Вычет с авансов выданных
		ВычетСАвансовВыданных   = ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС(Запрос, УчетНДС2012);
		
		//	2.5 - Вычет по приобретенным ценностям по ставке 0%
		ВычетПоПриобретеннымЦенностям0 = ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям0(Запрос);
		//	2.6 - Вычет при исполнении обязанностей налогого агента по ставке 0%
		ВычетИсполнениеОНА0 = ПолучитьНаборДанныхВычетНалоговыйАгент0(Запрос);
		//	Итоги
		
		СуммаВсехНачислений = НачислениеРеализация.Включенные + НачислениеАвансыПолученные.Включенные + НачислениеИсполнениеОНА.Включенные
			+ НачислениеВосстановлениеСАвансовВыданных.Включенные + НачислениеСМРХозСпособом.Включенные + НачислениеРеализация0.Включенные
			+ НачислениеВосстановлениеДругиеОперации.Включенные;
		
		СуммаВсехВычетов    = ВычетПоПриобретеннымЦенностям.Включенные + ВычетИсполнениеОНА.Включенные + ВычетСАвансовПолученных.Включенные
			+ ВычетСАвансовВыданных.Включенные + ВычетПоПриобретеннымЦенностям0.Включенные + ВычетИсполнениеОНА0.Включенные;
		
		//	Вывод параметров на карту
		
		//	Начисления по реализации
		ЭлементыСхемы.НачислениеРеализацияВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеРеализация.Включенные,
			НачислениеРеализация.ИмеютсяЗаписи);
		ЭлементыСхемы.НачислениеРеализацияНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеРеализация.НеВключенные,
			НачислениеРеализация.ИмеютсяЗаписи);
		
		Если НачислениеРеализация.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.Реализация.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Авансы полученные
		ЭлементыСхемы.АвансыПолученныеВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.Включенные,
			НачислениеАвансыПолученные.ИмеютсяЗаписи);
		ЭлементыСхемы.АвансыПолученныеНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.НеВключенные,
			НачислениеАвансыПолученные.ИмеютсяЗаписи);
		
		
		Если НачислениеАвансыПолученные.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыПолученныеНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Восстановление (начисление) по ранее выданным авансам
		ЭлементыСхемы.НачисленияВосстановлениеПоАвансамВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.Включенные,
			НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
		ЭлементыСхемы.НачисленияВосстановлениеПоАвансамНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.НеВключенные,
			НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
		
		Если НачислениеВосстановлениеСАвансовВыданных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыВыданныеНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Начисления при исполнении обязанностей налогового агента
		ЭлементыСхемы.НачисленияИсполнениеОНАВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеИсполнениеОНА.Включенные,
			НачислениеИсполнениеОНА.ИмеютсяЗаписи);
		ЭлементыСхемы.НачисленияИсполнениеОНАНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеИсполнениеОНА.НеВключенные,
			НачислениеИсполнениеОНА.ИмеютсяЗаписи);
		
		Если НачислениеИсполнениеОНА.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.НалоговыйАгентНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Начисление НДС при строительно-монтажных работах хоз. способом
		ЭлементыСхемы.НачислениеСМРХозСпособомВключенные.Наименование 	= ПодготовитьПоказательКВыводу(НачислениеСМРХозСпособом.Включенные,
			НачислениеСМРХозСпособом.ИмеютсяЗаписи);
		ЭлементыСхемы.НачислениеСМРХозСпособомНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеСМРХозСпособом.НеВключенные,
			НачислениеСМРХозСпособом.ИмеютсяЗаписи);
		
		Если НачислениеСМРХозСпособом.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ВыполнениеСМР.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Начисления по реализации под 0%
		ЭлементыСхемы.НачислениеРеализация0Включенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеРеализация0.Включенные,
			НачислениеРеализация0.ИмеютсяЗаписи);
		ЭлементыСхемы.НачислениеРеализация0НеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеРеализация0.НеВключенные,
			НачислениеРеализация0.ИмеютсяЗаписи);
		
		Если НачислениеРеализация0.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.Реализация0.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Начисление по восстановлению НДС по прочим операциям
		ЭлементыСхемы.НачислениеВосстановлениеДругиеОперацииВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеДругиеОперации.Включенные,
			НачислениеВосстановлениеДругиеОперации.ИмеютсяЗаписи);
		ЭлементыСхемы.НачислениеВосстановлениеДругиеОперацииНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеДругиеОперации.НеВключенные,
			НачислениеВосстановлениеДругиеОперации.ИмеютсяЗаписи);
		
		Если НачислениеВосстановлениеДругиеОперации.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ПрочиеОперацииНачисление.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Операции, не отражающиеся в книге продаж
		ЭлементыСхемы.НачислениеНеОтражаютсяВКнигеПродаж.Наименование = ПодготовитьПоказательКВыводу(НачислениеНеОтражаетсяВКнигеПродаж.Включенные, 
			НачислениеНеОтражаетсяВКнигеПродаж.ИмеютсяЗаписи);
		
		//	Вычет НДС по приобретенным ценностям
		ЭлементыСхемы.ВычетПриобретенныеЦенностиВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.Включенные,
			ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетПриобретенныеЦенностиНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.НеВключенные,
			ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
		
		Если ВычетПоПриобретеннымЦенностям.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ПриобретенныеЦенности.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет с авансов выданных
		ЭлементыСхемы.ВычетСАвансовВыданныхВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетСАвансовВыданных.Включенные,
			ВычетСАвансовВыданных.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетСАвансовВыданныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовВыданных.НеВключенные,
			ВычетСАвансовВыданных.ИмеютсяЗаписи);
		
		Если ВычетСАвансовВыданных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыВыданныеВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет с авансов полученных (восстановление)
		ЭлементыСхемы.ВычетСАвансовПолученныхВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.Включенные,
			ВычетСАвансовПолученных.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетСАвансовПолученныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.НеВключенные,
			ВычетСАвансовПолученных.ИмеютсяЗаписи);
		
		Если ВычетСАвансовПолученных.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.АвансыПолученныеВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет при исполнении обязанностей налогового агента
		ЭлементыСхемы.ВычетИсполнениеОНАВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА.Включенные,
			ВычетИсполнениеОНА.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетИсполнениеОНАНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА.НеВключенные,
			ВычетИсполнениеОНА.ИмеютсяЗаписи);
		
		Если ВычетИсполнениеОНА.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.НалоговыйАгентВычет.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет по приобретенным ценностям, реализованным по ставке 0%
		ЭлементыСхемы.ВычетПриобретенныеЦенности0Включенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям0.Включенные,
			ВычетПоПриобретеннымЦенностям0.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетПриобретенныеЦенности0НеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям0.НеВключенные,
			ВычетПоПриобретеннымЦенностям0.ИмеютсяЗаписи);
		
		Если ВычетПоПриобретеннымЦенностям0.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.ПриобретенныеЦенности0.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		//	Вычет при исполнении ОНА под 0%
		ЭлементыСхемы.ВычетИсполнениеОНА0Включенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА0.Включенные,
			ВычетИсполнениеОНА0.ИмеютсяЗаписи);
		ЭлементыСхемы.ВычетИсполнениеОНА0НеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА0.НеВключенные,
			ВычетИсполнениеОНА0.ИмеютсяЗаписи);
		
		Если ВычетИсполнениеОНА0.Свойство("НаличиеОшибок") Тогда
			ЭлементыСхемы.НалоговыйАгентВычет0.Картинка = БиблиотекаКартинок.Ошибка32;
		КонецЕсли;
		
		ВыводитьПояснениеОшибок = ВычетИсполнениеОНА.Свойство("НаличиеОшибок")
									ИЛИ ВычетСАвансовПолученных.Свойство("НаличиеОшибок")
									ИЛИ	ВычетСАвансовВыданных.Свойство("НаличиеОшибок")
									ИЛИ ВычетПоПриобретеннымЦенностям.Свойство("НаличиеОшибок")
									ИЛИ НачислениеСМРХозСпособом.Свойство("НаличиеОшибок")
									ИЛИ НачислениеИсполнениеОНА.Свойство("НаличиеОшибок")
									ИЛИ НачислениеВосстановлениеСАвансовВыданных.Свойство("НаличиеОшибок")
									ИЛИ НачислениеАвансыПолученные.Свойство("НаличиеОшибок")
									ИЛИ НачислениеРеализация.Свойство("НаличиеОшибок")
									ИЛИ ВычетПоПриобретеннымЦенностям0.Свойство("НаличиеОшибок")
									ИЛИ ВычетИсполнениеОНА0.Свойство("НаличиеОшибок")
									ИЛИ НачислениеРеализация0.Свойство("НаличиеОшибок")
									ИЛИ НачислениеВосстановлениеДругиеОперации.Свойство("НаличиеОшибок")
									ИЛИ Ложь;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если СуммаВсехВычетов > СуммаВсехНачислений Тогда
		ЭлементыСхемы.НалоговаяБаза.Наименование = НСтр("ru = 'НДС к возмещению'");
		ЭлементыСхемы.База.Наименование          = Формат(СуммаВсехВычетов - СуммаВсехНачислений, "ЧЦ=15; ЧДЦ=2");
	Иначе
		ЭлементыСхемы.НалоговаяБаза.Наименование = НСтр("ru = 'НДС к уплате'");
		ЭлементыСхемы.База.Наименование          = Формат(СуммаВсехНачислений - СуммаВсехВычетов, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
		
	ЭлементыСхемы.Вычеты.Наименование     = Формат(СуммаВсехВычетов, "ЧЦ=15; ЧДЦ=2");
	ЭлементыСхемы.Начисления.Наименование = Формат(СуммаВсехНачислений, "ЧЦ=15; ЧДЦ=2");
	
	Если ВыводитьПояснениеОшибок Тогда
		ЭлементыСхемы.ПояснениеОшибки1.Картинка     = БиблиотекаКартинок.Ошибка32;
		ЭлементыСхемы.ПояснениеОшибки2.Наименование = НСтр("ru = 'Обнаружены ошибки'");
	КонецЕсли;
		
	КоллекцияНастроек = ПараметрыОтчета.КоллекцияНастроек;
	
	//	Добавим описание сформированных данных
	ТекстОписаниярасшифровок = БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(
		ПараметрыОтчета.Организация, ПараметрыОтчета.ВключатьОбособленныеПодразделения) + ", "
		+ БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	КоллекцияНастроек.Вставить("ТекстОписаниярасшифровок",          ТекстОписаниярасшифровок);
	КоллекцияНастроек.Вставить("ВключатьОбособленныеПодразделения", ПараметрыОтчета.ВключатьОбособленныеПодразделения);
	
	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("КоллекцияНастроек"      , КоллекцияНастроек);
	РезультатВыполнения.Вставить("РезультатСхема"         , РезультатСхема);
	
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура СформироватьРасшифровку(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	СхемаКомпоновкиДанных = Отчеты.АнализСостоянияНалоговогоУчетаПоНДС.ПолучитьМакет(ПараметрыОтчета.ИмяМакета);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(ПолучитьНастройкуМакета(ПараметрыОтчета, СхемаКомпоновкиДанных));
	
	ПараметрыОтчета.КоллекцияНастроек.Вставить("ИдентификаторМакета", ПараметрыОтчета.ИмяМакета);
	
	КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ВыводитьПодвал");
	КомпоновщикНастроек.Настройки.ДополнительныеСвойства.ВыводитьПодвал = Ложь;
	
	ПараметрыОтчета.Вставить("ДанныеРасшифровки"        , Неопределено);
	ПараметрыОтчета.Вставить("СхемаКомпоновкиДанных"    , СхемаКомпоновкиДанных);
	ПараметрыОтчета.Вставить("ИдентификаторОтчета"      , "АнализСостоянияНалоговогоУчетаПоНДС");
	ПараметрыОтчета.Вставить("НастройкиКомпоновкиДанных", КомпоновщикНастроек.ПолучитьНастройки());
	
	АдресПромежуточногоХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет(ПараметрыОтчета, АдресПромежуточногоХранилища);
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресПромежуточногоХранилища);
	ДокументРезультат = РезультатВыполнения.Результат;
	
	ДокументРезультат.ФиксацияСверху = ?(ПараметрыОтчета.КоллекцияНастроек["ВключатьОбособленныеПодразделения"], 7, 5);
	
	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("Результат", ДокументРезультат);
	
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
							
КонецПроцедуры 

Функция ПолучитьНастройкуМакета(ПараметрыОтчета, СхемаКомпоновкиДанных = Неопределено) Экспорт
	
	Если ПараметрыОтчета.КоллекцияНастроек <> Неопределено 
		И ПараметрыОтчета.КоллекцияНастроек.Свойство(ПараметрыОтчета.ИмяМакета) Тогда				
		Возврат ПараметрыОтчета.КоллекцияНастроек[ПараметрыОтчета.ИмяМакета];
	ИначеЕсли СхемаКомпоновкиДанных = Неопределено Тогда		
		Возврат Отчеты.АнализСостоянияНалоговогоУчетаПоНДС.ПолучитьМакет(ПараметрыОтчета.ИмяМакета).НастройкиПоУмолчанию;
	Иначе		
		Возврат СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КонецЕсли;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//  Создает запрос, устанавливает параметры запроса 
//
//
// Возвращаемое значение:
//   Запрос   - заготовка запроса, с установленными параметрами
//
Функция ПолучитьПараметрыЗапроса(ПараметрыОтчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	НеОтражаютсяВРазделеНачислениеПоРеализации = Новый СписокЗначений;
	НеОтражаютсяВРазделеНачислениеПоРеализации.Добавить(Перечисления.НДСВидНачисления.НДСсАвансов);
	НеОтражаютсяВРазделеНачислениеПоРеализации.Добавить(Перечисления.НДСВидНачисления.НДСВосстановлен);
	НеОтражаютсяВРазделеНачислениеПоРеализации.Добавить(Перечисления.НДСВидНачисления.НДСНачисленКУплате);
	НеОтражаютсяВРазделеНачислениеПоРеализации.Добавить(Перечисления.НДСВидНачисления.РеализацияЕНВД);
	НеОтражаютсяВРазделеНачислениеПоРеализации.Добавить(Перечисления.НДСВидНачисления.Реализация0);
	
	ВидыЦенностейАвансыВсе = Новый СписокЗначений;
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	ВидыЦенностейАвансыПолученные = Новый СписокЗначений;
	ВидыЦенностейАвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностейАвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностейАвансыПолученные.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	ВидыЦенностейНалоговыйАгент = Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгент();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ВидыЦенностейНалоговыйАгент,
		Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгентРеализацияТоваров());
	
	СписокСчетовАвансовПолученных = Новый СписокЗначений;
	СписокСчетовАвансовПолученных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным); 
	СписокСчетовАвансовПолученных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал);
	СписокСчетовАвансовПолученных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);
	
	СписокСчетовАвансовВыданных = Новый СписокЗначений;
	СписокСчетовАвансовВыданных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);
	СписокСчетовАвансовВыданных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал);
	СписокСчетовАвансовВыданных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымУЕ);
	
	СписокВидовСубконто = Новый СписокЗначений;
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	СчетВыручкиЕНВД = ПланыСчетов.Хозрасчетный.ВыручкаЕНВД;
	
	ВидыСубконтоДокументДоговорКонтрагент = Новый Массив;
	ВидыСубконтоДокументДоговорКонтрагент.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	ВидыСубконтоДокументДоговорКонтрагент.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконтоДокументДоговорКонтрагент.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
		
	СписокДоступныхОрганизаций = ОбщегоНазначенияБП.СписокДоступныхОрганизаций(
		ПараметрыОтчета.Организация,
		ПараметрыОтчета.ВключатьОбособленныеПодразделения);
	ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	// Установка параметров запроса
	Запрос.УстановитьПараметр("НачалоСледующегоПериода", 					КонецДня(ПараметрыОтчета.КонецПериода) + 1);
	Запрос.УстановитьПараметр("НачалоПериода",								НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериодаГраница", 						Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", 								КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация",								СписокДоступныхОрганизаций);
	Запрос.УстановитьПараметр("НеОтражаютсяВРазделеНачислениеПоРеализации", НеОтражаютсяВРазделеНачислениеПоРеализации);
	Запрос.УстановитьПараметр("ПустаяСсылкаНаСчетФактуруВыданный", 			Документы.СчетФактураВыданный.ПустаяСсылка());
	Запрос.УстановитьПараметр("НДСсАвансов", 								Перечисления.НДСВидНачисления.НДСсАвансов);
	Запрос.УстановитьПараметр("СписокСчетовАвансовПолученных",				СписокСчетовАвансовПолученных);
	Запрос.УстановитьПараметр("СписокСчетовАвансовВыданных", 				СписокСчетовАвансовВыданных);
	Запрос.УстановитьПараметр("ВидыСубконто",								СписокВидовСубконто);
	Запрос.УстановитьПараметр("ВидыСубконтоДокументДоговорКонтрагент",		ВидыСубконтоДокументДоговорКонтрагент);
	Запрос.УстановитьПараметр("ВидыЦенностейНалоговыйАгент",				ВидыЦенностейНалоговыйАгент); 
	Запрос.УстановитьПараметр("ВидыЦенностейАвансыВсе", 					ВидыЦенностейАвансыВсе);
	Запрос.УстановитьПараметр("ВидыЦенностейАвансыПолученные",				ВидыЦенностейАвансыПолученные);
	Запрос.УстановитьПараметр("ВыручкаЕНВД",								СчетВыручкиЕНВД);
	Запрос.УстановитьПараметр("ПустаяНоменклатура", 						Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("СобытияНеОтражаемыеВРазделеНачисленияПоРеализации", 
		СобытияНеОтражаемыеВРазделеРеализация(ПараметрыОтчета.РаздельныйУчетНДС));
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                            ВалютаРеглУчета);
	
	Возврат Запрос;
	
КонецФункции

Функция СобытияНеОтражаемыеВРазделеРеализация(РаздельныйУчетНДС) Экспорт
	
	СобытияНеРеализация = Новый СписокЗначений;
	СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.НалогИсчисляетПокупатель);
	
	Если РаздельныйУчетНДС Тогда
		СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);
		СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);
		СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.ВосстановлениеНДС);
	КонецЕсли;
	
	Возврат СобытияНеРеализация;

КонецФункции

Функция ПодготовитьПоказательКВыводу(Показатель, ИмеютсяЗаписи)
	
	Если Показатель = 0 И ИмеютсяЗаписи Тогда
		Возврат "0";
	Иначе
		Возврат Строка(Формат(Показатель,"ЧЦ=15; ЧДЦ=2"));
	КонецЕсли;
	
КонецФункции

//	Универсальные наборы

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС по реализации
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеРеализация(Запрос)
	
	//	Документы включенные в книгу продаж (НДС по реализации)
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура КАК СчетФактура,
	|	КнигаПродаж.СтавкаНДС КАК СтавкаНДС,
	|	КнигаПродаж.НДСОборот КАК СуммаНДС,
	|	КнигаПродаж.СуммаБезНДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПродажПредварительная
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами))
	|				И НЕ Событие В (&СобытияНеОтражаемыеВРазделеНачисленияПоРеализации)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК КнигаПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура,
	|	КнигаПродаж.СтавкаНДС,
	|	КнигаПродаж.НДСОборот,
	|	КнигаПродаж.СуммаБезНДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами))
	|				И НЕ Событие В (&СобытияНеОтражаемыеВРазделеНачисленияПоРеализации)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК КнигаПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоставКнигиПродажПредварительная.СчетФактура,
	|	ВТСоставКнигиПродажПредварительная.СтавкаНДС,
	|	СУММА(ВТСоставКнигиПродажПредварительная.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТСоставКнигиПродаж
	|ИЗ
	|	ВТСоставКнигиПродажПредварительная КАК ВТСоставКнигиПродажПредварительная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПродажПредварительная.СчетФактура,
	|	ВТСоставКнигиПродажПредварительная.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВТСоставКнигиПродажПредварительная.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНачисленныйОбороты.СчетФактура КАК СчетФактура,
	|	НДСНачисленныйОбороты.СтавкаНДС
	|ПОМЕСТИТЬ ВТНДСНачисленныйОбороты
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						КнигаПродаж.СчетФактура КАК СчетФактура
	|					ИЗ
	|						ВТСоставКнигиПродаж КАК КнигаПродаж)) КАК НДСНачисленныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНачисленныйОбороты.СчетФактура КАК ДокументРегистратор,
	|	НДСНачисленныйОбороты.СтавкаНДС,
	|	2 КАК РангОшибки
	|ПОМЕСТИТЬ ВТОперацииСОшибками
	|ИЗ
	|	ВТНДСНачисленныйОбороты КАК НДСНачисленныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО НДСНачисленныйОбороты.СчетФактура = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|ГДЕ
	|	СчетФактураВыданныйДокументыОснования.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСНачисленный.СчетФактура,
	|	НДСНачисленный.СтавкаНДС,
	|	1
	|ИЗ
	|	РегистрНакопления.НДСНачисленный КАК НДСНачисленный
	|ГДЕ
	|	НДСНачисленный.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	И НДСНачисленный.СчетДоходовБУ = &ВыручкаЕНВД
	|	И НДСНачисленный.СчетФактура В
	|			(ВЫБРАТЬ
	|				КнигаПродаж.СчетФактура КАК СчетФактура
	|			ИЗ
	|				ВТСоставКнигиПродаж КАК КнигаПродаж)
	|	И НДСНачисленный.Организация В(&Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоставКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ВТСоставКнигиПродаж.СтавкаНДС,
	|	ВТОперацииСОшибками.ДокументРегистратор,
	|	МИНИМУМ(ВТСоставКнигиПродаж.СуммаНДС) КАК СуммаНДС,
	|	МИНИМУМ(ВТОперацииСОшибками.РангОшибки) КАК РангОшибки
	|ПОМЕСТИТЬ ВТПроведеноРанжированиеОшибок
	|ИЗ
	|	ВТСоставКнигиПродаж КАК ВТСоставКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОперацииСОшибками КАК ВТОперацииСОшибками
	|		ПО ВТСоставКнигиПродаж.СчетФактура = ВТОперацииСОшибками.ДокументРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПродаж.СчетФактура,
	|	ВТСоставКнигиПродаж.СтавкаНДС,
	|	ВТОперацииСОшибками.ДокументРегистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПроведеноРанжированиеОшибок.СчетФактура КАК СчетФактура,
	|	СУММА(ВТПроведеноРанжированиеОшибок.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ВТПроведеноРанжированиеОшибок.РангОшибки ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоОшибок
	|ИЗ
	|	ВТПроведеноРанжированиеОшибок КАК ВТПроведеноРанжированиеОшибок
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПроведеноРанжированиеОшибок.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачисленияПоРеализацииВключенные = Запрос.Выполнить().Выбрать();
	
	//	Документы не включенные в книгу продаж
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСНачисленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСНачисленныйОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСНачисленныйОстатки
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Остатки(
	|			&КонецПериодаГраница,
	|			Организация В (&Организация)
	|				И (НЕ ВидНачисления В (&НеОтражаютсяВРазделеНачислениеПоРеализации)
	|					И НЕ ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|					И НЕ ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами))) КАК НДСНачисленныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(НДСНачисленныйОстатки.НДСОстаток, 0)) КАК СуммаНДС,
	|	НДСНачисленныйОстатки.СчетФактура
	|ИЗ
	|	ВТНДСНачисленныйОстатки КАК НДСНачисленныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНачисленныйОстатки.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачисленияПоРеализацииНеВключенныеНДСНеОтражен = Запрос.Выполнить().Выбрать();
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	
	ВключенныеВБазу = 0;
	Если НачисленияПоРеализацииВключенные.Следующий() Тогда
		ВключенныеВБазу = НачисленияПоРеализацииВключенные.СуммаНДС;
		Если НачисленияПоРеализацииВключенные.КоличествоОшибок > 0 Тогда
			СтруктураВозвращаемыхПараметров.Вставить("НаличиеОшибок", Истина);
		КонецЕсли;
	КонецЕсли;
	
	НеВключенныеВБазу = 0;
	Если НачисленияПоРеализацииНеВключенныеНДСНеОтражен.Следующий() Тогда
		НеВключенныеВБазу = НачисленияПоРеализацииНеВключенныеНДСНеОтражен.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	 ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = НачисленияПоРеализацииВключенные.Количество()
		+ НачисленияПоРеализацииНеВключенныеНДСНеОтражен.Количество();
		 
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
		 
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхНачислениеРеализация()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС при исполнении обязанностей налогового агента
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеНалоговыйАгент(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот КАК СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот КАК НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПродажОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	Покупатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК СчетСсылка
	|ПОМЕСТИТЬ ВТСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	НЕ Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И НЕ Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|	И НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ПОМЕСТИТЬ Договоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Организация В(&Организация)
	|	И ДоговорыКонтрагентов.УчетАгентскогоНДС = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйСубконто.Регистратор КАК Регистратор,
	|	ХозрасчетныйСубконто.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ НомераПроводок
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры КАК Договоры
	|		ПО (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры))
	|			И ХозрасчетныйСубконто.Значение = Договоры.Договор
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Период МЕЖДУ &НачалоПериода И &КонецПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйСубконто.Регистратор КАК Регистратор,
	|	ХозрасчетныйСубконто.НомерСтроки КАК НомерСтроки,
	|	ХозрасчетныйСубконто.Вид,
	|	ХозрасчетныйСубконто.Значение
	|ПОМЕСТИТЬ ЗначенияСубконто
	|ИЗ
	|	НомераПроводок КАК НомераПроводок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО НомераПроводок.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И НомераПроводок.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	Контрагенты.Значение КАК СубконтоДт1,
	|	Договоры.Значение КАК СубконтоДт2,
	|	ДокументыРасчетов.Значение КАК СубконтоДт3,
	|	Хозрасчетный.Сумма КАК СуммаОборот,
	|	ВЫРАЗИТЬ(Хозрасчетный.Сумма * 0.18 КАК ЧИСЛО(15, 2)) КАК СуммаНДСОборот
	|ПОМЕСТИТЬ ВТХозрасчетныйОборотыДтКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗначенияСубконто КАК Договоры
	|		ПО Хозрасчетный.Регистратор = Договоры.Регистратор
	|			И Хозрасчетный.НомерСтроки = Договоры.НомерСтроки
	|			И (Договоры.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗначенияСубконто КАК Контрагенты
	|		ПО Хозрасчетный.Регистратор = Контрагенты.Регистратор
	|			И Хозрасчетный.НомерСтроки = Контрагенты.НомерСтроки
	|			И (Контрагенты.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗначенияСубконто КАК ДокументыРасчетов
	|		ПО Хозрасчетный.Регистратор = ДокументыРасчетов.Регистратор
	|			И Хозрасчетный.НомерСтроки = ДокументыРасчетов.НомерСтроки
	|			И (ДокументыРасчетов.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|ГДЕ
	|	Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				ВТСчета.СчетСсылка
	|			ИЗ
	|				ВТСчета КАК ВТСчета)
	|	И НЕ Хозрасчетный.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента)
	|	И Хозрасчетный.Организация В(&Организация)
	|	И НЕ Хозрасчетный.Регистратор В
	|				(ВЫБРАТЬ
	|					ВТКнигаПродаж.СчетФактура
	|				ИЗ
	|					ВТНДСЗаписиКнигиПродажОбороты КАК ВТКнигаПродаж)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	СубконтоДт1,
	|	СубконтоДт2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот) КАК СуммаВключенныхВБазу,
	|	СУММА(0) КАК СуммаНеВключенныхВБазу
	|ИЗ
	|	ВТНДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(0),
	|	СУММА(ЕСТЬNULL(ВТХозрасчетныйОборотыДтКт.СуммаНДСОборот, 0))
	|ИЗ
	|	ВТХозрасчетныйОборотыДтКт КАК ВТХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТХозрасчетныйОборотыДтКт.Регистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачисленияИсполнениеОНА = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если НачисленияИсполнениеОНА.Следующий() Тогда
		
		ВключенныеВБазу   = НачисленияИсполнениеОНА.СуммаВключенныхВБазу;
		НеВключенныеВБазу = НачисленияИсполнениеОНА.СуммаНеВключенныхВБазу;
		
	КонецЕсли;	
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", НачисленияИсполнениеОНА.Количество() > 0);	
	
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхНачислениеИсполнениеОНА()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС при выполнении строительно-монтажных работ хозяйственным способом
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеСМРХозСпособом(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСНачисленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСНачисленныйОстатки.СуммаБезНДСОстаток,
	|	НДСНачисленныйОстатки.НДСОстаток
	|ПОМЕСТИТЬ НДСНачисленныйПоСМР
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.НДСНачисленКУплате)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами)) КАК НДСНачисленныйОстатки
	|ГДЕ
	|	НЕ(НДСНачисленныйОстатки.СуммаБезНДСОстаток = 0
	|				И НДСНачисленныйОстатки.НДСОстаток = 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ПОМЕСТИТЬ ЗаписиКнигиПродажВЧастиСМР
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНачисленныйОстатки.СчетФактура КАК СчетФактура,
	|	СУММА(НДСНачисленныйОстатки.НДСОстаток) КАК НеВключенныйНДС,
	|	СУММА(0) КАК ВключенныйНДС
	|ИЗ
	|	НДСНачисленныйПоСМР КАК НДСНачисленныйОстатки
	|ГДЕ
	|	НЕ(НДСНачисленныйОстатки.СуммаБезНДСОстаток = 0
	|				И НДСНачисленныйОстатки.НДСОстаток = 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНачисленныйОстатки.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	0,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот)
	|ИЗ
	|	ЗаписиКнигиПродажВЧастиСМР КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачислениеСМРХозСпособом = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;
	НеВключенныеВБазу = 0;
	
	Если НачислениеСМРХозСпособом.Следующий() Тогда
		ВключенныеВБазу   = НачислениеСМРХозСпособом.ВключенныйНДС;
		НеВключенныеВБазу = НачислениеСМРХозСпособом.НеВключенныйНДС;
	КонецЕсли;	
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	  ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные",  НеВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", НачислениеСМРХозСпособом.Количество() > 0);	
	

	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхНачисление()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС по приобретенным ценностям
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям(Запрос, РасшифроватьНеВключенные = Ложь)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК ДокументРегистратор,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И НЕ Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0), ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0))
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И НЕ Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0), ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0))
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК СоставКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоставКнигиПокупок.ДокументРегистратор,
	|	СУММА(ВТСоставКнигиПокупок.СуммаБезНДСОборот) КАК Сумма,
	|	СУММА(ВТСоставКнигиПокупок.НДСОборот) КАК СуммаНДС,
	|	СУММА(0) КАК КоличествоОшибок
	|ИЗ
	|	ВТСоставКнигиПокупок КАК ВТСоставКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПокупок.ДокументРегистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";

	ВычетПоПриобретеннымЦенностямВключенные = Запрос.Выполнить().Выбрать();
	
	Если РасшифроватьНеВключенные Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НДСПредъявленныйОстатки.ИсправленныйСчетФактура = НЕОПРЕДЕЛЕНО
		|			ТОГДА НДСПредъявленныйОстатки.СчетФактура
		|		ИНАЧЕ НДСПредъявленныйОстатки.ИсправленныйСчетФактура
		|	КОНЕЦ КАК ДокументОснование,
		|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДСОстаток,
		|	НДСПредъявленныйОстатки.НДСОстаток КАК НДСОстаток,
		|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура
		|ПОМЕСТИТЬ НДСПредъявленныйОстаткиПоПриобретеннымЦенностям
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&НачалоСледующегоПериода,
		|			Организация В (&Организация)
		|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)) КАК НДСПредъявленныйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КнигаПокупок.СчетФактура КАК ЗаявлениеОВвозе
		|ПОМЕСТИТЬ КнигаПокупокВЧастиЗаявленийОВвозе
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК КнигаПокупок
		|ГДЕ
		|	КнигаПокупок.Организация В(&Организация)
		|	И КнигаПокупок.Период <= &КонецПериода
		|	И КнигаПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КнигаПокупок.СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток КАК СуммаБезНДСОстаток,
		|	НДСПредъявленныйРеализация0Остатки.НДСОстаток КАК НДСОстаток
		|ПОМЕСТИТЬ НДСПредъявленныйРеализация0ОстаткиПоПриобретеннымЦенностям
		|ИЗ
		|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
		|			&НачалоСледующегоПериода,
		|			Организация В (&Организация)
		|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)) КАК НДСПредъявленныйРеализация0Остатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыДокументы.СчетФактура КАК СчетФактура,
		|	СчетаФактурыДокументы.ССылка КАК ССылка,
		|	СчетаФактурыДокументы.ДокументОснование КАК ДокументОснование,
		|	СчетаФактурыДокументы.СчетФактураПроведен КАК СчетФактураПроведен,
		|	СчетаФактурыДокументы.СчетФактураДата КАК СчетФактураДата,
		|	СчетаФактурыДокументы.НомерВходящегоСчетаФактуры КАК НомерВходящегоСчетаФактуры,
		|	СчетаФактурыДокументы.ДатаВходящегоСчетаФактуры КАК ДатаВходящегоСчетаФактуры
		|ПОМЕСТИТЬ ВременнаяТаблицаСчетФактураПолученный
		|ИЗ
		|	(ВЫБРАТЬ
		|		СчетФактураПолученный.Ссылка КАК СчетФактура,
		|		СчетФактураПолученный.Ссылка КАК ССылка,
		|		СчетФактураПолученный.Ссылка КАК ДокументОснование,
		|		СчетФактураПолученный.Проведен КАК СчетФактураПроведен,
		|		СчетФактураПолученный.Дата КАК СчетФактураДата,
		|		СчетФактураПолученный.НомерВходящегоДокумента КАК НомерВходящегоСчетаФактуры,
		|		СчетФактураПолученный.ДатаВходящегоДокумента КАК ДатаВходящегоСчетаФактуры
		|	ИЗ
		|		Документ.СчетФактураПолученный КАК СчетФактураПолученный
		|	ГДЕ
		|		СчетФактураПолученный.Проведен
		|		И НЕ СчетФактураПолученный.ПометкаУдаления
		|		И (СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
		|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный))
		|		И СчетФактураПолученный.Организация В(&Организация)
		|		И СчетФактураПолученный.Ссылка В
		|				(ВЫБРАТЬ
		|					НДСПредъявленныйОстаткиПоПриобретеннымЦенностям.ДокументОснование
		|				ИЗ
		|					НДСПредъявленныйОстаткиПоПриобретеннымЦенностям)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СчетФактураПолученный.ДокументОснование,
		|		СчетФактураПолученный.Ссылка,
		|		СчетФактураПолученный.ДокументОснование,
		|		СчетФактураПолученный.Ссылка.Проведен,
		|		СчетФактураПолученный.Ссылка.Дата,
		|		СчетФактураПолученный.Ссылка.НомерВходящегоДокумента,
		|		СчетФактураПолученный.Ссылка.ДатаВходящегоДокумента
		|	ИЗ
		|		Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
		|	ГДЕ
		|		СчетФактураПолученный.Ссылка.Проведен
		|		И НЕ СчетФактураПолученный.Ссылка.ПометкаУдаления
		|		И (СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
		|				ИЛИ СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный))
		|		И СчетФактураПолученный.Ссылка.Организация В(&Организация)
		|		И СчетФактураПолученный.ДокументОснование В
		|				(ВЫБРАТЬ
		|					НДСПредъявленныйОстаткиПоПриобретеннымЦенностям.ДокументОснование
		|				ИЗ
		|					НДСПредъявленныйОстаткиПоПриобретеннымЦенностям)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВозвратТоваровОтПокупателя.Ссылка,
		|		ВозвратТоваровОтПокупателя.Ссылка,
		|		ВозвратТоваровОтПокупателя.Ссылка,
		|		ВозвратТоваровОтПокупателя.Проведен,
		|		ВозвратТоваровОтПокупателя.Дата,
		|		ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера,
		|		ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера
		|	ИЗ
		|		Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|	ГДЕ
		|		ВозвратТоваровОтПокупателя.Сделка ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|		И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
		|		И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
		|		И ВозвратТоваровОтПокупателя.Проведен
		|		И НЕ ВозвратТоваровОтПокупателя.ПометкаУдаления
		|		И ВозвратТоваровОтПокупателя.Организация В(&Организация)
		|		И ВозвратТоваровОтПокупателя.Ссылка В
		|				(ВЫБРАТЬ
		|					НДСПредъявленныйОстаткиПоПриобретеннымЦенностям.ДокументОснование
		|				ИЗ
		|					НДСПредъявленныйОстаткиПоПриобретеннымЦенностям)) КАК СчетаФактурыДокументы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактураВыданный.Ссылка КАК СчетФактура,
		|	СчетФактураВыданный.Ссылка КАК Ссылка,
		|	СчетФактураВыданный.Ссылка КАК ДокументОснование,
		|	СчетФактураВыданный.ДокументОснование КАК СчетФактураДокументОснование,
		|	СчетФактураВыданный.Проведен КАК СчетФактураПроведен,
		|	СчетФактураВыданный.Дата КАК ДатаСчетаФактуры,
		|	СчетФактураВыданный.Номер КАК НомерСчетаФактуры
		|ПОМЕСТИТЬ ВременнаяТаблицаСчетФактураВыданный
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|ГДЕ
		|	СчетФактураВыданный.Ссылка В
		|			(ВЫБРАТЬ
		|				НДСПредъявленныйОстаткиПоПриобретеннымЦенностям.ДокументОснование
		|			ИЗ
		|				НДСПредъявленныйОстаткиПоПриобретеннымЦенностям)
		|	И (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
		|			ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный))
		|	И СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
		|	И СчетФактураВыданный.Проведен
		|	И НЕ СчетФактураВыданный.ПометкаУдаления
		|	И СчетФактураВыданный.Организация В(&Организация)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетФактураВыданный.ДокументОснование,
		|	СчетФактураВыданный.Ссылка,
		|	СчетФактураВыданный.ДокументОснование,
		|	СчетФактураВыданный.Ссылка.ДокументОснование,
		|	СчетФактураВыданный.Ссылка.Проведен,
		|	СчетФактураВыданный.Ссылка.Дата,
		|	СчетФактураВыданный.Ссылка.Номер
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
		|ГДЕ
		|	СчетФактураВыданный.ДокументОснование В
		|			(ВЫБРАТЬ
		|				НДСПредъявленныйОстаткиПоПриобретеннымЦенностям.ДокументОснование
		|			ИЗ
		|				НДСПредъявленныйОстаткиПоПриобретеннымЦенностям)
		|	И (СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
		|			ИЛИ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный))
		|	И СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
		|	И СчетФактураВыданный.Ссылка.Проведен
		|	И НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления
		|	И СчетФактураВыданный.Ссылка.Организация В(&Организация)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.ДокументОснование КАК ДокументРегистратор,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0)) КАК Сумма,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
		|					ТОГДА ВЫБОР
		|							КОГДА КнигаПокупокВЧастиЗаявленийОВвозе.ЗаявлениеОВвозе ЕСТЬ NULL
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ИСТИНА
		|						КОНЕЦ
		|				КОГДА ВЫБОР
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.СчетФактураВыданный
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ГТДИмпорт
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|								ТОГДА НДСПредъявленныйОстатки.ДокументОснование
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|								ТОГДА СчетФактураПолученныйДокументыОснования.ССылка
		|							ИНАЧЕ ЕСТЬNULL(СчетФактураПолученныйДокументыОснования.ССылка, СчетФактураВыданныйДокументыОснования.Ссылка)
		|						КОНЕЦ ЕСТЬ NULL
		|						ИЛИ ВЫБОР
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.СчетФактураВыданный
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ГТДИмпорт
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|								ТОГДА ДанныеПервичныхДокументов.ДатаРегистратора
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|								ТОГДА СчетФактураПолученныйДокументыОснования.ДатаВходящегоСчетаФактуры
		|							ИНАЧЕ ЕСТЬNULL(СчетФактураПолученныйДокументыОснования.ДатаВходящегоСчетаФактуры, СчетФактураВыданныйДокументыОснования.ДатаСчетаФактуры)
		|						КОНЕЦ > &КонецПериода
		|					ТОГДА ЛОЖЬ
		|				КОГДА НЕ ВЫБОР
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.СчетФактураВыданный
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ГТДИмпорт
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|								ТОГДА НДСПредъявленныйОстатки.ДокументОснование.Проведен
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|								ТОГДА СчетФактураПолученныйДокументыОснования.СчетФактураПроведен
		|							ИНАЧЕ ЕСТЬNULL(СчетФактураПолученныйДокументыОснования.СчетФактураПроведен, СчетФактураВыданныйДокументыОснования.СчетФактураПроведен)
		|						КОНЕЦ
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) >= 0
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПеренесенныеВычеты,
		|	1 КАК КоличествоДокументов
		|ИЗ
		|	НДСПредъявленныйОстаткиПоПриобретеннымЦенностям КАК НДСПредъявленныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ НДСПредъявленныйРеализация0ОстаткиПоПриобретеннымЦенностям КАК НДСПредъявленныйРеализация0Остатки
		|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПредъявленныйРеализация0Остатки.СчетФактура
		|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПредъявленныйРеализация0Остатки.ВидЦенности
		|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПредъявленныйРеализация0Остатки.СтавкаНДС
		|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС
		|			И (НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток + НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетФактураПолученный КАК СчетФактураПолученныйДокументыОснования
		|		ПО (НДСПредъявленныйОстатки.ДокументОснование = СчетФактураПолученныйДокументыОснования.ДокументОснование
		|				ИЛИ НДСПредъявленныйОстатки.ДокументОснование = СчетФактураПолученныйДокументыОснования.ССылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетФактураВыданный КАК СчетФактураВыданныйДокументыОснования
		|		ПО НДСПредъявленныйОстатки.ДокументОснование = СчетФактураВыданныйДокументыОснования.ДокументОснование
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО (ДанныеПервичныхДокументов.Организация В (&Организация))
		|			И НДСПредъявленныйОстатки.ДокументОснование = ДанныеПервичныхДокументов.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ КнигаПокупокВЧастиЗаявленийОВвозе КАК КнигаПокупокВЧастиЗаявленийОВвозе
		|		ПО НДСПредъявленныйОстатки.СчетФактура = КнигаПокупокВЧастиЗаявленийОВвозе.ЗаявлениеОВвозе
		|ГДЕ
		|	(НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
		|			ИЛИ НДСПредъявленныйОстатки.НДСОстаток > 0)
		|	И ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0) > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСПредъявленныйОстатки.ДокументОснование,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
		|					ТОГДА ВЫБОР
		|							КОГДА КнигаПокупокВЧастиЗаявленийОВвозе.ЗаявлениеОВвозе ЕСТЬ NULL
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ИСТИНА
		|						КОНЕЦ
		|				КОГДА ВЫБОР
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.СчетФактураВыданный
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ГТДИмпорт
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|								ТОГДА НДСПредъявленныйОстатки.ДокументОснование
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|								ТОГДА СчетФактураПолученныйДокументыОснования.ССылка
		|							ИНАЧЕ ЕСТЬNULL(СчетФактураПолученныйДокументыОснования.ССылка, СчетФактураВыданныйДокументыОснования.Ссылка)
		|						КОНЕЦ ЕСТЬ NULL
		|						ИЛИ ВЫБОР
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.СчетФактураВыданный
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ГТДИмпорт
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|								ТОГДА ДанныеПервичныхДокументов.ДатаРегистратора
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|								ТОГДА СчетФактураПолученныйДокументыОснования.ДатаВходящегоСчетаФактуры
		|							ИНАЧЕ ЕСТЬNULL(СчетФактураПолученныйДокументыОснования.ДатаВходящегоСчетаФактуры, СчетФактураВыданныйДокументыОснования.ДатаСчетаФактуры)
		|						КОНЕЦ > &КонецПериода
		|					ТОГДА ЛОЖЬ
		|				КОГДА НЕ ВЫБОР
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.СчетФактураВыданный
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ГТДИмпорт
		|									ИЛИ НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|								ТОГДА НДСПредъявленныйОстатки.ДокументОснование.Проведен
		|							КОГДА НДСПредъявленныйОстатки.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|								ТОГДА СчетФактураПолученныйДокументыОснования.СчетФактураПроведен
		|							ИНАЧЕ ЕСТЬNULL(СчетФактураПолученныйДокументыОснования.СчетФактураПроведен, СчетФактураВыданныйДокументыОснования.СчетФактураПроведен)
		|						КОНЕЦ
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) >= 0
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|ИТОГИ
		|	СУММА(Сумма),
		|	СУММА(СуммаНДС),
		|	СУММА(КоличествоДокументов)
		|ПО
		|	ПеренесенныеВычеты";
		
		ТипОбхода = ОбходРезультатаЗапроса.ПоГруппировкам;
	
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
		|	НДСПредъявленныйОстатки.НДСОстаток
		|ПОМЕСТИТЬ НДСПредъявленныйОстаткиПоПриобретеннымЦенностям
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&НачалоСледующегоПериода,
		|			Организация В (&Организация)
		|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)) КАК НДСПредъявленныйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
		|	НДСПредъявленныйРеализация0Остатки.НДСОстаток
		|ПОМЕСТИТЬ НДСПредъявленныйРеализация0ОстаткиПоПриобретеннымЦенностям
		|ИЗ
		|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
		|			&НачалоСледующегоПериода,
		|			Организация В (&Организация)
		|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)) КАК НДСПредъявленныйРеализация0Остатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.СчетФактура КАК ДокументРегистратор,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0)) КАК Сумма,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК СуммаНДС
		|ИЗ
		|	НДСПредъявленныйОстаткиПоПриобретеннымЦенностям КАК НДСПредъявленныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ НДСПредъявленныйРеализация0ОстаткиПоПриобретеннымЦенностям КАК НДСПредъявленныйРеализация0Остатки
		|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПредъявленныйРеализация0Остатки.СчетФактура
		|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПредъявленныйРеализация0Остатки.ВидЦенности
		|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПредъявленныйРеализация0Остатки.СтавкаНДС
		|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС
		|			И (НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток + НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
		|ГДЕ
		|	(НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
		|			ИЛИ НДСПредъявленныйОстатки.НДСОстаток > 0)
		|	И ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0) > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСПредъявленныйОстатки.СчетФактура
		|ИТОГИ ПО
		|	ОБЩИЕ";
		
		ТипОбхода = ОбходРезультатаЗапроса.Прямой;
		
	КонецЕсли;
		
	ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты = Запрос.Выполнить().Выбрать(ТипОбхода);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСВключенныйВСтоимость.СчетФактура КАК СчетФактура,
	|	НДСВключенныйВСтоимость.СуммаБезНДС КАК СуммаБезНДСОборот,
	|	НДСВключенныйВСтоимость.НДС КАК НДСОборот
	|ПОМЕСТИТЬ ВТНДСВключенныйВСтоимость
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСВключенныйВСтоимость
	|ГДЕ
	|	НДСВключенныйВСтоимость.Организация В(&Организация)
	|	И НДСВключенныйВСтоимость.Период <= &КонецПериода
	|	И НДСВключенныйВСтоимость.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НДСВключенВСтоимость)
	|	И НДСВключенныйВСтоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Ссылка КАК ДокументРегистратор,
	|	ВЫРАЗИТЬ(АвансовыйОтчет.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(АвансовыйОтчет.СуммаДокумента - АвансовыйОтчет.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)) КАК Сумма
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В
	|			(ВЫБРАТЬ
	|				НДСВключенныйВСтоимость.СчетФактура
	|			ИЗ
	|				ВТНДСВключенныйВСтоимость КАК НДСВключенныйВСтоимость)
	|	И АвансовыйОтчет.Проведен
	|	И АвансовыйОтчет.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И АвансовыйОтчет.Организация В(&Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка,
	|	ВЫРАЗИТЬ(ПоступлениеДопРасходов.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ПоступлениеДопРасходов.СуммаДокумента - ПоступлениеДопРасходов.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2))
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В
	|			(ВЫБРАТЬ
	|				НДСВключенныйВСтоимость.СчетФактура
	|			ИЗ
	|				ВТНДСВключенныйВСтоимость КАК НДСВключенныйВСтоимость)
	|	И ПоступлениеДопРасходов.Проведен
	|	И ПоступлениеДопРасходов.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеДопРасходов.Организация В(&Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеНМА.Ссылка,
	|	ВЫРАЗИТЬ(ПоступлениеНМА.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ПоступлениеНМА.СуммаДокумента - ПоступлениеНМА.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2))
	|ИЗ
	|	Документ.ПоступлениеНМА КАК ПоступлениеНМА
	|ГДЕ
	|	ПоступлениеНМА.Ссылка В
	|			(ВЫБРАТЬ
	|				НДСВключенныйВСтоимость.СчетФактура
	|			ИЗ
	|				ВТНДСВключенныйВСтоимость КАК НДСВключенныйВСтоимость)
	|	И ПоступлениеНМА.Проведен
	|	И ПоступлениеНМА.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеНМА.Организация В(&Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаДокумента - ПоступлениеТоваровУслуг.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				НДСВключенныйВСтоимость.СчетФактура
	|			ИЗ
	|				ВТНДСВключенныйВСтоимость КАК НДСВключенныйВСтоимость)
	|	И ПоступлениеТоваровУслуг.Проведен
	|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеТоваровУслуг.Организация В(&Организация)
	|	И ПоступлениеТоваровУслуг.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеИзПереработки.Ссылка,
	|	ВЫРАЗИТЬ(ПоступлениеИзПереработки.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ПоступлениеИзПереработки.СуммаДокумента - ПоступлениеИзПереработки.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2))
	|ИЗ
	|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка В
	|			(ВЫБРАТЬ
	|				НДСВключенныйВСтоимость.СчетФактура
	|			ИЗ
	|				ВТНДСВключенныйВСтоимость КАК НДСВключенныйВСтоимость)
	|	И ПоступлениеИзПереработки.Проведен
	|	И ПоступлениеИзПереработки.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеИзПереработки.Организация В(&Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументы.ДокументРегистратор КАК ДокументРегистратор,
	|	СУММА(ЕСТЬNULL(ВТНДСВключенныйВСтоимость.НДСОборот, ВТДокументы.СуммаНДС)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(ВТНДСВключенныйВСтоимость.СуммаБезНДСОборот, ВТДокументы.Сумма)) КАК Сумма
	|ИЗ
	|	ВТДокументы КАК ВТДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСВключенныйВСтоимость КАК ВТНДСВключенныйВСтоимость
	|		ПО ВТДокументы.ДокументРегистратор = ВТНДСВключенныйВСтоимость.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументы.ДокументРегистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетПоПриобретеннымЦенностямНеВключенныеПервичка = Запрос.Выполнить().Выбрать();
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	ВключенныеВБазу = 0;
	Если ВычетПоПриобретеннымЦенностямВключенные.Следующий() Тогда
		
		ВключенныеВБазу   = ВычетПоПриобретеннымЦенностямВключенные.СуммаНДС;
		Если ВычетПоПриобретеннымЦенностямВключенные.КоличествоОшибок > 0 Тогда
			СтруктураВозвращаемыхПараметров.Вставить("НаличиеОшибок", Истина);
		КонецЕсли;
	КонецЕсли;
	
	НеВключенныеВБазу = 0;
	ПеренесенныеВычеты = 0;
	КоличествоНеВключенныеРегламенты = 0;
	Если РасшифроватьНеВключенные Тогда
		Пока ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.Следующий() Цикл
			Если ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.ПеренесенныеВычеты Тогда
				ПеренесенныеВычеты = ПеренесенныеВычеты + ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.СуммаНДС;
			КонецЕсли;
			НеВключенныеВБазу = НеВключенныеВБазу + ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.СуммаНДС;
			КоличествоНеВключенныеРегламенты = КоличествоНеВключенныеРегламенты 
				+ ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.КоличествоДокументов;
		КонецЦикла;
	Иначе
		Если ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.Следующий() Тогда
			НеВключенныеВБазу = НеВключенныеВБазу + ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.СуммаНДС;
		КонецЕсли;
		КоличествоНеВключенныеРегламенты = ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.Количество();
	КонецЕсли;
	
	Если ВычетПоПриобретеннымЦенностямНеВключенныеПервичка.Следующий() Тогда
		НеВключенныеВБазу = НеВключенныеВБазу + ВычетПоПриобретеннымЦенностямНеВключенныеПервичка.СуммаНДС;
	КонецЕсли;
		
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("ПеренесенныеВычеты", ПеренесенныеВычеты);
	
	КоличествоЗаписей = ВычетПоПриобретеннымЦенностямВключенные.Количество()
		+ КоличествоНеВключенныеРегламенты
		+ ВычетПоПриобретеннымЦенностямНеВключенныеПервичка.Количество();
		
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;

КонецФункции // ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям()
// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС при исполнении обязанностей налогового агента
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетНалоговыйАгент(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйОстатки.НДСОстаток,
	|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента
	|ПОМЕСТИТЬ ВТНДСПредъявленныйОстатки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК НДСПредъявленныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СчетУчетаНДС,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйРеализация0Остатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0ОстаткиНалоговыйАгент
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						НДСПредъявленныйОстатки.СчетФактура
	|					ИЗ
	|						ВТНДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки)) КАК НДСПредъявленныйРеализация0Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ПОМЕСТИТЬ ВТХозрасчетныйОстаткиНалоговыйАгент
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоСледующегоПериода,
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами),
	|			Организация В (&Организация)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						НДСПредъявленныйОстатки.СчетФактура
	|					ИЗ
	|						ВТНДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйПогашение.Регистратор КАК Регистратор,
	|	ХозрасчетныйПогашение.Субконто1
	|ПОМЕСТИТЬ ВТХозрасчетныйПогашениеНалоговыйАгент
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			Регистратор,
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами),
	|			Организация В (&Организация)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						НДСПредъявленныйОстатки.СчетФактура
	|					ИЗ
	|						ВТНДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки),
	|			КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)),
	|			) КАК ХозрасчетныйПогашение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадолженностьПередБюджетом.Субконто1 КАК Субконто1,
	|	ЗадолженностьПередБюджетом.СуммаОстатокКт
	|ПОМЕСТИТЬ ВТЗадолженностьПередБюджетомНалоговыйАгент
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоСледующегоПериода, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами), Организация В (&Организация)) КАК ЗадолженностьПередБюджетом
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыПогашенияВБюджет.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОборотыПогашенияВБюджет.Регистратор
	|ПОМЕСТИТЬ ВТХозрасчетныйОборотыПогашенияВБюджетНалоговыйАгент
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, &КонецПериодаГраница, Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами), Организация В (&Организация), КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)), ) КАК ХозрасчетныйОборотыПогашенияВБюджет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйПогашение.Субконто1 КАК Субконто1,
	|	ХозрасчетныйПогашение.Регистратор КАК Регистратор,
	|	ХозрасчетныйОборотыПогашенияВБюджет.Регистратор КАК ДокументОплатыВБюджет
	|ПОМЕСТИТЬ ВТХозрасчетныйНалоговыйАгентРезультирующаяТаблица
	|ИЗ
	|	ВТХозрасчетныйПогашениеНалоговыйАгент КАК ХозрасчетныйПогашение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОборотыПогашенияВБюджетНалоговыйАгент КАК ХозрасчетныйОборотыПогашенияВБюджет
	|		ПО ХозрасчетныйПогашение.Регистратор = ХозрасчетныйОборотыПогашенияВБюджет.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.СчетФактура КАК ДокументРегистратор,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК СуммаНДС
	|ИЗ
	|	ВТНДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПредъявленныйРеализация0ОстаткиНалоговыйАгент КАК НДСПредъявленныйРеализация0Остатки
	|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПредъявленныйРеализация0Остатки.СчетФактура
	|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПредъявленныйРеализация0Остатки.ВидЦенности
	|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПредъявленныйРеализация0Остатки.СтавкаНДС
	|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС
	|			И (НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток + НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОстаткиНалоговыйАгент КАК ХозрасчетныйОстатки
	|		ПО НДСПредъявленныйОстатки.СчетФактура = ХозрасчетныйОстатки.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйНалоговыйАгентРезультирующаяТаблица КАК ХозрасчетныйПогашение
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЗадолженностьПередБюджетомНалоговыйАгент КАК ЗадолженностьПередБюджетом
	|			ПО ХозрасчетныйПогашение.Регистратор = ЗадолженностьПередБюджетом.Субконто1
	|		ПО НДСПредъявленныйОстатки.СчетФактура = ХозрасчетныйПогашение.Субконто1
	|ГДЕ
	|	(НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСПредъявленныйОстатки.НДСОстаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОстатки.СчетФактура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) > 0
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетПриИсполненииОНАНеВключенные = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДокументОплаты КАК ДокументОплаты
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокОборотыНалоговыйАгентВычеты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Организация В (&Организация)
	|				И Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДокументОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Организация В (&Организация)
	|				И Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК ДокументРегистратор,
	|	СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	НДСЗаписиКнигиПокупокОборотыНалоговыйАгентВычеты КАК НДСЗаписиКнигиПокупокОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетПриИсполненииОНАВключенные = Запрос.Выполнить().Выбрать();
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	
	ВключенныеВБазу = 0;
	
	Если ВычетПриИсполненииОНАВключенные.Следующий() Тогда
		ВключенныеВБазу   = ВычетПриИсполненииОНАВключенные.СуммаНДС;
	КонецЕсли;
	
	НеВключенныеВБазу = 0;
	Если ВычетПриИсполненииОНАНеВключенные.Следующий() Тогда
		НеВключенныеВБазу   = ВычетПриИсполненииОНАНеВключенные.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетПриИсполненииОНАВключенные.Количество()
		+  ВычетПриИсполненииОНАНеВключенные.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхВычетИсполнениеОНА()

//	Наборы при упрощенном учете НДС

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС при реализации в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеРеализацияУпрощенныйУчетНДС(Запрос)
				
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура КАК СчетФактура,
	|	КнигаПродаж.СтавкаНДС КАК СтавкаНДС,
	|	КнигаПродаж.СуммаБезНДСОборот КАК Сумма,
	|	КнигаПродаж.НДСОборот КАК СуммаНДС
	|ПОМЕСТИТЬ ВТСоставКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами))
	|				И НЕ Событие В (&СобытияНеОтражаемыеВРазделеНачисленияПоРеализации)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК КнигаПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура,
	|	КнигаПродаж.СтавкаНДС,
	|	КнигаПродаж.СуммаБезНДСОборот,
	|	КнигаПродаж.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами))
	|				И НЕ Событие В (&СобытияНеОтражаемыеВРазделеНачисленияПоРеализации)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК КнигаПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура КАК ДокументРегистратор,
	|	КнигаПродаж.СтавкаНДС КАК СтавкаНДС,
	|	2 КАК РангОшибки
	|ПОМЕСТИТЬ ВТОперацииСОшибками
	|ИЗ
	|	ВТСоставКнигиПродаж КАК КнигаПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ПО (СчетФактураВыданный.ДокументОснование = КнигаПродаж.СчетФактура)
	|			И (НЕ(СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|					ИЛИ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАвансКомитента)
	|					ИЛИ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)))
	|ГДЕ
	|	СчетФактураВыданный.Ссылка ЕСТЬ NULL
	|	И НЕ КнигаПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И НЕ КнигаПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|	И НЕ КнигаПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоставКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ВТСоставКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	ВТОперацииСОшибками.ДокументРегистратор КАК ДокументРегистратор,
	|	МИНИМУМ(ВТСоставКнигиПродаж.СуммаНДС) КАК СуммаНДС,
	|	МИНИМУМ(ВТОперацииСОшибками.РангОшибки) КАК РангОшибки
	|ПОМЕСТИТЬ ВТПроведеноРанжированиеОшибок
	|ИЗ
	|	ВТСоставКнигиПродаж КАК ВТСоставКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОперацииСОшибками КАК ВТОперацииСОшибками
	|		ПО ВТСоставКнигиПродаж.СчетФактура = ВТОперацииСОшибками.ДокументРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПродаж.СчетФактура,
	|	ВТСоставКнигиПродаж.СтавкаНДС,
	|	ВТОперацииСОшибками.ДокументРегистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПроведеноРанжированиеОшибок.СчетФактура КАК ДокументРегистратор,
	|	СУММА(ВТПроведеноРанжированиеОшибок.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ВТПроведеноРанжированиеОшибок.РангОшибки ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоОшибок
	|ИЗ
	|	ВТПроведеноРанжированиеОшибок КАК ВТПроведеноРанжированиеОшибок
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПроведеноРанжированиеОшибок.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачислениеРеализацияУпрощенныйУчетНДСВключенные = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0; 
	СтруктураВозвращаемыхПараметров = Новый Структура();
	
	Если НачислениеРеализацияУпрощенныйУчетНДСВключенные.Следующий() Тогда
		
		ВключенныеВБазу   = НачислениеРеализацияУпрощенныйУчетНДСВключенные.СуммаНДС;
		Если НачислениеРеализацияУпрощенныйУчетНДСВключенные.КоличествоОшибок > 0 Тогда
			СтруктураВозвращаемыхПараметров.Вставить("НаличиеОшибок", Истина);
		КонецЕсли;	
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	 ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = НачислениеРеализацияУпрощенныйУчетНДСВключенные.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;	

КонецФункции // ПолучитьНаборДанныхНачислениеРеализацияУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС с полученных авансов в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС(Запрос, УчетНДС2012 = Ложь)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура КАК СчетФактура,
	|	СоставКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СоставКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот КАК НДСОборот,
	|	СоставКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	СоставКнигиПродаж.Событие КАК Событие,
	|	СоставКнигиПродаж.Регистратор КАК Регистратор,
	|	СоставКнигиПродаж.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	СоставКнигиПродаж.НомерСтроки КАК НомерСтроки,
	|	СоставКнигиПродаж.Покупатель КАК Контрагент
	|ПОМЕСТИТЬ ВТСоставКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура,
	|	СоставКнигиПродаж.ДоговорКонтрагента,
	|	СоставКнигиПродаж.СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот,
	|	СоставКнигиПродаж.ВидЦенности,
	|	СоставКнигиПродаж.Событие,
	|	СоставКнигиПродаж.Регистратор,
	|	СоставКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	СоставКнигиПродаж.НомерСтроки,
	|	СоставКнигиПродаж.Покупатель
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				И ЗаписьДополнительногоЛиста
	|				И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)) КАК СоставКнигиПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура КАК Реализация,
	|	СоставКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот КАК НДСОборот,
	|	СоставКнигиПродаж.Покупатель КАК Контрагент
	|ПОМЕСТИТЬ ВТРеализации
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Авто,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура,
	|	СоставКнигиПродаж.СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот,
	|	СоставКнигиПродаж.Покупатель
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			Авто,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И ЗаписьДополнительногоЛиста
	|				И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)) КАК СоставКнигиПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК СчетФактура,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.Субконто3 КАК Контрагент,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК Реализация
	|ПОМЕСТИТЬ ВТРеализацииДокументыОплаты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В (&СписокСчетовАвансовПолученных),
	|			&ВидыСубконтоДокументДоговорКонтрагент,
	|			Организация В (&Организация)
	|				И КорСубконто1 В
	|					(ВЫБРАТЬ
	|						ВТРеализации.Реализация
	|					ИЗ
	|						ВТРеализации КАК ВТРеализации),
	|			,
	|			&ВидыСубконтоДокументДоговорКонтрагент) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ ВТРеализации.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВТРеализации.СуммаБезНДСОборот КАК СуммаБезНДСОборот,
	|	ВТРеализации.НДСОборот КАК НДСОборот,
	|	ВТРеализацииДокументыОплаты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТРеализацииДокументыОплаты.СчетФактура КАК СчетФактура,
	|	ВТРеализацииДокументыОплаты.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВТЗачетАвансовПоРеализации
	|ИЗ
	|	ВТРеализации КАК ВТРеализации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРеализацииДокументыОплаты КАК ВТРеализацииДокументыОплаты
	|		ПО ВТРеализации.Реализация = ВТРеализацииДокументыОплаты.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК СчетФактура,
	|	ХозрасчетныйОстаткиИОбороты.Субконто3 КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &КонецПериода < ДАТАВРЕМЯ(2019, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|	КОНЕЦ КАК СтавкаНДСПредположительная,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК Сумма,
	|	ВЫБОР
	|		КОГДА &КонецПериода < ДАТАВРЕМЯ(2019, 1, 1)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт - ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт * 18 / 118 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт - ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт * 20 / 120 КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &КонецПериода < ДАТАВРЕМЯ(2019, 1, 1)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт * 18 / 118 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт * 20 / 120 КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДС
	|ПОМЕСТИТЬ ВТХозрасчетныйВсеОстаткиАвансыПолученные
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериодаГраница, , , Счет В (&СписокСчетовАвансовПолученных), &ВидыСубконтоДокументДоговорКонтрагент, Организация В (&Организация)) КАК ХозрасчетныйОстаткиИОбороты
	|ГДЕ
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2,
	|	ХозрасчетныйОстаткиИОбороты.Субконто3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка КАК Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ РасшифровкаПлатежа.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаПлатежа * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаНДС * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	СУММА(ВЫРАЗИТЬ((РасшифровкаПлатежа.СуммаПлатежа - РасшифровкаПлатежа.СуммаНДС) * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС
	|ПОМЕСТИТЬ СуммыПлатежей
	|ИЗ
	|	Документ.ПоступлениеНаРасчетныйСчет.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные.СчетФактура
	|			ИЗ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ РасшифровкаПлатежа.СтавкаНДС
	|	КОНЕЦ,
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаПлатежа * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаНДС * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ((РасшифровкаПлатежа.СуммаПлатежа - РасшифровкаПлатежа.СуммаНДС) * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2)))
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные.СчетФактура
	|			ИЗ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ РасшифровкаПлатежа.СтавкаНДС
	|	КОНЕЦ,
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаПлатежа * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаНДС * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ((РасшифровкаПлатежа.СуммаПлатежа - РасшифровкаПлатежа.СуммаНДС) * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|				КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|					ТОГДА 1
	|				ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|			КОНЕЦ) КАК ЧИСЛО(15, 2)))
	|ИЗ
	|	Документ.ОплатаПлатежнойКартой.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные.СчетФактура
	|			ИЗ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАвансыПолученныеВременнаяТаблица.СчетФактура КАК СчетФактура,
	|	ВТАвансыПолученныеВременнаяТаблица.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТАвансыПолученныеВременнаяТаблица.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(СуммыПлатежей.СтавкаНДС, ВТАвансыПолученныеВременнаяТаблица.СтавкаНДСПредположительная) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыПлатежей.СуммаБезНДС ЕСТЬ NULL
	|			ТОГДА ВТАвансыПолученныеВременнаяТаблица.СуммаБезНДС
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СуммыПлатежей.СуммаБезНДС > ВТАвансыПолученныеВременнаяТаблица.СуммаБезНДС
	|					ТОГДА ВТАвансыПолученныеВременнаяТаблица.СуммаБезНДС
	|				ИНАЧЕ СуммыПлатежей.СуммаБезНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СуммыПлатежей.СуммаНДС ЕСТЬ NULL
	|				ТОГДА ВТАвансыПолученныеВременнаяТаблица.СуммаНДС
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СуммыПлатежей.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|							ИЛИ СуммыПлатежей.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|						ТОГДА 0
	|					КОГДА СуммыПлатежей.Сумма > ВТАвансыПолученныеВременнаяТаблица.Сумма
	|						ТОГДА ВЫБОР
	|								КОГДА СуммыПлатежей.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|									ТОГДА ВТАвансыПолученныеВременнаяТаблица.Сумма * 20 / 120
	|								КОГДА СуммыПлатежей.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|									ТОГДА ВТАвансыПолученныеВременнаяТаблица.Сумма * 18 / 118
	|								КОГДА СуммыПлатежей.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|									ТОГДА ВТАвансыПолученныеВременнаяТаблица.Сумма * 10 / 110
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ СуммыПлатежей.СуммаНДС
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТАвансыПолученные
	|ИЗ
	|	ВТХозрасчетныйВсеОстаткиАвансыПолученные КАК ВТАвансыПолученныеВременнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ДоговорыКонтрагентов.Ссылка = ВТАвансыПолученныеВременнаяТаблица.ДоговорКонтрагента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыПлатежей КАК СуммыПлатежей
	|		ПО ВТАвансыПолученныеВременнаяТаблица.СчетФактура = СуммыПлатежей.Ссылка
	|			И ВТАвансыПолученныеВременнаяТаблица.ДоговорКонтрагента = СуммыПлатежей.ДоговорКонтрагента
	|ГДЕ
	|	ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыПолученныеВременнаяТаблица.СуммаНДС) > 0
	|	И НЕ ДоговорыКонтрагентов.УчетАгентскогоНДСПокупателем
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВТАвансыПолученныеВременнаяТаблица.СчетФактура,
	|	ВТАвансыПолученныеВременнаяТаблица.ДоговорКонтрагента,
	|	ВТАвансыПолученныеВременнаяТаблица.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансыПолученные.СчетФактура КАК СчетФактура,
	|	АвансыПолученные.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	АвансыПолученные.СтавкаНДС КАК СтавкаНДС,
	|	АвансыПолученные.СуммаБезНДС - ЕСТЬNULL(ВТСоставКнигиПродаж.СуммаБезНДСОборот, 0) - ЕСТЬNULL(ВТЗачетАвансовПоРеализации.СуммаБезНДСОборот, 0) КАК СуммаБезНДС,
	|	АвансыПолученные.СуммаНДС - ЕСТЬNULL(ВТСоставКнигиПродаж.НДСОборот, 0) - ЕСТЬNULL(ВТЗачетАвансовПоРеализации.НДСОборот, 0) КАК СуммаНДС,
	|	ВТСоставКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	ВТСоставКнигиПродаж.Событие КАК Событие
	|ПОМЕСТИТЬ НевосстановленныеАвансы
	|ИЗ
	|	ВТАвансыПолученные КАК АвансыПолученные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоставКнигиПродаж КАК ВТСоставКнигиПродаж
	|		ПО АвансыПолученные.СчетФактура = ВТСоставКнигиПродаж.СчетФактура
	|			И (ВЫБОР
	|				КОГДА ВТСоставКнигиПродаж.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|					ТОГДА АвансыПолученные.Контрагент = ВТСоставКнигиПродаж.Контрагент
	|				ИНАЧЕ АвансыПолученные.ДоговорКонтрагента = ВТСоставКнигиПродаж.ДоговорКонтрагента
	|			КОНЕЦ)
	|			И АвансыПолученные.СтавкаНДС = ВТСоставКнигиПродаж.СтавкаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗачетАвансовПоРеализации КАК ВТЗачетАвансовПоРеализации
	|		ПО АвансыПолученные.СчетФактура = ВТЗачетАвансовПоРеализации.СчетФактура
	|			И (ВЫБОР
	|				КОГДА ВТЗачетАвансовПоРеализации.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|					ТОГДА АвансыПолученные.Контрагент = ВТЗачетАвансовПоРеализации.Контрагент
	|				ИНАЧЕ АвансыПолученные.ДоговорКонтрагента = ВТЗачетАвансовПоРеализации.ДоговорКонтрагента
	|			КОНЕЦ)
	|			И АвансыПолученные.СтавкаНДС = ВТЗачетАвансовПоРеализации.СтавкаНДС
	|ГДЕ
	|	АвансыПолученные.СуммаНДС - ЕСТЬNULL(ВТСоставКнигиПродаж.НДСОборот, 0) - ЕСТЬNULL(ВТЗачетАвансовПоРеализации.НДСОборот, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АвансыПолученные.СчетФактура,
	|	АвансыПолученные.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СчетФактура КАК СчетФактура,
	|	СУММА(0) КАК СуммаВключенные,
	|	СУММА(ХозрасчетныйОстатки.СуммаНДС) КАК СуммаНеВключенные
	|ИЗ
	|	НевосстановленныеАвансы КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСоставКнигиПродаж.СчетФактура,
	|	СУММА(ВТСоставКнигиПродаж.НДСОборот),
	|	СУММА(0)
	|ИЗ
	|	ВТСоставКнигиПродаж КАК ВТСоставКнигиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПродаж.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТСоставКнигиПродаж", "ВТСоставКнигиПродаж_Упрощенный");
		
	Запрос.Текст = ТекстЗапроса;
	
	НачислениеАвансыПолученныеУпрощенныйУчетНДС = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;

	Если НачислениеАвансыПолученныеУпрощенныйУчетНДС.Следующий() Тогда
		ВключенныеВБазу   = НачислениеАвансыПолученныеУпрощенныйУчетНДС.СуммаВключенные;
		НеВключенныеВБазу = НачислениеАвансыПолученныеУпрощенныйУчетНДС.СуммаНеВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	 	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", 
											  НачислениеАвансыПолученныеУпрощенныйУчетНДС.Количество() > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;	

КонецФункции // ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС с выданных авансов (по факту поступления) в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС(Запрос, УчетНДС2012 = Ложь)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1
	|ПОМЕСТИТЬ ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоСледующегоПериода, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные), Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТЗаписиКнигиПокупокОборотыСАвансовВыданныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным КАК ХозрасчетныйОстатки)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным КАК ХозрасчетныйОстатки)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТЗаписиКнигиПродажОборотыСАвансовВыданныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным КАК ХозрасчетныйОстатки)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СчетФактура, НДСЗаписиКнигиПродажОбороты.СчетФактура) КАК ДокументРегистратор,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0)) КАК СуммаНДС
	|ИЗ
	|	ВТЗаписиКнигиПокупокОборотыСАвансовВыданныхУпрощенныйУчет КАК НДСЗаписиКнигиПокупокОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаписиКнигиПродажОборотыСАвансовВыданныхУпрощенныйУчет КАК НДСЗаписиКнигиПродажОбороты
	|		ПО НДСЗаписиКнигиПокупокОбороты.СчетФактура = НДСЗаписиКнигиПродажОбороты.СчетФактура
	|			И НДСЗаписиКнигиПокупокОбороты.ВидЦенности = НДСЗаписиКнигиПродажОбороты.ВидЦенности
	|			И НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СчетФактура, НДСЗаписиКнигиПродажОбороты.СчетФактура)
	|ИТОГИ ПО
	|	ОБЩИЕ";  
	
	ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные = Запрос.Выполнить().Выбрать();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПродажОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)) КАК НДСЗаписиКнигиПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК ДокументРегистратор,
	|	СУММА(НДСЗаписиКнигиПродаж.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	ВТНДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТНДСЗаписиКнигиПродажОбороты", "ВТНДСЗаписиКнигиПродажОбороты_Упрощенный");
		
	Запрос.Текст = ТекстЗапроса;
	
	ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные.Следующий() Тогда 
		ВключенныеВБазу   = ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные.СуммаНДС;
	КонецЕсли;

	Если ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные.Следующий() Тогда 
		НеВключенныеВБазу = ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные.СуммаНДС;
	КонецЕсли;

	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные.Количество()
		+ ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС по прочим операциям в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//	СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеДругиеОперацииУпрощенныйУчетНДС(Запрос)

	//	В данном разделе отражаются начисленные пользователем суммы НДС, кроме любых видов авансов
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Регистратор КАК ДокументРегистратор,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Регистратор,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|ГДЕ
	|	НДСЗаписиКнигиПродажОбороты.Регистратор ССЫЛКА Документ.ОтражениеНачисленияНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Регистратор,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			Регистратор,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|ГДЕ
	|	НДСЗаписиКнигиПродажОбороты.Регистратор ССЫЛКА Документ.ОтражениеНачисленияНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.Регистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачислениеДругиеОперацииУпрощенныйУчетНДС = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;
	
	Если НачислениеДругиеОперацииУпрощенныйУчетНДС.Следующий() Тогда
		ВключенныеВБазу   = НачислениеДругиеОперацииУпрощенныйУчетНДС.СуммаНДС;
	КонецЕсли;
	
	НеВключенныеВБазу = 0;
		
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = НачислениеДругиеОперацииУпрощенныйУчетНДС.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);

	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхНачислениеДругиеОперацииУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС по приобретенным ценностям в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетПоПриобретеннымЦенностямУпрощенныйУчетНДС(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК ДокументРегистратор,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Регистратор,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|ГДЕ
	|	НЕ НДСЗаписиКнигиПокупокОбороты.Регистратор ССЫЛКА Документ.ФормированиеЗаписейКнигиПокупок
	|	И НЕ НДСЗаписиКнигиПокупокОбороты.Регистратор ССЫЛКА Документ.ОтражениеНДСКВычету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			Регистратор,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|ГДЕ
	|	НЕ НДСЗаписиКнигиПокупокОбороты.Регистратор ССЫЛКА Документ.ФормированиеЗаписейКнигиПокупок
	|	И НЕ НДСЗаписиКнигиПокупокОбороты.Регистратор ССЫЛКА Документ.ОтражениеНДСКВычету
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоставКнигиПокупок.ДокументРегистратор,
	|	СУММА(ВТСоставКнигиПокупок.НДСОборот) КАК СуммаНДС,
	|	СУММА(0) КАК КоличествоОшибок
	|ИЗ
	|	ВТСоставКнигиПокупок КАК ВТСоставКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПокупок.ДокументРегистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";
					  
	ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСВключенные = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка КАК ДокументРегистратор,
	|	СУММА(ВЫРАЗИТЬ(ВозвратТоваровОтПокупателя.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2))) КАК СуммаНДС
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Проведен
	|	И ВозвратТоваровОтПокупателя.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ВозвратТоваровОтПокупателя.Организация В(&Организация)
	|	И НЕ ВозвратТоваровОтПокупателя.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТСоставКнигиПокупок.ДокументРегистратор
	|				ИЗ
	|					ВТСоставКнигиПокупок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровОтПокупателя.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка,
	|	СУММА(ВЫРАЗИТЬ(ПоступлениеДопРасходов.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)))
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|ГДЕ
	|	ПоступлениеДопРасходов.НДСВключенВСтоимость
	|	И ПоступлениеДопРасходов.Проведен
	|	И ПоступлениеДопРасходов.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеДопРасходов.Организация В(&Организация)
	|	И НЕ ПоступлениеДопРасходов.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТСоставКнигиПокупок.ДокументРегистратор
	|				ИЗ
	|					ВТСоставКнигиПокупок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеИзПереработки.Ссылка,
	|	СУММА(ВЫРАЗИТЬ(ПоступлениеИзПереработки.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)))
	|ИЗ
	|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
	|ГДЕ
	|	ПоступлениеИзПереработки.НДСВключенВСтоимость
	|	И ПоступлениеИзПереработки.Проведен
	|	И ПоступлениеИзПереработки.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеИзПереработки.Организация В(&Организация)
	|	И НЕ ПоступлениеИзПереработки.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТСоставКнигиПокупок.ДокументРегистратор
	|				ИЗ
	|					ВТСоставКнигиПокупок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеИзПереработки.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеНМА.Ссылка,
	|	СУММА(ВЫРАЗИТЬ(ПоступлениеНМА.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)))
	|ИЗ
	|	Документ.ПоступлениеНМА КАК ПоступлениеНМА
	|ГДЕ
	|	ПоступлениеНМА.НДСВключенВСтоимость
	|	И ПоступлениеНМА.Проведен
	|	И ПоступлениеНМА.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеНМА.Организация В(&Организация)
	|	И НЕ ПоступлениеНМА.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТСоставКнигиПокупок.ДокументРегистратор
	|				ИЗ
	|					ВТСоставКнигиПокупок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеНМА.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	СУММА(ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаДокумента * 18 / 118 КАК ЧИСЛО(15, 2)))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.НДСВключенВСтоимость
	|	И ПоступлениеТоваровУслуг.Проведен
	|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеТоваровУслуг.Организация В(&Организация)
	|	И ПоступлениеТоваровУслуг.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку)
	|	И НЕ ПоступлениеТоваровУслуг.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТСоставКнигиПокупок.ДокументРегистратор
	|				ИЗ
	|					ВТСоставКнигиПокупок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслуг.Ссылка
	|ИТОГИ ПО
	|	ОБЩИЕ";

	ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСНеВключенные = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;
	НеВключенныеВБазу = 0;
	СтруктураВозвращаемыхПараметров = Новый Структура();
	
	Если ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСВключенные.Следующий() Тогда
		ВключенныеВБазу   = ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСВключенные.СуммаНДС;
		Если ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСВключенные.КоличествоОшибок > 0 Тогда
			СтруктураВозвращаемыхПараметров.Вставить("НаличиеОшибок", Истина);
		КонецЕсли;	
	КонецЕсли;
	
	Если ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСНеВключенные.Следующий() Тогда
		НеВключенныеВБазу = ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСНеВключенные.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	 ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);	
	
	
	КоличествоЗаписей = ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСВключенные.Количество()
		+ ВычетПоПриобретеннымЦенностямУпрощенныйУчетНДСНеВключенные.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
			
	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхВычетПоПриобретеннымЦенностямУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС с выданных авансов в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС(Запрос, УчетНДС2012 = Ложь)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК ДокументРегистратор,
	|	ВЫБОР
	|		КОГДА &КонецПериода < ДАТАВРЕМЯ(2019, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|	КОНЕЦ КАК СтавкаНДСПредположительная,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.Субконто3 КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &КонецПериода < ДАТАВРЕМЯ(2019, 1, 1)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СуммаОборотДт * 18 / 118 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.СуммаОборотДт * 20 / 120 КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДС
	|ПОМЕСТИТЬ ВТАвансыВыданныеЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериодаГраница, Регистратор, Счет В (&СписокСчетовАвансовВыданных), &ВидыСубконтоДокументДоговорКонтрагент, Организация В (&Организация), , ) КАК ХозрасчетныйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК СвойстваДоговора
	|		ПО ХозрасчетныйОбороты.Субконто2 = СвойстваДоговора.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСПоДоговорам КАК СтавкиНДСПоДоговорам
	|		ПО ХозрасчетныйОбороты.Субконто2 = СтавкиНДСПоДоговорам.ДоговорКонтрагента
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт > 0
	|	И ВЫБОР
	|			КОГДА СвойстваДоговора.СпособЗаполненияСтавкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияСтавкиНДС.Автоматически)
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(СтавкиНДСПоДоговорам.СпособЗаполненияСтавкиНДС, 0) = 0
	|							ТОГДА ИСТИНА
	|						КОГДА СтавкиНДСПоДоговорам.СпособЗаполненияСтавкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияСтавкиНДС.ИзКарточкиНоменклатуры)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СвойстваДоговора.СпособЗаполненияСтавкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияСтавкиНДС.ИзКарточкиНоменклатуры)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ДокументРегистратор,
	|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОстатки.Субконто3 КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &НачалоПериода < ДАТАВРЕМЯ(2019, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|	КОНЕЦ КАК СтавкаНДСПредположительная,
	|	ВЫБОР
	|		КОГДА &НачалоПериода < ДАТАВРЕМЯ(2019, 1, 1)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.СуммаОстатокДт * 18 / 118 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.СуммаОстатокДт * 20 / 120 КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДС
	|ПОМЕСТИТЬ ВТОстаткиАвансовВыданных
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоПериода, Счет В (&СписокСчетовАвансовВыданных), &ВидыСубконтоДокументДоговорКонтрагент, Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК СвойстваДоговора
	|		ПО ХозрасчетныйОстатки.Субконто2 = СвойстваДоговора.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСПоДоговорам КАК СтавкиНДСПоДоговорам
	|		ПО ХозрасчетныйОстатки.Субконто2 = СтавкиНДСПоДоговорам.ДоговорКонтрагента
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|	И ВЫБОР
	|			КОГДА СвойстваДоговора.СпособЗаполненияСтавкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияСтавкиНДС.Автоматически)
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(СтавкиНДСПоДоговорам.СпособЗаполненияСтавкиНДС, 0) = 0
	|							ТОГДА ИСТИНА
	|						КОГДА СтавкиНДСПоДоговорам.СпособЗаполненияСтавкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияСтавкиНДС.ИзКарточкиНоменклатуры)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СвойстваДоговора.СпособЗаполненияСтавкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияСтавкиНДС.ИзКарточкиНоменклатуры)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот КАК НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик КАК Контрагент
	|ПОМЕСТИТЬ ВТЗачетАвансовВыданных
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&НачалоПериода,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ВТОстаткиАвансовВыданных.ДокументРегистратор
	|					ИЗ
	|						ВТОстаткиАвансовВыданных КАК ВТОстаткиАвансовВыданных)) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОстаткиАвансовВыданных.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТОстаткиАвансовВыданных.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТОстаткиАвансовВыданных.Контрагент КАК Контрагент,
	|	ВТОстаткиАвансовВыданных.СтавкаНДСПредположительная КАК СтавкаНДСПредположительная,
	|	ВТОстаткиАвансовВыданных.СуммаНДС - ЕСТЬNULL(ВТЗачетАвансовВыданных.НДСОборот, 0) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТОстаткиНезачтенныхАвансовВыданных
	|ИЗ
	|	ВТОстаткиАвансовВыданных КАК ВТОстаткиАвансовВыданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗачетАвансовВыданных КАК ВТЗачетАвансовВыданных
	|		ПО ВТОстаткиАвансовВыданных.ДокументРегистратор = ВТЗачетАвансовВыданных.СчетФактура
	|			И (ВЫБОР
	|				КОГДА ВТЗачетАвансовВыданных.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|					ТОГДА ВТОстаткиАвансовВыданных.Контрагент = ВТЗачетАвансовВыданных.Контрагент
	|				ИНАЧЕ ВТОстаткиАвансовВыданных.ДоговорКонтрагента = ВТЗачетАвансовВыданных.ДоговорКонтрагента
	|			КОНЕЦ)
	|ГДЕ
	|	ВТОстаткиАвансовВыданных.СуммаНДС - ЕСТЬNULL(ВТЗачетАвансовВыданных.НДСОборот, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАвансыВыданныеЗаПериод.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТАвансыВыданныеЗаПериод.СтавкаНДСПредположительная КАК СтавкаНДСПредположительная,
	|	ВТАвансыВыданныеЗаПериод.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТАвансыВыданныеЗаПериод.Контрагент КАК Контрагент,
	|	ВТАвансыВыданныеЗаПериод.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ВТАвансыВыданныеВременнаяТаблица
	|ИЗ
	|	ВТАвансыВыданныеЗаПериод КАК ВТАвансыВыданныеЗаПериод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОстаткиНезачтенныхАвансовВыданных.ДокументРегистратор,
	|	ВТОстаткиНезачтенныхАвансовВыданных.СтавкаНДСПредположительная,
	|	ВТОстаткиНезачтенныхАвансовВыданных.ДоговорКонтрагента,
	|	ВТОстаткиНезачтенныхАвансовВыданных.Контрагент,
	|	ВТОстаткиНезачтенныхАвансовВыданных.СуммаНДС
	|ИЗ
	|	ВТОстаткиНезачтенныхАвансовВыданных КАК ВТОстаткиНезачтенныхАвансовВыданных
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка КАК Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ РасшифровкаПлатежа.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА РасшифровкаПлатежа.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|				ТОГДА РасшифровкаПлатежа.СуммаНДС
	|			ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаНДС * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|						КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|							ТОГДА 1
	|						ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|					КОНЕЦ) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаНДС
	|ПОМЕСТИТЬ РасшифровкаПлатежей
	|ИЗ
	|	Документ.СписаниеСРасчетногоСчета.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор
	|			ИЗ
	|				ВТАвансыВыданныеВременнаяТаблица)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ РасшифровкаПлатежа.СтавкаНДС
	|	КОНЕЦ,
	|	СУММА(ВЫБОР
	|			КОГДА РасшифровкаПлатежа.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|				ТОГДА РасшифровкаПлатежа.СуммаНДС
	|			ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.СуммаНДС * (РасшифровкаПлатежа.КурсВзаиморасчетов / ВЫБОР
	|						КОГДА РасшифровкаПлатежа.КратностьВзаиморасчетов = 0
	|							ТОГДА 1
	|						ИНАЧЕ РасшифровкаПлатежа.КратностьВзаиморасчетов
	|					КОНЕЦ) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ)
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор
	|			ИЗ
	|				ВТАвансыВыданныеВременнаяТаблица)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.ДоговорКонтрагента,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор КАК ДокументРегистратор,
	|	ЕСТЬNULL(ВТЗачетАвансовВыданных.ДоговорКонтрагента, ВТАвансыВыданныеВременнаяТаблица.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ВТЗачетАвансовВыданных.Контрагент, ВТАвансыВыданныеВременнаяТаблица.Контрагент) КАК Контрагент,
	|	ЕСТЬNULL(СуммыПлатежей.СтавкаНДС, ВТАвансыВыданныеВременнаяТаблица.СтавкаНДСПредположительная) КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыВыданныеВременнаяТаблица.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаАвансыВыданные
	|ИЗ
	|	ВТАвансыВыданныеВременнаяТаблица КАК ВТАвансыВыданныеВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПлатежей КАК СуммыПлатежей
	|		ПО ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор = СуммыПлатежей.Ссылка
	|			И ВТАвансыВыданныеВременнаяТаблица.ДоговорКонтрагента = СуммыПлатежей.ДоговорКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗачетАвансовВыданных КАК ВТЗачетАвансовВыданных
	|		ПО ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор = ВТЗачетАвансовВыданных.СчетФактура
	|			И (ВЫБОР
	|				КОГДА ВТЗачетАвансовВыданных.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|					ТОГДА ВТАвансыВыданныеВременнаяТаблица.Контрагент = ВТЗачетАвансовВыданных.Контрагент
	|				ИНАЧЕ ВТАвансыВыданныеВременнаяТаблица.ДоговорКонтрагента = ВТЗачетАвансовВыданных.ДоговорКонтрагента
	|			КОНЕЦ)
	|ГДЕ
	|	ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыВыданныеВременнаяТаблица.СуммаНДС) > 0
	|	И ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыВыданныеВременнаяТаблица.СуммаНДС) - ЕСТЬNULL(ВТЗачетАвансовВыданных.НДСОборот, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК ДокументРегистратор,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот КАК СуммаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик КАК Контрагент,
	|	НДСЗаписиКнигиПокупокОбороты.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ СоставКнигиПокупокВЧастиАвансов
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.НомерСтроки
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоставКнигиПокупокВЧастиАвансов.ДокументРегистратор КАК ДокументРегистратор,
	|	СоставКнигиПокупокВЧастиАвансов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СоставКнигиПокупокВЧастиАвансов.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ДоговорВКнигеПокупокПоРегистратору
	|ИЗ
	|	СоставКнигиПокупокВЧастиАвансов КАК СоставКнигиПокупокВЧастиАвансов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СоставКнигиПокупокВЧастиАвансов.ДоговорКонтрагента,
	|	СоставКнигиПокупокВЧастиАвансов.ДокументРегистратор,
	|	СоставКнигиПокупокВЧастиАвансов.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАвансыВыданные.ДокументРегистратор КАК ДокументРегистратор,
	|	ЕСТЬNULL(ДоговорВКнигеПокупокПоРегистратору.ДоговорКонтрагента, ТаблицаАвансыВыданные.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ДоговорВКнигеПокупокПоРегистратору.Контрагент, ТаблицаАвансыВыданные.Контрагент) КАК Контрагент,
	|	ТаблицаАвансыВыданные.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаАвансыВыданные.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ Авансы
	|ИЗ
	|	ТаблицаАвансыВыданные КАК ТаблицаАвансыВыданные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДоговорВКнигеПокупокПоРегистратору КАК ДоговорВКнигеПокупокПоРегистратору
	|		ПО ТаблицаАвансыВыданные.ДокументРегистратор = ДоговорВКнигеПокупокПоРегистратору.ДокументРегистратор
	|			И ТаблицаАвансыВыданные.Контрагент = ДоговорВКнигеПокупокПоРегистратору.Контрагент
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансыВыданные.ДокументРегистратор,
	|	ЕСТЬNULL(ДоговорВКнигеПокупокПоРегистратору.ДоговорКонтрагента, ТаблицаАвансыВыданные.ДоговорКонтрагента),
	|	ЕСТЬNULL(ДоговорВКнигеПокупокПоРегистратору.Контрагент, ТаблицаАвансыВыданные.Контрагент),
	|	ТаблицаАвансыВыданные.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА СоставКнигиПокупокВЧастиАвансов.ДокументРегистратор ЕСТЬ NULL
	|				ТОГДА ЕСТЬNULL(СоставКнигиПокупокВЧастиАвансов.СуммаНДС, Авансы.СуммаНДС)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНеВключеннаяВБазу,
	|	СУММА(ВЫБОР
	|			КОГДА СоставКнигиПокупокВЧастиАвансов.ДокументРегистратор ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(СоставКнигиПокупокВЧастиАвансов.СуммаНДС, Авансы.СуммаНДС)
	|		КОНЕЦ) КАК СуммаВключеннаяВБазу
	|ИЗ
	|	Авансы КАК Авансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставКнигиПокупокВЧастиАвансов КАК СоставКнигиПокупокВЧастиАвансов
	|		ПО Авансы.ДокументРегистратор = СоставКнигиПокупокВЧастиАвансов.ДокументРегистратор
	|			И (ВЫБОР
	|				КОГДА СоставКнигиПокупокВЧастиАвансов.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|					ТОГДА Авансы.Контрагент = СоставКнигиПокупокВЧастиАвансов.Контрагент
	|				ИНАЧЕ Авансы.ДоговорКонтрагента = СоставКнигиПокупокВЧастиАвансов.ДоговорКонтрагента
	|			КОНЕЦ)
	|			И Авансы.СтавкаНДС = СоставКнигиПокупокВЧастиАвансов.СтавкаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ДокументРегистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетАвансыВыданныеУпрощенныйУчетНДС = Запрос.Выполнить().Выбрать();
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если ВычетАвансыВыданныеУпрощенныйУчетНДС.Следующий() Тогда	
		ВключенныеВБазу   = ВычетАвансыВыданныеУпрощенныйУчетНДС.СуммаВключеннаяВБазу;
		НеВключенныеВБазу = ВычетАвансыВыданныеУпрощенныйУчетНДС.СуммаНеВключеннаяВБазу;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетАвансыВыданныеУпрощенныйУчетНДС.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;	

КонецФункции // ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС с полученных авансов (по факту реализации) в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС(Запрос, УчетНДС2012 = Ложь)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1
	|ПОМЕСТИТЬ ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоСледующегоПериода, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоАвансамИПредоплатам), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные), Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента1,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПродажОборотыСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	ВидЦенности,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПокупокОборотыСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	ВидЦенности,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоСледующегоПериода, Счет В (&СписокСчетовАвансовПолученных), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами), Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК ДокументРегистратор,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0)) КАК СуммаНДС
	|ИЗ
	|	ВТНДСЗаписиКнигиПродажОборотыСАвансовПолученныхУпрощенныйУчет КАК НДСЗаписиКнигиПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСЗаписиКнигиПокупокОборотыСАвансовПолученныхУпрощенныйУчет КАК НДСЗаписиКнигиПокупокОбороты
	|		ПО (НДСЗаписиКнигиПокупокОбороты.СчетФактура = НДСЗаписиКнигиПродажОбороты.СчетФактура)
	|			И (НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента = НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента)
	|			И (НДСЗаписиКнигиПокупокОбороты.ВидЦенности = НДСЗаписиКнигиПродажОбороты.ВидЦенности)
	|			И (НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = НДСЗаписиКнигиПродажОбороты.СтавкаНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки
	|		ПО НДСЗаписиКнигиПродажОбороты.СчетФактура = ХозрасчетныйОстатки.Субконто1
	|ГДЕ
	|	ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот, 0) > 0
	|	И ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПокупокВЧастиАвансовПолученных
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	СУММА(НДСЗаписиКнигиПокупок.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	ВТНДСЗаписиКнигиПокупокВЧастиАвансовПолученных КАК НДСЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки
	|		ПО НДСЗаписиКнигиПокупок.СчетФактура = ХозрасчетныйОстатки.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;
	
	Если ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные.Следующий() Тогда	
		ВключенныеВБазу   = ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные.СуммаНДС;
	КонецЕсли;
	
	НеВключенныеВБазу = 0;
	
	Если ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные.Следующий() Тогда	
		НеВключенныеВБазу = ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные.Количество()
		+ ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;	
	
КонецФункции // ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС по прочим операциям в случае ведения упрощенного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетДругиеОперацииУпрощенныйУчетНДС(Запрос)

	//	В данном разделе отражаются вычеты НДС введенные пользователем, кроме любых видов авансов
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.Регистратор КАК ДокументРегистратор,
	|	СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Регистратор,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыПолученные, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные))
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|ГДЕ
	|	НДСЗаписиКнигиПокупокОбороты.Регистратор ССЫЛКА Документ.ОтражениеНДСКВычету
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.Регистратор,
	|	СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			Регистратор,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыПолученные, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные))
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|ГДЕ
	|	НДСЗаписиКнигиПокупокОбороты.Регистратор ССЫЛКА Документ.ОтражениеНДСКВычету
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.Регистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетДругиеОперацииУпрощенныйУчетНДС = Запрос.Выполнить().Выгрузить();
	
	ВключенныеВБазу = ВычетДругиеОперацииУпрощенныйУчетНДС.Итог("СуммаНДС");
	
	НеВключенныеВБазу = 0;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетДругиеОперацииУпрощенныйУчетНДС.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхВычетДругиеОперацииУпрощенныйУчетНДС()

//	Наборы при сложном учете НДС

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начислению НДС в случае реализации по ставке НДС 0%
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеРеализация0(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСРеализация0Остатки.СчетФактура КАК ДокументРегистратор,
	|	СУММА(0) КАК СуммаВключенные,
	|	СУММА(ЕСТЬNULL(НДСРеализация0Остатки.НДСОстаток, 0)) КАК СуммаНеВключенные,
	|	СУММА(НДСРеализация0Остатки.СуммаБезНДСОстаток) КАК СуммаБезНДС
	|ИЗ
	|	РегистрНакопления.НДСРеализация0.Остатки(&НачалоСледующегоПериода, Организация В (&Организация)) КАК НДСРеализация0Остатки
	|ГДЕ
	|	(НДСРеализация0Остатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСРеализация0Остатки.НДСОстаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРеализация0Остатки.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура,
	|	СУММА(КнигаПродаж.НДСОборот),
	|	СУММА(0),
	|	СУММА(КнигаПродаж.СуммаБезНДСОборот)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0), ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0))
	|				И НЕ ЗаписьДополнительногоЛиста) КАК КнигаПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаПродаж.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура,
	|	СУММА(КнигаПродаж.НДСОборот),
	|	СУММА(0),
	|	СУММА(КнигаПродаж.СуммаБезНДСОборот)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0), ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0))
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК КнигаПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаПродаж.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачислениеРеализация0 = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;
	НеВключенныеВБазу = 0;
	
	Если НачислениеРеализация0.Следующий() Тогда
		ВключенныеВБазу   = НачислениеРеализация0.СуммаВключенные;
		НеВключенныеВБазу = НачислениеРеализация0.СуммаНеВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = НачислениеРеализация0.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;

КонецФункции // ПолучитьНаборДанныхНачислениеРеализация0()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начислению НДС по прочим операциям в случае ведения сложного учета НДС
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеВосстановлениеДругиеОперации(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСНачисленныйОстатки.СчетФактура КАК ДокументРегистратор,
	|	СУММА(0) КАК СуммаВключенные,
	|	СУММА(НДСНачисленныйОстатки.НДСОстаток) КАК СуммаНеВключенные
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.НДСВосстановлен)) КАК НДСНачисленныйОстатки
	|ГДЕ
	|	НЕ(НДСНачисленныйОстатки.СуммаБезНДСОстаток = 0
	|				И НДСНачисленныйОстатки.НДСОстаток = 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНачисленныйОстатки.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот),
	|	СУММА(0)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот),
	|	СУММА(0)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачислениеВосстановлениеДругиеОперации = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если НачислениеВосстановлениеДругиеОперации.Следующий() Тогда
		ВключенныеВБазу   = НачислениеВосстановлениеДругиеОперации.СуммаВключенные;
		НеВключенныеВБазу = НачислениеВосстановлениеДругиеОперации.СуммаНеВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	 ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = НачислениеВосстановлениеДругиеОперации.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхНачислениеВосстановлениеДругиеОперации()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	операциям, начисление НДС с которых не отражается в книге продаж
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхНачислениеНеОтражаетсяВКнигеПродаж(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФормированиеЗаписейКнигиПродажНеОтражаетсяВКниге.СчетФактура КАК ДокументРегистратор,
	|	СУММА(ФормированиеЗаписейКнигиПродажНеОтражаетсяВКниге.НДС) КАК СуммаНДС
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПродаж.НеОтражаетсяВКниге КАК ФормированиеЗаписейКнигиПродажНеОтражаетсяВКниге
	|ГДЕ
	|	ФормированиеЗаписейКнигиПродажНеОтражаетсяВКниге.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ФормированиеЗаписейКнигиПродажНеОтражаетсяВКниге.Ссылка.Проведен
	|	И ФормированиеЗаписейКнигиПродажНеОтражаетсяВКниге.Ссылка.Организация В(&Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФормированиеЗаписейКнигиПродажНеОтражаетсяВКниге.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
		
	НачислениеНеОтражаетсяВКнигеПродаж = Запрос.Выполнить().Выбрать();
	
	Включенные = 0;
	Если  НачислениеНеОтражаетсяВКнигеПродаж.Следующий() Тогда
		Включенные = НачислениеНеОтражаетсяВКнигеПродаж.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	  Включенные);
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", НачислениеНеОтражаетсяВКнигеПродаж.Количество() > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхНачислениеНеОтражаетсяВКнигеПродаж()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС по приобретенным ценностям, реализованным по ставке НДС 0%
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям0(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПокупокПоПриобретеннымЦенностям0
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0), ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0))
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0), ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0))
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК СоставКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйРеализация0Остатки.НДСОстаток,
	|	НДСПредъявленныйРеализация0Остатки.Состояние,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности
	|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0Остатки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейНалоговыйАгент)) КАК НДСПредъявленныйРеализация0Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйПоПриобретеннымЦенностям0
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)) КАК НДСПредъявленныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК ДокументРегистратор,
	|	СУММА(СоставКнигиПокупок.НДСОборот) КАК СуммаВключенные,
	|	СУММА(0) КАК СуммаНеВключенные
	|ИЗ
	|	ВТСоставКнигиПокупокПоПриобретеннымЦенностям0 КАК СоставКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	СоставКнигиПокупок.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура,
	|	СУММА(0),
	|	СУММА(НДСПредъявленныйРеализация0Остатки.НДСОстаток)
	|ИЗ
	|	ВТНДСПредъявленныйРеализация0Остатки КАК НДСПредъявленныйРеализация0Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПредъявленныйПоПриобретеннымЦенностям0 КАК НДСПредъявленныйОстатки
	|		ПО НДСПредъявленныйРеализация0Остатки.СчетФактура = НДСПредъявленныйОстатки.СчетФактура
	|			И НДСПредъявленныйРеализация0Остатки.СтавкаНДС = НДСПредъявленныйОстатки.СтавкаНДС
	|			И НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС = НДСПредъявленныйОстатки.СчетУчетаНДС
	|			И НДСПредъявленныйРеализация0Остатки.ВидЦенности = НДСПредъявленныйОстатки.ВидЦенности
	|ГДЕ
	|	(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
	|	И НДСПредъявленныйРеализация0Остатки.НДСОстаток <= НДСПредъявленныйОстатки.НДСОстаток
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	
	ВычетПоПриобретеннымЦенностям0 = Запрос.Выполнить().Выбрать();

	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если ВычетПоПриобретеннымЦенностям0.Следующий() Тогда
		ВключенныеВБазу   = ВычетПоПриобретеннымЦенностям0.СуммаВключенные;
		НеВключенныеВБазу = ВычетПоПриобретеннымЦенностям0.СуммаНеВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетПоПриобретеннымЦенностям0.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям0()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС при исполнении обязанностей налогового агента при реализации ценностей по ставке НДС 0%
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета
//
Функция ПолучитьНаборДанныхВычетНалоговыйАгент0(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
	|	НДСПредъявленныйРеализация0Остатки.Состояние,
	|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйРеализация0Остатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0НалоговыйАгент0
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)) КАК НДСПредъявленныйРеализация0Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйОстаткиНалоговыйАгент0
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК НДСПредъявленныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОбороты.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТХозрасчетныйОборотыНалоговыйАгент0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Регистратор,
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами),
	|			Организация В (&Организация)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						НДСПредъявленный.СчетФактура
	|					ИЗ
	|						ВТНДСПредъявленныйОстаткиНалоговыйАгент0 КАК НДСПредъявленный),
	|			КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)),
	|			) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыБюджет.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОборотыБюджет.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТХозрасчетныйОборотыБюджетНалоговыйАгент0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, &КонецПериодаГраница, Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами), Организация В (&Организация), КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)), ) КАК ХозрасчетныйОборотыБюджет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТХозрасчетныйОборотыНалоговыйАгент0.Субконто1 КАК Субконто1,
	|	ВТХозрасчетныйОборотыНалоговыйАгент0.Регистратор,
	|	ВТХозрасчетныйОборотыБюджетНалоговыйАгент0.Регистратор КАК РегистраторОплатыВБюджет
	|ПОМЕСТИТЬ ВТХозрасчетныйОборотыРезультирующая
	|ИЗ
	|	ВТХозрасчетныйОборотыНалоговыйАгент0 КАК ВТХозрасчетныйОборотыНалоговыйАгент0
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОборотыБюджетНалоговыйАгент0 КАК ВТХозрасчетныйОборотыБюджетНалоговыйАгент0
	|		ПО ВТХозрасчетныйОборотыНалоговыйАгент0.Регистратор = ВТХозрасчетныйОборотыБюджетНалоговыйАгент0.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.ДокументОплаты КАК ДокументОплаты,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПокупокНалоговыйАгент0
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.ДокументОплаты,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК СоставКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК ДокументРегистратор,
	|	СУММА(0) КАК СуммаВключенные,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК СуммаНеВключенные
	|ИЗ
	|	ВТНДСПредъявленныйРеализация0НалоговыйАгент0 КАК НДСПредъявленныйРеализация0Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНДСПредъявленныйОстаткиНалоговыйАгент0 КАК НДСПредъявленныйОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОборотыРезультирующая КАК ХозрасчетныйОбороты
	|			ПО НДСПредъявленныйОстатки.СчетФактура = ХозрасчетныйОбороты.Субконто1
	|		ПО НДСПредъявленныйРеализация0Остатки.СчетФактура = НДСПредъявленныйОстатки.СчетФактура
	|			И НДСПредъявленныйРеализация0Остатки.ВидЦенности = НДСПредъявленныйОстатки.ВидЦенности
	|			И НДСПредъявленныйРеализация0Остатки.СтавкаНДС = НДСПредъявленныйОстатки.СтавкаНДС
	|			И НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС = НДСПредъявленныйОстатки.СчетУчетаНДС
	|			И (НДСПредъявленныйОстатки.СуммаБезНДСОстаток + НДСПредъявленныйОстатки.НДСОстаток > 0)
	|ГДЕ
	|	(НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСПредъявленныйОстатки.НДСОстаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура,
	|	СУММА(СоставКнигиПокупок.НДСОборот),
	|	СУММА(0)
	|ИЗ
	|	ВТСоставКнигиПокупокНалоговыйАгент0 КАК СоставКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОборотыРезультирующая КАК ХозрасчетныйОборотыОплата
	|		ПО СоставКнигиПокупок.СчетФактура = ХозрасчетныйОборотыОплата.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	СоставКнигиПокупок.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
		
	
	ВычетИсполнениеОНА0 = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если ВычетИсполнениеОНА0.Следующий() Тогда
		ВключенныеВБазу   = ВычетИсполнениеОНА0.СуммаВключенные;
		НеВключенныеВБазу = ВычетИсполнениеОНА0.СуммаНеВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетИсполнениеОНА0.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхВычетИсполнениеОНА0()

#КонецЕсли