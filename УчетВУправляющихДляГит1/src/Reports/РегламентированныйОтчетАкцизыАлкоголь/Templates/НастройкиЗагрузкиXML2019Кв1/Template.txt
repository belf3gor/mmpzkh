// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы едиственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	НайденныйУзел = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/АкцСпиртАлк")[0];
	НайденныйУзел.МнУр = Истина;
	НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
	Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
		ТекущийУзел.МнУр = Истина;
		Если (ТекущийУзел.Код = "АкОсвЭксп"
		  ИЛИ ТекущийУзел.Код = "РеалПТЭкПдтвПер"
		  ИЛИ ТекущийУзел.Код = "РеалПТЭкПдтвПред")
			И ТекущийУзел.Раздел = "Приложение2" Тогда
			ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
		КонецЕсли;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Приложение612_613"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Раздел = "Приложение6"; // собираем два раздела в один многоуговневый раздел
		Если СтрокаДерева.Код = "СведИспСпВидПП" ИЛИ СтрокаДерева.Код = "СведФИспОбязБГ" Тогда
			СтрокаДерева.Обязательность = СтрокаДерева.Обязательность + "П"; // пропустить при автоматической загрузке
		КонецЕсли;
	КонецЦикла;
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Приложение614"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Раздел = "Приложение6"; // собираем два раздела в один многоуговневый раздел
		Если СтрокаДерева.Код = "СвАвКонРасчВыч" Тогда
			СтрокаДерева.Обязательность = СтрокаДерева.Обязательность + "П"; // пропустить при автоматической загрузке
		КонецЕсли;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
	КонецЕсли;
	
	УзлыПриложение2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/АкцСпиртАлк/РеалПТЭкспБГ184"); // многоуровневый раздел приложение 2
	
	НомСтраницы = Новый Массив(1);
	
	Для НомСтраницыУровень1 = 1 По УзлыПриложение2.Количество() Цикл
		
		УзелПриложение2Уровень1 = УзлыПриложение2[НомСтраницыУровень1 - 1];
		
		НомСтраницы[0] = НомСтраницыУровень1;
		
		НомСтроки = Новый Массив(2);
		
		УзлыПриложение2ГруппаСвРеалПТЭксп = УзлыПоXPath(УзелПриложение2Уровень1, "СвРеалПТЭксп");
		Для НомСтрокиУровень1 = 1 По УзлыПриложение2ГруппаСвРеалПТЭксп.Количество() Цикл
			
			НомСтроки[0] = НомСтрокиУровень1;
			УзелПриложение2ГруппаСвРеалПТЭксп = УзлыПриложение2ГруппаСвРеалПТЭксп[НомСтрокиУровень1 - 1];
			
			// Группа 1
			УзлыПриложение2Группа1 = УзлыПоXPath(УзелПриложение2ГруппаСвРеалПТЭксп, "АкОсвЭксп");
			Для НомСтрокиУровень2 = 1 По УзлыПриложение2Группа1.Количество() Цикл
				НомСтроки[1] = НомСтрокиУровень2;
				УзелПриложение2Группа1 = УзлыПриложение2Группа1[НомСтрокиУровень2 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелПриложение2Группа1, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
			
			// Группа 2
			УзлыПриложение2Группа2 = УзлыПоXPath(УзелПриложение2ГруппаСвРеалПТЭксп, "РеалПТЭкПдтвПер");
			Для НомСтрокиУровень2 = 1 По УзлыПриложение2Группа2.Количество() Цикл
				НомСтроки[1] = НомСтрокиУровень2;
				УзелПриложение2Группа2 = УзлыПриложение2Группа2[НомСтрокиУровень2 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелПриложение2Группа2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
			
			// Группа 3
			УзлыПриложение2Группа3 = УзлыПоXPath(УзелПриложение2ГруппаСвРеалПТЭксп, "РеалПТЭкПдтвПред");
			Для НомСтрокиУровень2 = 1 По УзлыПриложение2Группа3.Количество() Цикл
				НомСтроки[1] = НомСтрокиУровень2;
				УзелПриложение2Группа3 = УзлыПриложение2Группа3[НомСтрокиУровень2 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелПриложение2Группа3, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	УзлыПриложение6 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/АкцСпиртАлк/СпПриобИзвОсвУп"); // многоуровневый раздел приложение 6
	
	Для НомСтраницыУровень1 = 1 По УзлыПриложение6.Количество() Цикл
		
		УзелПриложение6Уровень1 = УзлыПриложение6[НомСтраницыУровень1 - 1];
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 2 страницы приложений.
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		
		// Приложения 6.1.2 и 6.1.3
		НомСтраницы[1] = 1;
		НомСтроки = Новый Массив(1);
		УзлыПриложение6Прил12 = УзлыПоXPath(УзелПриложение6Уровень1, "СведИспСпВидПП");
		Для НомСтрокиУровень2 = 1 По УзлыПриложение6Прил12.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелПриложение6Прил12 = УзлыПриложение6Прил12[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелПриложение6Прил12, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		УзлыПриложение6Прил13 = УзлыПоXPath(УзелПриложение6Уровень1, "СведФИспОбязБГ");
		Для НомСтрокиУровень2 = 1 По УзлыПриложение6Прил13.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелПриложение6Прил13 = УзлыПриложение6Прил13[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелПриложение6Прил13, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
		// Приложение 6.1.4
		НомСтраницы[1] = 2;
		НомСтроки = Новый Массив(1);
		УзлыПриложение6Прил14 = УзлыПоXPath(УзелПриложение6Уровень1, "СвАвКонРасчВыч");
		Для НомСтрокиУровень2 = 1 По УзлыПриложение6Прил14.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелПриложение6Прил14 = УзлыПриложение6Прил14[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелПриложение6Прил14, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
	КонецЦикла;
	
#КонецОбласти