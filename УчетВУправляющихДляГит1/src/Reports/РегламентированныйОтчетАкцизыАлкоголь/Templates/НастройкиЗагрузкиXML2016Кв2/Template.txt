// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	НайденныйУзел = УзлыПоXPath(П.ДеревоДляЗагрузки, "//РасчАкОсвБГЭксп")[0];
	НайденныйУзел.МнУр = Истина;
	НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
	Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
		ТекущийУзел.МнУр = Истина;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Приложение22"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Раздел = "Приложение21"; // собираем два раздела в один многоуговневый раздел
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100110000102"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000110000102"; // обработаем в структуре данных документа
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Раздел11 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел11", Раздел11);
	Если Раздел11 <> Неопределено Тогда
		
		НомСтроки = 1;
		Суффикс = "_1";
		
		Пока Раздел11.Свойство("П000110000101" + Суффикс) Цикл
			
			ЗначениеПоказателя = 0;
			Если Раздел11.Свойство("П000110000102" + Суффикс, ЗначениеПоказателя) Тогда
				ЗначениеПоказателя = 0 + ЗначениеПоказателя;
				Если ЗначениеПоказателя >= 0 Тогда
					Раздел11.Вставить("П000110000102" + Суффикс, ЗначениеПоказателя);
					Раздел11.Вставить("П000110000103" + Суффикс, 0);
				Иначе
					Раздел11.Вставить("П000110000102" + Суффикс, 0);
					Раздел11.Вставить("П000110000103" + Суффикс, -ЗначениеПоказателя);
				КонецЕсли;
			КонецЕсли;
			
			НомСтроки = НомСтроки + 1;
			Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
			
		КонецЦикла;
		
	КонецЕсли;
	
	Приложение21 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Приложение21", Приложение21);
	Если Приложение21 <> Неопределено Тогда
	
		Для Каждого СтраницаПервогоУровня Из Приложение21.Строки Цикл
			КодПТ = Неопределено;
			Если СтраницаПервогоУровня.Данные.Свойство("П001020001003", КодПТ) Тогда
				
				Для Каждого СтраницаВторогоУровня Из СтраницаПервогоУровня.Строки Цикл
					ИмяПоказателяКодПТ = "П001020011003";
					
					Если СтраницаВторогоУровня.Данные.Свойство(ИмяПоказателяКодПТ) Тогда
						СтраницаВторогоУровня.Данные[ИмяПоказателяКодПТ] = КодПТ;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти