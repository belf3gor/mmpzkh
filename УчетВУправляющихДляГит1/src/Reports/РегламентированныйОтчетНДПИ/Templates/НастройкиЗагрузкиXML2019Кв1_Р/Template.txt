// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалНефт");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "ДобНефтУчНедр" Тогда
				ТекущийУзел.Многостраничность = Ложь;
			ИначеЕсли ТекущийУзел.Код = "КолНефтОсн" Тогда
				ТекущийУзел.Многостраничность = Ложь;
			КонецЕсли;
			ТекущийУзел.МнУр = Истина;
			ТекущийУзел.Раздел = "Раздел2"
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалГаз");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "КолДПИЗалОсн" Тогда
				ТекущийУзел.Многостраничность = Ложь;
			КонецЕсли;
			ТекущийУзел.МнУр = Истина;
			ТекущийУзел.Раздел = "Раздел3"
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчУплНалИскл");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "КолПИНалОсн" Тогда
				ТекущийУзел.Многостраничность = Ложь;
			КонецЕсли;
			ТекущийУзел.МнУр = Истина;
			ТекущийУзел.Раздел = "Раздел5"
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалНефтНДД");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "КолНефтНалОсн" Тогда
				ТекущийУзел.Многостраничность = Ложь;
			КонецЕсли;
			ТекущийУзел.МнУр = Истина;
			ТекущийУзел.Раздел = "Раздел8"
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Раздел5 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел5", Раздел5);
	Если Раздел5 <> Неопределено Тогда
		
		Для Каждого СтраницаПервогоУровня Из Раздел5.Строки Цикл
			Для Каждого СтраницаВторогоУровня Из СтраницаПервогоУровня.Строки Цикл
				
				ДанныеРаздела = СтраницаВторогоУровня.Данные;
				
				НомСтроки = 1;
				Суффикс = "_1";
				
				Пока ДанныеРаздела.Свойство("П000510000101" + Суффикс) Цикл
					
					ЗначениеПоказателя = "";
					Если ДанныеРаздела.Свойство("П000510000104" + Суффикс, ЗначениеПоказателя) Тогда
						Если ЗначениеПоказателя = "0" Тогда
							ЗначениеПоказателя = "0,0";
						Иначе
							ЗначениеПоказателя = СтрЗаменить(ЗначениеПоказателя, ".", ",");
						КонецЕсли;
						
						ДанныеРаздела["П000510000104" + Суффикс] = ЗначениеПоказателя;
					КонецЕсли;
					
					НомСтроки = НомСтроки + 1;
					Суффикс = "_" + Формат(НомСтроки, "ЧГ=");
					
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Раздел7 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел7", Раздел7);
	Если Раздел7 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел7 Цикл
			
			ЗначениеПоказателя = "";
			Если СтраницаРаздела.Данные.Свойство("П000700005003", ЗначениеПоказателя) Тогда
				Если ЗначениеПоказателя = "0" Тогда
					ЗначениеПоказателя = "0,0";
				Иначе
					ЗначениеПоказателя = СтрЗаменить(ЗначениеПоказателя, ".", ",");
				КонецЕсли;
				
				СтраницаРаздела.Данные["П000700005003"] = ЗначениеПоказателя;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти