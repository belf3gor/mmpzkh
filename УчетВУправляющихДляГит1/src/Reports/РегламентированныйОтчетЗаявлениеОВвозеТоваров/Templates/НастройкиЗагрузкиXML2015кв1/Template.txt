// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//  * Параметр "ИмяФайлаНастроек" содержит путь к файлу настроек для быстрого описания
//    правил загрузки без сохранения конфигурации. После отладки правил загрузки нужно
//    обязательно перенести содержимое файла в макет и удалить параметр или присвоить ему
//    значение "null". В целях безопасности нельзя выпускать конфигурации с заполненным
//    параметром "ИмяФайлаНастроек".
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	"ИмяФайлаНастроек"    : null,
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "/Документ/СвЗвл");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		УзлыНомерДокНП = УзлыПоXPath(НайденныйУзел, "@НомерДокНП");
		Если ЗначениеЗаполнено(УзлыНомерДокНП) Тогда
			УзлыНомерДокНП[0].Ключ = "НомерЗаяв";
		КонецЕсли;
		
		УзлыСвТовар = УзлыПоXPath(НайденныйУзел, "СвТовар");
		Если ЗначениеЗаполнено(УзлыСвТовар) Тогда
			УзлыСвТовар[0].Многострочность = Истина;
			
			УзлыСвТоварАтр = УзлыПоXPath(УзлыСвТовар[0], "@*"); // все атрибуты
			Для Каждого УзелСвТоварАтр Из УзлыСвТоварАтр Цикл
				Если СтрЗаканчиваетсяНа(УзелСвТоварАтр.Ключ, "_") Тогда
					УзелСвТоварАтр.Ключ = Лев(УзелСвТоварАтр.Ключ, СтрДлина(УзелСвТоварАтр.Ключ) - 1);
				КонецЕсли;
				Если УзелСвТоварАтр.Код = "ЕдИзмТов" Тогда
					УзелСвТоварАтр.Ключ = "П000010000122";
				ИначеЕсли УзелСвТоварАтр.Код = "БазаВал" Тогда
					УзелСвТоварАтр.Ключ = "П000010000125";
				ИначеЕсли УзелСвТоварАтр.Код = "СтАкцизТверд" Тогда
					УзелСвТоварАтр.Ключ = "П000010000116";
				ИначеЕсли УзелСвТоварАтр.Код = "СтАкцизАдвал" Тогда
					УзелСвТоварАтр.Ключ = "П000010000117";
				ИначеЕсли УзелСвТоварАтр.Код = "СтНДС" Тогда
					УзелСвТоварАтр.Ключ = "П000010000118";
				ИначеЕсли УзелСвТоварАтр.Код = "ЕдИзмТовНБАкц" Тогда
					УзелСвТоварАтр.Ключ = "П000010000124";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка");
	ОписаниеТиповДата   = Новый ОписаниеТипов("Дата", , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	Раздел1 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел1", Раздел1);
	
	УзелРаздел1 = УзлыПоXPath(П.ДеревоДляЗагрузки, "/Документ/СвЗвл")[0];
	
	Если Раздел1 <> Неопределено И УзелРаздел1 <> Неопределено Тогда
		
		УзелПрЛизинг = УзлыПоXPath(УзелРаздел1, "@ПрЛизинг")[0];
		Раздел1.ПрЛизинг = ?(УзелПрЛизинг.Значение = "1", "Х", "");
		
		УзелПрДавСырья = УзлыПоXPath(УзелРаздел1, "@ПрДавСырья")[0];
		Раздел1.ПрДавСырья = ?(УзелПрДавСырья.Значение = "1", "Х", "");
		
		УзелПВДок = УзлыПоXPath(УзелРаздел1, "@ПВДок")[0];
		Если УзелПВДок.Значение = "4" Тогда
			Раздел1.ПричинаЗаявления = "взамен ранее представленного";
		ИначеЕсли УзелПВДок.Значение = "5" Тогда
			Раздел1.ПричинаЗаявления = "корректировка ранее представленного при увеличении цены";
		ИначеЕсли УзелПВДок.Значение = "6" Тогда
			Раздел1.ПричинаЗаявления = "взамен ранее представленного при частичном возврате товара";
		Иначе
			Раздел1.ПричинаЗаявления = "первичное заявление";
		КонецЕсли;
		
		УзлыНомОтм = УзлыПоXPath(УзелРаздел1, "@НомОтм");
		Если ЗначениеЗаполнено(УзлыНомОтм) Тогда
			Раздел1.НомерОтметки = УзлыНомОтм[0].Значение;
		КонецЕсли;
		УзлыДатаОтм = УзлыПоXPath(УзелРаздел1, "@ДатаОтм");
		Если ЗначениеЗаполнено(УзлыДатаОтм) Тогда
			Раздел1.ДатаОтметки = УзлыДатаОтм[0].Значение;
		КонецЕсли;
		
		УзелСвКонтракт1 = УзлыПоXPath(УзелРаздел1, "СвКонтракт1")[0];
		
		УзлыПрБкнрПродР1 = УзлыПоXPath(УзелСвКонтракт1, "@ПрБкнрПродР1");
		Если ЗначениеЗаполнено(УзлыПрБкнрПродР1) Тогда
			Раздел1.ПродавецБайконур = ?(УзлыПрБкнрПродР1[0].Значение = "1", "Х", "");
		КонецЕсли;
		УзлыИдНомПродР1 = УзлыПоXPath(УзелСвКонтракт1, "@ИдНомПродР1");
		Если ЗначениеЗаполнено(УзлыИдНомПродР1) Тогда
			Раздел1.ПродавецИНН_КПП = СокрЛП(УзлыИдНомПродР1[0].Значение);
		КонецЕсли;
		УзлыПрПродФЛ = УзлыПоXPath(УзелСвКонтракт1, "@ПрПродФЛ");
		Если ЗначениеЗаполнено(УзлыПрПродФЛ) Тогда
			Раздел1.ПрПриобретенияУФЛ = ?(УзлыПрПродФЛ[0].Значение = "1", "Х", "");
		КонецЕсли;
		УзлыПрБкнрПокР1 = УзлыПоXPath(УзелСвКонтракт1, "@ПрБкнрПокР1");
		Если ЗначениеЗаполнено(УзлыПрБкнрПокР1) Тогда
			Раздел1.ПокупательБайконур = ?(УзлыПрБкнрПокР1[0].Значение = "1", "Х", "");
		КонецЕсли;
		УзлыИдНомПокР1 = УзлыПоXPath(УзелСвКонтракт1, "@ИдНомПокР1");
		Если ЗначениеЗаполнено(УзлыИдНомПокР1) Тогда
			Раздел1.ПокупательИНН_КПП = СокрЛП(УзлыИдНомПокР1[0].Значение);
		КонецЕсли;
		
		УзелСвКонтр1 = УзлыПоXPath(УзелСвКонтракт1, "СвКонтр1")[0];
		
		ТЗСпецификацийРаздел1 = Неопределено;
		П.ДанныеОтчета.СтруктураДанныхОтчета.Свойство("мТЗСпецификацийРаздел1", ТЗСпецификацийРаздел1);
		Если ТипЗнч(ТЗСпецификацийРаздел1) = Тип("ТаблицаЗначений") Тогда
			ТЗСпецификацийРаздел1.Очистить();
		Иначе
			ТЗСпецификацийРаздел1 = Новый ТаблицаЗначений;
			ТЗСпецификацийРаздел1.Колонки.Добавить("Дата",  ОписаниеТиповДата,   "Дата");
			ТЗСпецификацийРаздел1.Колонки.Добавить("Номер", ОписаниеТиповСтрока, "Номер");
		КонецЕсли;
		
		ЗначНомСпециф = "";
		ЗначДатаСпециф = "";
		УзлыСвСпециф = УзлыПоXPath(УзелСвКонтр1, "СвСпециф");
		Для Каждого УзелСвСпециф Из УзлыСвСпециф Цикл
			НовДок = ТЗСпецификацийРаздел1.Добавить();
			НовДок.Дата  = ДатаИзСтрокиЛюбогоФормата(УзлыПоXPath(УзелСвСпециф, "@ДатаСпециф")[0].Значение);
			НовДок.Номер = СокрЛП(УзлыПоXPath(УзелСвСпециф, "@НомСпециф")[0].Значение);
			ЗначНомСпециф = ЗначНомСпециф + ?(ПустаяСтрока(ЗначНомСпециф), "", ",") + НовДок.Номер;
			ЗначДатаСпециф = ЗначДатаСпециф + ?(ПустаяСтрока(ЗначДатаСпециф), "", ",") + Формат(НовДок.Дата, "ДФ=dd.MM.yyyy");
		КонецЦикла;
		Раздел1.НомерСпецификации = СокрЛП(ЗначНомСпециф);
		Раздел1.ДатаСпецификации = СокрЛП(ЗначДатаСпециф);
		
		ТЗСпецификацийРаздел1_07 = Неопределено;
		П.ДанныеОтчета.СтруктураДанныхОтчета.Свойство("мТЗСпецификацийРаздел1_07", ТЗСпецификацийРаздел1_07);
		Если ТипЗнч(ТЗСпецификацийРаздел1_07) = Тип("ТаблицаЗначений") Тогда
			ТЗСпецификацийРаздел1_07.Очистить();
		Иначе
			ТЗСпецификацийРаздел1_07 = Новый ТаблицаЗначений;
			ТЗСпецификацийРаздел1_07.Колонки.Добавить("Дата",  ОписаниеТиповДата,   "Дата");
			ТЗСпецификацийРаздел1_07.Колонки.Добавить("Номер", ОписаниеТиповСтрока, "Номер");
		КонецЕсли;
		
		УзлыСвКонтрКомисс = УзлыПоXPath(УзелРаздел1, "СвКонтрКомисс");
		
		Для Каждого УзелСвКонтрКомисс Из УзлыСвКонтрКомисс Цикл
			УзлыПрБкнрОрг = УзлыПоXPath(УзелСвКонтрКомисс, "@ПрБкнрОрг");
			Если ЗначениеЗаполнено(УзлыПрБкнрОрг) Тогда
				Раздел1.КомиссионерБайконур = ?(УзлыПрБкнрОрг[0].Значение = "1", "Х", "");
			КонецЕсли;
			УзлыИдНомОрг = УзлыПоXPath(УзелСвКонтрКомисс, "@ИдНомОрг");
			Если ЗначениеЗаполнено(УзлыИдНомОрг) Тогда
				Раздел1.ИННОрг_1 = СокрЛП(УзлыИдНомОрг[0].Значение);
			КонецЕсли;
			
			УзелСвКонтракт2 = УзлыПоXPath(УзелСвКонтрКомисс, "СвКонтракт2")[0];
			
			ЗначНомСпециф = "";
			ЗначДатаСпециф = "";
			УзлыСвСпециф = УзлыПоXPath(УзелСвКонтракт2, "СвСпециф");
			Для Каждого УзелСвСпециф Из УзлыСвСпециф Цикл
				НовДок = ТЗСпецификацийРаздел1_07.Добавить();
				НовДок.Дата  = ДатаИзСтрокиЛюбогоФормата(УзлыПоXPath(УзелСвСпециф, "@ДатаСпециф")[0].Значение);
				НовДок.Номер = СокрЛП(УзлыПоXPath(УзелСвСпециф, "@НомСпециф")[0].Значение);
				ЗначНомСпециф = ЗначНомСпециф + ?(ПустаяСтрока(ЗначНомСпециф), "", ",") + НовДок.Номер;
				ЗначДатаСпециф = ЗначДатаСпециф + ?(ПустаяСтрока(ЗначДатаСпециф), "", ",") + Формат(НовДок.Дата, "ДФ=dd.MM.yyyy");
			КонецЦикла;
			Раздел1.НомерСпецификации_07 = СокрЛП(ЗначНомСпециф);
			Раздел1.ДатаСпецификации_07 = СокрЛП(ЗначДатаСпециф);
		КонецЦикла;
		
		СтруктураТЗДокументы = Неопределено;
		П.ДанныеОтчета.СтруктураДанныхОтчета.Свойство("мСтрукТЗДокументы", СтруктураТЗДокументы);
		Если ТипЗнч(СтруктураТЗДокументы) = Тип("Структура") Тогда
			СтруктураТЗДокументы.Очистить();
		Иначе
			СтруктураТЗДокументы = Новый Структура;
		КонецЕсли;
		
		УзлыСвТовар = УзлыПоXPath(УзелРаздел1, "СвТовар");
		Для НомСтроки = 1 По УзлыСвТовар.Количество() Цикл
			УзелСвТовар = УзлыСвТовар[НомСтроки - 1];
			
			ТЗДокументы = Новый ТаблицаЗначений;
			ТЗДокументы.Колонки.Добавить("Серия", ОписаниеТиповСтрока, "Серия");
			ТЗДокументы.Колонки.Добавить("Номер", ОписаниеТиповСтрока, "Номер");
			ТЗДокументы.Колонки.Добавить("Дата",  ОписаниеТиповДата,   "Дата");
			
			ЗначСерНомТСД = "";
			ЗначДатаТСД = "";
			УзлыСвТСД = УзлыПоXPath(УзелСвТовар, "СвТСД");
			Для Каждого УзелСвТСД Из УзлыСвТСД Цикл
				ЗнСерНомТСД = УзлыПоXPath(УзелСвТСД, "@СерНомТСД")[0].Значение;
				ЗнДатаТСД = УзлыПоXPath(УзелСвТСД, "@ДатаТСД")[0].Значение;
				
				ЭлементыНомТСД = СтрРазделить(ЗнСерНомТСД, ",");
				ЗнНомер = ?(ЭлементыНомТСД.ВГраница() > 0, ЭлементыНомТСД[1], ЭлементыНомТСД[0]);
				ЗнСерия = ?(ЭлементыНомТСД.ВГраница() > 0, ЭлементыНомТСД[0], "");
				
				НовДок = ТЗДокументы.Добавить();
				НовДок.Серия = ЗнСерия;
				НовДок.Номер = ЗнНомер;
				НовДок.Дата  = ДатаИзСтрокиЛюбогоФормата(ЗнДатаТСД);
				
				ЗначСерНомТСД = ЗначСерНомТСД + ?(ПустаяСтрока(ЗначСерНомТСД), "", Символы.ПС) + ЗнСерНомТСД;
				ЗначДатаТСД = ЗначДатаТСД + ?(ПустаяСтрока(ЗначДатаТСД), "", Символы.ПС) + ЗнДатаТСД;
			КонецЦикла;
			
			СтруктураТЗДокументы.Вставить("К_" + Формат(НомСтроки, "ЧГ="), ТЗДокументы);
			
			Раздел1["П000010000109_" + Формат(НомСтроки, "ЧГ=")] = ЗначСерНомТСД;
			Раздел1["П000010000110_" + Формат(НомСтроки, "ЧГ=")] = ЗначДатаТСД;
			
			Раздел1["П000010000116_" + Формат(НомСтроки, "ЧГ=")] = Формат(Макс(0, ЧислоИзСтроки(Раздел1["П000010000116_" + Формат(НомСтроки, "ЧГ=")])), "ЧДЦ=2; ЧН=; ЧГ=");
			Раздел1["П000010000117_" + Формат(НомСтроки, "ЧГ=")] = Формат(Макс(0, ЧислоИзСтроки(Раздел1["П000010000117_" + Формат(НомСтроки, "ЧГ=")])), "ЧДЦ=2; ЧН=; ЧГ=");
			Раздел1["П000010000118_" + Формат(НомСтроки, "ЧГ=")] = Формат(Макс(0, ЧислоИзСтроки(Раздел1["П000010000118_" + Формат(НомСтроки, "ЧГ=")])), "ЧДЦ=2; ЧН=; ЧГ=");
			
			Раздел1["П000010000104_" + Формат(НомСтроки, "ЧГ=")] = Раздел1["П000010000122_" + Формат(НомСтроки, "ЧГ=")];
			Раздел1["П000010000123_" + Формат(НомСтроки, "ЧГ=")] = Раздел1["П000010000124_" + Формат(НомСтроки, "ЧГ=")];
		КонецЦикла;
		
		УзлыСвПредДок = УзлыПоXPath(УзелРаздел1, "СвПредДок");
		Для Каждого УзелСвПредДок Из УзлыСвПредДок Цикл
			УзлыНомОтм = УзлыПоXPath(УзелСвПредДок, "@НомОтм");
			Для Каждого УзелНомОтм Из УзлыНомОтм Цикл
				Раздел1.НомерОтметки = СокрЛП(УзелНомОтм.Значение);
			КонецЦикла;
			УзлыДатаОтм = УзлыПоXPath(УзелСвПредДок, "@ДатаОтм");
			Для Каждого УзелДатаОтм Из УзлыДатаОтм Цикл
				Раздел1.ДатаОтметки = ДатаИзСтрокиЛюбогоФормата(УзелДатаОтм.Значение);
			КонецЦикла;
			УзлыМесУвелЦены = УзлыПоXPath(УзелСвПредДок, "@МесУвелЦены");
			Для Каждого УзелМесУвелЦены Из УзлыМесУвелЦены Цикл
				Раздел1.ИзмениеЦеныМесяц = ЧислоИзСтроки(СтрЗаменить(УзелМесУвелЦены.Значение, "-", ""));
			КонецЦикла;
			УзлыГодУвелЦены = УзлыПоXPath(УзелСвПредДок, "@ГодУвелЦены");
			Для Каждого УзелГодУвелЦены Из УзлыГодУвелЦены Цикл
				Раздел1.ИзмениеЦеныГод = ЧислоИзСтроки(УзелГодУвелЦены.Значение);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Раздел3 = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел3", Раздел3);
	
	УзлыРаздел3 = УзлыПоXPath(П.ДеревоДляЗагрузки, "/Документ/СвЗвл/СвКонтракт3");
	
	Если Раздел3 <> Неопределено И ЗначениеЗаполнено(УзлыРаздел3) Тогда
		УзелРаздел3 = УзлыРаздел3[0];
		
		ТипПрод_3 = УзлыПоXPath(УзелРаздел3, "@ТипПродР3")[0].Значение;
		
		Если ТипПрод_3 = "0" Тогда
			Раздел3.ТипПрод_3 = "(комитент)";
		ИначеЕсли ТипПрод_3 = "1" Тогда
			Раздел3.ТипПрод_3 = "(доверитель)";
		ИначеЕсли ТипПрод_3 = "2" Тогда
			Раздел3.ТипПрод_3 = "(принципал)";
		ИначеЕсли ТипПрод_3 = "6" Тогда
			Раздел3.ТипПрод_3 = "(продавец)";
		Иначе
			Раздел3.ТипПрод_3 = "";
		КонецЕсли;
		
		ТипПокР3 = УзлыПоXPath(УзелРаздел3, "@ТипПокР3")[0].Значение;
		
		Если ТипПокР3 = "3" Тогда
			Раздел3.ТипПок_3 = "(комиссионер)";
		ИначеЕсли ТипПокР3 = "4" Тогда
			Раздел3.ТипПок_3 = "(поверенный)";
		ИначеЕсли ТипПокР3 = "5" Тогда
			Раздел3.ТипПок_3 = "(агент)";
		ИначеЕсли ТипПокР3 = "7" Тогда
			Раздел3.ТипПок_3 = "(покупатель)";
		Иначе
			Раздел3.ТипПок_3 = "";
		КонецЕсли;
		
		УзлыПрБкнрПродР3 = УзлыПоXPath(УзелРаздел3, "@ПрБкнрПродР3");
		Если ЗначениеЗаполнено(УзлыПрБкнрПродР3) Тогда
			Раздел3.ПродавецБайконур = ?(УзлыПрБкнрПродР3[0].Значение = "1", "Х", "");
		КонецЕсли;
		
		УзлыПрБкнрПокР3 = УзлыПоXPath(УзелРаздел3, "@ПрБкнрПокР3");
		Если ЗначениеЗаполнено(УзлыПрБкнрПокР3) Тогда
			Раздел3.ПокупательБайконур = ?(УзлыПрБкнрПокР3[0].Значение = "1", "Х", "");
		КонецЕсли;
		
		УзлыИдНомПродР3 = УзлыПоXPath(УзелРаздел3, "@ИдНомПродР3");
		Если ЗначениеЗаполнено(УзлыИдНомПродР3) Тогда
			Раздел3.ПродавецИНН_КПП = СокрЛП(УзлыИдНомПродР3[0].Значение);
		КонецЕсли;
		
		УзлыИдНомПокР3 = УзлыПоXPath(УзелРаздел3, "@ИдНомПокР3");
		Если ЗначениеЗаполнено(УзлыИдНомПокР3) Тогда
			Раздел3.ПокупательИНН_КПП = СокрЛП(УзлыИдНомПокР3[0].Значение);
		КонецЕсли;
		
		ТЗСпецификацийРаздел3 = Неопределено;
		П.ДанныеОтчета.СтруктураДанныхОтчета.Свойство("мТЗСпецификацийРаздел3", ТЗСпецификацийРаздел3);
		Если ТипЗнч(ТЗСпецификацийРаздел3) = Тип("ТаблицаЗначений") Тогда
			ТЗСпецификацийРаздел3.Очистить();
		Иначе
			ТЗСпецификацийРаздел3 = Новый ТаблицаЗначений;
			ТЗСпецификацийРаздел3.Колонки.Добавить("Дата",  ОписаниеТиповДата,   "Дата");
			ТЗСпецификацийРаздел3.Колонки.Добавить("Номер", ОписаниеТиповСтрока, "Номер");
		КонецЕсли;
		
		ЗначНомСпециф = "";
		ЗначДатаСпециф = "";
		УзлыСвСпециф = УзлыПоXPath(УзелРаздел3, "СвКонтрР3/СвСпециф");
		Для Каждого УзелСвСпециф Из УзлыСвСпециф Цикл
			НовДок = ТЗСпецификацийРаздел3.Добавить();
			НовДок.Дата  = ДатаИзСтрокиЛюбогоФормата(УзлыПоXPath(УзелСвСпециф, "@ДатаСпециф")[0].Значение);
			НовДок.Номер = СокрЛП(УзлыПоXPath(УзелСвСпециф, "@НомСпециф")[0].Значение);
			ЗначНомСпециф = ЗначНомСпециф + ?(ПустаяСтрока(ЗначНомСпециф), "", ",") + НовДок.Номер;
			ЗначДатаСпециф = ЗначДатаСпециф + ?(ПустаяСтрока(ЗначДатаСпециф), "", ",") + Формат(НовДок.Дата, "ДФ=dd.MM.yyyy");
		КонецЦикла;
		Раздел3.НомерСпецификации = СокрЛП(ЗначНомСпециф);
		Раздел3.ДатаСпецификации = СокрЛП(ЗначДатаСпециф);
		
	КонецЕсли;
	
	Приложение = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Приложение", Приложение);
	
	УзлыПриложение = УзлыПоXPath(П.ДеревоДляЗагрузки, "/Документ/СвКонтрПр");
	
	Если Приложение <> Неопределено И ЗначениеЗаполнено(УзлыПриложение) Тогда
		
		МассивТЗСпецификацийПрил = Неопределено;
		П.ДанныеОтчета.СтруктураДанныхОтчета.Свойство("мМассивТЗСпецификацийПрил", МассивТЗСпецификацийПрил);
		Если ТипЗнч(МассивТЗСпецификацийПрил) = Тип("Массив") Тогда
			МассивТЗСпецификацийПрил.Очистить();
		Иначе
			МассивТЗСпецификацийПрил = Новый Массив;
		КонецЕсли;
		
		Для НомСтраницы = 1 По УзлыПриложение.Количество() Цикл
			
			ДанныеСтраницы = Приложение[НомСтраницы - 1].Данные;
			
			УзелПриложение = УзлыПриложение[НомСтраницы - 1];
			
			ТипПрод_П = УзлыПоXPath(УзелПриложение, "@ТипПродП")[0].Значение;
			
			Если ТипПрод_П = "0" Тогда
				ДанныеСтраницы.ТипПрод_Пр = "(комитент)";
			ИначеЕсли ТипПрод_П = "1" Тогда
				ДанныеСтраницы.ТипПрод_Пр = "(доверитель)";
			ИначеЕсли ТипПрод_П = "2" Тогда
				ДанныеСтраницы.ТипПрод_Пр = "(принципал)";
			ИначеЕсли ТипПрод_П = "3" Тогда
				ДанныеСтраницы.ТипПрод_Пр = "(комиссионер)";
			ИначеЕсли ТипПрод_П = "4" Тогда
				ДанныеСтраницы.ТипПрод_Пр = "(поверенный)";
			ИначеЕсли ТипПрод_П = "5" Тогда
				ДанныеСтраницы.ТипПрод_Пр = "(агент)";
			ИначеЕсли ТипПрод_П = "6" Тогда
				ДанныеСтраницы.ТипПрод_Пр = "(продавец)";
			Иначе
				ДанныеСтраницы.ТипПрод_Пр = "";
			КонецЕсли;
			
			ТипПок_П = УзлыПоXPath(УзелПриложение, "@ТипПокП")[0].Значение;
			
			Если ТипПок_П = "0" Тогда
				ДанныеСтраницы.ТипПок_Пр = "(комитент)";
			ИначеЕсли ТипПок_П = "1" Тогда
				ДанныеСтраницы.ТипПок_Пр = "(доверитель)";
			ИначеЕсли ТипПок_П = "2" Тогда
				ДанныеСтраницы.ТипПок_Пр = "(принципал)";
			ИначеЕсли ТипПок_П = "3" Тогда
				ДанныеСтраницы.ТипПок_Пр = "(комиссионер)";
			ИначеЕсли ТипПок_П = "4" Тогда
				ДанныеСтраницы.ТипПок_Пр = "(поверенный)";
			ИначеЕсли ТипПок_П = "5" Тогда
				ДанныеСтраницы.ТипПок_Пр = "(агент)";
			ИначеЕсли ТипПок_П = "7" Тогда
				ДанныеСтраницы.ТипПок_Пр = "(покупатель)";
			Иначе
				ДанныеСтраницы.ТипПок_Пр = "";
			КонецЕсли;
			
			УзлыПрБкнрПродП = УзлыПоXPath(УзелПриложение, "@ПрБкнрПродП");
			Если ЗначениеЗаполнено(УзлыПрБкнрПродП) Тогда
				ДанныеСтраницы.ПродавецБайконур = ?(УзлыПрБкнрПродП[0].Значение = "1", "Х", "");
			КонецЕсли;
			
			УзлыПрБкнрПокП = УзлыПоXPath(УзелПриложение, "@ПрБкнрПокП");
			Если ЗначениеЗаполнено(УзлыПрБкнрПокП) Тогда
				ДанныеСтраницы.ПокупательБайконур = ?(УзлыПрБкнрПокП[0].Значение = "1", "Х", "");
			КонецЕсли;
			
			УзлыИдНомПродП = УзлыПоXPath(УзелПриложение, "@ИдНомПродП");
			Если ЗначениеЗаполнено(УзлыИдНомПродП) Тогда
				ДанныеСтраницы.ПродавецИНН_КПП = СокрЛП(УзлыИдНомПродП[0].Значение);
			КонецЕсли;
			
			УзлыИдНомПокП = УзлыПоXPath(УзелПриложение, "@ИдНомПокП");
			Если ЗначениеЗаполнено(УзлыИдНомПокП) Тогда
				ДанныеСтраницы.ПокупательИНН_КПП = СокрЛП(УзлыИдНомПокП[0].Значение);
			КонецЕсли;
			
			ТЗСпецификацийПрил = Новый ТаблицаЗначений;
			ТЗСпецификацийПрил.Колонки.Добавить("Дата",  ОписаниеТиповДата,   "Дата");
			ТЗСпецификацийПрил.Колонки.Добавить("Номер", ОписаниеТиповСтрока, "Номер");
			
			ЗначНомСпециф = "";
			ЗначДатаСпециф = "";
			УзлыСвСпециф = УзлыПоXPath(УзелПриложение, "СвКонтрП/СвСпециф");
			Для Каждого УзелСвСпециф Из УзлыСвСпециф Цикл
				НовДок = ТЗСпецификацийПрил.Добавить();
				НовДок.Дата  = ДатаИзСтрокиЛюбогоФормата(УзлыПоXPath(УзелСвСпециф, "@ДатаСпециф")[0].Значение);
				НовДок.Номер = СокрЛП(УзлыПоXPath(УзелСвСпециф, "@НомСпециф")[0].Значение);
				ЗначНомСпециф = ЗначНомСпециф + ?(ПустаяСтрока(ЗначНомСпециф), "", ",") + НовДок.Номер;
				ЗначДатаСпециф = ЗначДатаСпециф + ?(ПустаяСтрока(ЗначДатаСпециф), "", ",") + Формат(НовДок.Дата, "ДФ=dd.MM.yyyy");
			КонецЦикла;
			ДанныеСтраницы.НомерСпецификации = СокрЛП(ЗначНомСпециф);
			ДанныеСтраницы.ДатаСпецификации = СокрЛП(ЗначДатаСпециф);
			
			МассивТЗСпецификацийПрил.Добавить(ТЗСпецификацийПрил);
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти