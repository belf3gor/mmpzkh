#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ПрограммныйИнтерфейс

// Функция возвращает параметры исполнения отчета.
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Возврат Новый Структура("ИспользоватьПередКомпоновкойМакета,
							|ИспользоватьПослеКомпоновкиМакета,
							|ИспользоватьПослеВыводаРезультата,
							|ИспользоватьДанныеРасшифровки",
							Истина, Ложь, Истина, Истина);
	
КонецФункции

// Функция возвращает текст заголовка.
//
// Параметры:
//  ПараметрыОтчета    - Структура - содержит передаваемые параметры.
//  ОрганизацияВНачале - Булево    - признак, указывающий на то, что организация указывается в начале.
//
// Возвращаемое значение:
//  Строка - Текст заголовка.
//
Функция ПолучитьТекстЗаголовка(ПараметрыОтчета, ОрганизацияВНачале = Истина) Экспорт 
	
	Возврат "Отчет по заявкам" + УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет.
// Изменения сохранены не будут.
//
// Параметры:
//  ПараметрыОтчета     - Структура - содержит передаваемые параметры.
//  Схема               - Схема     - схема данных.
//  КомпоновщикНастроек - Структура - структура компоновщика настроек.
//
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
	КонецЕсли;
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ДобавитьДополнительныеПоля(ПараметрыОтчета, КомпоновщикНастроек);
	
КонецПроцедуры

// Возникает после вывода результата.
//
// Параметры:
//  ПараметрыОтчета - Структура         - содержит передаваемые параметры.
//  Результат       - ТабличныйДокумент - содержит таблицу результатов.
//
Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	УПЖКХ_ТиповыеМетодыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейсПодключаемый

// Функция получает данные для монитора руководителя ЖКХ.
Функция ПолучитьДанныеДляМонитораЖКХ(СтруктураПараметров) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПериодов.Период
	|ПОМЕСТИТЬ врТаблицаПериодов
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(КВП_ЗаявкаНаВыполнениеРабот.Дата, МЕСЯЦ) КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА КВП_ЗаявкаНаВыполнениеРабот.СтатусВыполнения = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыСтатусовВыполненияРабот.Выполнено)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыполненыхЗаявок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КВП_ЗаявкаНаВыполнениеРабот.Ссылка) КАК ВсегоЗаявок
	|ПОМЕСТИТЬ втЗаявки
	|ИЗ
	|	Документ.КВП_ЗаявкаНаВыполнениеРабот КАК КВП_ЗаявкаНаВыполнениеРабот
	|ГДЕ
	|	КВП_ЗаявкаНаВыполнениеРабот.Проведен = ИСТИНА
	|	И КВП_ЗаявкаНаВыполнениеРабот.Организация В(&Организация)
	|	И КВП_ЗаявкаНаВыполнениеРабот.Дата >= &ДатаНач
	|	И КВП_ЗаявкаНаВыполнениеРабот.Дата <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	КОНЕЦПЕРИОДА(КВП_ЗаявкаНаВыполнениеРабот.Дата, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаявки.Период,
	|	СУММА(ВЫБОР
	|			КОГДА втЗаявки.Период >= &ДатаНач
	|					И втЗаявки.Период <= &ДатаКон
	|				ТОГДА втЗаявки.ВыполненыхЗаявок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыполненыхЗаявок,
	|	СУММА(ВЫБОР
	|			КОГДА втЗаявки.Период >= &ДатаНач
	|					И втЗаявки.Период <= &ДатаКон
	|				ТОГДА втЗаявки.ВсегоЗаявок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоЗаявок
	|ПОМЕСТИТЬ втОсновная
	|ИЗ
	|	втЗаявки КАК втЗаявки
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗаявки.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врТаблицаПериодов.Период,
	|	ЕСТЬNULL(втОсновная.ВыполненыхЗаявок, 0) КАК ВыполненыхЗаявок,
	|	ЕСТЬNULL(втОсновная.ВсегоЗаявок, 0) КАК ВсегоЗаявок
	|ИЗ
	|	врТаблицаПериодов КАК врТаблицаПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОсновная КАК втОсновная
	|		ПО врТаблицаПериодов.Период = втОсновная.Период";
	
	Запрос.УстановитьПараметр("Организация",     СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ДатаНач",         НачалоМесяца(СтруктураПараметров.НачалоПериода));
	Запрос.УстановитьПараметр("ДатаКон",         КонецМесяца(СтруктураПараметров.КонецПериода));
	
	ТаблицаПериодов    = ПолучитьТаблицуПериодов(СтруктураПараметров.НачалоПериода, КонецМесяца(СтруктураПараметров.КонецПериода));
	Запрос.УстановитьПараметр("ТаблицаПериодов", ТаблицаПериодов);
	
	Выборка       = Запрос.Выполнить().Выбрать();
	ДеревоДанных = ПолучитьДеревоДанныхДляЗаполнения();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДеревоДанных.Строки.Добавить();
		НоваяСтрока.Представление        = "Всего заявок";
		НоваяСтрока.Сумма                = Выборка.ВсегоЗаявок;
		НоваяСтрока.Порядок              = 1;
		НоваяСтрока.Период               = Выборка.Период;
		
		НоваяСтрока = ДеревоДанных.Строки.Добавить();
		НоваяСтрока.Представление        = "Выполнено заявок";
		НоваяСтрока.Сумма                = Выборка.ВыполненыхЗаявок;
		НоваяСтрока.Порядок              = 2;
		НоваяСтрока.Период               = Выборка.Период;
		
	КонецЦикла;
	
	Возврат ДеревоДанных;
	
КонецФункции

// Создает пустое дерево значений - контейнер для данных монитора руководителя
// Возвращаемое значение:
//  ТаблицаЗначений - Пустая таблица данных монитора руководителя.
//
Функция ПолучитьДеревоДанныхДляЗаполнения()
	
	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ДеревоДанных = Новый ДеревоЗначений;
	
	ДеревоДанных.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	ДеревоДанных.Колонки.Добавить("Сумма",         ОписаниеТиповЧисло15_2);
	ДеревоДанных.Колонки.Добавить("Период",        Новый ОписаниеТипов("Дата"));
	ДеревоДанных.Колонки.Добавить("Порядок",       Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(3)));
	
	Возврат ДеревоДанных;
	
КонецФункции

// Возвращает таблицу периодов отчета.
Функция ПолучитьТаблицуПериодов(НачалоПериода, КонецПериода)
	
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ПериодНачальный = НачалоПериода;
	Пока ПериодНачальный <= КонецПериода Цикл
		ТаблицаПериодов.Добавить().Период = КонецМесяца(ПериодНачальный);
		ПериодНачальный = КонецМесяца(ДобавитьМесяц(ПериодНачальный, 1));
	КонецЦикла;
	Возврат ТаблицаПериодов;
	
КонецФункции

#КонецОбласти

#КонецЕсли