#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мСкопированаФорма = Параметры.мСкопированаФорма;
	мСохраненныйДок   = Параметры.мСохраненныйДок;
	
	Организация = Параметры.Организация;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации").ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПолучитьСписокДоступныхИндивидуальныхПредпринимателей(Элементы.Организация.СписокВыбора);
	Если Элементы.Организация.СписокВыбора.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Декларацию представляют: %1'"), КтоСдаетОтчет()));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) И Элементы.Организация.СписокВыбора.НайтиПоЗначению(Организация) = Неопределено Тогда
		Организация = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации").ПустаяСсылка();
	КонецЕсли;
	
	ИсточникОтчета = РегламентированнаяОтчетностьВызовСервера.ИсточникОтчета(ИмяФормы);
	мТаблицаФормОтчета.Загрузить(РегламентированнаяОтчетностьВызовСервера.ОтчетОбъект(ИсточникОтчета).ТаблицаФормОтчета());
	
	мПериодичность = Перечисления.Периодичность.Год;
	
	Если ЗначениеЗаполнено(Параметры.мДатаНачалаПериодаОтчета) И ЗначениеЗаполнено(Параметры.мДатаКонцаПериодаОтчета) Тогда
		мДатаНачалаПериодаОтчета = НачалоГода(Параметры.мДатаНачалаПериодаОтчета);
		мДатаКонцаПериодаОтчета  = КонецГода(Параметры.мДатаКонцаПериодаОтчета);
	Иначе
		Период = ОбщегоНазначения.РабочаяДатаПользователя();
		Если Не ЗначениеЗаполнено(Период) Тогда
			Период = ТекущаяДатаСеанса();
		КонецЕсли;
		мДатаНачалаПериодаОтчета = НачалоГода(ДобавитьМесяц(Период, -12));
		мДатаКонцаПериодаОтчета  = КонецГода(мДатаНачалаПериодаОтчета);
	КонецЕсли;
	ПриИзмененииПериода();
	
	НадписьКтоСдаетОтчет = КтоСдаетОтчет();
	
	ПолеСсылкаИзмененияЗаконодательства = РегламентированнаяОтчетность.ПредставлениеСсылкиИзмененияЗаконодательства();
	ОбщаяЧастьСсылкиНаИзмененияЗаконодательства = РегламентированнаяОтчетность.ОбщаяЧастьСсылкиНаИзмененияЗаконодательства(ИсточникОтчета);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = "Активизировать" И ИмяСобытия = Заголовок Тогда
		Активизировать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЗначениеЗаполнено(Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеРедакцияФормыПриИзменении(Элемент)
	
	НайденныеСтроки = мТаблицаФормОтчета.НайтиСтроки(Новый Структура("РедакцияФормы", ПолеРедакцияФормы));
	Если НайденныеСтроки.Количество() <> 0 Тогда
		мВыбраннаяФорма = НайденныеСтроки[0].ФормаОтчета;
		ОписаниеНормативДок = НайденныеСтроки[0].ОписаниеОтчета;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСсылкаИзмененияЗаконодательстваНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ПустаяСтрока(ОбщаяЧастьСсылкиНаИзмененияЗаконодательства) Тогда
		СсылкаИзмененияЗаконодательства = ОбщаяЧастьСсылкиНаИзмененияЗаконодательства
			+ СтрШаблон("&currentYear=%1", Формат(Год(мДатаКонцаПериодаОтчета), "ЧГ=0"));
		ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПопытатьсяПерейтиПоНавигационнойСсылке(СсылкаИзмененияЗаконодательства);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	
	ИзменитьПериод(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	
	ИзменитьПериод(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчета(Команда)
	
	Заполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБезПомощника(Команда)
	
	Заполнить(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФорму(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВыбратьФормуОтчетаИзДействующегоСписка(ЭтотОбъект,
		Новый ОписаниеОповещения("ВыбратьФормуЗавершение", ЭтотОбъект),
		СтрШаблон(НСтр("ru = 'Декларацию представляют: %1'"), НадписьКтоСдаетОтчет));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФормуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		мВыбраннаяФорма = Результат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ОткрытьФормуОтчета.Доступность = ЗначениеЗаполнено(Форма.Организация);
	Элементы.ГруппаПериод.Доступность = ЗначениеЗаполнено(Форма.Организация);
	
	Элементы.ПолеСсылкаИзмененияЗаконодательства.Видимость = Не ПустаяСтрока(Форма.ОбщаяЧастьСсылкиНаИзмененияЗаконодательства)
		И РегламентированнаяОтчетностьКлиентСервер.ДоступенМониторингИзмененияЗаконодательства(Форма.мДатаКонцаПериодаОтчета);
	
	КоличествоФорм = РегламентированнаяОтчетностьКлиентСервер.КоличествоФормСоответствующихВыбранномуПериоду(Форма);
	Элементы.ПолеРедакцияФормы.Видимость = (КоличествоФорм > 1);
	Элементы.ОписаниеНормативДок.Видимость = (КоличествоФорм = 1);
	Элементы.ОткрытьФормуОтчета.Доступность = (КоличествоФорм > 0);
	
	Элементы.ФормаСоздатьБезПомощника.Видимость = ОтчетМожноЗаполнитьВПомощнике(Форма.мВыбраннаяФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПериод(Шаг)
	
	мДатаКонцаПериодаОтчета  = КонецГода(ДобавитьМесяц(мДатаКонцаПериодаОтчета, Шаг * 12));
	мДатаНачалаПериодаОтчета = НачалоГода(мДатаКонцаПериодаОтчета);
	
	ПриИзмененииПериода();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПериода()
	
	ПолеВыбораПериодичностиПоказаПериода = ПредставлениеПериода(
		НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета), "ФП = Истина");
	
	НадписьСрокПредставленияОтчета = СрокПредставленияОтчетности(ЭтотОбъект);
	
	мВыбраннаяФорма = Отчеты.РегламентированныйОтчет3НДФЛ.ФормаПоУмолчанию(
		мДатаКонцаПериодаОтчета, ОписаниеНормативДок, ПолеРедакцияФормы);
	
	ДействующиеФормы = Отчеты.РегламентированныйОтчет3НДФЛ.ДействующиеФормы(мДатаКонцаПериодаОтчета);
	Элементы.ПолеРедакцияФормы.СписокВыбора.Очистить();
	Для Каждого СтрокаТаблицы Из ДействующиеФормы Цикл
		Элементы.ПолеРедакцияФормы.СписокВыбора.Добавить(СтрокаТаблицы.РедакцияФормы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СрокПредставленияОтчетности(Форма)
	
	ДатаСрокаПредставления = Дата(Год(Форма.мДатаКонцаПериодаОтчета) + 1, 4, 30);
	
	Возврат СтрШаблон(НСтр("ru = 'Не позднее %1'"), Формат(ДатаСрокаПредставления, "ДЛФ=DD"));
	
КонецФункции

&НаСервереБезКонтекста
Функция КтоСдаетОтчет()
	
	Возврат НСтр("ru = 'Физические лица, являющиеся налоговыми резидентами РФ, а также физические лица, не являющиеся налоговыми резидентами, но получающие доходы от источников в РФ.'");
	
КонецФункции

&НаКлиенте
Процедура Заполнить(БезПомощника = Ложь)
	
	Если мСкопированаФорма <> Неопределено Тогда
		Если ВРег(мВыбраннаяФорма) <> ВРег(мСкопированаФорма) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Форма отчета изменилась, копирование невозможно!'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(мСкопированаФорма)
		И Не БезПомощника
		И ОтчетМожноЗаполнитьВПомощнике(мВыбраннаяФорма) Тогда
		
		ПараметрыПомощника = Новый Структура;
		ПараметрыПомощника.Вставить("Организация", Организация);
		ПараметрыПомощника.Вставить("Период", мДатаНачалаПериодаОтчета);
		ПараметрыПомощника.Вставить("КонтекстныйВызов", Истина);
		ПараметрыПомощника.Вставить("СоздатьПриОткрытии", Истина);
		ПараметрыПомощника.Вставить("ВыбраннаяФорма", мВыбраннаяФорма);
		
		ИмяФормыПомощника = "Обработка.ПомощникЗаполнения3НДФЛ.Форма";
		
		ОткрытьФорму(ИмяФормыПомощника, ПараметрыПомощника);
		
	Иначе
		
		ПараметрыФормы = РегламентированнаяОтчетностьКлиент.НовыеПараметрыФормы();
		ЗаполнитьЗначенияСвойств(ПараметрыФормы, ЭтотОбъект);
		ОткрытьФорму(СтрЗаменить(ИмяФормы, "ОсновнаяФорма", мВыбраннаяФорма), ПараметрыФормы, , Истина);
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтчетМожноЗаполнитьВПомощнике(Знач ВыбраннаяФорма = Неопределено)
	
	Если Метаданные.Обработки.Найти("ПомощникЗаполнения3НДФЛ") <> Неопределено Тогда
		МенеджерПомощника = ОбщегоНазначения.ОбщийМодуль("Обработки.ПомощникЗаполнения3НДФЛ");
		ФормаЗаполняетсяПомощником = Не ЗначениеЗаполнено(ВыбраннаяФорма) Или МенеджерПомощника.ФормаЗаполняетсяПомощником(ВыбраннаяФорма);
	Иначе
		ФормаЗаполняетсяПомощником = Ложь;
	КонецЕсли;
	
	Возврат ФормаЗаполняетсяПомощником;
	
КонецФункции

#КонецОбласти