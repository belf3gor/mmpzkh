// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ЗемНалНД");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МнУр = Истина;
		
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			ТекущийУзел.МнУр = Истина;
			
			Если ТекущийУзел.Код = "СумПУ"
			 ИЛИ ТекущийУзел.Код = "РасчПлатЗН" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
			
			Если ТекущийУзел.Код = "НалПУ" И ТекущийУзел.Раздел = "Раздел1" Тогда
				ТекущийУзел.Ключ = "П000010003003";
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ЗемНалНД/СумПУ/РасчПлатЗН");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыПодчиненные = УзлыПоXPath(НайденныйУзел, "//@*"); // подчиненные атрибуты в иерархии
		Для Каждого ТекущийУзел Из НайденныеУзлыПодчиненные Цикл
			Если ТекущийУзел.Ключ = "П100020006003" Тогда
				ТекущийУзел.Ключ = "П000020006003_Числ";
				ТекущийУзел.МинРазмерность = 0;
				ТекущийУзел.МаксРазмерность = 10;
				ТекущийУзел.Формат = "N";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "ДоляЗУ_Знам";
				ДопУзел.Ключ = "П000020006003_Знам";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Ключ = "П100020007003" Тогда
				ТекущийУзел.Ключ = "П000020007003_КодЛьготы";
				ТекущийУзел.МинРазмерность = 0;
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодНалЛьгот_Осн";
				ДопУзел.Ключ = "П000020007003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Ключ = "П100020009003" Тогда
				ТекущийУзел.Ключ = "П000020009003_КодЛьготы";
				ТекущийУзел.МинРазмерность = 0;
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодНалЛьгот_Осн";
				ДопУзел.Ключ = "П000020009003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Ключ = "П100020010003" Тогда
				ТекущийУзел.Ключ = "П000020010003_Числ";
				ТекущийУзел.МинРазмерность = 0;
				ТекущийУзел.МаксРазмерность = 10;
				ТекущийУзел.Формат = "N";
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "ДоляПлЗУ_Знам";
				ДопУзел.Ключ = "П000020010003_Знам";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Ключ = "П100020018003" Тогда
				ТекущийУзел.Ключ = "П000020018003_КодЛьготы";
				ТекущийУзел.МинРазмерность = 0;
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодНалЛьгот_Осн";
				ДопУзел.Ключ = "П000020018003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Ключ = "П100020022003" Тогда
				ТекущийУзел.Ключ = "П000020022003_КодЛьготы";
				ТекущийУзел.МинРазмерность = 0;
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "КодНалЛьгот_Осн";
				ДопУзел.Ключ = "П000020022003_Основание";
				ДопУзел.Обязательность = "О";
			ИначеЕсли ТекущийУзел.Ключ = "П100020024003" Тогда
				ТекущийУзел.Ключ = "П000020024003_КодЛьготы";
				ТекущийУзел.МинРазмерность = 0;
				ДопУзел = СкопированныйУзел(ТекущийУзел.Родитель, ТекущийУзел);
				ДопУзел.Код  = "ЛьготСнСтав_Осн";
				ДопУзел.Ключ = "П000020024003_Основание";
				ДопУзел.Обязательность = "О";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
	КонецЕсли;
	
	УзлыРаздел1 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ЗемНалНД/СумПУ"); // многоуровневый раздел 1
	
	Для НомСтрокиУровень1 = 1 По УзлыРаздел1.Количество() Цикл
		
		УзелРаздел1 = УзлыРаздел1[НомСтрокиУровень1 - 1];
		
		УзелРаздел1НалПУ = УзлыПоXPath(УзелРаздел1, "@НалПУ")[0]; // обязательный
		Если Лев(УзелРаздел1НалПУ.Значение, 1) = "-" Тогда
			УзелРаздел1НалПУ.Ключ = "П000010004003";
			УзелРаздел1НалПУ.Значение = Сред(УзелРаздел1НалПУ.Значение, 2);
		КонецЕсли;
		
		НомСтроки = Новый Массив(1);
		НомСтроки[0] = НомСтрокиУровень1;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел1, П.ДанныеОтчета, П.ПараметрыОтчета, , Новый Массив, НомСтроки);
		
	КонецЦикла;
	
	УзлыРаздел2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ЗемНалНД/СумПУ/РасчПлатЗН"); // многоуровневый раздел 2
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел2.Количество() Цикл
		
		УзелРаздел2 = УзлыРаздел2[НомСтраницыУровень1 - 1];
		
		ДопУзлы = УзлыПоXPath(УзелРаздел2, "../@*");
		Для Каждого ДопУзел Из ДопУзлы Цикл
			Если ДопУзел.Код = "ОКТМО" Тогда
				УзелОКТМО = УзелРаздел2.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелОКТМО, ДопУзел, ,"Родитель, Строки");
				УзелОКТМО.Раздел = "Раздел2";
				УзелОКТМО.Ключ = "П000020002003";
			ИначеЕсли ДопУзел.Код = "КБК" Тогда
				УзелКБК = УзелРаздел2.Строки.Вставить(0);
				ЗаполнитьЗначенияСвойств(УзелКБК, ДопУзел, ,"Родитель, Строки");
				УзелКБК.Раздел = "Раздел2";
				УзелКБК.Ключ = "П000020001003";
			КонецЕсли;
		КонецЦикла;
		
		УзлыДоляЗУ = УзлыПоXPath(УзелРаздел2, "@ДоляЗУ");
		Если ЗначениеЗаполнено(УзлыДоляЗУ) Тогда
			ЧастиЗначения = СтрРазделить(УзлыДоляЗУ[0].Значение, "/");
			УзлыДоляЗУ[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "@ДоляЗУ_Знам")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодНалЛьгот = УзлыПоXPath(УзелРаздел2, "ОпрНалБаза/Льгот387_2Сум/@КодНалЛьгот");
		Если ЗначениеЗаполнено(УзлыКодНалЛьгот) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодНалЛьгот[0].Значение, "/");
			УзлыКодНалЛьгот[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "ОпрНалБаза/Льгот387_2Сум/@КодНалЛьгот_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодНалЛьгот = УзлыПоXPath(УзелРаздел2, "ОпрНалБаза/Льгот387_2Пл/@КодНалЛьгот");
		Если ЗначениеЗаполнено(УзлыКодНалЛьгот) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодНалЛьгот[0].Значение, "/");
			УзлыКодНалЛьгот[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "ОпрНалБаза/Льгот387_2Пл/@КодНалЛьгот_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыДоляПлЗУ = УзлыПоXPath(УзелРаздел2, "ОпрНалБаза/Льгот387_2Пл/@ДоляПлЗУ");
		Если ЗначениеЗаполнено(УзлыДоляПлЗУ) Тогда
			ЧастиЗначения = СтрРазделить(УзлыДоляПлЗУ[0].Значение, "/");
			УзлыДоляПлЗУ[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "ОпрНалБаза/Льгот387_2Пл/@ДоляПлЗУ_Знам")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодНалЛьгот = УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/Льгот387_2Осв/@КодНалЛьгот");
		Если ЗначениеЗаполнено(УзлыКодНалЛьгот) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодНалЛьгот[0].Значение, "/");
			УзлыКодНалЛьгот[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/Льгот387_2Осв/@КодНалЛьгот_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыКодНалЛьгот = УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/Льгот387_2УмСум/@КодНалЛьгот");
		Если ЗначениеЗаполнено(УзлыКодНалЛьгот) Тогда
			ЧастиЗначения = СтрРазделить(УзлыКодНалЛьгот[0].Значение, "/");
			УзлыКодНалЛьгот[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/Льгот387_2УмСум/@КодНалЛьгот_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыЛьготСнСтав = УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/ЛьготСнСтав");
		Если ЗначениеЗаполнено(УзлыЛьготСнСтав) Тогда
			ЧастиЗначения = СтрРазделить(УзлыЛьготСнСтав[0].Значение, "/");
			УзлыЛьготСнСтав[0].Значение = ЧастиЗначения[0];
			УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/ЛьготСнСтав_Осн")[0].Значение = ?(ЧастиЗначения.ВГраница() = 1, ЧастиЗначения[1], "");
		КонецЕсли;
		
		УзлыСумЛьг = УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/Льгот387_2УмСум/@СумЛьг");
		Если ЗначениеЗаполнено(УзлыСумЛьг) Тогда
			СумЛьг = ЧислоИзСтроки(УзлыСумЛьг[0].Значение);
			Если СумЛьг > 0 Тогда
				СумНалИсчисл = ЧислоИзСтроки(УзлыПоXPath(УзелРаздел2, "СумНалИсчисл/@СумНалИсчисл")[0].Значение);
				СтрПроцент = Формат(СумЛьг / СумНалИсчисл * 100, "ЧЦ=6; ЧДЦ=4; ЧРД=.");
				
				ДопУзел = СкопированныйУзел(УзлыСумЛьг[0].Родитель, УзлыСумЛьг[0]);
				ДопУзел.Код  = "ПроцентУм";
				ДопУзел.Ключ = "П000020022003_Процент";
				ДопУзел.МинРазмерность  = 4;
				ДопУзел.МаксРазмерность = 7;
				
				ДопУзел.Значение = СтрПроцент;
			КонецЕсли;
		КонецЕсли;
		
		НомСтраницы = Новый Массив(1);
		НомСтраницы[0] = НомСтраницыУровень1;
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		
	КонецЦикла;
	
#КонецОбласти