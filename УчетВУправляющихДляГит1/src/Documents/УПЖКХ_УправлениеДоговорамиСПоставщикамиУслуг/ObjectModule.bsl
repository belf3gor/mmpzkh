
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииДляОбеспеченияПроведенияДокумента

// Формирует движения документа по регистру "Поставщики услуг".
Процедура ДвиженияПоРегиструПоставщикиУслуг(СтруктураШапкиДокумента, ТаблицаОбъектов, Отказ, Заголовок, РежимПроведения)
	
	НаборДвижений = Движения.УПЖКХ_ПоставщикиУслуг;
	
	Для Каждого СтрокаОбъекта Из ТаблицаОбъектов Цикл
		
		Движение = НаборДвижений.Добавить();
		
		Движение.Период                 = СтруктураШапкиДокумента.Дата;
		Движение.Организация            = СтруктураШапкиДокумента.Организация;
		Движение.Объект                 = СтрокаОбъекта.Объект;
		Движение.ВидУслуги              = СтруктураШапкиДокумента.ВидУслуги;
		Движение.Поставщик              = СтруктураШапкиДокумента.Поставщик;
		Движение.ДоговорПоставщикаУслуг = СтруктураШапкиДокумента.ДоговорПоставщикаУслуг;
		
	КонецЦикла;
	
КонецПроцедуры // ДвиженияПоРегиструПоставщикиУслуг()

// Формирует движения документа по регистрам.
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаОбъектов, Отказ, Заголовок, РежимПроведения)
	
	ДвиженияПоРегиструПоставщикиУслуг(СтруктураШапкиДокумента, ТаблицаОбъектов, Отказ, Заголовок, РежимПроведения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДокумента

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Процедура проведения документа.
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = УПЖКХ_ТиповыеМетодыВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении,
	// по данным шапки документа.
	ПараметрыПроведения = 
		Документы.УПЖКХ_УправлениеДоговорамиСПоставщикамиУслуг.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента = ПараметрыПроведения.Реквизиты;
	ТаблицаОбъектов         = ПараметрыПроведения.ТаблицаСведенийДляВзаиморасчетов;
	
	Если НЕ Отказ Тогда
		// Формирование движения регистров
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаОбъектов, Отказ, Заголовок, РежимПроведения);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "ОбработкаПроверкиЗаполнения" документа.
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Организация");
	ПроверяемыеРеквизиты.Добавить("ВидУслуги");
	ПроверяемыеРеквизиты.Добавить("Поставщик");
	ПроверяемыеРеквизиты.Добавить("ДоговорПоставщикаУслуг");
	ПроверяемыеРеквизиты.Добавить("Объекты.Объект");
	
	Если Объекты.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не указаны объекты, обслуживанием которых занимается поставщик!", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли