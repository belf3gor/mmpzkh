
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = СтрШаблон(НСтр("ru = 'Дивиденды (%1)'"), Объект.Организация);
	
	Если Объект.ТипУчредителя = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		Элементы.ДействиеДокументыНалог.Заголовок = НСтр("ru = 'НДФЛ'");
	Иначе
		Элементы.ДействиеДокументыНалог.Заголовок = НСтр("ru = 'Налог на прибыль'");
	КонецЕсли;
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НачислениеДивидендов"
		И Источник = Объект.Ссылка Тогда
		ОбновитьДокументНачисления();
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить(Элементы.СуммаДохода);
		МассивЭлементов.Добавить(Элементы.СуммаНалога);
		ЭтотОбъект.ОбновитьОтображениеДанных(МассивЭлементов);
	ИначеЕсли ИмяСобытия = "ОбновитьФорму"
		И Параметр = ЭтотОбъект Тогда
		
		ОбновитьДокументыОплаты(Источник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПлатежноеПоручениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьДокумент"
		ИЛИ НавигационнаяСсылкаФорматированнойСтроки = "СоздатьДокумент" Тогда
		Если Элемент.Имя = "ДекорацияПлатежДивиденды" Тогда
			ПлатежДивидендыНажатие();
		ИначеЕсли Элемент.Имя = "ДекорацияПлатежНалог" Тогда
			ПлатежНалогНажатие();
		КонецЕсли;
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "УдалитьДокумент" Тогда
		Если Элемент.Имя = "ДекорацияПлатежДивиденды" Тогда
			ИмяРеквизита = "ПлатежныйДокументДивиденды";
		ИначеЕсли Элемент.Имя = "ДекорацияПлатежНалог" Тогда
			ИмяРеквизита = "ПлатежныйДокументНалог";
		КонецЕсли;
		УдалитьДокументНаСервере(ИмяРеквизита);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДокументНаСервере(ИмяРеквизита)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]) Тогда
		ДокументОбъект = ЭтотОбъект[ИмяРеквизита].Ссылка.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
		ЭтотОбъект[ИмяРеквизита] = "";
	КонецЕсли;
	
	СформироватьОписаниеДокументов();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДействиеРасчет(Команда)
	
	СведенияОДокументе = Новый Структура;
	СведенияОДокументе.Вставить("Ссылка",       Объект.Ссылка);
	СведенияОДокументе.Вставить("ВерсияДанных", ВерсияДанных(Объект.Ссылка));
	
	ОткрытьДокументОповещение = Новый ОписаниеОповещения("ОбработатьИзменениеРасчетногоДокумента",
		ЭтотОбъект,
		Новый Структура("СведенияОДокументе", СведенияОДокументе));
		
	ОткрытьФорму("Документ.НачислениеДивидендов.ФормаОбъекта",
		Новый Структура("Ключ", Объект.Ссылка),
		ЭтотОбъект,
		,
		,
		,
		ОткрытьДокументОповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежДивидендыНажатие()
	
	ВозвращаемыеПараметры = Неопределено;
	Если ЗначениеЗаполнено(ПлатежныйДокументДивиденды) Тогда
		ВозвращаемыеПараметры = Новый Структура("Ссылка, ВерсияДанных",
												ПлатежныйДокументДивиденды, ВерсияДанных(ПлатежныйДокументДивиденды));
	КонецЕсли;
	
	ОткрытьДокументОповещение = Новый ОписаниеОповещения("ОбработатьРедактированиеПлатежногоДокумента",
															ЭтотОбъект,
															ВозвращаемыеПараметры);
															
	Если ЗначениеЗаполнено(ПлатежныйДокументДивиденды) Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", ПлатежныйДокументДивиденды);
	Иначе
		ЗначенияЗаполнения  = Новый Структура("ДанныеЗаполнения",    Объект.Ссылка);
		ПараметрыОткрытия = Новый Структура("ЗначенияЗаполнения",  ЗначенияЗаполнения);
	КонецЕсли;
	
	ОткрытьПлатежныйДокумент(ПараметрыОткрытия, ОткрытьДокументОповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежНалогНажатие()
	
	ТекущийДокумент = ПараметрыФормыПлатежногоДокумента(ПлатежныйДокументНалог);
	
	ВозвращаемыеПараметры = Неопределено;
	Если ТекущийДокумент.Свойство("Ключ") Тогда
		ВозвращаемыеПараметры = Новый Структура("Ссылка, ВерсияДанных",
												ТекущийДокумент.Ключ, ТекущийДокумент.ВерсияДанных);
	КонецЕсли;
	
	ОткрытьДокументОповещение = Новый ОписаниеОповещения("ОбработатьРедактированиеПлатежногоДокумента",
															ЭтотОбъект,
															ВозвращаемыеПараметры);
															
	Если ЗначениеЗаполнено(ПлатежныйДокументНалог) Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", ТекущийДокумент.Ключ);
	Иначе
		ПараметрыОткрытия = ТекущийДокумент;
	КонецЕсли;
	
	ОткрытьПлатежныйДокумент(ПараметрыОткрытия, ОткрытьДокументОповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПлатежныйДокумент(ПараметрыОткрытия, Оповещение)
	
	ОткрытьФорму(
		"Документ.ПлатежноеПоручение.ФормаОбъекта",
		ПараметрыОткрытия,
		ЭтотОбъект,
		,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВБанк(Команда)
	
	СписокДокументов = Новый СписокЗначений;
	Если ЗначениеЗаполнено(ПлатежныйДокументНалог) Тогда
		СписокДокументов.Добавить(ПлатежныйДокументНалог);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПлатежныйДокументДивиденды) Тогда
		СписокДокументов.Добавить(ПлатежныйДокументДивиденды);
	КонецЕсли;
	
	ПараметрыОбработки = Новый Структура();
	ПараметрыОбработки.Вставить("Организация",      Объект.Организация);
	ПараметрыОбработки.Вставить("НачалоПериода",    НачалоМесяца(Объект.Дата));
	ПараметрыОбработки.Вставить("КонецПериода",     КонецДня(ТекущаяДата()));
	ПараметрыОбработки.Вставить("СписокДокументов", СписокДокументов);
	
	ОткрытьФорму("Обработка.КлиентБанк.Форма.Форма", ПараметрыОбработки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	Если Объект.ТипУчредителя = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		ПредставлениеПолучателя = Строка(Объект.Учредитель);
	Иначе
		ДанныеФизическогоЛица   = УчетЗарплаты.ДанныеФизическихЛиц( ,Объект.Учредитель, Объект.Дата);
		ПредставлениеПолучателя = ДанныеФизическогоЛица.Представление;
	КонецЕсли;
	ПериодНачисленияСтрокой = ПредставлениеПериода(НачалоГода(Объект.РасчетныйПериод),
								КонецКвартала(Объект.РасчетныйПериод),
								"ФП = Истина");

	
	Элементы.ДействиеРасчет.Заголовок = СтрШаблон(НСтр("ru = 'Начисление дивидендов за %1 (%2)'"), ПериодНачисленияСтрокой, ПредставлениеПолучателя);
	
	КВыплате = Объект.СуммаДохода - Объект.СуммаНалога;
	
	Попытка
		СформироватьДокументыНаСервере();
	Исключение
		ПлатежныйДокументДивиденды = "";
		ПлатежныйДокументНалог     = "";
		ДокументыСформированы = Ложь;
		УправлениеФормой(ЭтотОбъект);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРасчетногоДокумента(РезультатЗакрытия = Неопределено,
													ДополнительныеПараметры = Неопределено) Экспорт
	
	СведенияОДокументе = Неопределено;
	Если ДополнительныеПараметры <> Неопределено Тогда
		СведенияОДокументе = ДополнительныеПараметры.СведенияОДокументе;
		Если СохраниласьВерсияДанных(СведенияОДокументе.Ссылка, СведенияОДокументе.ВерсияДанных) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРедактированиеПлатежногоДокумента(РезультатЗакрытия = Неопределено,
																ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		Если СохраниласьВерсияДанных(ДополнительныеПараметры.Ссылка, ДополнительныеПараметры.ВерсияДанных) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СформироватьОписаниеДокументов();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СохраниласьВерсияДанных(Документ, ВерсияДанных)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "ВерсияДанных") = ВерсияДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВерсияДанных(Документ)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "ВерсияДанных");
	
КонецФункции

&НаСервере
Процедура СформироватьДокументыНаСервере()
	
	ДокументОбъект = Документы.ПлатежноеПоручение.СоздатьДокумент();
	ДокументОбъект.Заполнить(Объект.Ссылка);
	ПлатежныйДокументДивиденды = ЗаписатьПлатежныйДокумент(ДокументОбъект, КВыплате);
	
	Если Объект.СуммаНалога <> 0 Тогда
		ПлатежныйДокументНалог = ДокументНаУплатуНалога();
	КонецЕсли;
	
	ДокументыСформированы = Истина;
	
	СформироватьОписаниеДокументов();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ДокументНаУплатуНалога()
	
	// Сначала поищем
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",          Объект.Организация);
	Запрос.УстановитьПараметр("НачислениеДивидендов", Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПлатежноеПоручение.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.Организация = &Организация
	|	И ПлатежноеПоручение.НачислениеДивидендов = &НачислениеДивидендов
	|	И ПлатежноеПоручение.Проведен
	|	И ПлатежноеПоручение.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		
		// Параметры формы для заполнения нового платежного документа
		
		ПараметрыФормы = ПараметрыФормыПлатежногоДокумента(ПлатежныйДокументНалог);
		
		ДокументОбъект = Документы.ПлатежноеПоручение.СоздатьДокумент();
		ДокументОбъект.Заполнить(ПараметрыФормы.ЗначенияЗаполнения);
		
		Возврат ЗаписатьПлатежныйДокумент(ДокументОбъект, Объект.СуммаНалога);
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПараметрыФормыПлатежногоДокумента(ПлатежноеПоручение) Экспорт
	
	Если ЗначениеЗаполнено(ПлатежноеПоручение) Тогда
		Возврат Новый Структура("Ключ, ВерсияДанных", ПлатежноеПоручение, ВерсияДанных(ПлатежноеПоручение));
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = Справочники.Организации.РегистрацияВНалоговомОрганеНаДату(Объект.Организация, Объект.Дата);
	РеквизитыРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане, "Код, КодПоОКТМО");
	Если Объект.ТипУчредителя = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоВиду(Перечисления.ВидыНалогов.НалогНаПрибыль_НалоговыйАгент);
	Иначе
		Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоВиду(Перечисления.ВидыНалогов.НДФЛ);
	КонецЕсли;
	
	ОписаниеПлатежа = ВыполнениеЗадачБухгалтера.НовыйОписаниеПлатежа(); // Передаем параметры в структуре, потому что их много
	ОписаниеПлатежа.Период               = ТекущаяДатаСеанса();
	ОписаниеПлатежа.Налог                = Налог;
	ОписаниеПлатежа.ВидНалоговогоОбязательства = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	ОписаниеПлатежа.Организация          = Объект.Организация;
	ОписаниеПлатежа.СпособОплаты         = Перечисления.СпособыУплатыНалогов.БанковскийПеревод;
	ОписаниеПлатежа.ПоказательПериода    = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ОписаниеПлатежа.Период, "МС");
	ОписаниеПлатежа.Аванс                = Ложь;
	ОписаниеПлатежа.КБК                  = Справочники.ВидыНалоговИПлатежейВБюджет.КБК(Налог, , ОписаниеПлатежа.Период);
	ОписаниеПлатежа.ОКАТО                = РеквизитыРегистрации.КодПоОКТМО;
	ОписаниеПлатежа.КПППлательщика       = Справочники.Организации.КППНаДату(Объект.Организация, ОписаниеПлатежа.Период);;
	ОписаниеПлатежа.КодНалоговогоОргана  = РеквизитыРегистрации.Код;
	ОписаниеПлатежа.Сумма                = Объект.СуммаНалога;
	ОписаниеПлатежа.Декларация           = Неопределено;
	ОписаниеПлатежа.ДатаДекларации       = "";
	
	ЗначенияЗаполнения = ВыполнениеЗадачБухгалтера.ЗначенияЗаполненияПлатежногоДокумента(ОписаниеПлатежа);
	ЗначенияЗаполнения.Вставить("НачислениеДивидендов", Объект.Ссылка);
	
	ПараметрыФормыПлатежногоДокумента = Новый Структура();
	ПараметрыФормыПлатежногоДокумента.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Возврат ПараметрыФормыПлатежногоДокумента;
	
КонецФункции

&НаСервере
Функция ЗаписатьПлатежныйДокумент(ДокументОбъект, Сумма)
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	БезОшибок = Истина;
	Попытка
		
		// Если документ заполнен без ошибок, то проводим, предварительно записываем для привязки сообщений об ошибках
		БезОшибок = ДокументОбъект.ПроверитьЗаполнение();
		Если БезОшибок Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Возврат ДокументОбъект.Ссылка;
		КонецЕсли;
		
	Исключение
		БезОшибок = Ложь;
	КонецПопытки;
		
	Если НЕ БезОшибок Тогда
		ТекстСообщения = НСтр("ru = 'Не сформирован документ ""%1"" на %2 руб.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, МетаданныеДокумента.Синоним, Сумма);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ТекстОшибки = НСтр("ru = 'Не удалось создать документ.
			|%1'");
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстОшибки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Помощник выплаты дивидендов'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			МетаданныеДокумента,
			,
			ОписаниеОшибки);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ОбновитьДокументНачисления()
	
	ЗначениеВДанныеФормы(Объект.Ссылка.ПолучитьОбъект(), Объект);
	КВыплате = Объект.СуммаДохода - Объект.СуммаНалога;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДокументыОплаты(ДокументИсточник)
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументИсточник, "ВидОперации, Проведен");
	
	Если НЕ РеквизитыДокумента.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Если РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаДивидендов
		ИЛИ РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеДивидендов Тогда
		Если НЕ ЗначениеЗаполнено(ПлатежныйДокументДивиденды) Тогда
			ПлатежныйДокументДивиденды = ДокументИсточник;
		КонецЕсли;
	ИначеЕсли РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога Тогда
		Если НЕ ЗначениеЗаполнено(ПлатежныйДокументНалог) Тогда
			ПлатежныйДокументНалог = ДокументИсточник;
		КонецЕсли;
	КонецЕсли;
	
	СформироватьОписаниеДокументов();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОписаниеДокументов()
	
	Если ЗначениеЗаполнено(ПлатежныйДокументДивиденды)
		И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлатежныйДокументДивиденды, "Проведен") Тогда
		ПлатежныйДокументДивиденды = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПлатежныйДокументНалог)
		И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлатежныйДокументНалог, "Проведен") Тогда
		ПлатежныйДокументНалог = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПлатежныйДокументДивиденды) Тогда
		Элементы.ДекорацияПлатежДивиденды.Заголовок = ПредставлениеПлатежногоДокумента(ПлатежныйДокументДивиденды);
		Элементы.ДекорацияПлатежДивиденды.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
	Иначе
		Элементы.ДекорацияПлатежДивиденды.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru = 'Оплатить'"), , ЦветаСтиля.ПоясняющийОшибкуТекст, , "СоздатьДокумент");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПлатежныйДокументНалог) Тогда
		Элементы.ДекорацияПлатежНалог.Заголовок = ПредставлениеПлатежногоДокумента(ПлатежныйДокументНалог);
		Элементы.ДекорацияПлатежНалог.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
	Иначе
		Элементы.ДекорацияПлатежНалог.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru = 'Оплатить'"), , ЦветаСтиля.ПоясняющийОшибкуТекст, , "СоздатьДокумент");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПредставлениеПлатежногоДокумента(ДокументСсылка) Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата, Номер, СуммаДокумента");
	
	ПредставлениеДокумента = НСтр("ru = 'Платежное пручение'");
	НомерДокумента         = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РеквизитыДокумента.Номер, Истина, Истина);
	ДатаДокумента          = Формат(РеквизитыДокумента.Дата,"ДЛФ=D");
	СуммаДокумента         = Формат(РеквизитыДокумента.СуммаДокумента, "Л=ru; ЧЦ=15; ЧДЦ=2; ЧН=0,00");
	СтатусОплаты           = РегистрыСведений.СостоянияБанковскихДокументов.ТекущееСостояниеДокумента(ДокументСсылка);
	
	ШаблонПредставления = НСтр("ru = '%1 %2 от %3 на сумму %4 (%5)'");
	
	ПредставлениеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
		ПредставлениеДокумента, НомерДокумента, ДатаДокумента, СуммаДокумента, СтатусОплаты);
	
	ПредставлениеПлатежа = Новый Массив;
	
	ПредставлениеПлатежа.Добавить(Новый ФорматированнаяСтрока(ПредставлениеДокумента, , , , "ОткрытьДокумент"));
	
	Если СтатусОплаты <> Перечисления.СостоянияБанковскихДокументов.Оплачено
		И СтатусОплаты <> Перечисления.СостоянияБанковскихДокументов.Отправлено Тогда
		ПредставлениеПлатежа.Добавить("  ");
		ПредставлениеПлатежа.Добавить(Новый ФорматированнаяСтрока(
			БиблиотекаКартинок.УдалитьДокументОплатыИзПомощника, , , , "УдалитьДокумент"));
	КонецЕсли;
	
	// Обход ошибки платформы отображения картинки в конце форматированной строки.
	ПредставлениеПлатежа.Добавить(" ");
	
	Возврат Новый ФорматированнаяСтрока(ПредставлениеПлатежа);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ОтправитьВБанк.Доступность = ЗначениеЗаполнено(Форма.ПлатежныйДокументДивиденды)
		ИЛИ ЗначениеЗаполнено(Форма.ПлатежныйДокументНалог)
	
КонецПроцедуры

#КонецОбласти
