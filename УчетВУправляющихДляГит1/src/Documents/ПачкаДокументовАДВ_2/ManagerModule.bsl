
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.Сотрудник, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПачкаДокументовАДВ_2;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт 
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьПОПД = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт 
	
	СтруктураПроверяемыхДанных = ПерсонифицированныйУчет.ПолучитьСтруктуруПроверяемыхДанных();
	ПерсонифицированныйУчет.ДокументыАДВДополнитьСтруктуруПроверяемыхДанных(СтруктураПроверяемыхДанных);
	СтруктураПроверяемыхДанных.Удалить("СтраховойНомерПФР");	
	СтруктураПроверяемыхДанных.Вставить("СтраховойНомерПФРВСвидетельстве");
	СтруктураПроверяемыхДанных.Вставить("ФамилияВСвидетельстве");
	СтруктураПроверяемыхДанных.Вставить("ИмяВСвидетельстве");
	
	Возврат СтруктураПроверяемыхДанных;
	
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьПредставленияПроверяемыхРеквизитов();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	
	СоответствиеРеквизитовПутиВФорме = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовФормеОбъекта();
	ПерсонифицированныйУчет.ДокументыАДВДополнитьСоответствиеРеквизитовФормеОбъекта(СоответствиеРеквизитовПутиВФорме);
	
	СоответствиеРеквизитовПутиВФорме.Вставить("ФамилияВСвидетельстве",  "Объект.Сотрудники[" + Формат(ДанныеДляПроверки.НомерСтроки -1, "ЧН=0; ЧГ=0") + "].Сотрудник");
	СоответствиеРеквизитовПутиВФорме.Вставить("ИмяВСвидетельстве",  "Объект.Сотрудники[" + Формат(ДанныеДляПроверки.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник");
	СоответствиеРеквизитовПутиВФорме.Вставить("СтраховойНомерПФРВСвидетельстве", "СтраховойНомерПФР");
	
	Возврат СоответствиеРеквизитовПутиВФорме;
	
КонецФункции

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	
	СоответствиеРеквизитовПутиВФормеОбъекта = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();
	ПерсонифицированныйУчет.ДокументыАДВДополнитьСоответствиеРеквизитовПутиВФормеОбъекта(СоответствиеРеквизитовПутиВФормеОбъекта);
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СтраховойНомерПФРВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ФамилияВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ФамилияВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ИмяВСвидетельстве", "");
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
	
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	
	СтруктураСоответствия = Новый Структура;
	СтруктураСоответствия.Вставить("ФамилияВСвидетельстве", ДокументСсылка);
	СтруктураСоответствия.Вставить("ИмяВСвидетельстве", ДокументСсылка);
	
	Возврат СтруктураСоответствия;
	
КонецФункции

#Область ПроцедурыПолученияДанныхДляЗаполненияИПроведенияДокумента

// Возвращает результат, содержащий данные  физ. лиц, для заполнения
// в табличную часть "Сотрудники" документа "ПачкаДокументовАДВ_1".
//
// Параметры:
//	СписокФизЛиц
//	Дата
//
// Возвращаемое значение:
//	Выборка из результата запроса с данными физ. лица.
//
Функция СформироватьЗапросПоДаннымФизЛицДокумента(ДокументСсылка, Дата, МенеджерВременныхТаблиц) Экспорт	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	МассивНеобходимыхКадровыхДанных = Новый Массив();
	МассивНеобходимыхКадровыхДанных.Добавить("ФизическоеЛицо");
	МассивНеобходимыхКадровыхДанных.Добавить("Пол");
	МассивНеобходимыхКадровыхДанных.Добавить("ДатаРождения");
	МассивНеобходимыхКадровыхДанных.Добавить("МестоРождения");
	МассивНеобходимыхКадровыхДанных.Добавить("СтраховойНомерПФР");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументВид");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументСерия");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументНомер");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументКемВыдан");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументДатаВыдачи");
	МассивНеобходимыхКадровыхДанных.Добавить("Фамилия");
	МассивНеобходимыхКадровыхДанных.Добавить("Имя");
	МассивНеобходимыхКадровыхДанных.Добавить("Отчество");
	МассивНеобходимыхКадровыхДанных.Добавить("Страна");
	МассивНеобходимыхКадровыхДанных.Добавить("ТелефонДомашнийПредставление");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресМестаПроживания");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресМестаПроживанияПредставление");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресПоПрописке");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресПоПропискеПредставление");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСписокФизлицДокумента.ФизическоеЛицо
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ВТСписокФизлицДокумента";
	
	СписокФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Истина, СписокФизическихЛиц, МассивНеобходимыхКадровыхДанных, Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Анкета.Сотрудник КАК ФизическоеЛицо,
	|	Анкета.АдресРегистрации,
	|	Анкета.АдресФактический,
	|	Анкета.Телефоны,
	|	Анкета.Фамилия,
	|	Анкета.Имя,
	|	Анкета.Отчество,
	|	Анкета.Пол,
	|	Анкета.ДатаРождения,
	|	Анкета.МестоРождения,
	|	Анкета.Гражданство,
	|	Анкета.Ссылка.Дата КАК ДатаАнкеты
	|ПОМЕСТИТЬ ВТАнкетыСотрудников
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_2Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовАДВ_1.Сотрудники КАК Анкета
	|		ПО ПачкаДокументовАДВ_2Сотрудники.ФизическоеЛицо = Анкета.Сотрудник
	|			И ПачкаДокументовАДВ_2Сотрудники.Организация = Анкета.Ссылка.Организация
	|			И ПачкаДокументовАДВ_2Сотрудники.УточненнаяДатаПолученияСвидетельства >= Анкета.Ссылка.Дата
	|			И (Анкета.Ссылка.Проведен)
	|			И (Анкета.Ссылка.ДокументПринятВПФР)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаАнкеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Анкета.Фамилия КАК Фамилия,
	|	Анкета.Имя КАК Имя,
	|	Анкета.Отчество КАК Отчество,
	|	Анкета.Пол КАК Пол,
	|	Анкета.ДатаРождения КАК ДатаРождения,
	|	Анкета.МестоРождения КАК МестоРождения,
	|	ВЫБОР
	|		КОГДА Анкета.Гражданство = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|		ИНАЧЕ Анкета.Гражданство
	|	КОНЕЦ КАК Гражданство,
	|	Анкета.АдресРегистрации КАК АдресРегистрации,
	|	Анкета.АдресФактический КАК АдресФактический,
	|	Анкета.Телефоны КАК Телефоны
	|ПОМЕСТИТЬ ВТДанныеАнкет
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Анкета.ДатаАнкеты) КАК МаксимальнаяДата,
	|		Анкета.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТАнкетыСотрудников КАК Анкета
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Анкета.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТАнкетыСотрудников КАК Анкета
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Анкета.ДатаАнкеты
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Анкета.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовАДВ_2Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.Ссылка.Дата КАК ДатаСтарогоДокумента,
	|	Заявление.СтраховойНомерПФРВСвидетельстве,
	|	Заявление.Гражданство,
	|	Заявление.АдресРегистрации,
	|	Заявление.АдресФактический,
	|	Заявление.Телефоны,
	|	Заявление.Фамилия,
	|	Заявление.Имя,
	|	Заявление.Отчество,
	|	Заявление.ФамилияВСвидетельстве,
	|	Заявление.ИмяВСвидетельстве,
	|	Заявление.ОтчествоВСвидетельстве,
	|	Заявление.Пол,
	|	ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка) КАК ПолВСвидетельстве,
	|	Заявление.ДатаРождения,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРожденияВСвидетельстве,
	|	Заявление.МестоРождения,
	|	"""" КАК МестоРожденияВСвидетельстве
	|ПОМЕСТИТЬ ВТПредыдущиеЗаявления
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_2Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовАДВ_2.Сотрудники КАК Заявление
	|		ПО ПачкаДокументовАДВ_2Сотрудники.ФизическоеЛицо = Заявление.Сотрудник
	|			И (Заявление.Ссылка.Проведен)
	|			И (Заявление.Ссылка.ДокументПринятВПФР)
	|			И (Заявление.Ссылка <> &Ссылка)
	|			И (Заявление.Ссылка.Организация = ПачкаДокументовАДВ_2Сотрудники.Организация)
	|			И (Заявление.Ссылка.Дата <= ПачкаДокументовАДВ_2Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовАДВ_2Сотрудники.ФизическоеЛицо,
	|	Заявление.Ссылка.Дата,
	|	Заявление.СтраховойНомерПФРВСвидетельстве,
	|	Заявление.Гражданство,
	|	Заявление.АдресРегистрации,
	|	Заявление.АдресФактический,
	|	Заявление.Телефоны,
	|	Заявление.Фамилия,
	|	Заявление.Имя,
	|	Заявление.Отчество,
	|	Заявление.ФамилияВСвидетельстве,
	|	Заявление.ИмяВСвидетельстве,
	|	Заявление.ОтчествоВСвидетельстве,
	|	Заявление.Пол,
	|	Заявление.ПолВСвидетельстве,
	|	Заявление.ДатаРождения,
	|	Заявление.ДатаРожденияВСвидетельстве,
	|	Заявление.МестоРождения,
	|	Заявление.МестоРожденияВСвидетельстве
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_2Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовАДВ_3.Сотрудники КАК Заявление
	|		ПО ПачкаДокументовАДВ_2Сотрудники.ФизическоеЛицо = Заявление.Сотрудник
	|			И (Заявление.Ссылка.Проведен)
	|			И (Заявление.Ссылка.ДокументПринятВПФР)
	|			И (Заявление.Ссылка.Организация = ПачкаДокументовАДВ_2Сотрудники.Организация)
	|			И (Заявление.Ссылка.Дата <= ПачкаДокументовАДВ_2Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаСтарогоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.Фамилия = """"
	|			ТОГДА Заявление.ФамилияВСвидетельстве
	|		ИНАЧЕ Заявление.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА Заявление.Имя = """"
	|			ТОГДА Заявление.ИмяВСвидетельстве
	|		ИНАЧЕ Заявление.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА Заявление.Отчество = """"
	|			ТОГДА Заявление.ОтчествоВСвидетельстве
	|		ИНАЧЕ Заявление.Отчество
	|	КОНЕЦ КАК Отчество,
	|	Заявление.СтраховойНомерПФРВСвидетельстве
	|ПОМЕСТИТЬ ВТСтарыеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|			ТОГДА Заявление.ПолВСвидетельстве
	|		ИНАЧЕ Заявление.Пол
	|	КОНЕЦ КАК Пол
	|ПОМЕСТИТЬ ВТСтарыеДанныеОПоле
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(Заявление.Пол <> ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|				ИЛИ Заявление.ПолВСвидетельстве <> ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Заявление.ДатаРожденияВСвидетельстве
	|		ИНАЧЕ Заявление.ДатаРождения
	|	КОНЕЦ КАК ДатаРождения
	|ПОМЕСТИТЬ ВТСтарыеДанныеОДатеРождения
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(Заявление.ДатаРождения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ИЛИ Заявление.ДатаРожденияВСвидетельстве <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.МестоРождения = """"
	|			ТОГДА Заявление.МестоРожденияВСвидетельстве
	|		ИНАЧЕ Заявление.МестоРождения
	|	КОНЕЦ КАК МестоРождения
	|ПОМЕСТИТЬ ВТСтарыеДанныеОМестеРождения
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(Заявление.МестоРождения <> """"
	|				ИЛИ Заявление.МестоРожденияВСвидетельстве <> """")
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.Гражданство КАК Гражданство
	|ПОМЕСТИТЬ ВТСтарыеДанныеОГражданстве
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		Заявление.Гражданство <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.Телефоны КАК Телефоны
	|ПОМЕСТИТЬ ВТСтарыеДанныеОТелефоне
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(ВЫРАЗИТЬ(Заявление.Телефоны КАК СТРОКА(1000))) <> """"
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.АдресФактический КАК АдресФактический
	|ПОМЕСТИТЬ ВТСтарыеДанныеАдресаФактического
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(ВЫРАЗИТЬ(Заявление.АдресФактический КАК СТРОКА(1000))) <> """"
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.АдресРегистрации КАК АдресРегистрации
	|ПОМЕСТИТЬ ВТСтарыеДанныеАдресаРегистрации
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(ВЫРАЗИТЬ(Заявление.АдресРегистрации КАК СТРОКА(1000))) <> """"
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераСтрок.НомерСтроки КАК НомерСтроки,
	|	НомераСтрок.ФизическоеЛицо КАК Сотрудник,
	|	НомераСтрок.УточненнаяДатаПолученияСвидетельства КАК ДатаПолученияСвидетельства,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР КАК СтраховойНомерПФРВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Фамилия
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Фамилия
	|		ИНАЧЕ КадровыеДанныеФизЛиц.Фамилия
	|	КОНЕЦ КАК ФамилияВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Имя
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Имя
	|		ИНАЧЕ КадровыеДанныеФизЛиц.Имя
	|	КОНЕЦ КАК ИмяВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Отчество
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Отчество
	|		ИНАЧЕ КадровыеДанныеФизЛиц.Отчество
	|	КОНЕЦ КАК ОтчествоВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Фамилия <> СтарыеДанные.Фамилия
	|						ТОГДА КадровыеДанныеФизЛиц.Фамилия
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Фамилия <> ДанныеАнкет.Фамилия
	|						ТОГДА КадровыеДанныеФизЛиц.Фамилия
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Имя <> СтарыеДанные.Имя
	|						ТОГДА КадровыеДанныеФизЛиц.Имя
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Имя <> ДанныеАнкет.Имя
	|						ТОГДА КадровыеДанныеФизЛиц.Имя
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Отчество <> СтарыеДанные.Отчество
	|						ТОГДА КадровыеДанныеФизЛиц.Отчество
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Отчество <> ДанныеАнкет.Отчество
	|						ТОГДА КадровыеДанныеФизЛиц.Отчество
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Отчество,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА СтарыеДанные.Отчество <> """"
	|							И КадровыеДанныеФизЛиц.Отчество = """"
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеАнкет.Отчество <> """"
	|							И КадровыеДанныеФизЛиц.Отчество = """"
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакОтменыОтчества,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОПоле.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Пол = СтарыеДанныеОПоле.Пол
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.Пол
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Пол = ДанныеАнкет.Пол
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.Пол
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|	КОНЕЦ КАК Пол,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОДатеРождения.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.ДатаРождения = СтарыеДанныеОДатеРождения.ДатаРождения
	|						ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ДатаРождения
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.ДатаРождения = ДанныеАнкет.ДатаРождения
	|						ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ДатаРождения
	|				КОНЕЦ
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОМестеРождения.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.МестоРождения КАК СТРОКА(1000))) = СтарыеДанныеОМестеРождения.МестоРождения
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.МестоРождения
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.МестоРождения = ДанныеАнкет.МестоРождения
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.МестоРождения
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК МестоРождения,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОГражданстве.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = СтарыеДанныеОГражданстве.Гражданство
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия))
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ДанныеАнкет.Гражданство
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия))
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	КОНЕЦ КАК Гражданство,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаРегистрации.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаРегистрации.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПрописке
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПрописке
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресРегистрации,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаРегистрации.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаРегистрации.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПропискеПредставление
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПропискеПредставление
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресРегистрацииПредставление,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаФактического.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаФактического.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживания
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживания
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресФактический,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаФактического.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаФактического.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживанияПредставление
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживанияПредставление
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресФактическийПредставление,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОТелефоне.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеОТелефоне.Телефоны КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.Телефоны КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Телефоны,
	|	КадровыеДанныеФизЛиц.ДокументВид КАК ВидДокумента,
	|	КадровыеДанныеФизЛиц.ДокументСерия КАК СерияДокумента,
	|	КадровыеДанныеФизЛиц.ДокументНомер КАК НомерДокумента,
	|	КадровыеДанныеФизЛиц.ДокументДатаВыдачи КАК ДатаВыдачи,
	|	КадровыеДанныеФизЛиц.ДокументКемВыдан КАК КемВыдан,
	|	КадровыеДанныеФизЛиц.Фамилия КАК ДанныеФизЛицаФамилия,
	|	КадровыеДанныеФизЛиц.Имя КАК ДанныеФизЛицаИмя,
	|	КадровыеДанныеФизЛиц.Отчество КАК ДанныеФизЛицаОтчество,
	|	КадровыеДанныеФизЛиц.Пол КАК ДанныеФизЛицаПол,
	|	КадровыеДанныеФизЛиц.ДатаРождения КАК ДанныеФизЛицаДатаРождения,
	|	КадровыеДанныеФизЛиц.МестоРождения КАК ДанныеФизЛицаМестоРождения,
	|	КадровыеДанныеФизЛиц.АдресПоПрописке КАК ДанныеФизЛицаАдресРегистрации,
	|	КадровыеДанныеФизЛиц.АдресПоПропискеПредставление КАК ДанныеФизЛицаАдресРегистрацииПредставление,
	|	КадровыеДанныеФизЛиц.АдресМестаПроживания КАК ДанныеФизЛицаАдресФактический,
	|	КадровыеДанныеФизЛиц.АдресМестаПроживанияПредставление КАК ДанныеФизЛицаАдресФактическийПредставление,
	|	КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление КАК ДанныеФизЛицаТелефоны,
	|	КадровыеДанныеФизЛиц.ДокументВид КАК ДанныеФизЛицаВидДокумента,
	|	КадровыеДанныеФизЛиц.ДокументСерия КАК ДанныеФизЛицаСерияДокумента,
	|	КадровыеДанныеФизЛиц.ДокументНомер КАК ДанныеФизЛицаНомерДокумента,
	|	КадровыеДанныеФизЛиц.ДокументДатаВыдачи КАК ДанныеФизЛицаДатаВыдачи,
	|	КадровыеДанныеФизЛиц.ДокументКемВыдан КАК ДанныеФизЛицаКемВыдан
	|ИЗ
	|	ВТСписокФизлицДокумента КАК НомераСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|		ПО НомераСтрок.ФизическоеЛицо = КадровыеДанныеФизЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеАнкет КАК ДанныеАнкет
	|		ПО НомераСтрок.ФизическоеЛицо = ДанныеАнкет.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанные КАК СтарыеДанные
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанные.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОПоле КАК СтарыеДанныеОПоле
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОПоле.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОДатеРождения КАК СтарыеДанныеОДатеРождения
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОДатеРождения.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОМестеРождения КАК СтарыеДанныеОМестеРождения
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОМестеРождения.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОГражданстве КАК СтарыеДанныеОГражданстве
	|		ПО (НомераСтрок.ФизическоеЛицо = СтарыеДанныеОМестеРождения.ФизическоеЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОТелефоне КАК СтарыеДанныеОТелефоне
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОТелефоне.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеАдресаФактического КАК СтарыеДанныеАдресаФактического
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеАдресаФактического.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеАдресаРегистрации КАК СтарыеДанныеАдресаРегистрации
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеАдресаРегистрации.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоСотрудникамДляПечати(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовАДВ_2Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовАДВ_2Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовАДВ_2Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаДокументовАДВ_2Сотрудники.ДатаПолученияСвидетельства КАК ДатаПолученияСвидетельства,
	|	ПачкаДокументовАДВ_2Сотрудники.СтраховойНомерПФРВСвидетельстве КАК СтраховойНомерПФРВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.ФамилияВСвидетельстве КАК ФамилияВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.ИмяВСвидетельстве КАК ИмяВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.ОтчествоВСвидетельстве КАК ОтчествоВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.Фамилия КАК Фамилия,
	|	ПачкаДокументовАДВ_2Сотрудники.Имя КАК Имя,
	|	ПачкаДокументовАДВ_2Сотрудники.Отчество КАК Отчество,
	|	ПачкаДокументовАДВ_2Сотрудники.Пол КАК Пол,
	|	ПачкаДокументовАДВ_2Сотрудники.ДатаРождения КАК ДатаРождения,
	|	ПачкаДокументовАДВ_2Сотрудники.МестоРождения КАК МестоРождения,
	|	ПачкаДокументовАДВ_2Сотрудники.МестоРожденияПредставление КАК МестоРожденияПредставление,
	|	ПачкаДокументовАДВ_2Сотрудники.Гражданство КАК Гражданство,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресРегистрации КАК АдресРегистрации,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресФактический КАК АдресФактический,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресРегистрацииПредставление КАК АдресРегистрацииПредставление,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресФактическийПредставление КАК АдресФактическийПредставление,
	|	ПачкаДокументовАДВ_2Сотрудники.Телефоны КАК Телефоны,
	|	ПачкаДокументовАДВ_2Сотрудники.ПризнакОтменыОтчества КАК ПризнакОтменыОтчества,
	|	ПачкаДокументовАДВ_2Сотрудники.ПризнакОтменыМестаРождения КАК ПризнакОтменыМестаРождения,
	|	ПачкаДокументовАДВ_2Сотрудники.ВидДокумента КАК ВидДокумента,
	|	ПачкаДокументовАДВ_2Сотрудники.СерияДокумента КАК СерияДокумента,
	|	ПачкаДокументовАДВ_2Сотрудники.НомерДокумента КАК НомерДокумента,
	|	ПачкаДокументовАДВ_2Сотрудники.ДатаВыдачи КАК ДатаВыдачи,
	|	ПачкаДокументовАДВ_2Сотрудники.КемВыдан КАК КемВыдан,
	|	ПачкаДокументовАДВ_2Сотрудники.ВидДокумента.КодПФР КАК ВидДокументаКодПФР,
	|	ПачкаДокументовАДВ_2Сотрудники.Ссылка.Дата КАК Дата,
	|	ПачкаДокументовАДВ_2Сотрудники.ВидДокумента.Наименование КАК ДокументВидНаименование
	|ИЗ
	|	Документ.ПачкаДокументовАДВ_2.Сотрудники КАК ПачкаДокументовАДВ_2Сотрудники
	|ГДЕ
	|	ПачкаДокументовАДВ_2Сотрудники.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область ДляОбеспеченияФормированияВыходногоФайла

// Формирует файл, который можно будет записать на дискетку.
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаСотрудники)
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	СписокОбработанныхЗаявлений = Новый Соответствие;
	
	ТекстФайла = "";
	НомерДокументаВПачке = 0;
	
	ДатаЗаполнения			= ВыборкаПоШапкеДокумента.Дата;
	КоличествоДокументов 	= ВыборкаСотрудники.Количество();
	
	// Формируем файл версии 07.00.
	
	// Список стран
	СписокСтран = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтраныМира.Наименование,
	|	СтраныМира.Код
	|ИЗ
	|	Справочник.СтраныМира КАК СтраныМира";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСтран.Вставить(СокрЛП(Выборка.Наименование), Строка(Выборка.Код));
	КонецЦикла;
	
	НомерДокументаВПачке = 1;
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	
	ТипДокумента = "ЗАЯВЛЕНИЕ_ОБ_ОБМЕНЕ";
	
	// Добавляем реквизит ПачкаВходящихДокументов.
	УзелПачкаВходящихДокументов = ПерсонифицированныйУчет.ЗаполнитьНаборЗаписейВходящаяОпись(УзелПФР, ДеревоФормата, ТипДокумента, ВыборкаПоШапкеДокумента, КоличествоДокументов, НомерДокументаВПачке);
	
	Сокращение = "";
	ФорматАДВ2 = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, ТипДокумента);
	ФорматИностранныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 3);
	ФорматНеструктурированныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 2);
	
	Пока ВыборкаСотрудники.Следующий() Цикл
		
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		НаборЗаписейАДВ2 = ОбщегоНазначения.СкопироватьРекурсивно(ФорматАДВ2);
		
		НаборЗаписейАДВ2.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейАДВ2.СтраховойНомер.Значение = ВыборкаСотрудники.СтраховойНомерПФРВСвидетельстве;
		
		// ФИОИзСтрахового
		НаборЗаписейФИОИзСтрахового = НаборЗаписейАДВ2.ФИОИзСтрахового.Значение;
		НаборЗаписейФИОИзСтрахового.Фамилия = ВРег(СокрЛП(ВыборкаСотрудники.ФамилияВСвидетельстве));
		НаборЗаписейФИОИзСтрахового.Имя = ВРег(СокрЛП(ВыборкаСотрудники.ИмяВСвидетельстве));
		НаборЗаписейФИОИзСтрахового.Отчество = ВРег(СокрЛП(ВыборкаСотрудники.ОтчествоВСвидетельстве));
		
		// ИзменившиесяДанные
		НаборЗаписейИзменившиесяДанные = НаборЗаписейАДВ2.ИзменившиесяДанные.Значение;
		// ФИО
		НаборЗаписейИзмФИО = НаборЗаписейИзменившиесяДанные.ФИО.Значение;
		НаборЗаписейИзмФИО.Фамилия = СокрЛП(ВРег(ВыборкаСотрудники.Фамилия));
		НаборЗаписейИзмФИО.Имя = СокрЛП(ВРег(ВыборкаСотрудники.Имя));
		
		// Отчество может быть отменено.
		Если ВыборкаСотрудники.ПризнакОтменыОтчества  Тогда
			НаборЗаписейАДВ2.ПризнакОтменыОтчества.Значение = "ОТМН";
		Иначе
			НаборЗаписейИзмФИО.Отчество = СокрЛП(ВРег(ВыборкаСотрудники.Отчество));
		КонецЕсли;
		
		// Пол
		Если ЗначениеЗаполнено(ВыборкаСотрудники.Пол) Тогда
			НаборЗаписейИзменившиесяДанные.Пол.Значение = ?(ВыборкаСотрудники.Пол = Перечисления.ПолФизическогоЛица.Мужской, "МУЖСКОЙ", "ЖЕНСКИЙ");
		КонецЕсли;
		// Дата рождения
		Если ЗначениеЗаполнено(ВыборкаСотрудники.ДатаРождения) Тогда
			НаборЗаписейИзменившиесяДанные.ДатаРождения.Значение = ВыборкаСотрудники.ДатаРождения;
		КонецЕсли;
		
		// Место рождения
		НаборЗаписейМестоРождения = НаборЗаписейИзменившиесяДанные.МестоРождения.Значение;
		
		МестоРождения = ПерсонифицированныйУчетКлиентСервер.РазложитьМестоРождения(ВыборкаСотрудники.МестоРождения); 
		
		Если ЗначениеЗаполнено(ВыборкаСотрудники.МестоРождения) Тогда
			НаборЗаписейМестоРождения.ТипМестаРождения = ?(МестоРождения.Особое = 1, "ОСОБОЕ", "СТАНДАРТНОЕ");
			
			НаборЗаписейМестоРождения.ГородРождения = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРождения.НаселенныйПункт)), Сокращение);
			НаборЗаписейМестоРождения.РайонРождения = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРождения.Район)), Сокращение);
			НаборЗаписейМестоРождения.РегионРождения = МестоРождения.Область;
			НаборЗаписейМестоРождения.СтранаРождения = МестоРождения.Страна;
		Иначе
			НаборЗаписейИзменившиесяДанные.Удалить("МестоРождения");
		КонецЕсли;
		
		// Гражданство
		НаборЗаписейИзменившиесяДанные.Гражданство.Значение = СокрЛП(ВыборкаСотрудники.Гражданство);
		
		// Адрес регистрации
		Если ПустаяСтрока(ВыборкаСотрудники.АдресРегистрации) Тогда
			НаборЗаписейИзменившиесяДанные.Удалить("АдресРегистрации");
		Иначе
			ТекстОшибки  ="";
			НаборЗаписейАдресРегистрации = НаборЗаписейИзменившиесяДанные.АдресРегистрации.Значение;
			ПерсонифицированныйУчет.ЗаполнитьАдрес(НаборЗаписейАдресРегистрации, ВыборкаСотрудники.АдресРегистрации, 
					СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, Ложь);
			НаборЗаписейИзменившиесяДанные.АдресРегистрации.Значение = НаборЗаписейАдресРегистрации;
		КонецЕсли;
		
		// Адрес фактический
		Если ПустаяСтрока(ВыборкаСотрудники.АдресФактический) Тогда
			НаборЗаписейИзменившиесяДанные.Удалить("АдресФактический");
		Иначе
			ТекстОшибки = "";
			НаборЗаписейАдресФактический = НаборЗаписейИзменившиесяДанные.АдресФактический.Значение;
			ПерсонифицированныйУчет.ЗаполнитьАдрес(НаборЗаписейАдресФактический, ВыборкаСотрудники.АдресФактический, 
				СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, Ложь);
			НаборЗаписейИзменившиесяДанные.АдресФактический.Значение = НаборЗаписейАдресФактический;
		КонецЕсли;
		
		// Телефон
		НаборЗаписейИзменившиесяДанные.Телефон.Значение = ВыборкаСотрудники.Телефоны;
		
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.Пол, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.ДатаРождения, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.Телефон, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.Гражданство, "Значение");
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейИзменившиесяДанные.ФИО, "Фамилия");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейИзменившиесяДанные.ФИО, "Имя");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейИзменившиесяДанные.ФИО, "Отчество");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСтруктуры(НаборЗаписейИзменившиесяДанные.ФИО);
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейАДВ2.ФИОИзСтрахового, "Отчество");
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлГруппыЭлементов(НаборЗаписейАДВ2.ИзменившиесяДанные);
		
		// ПризнакОтменыОтчества, Отчество может быть отменено.
		Если ВыборкаСотрудники.ПризнакОтменыОтчества  Тогда
			НаборЗаписейАДВ2.ПризнакОтменыОтчества.Значение = "ОТМЕНЕНО";
		Иначе
			НаборЗаписейАДВ2.Удалить("ПризнакОтменыОтчества");
		КонецЕсли;
		
		// Место рождения может быть отменено.
		Если ВыборкаСотрудники.ПризнакОтменыМестаРождения  Тогда
			НаборЗаписейАДВ2.ПризнакОтменыМестаРождения.Значение = "ОТМЕНЕНО";
		Иначе
			НаборЗаписейАДВ2.Удалить("ПризнакОтменыМестаРождения");
		КонецЕсли;
		
		// УдостоверяющийДокумент
		НаборЗаписейУдостоверяющийДокумент = НаборЗаписейАДВ2.УдостоверяющийДокумент.Значение;
		НаборЗаписейДокумент = НаборЗаписейУдостоверяющийДокумент.Документ.Значение;
		
		ДанныеДокумента = ПерсонифицированныйУчет.ПолучитьДанныеДокументаВФорматеПФР(ВыборкаСотрудники.ВидДокумента, ВыборкаСотрудники.СерияДокумента, 
				ВыборкаСотрудники.НомерДокумента, ВыборкаСотрудники.ДатаВыдачи,
				ВыборкаСотрудники.КемВыдан, ВыборкаСотрудники.ВидДокументаКодПФР, ВыборкаСотрудники.ДокументВидНаименование);
		
		НаборЗаписейУдостоверяющийДокумент.ТипУдостоверяющего.Значение = ДанныеДокумента.ТипУдостоверяющегоДокумента;
		НаборЗаписейДокумент.НаименованиеУдостоверяющего = ДанныеДокумента.НаименованиеУдостоверяющегоДокумента;
		
		НаборЗаписейДокумент.СерияРимскиеЦифры = ДанныеДокумента.СерияРимскиеЦифры;
		НаборЗаписейДокумент.СерияРусскиеБуквы = ДанныеДокумента.СерияРусскиеБуквы;
		НаборЗаписейДокумент.НомерУдостоверяющего = ДанныеДокумента.НомерУдостоверяющегоДокумента;
		НаборЗаписейДокумент.ДатаВыдачи = ДанныеДокумента.ДатаВыдачи;
		НаборЗаписейДокумент.КемВыдан = ДанныеДокумента.КемВыдан;
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "СерияРимскиеЦифры");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "СерияРусскиеБуквы");
		
		// ДатаЗаполнения
		НаборЗаписейАДВ2.ДатаЗаполнения.Значение = ДатаЗаполнения;
		ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокумента,""), НаборЗаписейАДВ2);
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML.
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	
	Возврат ТекстФайла;
	
КонецФункции 

// Выбирает данные, необходимые для проверки.
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса к данным работников документа.
//
Функция СформироватьЗапросПоСотрудникам(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовАДВ_2Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовАДВ_2Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовАДВ_2Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаДокументовАДВ_2Сотрудники.ДатаПолученияСвидетельства КАК ДатаПолученияСвидетельства,
	|	ПачкаДокументовАДВ_2Сотрудники.СтраховойНомерПФРВСвидетельстве КАК СтраховойНомерПФРВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.ФамилияВСвидетельстве КАК ФамилияВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.ИмяВСвидетельстве КАК ИмяВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.ОтчествоВСвидетельстве КАК ОтчествоВСвидетельстве,
	|	ПачкаДокументовАДВ_2Сотрудники.Фамилия КАК Фамилия,
	|	ПачкаДокументовАДВ_2Сотрудники.Имя КАК Имя,
	|	ПачкаДокументовАДВ_2Сотрудники.Отчество КАК Отчество,
	|	ПачкаДокументовАДВ_2Сотрудники.Пол КАК Пол,
	|	ПачкаДокументовАДВ_2Сотрудники.ДатаРождения КАК ДатаРождения,
	|	ПачкаДокументовАДВ_2Сотрудники.МестоРождения КАК МестоРождения,
	|	ПачкаДокументовАДВ_2Сотрудники.МестоРожденияПредставление КАК МестоРожденияПредставление,
	|	ПачкаДокументовАДВ_2Сотрудники.Гражданство КАК Гражданство,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресРегистрации КАК АдресРегистрации,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресФактический КАК АдресФактический,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресРегистрацииПредставление КАК АдресРегистрацииПредставление,
	|	ПачкаДокументовАДВ_2Сотрудники.АдресФактическийПредставление КАК АдресФактическийПредставление,
	|	ПачкаДокументовАДВ_2Сотрудники.Телефоны КАК Телефоны,
	|	ПачкаДокументовАДВ_2Сотрудники.ПризнакОтменыОтчества КАК ПризнакОтменыОтчества,
	|	ПачкаДокументовАДВ_2Сотрудники.ПризнакОтменыМестаРождения КАК ПризнакОтменыМестаРождения,
	|	ПачкаДокументовАДВ_2Сотрудники.ВидДокумента КАК ВидДокумента,
	|	ПачкаДокументовАДВ_2Сотрудники.СерияДокумента КАК СерияДокумента,
	|	ПачкаДокументовАДВ_2Сотрудники.НомерДокумента КАК НомерДокумента,
	|	ПачкаДокументовАДВ_2Сотрудники.ДатаВыдачи КАК ДатаВыдачи,
	|	ПачкаДокументовАДВ_2Сотрудники.КемВыдан КАК КемВыдан,
	|	ПачкаДокументовАДВ_2Сотрудники.ВидДокумента.КодПФР КАК ВидДокументаКодПФР,
	|	ПачкаДокументовАДВ_2Сотрудники.ВидДокумента.Наименование КАК ДокументВидНаименование
	|ИЗ
	|	Документ.ПачкаДокументовАДВ_2.Сотрудники КАК ПачкаДокументовАДВ_2Сотрудники
	|ГДЕ
	|	ПачкаДокументовАДВ_2Сотрудники.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Формирует запрос по шапке документа.
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("Ссылка" , Ссылка);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовАДВ_2";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПачкаДокументовАДВ_2.Дата,
	|	ПачкаДокументовАДВ_2.Номер,
	|	ПачкаДокументовАДВ_2.Организация,
	|	СведенияОбОрганизациях.НаименованиеПолное КАК НаименованиеПолное,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеСокращенное,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	СведенияОбОрганизациях.ОГРН,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	СведенияОбОрганизациях.Наименование,
	|	ПачкаДокументовАДВ_2.Ответственный,
	|	ПачкаДокументовАДВ_2.Ссылка,
	|	ПачкаДокументовАДВ_2.НомерПачки,
	|	ПачкаДокументовАДВ_2.ИмяФайлаДляПФР,
	|	ПачкаДокументовАДВ_2.НомерПачки КАК НомерПачки1
	|ИЗ
	|	Документ.ПачкаДокументовАДВ_2 КАК ПачкаДокументовАДВ_2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ПачкаДокументовАДВ_2.Организация = СведенияОбОрганизациях.Организация
	|			И ПачкаДокументовАДВ_2.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	ПачкаДокументовАДВ_2.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Объект.Ссылка).Выбрать();
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаСотрудники = СформироватьЗапросПоСотрудникам(Объект.Ссылка).Выбрать();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаСотрудники);
	
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыПечатиДокумента

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// АДВ-2
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_2";
	КомандаПечати.Представление = НСтр("ru = 'АДВ-2'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// АДВ-6-1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_6_1";
	КомандаПечати.Представление = НСтр("ru = 'АДВ-6-1'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Все формы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_2,ФормаАДВ_6_1";
	КомандаПечати.Представление = НСтр("ru = 'Все формы'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_2", "Форма АДВ-2", СформироватьПечатнуюФормуАДВ2(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_6_1", "Форма АДВ-6-1", СформироватьПечатнуюФормуАДВ6(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуАДВ2(МассивОбъектов, ОбъектыПечати)
	
	Сокращение = "";
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АнкетаЗастрахованногоЛица_ФормаАДВ_2";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовАДВ_2.ПФ_MXL_ФормаАДВ_2");
	
	ВыборкаДокументов = СформироватьЗапросПоСотрудникамДляПечати(МассивОбъектов).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОбластьЗаявление = Макет.ПолучитьОбласть("Заявление");
	
	Пока ВыборкаДокументов.Следующий() Цикл
		ВыборкаСотрудники = ВыборкаДокументов.Выбрать();
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Пока ВыборкаСотрудники.Следующий() Цикл
			
			ОчиститьОбласть(ОбластьЗаявление);
			
			ОбластьЗаявление.Параметры.СтраховойНомерПФР = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.СтраховойНомерПФРВСвидетельстве);
			
			ОбластьЗаявление.Параметры.ФамилияВСвидетельстве  = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.ФамилияВСвидетельстве);
			ОбластьЗаявление.Параметры.ИмяВСвидетельстве      = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.ИмяВСвидетельстве);
			ОбластьЗаявление.Параметры.ОтчествоВСвидетельстве = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.ОтчествоВСвидетельстве);
			
			ОбластьЗаявление.Параметры.Фамилия  = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.Фамилия);
			ОбластьЗаявление.Параметры.Имя      = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.Имя);
			ОбластьЗаявление.Параметры.Отчество = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.Отчество);
			
			Если ЗначениеЗаполнено(ВыборкаСотрудники.ДатаРождения) Тогда 
				ОбластьЗаявление.Параметры.ДатаРождения = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаСотрудники.ДатаРождения);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаСотрудники.Пол) Тогда
				Если ВыборкаСотрудники.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
					ОбластьЗаявление.Параметры.Пол = "М     (м/ж)"; 
				Иначе
					ОбластьЗаявление.Параметры.Пол = "Ж     (м/ж)";
				КонецЕсли;
			Иначе
				ОбластьЗаявление.Параметры.Пол = "      (м/ж)";
			КонецЕсли;
			
			МестоРождения = ПерсонифицированныйУчетКлиентСервер.РазложитьМестоРождения(ВыборкаСотрудники.МестоРождения); 
			
			ОбластьЗаявление.Параметры.МестоРожденияТип = ?(МестоРождения.Особое = 1, "особое", "");
			
			МестоРождения.НаселенныйПункт = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРождения.НаселенныйПункт)), Сокращение);
			ОбластьЗаявление.Параметры.МестоРожденияГород =  ПерсонифицированныйУчет.СтрокаВОтчет(МестоРождения.НаселенныйПункт);
			МестоРождения.Район = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРождения.Район)), Сокращение);
			ОбластьЗаявление.Параметры.МестоРожденияРайон = ПерсонифицированныйУчет.СтрокаВОтчет(МестоРождения.Район);
			ОбластьЗаявление.Параметры.МестоРожденияОбласть = ПерсонифицированныйУчет.СтрокаВОтчет(МестоРождения.Область);
			ОбластьЗаявление.Параметры.МестоРожденияСтрана = ПерсонифицированныйУчет.СтрокаВОтчет(МестоРождения.Страна);
			
			ОбластьЗаявление.Параметры.Гражданство = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.Гражданство);
			
			СтруктураАдресРегистрации = ЗарплатаКадры.СтруктураАдресаИзXML(
					ВыборкаСотрудники.АдресРегистрации, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
			СтруктураАдресФактический = ЗарплатаКадры.СтруктураАдресаИзXML(
					ВыборкаСотрудники.АдресФактический, Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица);
			
			ОбластьЗаявление.Параметры.АдресРегистрации = ПерсонифицированныйУчет.ПолучитьПредставлениеАдресаДляПФР(СтруктураАдресРегистрации);
			ОбластьЗаявление.Параметры.АдресФактический = ПерсонифицированныйУчет.ПолучитьПредставлениеАдресаДляПФР(СтруктураАдресФактический);
			
			ОбластьЗаявление.Параметры.Телефоны = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.Телефоны);
			
			ДанныеДокумента = ПерсонифицированныйУчет.ПолучитьДанныеДокументаВФорматеПФР(ВыборкаСотрудники.ВидДокумента, ВыборкаСотрудники.СерияДокумента, ВыборкаСотрудники.НомерДокумента,
					ВыборкаСотрудники.ДатаВыдачи, ВыборкаСотрудники.КемВыдан, ВыборкаСотрудники.ВидДокументаКодПФР, ВыборкаСотрудники.ДокументВидНаименование);
			
			СерияНомер = ДанныеДокумента.СерияРимскиеЦифры + " " + ДанныеДокумента.СерияРусскиеБуквы + ",  " + ДанныеДокумента.НомерУдостоверяющегоДокумента;
			ОбластьЗаявление.Параметры.СерияНомер = СерияНомер;
			ОбластьЗаявление.Параметры.НаименованиеДокумента = ДанныеДокумента.НаименованиеУдостоверяющегоДокумента; 
			ОбластьЗаявление.Параметры.ДатаВыдачи = ПерсонифицированныйУчет.ДатаВОтчет(ДанныеДокумента.ДатаВыдачи);
			ОбластьЗаявление.Параметры.КемВыдан   = ДанныеДокумента.КемВыдан;
			
			ОбластьЗаявление.Параметры.ДатаЗаполнения = Формат(ВыборкаСотрудники.Дата, "ДФ=дд.ММ.гггг");
			
			ТабличныйДокумент.Вывести(ОбластьЗаявление);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАДВ6(МассивОбъектов, ОбъектыПечати)
	Возврат ПерсонифицированныйУчет.ВывестиОписьАДВ6(МассивОбъектов, ОбъектыПечати, "ОБМН", "ПФ_MXL_ФормаАДВ_6_1_2017");
КонецФункции

Процедура ОчиститьОбласть(ОбластьМакета)
	
	Для Счетчик = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
		ОбластьМакета.Параметры[Счетчик] = ""
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли