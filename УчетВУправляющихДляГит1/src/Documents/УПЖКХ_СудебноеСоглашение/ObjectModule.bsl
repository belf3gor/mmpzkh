
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура разбивает сумму платежей по соглашению на кол-во месяцев соглашения 
Процедура ЗаполнитьГрафикПлатежей() Экспорт
	ГрафикПлатежей.Очистить();
	СуммаВМесяц = 0;
	Если МесяцевПоСоглашению > 0 Тогда
		СуммаВМесяц = СуммаПоСоглашению/МесяцевПоСоглашению;
		Для Счетчик=0 По МесяцевПоСоглашению-1 Цикл
			СтрокаГрафика		 = ГрафикПлатежей.Добавить();
			СтрокаГрафика.Период = НачалоМесяца(ДобавитьМесяц(ДатаНачалаПлатежей,Счетчик));
			СтрокаГрафика.Сумма  = СуммаВМесяц;
		КонецЦикла;	
		СтрокаГрафика.Сумма  = СтрокаГрафика.Сумма+(СуммаПоСоглашению-ГрафикПлатежей.Итог("Сумма"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииДляОбеспеченияПроведенияДокумента

// Проверяет правильность заполнения документа.
//
// Параметры:
//  СтруктураШапкиДокумента - структура, содержащая реквизиты шапки
//                 документа и результаты запроса по шапке
//  Отказ        - Булево - флаг отказа в проведении
//  Заголовок    - Строка - заголовок сообщения об ошибке.
//
Процедура ПроверитьЗаполнениеДокумента(ТаблицаГрафикПлатежей, Отказ)

	Если НЕ СуммаПоСоглашению = ТаблицаГрафикПлатежей.Итог("Сумма") Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(
			"Сумма по соглашению не совпадает с итоговой суммой графика платежей! Проведение невозможно.", Отказ);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеДокумента()

// По результату запроса по шапке документа формируем движения по регистрам.
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаГрафикПлатежей, Отказ)

	ДвижениеПоРегиструГрафикиПлатежей(СтруктураШапкиДокумента, ТаблицаГрафикПлатежей, Отказ);
	ДвижениеПоРегиструИсторияРаботыСДолжниками(СтруктураШапкиДокумента, Отказ);

КонецПроцедуры

// Формирует движения по регистру "Графики платежей по л/с".
Процедура ДвижениеПоРегиструГрафикиПлатежей(СтруктураШапкиДокумента, ТаблицаГрафикПлатежей, Отказ)

	НаборДвижений = Движения.КВП_ГрафикиПлатежейПоЛС;
	
	Для Каждого ТекСтрокаГрафикПлатежей Из ТаблицаГрафикПлатежей Цикл
		Движение = НаборДвижений.Добавить();
		Движение.ЛицевойСчет = СтруктураШапкиДокумента.ЛицевойСчет;
		Движение.ДатаПлатежа = ТекСтрокаГрафикПлатежей.Период;
		Движение.Сумма       = ТекСтрокаГрафикПлатежей.Сумма;
	КонецЦикла;

КонецПроцедуры // ДвижениеПоРегиструГрафикиПлатежей()

// Формирует движения по регистру "История работы с должниками".
Процедура ДвижениеПоРегиструИсторияРаботыСДолжниками(СтруктураШапкиДокумента, Отказ)

	НаборДвижений = Движения.УПЖКХ_ИсторияРаботыСДолжниками;
	
	Движение = НаборДвижений.Добавить();
	Движение.Период          = СтруктураШапкиДокумента.Дата;
	Движение.Организация     = СтруктураШапкиДокумента.Организация;
	Движение.Должник         = СтруктураШапкиДокумента.ЛицевойСчет;

КонецПроцедуры // ДвижениеПоРегиструИсторияРаботыСДолжниками()

#КонецОбласти

#Область ОбработчикиСобытийДокумента

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Процедура проведения документа.
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = УПЖКХ_ТиповыеМетодыВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении,
	// по данным шапки документа.
	ПараметрыПроведения = Документы.УПЖКХ_СудебноеСоглашение.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента   = ПараметрыПроведения.Реквизиты;
	ТаблицаГрафикПлатежей = ПараметрыПроведения.ТаблицаГрафикПлатежей;
	// Проверим правильность заполнения документа.
	ПроверитьЗаполнениеДокумента(ТаблицаГрафикПлатежей, Отказ);
	
	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаГрафикПлатежей, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли