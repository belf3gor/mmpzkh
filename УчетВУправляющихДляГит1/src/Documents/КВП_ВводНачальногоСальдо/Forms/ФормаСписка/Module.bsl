
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	УПЖКХ_ТиповыеМетодыСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОтборОрганизация = УПЖКХ_ТиповыеМетодыВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаКоманднаяПанель);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ОтборОрганизация".
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация", 
																	ОтборОрганизация, ЗначениеЗаполнено(ОтборОрганизация));
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриАктивизацииСтроки" поля "Список".
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ОтключитьОбработчикОжидания("ВычислитьСуммуДокументов");
	ПодключитьОбработчикОжидания("ВычислитьСуммуДокументов", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "ВвестиОстаткиБУ".
Процедура ВвестиОстаткиБУ(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Если ПроверкаНаПроведениеМассив(ВыделенныеСтроки) Тогда
		
		ОткрытьФормуВводаНачальныхОстатков(ВыделенныеСтроки);
		
	Иначе
		
		ДополнительныеПараметры = Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки);
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработатьРезультатВопросаКомандаВвестиОстаткиБУ", ЭтотОбъект, ДополнительныеПараметры),
					   "Некоторые выбранные документы не проведены. Провести непроведенные документы?",
					   РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	УПЖКХ_ТиповыеМетодыСервер.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаКлиенте
// Получает значение суммы документов в выделенных строках списка документа.
Процедура ВычислитьСуммуДокументов()
	
	СуммаДокументов = УПЖКХ_РаботаСДиалогамиКлиент.ВычислитьСуммуДокументов(Элементы.Список, "СуммаДокумента");
	
КонецПроцедуры

&НаКлиенте
// Функция пытается провести документы из переданного массива.
// Если какой-либо документ провести не удалось, то возвращает значение "Ложь".
Функция ПровестиМассивДокументов(МассивДокументов)
	
	Для Каждого ТекущийДокумент Из МассивДокументов Цикл
		
		Если НЕ ПроверкаНаПроведениеДокументСсылка(ТекущийДокумент) Тогда
			
			Если НЕ ПровестиДокумент(ТекущийДокумент) Тогда
				
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
// Функция проверяет, все ли документы в текущем массиве проведены.
Функция ПроверкаНаПроведениеМассив(МассивДокументов)
	
	Для Каждого ТекущийДокумент Из МассивДокументов Цикл
		
		Если Не ПроверкаНаПроведениеДокументСсылка(ТекущийДокумент) Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
// Проверка документа на проведение.
Функция ПроверкаНаПроведениеДокументСсылка(ДокументСсылка)
	
	Возврат ДокументСсылка.Проведен;
	
КонецФункции

&НаСервере
// Функция пытается провести переданный документ.
Функция ПровестиДокумент(ВходящийДокумент)
	
	Документ = ВходящийДокумент.ПолучитьОбъект();
	Возврат КВП_ЗаписатьОбъект(Документ, РежимЗаписиДокумента.Проведение);
	
КонецФункции

#КонецОбласти

#Область ОтражениеНачОстатковВБухУчете

&НаКлиенте
// Процедура открывает форму обработки "УПЖКХ_ВводНачальныхОстатковЖКХ".
Процедура ОткрытьФормуВводаНачальныхОстатков(МассивДокументов)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВходящиеДокументы", МассивДокументов);
	
	ФормаВвестиОстатки = ПолучитьФорму("Обработка.УПЖКХ_ВводНачальныхОстатковЖКХ.Форма.Форма", ПараметрыФормы);
	ФормаВвестиОстатки.Открыть();
	
КонецПроцедуры

&НаКлиенте
// Процедура-обработчик результата вопроса, вызванного в процедуре-обработчике команды "КомандаВвестиОстаткиБУ".
Процедура ОбработатьРезультатВопросаКомандаВвестиОстаткиБУ(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
		
		Если ПровестиМассивДокументов(ВыделенныеСтроки) Тогда
			
			ОткрытьФормуВводаНачальныхОстатков(ВыделенныеСтроки);
			
		Иначе
			
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Процесс открытия формы ""Ввод начальных остатков"" прекращен: не все выбранные документы удалось провести.");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
