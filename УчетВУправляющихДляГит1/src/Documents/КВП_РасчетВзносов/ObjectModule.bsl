#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииДляОбеспеченияПроведенияДокумента

// Функция проверяет наличие проведенных документов в текущем месяце.
//
Функция ПроверитьНаличиеДокументаВТекущемМесяце()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_РасчетВзносов.Ссылка
	|ИЗ
	|	Документ.КВП_РасчетВзносов КАК КВП_РасчетВзносов
	|ГДЕ
	|	КВП_РасчетВзносов.Проведен
	|	И КВП_РасчетВзносов.Дата МЕЖДУ &ДатаНачалаРасчета И &ДатаКонцаРасчета
	|	И КВП_РасчетВзносов.Ссылка <> &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("ДатаНачалаРасчета", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаКонцаРасчета",  КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ТекущийДокумент",   ЭтотОбъект.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Функция заполняет таблицу членов ТСЖ.
//
// Возвращаемое значение:
//  Таблица значений со списком членов ТСЖ.
//
Функция ПолучитьТаблицуКонтрагентов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КВП_ЧленыТСЖСрезПоследних.ЧленТСЖ
	|ПОМЕСТИТЬ ЧленыТСЖ
	|ИЗ
	|	РегистрСведений.КВП_ЧленыТСЖ.СрезПоследних(&Период, Организация = &Организация) КАК КВП_ЧленыТСЖСрезПоследних
	|ГДЕ
	|	КВП_ЧленыТСЖСрезПоследних.Участие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_СобственникиПомещенийСрезПоследних.Собственник,
	|	СУММА(УПЖКХ_СобственникиПомещенийСрезПоследних.ДоляСобственникаЧислитель) КАК ДоляСобственникаЧислитель,
	|	СУММА(УПЖКХ_СобственникиПомещенийСрезПоследних.ДоляСобственникаЗнаменатель) КАК ДоляСобственникаЗнаменатель,
	|	УПЖКХ_СобственникиПомещенийСрезПоследних.Помещение
	|ПОМЕСТИТЬ СобственникиСДолями
	|ИЗ
	|	РегистрСведений.УПЖКХ_СобственникиПомещений.СрезПоследних(
	|			&Период,
	|			Собственник В
	|				(ВЫБРАТЬ
	|					ЧленыТСЖ.ЧленТСЖ
	|				ИЗ
	|					ЧленыТСЖ КАК ЧленыТСЖ)) КАК УПЖКХ_СобственникиПомещенийСрезПоследних
	|ГДЕ
	|	УПЖКХ_СобственникиПомещенийСрезПоследних.Действует
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_СобственникиПомещенийСрезПоследних.Собственник,
	|	УПЖКХ_СобственникиПомещенийСрезПоследних.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних.Контрагент КАК Контрагент,
	|	УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних.ЛицевойСчет.Адрес КАК Помещение
	|ПОМЕСТИТЬ Контрагенты
	|ИЗ
	|	РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(&Период, Организация = &Организация) КАК УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних.Контрагент,
	|	УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних.ЛицевойСчет.Адрес
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Контрагент,
	|	СУММА(ВЫБОР
	|			КОГДА СобственникиСДолями.ДоляСобственникаЗнаменатель = 0
	|				ТОГДА 1
	|			ИНАЧЕ СобственникиСДолями.ДоляСобственникаЧислитель / СобственникиСДолями.ДоляСобственникаЗнаменатель
	|		КОНЕЦ) КАК Доля
	|ИЗ
	|	СобственникиСДолями КАК СобственникиСДолями
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Контрагенты КАК Контрагенты
	|		ПО СобственникиСДолями.Помещение = Контрагенты.Помещение
	|
	|СГРУППИРОВАТЬ ПО
	|	Контрагенты.Контрагент";
	
	Запрос.УстановитьПараметр("Период",      Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	ТаблицаКонтрагентов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаКонтрагентов;
	
КонецФункции  //ПолучитьТаблицуКонтрагентов()

// Функция заполняет таблицу статей затрат по смете ТСЖ.
//
// Возвращаемое значение:
//  Таблица значений со списком статей затрат по смете ТСЖ.
//
Функция ПолучитьТаблицуЗатрат(ИсточникВзносыТСЖ)
	
	// Получим данные по затратам.
	ЗапросЗатраты = Новый Запрос;
	
	ЗапросЗатраты.Текст = 
	"ВЫБРАТЬ
	|	КВП_ЗатратыПоСметеТСЖ.Регистратор,
	|	ЕСТЬNULL(СУММА(КВП_ЗатратыПоСметеТСЖ.Сумма), 0) КАК СуммаЗатрат,
	|	КВП_ЗатратыПоСметеТСЖ.СтатьяЗатрат
	|ИЗ
	|	РегистрНакопления.КВП_ЗатратыПоСметеТСЖ КАК КВП_ЗатратыПоСметеТСЖ
	|ГДЕ
	|	КВП_ЗатратыПоСметеТСЖ.НачалоПериода МЕЖДУ &ДатаНачалаРасчета И &ДатаКонцаРасчета
	|	И КВП_ЗатратыПоСметеТСЖ.Источник = &Источник
	|
	|СГРУППИРОВАТЬ ПО
	|	КВП_ЗатратыПоСметеТСЖ.Регистратор,
	|	КВП_ЗатратыПоСметеТСЖ.СтатьяЗатрат";
	
	ЗапросЗатраты.УстановитьПараметр("ДатаНачалаРасчета", НачалоМесяца(Дата));
	ЗапросЗатраты.УстановитьПараметр("ДатаКонцаРасчета",  КонецМесяца(Дата));
	ЗапросЗатраты.УстановитьПараметр("Источник", ИсточникВзносыТСЖ);
	
	ТаблицаЗатрат = ЗапросЗатраты.Выполнить().Выгрузить();
	
	Возврат ТаблицаЗатрат;
	
КонецФункции  //ПолучитьТаблицуЗатрат()

#КонецОбласти

#Область ОбработчикиСобытий

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Обраьотчик событя "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ПроверитьНаличиеДокументаВТекущемМесяце() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Расчет в текущем месяце уже производился!", Отказ);
	КонецЕсли;
	
	мНастройкиУчетнойПолитикиТСЖ = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьПараметрыУчетнойПолитикиЖКХ(Дата, 
																										  Организация, Отказ);
	
	ТаблицаКонтрагентов = ПолучитьТаблицуКонтрагентов();
	ТаблицаЗатрат = ПолучитьТаблицуЗатрат(мНастройкиУчетнойПолитикиТСЖ["ИсточникВзносыТСЖ"]);
	
	СуммаЗатратВсего = ТаблицаЗатрат.Итог("СуммаЗатрат");
	
	КоличествоДолейВсего = ТаблицаКонтрагентов.Итог("Доля");
	Если КоличествоДолейВсего = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не указаны доли членов ТСЖ.", Отказ);
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекКонтрагент Из ТаблицаКонтрагентов Цикл
		
		Контрагент = ТекКонтрагент.Контрагент;
		Если Контрагент = Null Тогда
			Продолжить;
		Иначе
			ОсновнойДоговорКонтрагента = Справочники.Контрагенты.ПустаяСсылка();
			УПЖКХ_ТиповыеМетодыСервер.УстановитьДоговорКонтрагента(ОсновнойДоговорКонтрагента, Контрагент, Организация);
		КонецЕсли;
		
		СпСтатейЗатрат = ТаблицаЗатрат.Скопировать();
		СпСтатейЗатрат.Свернуть("СтатьяЗатрат");
		
		Для Каждого ТекСтатьяЗатрат Из СпСтатейЗатрат Цикл
			
			СтрТаблицыЗатрат = ТаблицаЗатрат.Найти(ТекСтатьяЗатрат.СтатьяЗатрат, "СтатьяЗатрат");
			Если СтрТаблицыЗатрат = Неопределено Тогда
				СуммаЗатрат = 0;
			Иначе
				СтоимостьОднойДолиПоСтатье = СтрТаблицыЗатрат.СуммаЗатрат / КоличествоДолейВсего;
				СуммаВзносаПоСтатье = СтоимостьОднойДолиПоСтатье * ТекКонтрагент.Доля;
			КонецЕсли;
			
			// БУ
			Движение=Движения.Хозрасчетный.Добавить();
			Движение.Организация = Организация;
			Движение.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, 
												 Движение.СубконтоДт, 
												 1, 
												 Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, 
												 Движение.СубконтоДт, 
												 2, 
												 ОсновнойДоговорКонтрагента);
			Движение.СчетКт = ПланыСчетов.Хозрасчетный.ЦелевыеПоступленияСобственников;
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, 
												 Движение.СубконтоКт, 
												 1, 
												 мНастройкиУчетнойПолитикиТСЖ["ИсточникВзносыТСЖ"]);
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, 
												 Движение.СубконтоКт, 
												 2, 
												 ТекСтатьяЗатрат.СтатьяЗатрат);
			
			Движение.Сумма = СуммаВзносаПоСтатье;
			Движение.Период = Дата;
			Движение.Содержание="Взносы";
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры  //ОбработкаПроведения()

#КонецОбласти

#КонецЕсли
