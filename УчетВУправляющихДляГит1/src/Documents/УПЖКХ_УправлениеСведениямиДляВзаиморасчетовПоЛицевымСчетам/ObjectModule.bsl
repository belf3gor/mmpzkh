
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииОбеспечивающиеПроведениеДокумента

// По результату запроса по шапке документа формируем движения по регистрам.
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаСведенийДляВзаиморасчетов, Отказ, Заголовок, РежимПроведения)
	
	ДвиженияПоРегиструСведенияДляВзаиморасчетовПоЛС(СтруктураШапкиДокумента, ТаблицаСведенийДляВзаиморасчетов,
																				Отказ, Заголовок, РежимПроведения);
	
КонецПроцедуры // ДвиженияПоРегистрам()

// Формирует движения по регистру "СведенияДляВзаиморасчетовПоЛС".
//
Процедура ДвиженияПоРегиструСведенияДляВзаиморасчетовПоЛС(СтруктураШапкиДокумента, ТаблицаСведенийДляВзаиморасчетов,
																						Отказ, Заголовок, РежимПроведения)
	
	Для Каждого ТекСтрокаСведенияДляВзаиморасчетов Из ТаблицаСведенийДляВзаиморасчетов Цикл
		
		Движение             = Движения.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.Добавить();
		Движение.Период      = СтруктураШапкиДокумента.Дата;
		Движение.Организация = СтруктураШапкиДокумента.Организация;
		Движение.ЛицевойСчет = ТекСтрокаСведенияДляВзаиморасчетов.ЛицевойСчет;
		Движение.Договор     = ТекСтрокаСведенияДляВзаиморасчетов.ДоговорКонтрагента;
		Движение.Контрагент  = ТекСтрокаСведенияДляВзаиморасчетов.Контрагент;
		
	КонецЦикла;
	
КонецПроцедуры // ДвиженияПоРегиструСведенияДляВзаиморасчетовПоЛС()

#КонецОбласти

#Область ОбработчикиСобытийДокумента

// Процедура проведения документа.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = УПЖКХ_ТиповыеМетодыВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении,
	// по данным шапки документа.
	ПараметрыПроведения = 
		Документы.УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента          = ПараметрыПроведения.Реквизиты;
	ТаблицаСведенийДляВзаиморасчетов = ПараметрыПроведения.ТаблицаСведенийДляВзаиморасчетов;
	
	// Формирование движения регистров
	ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаСведенийДляВзаиморасчетов, Отказ, Заголовок, РежимПроведения);
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура заполнения документа по данным документа-основания.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КВП_ОткрытиеЛицевогоСчета") Тогда
		Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
		Объект      = ДанныеЗаполнения.ЛицевойСчет.Адрес;
		
		СтрокаСведений             = СведенияДляВзаиморасчетов.Добавить();
		СтрокаСведений.ЛицевойСчет = ДанныеЗаполнения.ЛицевойСчет;
		СтрокаСведений.Контрагент  = ДанныеЗаполнения.Контрагент;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.КВП_ЛицевыеСчета") Тогда
		Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
		Объект      = ДанныеЗаполнения.Ссылка.Адрес;
		
		СтрокаСведений             = СведенияДляВзаиморасчетов.Добавить();
		СтрокаСведений.ЛицевойСчет = ДанныеЗаполнения.Ссылка;
		СтрокаСведений.Контрагент  = 
				УПЖКХ_ОбщегоНазначенияСервер.ПолучитьСведенияДляВзаиморасчетовПоЛицевомуСчету(ДанныеЗаполнения.Ссылка, Организация,, "Контрагент");
	
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

#КонецОбласти

#КонецЕсли