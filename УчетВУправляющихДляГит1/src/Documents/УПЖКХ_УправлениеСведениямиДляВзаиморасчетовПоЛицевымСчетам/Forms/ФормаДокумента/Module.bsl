
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриЧтенииНаСервере" формы.
//
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	УПЖКХ_ТиповыеМетодыСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УПЖКХ_ЗаполнениеДокументовСервер.ЗаполнитьШапкуДокумента(Объект,
																	УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());
		УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	КонецЕсли;
	
	// Установить доступность формы с учетом ключа СЛК.
	СЗК_МодульЗащитыКлиентСервер.УстановитьДоступностьФормыДляРедактирования(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПослеЗаписиНаСервере" формы.
//
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ЛицевойСчет".
//
Процедура СведенияДляВзаиморасчетовЛицевойСчетПриИзменении(Элемент)
	
	// В большинстве случаев документ будет использоваться для изменения договора обслуживания л/с, поэтому
	// попытаемся автоматически заполнить контрагента ответственным собственником л/с.
	ТекущиеДанные = Элементы.СведенияДляВзаиморасчетов.ТекущиеДанные;
	
	Если Не ТекущиеДанные.ЛицевойСчет.Пустая() Тогда
		
		// Подставим контрагента:
		// 1. Ответственного собственника, если его тип "Контрагент".
		// 2. Или контрагента из текущих сведений для взаиморасчетов.
		ОтветственныйЛС = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьОтветственногоСобственникаЛицевогоСчета(ТекущиеДанные.ЛицевойСчет, Объект.Дата);
		Если Не ОтветственныйЛС = Неопределено И ТипЗнч(ОтветственныйЛС) = Тип("СправочникСсылка.Контрагенты") Тогда
			ТекущиеДанные.Контрагент = ОтветственныйЛС;
		Иначе
			ТекущиеДанные.Контрагент = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьСведенияДляВзаиморасчетовПоЛицевомуСчету(ТекущиеДанные.ЛицевойСчет, Объект.Организация,, "Контрагент");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "ДоговорКонтрагента".
//
Процедура СведенияДляВзаиморасчетовДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Если Не Объект.Организация.Пустая() Тогда
		Отбор.Вставить("Организация", Объект.Организация);
	КонецЕсли;
	
	Контрагент = Элементы.СведенияДляВзаиморасчетов.ТекущиеДанные.Контрагент;
	Если Не Контрагент.Пустая() Тогда
		Отбор.Вставить("Владелец", Контрагент);
	КонецЕсли;
	
	СписокВидовДоговоров = УПЖКХ_РаботаСЛицевымиСчетами.ПолучитьВидыДоговоров();
	Отбор.Вставить("ВидДоговора", СписокВидовДоговоров);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаВыбора", ПараметрыОткрытия, Элемент);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ДоговорКонтрагента".
//
Процедура СведенияДляВзаиморасчетовДоговорКонтрагентаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СведенияДляВзаиморасчетов.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено И ТекущиеДанные.Контрагент.Пустая() И Не ТекущиеДанные.ДоговорКонтрагента.Пустая() Тогда
		ТекущиеДанные.Контрагент = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ТекущиеДанные.ДоговорКонтрагента, "Владелец");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "ЗаполнитьТаблицуСведений".
//
Процедура ЗаполнитьТаблицуСведений(Команда)
	
	Если Объект.Объект = Неопределено ИЛИ Объект.Объект.Пустая() Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не выбран объект.");
		Возврат;
	КонецЕсли;
	
	Если Объект.СведенияДляВзаиморасчетов.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьТаблицуСведенийЗавершение", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "Таблица будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);
		
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуСведенийНаСервере();
	
КонецПроцедуры

&НаКлиенте
// Обрабатывает ответ на вопрос об очистке таблицы сведений для взаиморасчетов.
//
Процедура ЗаполнитьТаблицуСведенийЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Объект.СведенияДляВзаиморасчетов.Очистить();
		ЗаполнитьТаблицуСведенийНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТаблицуСведенийЗавершение()

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура заполняет таблицу взаиморасчетов лицевыми счетами, относящимися к выбранному объекту.
//
Процедура ЗаполнитьТаблицуСведенийНаСервере()
	
	Запрос = Новый Запрос;
	
	// Для дальнейшего развития алгоритма заполнения помимо лицевых счетов получим пустые ссылки на
	// контрагента и договор.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_ЛицевыеСчетаСрезПоследних.ЛицевойСчет,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ втЛицевыеСчетаПоОбъекту
	|ИЗ
	|	РегистрСведений.КВП_ЛицевыеСчета.СрезПоследних(
	|			&Период,
	|			ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(&Объект) = ТИП(Справочник.УПЖКХ_Помещения)
	|					ТОГДА Объект = &Объект
	|				КОГДА ТИПЗНАЧЕНИЯ(&Объект) = ТИП(Справочник.КВП_Подъезды)
	|					ТОГДА Объект.Подъезд = &Объект
	|				КОГДА ТИПЗНАЧЕНИЯ(&Объект) = ТИП(Справочник.КВП_Здания)
	|					ТОГДА Объект.Владелец = &Объект
	|			КОНЕЦ) КАК КВП_ЛицевыеСчетаСрезПоследних
	|ГДЕ
	|	КВП_ЛицевыеСчетаСрезПоследних.Действует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЛицевыеСчетаПоОбъекту.ЛицевойСчет,
	|	ЕСТЬNULL(УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	|	втЛицевыеСчетаПоОбъекту.ДоговорКонтрагента
	|ИЗ
	|	втЛицевыеСчетаПоОбъекту КАК втЛицевыеСчетаПоОбъекту
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ЛицевойСчет В
	|						(ВЫБРАТЬ
	|							втЛицевыеСчетаПоОбъекту.ЛицевойСчет
	|						ИЗ
	|							втЛицевыеСчетаПоОбъекту КАК втЛицевыеСчетаПоОбъекту)) КАК УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних
	|		ПО втЛицевыеСчетаПоОбъекту.ЛицевойСчет = УПЖКХ_СведенияДляВзаиморасчетовПоЛССрезПоследних.ЛицевойСчет";
	
	Запрос.УстановитьПараметр("Объект",      Объект.Объект);
	Запрос.УстановитьПараметр("Период",      Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Объект.СведенияДляВзаиморасчетов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьТаблицуСведенийНаСервере()

#КонецОбласти
