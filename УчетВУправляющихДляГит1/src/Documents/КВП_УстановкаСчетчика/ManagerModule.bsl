
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПечатьАктаВводаВЭксплуатацию

Функция АктВводаВЭксплуатациюПУ(МассивОбъектов, ОбъектыПечати, ИмяМакета, ПараметрыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет(ИмяМакета);
	
	СписокОбъектов = Новый СписокЗначений;
	
	Для Каждого СтруктураОбъект Из МассивОбъектов Цикл
		
		Если ПараметрыПечати.Свойство("Объект") Тогда
			СписокОбъектов.Добавить(ПараметрыПечати.Объект);
			ВыводПечатнойФормы(Макет, ТабДокумент, СтруктураОбъект, СписокОбъектов);
		ИначеЕсли ТипЗнч(СтруктураОбъект) = Тип("ДокументСсылка.КВП_УстановкаСчетчика") Тогда
			СписокОбъектов.ЗагрузитьЗначения(СтруктураОбъект.Главная.ВыгрузитьКолонку("Объект"));
			ВыводПечатнойФормы(Макет, ТабДокумент, СтруктураОбъект, СписокОбъектов);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктВводаВЭксплуатациюПУ") Тогда
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктВводаВЭксплуатациюПУ", "Акт ввода в эксплуатацию прибора учета", АктВводаВЭксплуатациюПУ(МассивОбъектов, ОбъектыПечати, "АктВводаВЭксплуатациюПУ", ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Процедура вывода данных в табличный документ
//
Процедура ВыводПечатнойФормы(Макет, ТабДокумент, Документ, СписокОбъектов)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Документ);
	Запрос.УстановитьПараметр("СписокОбъектов",  СписокОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_УстановкаСчетчика.Дата,
	|	КВП_УстановкаСчетчика.Номер,
	|	КВП_УстановкаСчетчика.Ответственный
	|ИЗ
	|	Документ.КВП_УстановкаСчетчика КАК КВП_УстановкаСчетчика
	|ГДЕ
	|	КВП_УстановкаСчетчика.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_УстановкаСчетчикаГлавная.ДатаВключения,
	|	КВП_УстановкаСчетчикаГлавная.ДатаПоверки,
	|	КВП_УстановкаСчетчикаГлавная.Счетчик.ЗаводскойНомер КАК ЗаводскойНомер,
	|	КВП_УстановкаСчетчикаГлавная.Счетчик.ВидУслуги КАК Услуга,
	|	КВП_УстановкаСчетчикаГлавная.Объект КАК Объект
	|ИЗ
	|	Документ.КВП_УстановкаСчетчика.Главная КАК КВП_УстановкаСчетчикаГлавная
	|ГДЕ
	|	КВП_УстановкаСчетчикаГлавная.Ссылка = &ТекущийДокумент
	|	И КВП_УстановкаСчетчикаГлавная.Объект В(&СписокОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КВП_УстановкаСчетчикаГлавная.НомерСтроки
	|ИТОГИ ПО
	|	Объект";
	
	ДеревоПоПУ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Вывод заголовка
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	
	Организация = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
	Руководители = УПЖКХ_ТиповыеМетодыВызовСервера.ОтветственныеЛица(Организация, Шапка.Дата);
	ОблШапка.Параметры.Организация     = Организация.НаименованиеСокращенное;
	ОблШапка.Параметры.Руководитель    = Руководители.РуководительДолжность;
	ОблШапка.Параметры.ФИОРуководителя = Руководители.Руководитель;

	ОблПодвал = Макет.ПолучитьОбласть("Подвал");
	ОблПодвал.Параметры.Организация = Организация.НаименованиеСокращенное;
	
	ПервыйАкт = Истина;
	
	Для Каждого ТекСтрокаОбъекта Из ДеревоПоПУ.Строки Цикл
		
		Если Не ПервыйАкт Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйАкт = Ложь;
		
		ТабДокумент.Вывести(ОблШапка);
		
		// Вывод шапки таблицы
		ОблПодШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
		
		ОблПодШапка.Параметры.Адрес     = АдресОбъекта(ТекСтрокаОбъекта.Объект);
		
		ТабДокумент.Вывести(ОблПодШапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Для Каждого СтрокаТЧ Из ТекСтрокаОбъекта.Строки Цикл
			ОблСтрока.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(ОблСтрока);
		КонецЦикла;
		
		// Вывод подвала
		ТабДокумент.Вывести(ОблПодвал);
		
	КонецЦикла;
	
КонецПроцедуры

// Получаем адреса объектов
//
Функция АдресОбъекта(Объекты) Экспорт
	
	Адрес = "";
	
	Если ТипЗнч(Объекты) = Тип("СправочникСсылка.КВП_ЛицевыеСчета") Тогда
		Адрес = Строка(Объекты.Адрес.Владелец) + ", " + Строка(Объекты.Адрес);
	ИначеЕсли ТипЗнч(Объекты) = Тип("СправочникСсылка.УПЖКХ_Помещения") Тогда
		Адрес = Строка(Объекты.Владелец) + ", " + Строка(Объекты);
	ИначеЕсли ТипЗнч(Объекты) = Тип("СправочникСсылка.КВП_Здания") Тогда
		Адрес = Строка(Объекты);
	ИначеЕсли ТипЗнч(Объекты) = Тип("СправочникСсылка.КВП_Подъезды") Тогда
		Адрес = Строка(Объекты.Владелец) + ", " + Строка(Объекты);
	КонецЕсли;
	
	Возврат Адрес;
	
КонецФункции

#КонецОбласти 

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли