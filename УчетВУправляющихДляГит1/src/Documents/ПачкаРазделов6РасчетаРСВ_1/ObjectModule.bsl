#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СпециальныйДокумент2015года Тогда
		СпециальныйДокумент2015года = ПерсонифицированныйУчет.ПризнакСпециальногоРСВ2015Года(ОтчетныйПериод, ТипСведенийСЗВ);
	КонецЕсли;	
		
	
	Справочники.КомплектыОтчетностиПерсучета.ДокументыСЗВПередЗаписью(ЭтотОбъект, РежимЗаписи);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Если ПерсонифицированныйУчет.СведенияДокументаРазнесеныПоЛицевымСчетам(Ссылка) Тогда
		ДанныеДляПроведения = ДанныеДляПроведения();
		
		ПериодРасчетов = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
		ПерсонифицированныйУчет.ЗарегистрироватьПереданныеВПФРВзносы(Движения, Организация, ПериодРасчетов, ДанныеДляПроведения);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВТСТаблицамиОбъекта(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("ЗаписиОСтаже", ЗаписиОСтаже);
	Запрос.УстановитьПараметр("СведенияОЗаработке", СведенияОЗаработке);
	Запрос.УстановитьПараметр("СведенияОЗаработкеНаВредныхИТяжелыхРаботах", СведенияОЗаработкеНаВредныхИТяжелыхРаботах);
	Запрос.УстановитьПараметр("КорректирующиеСведения", КорректирующиеСведения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки,
	|	Сотрудники.Сотрудник,
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.Отчество,
	|	Сотрудники.СтраховойНомерПФР,
	|	Сотрудники.НачисленоСтраховая,
	|	Сотрудники.ДоначисленоСтраховая
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&Сотрудники КАК Сотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка,
	|	СведенияОЗаработке.НомерСтроки,
	|	СведенияОЗаработке.Сотрудник,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработке.Месяц,
	|	СведенияОЗаработке.Заработок,
	|	СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ПОМЕСТИТЬ ВТСведенияОЗаработке
	|ИЗ
	|	&СведенияОЗаработке КАК СведенияОЗаработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.НомерСтроки,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Сотрудник,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ПОМЕСТИТЬ ВТСведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|ИЗ
	|	&СведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК СведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка,
	|	ЗаписиОСтаже.НомерСтроки,
	|	ЗаписиОСтаже.Сотрудник,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий
	|ПОМЕСТИТЬ ВТТаблицаСтажа
	|ИЗ
	|	&ЗаписиОСтаже КАК ЗаписиОСтаже
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка,
	|	КорректирующиеСведения.Сотрудник,
	|	КорректирующиеСведения.НомерСтроки,
	|	КорректирующиеСведения.КорректируемыйПериод,
	|	КорректирующиеСведения.ДоначисленоНаОПС,
	|	КорректирующиеСведения.ДоначисленоСтраховая,
	|	КорректирующиеСведения.ДоначисленоНакопительная
	|ПОМЕСТИТЬ ВТКорректирующиеСведения
	|ИЗ
	|	&КорректирующиеСведения КАК КорректирующиеСведения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.Сотрудник,
	|	ЗаписиОСтаже.НомерСтроки,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	СотрудникиНомераСтрок.НомерСтроки КАК НомерСтрокиСотрудник
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	ВТТаблицаСтажа КАК ЗаписиОСтаже
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиНомераСтрок
	|		ПО ЗаписиОСтаже.Сотрудник = СотрудникиНомераСтрок.Сотрудник";
	
	Запрос.Выполнить();	
КонецПроцедуры	

Функция СформироватьЗапросПоСотрудникамДляПроверкиЗаполнения(МенеджерВременныхТаблиц)
	
	ПериодДанных = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
		
	НеоплачиваемыеЗначенияТретьегоПараметра = Новый Массив;
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.АДМИНИСТР);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕТИ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.УЧОТПУСК);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛДЕТИ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛОТПУСК);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ЧАЭС);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.НЕОПЛ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.НЕОПЛДОГ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.НЕОПЛАВТ);
	
	ИсключительныеОснованияВыслугиЛет = Новый Массив;
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ВП);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ГР);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_14);
	
	ИсключительныеЗначенияТретьегоПараметра = Новый Массив;
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД);
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ);
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛОТПУСК);
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ВАХТА);
	
	ПрочиеПроверяемыеКоды = Новый Массив;
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_2);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_3);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_4);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_5);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_6);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_7);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_8);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_9);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_10);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_ОС);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_ПЖ);
	
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ВП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ГР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_12);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_СП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.САМОЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.СПЕЦАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.СПАСАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.УЧЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.ВЫСШПИЛ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.НОРМАПР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.НОРМСП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.РЕАКТИВН);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.ЛЕТРАБ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_14);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_15);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПериодДанных", ПериодДанных);
	Запрос.УстановитьПараметр("Ст27_1", Справочники.ОсобыеУсловияТрудаПФР.Ст27_1);
	Запрос.УстановитьПараметр("Ст27_2", Справочники.ОсобыеУсловияТрудаПФР.Ст27_2);
	Запрос.УстановитьПараметр("КодПозицииСпискаСт27_2", Справочники.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.НайтиПоКоду("23307000-17541"));
	Запрос.УстановитьПараметр("НеоплачиваемыеЗначенияТретьегоПараметра", НеоплачиваемыеЗначенияТретьегоПараметра);
	Запрос.УстановитьПараметр("ИсключительныеЗначенияТретьегоПараметра", ИсключительныеЗначенияТретьегоПараметра);
	Запрос.УстановитьПараметр("ИсключительныеОснованияВыслугиЛет", ИсключительныеОснованияВыслугиЛет);
	Запрос.УстановитьПараметр("ПрочиеПроверяемыеКоды", ПрочиеПроверяемыеКоды);
	
	КадровыйУчет.СоздатьВТФизическиеЛицаРаботавшиеВОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, Организация, ОтчетныйПериод, ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТСотрудники.Сотрудник,
	|	МИНИМУМ(ВТСотрудники.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТСотрудникиНомераСтрок
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ЗаписиОСтаже.НомерОсновнойЗаписи) КАК КоличествоЗаписей,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа ЕСТЬ NULL 
	|				ТОГДА 0
	|			КОГДА ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&НеоплачиваемыеЗначенияТретьегоПараметра)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоОплачиваемыхСтрок,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = МЕСЯЦ(&ПериодДанных)
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = МЕСЯЦ(&ПериодДанных)
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = МЕСЯЦ(&ПериодДанных)
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = МЕСЯЦ(&ПериодДанных)
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= МЕСЯЦ(&ПериодДанных) + 1
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= МЕСЯЦ(&ПериодДанных) + 1
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= МЕСЯЦ(&ПериодДанных) + 1
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= МЕСЯЦ(&ПериодДанных) + 1
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= МЕСЯЦ(&ПериодДанных) + 1
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= МЕСЯЦ(&ПериодДанных) + 1
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= МЕСЯЦ(&ПериодДанных) + 1
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= МЕСЯЦ(&ПериодДанных) + 1
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = МЕСЯЦ(&ПериодДанных) + 2
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = МЕСЯЦ(&ПериодДанных) + 2
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = МЕСЯЦ(&ПериодДанных) + 2
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = МЕСЯЦ(&ПериодДанных) + 2
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВТретьемМесяце,
	|	ЗаписиОСтаже.Сотрудник
	|ПОМЕСТИТЬ ВТПараметрыСтажа
	|ИЗ
	|	ВТЗаписиОСтаже КАК ЗаписиОСтаже
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаписиОСтаже КАК ОсновныеЗаписиОстаже
	|		ПО ЗаписиОСтаже.Сотрудник = ОсновныеЗаписиОстаже.Сотрудник
	|			И ЗаписиОСтаже.НомерОсновнойЗаписи = ОсновныеЗаписиОстаже.НомерОсновнойЗаписи
	|			И (ОсновныеЗаписиОстаже.НомерДополнительнойЗаписи = 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаписиОСтаже.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.Отчество,
	|	СотрудникиДокумента.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СотрудникиДокумента.СтраховойНомерПФР,
	|	МИНИМУМ(ДублиСтрок.НомерСтроки) КАК КонфликтующаяСтрока,
	|	ВЫБОР
	|		КОГДА АктуальныеСотрудники.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СотрудникРаботаетВОрганизации,
	|	МИНИМУМ(ДублиСтрокСтраховыеНомера.НомерСтроки) КАК КонфликтующаяСтрокаСтраховойНомер,
	|	СотрудникиДокумента.НачисленоСтраховая,
	|	СотрудникиДокумента.ДоначисленоСтраховая
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ДублиСтрок
	|		ПО СотрудникиДокумента.НомерСтроки > ДублиСтрок.НомерСтроки
	|			И СотрудникиДокумента.Сотрудник = ДублиСтрок.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаРаботавшиеВОрганизации КАК АктуальныеСотрудники
	|		ПО СотрудникиДокумента.Сотрудник = АктуальныеСотрудники.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ДублиСтрокСтраховыеНомера
	|		ПО СотрудникиДокумента.НомерСтроки > ДублиСтрокСтраховыеНомера.НомерСтроки
	|			И СотрудникиДокумента.СтраховойНомерПФР = ДублиСтрокСтраховыеНомера.СтраховойНомерПФР
	|			И СотрудникиДокумента.Сотрудник <> ДублиСтрокСтраховыеНомера.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиДокумента.НомерСтроки,
	|	СотрудникиДокумента.Сотрудник,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.Отчество,
	|	СотрудникиДокумента.Сотрудник.Наименование,
	|	СотрудникиДокумента.СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА АктуальныеСотрудники.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	СотрудникиДокумента.НачисленоСтраховая,
	|	СотрудникиДокумента.ДоначисленоСтраховая
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.СотрудникНаименование,
	|	СотрудникиДокумента.СтраховойНомерПФР,
	|	СотрудникиДокумента.СотрудникРаботаетВОрганизации,
	|	СотрудникиДокумента.КонфликтующаяСтрока,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.Отчество,
	|	СотрудникиДокумента.НачисленоСтраховая,
	|	СотрудникиДокумента.ДоначисленоСтраховая,
	|	СотрудникиДокумента.КонфликтующаяСтрокаСтраховойНомер,
	|	"""" КАК АдресДляИнформирования,
	|	ЕСТЬNULL(ПараметрыСтажа.КоличествоЗаписей, 0) КАК КоличествоЗаписей,
	|	ЕСТЬNULL(ПараметрыСтажа.КоличествоОплачиваемыхСтрок, 0) КАК КоличествоОплачиваемыхСтрок,
	|	ЕСТЬNULL(ПараметрыСтажа.Ст27_1ВПервомМесяце, ЛОЖЬ) КАК Ст27_1ВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.НеПроверятьСт27_1ВПервомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.ОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК ОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.НеПроверятьОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.Ст27_1ВоВторомМесяце, ЛОЖЬ) КАК Ст27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.НеПроверятьСт27_1ВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.ОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК ОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.НеПроверятьОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.Ст27_1ВТретьемМесяце, ЛОЖЬ) КАК Ст27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.НеПроверятьСт27_1ВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.ОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК ОстальныеКодыВТретьемМесяце,
	|	ЕСТЬNULL(ПараметрыСтажа.НеПроверятьОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВТретьемМесяце
	|ИЗ
	|	ВТСотрудникиДокумента КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыСтажа КАК ПараметрыСтажа
	|		ПО СотрудникиДокумента.Сотрудник = ПараметрыСтажа.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СведенияОЗаработке.НомерСтроки,
	|	СведенияОЗаработке.Сотрудник,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработке.Месяц КАК Месяц,
	|	СведенияОЗаработке.Заработок,
	|	СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработке.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СведенияЗаполнены
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОЗаработке КАК СведенияОЗаработке
	|		ПО Сотрудники.Сотрудник = СведенияОЗаработке.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	КатегорияЗастрахованныхЛиц,
	|	Месяц";
	
	Возврат Запрос.Выполнить();
КонецФункции	

Функция СформироватьЗапросПоВредномуЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Ссылка,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.НомерСтроки,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Сотрудник,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда КАК КлассУсловийТруда,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц КАК Месяц,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработкеНаВредныхИТяжелыхРаботах.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СведенияЗаполнены
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК СведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|		ПО Сотрудники.Сотрудник = СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	КлассУсловийТруда,
	|	Месяц";
	
	Возврат Запрос.Выполнить();	
КонецФункции	

Функция СформироватьЗапросПоДаннымРаздела66ДляПроверки(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	КорректирующиеСведения.Ссылка,
	|	КорректирующиеСведения.НомерСтроки,
	|	КорректирующиеСведения.Сотрудник,
	|	КорректирующиеСведения.КорректируемыйПериод КАК КорректируемыйПериод,
	|	КорректирующиеСведения.ДоначисленоНаОПС КАК ДоначисленоНаОПС,
	|	КорректирующиеСведения.ДоначисленоСтраховая,
	|	КорректирующиеСведения.ДоначисленоНакопительная,
	|	ВЫБОР
	|		КОГДА КорректирующиеСведения.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СведенияЗаполнены
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКорректирующиеСведения КАК КорректирующиеСведения
	|		ПО Сотрудники.Сотрудник = КорректирующиеСведения.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	КорректирующиеСведения.НомерСтроки";
	
	Возврат Запрос.Выполнить();	
КонецФункции

Процедура ПроверитьДанныеДокумента(Отказ = Ложь) Экспорт 
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;	
	
	Ошибки = Новый Массив;
	
	Если Не ДополнительныеСвойства.Свойство("НеПроверятьДанныеОрганизации") Тогда
		ПерсонифицированныйУчет.ПроверитьДанныеОрганизации(ЭтотОбъект, Организация, Отказ);
	КонецЕсли;	

	ПроверитьДанныеШапкиДокумента(Ошибки, Отказ);
	
	ЗапросПоСтрокамДокумента = Неопределено;
	
	ПравилаПроверкиДанныхЗЛ = ПерсонифицированныйУчет.ДокументыСЗВПравилаПроверкиДанныхЗЛ(Ложь);
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПроверяемыйПериод = ОтчетныйПериод;
	Иначе
		ПроверяемыйПериод = КорректируемыйПериод;
	КонецЕсли;
	
	ТарифыПоКатегориям = ПерсонифицированныйУчет.ТарифыПоКатегориям(ПроверяемыйПериод);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСТаблицамиОбъекта(МенеджерВременныхТаблиц);
	
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоСотрудникамДляПроверкиЗаполнения(МенеджерВременныхТаблиц).Выбрать();

	ВыборкаПоЗаработку = СформироватьЗапросПоЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц).Выбрать();
	
	ВыборкаПоВредномуЗаработку = СформироватьЗапросПоВредномуЗаработкуДляПроверкиЗаполнения(МенеджерВременныхТаблиц).Выбрать();
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
		ВыборкаПоРазделу66 = СформироватьЗапросПоДаннымРаздела66ДляПроверки(МенеджерВременныхТаблиц).Выбрать();
	КонецЕсли;	

	Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
		ВыборкаПоЗаработку.СледующийПоЗначениюПоля("НомерСтрокиСотрудник");
		ВыборкаПоВредномуЗаработку.СледующийПоЗначениюПоля("НомерСтрокиСотрудник");
		
		Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
			ВыборкаПоРазделу66.СледующийПоЗначениюПоля("НомерСтрокиСотрудник");
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда 
			
			Если ВыборкаПоСтрокамДокумента.КонфликтующаяСтрока <> Null Тогда  
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Информация о сотруднике %1 была введена в документе ранее.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
					Ошибки, 
					Ссылка, 
					ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
					ТекстОшибки,
					"Сотрудник",
					Отказ);
																							
			ИначеЕсли ВыборкаПоСтрокамДокумента.КонфликтующаяСтрокаСтраховойНомер <> Null Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: информация о сотруднике с таким же страховым номером была введена в документе ранее.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
					Ошибки, 
					Ссылка, 
					ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
					ТекстОшибки,
					"СтраховойНомерПФР",
					Отказ);
			КонецЕсли;	
			
			ДанныеЗастрахованногоЛица = ПерсонифицированныйУчет.ДокументыСЗВДанныеЗастрахованногоЛица(ВыборкаПоСтрокамДокумента);
			
			ПерсонифицированныйУчет.ПроверитьДанныеЗастрахованногоЛица(
				ДанныеЗастрахованногоЛица, 
				ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
				ПравилаПроверкиДанныхЗЛ, 
				Ошибки, 
				Ссылка,
				Отказ);
				
			ПроверитьСтрокиЗаработка(Ошибки, ВыборкаПоСтрокамДокумента, ВыборкаПоЗаработку, ТарифыПоКатегориям, Отказ);
			ПроверитьСтрокиВредногоЗаработка(Ошибки, ВыборкаПоСтрокамДокумента, ВыборкаПоВредномуЗаработку, Отказ);
			Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
				ПроверитьДанныеРаздела66(ВыборкаПоСтрокамДокумента, ВыборкаПоРазделу66, Отказ);
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;	
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПроверяемыйПериод = ОтчетныйПериод;
	Иначе
		ПроверяемыйПериод = КорректируемыйПериод;
	КонецЕсли;
			
	ПерсонифицированныйУчет.ПроверитьЗаписиОСтаже(МенеджерВременныхТаблиц, Ссылка, ПроверяемыйПериод, Отказ, Истина, Истина, Истина);				
КонецПроцедуры

Процедура ПроверитьДанныеШапкиДокумента(Ошибки, Отказ = Ложь)
	Если Сотрудники.Количество() > 200 Тогда
		ТекстОшибки = НСтр("ru = 'В документе должно быть не более 200 форм.'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, , Отказ);
	КонецЕсли;
	
	Если ОтчетныйПериод < '20140101' Тогда
		ТекстОшибки = НСтр("ru = 'Разделы 6 Расчета РСВ-1 представляются начиная с 1 квартала 2014 года. Для формирования сведений за 2010-2012 годы используйте документ ""Пачка документов СЗВ-6-1"", ""Реестр СЗВ-6-2"" , за 2013 год используйте документ """"Пачка документов СЗВ-6-4"""".'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, , Отказ);
	КонецЕсли;
	
	Если ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если Не ЗначениеЗаполнено(КорректируемыйПериод) Тогда
			ТекстОшибки = НСтр("ru = 'Не указан корректируемый отчетный период.'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		ИначеЕсли ОтчетныйПериод <= КорректируемыйПериод Тогда
			ТекстОшибки = НСтр("ru = 'Корректируемый период должен предшествовать отчетному.'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		ИначеЕсли КорректируемыйПериод < '20140101' Тогда
			ТекстОшибки = НСтр("ru = 'Корректирующие (отменяющие) Разделы 6 Расчета РСВ-1 представляются только за отчетные периоды c 1 квартала 2014 года.'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры	

Процедура ПроверитьСтрокиЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТарифыПоКатегориям, Отказ = Ложь)
	ПериодДанных = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
	
	МесяцС = Месяц(ПериодДанных);
	МесяцПо = МесяцС + 2;
	
	МесяцыДохода = Новый ТаблицаЗначений;
	МесяцыДохода.Колонки.Добавить("Месяц");
	МесяцыДохода.Колонки.Добавить("КатегорияЗастрахованныхЛиц");
	МесяцыДохода.Колонки.Добавить("КоличествоСтрок", Новый ОписаниеТипов("Число"));
	
	РассчитанныйПФР = 0;
	ОблагаемыйЗаработокПоКатегории = 0;
	Заработок = 0;
	
	Если ВыборкаПоДоходам.СведенияЗаполнены Тогда
		Пока ВыборкаПоДоходам.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
			ОблагаемыйЗаработокПоКатегории = 0;
			Пока ВыборкаПоДоходам.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаПоДоходам.Месяц) 
					И (ВыборкаПоДоходам.Месяц < МесяцС Или ВыборкаПоДоходам.Месяц > МесяцПо)
					И ЗначениеЗаполнено(ПериодДанных) Тогда
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в строках заработка указан месяц (%1), не принадлежащий отчетному периоду'"), ВыборкаПоДоходам.Месяц);
					ПолныйТекстОшибки = ТекстОшибкиЗаработка(ВыборкаДанныхСотрудника.СотрудникНаименование, , ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц, ТекстОшибки);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
						Ошибки, 
						Ссылка, 
						ВыборкаПоДоходам.НомерСтрокиСотрудник,
						ВыборкаПоДоходам.НомерСтроки,
						ПолныйТекстОшибки,
						"Месяц",
						Отказ);	
				Иначе 	
					СтрокаТаблицы = МесяцыДохода.Добавить();
					СтрокаТаблицы.Месяц = ВыборкаПоДоходам.Месяц;
					СтрокаТаблицы.КатегорияЗастрахованныхЛиц = ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц;
					СтрокаТаблицы.КоличествоСтрок = 1;
					
					Если ВыборкаПоДоходам.Месяц <> 0 Тогда
						ОблагаемыйЗаработокПоКатегории = ОблагаемыйЗаработокПоКатегории + ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины;
						Заработок = Заработок + ВыборкаПоДоходам.Заработок;
					КонецЕсли;	

				КонецЕсли;	
				
				Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц) Тогда
					ТекстОшибки = НСтр("ru = 'не указана категория застрахованных лиц.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.Заработок = 0 И ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины = 0 И ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины = 0
					И ВыборкаПоДоходам.Месяц <> 0 Тогда
					
					ТекстОшибки = НСтр("ru = 'указаны нулевые данные.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.Заработок < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указан отрицательный заработок.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база, не превышающая предельную величину.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.ПоДоговорамГПХДоПредельнойВеличины < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база по договорам ГПХ, не превышающая предельную величину'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база, превышающая предельную величину.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходам.Заработок < ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины + ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины Тогда
					ТекстОшибки = НСтр("ru = 'сумма, облагаемая взносами, превышает сумму начисленного заработка.'");
					
					ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходам, ТекстОшибки, Отказ);
				КонецЕсли;
				
			КонецЦикла;
			Тариф = ТарифыПоКатегориям.Получить(ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц);
			
			Если Тариф <> Неопределено Тогда
				РассчитанныйПФР = РассчитанныйПФР + Окр(ОблагаемыйЗаработокПоКатегории * (Тариф.ПФРСтраховая + Тариф.ПФРНакопительная) / 100, 2);
			КонецЕсли;	
			
		КонецЦикла;	
		
		МесяцыДохода.Свернуть("КатегорияЗастрахованныхЛиц, Месяц", "КоличествоСтрок");
		
		Если ЗначениеЗаполнено(ПериодДанных) Тогда
			Для каждого СтрокаТаблицы Из МесяцыДохода Цикл
				Если СтрокаТаблицы.КоличествоСтрок > 1 Тогда
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.4 (сведения о заработке) по категории %2 месяц №%3 указан более одного раза'");
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ШаблонТекстаОшибки,
										ВыборкаДанныхСотрудника.СотрудникНаименование,
										ОбщегоНазначения.ИмяЗначенияПеречисления(СтрокаТаблицы.КатегорияЗастрахованныхЛиц),
										СтрокаТаблицы.Месяц);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
						Ошибки,
						Ссылка,
						ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
						ТекстОшибки, ,
						Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;	
		
	// П. 7.5.4. По всем разделам 6 значение, указанное в подразделе 6.5 должно быть равно сумме значений, 
	// указанных в графе 5 строк 401,402 и 403  (411, 412, 413 и т.д. (зависит от количества тарифов 
	// страховых взносов), умноженных на соответствующий текущему периоду тариф страховых взносов.
		
	ТекстОшибки = НСтр("ru = '- значение, указанное в подразделе 6.5 (начислено на ОПС) должно быть равно сумме значений, указанных в графе 5 строк 401,402 и 403  (411, 412, 413 и т.д., зависит от количества тарифов страховых взносов),  умноженных на соответствующий текущему периоду тариф страховых взносов.'");
	Разность = Макс(РассчитанныйПФР - ВыборкаДанныхСотрудника.НачисленоСтраховая, ВыборкаДанныхСотрудника.НачисленоСтраховая - РассчитанныйПФР);
	Если Разность > 0.02 Тогда
		ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: %2'");	
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонТекстаОшибки,
								ВыборкаДанныхСотрудника.СотрудникНаименование,
								ТекстОшибки);
							
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВзносах(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки, 
			"НачисленоСтраховая",
			Отказ);				
	КонецЕсли;		
		
	// П. 7.4.16. Если в подразделе 6.8 содержится запись в графах 2 и 3, которая не сопровождается записью с кодом
	// «АДМИНИСТР», «ДЕТИ», «УЧОТПУСК», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД»,  «ДЕКРЕТ», «ЧАЭС», «НЕОПЛ», «НЕОПЛДОГ» и
	// «НЕОПЛАВТ»  обязательно наличие значения в графе 4 строки 401-403  подраздела 6.4.
	Если Заработок = 0 И ВыборкаДанныхСотрудника.КоличествоОплачиваемыхСтрок > 0 Тогда
		ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: %2'");
		
		ТекстОшибки = НСтр("ru = 'Если в подразделе 6.8 содержится запись в графах 2 и 3, которая не сопровождается записью с кодом «АДМИНИСТР», «ДЕТИ», «УЧОТПУСК», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС», «НЕОПЛ», «НЕОПЛДОГ» и «НЕОПЛАВТ»  обязательно наличие значения в графе 4 строки 401-403  подраздела 6.4'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонТекстаОшибки,
								ВыборкаДанныхСотрудника.СотрудникНаименование,
								ТекстОшибки);
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки, ,
			Отказ);				
	КонецЕсли;
		
КонецПроцедуры	

Процедура ДобавитьОшибкуЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоЗаработку, ТекстОшибки, Отказ = Ложь)
	ПолныйТекстОшибки = ТекстОшибкиЗаработка(
							ВыборкаДанныхСотрудника.СотрудникНаименование,
							ВыборкаПоЗаработку.Месяц, 
							ВыборкаПоЗаработку.КатегорияЗастрахованныхЛиц, 
							ТекстОшибки);	
							
	ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
		Ошибки,
		Ссылка,
		ВыборкаПоЗаработку.НомерСтрокиСотрудник,
		ВыборкаПоЗаработку.НомерСтроки,
		ПолныйТекстОшибки,
		Отказ);
КонецПроцедуры	

Функция ТекстОшибкиЗаработка(НаименованиеСотрудника, Месяц = Неопределено, КатегорияЗастрахованныхЛиц = Неопределено, ТекстОшибки)
	Если Месяц = Неопределено Тогда
		ОписаниеМесяца = "";	
	Иначе	
		ОписаниеМесяца = ?(Месяц = 0, НСтр("ru = 'в показателе С начала года'"), НСтр("ru = 'за'") + " " + Месяц + НСтр("ru = '-й месяц'"));	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(КатегорияЗастрахованныхЛиц) Тогда
		ОписаниеКатегории = "";
	Иначе
		ОписаниеКатегории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'по категории %1'"),
								ОбщегоНазначения.ИмяЗначенияПеречисления(КатегорияЗастрахованныхЛиц));
		
	КонецЕсли;	
	
	ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.4 (сведения о заработке) - %2 %3 %4'");
	
	ПолныйТекстОшибки  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ШаблонТекстаОшибки,
							НаименованиеСотрудника, 
							ОписаниеМесяца, 
							ОписаниеКатегории, 
							ТекстОшибки);
	
	Возврат ПолныйТекстОшибки;
КонецФункции	

Процедура ПроверитьСтрокиВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, Отказ = Ложь)
	ПериодДанных = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
	
	МесяцС = Месяц(ПериодДанных);
	МесяцПо = МесяцС + 2;
	
	МесяцыДохода = Новый ТаблицаЗначений;
	МесяцыДохода.Колонки.Добавить("Месяц");
	МесяцыДохода.Колонки.Добавить("КлассУсловийТруда");
	МесяцыДохода.Колонки.Добавить("КоличествоСтрок", Новый ОписаниеТипов("Число"));
	
	ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0;
	ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0;

	Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.СведенияЗаполнены Тогда
		Пока ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.СледующийПоЗначениюПоля("КлассУсловийТруда") Цикл
			Пока ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Следующий() Цикл 		
				Если ЗначениеЗаполнено(ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц) 
					И (ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц < МесяцС Или ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц > МесяцПо)
					И ЗначениеЗаполнено(ПериодДанных) Тогда
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'в строках заработка указан месяц (%1), не принадлежащий отчетному периоду'"), 
									ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц);
									
					ПолныйТекстОшибки = ТекстОшибкиВредногоЗаработка(
											ВыборкаДанныхСотрудника.СотрудникНаименование, , 
											ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.КлассУсловийТруда, 
											ТекстОшибки);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВредномЗаработкеЗаМесяц(
						Ошибки, 
						Ссылка, 
						ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.НомерСтрокиСотрудник,
						ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.НомерСтроки,
						ПолныйТекстОшибки,
						"Месяц",
						Отказ);	
				Иначе 	
					СтрокаТаблицы = МесяцыДохода.Добавить();
					СтрокаТаблицы.Месяц = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц;
					СтрокаТаблицы.КлассУсловийТруда = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.КлассУсловийТруда;
					СтрокаТаблицы.КоличествоСтрок = 1;
				КонецЕсли;	

				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц = МесяцС Тогда
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
				КонецЕсли;
				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц = МесяцС + 1 Тогда
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
				КонецЕсли;
				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц = МесяцС + 2 Тогда
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
				КонецЕсли;

				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база взносов за занятых на подземных и вредных работах.'");
					
					ДобавитьОшибкуВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, ТекстОшибки, Отказ);
				КонецЕсли;
				Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах < 0 Тогда
					ТекстОшибки = НСтр("ru = 'указана отрицательная база взносов за занятых на тяжелых работах.'");
					
					ДобавитьОшибкуВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, ТекстОшибки, Отказ )
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;	
		
		МесяцыДохода.Свернуть("КлассУсловийТруда, Месяц", "КоличествоСтрок");
		
		Если ЗначениеЗаполнено(ПериодДанных) Тогда 
			Для каждого СтрокаТаблицы Из МесяцыДохода Цикл
				Если СтрокаТаблицы.КоличествоСтрок > 1 Тогда
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.7 (Сведения о выплатах занятых на работах дающих право на досрочную пенсию) по классу условий труда %2 месяц №%3 указан более одного раза'");
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ШаблонТекстаОшибки,
										ВыборкаДанныхСотрудника.СотрудникНаименование,
										СтрокаТаблицы.КлассУсловийТруда,
										СтрокаТаблицы.Месяц);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
						Ошибки,
						Ссылка,
						ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
						ТекстОшибки, ,
						Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
	
	// П 7.8.2 По всем разделам 6 при наличии ненулевых значений в строках 701,702,703,711,712,713  графы 4 подраздела 6.7
	//   обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 для соответствующих
	//   периодов, указанных в графах 2 и 3 подраздела 6.8.
	
	// П 7.8.4 По всем разделам 6 при наличии в графе «Особые условия труда (код)» подраздела 6.8  кода особых условий 
	// труда 27-1 и отсутствии кода «ДЕКРЕТ», «ВРНЕТРУД», «ВАХТА», «ДЛОТПУСК», то для соответствующих месяцев обязательно 
	// наличие ненулевых значений в графе 4 подраздела 6.7  за соответствующие месяцы (строки 701, 702, 703, 711, 712,
	// 713).
	
	ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: %2'");
	Если ВыборкаДанныхСотрудника.Ст27_1ВПервомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за первый месяц отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 701,711 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки, ,
				Отказ);
		КонецЕсли; 
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьСт27_1ВПервомМесяце Тогда // Коды есть, но проверять не надо.
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 701,711 ... графы 4 подраздела 6.7 ожидается наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 в строках подраздела 6.8 за первый месяц отчетного периода'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки, ,
			Отказ);
	КонецЕсли;
	Если ВыборкаДанныхСотрудника.Ст27_1ВоВторомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за второй месяц отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 702,712 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,,
				Отказ);

		КонецЕсли;
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьСт27_1ВоВторомМесяце Тогда // Коды есть, но проверять не надо.
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 702,712 ... графы 4 подраздела 6.7 ожидается наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 в строках подраздела 6.8 за второй месяц отчетного периода'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,,
			Отказ);
		
	КонецЕсли;
	Если ВыборкаДанныхСотрудника.Ст27_1ВТретьемМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за третий месяц отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 703,713 ...'");

			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,,
				Отказ);

		КонецЕсли;
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьСт27_1ВТретьемМесяце Тогда // Коды есть, но проверять не надо.
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 703,713 ... графы 4 подраздела 6.7 ожидается наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 в строках подраздела 6.8 за третий месяц отчетного периода'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,,
			Отказ);

	КонецЕсли;
	
	// П 7.8.3 По всем разделам 6 при наличии ненулевых значений в строках 701,702,703,711,712,713  графы 5 подраздела 6.7
	//   обязательно наличие  для соответствующих периодов, указанных в графах 2 и 3 подраздела 6.8  в графе «Особые
	//   условия труда (код)» одного из кодов особых условий труда, (кроме «27-1» ,«28-СЕВ», «27-2» в сочетании со
	//   значением 23307000-17541 элемента Код позиции списка) то есть указаны 27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8,
	//   27-9, 27-10, 27-ОС, 27-ПЖ, или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)»
	//   подраздела 6.8  в строке периода работы за соответствующий месяц должно быть указано одно из значений: 27-11-ГР,
	//   27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15.
	
	// П 7.8.5 По всем разделам 6 при наличии в графе «Особые условия труда (код)» подраздела 6.8 одного из кодов особых
	// условий  труда, кроме «27-1», «28-СЕВ», «27-2» в сочетании со значением 23307000-17541 элемента Код позиции списка
	// (то есть указаны.
	// 27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного
	// назначения  трудовой пенсии. Основание (код)» указано одно из значений: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ,
	// СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 и отсутствии   кода «ДЕКРЕТ»,
	// «ВРНЕТРУД», «ВАХТА», «ДЛОТПУСК», то для соответствующих месяцев обязательно наличие ненулевых  значений в графе 5
	// подраздела 6.7  за соответствующие месяцы (строки 701, 702, 703, 711, 712, 713).
		
	Если ВыборкаДанныхСотрудника.ОстальныеКодыВПервомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии в строках подраздела 6.8 за первый месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»  (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 обязательно наличие значений в графе 5 подраздела 6.7 в строках 701,711 ...'");

			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,,
				Отказ);
				
		КонецЕсли;
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьОстальныеКодыВПервомМесяце Тогда // Коды есть, но проверять не надо.
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце <> 0 Тогда
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 701,711 ... графы 5 подраздела 6.7 ожидается наличие в строках подраздела 6.8 за первый месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,,
			Отказ);

	КонецЕсли;
	Если ВыборкаДанныхСотрудника.ОстальныеКодыВоВторомМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии в строках подраздела 6.8 за второй месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» 27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 обязательно наличие значений в графе 5 подраздела 6.7 в строках 702,712 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,,
				Отказ);

		КонецЕсли; 
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьОстальныеКодыВоВторомМесяце Тогда // Коды есть, но проверять не надо.
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 702,712 ... графы 5 подраздела 6.7 ожидается наличие в строках подраздела 6.8 за второй месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ,  ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,,
			Отказ);
			
	КонецЕсли;
	Если ВыборкаДанныхСотрудника.ОстальныеКодыВТретьемМесяце Тогда
		Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0 Тогда
			ТекстОшибки = НСтр("ru = 'При наличии в строках подраздела 6.8 за третий месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 обязательно наличие значений в графе 5 подраздела 6.7 в строках 701,711 ...'");
			
			ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
				Ошибки,
				Ссылка,
				ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
				ПолныйТекстОшибки,,
				Отказ);
			
		КонецЕсли; 
	ИначеЕсли ВыборкаДанныхСотрудника.НеПроверятьОстальныеКодыВТретьемМесяце Тогда // Коды есть, но проверять не надо.
	ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце <> 0 Тогда	
		ТекстОшибки = НСтр("ru = 'При наличии ненулевых значений в строках 701,711 ... графы 5 подраздела 6.7 обязательно наличие в строках подраздела 6.8 за третий месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ,  ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15'");
		
		ПолныйТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ШаблонТекстаОшибки,
									ВыборкаДанныхСотрудника.СотрудникНаименование,
									ТекстОшибки);
									
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
			Ошибки,
			Ссылка,
			ВыборкаДанныхСотрудника.НомерСтрокиСотрудник,
			ПолныйТекстОшибки,,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура ПроверитьДанныеРаздела66(ВыборкаДанныхСотрудника, ВыборкаПоРазделу66, Отказ)
	Если ВыборкаПоРазделу66.СведенияЗаполнены Тогда
		
		Пока ВыборкаПоРазделу66.Следующий() Цикл
			ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.6 (корректирующие сведения) %2'");
				
			ПредставлениеПериода = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ВыборкаПоРазделу66.КорректируемыйПериод, Истина);
			
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КорректирующиеСведения", ВыборкаПоРазделу66.НомерСтроки, "КорректируемыйПериод");
			
			Если ВыборкаПоРазделу66.КорректируемыйПериод = '00010101' Тогда
				ТекстОшибки = НСтр("ru = 'корректируемый период не может пустым.'");	
				ПолныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаДанныхСотрудника.СотрудникНаименование, ТекстОшибки);
				
				ОбщегоНазначения.СообщитьПользователю(ПолныйТекст, Ссылка, ПутьКДанным,, Отказ);
				
				Продолжить;
			КонецЕсли;	
			
			Если ВыборкаПоРазделу66.КорректируемыйПериод < '20100101' Тогда
				ТекстОшибки = НСтр("ru = 'корректируемый период не может быть меньше 1 кв. 2010  года.'");	
				ПолныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаДанныхСотрудника.СотрудникНаименование, ТекстОшибки);
				
				ОбщегоНазначения.СообщитьПользователю(ПолныйТекст, Ссылка, ПутьКДанным,, Отказ);
				
				Продолжить;
			КонецЕсли;	
			
			Если ВыборкаПоРазделу66.КорректируемыйПериод > КорректируемыйПериод - 1 Тогда
				ТекстОшибки = НСтр("ru = 'корректируемый период не может быть больше корректируемого периода, указанного в шапке документа.'");	
				ПолныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаДанныхСотрудника.СотрудникНаименование, ТекстОшибки);
				ОбщегоНазначения.СообщитьПользователю(ПолныйТекст, Ссылка, ПутьКДанным,, Отказ);
			КонецЕсли;	

			ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.6 (корректирующие сведения) за %2 %3'");
			
			Если ВыборкаПоРазделу66.КорректируемыйПериод >= '20140101' Тогда
				Если ЗначениеЗаполнено(ВыборкаПоРазделу66.ДоначисленоСтраховая) Тогда
					ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КорректирующиеСведения", ВыборкаПоРазделу66.НомерСтроки, "ДоначисленоСтраховая");
					ТекстОшибки = НСтр("ru = 'суммы взносов, до начисленных на страховую часть пенсии, указываться не должны.'");	
					ПолныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаДанныхСотрудника.СотрудникНаименование, ПредставлениеПериода, ТекстОшибки);
					ОбщегоНазначения.СообщитьПользователю(ПолныйТекст, Ссылка, ПутьКДанным,, Отказ);	
				КонецЕсли;	
				Если ЗначениеЗаполнено(ВыборкаПоРазделу66.ДоначисленоНакопительная) Тогда
					ТекстОшибки = НСтр("ru = 'суммы взносов, до начисленных на накопительную часть пенсии, указываться не должны.'");	
					ПолныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаДанныхСотрудника.СотрудникНаименование, ПредставлениеПериода, ТекстОшибки);
					ОбщегоНазначения.СообщитьПользователю(ПолныйТекст, Ссылка, ПутьКДанным,, Отказ);	
				КонецЕсли;	
			Иначе
				Если ЗначениеЗаполнено(ВыборкаПоРазделу66.ДоначисленоНаОПС) Тогда
					ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КорректирующиеСведения", ВыборкаПоРазделу66.НомерСтроки, "ДоначисленоНаОПС");
					ТекстОшибки = НСтр("ru = 'суммы взносов, до начисленных на ОПС, указываться не должны.'");	
					ПолныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаДанныхСотрудника.СотрудникНаименование, ПредставлениеПериода, ТекстОшибки);
					ОбщегоНазначения.СообщитьПользователю(ПолныйТекст, Ссылка, ПутьКДанным,, Отказ);	
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;			
	КонецЕсли;	
КонецПроцедуры	

Процедура ДобавитьОшибкуВредногоЗаработка(Ошибки, ВыборкаДанныхСотрудника, ВыборкаПоЗаработку, ТекстОшибки, Отказ = Ложь)
	ПолныйТекстОшибки = ТекстОшибкиВредногоЗаработка(
							ВыборкаДанныхСотрудника.СотрудникНаименование,
							ВыборкаПоЗаработку.Месяц, 
							ВыборкаПоЗаработку.КлассУсловийТруда, 
							ТекстОшибки);	
							
	ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВредномЗаработкеЗаМесяц(
		Ошибки,
		Ссылка,
		ВыборкаПоЗаработку.НомерСтрокиСотрудник,
		ВыборкаПоЗаработку.НомерСтроки,
		ПолныйТекстОшибки,
		Отказ);
КонецПроцедуры

Функция ТекстОшибкиВредногоЗаработка(НаименованиеСотрудника, Месяц = Неопределено, КлассУсловийТруда = Неопределено, ТекстОшибки)
	Если Месяц = Неопределено Тогда
		ОписаниеМесяца = "";	
	Иначе	
		ОписаниеМесяца = ?(Месяц = 0, НСтр("ru = 'в показателе С начала года'"), НСтр("ru = 'за'") + " " + Месяц + НСтр("ru = '-й месяц'"));	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(КлассУсловийТруда) Тогда
		ОписаниеКлассаУсловийТруда = "";
	Иначе
		ОписаниеКлассаУсловийТруда = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'по классу условий труда %1'"),
										КлассУсловийТруда);
		
	КонецЕсли;	
	
	ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: в разделе 6.7 (Сведения о выплатах занятых на работах дающих право на досрочную пенсию) - %2 %3 %4'");
	
	ПолныйТекстОшибки  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ШаблонТекстаОшибки, 
							НаименованиеСотрудника, 
							ОписаниеМесяца, 
							ОписаниеКлассаУсловийТруда, 
							ТекстОшибки);
	
	Возврат ПолныйТекстОшибки;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолныйПутьКИсточникуОшибки(СообщениеПользователю) Экспорт
	
	Поле = СообщениеПользователю.Поле;
	
	СтруктураПути = ПерсонифицированныйУчетКлиентСервер.СтруктураПутиКИсточникуОшибки(СообщениеПользователю.Поле);
		
	Если СтруктураПути.ИндексСтроки <> Неопределено
		И (СтруктураПути.ПутьКРеквизиту = "ЗаписиОСтаже" 
		Или СтруктураПути.ПутьКРеквизиту = "СведенияОЗаработке") Тогда
		
		Сотрудник = ЭтотОбъект[СтруктураПути.ПутьКРеквизиту][СтруктураПути.ИндексСтроки].Сотрудник;
		
		СтрокаТаблицыСотрудник = Сотрудники.Найти(Сотрудник, "Сотрудник");
		
		СтруктураПути.Родитель = ПерсонифицированныйУчетКлиентСервер.СтруктураПутиКОшибке();
		СтруктураПути.Родитель.ПутьКРеквизиту = "Сотрудники";
		СтруктураПути.Родитель.ИндексСтроки = СтрокаТаблицыСотрудник.НомерСтроки - 1;
		СтруктураПути.Родитель.ИмяРеквизитаТабличнойЧасти = "";
	КонецЕсли;
	
	Возврат СтруктураПути;
	
КонецФункции

Функция ДанныеДляПроведения()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.НачисленоСтраховая КАК НачисленоСтраховая,
		|	0 КАК УплаченоСтраховая,
		|	0 КАК НачисленоНакопительная,
		|	0 КАК УплаченоНакопительная,
		|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка) КАК КатегорияЗастрахованныхЛиц,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка) КАК ТипДоговора
		|ИЗ
		|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
		|ГДЕ
		|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = &Ссылка";
	Иначе	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ДоначисленоСтраховая КАК НачисленоСтраховая,
		|	0 КАК УплаченоСтраховая,
		|	0 КАК НачисленоНакопительная,
		|	0 КАК УплаченоНакопительная,
		|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка) КАК КатегорияЗастрахованныхЛиц,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка) КАК ТипДоговора
		|ИЗ
		|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
		|ГДЕ
		|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = &Ссылка";
	КонецЕсли;	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ОкончаниеОтчетногоПериода() Экспорт
	
	Возврат ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
КонецФункции

#КонецОбласти

#КонецЕсли
