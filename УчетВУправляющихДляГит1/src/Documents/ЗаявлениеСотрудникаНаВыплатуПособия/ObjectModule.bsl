#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ВерсияДокумента = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.АктуальнаяВерсия();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Сотрудник") И ЗначениеЗаполнено(ДанныеЗаполнения.Сотрудник) Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.Сотрудник;
		Иначе
			ЗначенияДляЗаполнения = Новый Структура("Ответственный");
			ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗначенияДляЗаполнения);
			
			ОтношениеКОсобойЗоне = Перечисления.ОтношениеКОсобойЗоне.Нет;
			
			ПараметрДокументОснование = Неопределено;
			ПараметрИдентификаторСтрокиОснования = Неопределено;
			Если ДанныеЗаполнения.Свойство("Основание", ПараметрДокументОснование) Тогда
				ДокументОснование = ПараметрДокументОснование;
				Если ДанныеЗаполнения.Свойство("ИдентификаторСтроки", ПараметрИдентификаторСтрокиОснования) И ПараметрИдентификаторСтрокиОснования <> 0 Тогда
					ИдентификаторСтрокиОснования = ПараметрИдентификаторСтрокиОснования;
				КонецЕсли;
			КонецЕсли;
			
			ОбновитьВторичныеДанныеДокумента();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбъектЗафиксирован() Тогда
		Отказ = Истина;
	ИначеЕсли Не Отказ Тогда
		ЗаполнитьВидРеестра();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	УдалитьРеквизитыНеТребующиеПроверки(ПроверяемыеРеквизиты);
	
	ПроверитьРеквизитыПолучателя(Отказ);
	
	Если ТребуетсяРасчетПособия() Тогда
		ПроверитьРайонныйКоэффициент(Отказ);
	КонецЕсли;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		ПроверитьРеквизитыЕжемесячногоПособияПоУходуЗаРебенком(Отказ);
		ПроверитьСправкуОНеполученииПособияОтОтцаИлиМатери(Отказ);
	КонецЕсли;
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка Тогда
		ПроверитьРеквизитыЕдиновременногоПособияПриРожденииРебенка(Отказ);
		ПроверитьСправкуОНеполученииПособияОтОтцаИлиМатери(Отказ);
	КонецЕсли;
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки Тогда
		ПроверитьРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(Отказ);
	КонецЕсли;
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности Тогда
		ПроверитьРеквизитыЛисткаНетрудоспособности(Отказ);
		ПроверитьРеквизитыПериодаПростоя(Отказ);
		ПроверитьРеквизитыПериодаТрудовогоДоговора(Отказ);
	КонецЕсли;
	
	Если Перерасчет И Не ЗначениеЗаполнено(КодПричиныПерерасчета) Тогда
		Текст = НСтр("ru = 'Для случаев перерасчета пособия необходимо указать код причины перерасчета.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "КодПричиныПерерасчета");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПередЗаписью

Процедура ЗаполнитьВидРеестра()
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком;
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка Тогда
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕдиновременныеПособияПриРожденииРебенка;
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки Тогда
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияВставшимНаУчетВРанниеСроки;
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ВидРеестра = Неопределено;
	Иначе
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработкаПроверкиЗаполнения

Процедура УдалитьРеквизитыНеТребующиеПроверки(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КодПричиныПерерасчета");
	
	Если Не ПолучательНеЯвляетсяЗаявителем Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ФамилияЗаявителя");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ИмяЗаявителя");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОтчествоЗаявителя");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидДокументаУдостоверяющегоЛичностьЗаявителя");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СерияДокументаУдостоверяющегоЛичностьЗаявителя");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерДокументаУдостоверяющегоЛичностьЗаявителя");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаВыдачиДокументаУдостоверяющегоЛичностьЗаявителя");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КемВыданДокументУдостоверяющийЛичностьЗаявителя");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидДокументаНаПроживание) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерДокументаНаПроживание");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаВыдачиДокументаНаПроживание");
	КонецЕсли;
	
	Если Не ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		И Не ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяРегистрации");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяРегистрацииИдентификаторФИАС");
	КонецЕсли;
	Если ЗначениеЗаполнено(АдресПолучателяРегистрацииКодКЛАДР) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяРегистрацииИдентификаторФИАС");
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяРегистрацииКодКЛАДР");
	
	Если Не (ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерЛисткаНетрудоспособности");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаЛисткаНетрудоспособности");
	КонецЕсли;
	
	Если Не (ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	КонецЕсли;
	
	Если Не (ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаОтпускаПоУходуЗаРебенком");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияОтпускаПоУходуЗаРебенком");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком");
	КонецЕсли;
	
	// Удаление непроверяемых реквизитов расчета пособия.
	ТребуетсяРасчетПособия = ТребуетсяРасчетПособия();
	Если Не (ТребуетсяРасчетПособия И ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СреднийЗаработокЗаРасчетныйПериод");
	КонецЕсли;
	Если Не (ТребуетсяРасчетПособия И ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.ИсходяИзТарифнойСтавки) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДолжностнойОклад");
	КонецЕсли;
	Если Не (ТребуетсяРасчетПособия И ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.ИсходяИзМРОТ) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "МРОТ");
	КонецЕсли;
	Если Не (ТребуетсяРасчетПособия
		И ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок
		И СчитатьПоПравилам2010Года) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаРасчетногоПериода");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияРасчетногоПериода");
	КонецЕсли;
	Если Не (ТребуетсяРасчетПособия
		И ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок
		И Не СчитатьПоПравилам2010Года) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПервыйРасчетныйГод");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВторойРасчетныйГод");
	КонецЕсли;
	
	// Удаление непроверяемых банковских реквизитов.
	Если Не (СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.НаКартуМИР) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КартаМИР");
	КонецЕсли;
	Если Не (СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ЧерезБанк) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Банк");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НаименованиеБанка");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "БИКБанка");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерЛицевогоСчета");
	КонецЕсли;
	Если Не (СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ПочтовымПереводом) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяФактический");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяФактическийИдентификаторФИАС");
	КонецЕсли;
	Если ЗначениеЗаполнено(АдресПолучателяФактическийКодКЛАДР) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяФактическийИдентификаторФИАС");
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяФактическийКодКЛАДР");
	
	
КонецПроцедуры

Функция ТребуетсяРасчетПособия()
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве;
КонецФункции

Процедура ПроверитьРеквизитыПолучателя(Отказ)
	// СНИЛС.
	ТекстОшибки = "";
	Если ЗначениеЗаполнено(СтрЗаменить(СНИЛСПолучателя, "-",""))
		И Не РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(СНИЛСПолучателя, ТекстОшибки) Тогда
		Текст = НСтр("ru = 'СНИЛС получателя пособия указан не верно. %1'");
		Текст = СтрШаблон(Текст, ТекстОшибки);
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "СНИЛСПолучателя");
	КонецЕсли;
	
	// ИНН.
	ТекстОшибки = "";
	Если ЗначениеЗаполнено(СтрЗаменить(ИННПолучателя, "-",""))
		И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИННПолучателя, Ложь, ТекстОшибки) Тогда
		Текст = НСтр("ru = 'ИНН получателя пособия указан не верно. %1'");
		Текст = СтрШаблон(Текст, ТекстОшибки);
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ИННПолучателя");
	КонецЕсли;
	
	// Пол.
	КадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо), "Пол");
	Если КадровыеДанныеСотрудника.Количество() > 0 Тогда
		Если Не ЗначениеЗаполнено(КадровыеДанныеСотрудника[0].Пол) Тогда
			Текст = НСтр("ru = 'Не заполнен пол получателя пособия.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "Пол");
		КонецЕсли;
	КонецЕсли;
	
	// Документ, удостоверяющий личность.
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("Сотрудник",           "Сотрудник");
	ИменаРеквизитов.Вставить("ФизическоеЛицо",      "ФизическоеЛицо");
	ИменаРеквизитов.Вставить("ВидДокумента",        "ВидДокументаУдостоверяющегоЛичностьПолучателя");
	ИменаРеквизитов.Вставить("СерияДокумента",      "СерияДокументаУдостоверяющегоЛичностьПолучателя");
	ИменаРеквизитов.Вставить("НомерДокумента",      "НомерДокументаУдостоверяющегоЛичностьПолучателя");
	ИменаРеквизитов.Вставить("ДатаВыдачиДокумента", "ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя");
	ИменаРеквизитов.Вставить("КемВыданДокумент",    "КемВыданДокументУдостоверяющийЛичностьПолучателя");
	
	ПрямыеВыплатыПособийСоциальногоСтрахования.ПроверитьДокументУдостоверяющийЛичность(Отказ, ЭтотОбъект, ИменаРеквизитов);
	
КонецПроцедуры

Процедура ПроверитьРайонныйКоэффициент(Отказ)
	Если ЗначениеЗаполнено(РайонныйКоэффициент) И РайонныйКоэффициент > 1 Тогда
		ДопустимыеЗначенияРайонногоКоэффициента = ПрямыеВыплатыПособийСоциальногоСтрахования.ДопустимыеЗначенияРайонногоКоэффициента();
		Если ДопустимыеЗначенияРайонногоКоэффициента.Найти(РайонныйКоэффициент) = Неопределено Тогда
			Текст = НСтр("ru = 'Указано недопустимое значение районного коэффициента.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "РайонныйКоэффициент");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыЕжемесячногоПособияПоУходуЗаРебенком(Отказ)
	Если ЗначениеЗаполнено(ДокументОснование)
		И Не ЗначениеЗаполнено(ИдентификаторСтрокиОснования) Тогда
		Текст = НСтр("ru = 'Не выбран ребенок, за которым осуществляется уход.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ИдентификаторСтрокиОснования");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПриказаОЗаменеПослеродовогоОтпуска) Или ЗначениеЗаполнено(НомерПриказаОЗаменеПослеродовогоОтпуска) Тогда
		Если ЗначениеЗаполнено(ДатаПриказаОЗаменеПослеродовогоОтпуска) И Не ЗначениеЗаполнено(НомерПриказаОЗаменеПослеродовогоОтпуска) Тогда
			Текст = НСтр("ru = 'Не указан номер приказа о замене послеродового отпуска на отпуск по уходу.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерПриказаОЗаменеПослеродовогоОтпуска");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаПриказаОЗаменеПослеродовогоОтпуска) И ЗначениеЗаполнено(НомерПриказаОЗаменеПослеродовогоОтпуска) Тогда
			Текст = НСтр("ru = 'Не указана дата приказа о замене послеродового отпуска на отпуск по уходу.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаПриказаОЗаменеПослеродовогоОтпуска");
		КонецЕсли;
	КонецЕсли;
	
	// Справка о неполучении пособия по основному месту работы.
	Если ТипЗанятостиРаботника <> Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
		Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияПоДругимМестамРаботы)
			И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияПоДругимМестамРаботы) Тогда
			Текст = НСтр("ru = 'Для совместителей необходимо указать реквизиты Справки о неполучении пособия по основному месту работы.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерСправкиОНеполученииПособияПоДругимМестамРаботы");
		ИначеЕсли Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияПоДругимМестамРаботы) Тогда
			Текст = НСтр("ru = 'Не указан номер Справки от матери о неполучении пособия.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерСправкиОНеполученииПособияПоДругимМестамРаботы");
		ИначеЕсли Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияПоДругимМестамРаботы) Тогда
			Текст = НСтр("ru = 'Не указана дата Справки от матери о неполучении пособия.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСправкиОНеполученииПособияПоДругимМестамРаботы");
		КонецЕсли;
	КонецЕсли;
	
	Если ВидОсобойЗоныПроживанияРаботы = Перечисления.ВидыОсобойЗоныПроживанияРаботы.ЗонаЗагрязненияПриАварииПОМаяк
		И ОтношениеКОсобойЗоне <> Перечисления.ОтношениеКОсобойЗоне.Проживает Тогда
		Текст = НСтр("ru = 'Для предоставления льготы лицу, проживающему в населенном пункте, загрязненном вследствие аварии на ПО ""Маяк"", следует указать вариант ""Постоянное проживание""'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ОтношениеКОсобойЗоне");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьСправкуОНеполученииПособияОтОтцаИлиМатери(Отказ)
	Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) Или ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
		Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
			Текст = НСтр("ru = 'Не указан номер Справки от отца о неполучении пособия.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерСправкиОНеполученииПособияОтОтца");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) И ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
			Текст = НСтр("ru = 'Не указана дата Справки от отца о неполучении пособия.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСправкиОНеполученииПособияОтОтца");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) Или ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
		Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
			Текст = НСтр("ru = 'Не указан номер Справки от матери о неполучении пособия.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерСправкиОНеполученииПособияОтМатери");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) И ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
			Текст = НСтр("ru = 'Не указана дата Справки от матери о неполучении пособия.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСправкиОНеполученииПособияОтМатери");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыЕдиновременногоПособияПриРожденииРебенка(Отказ)
	Если ЗначениеЗаполнено(ДатаСправкиОРожденииРебенка)
		Или ЗначениеЗаполнено(НомерСправкиОРожденииРебенка) Тогда
		Если Не ЗначениеЗаполнено(ФормаСправкиОРожденииРебенка) Тогда
			Текст = НСтр("ru = 'При рождении ребенка на территории РФ необходимо указать вид Справки о рождении: форма № 24 или № 25 или № 26.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ФормаСправкиОРожденииРебенка");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) Тогда
			Текст = НСтр("ru = 'При рождении ребенка на территории РФ следует указывать только реквизиты Справки о рождении (формы № 24 или № 25 или № 26).'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСвидетельстваОРождении");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(НомерСправкиОРожденииРебенка) Тогда
			Текст = НСтр("ru = 'Не указан номер Справки о рождении.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерСправкиОРожденииРебенка");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОРожденииРебенка) Тогда
			Текст = НСтр("ru = 'Не указана дата Справки о рождении.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСправкиОРожденииРебенка");
		КонецЕсли;
	ИначеЕсли Не (ЗначениеЗаполнено(ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(НомерСвидетельстваОРождении)
		Или ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) Или ЗначениеЗаполнено(НомерИногоДокументаПодтверждающегоРождение)) Тогда
		Текст = НСтр("ru = 'Необходимо указать реквизиты одного из документов: Справки о рождении, Свидетельства о рождении, выданного консульским учреждением РФ, или документа иностранного государства, подтверждающего рождение ребенка.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСвидетельстваОРождении");
	Иначе
		Если ЗначениеЗаполнено(ДатаСвидетельстваОРождении) И Не ЗначениеЗаполнено(НомерСвидетельстваОРождении) Тогда
			Текст = НСтр("ru = 'Не указан номер Свидетельства о рождении.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерСвидетельстваОРождении");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСвидетельстваОРождении) И ЗначениеЗаполнено(НомерСвидетельстваОРождении) Тогда
			Текст = НСтр("ru = 'Не указана дата Свидетельства о рождении.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСвидетельстваОРождении");
		КонецЕсли;
		Если (ЗначениеЗаполнено(ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(НомерСвидетельстваОРождении))
			И Не ЗначениеЗаполнено(СерияСвидетельстваОРождении) Тогда
			Текст = НСтр("ru = 'Не указана серия Свидетельства о рождении.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "СерияСвидетельстваОРождении");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) И Не ЗначениеЗаполнено(НомерИногоДокументаПодтверждающегоРождение) Тогда
			Текст = НСтр("ru = 'Не указан номер документа иностранного государства, подтверждающего рождение ребенка.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерИногоДокументаПодтверждающегоРождение");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) И ЗначениеЗаполнено(НомерИногоДокументаПодтверждающегоРождение) Тогда
			Текст = НСтр("ru = 'Не указана дата документа иностранного государства, подтверждающего рождение ребенка.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаИногоДокументаПодтверждающегоРождение");
		КонецЕсли;
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(ДатаРешенияОбОпеке) Или ЗначениеЗаполнено(НомерРешенияОбОпеке))
		И (ЗначениеЗаполнено(ДатаРешенияОбУсыновлении) Или ЗначениеЗаполнено(НомерРешенияОбУсыновлении))
		И (ЗначениеЗаполнено(ДатаДоговораОПередачеРебенкаВПриемнуюСемью) Или ЗначениеЗаполнено(НомерДоговораОПередачеРебенкаВПриемнуюСемью)) Тогда
		Текст = НСтр("ru = 'Необходимо указать реквизиты только одного из документов: об опеке, усыновлении или о передаче ребенка на воспитание.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаРешенияОбОпеке");
	Иначе
		Если ЗначениеЗаполнено(ДатаРешенияОбОпеке) И Не ЗначениеЗаполнено(НомерРешенияОбОпеке) Тогда
			Текст = НСтр("ru = 'Не указан номер решения об установлении опеки.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерРешенияОбОпеке");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаРешенияОбОпеке) И ЗначениеЗаполнено(НомерРешенияОбОпеке) Тогда
			Текст = НСтр("ru = 'Не указана дата решения об установлении опеки.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаРешенияОбОпеке");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаРешенияОбУсыновлении) И Не ЗначениеЗаполнено(НомерРешенияОбУсыновлении) Тогда
			Текст = НСтр("ru = 'Не указан номер решения об усыновлении.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерРешенияОбУсыновлении");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаРешенияОбУсыновлении) И ЗначениеЗаполнено(НомерРешенияОбУсыновлении) Тогда
			Текст = НСтр("ru = 'Не указана дата решения об усыновлении.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаРешенияОбУсыновлении");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И Не ЗначениеЗаполнено(НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			Текст = НСтр("ru = 'Не указан номер договора о передаче ребенка на воспитание.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерДоговораОПередачеНаВоспитание");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И ЗначениеЗаполнено(НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			Текст = НСтр("ru = 'Не указана дата договора о передаче ребенка на воспитание.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаДоговораОПередачеНаВоспитание");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыЛисткаНетрудоспособности(Отказ)
	Если Не ЗначениеЗаполнено(ДатаЛисткаНетрудоспособности) Тогда
		Текст = НСтр("ru = 'Не указана дата выдачи листка нетрудоспособности.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаЛисткаНетрудоспособности");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НомерЛисткаНетрудоспособности) Тогда
		Текст = НСтр("ru = 'Не указан номер листка нетрудоспособности.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерЛисткаНетрудоспособности");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(Отказ)
	Если Не ЗначениеЗаполнено(ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности) Тогда
		Текст = НСтр("ru = 'Не указана дата выдачи справки о постановке на учет в медицинских учреждениях в ранние сроки беременности.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности) Тогда
		Текст = НСтр("ru = 'Не указан номер справки о постановке на учет в медицинских учреждениях в ранние сроки беременности.'");
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыПериодаПростоя(Отказ)
	Если ЗначениеЗаполнено(ПериодПростоя1ДатаНачала) И ЗначениеЗаполнено(ПериодПростоя1ДатаОкончания) Тогда
		Если ПериодПростоя1ДатаНачала > ПериодПростоя1ДатаОкончания Тогда
			Текст = НСтр("ru = 'Неверно указаны даты начала и окончания простоя.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПериодПростоя1ДатаОкончания");
		ИначеЕсли ПериодПростоя1СреднийЗаработок = 0 Тогда
			Текст = НСтр("ru = 'Не указан средний заработок на период простоя.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПериодПростоя1СреднийЗаработок");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодПростоя2ДатаНачала) И ЗначениеЗаполнено(ПериодПростоя2ДатаОкончания) Тогда
		Если ПериодПростоя2ДатаНачала > ПериодПростоя2ДатаОкончания Тогда
			Текст = НСтр("ru = 'Неверно указаны даты начала и окончания простоя.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПериодПростоя2ДатаОкончания");
		ИначеЕсли ПериодПростоя2СреднийЗаработок = 0 Тогда
			Текст = НСтр("ru = 'Не указан средний заработок на период простоя.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПериодПростоя2СреднийЗаработок");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыПериодаТрудовогоДоговора(Отказ)
	Если ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) Или ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
		
		Если ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) И Не ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
			Текст = НСтр("ru = 'Указана дата начала, но не указана дата окончания срочного трудового договора.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаОкончанияТрудовогоДоговораПолучателя");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) И ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
			Текст = НСтр("ru = 'Указана дата окончания, но не указана дата начала срочного трудового договора.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаНачалаТрудовогоДоговораПолучателя");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) И ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
			Если ДатаНачалаТрудовогоДоговораПолучателя > ДатаОкончанияТрудовогоДоговораПолучателя Тогда
				Текст = НСтр("ru = 'Неверно указаны даты начала и окончания срочного трудового договора.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаОкончанияТрудовогоДоговораПолучателя");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ФиксацияВторичныхДанныхВДокументах

Функция ОбъектЗафиксирован() Экспорт
	Реестр = ПрямыеВыплатыПособийСоциальногоСтрахования.РеестрПоЗаявлению(Ссылка);
	Если Реестр = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Не ПрямыеВыплатыПособийСоциальногоСтрахования.СтатусПозволяетРедактироватьДокумент(Реестр.СтатусДокумента);
КонецФункции

Функция ОбновитьВторичныеДанныеДокумента() Экспорт
	Если ОбъектЗафиксирован() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Модифицирован = Ложь;
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Метаданные().ПолноеИмя());
	
	// Переход на новую версию (в случае, если документ еще не отработан отложенным обработчиком обновления).
	Если ВерсияДокумента < Менеджер.АктуальнаяВерсия() Тогда
		Менеджер.ОбновитьДокумент(ЭтотОбъект);
		Модифицирован = Истина;
	КонецЕсли;
	
	// Обновление реквизитов шапки.
	ПараметрыФиксации = Менеджер.ПараметрыФиксацииВторичныхДанных(ЭтотОбъект);
	РеквизитыДокумента = Новый Структура;
	
	// Районный коэффициент может быть получен из документа-основания, подразделения сотрудника и организации.
	// Источники перечислены в порядке убывания приоритета.
	РайонныйКоэффициентЗаполненИзОснования = Ложь;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		ЗаполнитьДанныеДокументаОснования(РеквизитыДокумента, РайонныйКоэффициентЗаполненИзОснования);
		Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации) Тогда
			Модифицирован = Истина;
		КонецЕсли;
		РеквизитыДокумента.Очистить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ЗаполнитьДанныеОрганизации(ПараметрыФиксации, РеквизитыДокумента, РайонныйКоэффициентЗаполненИзОснования);
		Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации) Тогда
			Модифицирован = Истина;
		КонецЕсли;
		РеквизитыДокумента.Очистить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		ЗаполнитьДанныеСотрудника(ПараметрыФиксации, РеквизитыДокумента, РайонныйКоэффициентЗаполненИзОснования);
		Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации) Тогда
			Модифицирован = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресПолучателяРегистрации) Тогда
		ТипАдреса = Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица;
		ТекстОшибки = Неопределено;
		ОписаниеАдреса = УчетПособийСоциальногоСтрахования.ОписаниеАдреса(АдресПолучателяРегистрации, ТипАдреса, ТекстОшибки);
		РеквизитыДокумента = Новый Структура("АдресПолучателяРегистрацииИдентификаторФИАС, АдресПолучателяРегистрацииКодКЛАДР");
		Если ОписаниеАдреса = Неопределено Тогда
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Неопределено, ТекстОшибки, "АдресПолучателяРегистрации");
		Иначе
			РеквизитыДокумента.АдресПолучателяРегистрацииИдентификаторФИАС = ОписаниеАдреса.ИдентификаторОбъектаФИАС;
			РеквизитыДокумента.АдресПолучателяРегистрацииКодКЛАДР = ?(СтрДлина(ОписаниеАдреса.КодКЛАДР) = 16, "0" + ОписаниеАдреса.КодКЛАДР, ОписаниеАдреса.КодКЛАДР);
		КонецЕсли;
		Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации) Тогда
			Модифицирован = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресПолучателяФактический) Тогда
		ТипАдреса = Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица;
		ТекстОшибки = Неопределено;
		ОписаниеАдреса = УчетПособийСоциальногоСтрахования.ОписаниеАдреса(АдресПолучателяФактический, ТипАдреса, ТекстОшибки);
		РеквизитыДокумента = Новый Структура("АдресПолучателяФактическийИдентификаторФИАС, АдресПолучателяФактическийКодКЛАДР");
		Если ОписаниеАдреса = Неопределено Тогда
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Неопределено, ТекстОшибки, "АдресПолучателяФактический");
		Иначе
			РеквизитыДокумента.АдресПолучателяФактическийИдентификаторФИАС = ОписаниеАдреса.ИдентификаторОбъектаФИАС;
			РеквизитыДокумента.АдресПолучателяФактическийКодКЛАДР = ?(СтрДлина(ОписаниеАдреса.КодКЛАДР) = 16, "0" + ОписаниеАдреса.КодКЛАДР, ОписаниеАдреса.КодКЛАДР);
		КонецЕсли;
		Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации) Тогда
			Модифицирован = Истина;
		КонецЕсли;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура("НаименованиеБанка, БИКБанка");
	ЗаполнитьРеквизитыБанка(ПараметрыФиксации, РеквизитыДокумента);
	Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован;
КонецФункции

Процедура ЗаполнитьДанныеДокументаОснования(РеквизитыДокумента, РайонныйКоэффициентЗаполненИзОснования)
	
	ДанныеДляРасчетаСреднегоЗаработка = Неопределено;
	
	МенеджерОснования = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументОснование);
	МенеджерОснования.ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОснованию(ДокументОснование, ЭтотОбъект, РеквизитыДокумента, ДанныеДляРасчетаСреднегоЗаработка);
	
	Если ДанныеДляРасчетаСреднегоЗаработка <> Неопределено Тогда
		ЗаполнитьРеквизитыРасчетаСреднегоЗаработка(РеквизитыДокумента, ДанныеДляРасчетаСреднегоЗаработка);
	КонецЕсли;
	
	РайонныйКоэффициентЗаполненИзОснования = РеквизитыДокумента.Свойство("РайонныйКоэффициент");
	
	Если Не РеквизитыДокумента.Свойство("Перерасчет") Тогда
		РеквизитыДокумента.Вставить("Перерасчет", Ложь);
		РеквизитыДокумента.Вставить("КодПричиныПерерасчета", "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыРасчетаСреднегоЗаработка(РеквизитыДокумента, ДанныеДляРасчетаСреднегоЗаработка)
	
	ПараметрыРасчета = ДанныеДляРасчетаСреднегоЗаработка.ПараметрыРасчета;
	ДанныеРасчетаСреднего = ДанныеДляРасчетаСреднегоЗаработка.ДанныеРасчетаСреднего;
	
	РеквизитыДокумента.Вставить("ДатаНачалаРасчетногоПериода", 		ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаНачало);
	РеквизитыДокумента.Вставить("ДатаОкончанияРасчетногоПериода", 	ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание);
	РеквизитыДокумента.Вставить("ПервыйРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[0]);
	РеквизитыДокумента.Вставить("ВторойРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[1]);
	РеквизитыДокумента.Вставить("РайонныйКоэффициент", 				ПараметрыРасчета.РайонныйКоэффициентРФ);
	РеквизитыДокумента.Вставить("ДоляВремени", 						УчетПособийСоциальногоСтрахованияКлиентСервер.ДоляНеполногоВремени(ПараметрыРасчета));

	Если ЗначениеЗаполнено(ПараметрыРасчета.ДатаНачалаСобытия)
		И ЗначениеЗаполнено(ПараметрыРасчета.ПорядокРасчета) Тогда
		
		ПериодРасчетаСреднего = УчетПособийСоциальногоСтрахованияКлиентСервер.ПериодРасчетаСреднегоЗаработкаФСС(ПараметрыРасчета.ДатаНачалаСобытия, ПараметрыРасчета.ПорядокРасчета);
		
		ПервыйГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаНачала);
		ВторойГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаОкончания);
		
		// Поменять периоды местами, если в действительности заменялся только один из периодов.
		ПоменятьМестами = (ПервыйГодПоДатеСобытия = РеквизитыДокумента.ВторойРасчетныйГод
			Или ВторойГодПоДатеСобытия = РеквизитыДокумента.ПервыйРасчетныйГод);
		
		РеквизитыДокумента.Вставить("ПервыйЗамененныйГод", ?(ПоменятьМестами, ВторойГодПоДатеСобытия, ПервыйГодПоДатеСобытия));
		РеквизитыДокумента.Вставить("ВторойЗамененныйГод", ?(ПоменятьМестами, ПервыйГодПоДатеСобытия, ВторойГодПоДатеСобытия));
		
		Если РеквизитыДокумента.ПервыйЗамененныйГод <> РеквизитыДокумента.ПервыйРасчетныйГод
			Или РеквизитыДокумента.ВторойЗамененныйГод <> РеквизитыДокумента.ВторойРасчетныйГод Тогда
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Истина);
		Иначе
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	УчитываемыхДнейВКалендарныхГодах = УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыхДнейВКалендарныхГодахФСС(ПараметрыРасчета, ДанныеРасчетаСреднего);
	РеквизитыДокумента.Вставить("ЧислоКалендарныхДнейРасчетногоПериода", УчитываемыхДнейВКалендарныхГодах);
	
	СтрокаПоГоду = УчетПособийСоциальногоСтрахованияКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ПервыйРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	Иначе
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", 0);
	КонецЕсли;
	
	СтрокаПоГоду = УчетПособийСоциальногоСтрахованияКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ВторойРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	Иначе
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", 0);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыБанка(ПараметрыФиксации, РеквизитыДокумента)
	Если ЗначениеЗаполнено(Банк) Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Банк, "Наименование, Код");
		РеквизитыДокумента.НаименованиеБанка = ЗначенияРеквизитов.Наименование;
		РеквизитыДокумента.БИКБанка          = ЗначенияРеквизитов.Код;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьДанныеСотрудника(ПараметрыФиксации, РеквизитыДокумента, РайонныйКоэффициентЗаполненИзОснования)
	НеобходимыеКадровыеДанныеСотрудника = Новый Массив;
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ФизическоеЛицо");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Фамилия");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Имя");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Отчество");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументВид");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументСерия");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументНомер");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументДатаВыдачи");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументСрокДействия");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументКемВыдан");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДатаРождения");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ИНН");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("СтраховойНомерПФР");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("АдресМестаПроживания");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("АдресПоПрописке");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ТелефонДомашний");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("СтатусНалогоплательщика");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Страна");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("КоличествоСтавок");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ВидЗанятости");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ТарифнаяСтавка");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Подразделение");
	
	ТЗКадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), НеобходимыеКадровыеДанныеСотрудника, Дата);
	Если ТЗКадровыеДанныеСотрудника.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КадровыеДанныеСотрудника = ТЗКадровыеДанныеСотрудника[0];
	ФизическоеЛицо = КадровыеДанныеСотрудника.ФизическоеЛицо;
	// ФИО
	РеквизитыДокумента.Вставить("ФамилияПолучателя",КадровыеДанныеСотрудника.Фамилия);
	РеквизитыДокумента.Вставить("ИмяПолучателя", КадровыеДанныеСотрудника.Имя);
	РеквизитыДокумента.Вставить("ОтчествоПолучателя", КадровыеДанныеСотрудника.Отчество);
	РеквизитыДокумента.Вставить("ФамилияЗаявителя", КадровыеДанныеСотрудника.Фамилия);
	РеквизитыДокумента.Вставить("ИмяЗаявителя", КадровыеДанныеСотрудника.Имя);
	РеквизитыДокумента.Вставить("ОтчествоЗаявителя", КадровыеДанныеСотрудника.Отчество);
	// ИНН, СНИЛС, Дата рождения
	РеквизитыДокумента.Вставить("ИННПолучателя", КадровыеДанныеСотрудника.ИНН);
	РеквизитыДокумента.Вставить("СНИЛСПолучателя", КадровыеДанныеСотрудника.СтраховойНомерПФР);
	РеквизитыДокумента.Вставить("СтатусНалогоплательщикаПолучателя", КадровыеДанныеСотрудника.СтатусНалогоплательщика);
	РеквизитыДокумента.Вставить("ДатаРожденияПолучателя", КадровыеДанныеСотрудника.ДатаРождения);
	РеквизитыДокумента.Вставить("Гражданство", КадровыеДанныеСотрудника.Страна);
	// Удостоверение личности
	РеквизитыДокумента.Вставить("ВидДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументВид);
	РеквизитыДокумента.Вставить("СерияДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументСерия);
	РеквизитыДокумента.Вставить("НомерДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументНомер);
	РеквизитыДокумента.Вставить("ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументДатаВыдачи);
	РеквизитыДокумента.Вставить("ДатаДействияДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументСрокДействия);
	РеквизитыДокумента.Вставить("КемВыданДокументУдостоверяющийЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументКемВыдан);
	// Адреса
	РеквизитыДокумента.Вставить("АдресПолучателяФактический", КадровыеДанныеСотрудника.АдресМестаПроживания);
	РеквизитыДокумента.Вставить("АдресПолучателяРегистрации", КадровыеДанныеСотрудника.АдресПоПрописке);
	РеквизитыДокумента.Вставить("ТелефонПолучателя", КадровыеДанныеСотрудника.ТелефонДомашний);
	// Данные о сотруднике
	РеквизитыДокумента.Вставить("ДолжностнойОклад", КадровыеДанныеСотрудника.ТарифнаяСтавка);
	РеквизитыДокумента.Вставить("ТипЗанятостиРаботника", КадровыеДанныеСотрудника.ВидЗанятости);
	
	Если Не РайонныйКоэффициентЗаполненИзОснования И ЗначениеЗаполнено(КадровыеДанныеСотрудника.Подразделение) Тогда
		РеквизитыДокумента.Вставить("РайонныйКоэффициент", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КадровыеДанныеСотрудника.Подразделение, "РайонныйКоэффициентРФ"));
	КонецЕсли;
	
	// Документ на проживание
	ДанныеДокументаНаПроживание = ПрямыеВыплатыПособийСоциальногоСтрахования.ДокументРазрешениеНаПроживаниеФизическогоЛица(ФизическоеЛицо, Дата);
	РеквизитыДокумента.Вставить("ВидДокументаНаПроживание", ДанныеДокументаНаПроживание.ВидДокумента);
	РеквизитыДокумента.Вставить("СерияДокументаНаПроживание", ДанныеДокументаНаПроживание.Серия);
	РеквизитыДокумента.Вставить("НомерДокументаНаПроживание", ДанныеДокументаНаПроживание.Номер);
	РеквизитыДокумента.Вставить("ДатаВыдачиДокументаНаПроживание", ДанныеДокументаНаПроживание.ДатаВыдачи);
	
	// Банк и номер счета.
	СчетЗарплаты = ПрямыеВыплатыПособийСоциальногоСтрахования.БанковскиеРеквизитыСотрудникаДляВыплатыЗарплаты(Дата, Организация, Сотрудник, ФизическоеЛицо);
	Если ЗначениеЗаполнено(СчетЗарплаты.НомерСчета) Тогда
		РеквизитыДокумента.Вставить("Банк",                 СчетЗарплаты.Банк);
		РеквизитыДокумента.Вставить("НомерЛицевогоСчета",   СчетЗарплаты.НомерСчета);
	КонецЕсли;
	
	// Карта МИР и способ выплаты пособия.
	ПоследняяКартаМИР = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.ПоследняяКартаМИР(Сотрудник, Дата, Ссылка);
	Если ЗначениеЗаполнено(ПоследняяКартаМИР) Тогда
		РеквизитыДокумента.Вставить("КартаМИР", ПоследняяКартаМИР);
		РеквизитыДокумента.Вставить("СпособВыплатыПособия", Перечисления.СпособыВыплатыПособия.НаКартуМИР);
	ИначеЕсли ЗначениеЗаполнено(СчетЗарплаты.НомерСчета) Тогда
		РеквизитыДокумента.Вставить("СпособВыплатыПособия", Перечисления.СпособыВыплатыПособия.ЧерезБанк);
	Иначе
		РеквизитыДокумента.Вставить("СпособВыплатыПособия", Перечисления.СпособыВыплатыПособия.ПочтовымПереводом);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОснование) Тогда
		ДоляРабочегоВремениСотрудника = ПрямыеВыплатыПособийСоциальногоСтрахования.ДоляРабочегоВремениСотрудника(Сотрудник, Дата);
		РеквизитыДокумента.Вставить("ДоляВремени", ДоляРабочегоВремениСотрудника);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьДанныеОрганизации(ПараметрыФиксации, РеквизитыДокумента, РайонныйКоэффициентЗаполненИзОснования)
	ИменаЗаполняемыхПолей = "НаименованиеОрганизации, НаименованиеТерриториальногоОрганаФСС,
		|УполномоченныйПоПрямымВыплатамФСС, ДолжностьУполномоченногоПоПрямымВыплатамФСС, ОснованиеПодписиУполномоченногоПоПрямымВыплатамФСС, ТелефонУполномоченногоПредставителя";
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(РеквизитыДокумента, Новый Структура(ИменаЗаполняемыхПолей), Ложь);
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "НаименованиеТерриториальногоОрганаФСС, РайонныйКоэффициентРФ, НаименованиеСокращенное");
	РеквизитыДокумента.НаименованиеТерриториальногоОрганаФСС = РеквизитыОрганизации.НаименованиеТерриториальногоОрганаФСС;
	РеквизитыДокумента.НаименованиеОрганизации               = РеквизитыОрганизации.НаименованиеСокращенное;
	Если Не РайонныйКоэффициентЗаполненИзОснования Тогда
		РеквизитыДокумента.Вставить("РайонныйКоэффициент", РеквизитыОрганизации.РайонныйКоэффициентРФ);
	КонецЕсли;
	
	СведенияОПодписях = ПодписиДокументов.СведенияОПодписяхПоУмолчаниюДляОбъектаМетаданных(Метаданные(), Организация);
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, СведенияОПодписях);
	
	ТелефоныОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Организация,
		Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации,
		?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()),
		Ложь);
	Если ТелефоныОрганизации.Количество() > 0 Тогда
		РеквизитыДокумента.ТелефонУполномоченногоПредставителя = ТелефоныОрганизации[0].Значение;
	Иначе
		РеквизитыДокумента.ТелефонУполномоченногоПредставителя = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
