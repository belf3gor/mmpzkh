
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок;
		Объект.ВерсияДокумента = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.АктуальнаяВерсия();
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный", "Объект.Организация", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		
		Объект.ОтношениеКОсобойЗоне = Перечисления.ОтношениеКОсобойЗоне.Нет;
		
		ПараметрДокументОснование = Неопределено;
		ПараметрИдентификаторСтрокиОснования = Неопределено;
		Если Параметры.Свойство("Основание", ПараметрДокументОснование) Тогда
			Объект.ДокументОснование = ПараметрДокументОснование;
			Если Параметры.Свойство("ИдентификаторСтроки", ПараметрИдентификаторСтрокиОснования) Тогда
				Объект.ИдентификаторСтрокиОснования = ПараметрИдентификаторСтрокиОснования;
			КонецЕсли;
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере("Объект");
	КонецЕсли;
	
	ЦветСтиляПоясняющийТекст		= ЦветаСтиля.ПоясняющийТекст;
	ЦветСтиляПоясняющийОшибкуТекст 	= ЦветаСтиля.ПоясняющийОшибкуТекст;
	ЦветСтиляЦветТекстаПоля 		= ЦветаСтиля.ЦветТекстаПоля;
	
	ПрямыеВыплатыПособийСоциальногоСтрахования.КодыПричинИсправления(Элементы.КодПричиныПерерасчета.СписокВыбора);
	
	ПорядоРасчетаСреднийЗаработок = (Объект.ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПорядокРасчетаСреднегоЗаработка", "Видимость", Не ПорядоРасчетаСреднийЗаработок);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СчитатьПоПравилам2010Года", "Видимость", Объект.СчитатьПоПравилам2010Года);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// До проверки объекта создаем его, дозаполняем и сами проверяем.
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ТекущийОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		ОбработатьСообщенияПользователю();
	КонецЕсли;
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Перед записью переадресуем сообщения с полей объекта на поля формы.
	Сообщения = ПолучитьСообщенияПользователю(Ложь);
	Для Каждого Сообщение Из Сообщения Цикл
		Сообщение.КлючДанных = Объект.Ссылка;
		Сообщение.ПутьКДанным = "Объект";
		Отказ = Истина;
	КонецЦикла;
	
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СохранитьРеквизитыФормыФикс(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Ложь);
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьОбъектЗафиксирован(ЭтотОбъект);
	ФиксацияВторичныхДанныхВДокументахФормы.ЗаполнитьРеквизитыФормыФикс(ЭтотОбъект, ЭтотОбъект.Объект);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПослеЗаписиНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		СтруктураОповещения = Новый Структура("Ссылка, Дата, Номер, Основание, ИдентификаторСтроки");
		СтруктураОповещения.Ссылка = Объект.Ссылка;
		СтруктураОповещения.Дата = Объект.Дата;
		СтруктураОповещения.Номер = Объект.Номер;
		СтруктураОповещения.Основание = Объект.ДокументОснование;
		СтруктураОповещения.ИдентификаторСтроки = Объект.ИдентификаторСтрокиОснования;
		
		Оповестить("ЗаписаноЗаявлениеСотрудникаНаВыплатуПособия", СтруктураОповещения, ЭтотОбъект.ВладелецФормы);
	КонецЕсли;
	Оповестить("Запись_ЗаявлениеСотрудникаНаВыплатуПособия", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	СотрудникПриИзмененииНаСервере("СотрудникПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура ПервичныйДокументПриИзменении(Элемент)
	Объект.ИдентификаторСтрокиОснования = Неопределено;
	ПервичныйДокументПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РебенокЗаКоторымОсуществляетсяУходПриИзменении(Элемент)
	ПервичныйДокументПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучательНеЯвляетсяЗаявителемПриИзменении(Элемент)
	УстановитьВидимостьГруппыЗаявитель(Элементы, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВидПособияПриИзменении(Элемент)
	ВидПособияПриИзмененииНаСервере()
КонецПроцедуры

&НаКлиенте
Процедура СпособВыплатыПособияПриИзменении(Элемент)
	УстановитьТекущуюСтраницуВыплатыПособий(ЭтотОбъект);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "СпособВыплатыПособия");
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	БанкПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыФизическихЛицСерияПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеСерияДокументаФизическогоЛица(Объект.ВидДокументаУдостоверяющегоЛичностьПолучателя, Объект.СерияДокументаУдостоверяющегоЛичностьПолучателя, Элемент, ЭтотОбъект);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "СерияДокументаУдостоверяющегоЛичностьПолучателя");
КонецПроцедуры

&НаКлиенте
Процедура ДокументыФизическихЛицНомерПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеНомерДокументаФизическогоЛица(Объект.ВидДокументаУдостоверяющегоЛичностьПолучателя, Объект.НомерДокументаУдостоверяющегоЛичностьПолучателя, Элемент, ЭтотОбъект);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "НомерДокументаУдостоверяющегоЛичностьПолучателя");
КонецПроцедуры

&НаКлиенте
Процедура ДокументНаПроживаниеСерияПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеСерияДокументаФизическогоЛица(Объект.ВидДокументаНаПроживание, Объект.СерияДокументаНаПроживание, Элемент, ЭтотОбъект);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "СерияДокументаНаПроживание");
КонецПроцедуры

&НаКлиенте
Процедура ДокументНаПроживаниеНомерПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеНомерДокументаФизическогоЛица(Объект.ВидДокументаНаПроживание, Объект.НомерДокументаНаПроживание, Элемент, ЭтотОбъект);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "НомерДокументаНаПроживание");
КонецПроцедуры

&НаКлиенте
Процедура СправкаОНеполученииПособияПриИзменении(Элемент)
	УстановитьТекущуюСтраницуСправкаОНеполученииПособия(Элементы, Объект.СправкаОНеполученииПособия)
КонецПроцедуры

&НаКлиенте
Процедура СправкаОНеполученииПособияЕжемесячноеПособиеПриИзменении(Элемент)
	УстановитьТекущуюСтраницуСправкаОНеполученииПособияЕжемесячноеПособие(Элементы, Объект.СправкаОНеполученииПособия)   
КонецПроцедуры

&НаКлиенте
Процедура ОтношениеКОсобойЗонеПриИзменении(Элемент)
	НастроитьОтношениеКОсобойЗоне(Элементы, Объект)
КонецПроцедуры

&НаКлиенте
Процедура ПорядокРасчетаСреднегоЗаработкаПриИзменении(Элемент)
	УстановитьТекущуюСтраницуРасчетСреднегоЗаработка(Элементы,Объект.ПорядокРасчетаСреднегоЗаработка);
КонецПроцедуры

&НаКлиенте
Процедура СчитатьПоПравилам2010ГодаПриИзменении(Элемент)
	УстановитьТекущуюСтраницуПравилаРасчетаСреднего(Элементы, Объект.СчитатьПоПравилам2010Года);
КонецПроцедуры

&НаКлиенте
Процедура ЗамененыКалендарныеГодыРасчетаСреднегоЗаработкаПриИзменении(Элемент)
	УстановитьТекущуюСтраницуЗаменаКалендарныхГодов(Элементы, Объект.ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка");
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеТерриториальногоОрганаФССПриИзменении(Элемент)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "НаименованиеТерриториальногоОрганаФСС");
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеФактическогоАдресаПолучателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПредставлениеФактическогоАдресаПолучателяЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица"),
		Объект.АдресПолучателяФактический);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеФактическогоАдресаПолучателяЗавершениеВыбора(РезультатВыбора, ПараметрыОповещения) Экспорт 
	Если ТипЗнч(РезультатВыбора) = Тип("Структура")Тогда
		Объект.АдресПолучателяФактический = РезультатВыбора.КонтактнаяИнформация;
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "АдресПолучателяФактический");
		ОбновитьВторичныеДанныеДокумента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеАдресаРегистрацииПолучателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПредставлениеАдресаРегистрацииПолучателяЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица"),
		Объект.АдресПолучателяРегистрации);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеАдресаРегистрацииПолучателяЗавершениеВыбора(РезультатВыбора, ПараметрыОповещения) Экспорт 
	Если ТипЗнч(РезультатВыбора) = Тип("Структура") Тогда
		Объект.АдресПолучателяРегистрации = РезультатВыбора.КонтактнаяИнформация;
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "АдресПолучателяРегистрации");
		ОбновитьВторичныеДанныеДокумента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТелефонаПолучателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПредставлениеТелефонаПолучателяЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица"),
		Объект.ТелефонПолучателя);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТелефонаПолучателяЗавершениеВыбора(РезультатВыбора, ПараметрыОповещения) Экспорт 
	Если ТипЗнч(РезультатВыбора) = Тип("Структура") Тогда
		Объект.ТелефонПолучателя = РезультатВыбора.КонтактнаяИнформация;
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "ТелефонПолучателя");
		ОбновитьПоляВводаКонтактнойИнформации();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТелефонаУполномоченногоПредставителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПредставлениеТелефонаУполномоченногоПредставителяЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"),
		Объект.ТелефонУполномоченногоПредставителя);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТелефонаУполномоченногоПредставителяЗавершениеВыбора(РезультатВыбора, ПараметрыОповещения) Экспорт 
	Если ТипЗнч(РезультатВыбора) = Тип("Структура") Тогда
		Объект.ТелефонУполномоченногоПредставителя = РезультатВыбора.КонтактнаяИнформация;
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "ТелефонУполномоченногоПредставителя");
		ОбновитьПоляВводаКонтактнойИнформации();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КартаМИРПриИзменении(Элемент)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "КартаМИР");
КонецПроцедуры

&НаКлиенте
Процедура ПерерасчетПриИзменении(Элемент)
	ПерерасчетПриИзмененииСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_ПояснениеНажатие(Элемент, СтандартнаяОбработка = Ложь)

	СотрудникиКлиент.ПояснениеНажатие(Элемент, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсеИсправления(Команда) 
	ОтменитьВсеИсправленияНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИсправленияСотрудника(Команда)
	СотрудникПриИзмененииНаСервере("ОтменитьИсправленияСотрудника");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ПодписиДокументов

// ЗарплатаКадрыПодсистемы.ПодписиДокументов
&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементПриИзменении(Элемент)
	ПодписиДокументовКлиент.ПриИзмененииПодписывающегоЛица(ЭтотОбъект, Элемент.Имя);
	Если Элемент.Имя = ПодписиДокументовКлиентСервер.ИмяЭлементаФормыПоРолиПодписанта("УполномоченныйПоПрямымВыплатамФСС") Тогда
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "УполномоченныйПоПрямымВыплатамФСС");
	КонецЕсли;
	ОбновитьЭлементыПодписей();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементНажатие(Элемент)
	ПодписиДокументовКлиент.РасширеннаяПодсказкаНажатие(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры
// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов

#КонецОбласти

#Область ФиксацияВторичныхДанныхВДокументах

&НаСервере
Функция ПараметрыФиксацииВторичныхДанных() Экспорт
	ПараметрыФиксации = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.ПараметрыФиксацииВторичныхДанных(РеквизитФормыВЗначение("Объект"));
	ПараметрыФиксации.Вставить("ОписаниеФормы", ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеФормы());
	
	ОписаниеЭлементовФормы = Новый Соответствие;
	ОписаниеПутиКРеквизитамОбъекта = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	ОписаниеПутиКРеквизитамОбъекта.ПрефиксПути = "Объект";
	Для Каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксации.ОписаниеФиксацииРеквизитов Цикл
		ОписаниеЭлементовФормы.Вставить(ОписаниеФиксацииРеквизита.Ключ, ОписаниеПутиКРеквизитамОбъекта);
	КонецЦикла;
	
	// Адреса редактируется через реквизит формы, поэтому для них указываются пустой префикс пути к объекту.
	ОписаниеПутиКРеквизитамФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	ОписаниеЭлементовФормы.Вставить("ПредставлениеФактическогоАдресаПолучателя", ОписаниеПутиКРеквизитамФормы);
	ОписаниеЭлементовФормы.Вставить("ПредставлениеАдресаРегистрацииПолучателя", ОписаниеПутиКРеквизитамФормы);
	ОписаниеЭлементовФормы.Вставить("ПредставлениеТелефонаПолучателя", ОписаниеПутиКРеквизитамФормы);
	ОписаниеЭлементовФормы.Вставить("ПредставлениеТелефонаУполномоченногоПредставителя", ОписаниеПутиКРеквизитамФормы);
	
	ПараметрыФиксации.ОписаниеФормы.ОписаниеЭлементовФормы = ОписаниеЭлементовФормы;
	Возврат ПараметрыФиксации;
КонецФункции

&НаСервере
Функция ФиксацияБыстрыйПоискРеквизитов()
	БыстрыйПоискРеквизитов = Новый Соответствие; // Ключ - имя элемента, значение - имя реквизита.
	ПараметрыФиксации = ЭтотОбъект["ПараметрыФиксацииВторичныхДанных"];
	Для Каждого КлючИЗначение Из ПараметрыФиксации.ОписаниеФиксацииРеквизитов Цикл
		ИмяРеквизита = КлючИЗначение.Значение.ИмяРеквизита;
		// Поиск элементов по имени.
		Если Элементы.Найти(ИмяРеквизита) <> Неопределено Тогда
			БыстрыйПоискРеквизитов.Вставить(ИмяРеквизита, ИмяРеквизита);
		КонецЕсли;
		// Поиск элементов со стандартными суффиксами.
		Если Элементы.Найти(ИмяРеквизита + "ЕжемесячноеПособие") <> Неопределено Тогда
			БыстрыйПоискРеквизитов.Вставить(ИмяРеквизита + "ЕжемесячноеПособие", ИмяРеквизита);
		КонецЕсли;
		Если Элементы.Найти(ИмяРеквизита + "БезЗамены") <> Неопределено Тогда
			БыстрыйПоискРеквизитов.Вставить(ИмяРеквизита + "БезЗамены", ИмяРеквизита);
		КонецЕсли;
	КонецЦикла;
	
	// Добавление элементов с нестандартными суффиксами.
	БыстрыйПоискРеквизитов.Вставить("ДатаЛисткаНетрудоспособностиВставшимНаУчет", "ДатаЛисткаНетрудоспособности");
	БыстрыйПоискРеквизитов.Вставить("НомерЛисткаНетрудоспособностиВставшимНаУчет", "НомерЛисткаНетрудоспособности");
	БыстрыйПоискРеквизитов.Вставить("ДатаВыдачиДокументаНаПроживание", "ДатаВыдачиДокументаНаПроживание");
	БыстрыйПоискРеквизитов.Вставить("ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности",  "ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	БыстрыйПоискРеквизитов.Вставить("НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности", "НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	БыстрыйПоискРеквизитов.Вставить("ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременностиОтдельно",  "ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	БыстрыйПоискРеквизитов.Вставить("НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременностиОтдельно", "НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	
	Возврат БыстрыйПоискРеквизитов;
КонецФункции

&НаСервере
Процедура ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения(ОснованиеЗаполнения, ТекущаяСтрока = 0)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СброситьФиксациюИзмененийРеквизитовПоОснованиюЗаполнения(ЭтотОбъект, ОснованиеЗаполнения, ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ОбновитьВторичныеДанныеДокумента()
	Если ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбъектФормыЗафиксирован(ЭтотОбъект) Тогда
		ОбновитьПоляВводаКонтактнойИнформации();
		Возврат;
	КонецЕсли;
	
	ОписанияТЧ = ЭтотОбъект["ПараметрыФиксацииВторичныхДанных"]["ОписанияТЧ"];
	Для Каждого ОписаниеТЧ Из ОписанияТЧ Цикл
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗаполнитьИдентификаторыФиксТЧ(ЭтотОбъект.Объект[ОписаниеТЧ.Ключ]);
	КонецЦикла;
	Документ = РеквизитФормыВЗначение("Объект");
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СохранитьРеквизитыФормыФикс(ЭтотОбъект, Документ);
	
	Если Документ.ОбновитьВторичныеДанныеДокумента() Тогда
		Если ТолькоПросмотр Или Не ПравоДоступа("Изменение", Документ.Метаданные()) Тогда
			ФиксацияВторичныхДанныхВДокументахФормы.ВывестиПредупреждениеОНаличииИзмененийВИсходныхДанныхКоторыеНельзяПрименить(ЭтотОбъект);
		Иначе
			Если Не Документ.ЭтоНовый() Тогда
				ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Истина);
			КонецЕсли;
			ЗначениеВРеквизитФормы(Документ, "Объект");
		КонецЕсли;
	КонецЕсли;
	
	ФиксацияВторичныхДанныхВДокументахФормы.ЗаполнитьРеквизитыФормыФикс(ЭтотОбъект, Объект);
	
	ПодписиДокументовКлиентСервер.УстановитьПредставлениеПодписей(ЭтотОбъект);
	ОбновитьВидимостьДоступность();
	ОбновитьПоляВводаКонтактнойИнформации();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(Элемент, СтандартнаяОбработка = Ложь) Экспорт
	ОписаниеЭлементов = ФиксацияБыстрыйПоискРеквизитов();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(ЭтотОбъект, Элемент, ОписаниеЭлементов);
КонецПроцедуры

&НаСервере
Функция ОбъектЗафиксирован() Экспорт
	Возврат РеквизитФормыВЗначение("Объект").ОбъектЗафиксирован();
КонецФункции

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуВыплатыПособий(Форма)
	Элементы = Форма.Элементы;
	СпособВыплатыПособия = Форма.Объект.СпособВыплатыПособия;
	Если СпособВыплатыПособия = ПредопределенноеЗначение("Перечисление.СпособыВыплатыПособия.НаКартуМИР") Тогда
		Элементы.СтраницыСпособВыплатыПособия.ТекущаяСтраница = Элементы.СтраницаВыплатитьНаКартуМИР;
	ИначеЕсли СпособВыплатыПособия = ПредопределенноеЗначение("Перечисление.СпособыВыплатыПособия.ЧерезБанк") Тогда
		Элементы.СтраницыСпособВыплатыПособия.ТекущаяСтраница = Элементы.СтраницаВыплатитьЧерезБанк;
	ИначеЕсли СпособВыплатыПособия = ПредопределенноеЗначение("Перечисление.СпособыВыплатыПособия.ПочтовымПереводом") Тогда
		Элементы.СтраницыСпособВыплатыПособия.ТекущаяСтраница = Элементы.СтраницаВыплатитьПочтовымПереводом;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуПредоставляемыхДокументов(Элементы, ВидПособия)
	Если ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаЕдиновременноеПособиеПриРождении;	
	ИначеЕсли ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаЕжемесячноеПособиеПоУходу;	
	ИначеЕсли ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаПособиеПоВременнойНетрудоспособностиВставшимНаУчет;	
	ИначеЕсли ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаПособиеВставшимНаУчетВРанниеСроки;	
	Иначе
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаПособиеПоВременнойНетрудоспособности;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуСправкаОНеполученииПособияЕжемесячноеПособие(Элементы, СправкаОНеполученииПособия)
	Если СправкаОНеполученииПособия = ПредопределенноеЗначение("Перечисление.РодителиПредоставившиеСправкуОНеполученииПособия.Мать") Тогда
		Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ПодчиненныеЭлементы.СтраницаСправкаОтМатериОНеполученииПособияЕжемесячноеПособие;
	ИначеЕсли СправкаОНеполученииПособия = ПредопределенноеЗначение("Перечисление.РодителиПредоставившиеСправкуОНеполученииПособия.ОбаРодителя") Тогда
		Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ПодчиненныеЭлементы.СтраницаСправкаОтОбоихОНеполученииПособияЕжемесячноеПособие;	
	Иначе
		Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ПодчиненныеЭлементы.СтраницаСправкаОтОтцаОНеполученииПособияЕжемесячноеПособие;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуСправкаОНеполученииПособия(Элементы, СправкаОНеполученииПособия)
	Если СправкаОНеполученииПособия = ПредопределенноеЗначение("Перечисление.РодителиПредоставившиеСправкуОНеполученииПособия.Мать") Тогда
		Элементы.СтраницыСправкиОНеполученииПособия.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособия.ПодчиненныеЭлементы.СтраницаСправкаОтМатериОНеполученииПособия;
	Иначе
		Элементы.СтраницыСправкиОНеполученииПособия.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособия.ПодчиненныеЭлементы.СтраницаСправкаОтОтцаОНеполученииПособия;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуРасчетСреднегоЗаработка(Элементы, ПорядокРасчетаСреднегоЗаработка)
	Если ПорядокРасчетаСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок") Тогда
		Элементы.СтраницыРасчетСреднегоЗаработка.ТекущаяСтраница = Элементы.СтраницыРасчетСреднегоЗаработка.ПодчиненныеЭлементы.СтраницаСреднийЗаработок;
	ИначеЕсли ПорядокРасчетаСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.ИсходяИзТарифнойСтавки") Тогда
		Элементы.СтраницыРасчетСреднегоЗаработка.ТекущаяСтраница = Элементы.СтраницыРасчетСреднегоЗаработка.ПодчиненныеЭлементы.СтраницаТарифнаяСтавка;
	Иначе 
		Элементы.СтраницыРасчетСреднегоЗаработка.ТекущаяСтраница = Элементы.СтраницыРасчетСреднегоЗаработка.ПодчиненныеЭлементы.СтраницаМРОТ;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуПравилаРасчетаСреднего(Элементы, СчитатьПоПравилам2010Года)
	Если СчитатьПоПравилам2010Года Тогда
		Элементы.СтраницыПравилаРасчетаСреднего.ТекущаяСтраница = Элементы.СтраницыПравилаРасчетаСреднего.ПодчиненныеЭлементы.СтраницаПоПравилам2010;
	Иначе 
		Элементы.СтраницыПравилаРасчетаСреднего.ТекущаяСтраница = Элементы.СтраницыПравилаРасчетаСреднего.ПодчиненныеЭлементы.СтраницаПоПравилам2011;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуЗаменаКалендарныхГодов(Элементы, ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка)
	Если ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка Тогда
		Элементы.СтраницыЗаменаКалендарныхГодов.ТекущаяСтраница = Элементы.СтраницыЗаменаКалендарныхГодов.ПодчиненныеЭлементы.СтраницаКалендарныеГодыЗаменены;
	Иначе 
		Элементы.СтраницыЗаменаКалендарныхГодов.ТекущаяСтраница = Элементы.СтраницыЗаменаКалендарныхГодов.ПодчиненныеЭлементы.СтраницаКалендарныеГодыНеЗаменены;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьТипДокументаОснования()
	
	Тип = ПрямыеВыплатыПособийСоциальногоСтрахования.ТипДокументаОснованияЗаявленияСотрудникаНаВыплатуПособия(Объект);
	Если ТипЗнч(Объект.ДокументОснование) <> Тип Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип);
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		Объект.ДокументОснование = ОписаниеТипов.ПривестиЗначение();
	КонецЕсли;
	
	СвязиПараметровВыбораПервичногоДокумента = Новый Массив;
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		ЗначениеСвязиПоСотруднику = "Объект.Сотрудник";
		Если Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
			ЗначениеСвязиПоСотруднику = "Объект.ФизическоеЛицо";
		КонецЕсли;
		СвязиПараметровВыбораПервичногоДокумента.Добавить(Новый СвязьПараметраВыбора("Отбор.Сотрудник", ЗначениеСвязиПоСотруднику));
	КонецЕсли;
	Элементы.ДокументОснование.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбораПервичногоДокумента);
	
	ПараметрыВыбораПервичногоДокумента = Новый Массив;
	Если Объект.ВидПособия <> Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ПараметрыВыбораПервичногоДокумента.Добавить(Новый ПараметрВыбора("Отбор.ПособиеВыплачиваетсяФСС", Истина));
	КонецЕсли;
	Элементы.ДокументОснование.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПервичногоДокумента);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПолеРебенокЗаКоторымОсуществляетсяУход()
	ЭтоУходЗаРебенком = (Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком);
	Элементы.РебенокЗаКоторымОсуществляетсяУход.Видимость = ЭтоУходЗаРебенком;
	Если ЭтоУходЗаРебенком Тогда
		СписокВыбора = Элементы.РебенокЗаКоторымОсуществляетсяУход.СписокВыбора;
		СписокВыбора.Очистить();
		
		Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
			СписокДетей = ПрямыеВыплатыПособийСоциальногоСтрахования.СписокДетейПоУходуЗаКоторымиПредоставленОтпуск(Объект.ДокументОснование);
			Для Каждого Ребенок Из СписокДетей Цикл
				СписокВыбора.Добавить(Ребенок.Значение, Ребенок.Представление);
			КонецЦикла;
		КонецЕсли;
		
		Если СписокВыбора.Количество() = 0 Тогда
			Подсказка = НСтр("ru = 'В документе не заполнены сведения о детях, за которыми осуществляется уход'");
		Иначе
			Подсказка = НСтр("ru = 'Ребенок, за которым осуществляется уход'");
		КонецЕсли;
		Элементы.РебенокЗаКоторымОсуществляетсяУход.Подсказка = Подсказка;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьДокументаОснования(Элементы, ВидПособия)
	
	ВидПособияИмеетДокументОснование = ПрямыеВыплатыПособийСоциальногоСтрахования.ВидПособияИмеетДокументОснование(ВидПособия);	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПервичныйДокумент", "Доступность", ВидПособияИмеетДокументОснование); 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРасчетаСреднегоЗаработка(Элементы, ВидПособия)
	
	ДоступностьГруппыРасчетПособия = ВидПособия <> Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка
										И ВидПособия <> Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаРасчетПособия", "Видимость", ДоступностьГруппыРасчетПособия); 

КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
	
	ТекстПредупреждения = ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксируемогоРеквизита().СтрокаПредупреждения;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидЗаявления", "ПредупреждениеПриРедактировании", ТекстПредупреждения);
	
	ФиксацияВторичныхДанныхВДокументахФормы.ИнициализироватьМеханизмФиксацииРеквизитов(ЭтотОбъект, ТекущийОбъект, ПараметрыФиксацииВторичныхДанных());
	
	ОписаниеЭлементов = ФиксацияБыстрыйПоискРеквизитов();
	ФиксацияВторичныхДанныхВДокументахФормы.ПодключитьОбработчикиФиксацииИзмененийРеквизитов(ЭтотОбъект, ОписаниеЭлементов);
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Ложь);
	
	ОбновитьВторичныеДанныеДокумента();
	
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
	
	УстановитьТекущиеСтраницы();
	УстановитьВидимостьГруппыЗаявитель(Элементы, Объект);
	НастроитьОтношениеКОсобойЗоне(Элементы, Объект);
	УстановитьТипДокументаОснования();
	УстановитьДоступностьДокументаОснования(Элементы, Объект.ВидПособия);
	УстановитьДоступностьРасчетаСреднегоЗаработка(Элементы, Объект.ВидПособия);
	УстановитьВидимостьДокументаНаПроживание(ЭтотОбъект);
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу();
	ОбновитьЭлементыПодписей();
	ОбновитьВидимостьДоступность();
	
	ЗаполнитьРеестр();
	
	НастроитьФормуПоСтатусуДокумента();
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПервичныйДокументПриИзмененииНаСервере()
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("ДокументОснование");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Организация");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента();
	УстановитьТекущиеСтраницы();
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу();
	ОбновитьВидимостьДоступность();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "Организация");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Организация");
	ОбновитьВторичныеДанныеДокумента();
	УстановитьТипДокументаОснования();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
	УстановитьФункциональныеОпцииФормы();
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере(Знач Событие)
	Если Событие = "СотрудникПриИзменении" Тогда
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "Сотрудник");
	КонецЕсли;
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента();
	УстановитьТипДокументаОснования();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура БанкПриИзмененииНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "Банк");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсеИсправленияНаСервере()
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("ДокументОснование");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Организация");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента();
	УстановитьТекущиеСтраницы();
	ОбновитьВидимостьДоступность();
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПерерасчетПриИзмененииСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "Перерасчет");
	ОбновитьВидимостьДоступность();
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущиеСтраницы()
	УстановитьТекущуюСтраницуСправкаОНеполученииПособияЕжемесячноеПособие(Элементы, Объект.СправкаОНеполученииПособия);   
	УстановитьТекущуюСтраницуСправкаОНеполученииПособия(Элементы, Объект.СправкаОНеполученииПособия);
	УстановитьТекущуюСтраницуВыплатыПособий(ЭтотОбъект);
	УстановитьТекущуюСтраницуПредоставляемыхДокументов(Элементы, Объект.ВидПособия);
	УстановитьТекущуюСтраницуРасчетСреднегоЗаработка(Элементы,Объект.ПорядокРасчетаСреднегоЗаработка);
	УстановитьТекущуюСтраницуПравилаРасчетаСреднего(Элементы, Объект.СчитатьПоПравилам2010Года);
	УстановитьТекущуюСтраницуЗаменаКалендарныхГодов(Элементы, Объект.ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьГруппыЗаявитель(Элементы, Объект);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаСведенияОЗаявителе", "Видимость", Объект.ПолучательНеЯвляетсяЗаявителем); 
КонецПроцедуры

&НаСервере
Процедура ВидПособияПриИзмененииНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "ВидПособия");
	УстановитьТекущуюСтраницуПредоставляемыхДокументов(Элементы, Объект.ВидПособия);
	УстановитьТипДокументаОснования();
	УстановитьДоступностьДокументаОснования(Элементы, Объект.ВидПособия);
	УстановитьДоступностьРасчетаСреднегоЗаработка(Элементы, Объект.ВидПособия);
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу();
	ОбновитьВидимостьДоступность();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтношениеКОсобойЗоне(Элементы, Объект)
	Если Объект.ОтношениеКОсобойЗоне = ПредопределенноеЗначение("Перечисление.ОтношениеКОсобойЗоне.Нет") Тогда
		Объект.ВидОсобойЗоныПроживанияРаботы = ПредопределенноеЗначение("Перечисление.ВидыОсобойЗоныПроживанияРаботы.ПустаяСсылка");
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидОсобойЗоныПроживанияРаботы", "Доступность", Ложь); 
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.ВидОсобойЗоныПроживанияРаботы) Тогда
			Объект.ВидОсобойЗоныПроживанияРаботы = ПредопределенноеЗначение("Перечисление.ВидыОсобойЗоныПроживанияРаботы.ЗонаСПравомНаОтселение");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидОсобойЗоныПроживанияРаботы", "Доступность", Истина); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоСтатусуДокумента()
	ЭтотОбъект.ТолькоПросмотр = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбъектФормыЗафиксирован(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеестр()
	РеестрСтатус = ПрямыеВыплатыПособийСоциальногоСтрахования.РеестрПоЗаявлению(Объект.Ссылка);
	Если РеестрСтатус <> Неопределено Тогда
		Реестр = РеестрСтатус.Реестр;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Реестр", "Доступность", ЗначениеЗаполнено(Реестр)); 
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыПодписей()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ПодписиДокументовКлиентСервер.ИмяЭлементаФормыПоРолиПодписанта("УполномоченныйПоПрямымВыплатамФСС"),
		"ПоложениеЗаголовка",
		ПоложениеЗаголовкаЭлементаФормы.Верх);
	
	ВводВСтаромФормате = ЗначениеЗаполнено(Объект.УдалитьФИОУполномоченного) И Не ЗначениеЗаполнено(Объект.УполномоченныйПоПрямымВыплатамФСС);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"УдалитьФИОУполномоченного",
		"Видимость",
		ВводВСтаромФормате);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"УдалитьДолжностьУполномоченного",
		"Видимость",
		ВводВСтаромФормате);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	ЭтоОтпускСверхЕжегодногоНаПериодЛечения = (Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "КодПричиныПерерасчета", "Доступность", Объект.Перерасчет);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаИзвещениеИзФСС",
		"Видимость",
		ЗначениеЗаполнено(Объект.УдалитьИзвещениеИзФССНомер));
	
	Элементы.СтраницаДокументыПрилагаемыеДляНазначения.Видимость = Не ЭтоОтпускСверхЕжегодногоНаПериодЛечения;
	Элементы.СведенияДляЭлектронногоРеестра.Видимость            = Не ЭтоОтпускСверхЕжегодногоНаПериодЛечения;
	
	УстановитьТекущуюСтраницуВыплатыПособий(ЭтотОбъект);
	
	НастроитьПолеРебенокЗаКоторымОсуществляетсяУход();
КонецПроцедуры

&НаСервере
Процедура ОбновитьПоляВводаКонтактнойИнформации()
	УправлениеКонтактнойИнформациейЗарплатаКадры.ОбновитьПолеВводаКонтактнойИнформации(
		ЭтотОбъект,
		"ПредставлениеФактическогоАдресаПолучателя",
		Объект.АдресПолучателяФактический,
		Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	УправлениеКонтактнойИнформациейЗарплатаКадры.ОбновитьПолеВводаКонтактнойИнформации(
		ЭтотОбъект,
		"ПредставлениеАдресаРегистрацииПолучателя",
		Объект.АдресПолучателяРегистрации,
		Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	УправлениеКонтактнойИнформациейЗарплатаКадры.ОбновитьПолеВводаКонтактнойИнформации(
		ЭтотОбъект,
		"ПредставлениеТелефонаПолучателя",
		Объект.ТелефонПолучателя,
		Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	УправлениеКонтактнойИнформациейЗарплатаКадры.ОбновитьПолеВводаКонтактнойИнформации(
		ЭтотОбъект,
		"ПредставлениеТелефонаУполномоченногоПредставителя",
		Объект.ТелефонУполномоченногоПредставителя,
		Перечисления.ТипыКонтактнойИнформации.Телефон);
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДокументаНаПроживание(Форма)
	Видимость = ЗначениеЗаполнено(Форма.Объект.Гражданство) И Форма.Объект.Гражданство <> Справочники.СтраныМира.Россия;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ГруппаДокументНаПроживание", "Видимость", Видимость); 
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу()
	
	Видимость = Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПриказОЗаменеПослеродовогоОтпуска", "Видимость", Видимость);
	
	Видимость = Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком
		Или Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСведенияОРебенкеДляРеестра", "Видимость", Видимость);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСообщенияПользователю()
	
	Сообщения = ПолучитьСообщенияПользователю(Ложь);
	
	Для Каждого Сообщение Из Сообщения Цикл
		// Привязка сообщений к объекту.
		Если Не ЗначениеЗаполнено(Сообщение.КлючДанных)
			И Не ЗначениеЗаполнено(Сообщение.ПутьКДанным)
			И Не СтрНачинаетсяС(Сообщение.Поле, "Объект.") Тогда
			Сообщение.ПутьКДанным = "Объект";
		КонецЕсли;
		// Перепривязка сообщений к полям формы.
		Если Сообщение.Поле = "АдресПолучателяФактический" Тогда
			Сообщение.Поле = "ПредставлениеФактическогоАдресаПолучателя";
			Сообщение.ПутьКДанным = "";
		ИначеЕсли Сообщение.Поле = "АдресПолучателяРегистрации" Тогда
			Сообщение.Поле = "ПредставлениеАдресаРегистрацииПолучателя";
			Сообщение.ПутьКДанным = "";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
