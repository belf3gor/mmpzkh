#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПачкаДокументовСЗВ_6_4;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыПолученияДанныхДляЗаполненияИПроведенияДокумента

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт 
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция СформироватьЗапросПоЗаписямСтажаДляПечати(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерОсновнойЗаписи КАК НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи КАК НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ТерриториальныеУсловия.Код КАК ТерриториальныеУсловияКод,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда.КодДляОтчетности2010 КАК ОсобыеУсловияТрудаКод,
	|	ЗаписиОСтаже.КодПозицииСписка.Код КАК КодПозицииСпискаКод,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа.Код КАК ОснованиеИсчисляемогоСтажаКод,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа.Код КАК ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет.КодДляОтчетности2010 КАК ОснованиеВыслугиЛетКод,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка
	|ИЗ
	|	ВТСотрудникиДокумента КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = ЗаписиОСтаже.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	НомерОсновнойЗаписи,
	|	НомерДополнительнойЗаписи";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоЗаработкуДляПечати(МассивОбъектов)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Месяц КАК Месяц,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_4СведенияОЗаработке
	|		ПО ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка
	|			И ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник = ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Сотрудник
	|			И (ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В (&МассивОбъектов))
	|			И (ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка В (&МассивОбъектов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Месяц,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ОтчетныйПериод
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтрокиСотрудник,
	|	Месяц";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(МассивСсылок)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоШапкеДляПечати(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовСЗВ_6_4";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = МассивСсылок;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Организация,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	СведенияОбОрганизациях.ИНН КАК ИНН,
	|	СведенияОбОрганизациях.КПП КАК КПП,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ОкончаниеОтчетногоПериода,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.Руководитель КАК Руководитель,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя.Наименование КАК ДолжностьРуководителя,
	|	ПачкаДокументовСЗВ_6_4.Дата,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	СведенияОбОрганизациях.КодПоОКПО КАК КодПоОКПО,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФРвКорректируемыйПериод
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ПачкаДокументовСЗВ_6_4.Организация = СведенияОбОрганизациях.Организация
	|			И ПачкаДокументовСЗВ_6_4.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка В(&МассивСсылок)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Руководитель";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФР КАК РегНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	ПачкаДокументовСЗВ_6_4.ИНН КАК ИНН,
	|	ПачкаДокументовСЗВ_6_4.КПП КАК КПП,
	|	ПачкаДокументовСЗВ_6_4.КодПоОКПО КАК ОКПО,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод,
	|	ЕСТЬNULL(ВТФИОПоследние.РасшифровкаПодписи, """") КАК Руководитель,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ПачкаДокументовСЗВ_6_4.Дата,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФРвКорректируемыйПериод
	|ИЗ
	|	ВТДанныеДокументов КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОПоследние
	|		ПО ПачкаДокументовСЗВ_6_4.Ссылка = ВТФИОПоследние.Ссылка
	|			И ПачкаДокументовСЗВ_6_4.Руководитель = ВТФИОПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоШапкеДляАДВ_5(МассивОбъектов) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовСЗВ_6_4";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = МассивОбъектов;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(Застрахованные.НомерСтроки) КАК Количество,
	|	Застрахованные.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Номер,
	|	ПачкаДокументовСЗВ_6_4.Дата КАК Дата,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	ПачкаДокументовСЗВ_6_4.Организация,
	|	СведенияОбОрганизациях.ИНН КАК ИНН,
	|	СведенияОбОрганизациях.КПП КАК КПП,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	ГОД(ПачкаДокументовСЗВ_6_4.ОтчетныйПериод) КАК Год,
	|	ПачкаДокументовСЗВ_6_4.ОкончаниеОтчетногоПериода,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод КАК КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.Руководитель КАК Руководитель,
	|	СведенияОбОрганизациях.КодПоОКПО КАК КодПоОКПО,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ПачкаДокументовСЗВ_6_4.Организация = СведенияОбОрганизациях.Организация
	|			И ПачкаДокументовСЗВ_6_4.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка В(&МассивСсылок)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Руководитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ПачкаДокументовСЗВ_6_4СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ПОМЕСТИТЬ ВТИтогиПоЗаработку
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_4СведенияОЗаработке
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_6_4СведенияОЗаработке.Ссылка";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Номер,
	|	ПачкаДокументовСЗВ_6_4.Дата КАК Дата,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.РуководительДолжность КАК РуководительДолжность,
	|	ПачкаДокументовСЗВ_6_4.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФР КАК РегНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.ИНН КАК ИНН,
	|	ПачкаДокументовСЗВ_6_4.КПП КАК КПП,
	|	ПачкаДокументовСЗВ_6_4.КодПоОКПО КАК КодПоОКПО,
	|	ПачкаДокументовСЗВ_6_4.Год КАК Год,
	|	""СЗВ-6-4"" КАК ТипФормДокументов,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ИтогиПоЗаработку.Заработок, 0) КАК Заработок,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиДоПредельнойВеличины, 0) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиСвышеПредельнойВеличины, 0) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах, 0) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	ЕСТЬNULL(ИтогиПоЗаработку.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах, 0) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ПачкаДокументовСЗВ_6_4.КорректируемыйПериод КАК КорректируемыйПериод,
	|	ЕСТЬNULL(ВТФИОПоследние.РасшифровкаПодписи, """") КАК Руководитель
	|ИЗ
	|	ВТДанныеДокументов КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО ПачкаДокументовСЗВ_6_4.Ссылка = ИтогиПоВзносам.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиПоЗаработку КАК ИтогиПоЗаработку
	|		ПО ПачкаДокументовСЗВ_6_4.Ссылка = ИтогиПоЗаработку.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОПоследние
	|		ПО ПачкаДокументовСЗВ_6_4.Ссылка = ВТФИОПоследние.Ссылка
	|			И ПачкаДокументовСЗВ_6_4.Руководитель = ВТФИОПоследние.ФизическоеЛицо
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область ДляОбеспеченияФормированияВыходногоФайла

// Формирует запрос по шапке документа.
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовСЗВ_6_4";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Номер,
	|	ПачкаДокументовСЗВ_6_4.Дата,
	|	ПачкаДокументовСЗВ_6_4.Проведен,
	|	ПачкаДокументовСЗВ_6_4.Организация,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.КорректируемыйПериод
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.ДокументПринятВПФР,
	|	ПачкаДокументовСЗВ_6_4.Ответственный,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОбОрганизациях.Наименование,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	СведенияОбОрганизациях.ОГРН,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	СведенияОбОрганизациях.НаименованиеПолное,
	|	СведенияОбОрганизациях.НаименованиеСокращенное,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	СведенияОбОрганизациях.РайонныйКоэффициент,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ГОД(ПачкаДокументовСЗВ_6_4.ОтчетныйПериод) КАК Год,
	|	СведенияОбОрганизациях.КодПоОКПО КАК ОКПО,
	|	""СЗВ-6-1"" КАК ТипФормДокументов,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	ПачкаДокументовСЗВ_6_4.ИмяФайлаДляПФР,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФРвКорректируемыйПериод
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ПачкаДокументовСЗВ_6_4.Организация = СведенияОбОрганизациях.Организация
	|			И ПачкаДокументовСЗВ_6_4.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоЗаписямСтажа(Ссылка) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная
	|ПОМЕСТИТЬ ВТДанныеСотрудников
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерОсновнойЗаписи КАК НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи КАК НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ТерриториальныеУсловия.Код КАК ТерриториальныеУсловияКод,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий КАК ТерриториальныеУсловияСтавка,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда.КодДляОтчетности2010 КАК ОсобыеУсловияТрудаКод,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.КодПозицииСписка.Код КАК КодПозицииСпискаКод,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа.Код КАК ОснованиеИсчисляемогоСтажаКод,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа.Код КАК ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет.КодДляОтчетности2010 КАК ОснованиеВыслугиЛетКод,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Имя,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Отчество,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоначисленоНакопительная
	|ИЗ
	|	ВТДанныеСотрудников КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И (ЗаписиОСтаже.Ссылка = &Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	НомерОсновнойЗаписи,
	|	НомерДополнительнойЗаписи";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Объект.Ссылка).Выбрать();
	ВыборкаПоСотрудникам = СформироватьЗапросПоЗаписямСтажа(Объект.Ссылка).Выбрать();
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ТекстФайла = ТекстФайлаСведенийОВзносахСтажеЗаработке(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам, Объект.СведенияОЗаработке.Выгрузить());
	
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	
КонецПроцедуры

Функция ТекстФайлаСведенийОВзносахСтажеЗаработке(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам, СведенияОЗаработке)
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыводитьВзносыЗаРаботыСДосрочнойПенсией = ПолучитьФункциональнуюОпцию("ИспользуютсяРаботыСДосрочнойПенсией");
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ДатаЗаполнения 			= ВыборкаПоШапкеДокумента.Дата;
	ТипФормДокументов		= ВыборкаПоШапкеДокумента.ТипФормДокументов;
	НомерПачки				= ВыборкаПоШапкеДокумента.НомерПачки;
	Ссылка					= ВыборкаПоШапкеДокумента.Ссылка;

	МакетФормата = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	ФорматСЗВ6 = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_6_4");
	ДанныеВходящейОписи = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ОПИСЬ_ВЫПЛАТ_ВЗНОСОВ");
	НаборЗаписейСуммаВыплатИВознаграждений = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВыплатИВознагражденийВпользуЗЛ.Значение);
	ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
	ДанныеВходящейОписи.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
	НаборЗаписейСуммаВыплатПоДопТарифу = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВыплатИВознагражденийПоДопТарифу.Значение);
	ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийПоДопТарифу");
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
		ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийПоДопТарифу");
		ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
		ФорматСЗВ6.Удалить("СтажевыйПериод");
		
	Иначе
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ФорматСЗВ6.Удалить("КорректируемыйОтчетныйПериод");
			ФорматСЗВ6.Удалить("РегистрационныйНомерКорректируемогоПериода");
		КонецЕсли;
		ФорматСуммаВзносов = Новый Структура("СуммаВзносовНаСтраховую", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВзносовНаСтраховую));
		ФорматСуммаВзносов.Вставить("СуммаВзносовНаНакопительную", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ6.СуммаВзносовНаНакопительную));
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
	КонецЕсли;
	
	Если Не ЗарплатаКадры.ЭтоЮридическоеЛицо(ВыборкаПоШапкеДокумента.Организация) Тогда
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	ФорматДатаЗаполнения = Новый Структура("ДатаЗаполнения", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ6.ДатаЗаполнения));
	ФорматСЗВ6.Удалить("ДатаЗаполнения");
	
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_О_СТРАХОВЫХ_ВЗНОСАХ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись.
	ДанныеВходящейОписи.НомерВПачке.Значение = 1;
	// Составитель пачки
	НаборЗаписейСоставительПачки = ДанныеВходящейОписи.СоставительПачки.Значение; 
	ПерсонифицированныйУчет.ЗаполнитьСоставительПачки(НаборЗаписейСоставительПачки, ВыборкаПоШапкеДокумента); // ОрганизацияЮрФизЛицо, ОрганизацияИНН, ОрганизацияКПП, ОрганизацияОГРН, ОрганизацияНаименованиеОКОПФ, ОрганизацияНаименованиеПолное, ОрганизацияНаименованиеСокращенное
	
	// Устанавливаем значение Номер пачки.
	ДанныеВходящейОписи.НомерПачки.Значение.Основной = Формат(ВыборкаПоШапкеДокумента.НомерПачки, "ЧГ="); 
	// Блок СоставДокументов
	НаборЗаписейСоставДокументов = ДанныеВходящейОписи.СоставДокументов.Значение;
	НаборЗаписейСоставДокументов.Количество.Значение = 1;
	НаборЗаписейНаличиеДокументов = НаборЗаписейСоставДокументов.НаличиеДокументов.Значение;
	НаборЗаписейНаличиеДокументов.ТипДокумента = ТипДокументовПачки;
	НаборЗаписейНаличиеДокументов.Количество = ВыборкаПоШапкеДокумента.Количество;
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПериодДокумента = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
	Иначе
		ПериодДокумента = ВыборкаПоШапкеДокумента.КорректируемыйПериод;
	КонецЕсли;
	
	ДанныеВходящейОписи.ТипСведений.Значение = Строка(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ);
	ДанныеВходящейОписи.ТипДоговора.Значение = Строка(ВыборкаПоШапкеДокумента.ТипДоговора);
	ДанныеВходящейОписи.КодКатегории.Значение = ПерсонифицированныйУчет.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
	
	НаборЗаписейОтчетныйПериод = ДанныеВходящейОписи.ОтчетныйПериод.Значение;
	ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ПерсонифицированныйУчет.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.ОтчетныйПериод));
	
	ДанныеВходящейОписи.ДатаСоставления.Значение = ВыборкаПоШапкеДокумента.Дата;
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ДанныеВходящейОписи.Удалить("КорректируемыйОтчетныйПериод");
		
		Период = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
	Иначе
		Период = ВыборкаПоШапкеДокумента.КорректируемыйПериод;
		НаборЗаписейОтчетныйПериод = ДанныеВходящейОписи.КорректируемыйОтчетныйПериод.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ПерсонифицированныйУчет.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.КорректируемыйПериод));
	КонецЕсли;
	
	ДанныеОСуммахВзносовОписи = Новый Структура("СуммаВзносовНаСтраховую", ОбщегоНазначения.СкопироватьРекурсивно(ДанныеВходящейОписи.СуммаВзносовНаСтраховую));
	ДанныеОСуммахВзносовОписи.Вставить("СуммаВзносовНаНакопительную", ОбщегоНазначения.СкопироватьРекурсивно(ДанныеВходящейОписи.СуммаВзносовНаНакопительную));
	ДанныеВходящейОписи.Удалить("СуммаВзносовНаСтраховую");
	ДанныеВходящейОписи.Удалить("СуммаВзносовНаНакопительную");
	
	ДанныеНабораВходящаяОпись = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеВходящейОписи);
	
	УзелПачкаВходящихДокументов = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПФР, "ПачкаВходящихДокументов", "", );
	УзелВходящейОписи = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ","");
	ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелВходящейОписи, ДанныеВходящейОписи);
	
	ФорматДатаЗаполнения.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
	
	ДанныеОДоходахДляОписи = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейСуммаВыплатИВознаграждений);
	ДанныеОДоходахДляОписи.Удалить("Месяц");
	ДанныеОДоходахДляОписи.ТипСтроки.Значение = "ИТОГ";
	ДанныеОДоходахДляОписи.СуммаВыплатВсего.Значение = СведенияОЗаработке.Итог("Заработок");
	ДанныеОДоходахДляОписи.СуммаВыплатНачисленыСтраховыеВзносыНепревышающие.Значение = СведенияОЗаработке.Итог("ОблагаетсяВзносамиДоПредельнойВеличины");
	ДанныеОДоходахДляОписи.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СведенияОЗаработке.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины");
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелВходящейОписи, "СуммаВыплатИвознагражденийВпользуЗЛ",""),ДанныеОДоходахДляОписи);
	
	ПерсонифицированныйУчет.ВписатьВзносыВНаборДанных(ДанныеОСуммахВзносовОписи, ВыборкаПоШапкеДокумента.НачисленоСтраховая, ВыборкаПоШапкеДокумента.УплаченоСтраховая, ВыборкаПоШапкеДокумента.НачисленоНакопительная, ВыборкаПоШапкеДокумента.УплаченоНакопительная);
	ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелВходящейОписи, ДанныеОСуммахВзносовОписи);
	
	НомерДокументаВПачке = 1;
	Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерСтроки") Цикл
		
		НаборЗаписейСЗВ6 = ФорматСЗВ6;
		
		// Общие данные пачки - берем их из описи.
		
		НаборЗаписейСЗВ6.ТипСведений.Значение = ДанныеНабораВходящаяОпись.ТипСведений.Значение;
		НаборЗаписейСЗВ6.РегистрационныйНомер.Значение = ДанныеНабораВходящаяОпись.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		НаборЗаписейСЗВ6.НаименованиеКраткое.Значение = ДанныеНабораВходящаяОпись.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.НалоговыйНомер.Значение, ДанныеНабораВходящаяОпись.СоставительПачки.Значение.НалоговыйНомер.Значение);
		НаборЗаписейСЗВ6.КодКатегории.Значение = ДанныеНабораВходящаяОпись.КодКатегории.Значение;
		НаборЗаписейСЗВ6.ТипДоговора.Значение = ДанныеНабораВходящаяОпись.ТипДоговора.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.ОтчетныйПериод.Значение, ДанныеНабораВходящаяОпись.ОтчетныйПериод.Значение);
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.КорректируемыйОтчетныйПериод.Значение, ДанныеНабораВходящаяОпись.КорректируемыйОтчетныйПериод.Значение);
			Если ЗначениеЗаполнено(СтрЗаменить(ВыборкаПоШапкеДокумента.РегистрационныйНомерПФРвКорректируемыйПериод,"-","")) Тогда
				НаборЗаписейСЗВ6.РегистрационныйНомерКорректируемогоПериода.Значение = ВыборкаПоШапкеДокумента.РегистрационныйНомерПФРвКорректируемыйПериод;
			Иначе
				НаборЗаписейСЗВ6.Удалить("РегистрационныйНомерКорректируемогоПериода");
			КонецЕсли;
		КонецЕсли;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоСотрудникам.Фамилия);
		Имя = СокрЛП(ВыборкаПоСотрудникам.Имя);
		Отчество = СокрЛП(ВыборкаПоСотрудникам.Отчество);
		
		НаборЗаписейСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейСЗВ6.СтраховойНомер.Значение = ВыборкаПоСотрудникам.СтраховойНомерПФР;
		НаборЗаписейФИО = НаборЗаписейСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
		
		// Заполнение отменяющей формы завершено.
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			УзелСЗВ64 = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ64, НаборЗаписейСЗВ6);
			ФорматДатаЗаполнения.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ64, ФорматДатаЗаполнения);
			Продолжить;
		КонецЕсли;
		
		ФорматСтажевыйПериод = НаборЗаписейСЗВ6.СтажевыйПериод.Значение;
		НаборЗаписейСЗВ6.СтажевыйПериод.НеВыводитьВФайл = Истина;
		
		УзелСЗВ64 = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ64, НаборЗаписейСЗВ6);
		
		СтрокиЗаработка = СведенияОЗаработке.Скопировать(СведенияОЗаработке.НайтиСтроки(Новый Структура("Сотрудник", ВыборкаПоСотрудникам.Сотрудник)));
		СтрокиЗаработка.Сортировать("Месяц");
		ВыводитьИтоги = Ложь;
		Для каждого СтрокаТЗ Из СтрокиЗаработка Цикл
			ДанныеОДоходах = НаборЗаписейСуммаВыплатИВознаграждений;
			ВыводитьИтоги = Истина;
			ДанныеОДоходах.ТипСтроки.Значение = "МЕСЦ";
			ДанныеОДоходах.Месяц.Значение = Месяц(Период) - 1 + СтрокаТЗ.Месяц;
			ДанныеОДоходах.СуммаВыплатВсего.Значение = СтрокаТЗ.Заработок;
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыНепревышающие.Значение = СтрокаТЗ.ОблагаетсяВзносамиДоПредельнойВеличины;
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СтрокаТЗ.ОблагаетсяВзносамиСвышеПредельнойВеличины;
			ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийВпользуЗЛ",""), ДанныеОДоходах);
		КонецЦикла;
		Если ВыводитьИтоги Тогда
			ДанныеОДоходах = НаборЗаписейСуммаВыплатИВознаграждений;
			ДанныеОДоходах.Месяц.НеВыводитьВФайл = Истина;
			ДанныеОДоходах.ТипСтроки.Значение = "ИТОГ";
			ДанныеОДоходах.СуммаВыплатВсего.Значение = СтрокиЗаработка.Итог("Заработок");
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыНепревышающие.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиДоПредельнойВеличины");
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийВпользуЗЛ",""),ДанныеОДоходах);
		КонецЕсли;
		Если ВыводитьВзносыЗаРаботыСДосрочнойПенсией Тогда
			ВыводитьИтоги = Ложь;
			Для каждого СтрокаТЗ Из СтрокиЗаработка Цикл
				Если СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Или СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
					ВыводитьИтоги = Истина;
					ДанныеОДоходах = НаборЗаписейСуммаВыплатПоДопТарифу;
					ДанныеОДоходах.ТипСтроки.Значение = "МЕСЦ";
					ДанныеОДоходах.Месяц.Значение = Месяц(Период) - 1 + СтрокаТЗ.Месяц;
					ДанныеОДоходах.СуммаВыплатПоДопТарифу27_1.Значение = СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ДанныеОДоходах.СуммаВыплатПоДопТарифу27_2_18.Значение = СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийПоДопТарифу",""),ДанныеОДоходах);
				КонецЕсли;
			КонецЦикла;
			Если ВыводитьИтоги Тогда
				ДанныеОДоходах = НаборЗаписейСуммаВыплатПоДопТарифу;
				ДанныеОДоходах.Месяц.НеВыводитьВФайл = Истина;
				ДанныеОДоходах.ТипСтроки.Значение = "ИТОГ";
				ДанныеОДоходах.СуммаВыплатПоДопТарифу27_1.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах");
				ДанныеОДоходах.СуммаВыплатПоДопТарифу27_2_18.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах");
				ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийПоДопТарифу",""),ДанныеОДоходах);
			КонецЕсли;
		КонецЕсли;
		
		ПерсонифицированныйУчет.ВписатьВзносыВНаборДанных(
			ФорматСуммаВзносов, 
			ВыборкаПоСотрудникам.НачисленоСтраховая, 
			ВыборкаПоСотрудникам.УплаченоСтраховая, 
			ВыборкаПоСотрудникам.НачисленоНакопительная, 
			ВыборкаПоСотрудникам.УплаченоНакопительная);
			
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ64, ФорматСуммаВзносов);
		
		ПерсонифицированныйУчет.ВписатьЗаписиОСтажеВНаборДанных(
			УзелСЗВ64, 
			ФорматСтажевыйПериод, 
			ВыборкаПоСотрудникам, "СЗВ-6-4", 
			ТипДокументовПачки);
		
		ФорматДатаЗаполнения.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
		
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ64, ФорматДатаЗаполнения);
	КонецЦикла;
	
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	
	Возврат СтрЗаменить(СтрЗаменить(ТекстФайла, "СуммаВыплатПоДопТарифу27_1", "СуммаВыплатПоДопТарифу27-1"), "СуммаВыплатПоДопТарифу27_2_18", "СуммаВыплатПоДопТарифу27-2-18");
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// СЗВ-6-4
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_6_4";
	КомандаПечати.Представление = НСтр("ru = 'СЗВ-6-4'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// АДВ-6-5
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_6_5";
	КомандаПечати.Представление = НСтр("ru = 'АДВ-6-5'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Список застрахованных лиц
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "СписокЗастрахованныхЛиц";
	КомандаПечати.Представление = НСтр("ru = 'Список застрахованных лиц'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Все формы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_6_4,ФормаАДВ_6_5,СписокЗастрахованныхЛиц";
	КомандаПечати.Представление = НСтр("ru = 'Все формы'");
	КомандаПечати.Порядок = 40;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСЗВ_6_4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаСЗВ_6_4", "Форма СЗВ-6-4", СформироватьПечатнуюФормуСЗВ_6_4(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокЗастрахованныхЛиц") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписокЗастрахованныхЛиц", "Список застрахованных лиц", СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_5") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_6_5", "Форма АДВ-6-5", СформироватьПечатнуюФормуАДВ_6_5(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСЗВ_6_4(МассивОбъектов, ОбъектыПечати) Экспорт
	ТабличныеДокументы = ТабличныеДокументыФормыСЗВ_6_4(МассивОбъектов, ОбъектыПечати);
	
	ТабличныйДокумент = Справочники.КомплектыОтчетностиПерсучета.ОбъединитьТабличныеДокументы(ТабличныеДокументы);	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ТабличныеДокументыФормыСЗВ_6_4(МассивОбъектов, ОбъектыПечати = Неопределено, ВыводитьОпись = Ложь, ДатаПодписи = Неопределено) Экспорт
	Результаты = Новый Массив;
			
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовСЗВ_6_4.ПФ_MXL_ФормаСЗВ_6_4");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаЗаписейСтажа = СформироватьЗапросПоЗаписямСтажаДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаСведенийОЗаработке = СформироватьЗапросПоЗаработкуДляПечати(МассивОбъектов);
	
	ОбластьСтрока    = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка     = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтаж      = Макет.ПолучитьОбласть("Стаж");
	
	Если ВыводитьОпись Тогда
		ТабличныеДокументыОписей = ТабличныеДокументыОписиАДВ_6_5(МассивОбъектов, , ДатаПодписи);
	КонецЕсли;	
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Если ВыводитьОпись Тогда
			Опись = ТабличныеДокументыОписей[ВыборкаДокументов.Ссылка];
			
			Если Опись <> Неопределено Тогда
				ТабличныйДокумент.Вывести(Опись);
			КонецЕсли;	
		КонецЕсли;	
			
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_6_4_Форма_СЗВ_6_4";
		
		Справочники.КомплектыОтчетностиПерсучета.ДобавитьТабличныйДокументВКоллекциюПечатаемыхОбъектов(Результаты, ТабличныйДокумент, ВыборкаДокументов);
		
		ВыборкаЗаписейСтажа.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		Если ВыборкаЗаписейСтажа.НайтиСледующий(СтруктураПоиска) Тогда
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ВыборкаДокументов, "РегНомерПФР, РегистрационныйНомерПФРвКорректируемыйПериод, ИНН, КПП, ОКПО");
			
			ОбластьШапка.Параметры.НаименованиеОрганизации = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганизации);
			
			ОбластьШапка.Параметры.КодКатегории = ПерсонифицированныйУчет.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаДокументов.КатегорияЗастрахованныхЛиц);
			
			ОтчетныйПериод = ВыборкаДокументов.ОтчетныйПериод;
			КорректируемыйПериод = ВыборкаДокументов.КорректируемыйПериод;
			
			ОбластьШапка.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
			ОбластьШапка.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
			ОбластьШапка.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
			ОбластьШапка.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
			
			ОбластьШапка.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
			
			Если ВыборкаДокументов.ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой Тогда
				ОбластьШапка.Параметры.ЭтоТрудовойДоговор = Истина;
				ОбластьШапка.Параметры.ЭтоДоговорГПХ = Ложь;
			Иначе
				ОбластьШапка.Параметры.ЭтоТрудовойДоговор = Ложь;
				ОбластьШапка.Параметры.ЭтоДоговорГПХ = Истина;
			КонецЕсли;
			
			Если ВыборкаДокументов.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда 
				ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(КорректируемыйПериод) = 1;
				ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 4;
				ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(КорректируемыйПериод) = 7;
				ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 10;
				
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Ложь;
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
				
				ОбластьШапка.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
			Иначе
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Истина;
				ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Ложь;
				ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Ложь;
				ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Ложь;
				ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Ложь;
				
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = Ложь;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = Ложь;
				
				ОбластьШапка.Параметры.КорректируемыйГод = "";
				
			КонецЕсли;
			
			Если ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("Ссылка") Тогда 
				КоличествоЗастрахованныхЛиц = 0;
				Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					КоличествоЗастрахованныхЛиц = КоличествоЗастрахованныхЛиц + 1;
					
					НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
					
					ТабличныйДокумент.Вывести(ОбластьШапка);
					
					ОбластьСтрока.Параметры.Фамилия = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия);
					ОбластьСтрока.Параметры.Имя = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаЗаписейСтажа.Имя);
					ОбластьСтрока.Параметры.Отчество = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаЗаписейСтажа.Отчество);
					ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
					
					Если ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда 
						ОбластьСтрока.Параметры.НачисленоНакопительная = 0;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = 0;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = 0;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = 0;
					Иначе
						ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;
					КонецЕсли;
					
					ЗаполнитьСведенияОЗаработкеВМакет(ОбластьСтрока, ВыборкаСведенийОЗаработке, ВыборкаЗаписейСтажа.Ссылка, ВыборкаЗаписейСтажа.НомерСтроки);
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
					
					Если ЗначениеЗаполнено(ВыборкаЗаписейСтажа.НомерОсновнойЗаписи) Тогда
						
						НомерСтроки = 0;
						Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") Цикл
							НомерСтроки = НомерСтроки + 1;
							
							ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки);
							
							ТабличныйДокумент.Вывести(ОбластьСтаж);
							Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи") Цикл
								Если ВыборкаЗаписейСтажа.НомерДополнительнойЗаписи = 0 Тогда
									Продолжить;
								КонецЕсли;
								
								НомерСтроки = НомерСтроки + 1;
								
								ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки);
								
								ТабличныйДокумент.Вывести(ОбластьСтаж);
								
							КонецЦикла;
						КонецЦикла;
					КонецЕсли;
					
					ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
					ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
					
					Если ЗначениеЗаполнено(ДатаПодписи) Тогда
						ОбластьПодвал.Параметры.ДатаСоставленияОписи = 	ПерсонифицированныйУчет.ДатаВОтчет(ДатаПодписи);	
					Иначе							
						ОбластьПодвал.Параметры.ДатаСоставленияОписи  = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаДокументов.Дата);
					КонецЕсли;	
					
					ТабличныйДокумент.Вывести(ОбластьПодвал);
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					Если ОбъектыПечати <> Неопределено Тогда
						УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
					КонецЕсли;	

				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результаты;
	
КонецФункции	

Процедура ЗаполнитьСведенияОЗаработкеВМакет(ОбластьЗаработок, ВыборкаПоСтрокамЗаработка, Ссылка, НомерСтрокиСотрудник)
	
	ОчиститьОбластьЗаработок(ОбластьЗаработок);
	
	СтруктураПоиска = Новый Структура("Ссылка, НомерСтрокиСотрудник", Ссылка, НомерСтрокиСотрудник);
	
	ВыборкаПоСтрокамЗаработка.Сбросить();
	
	Если ВыборкаПоСтрокамЗаработка.НайтиСледующий(СтруктураПоиска) Тогда
		ВыборкаПоСтрокамЗаработка.СледующийПоЗначениюПоля("Ссылка");
		ВыборкаПоСтрокамЗаработка.СледующийПоЗначениюПоля("НомерСтрокиСотрудник");
		
		ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог = 0;
		ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог = 0;
		ЗаработокИтог = 0;
		ОблагаетсяВзносамиДоПредельнойВеличиныИтог = 0;
		ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог = 0;
		
		Пока ВыборкаПоСтрокамЗаработка.Следующий() Цикл
			
			ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог = ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах; 
			
			ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог = ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
			
			ЗаработокИтог = ЗаработокИтог + ВыборкаПоСтрокамЗаработка.Заработок;
				
			ОблагаетсяВзносамиДоПредельнойВеличиныИтог = ОблагаетсяВзносамиДоПредельнойВеличиныИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины;
			
			ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог = ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог 
				+ ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины;
			
			ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + ВыборкаПоСтрокамЗаработка.Месяц] 
				= ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
			
			ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + ВыборкаПоСтрокамЗаработка.Месяц] 
				= ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
			
			ОбластьЗаработок.Параметры["Заработок" + ВыборкаПоСтрокамЗаработка.Месяц] = ВыборкаПоСтрокамЗаработка.Заработок;
			
			ОбластьЗаработок.Параметры["ОблагаетсяВзносамиДоПредельнойВеличины" + ВыборкаПоСтрокамЗаработка.Месяц] = 
				ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины;	
			
			ОбластьЗаработок.Параметры["ОблагаетсяВзносамиСвышеПредельнойВеличины" + ВыборкаПоСтрокамЗаработка.Месяц] 
				= ВыборкаПоСтрокамЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины;
			
		КонецЦикла;
		
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог"] = ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог;
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог"] = ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог;
		ОбластьЗаработок.Параметры["ЗаработокИтог"] = ЗаработокИтог;
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиДоПредельнойВеличиныИтог"] = ОблагаетсяВзносамиДоПредельнойВеличиныИтог;
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог"] = ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьОбластьЗаработок(ОбластьЗаработок)
	
	ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахИтог"] = 0;
	ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахИтог"] = 0;
	ОбластьЗаработок.Параметры["ЗаработокИтог"] = 0;
	ОбластьЗаработок.Параметры["ОблагаетсяВзносамиДоПредельнойВеличиныИтог"] = 0;
	ОбластьЗаработок.Параметры["ОблагаетсяВзносамиСвышеПредельнойВеличиныИтог"] = 0;
	
	Для НомерМесяца = 1 По 3 Цикл
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + НомерМесяца] = 0; 
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + НомерМесяца] = 0;  
		ОбластьЗаработок.Параметры["Заработок" + НомерМесяца] = 0; 
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиДоПредельнойВеличины" + НомерМесяца] = 0;
		ОбластьЗаработок.Параметры["ОблагаетсяВзносамиСвышеПредельнойВеличины" + НомерМесяца] = 0;
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_6_1_СписокЗастрахованныхЛиц";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовСЗВ_6_1.ПФ_MXL_СписокЗастрахованныхЛиц");
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьПовторятьПриПечати   = Макет.ПолучитьОбласть("ПовторятьПриПечати");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаПоЗЛ = СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(МассивОбъектов).Выбрать();
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ВыборкаПоЗЛ.Сбросить();
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		ОбластьШапка.Параметры.РегистрационныйНомерПФР = ВыборкаДокументов.РегНомерПФР;
		ОбластьШапка.Параметры.НаименованиеСокращенное = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганизации);
		ОбластьШапка.Параметры.РасчетныйПериод = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ВыборкаДокументов.ОтчетныйПериод);
		ОбластьШапка.Параметры.НомерПачкиРаботодателя = ВыборкаДокументов.НомерПачки;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Если ВыборкаПоЗЛ.НайтиСледующий(СтруктураПоиска) Тогда
			Если ВыборкаПоЗЛ.СледующийПоЗначениюПоля("Ссылка") Тогда
				Пока ВыборкаПоЗЛ.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					ОбластьСтрока.Параметры.НомерСтроки = ВыборкаПоЗЛ.НомерСтроки;
					ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаПоЗЛ.СтраховойНомерПФР;
					ОбластьСтрока.Параметры.ФИО = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаПоЗЛ.Фамилия + " " + ВыборкаПоЗЛ.Имя + " " + ВыборкаПоЗЛ.Отчество);
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
		ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
		ОбластьПодвал.Параметры.ДатаСоставленияОписи  = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаДокументов.Дата);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ТабличныеДокументыОписиАДВ_6_5(МассивОбъектов, ОбъектыПечати = Неопределено, ДатаПодписи = Неопределено) 
	Результат = Новый Соответствие;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДляАДВ_5(МассивОбъектов).Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовСЗВ_6_4.ПФ_MXL_ФормаАДВ_6_5");
	
	ОбластьОпись = Макет.ПолучитьОбласть("Опись");
	
	Пока ВыборкаПоШапкеДокумента.СледующийПоЗначениюПоля("Ссылка") Цикл
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Результат.Вставить(ВыборкаПоШапкеДокумента.Ссылка, ТабличныйДокумент); 
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ВыборкаПоШапкеДокумента.ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой Тогда
			ОбластьОпись.Параметры.ЭтоТрудовойДоговор = Истина;
			ОбластьОпись.Параметры.ЭтоДоговорГПХ = Ложь;
		Иначе
			ОбластьОпись.Параметры.ЭтоТрудовойДоговор = Ложь;
			ОбластьОпись.Параметры.ЭтоДоговорГПХ = Истина;
		КонецЕсли;
		
		ОбластьОпись.Параметры.РегНомерПФР = ВыборкаПоШапкеДокумента.РегНомерПФР;
		ОбластьОпись.Параметры.ИНН = ВыборкаПоШапкеДокумента.ИНН;
		ОбластьОпись.Параметры.КПП = ВыборкаПоШапкеДокумента.КПП;
		ОбластьОпись.Параметры.ОКПО = ВыборкаПоШапкеДокумента.КодПоОКПО;
		ОбластьОпись.Параметры.НаименованиеОрганизации = ВыборкаПоШапкеДокумента.НаименованиеОрганизации; 
		
		ОбластьОпись.Параметры.КодКатегории = ПерсонифицированныйУчет.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		
		ОтчетныйПериод = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
		
		ОбластьОпись.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
		ОбластьОпись.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
		ОбластьОпись.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
		ОбластьОпись.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
		
		ОбластьОпись.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
		
		ОбластьОпись.Параметры.ЭтоИсходныйДокумент = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
		ОбластьОпись.Параметры.ЭтоКорректирующийДокумент = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
		ОбластьОпись.Параметры.ЭтоОтменяющийДокумент     = ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
		
		КорректируемыйПериод = ВыборкаПоШапкеДокумента.КорректируемыйПериод;
		
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда 
			ОбластьОпись.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(КорректируемыйПериод) = 1;
			ОбластьОпись.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 4;
			ОбластьОпись.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(КорректируемыйПериод) = 7;
			ОбластьОпись.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 10;
			
			ОбластьОпись.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
		Иначе
			ОбластьОпись.Параметры.ЭтоКварталКорректируемогоГода   = Ложь;
			ОбластьОпись.Параметры.ЭтоПолугодиеКорректируемогоГода = Ложь;
			ОбластьОпись.Параметры.Это9МесяцевКорректируемогоГода  = Ложь;
			ОбластьОпись.Параметры.ЭтоВесьКорректируемыйГод        = Ложь;
			
			ОбластьОпись.Параметры.КорректируемыйГод = "";
		КонецЕсли;
		
		ОбластьОпись.Параметры.НомерПачки = ВыборкаПоШапкеДокумента.НомерПачки;
		
		ОбластьОпись.Параметры.ДокументовВПачке = ВыборкаПоШапкеДокумента.Количество;
		
		ОбластьОпись.Параметры.НачисленоНакопительная = ВыборкаПоШапкеДокумента.НачисленоНакопительная;
		ОбластьОпись.Параметры.УплаченоНакопительная  = ВыборкаПоШапкеДокумента.УплаченоНакопительная;
		ОбластьОпись.Параметры.НачисленоСтраховая     = ВыборкаПоШапкеДокумента.НачисленоСтраховая;
		ОбластьОпись.Параметры.УплаченоСтраховая      = ВыборкаПоШапкеДокумента.УплаченоСтраховая;
		
		ОбластьОпись.Параметры.ВсегоЗаработка = ВыборкаПоШапкеДокумента.Заработок;
		ОбластьОпись.Параметры.ВсегоОблагаетсяВзносамиДоПредельнойВеличины  = ВыборкаПоШапкеДокумента.ОблагаетсяВзносамиДоПредельнойВеличины;
		ОбластьОпись.Параметры.ВсегоОблагаетсяВзносамиСвышеПредельнойВеличины     = ВыборкаПоШапкеДокумента.ОблагаетсяВзносамиСвышеПредельнойВеличины;
		
		ОбластьОпись.Параметры.РуководительДолжность = ВыборкаПоШапкеДокумента.РуководительДолжность;
		ОбластьОпись.Параметры.Руководитель = ВыборкаПоШапкеДокумента.Руководитель;
		
		Если ЗначениеЗаполнено(ДатаПодписи) Тогда
			ОбластьОпись.Параметры.ДатаСоставленияОписи = ПерсонифицированныйУчет.ДатаВОтчет(ДатаПодписи);	
		Иначе	
			ОбластьОпись.Параметры.ДатаСоставленияОписи = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаПоШапкеДокумента.Дата);
		КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьОпись);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
		КонецЕсли;	
		
	КонецЦикла;
		
	Возврат Результат;
	 
КонецФункции 
 
Функция СформироватьПечатнуюФормуАДВ_6_5(МассивОбъектов, ОбъектыПечати) Экспорт
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ТабличныеДокументы = ТабличныеДокументыОписиАДВ_6_5(МассивОбъектов, ОбъектыПечати);
	
	Для Каждого ТабличныйДокумент Из ТабличныеДокументы Цикл
		ДокументРезультат.Вывести(ТабличныйДокумент.Значение);
	КонецЦикла;
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура ЗаполнитьОбластьСтаж(ВыборкаЗаписейСтажа, ОбластьСтаж, НомерСтроки)
	
	ОбластьСтаж.Параметры.НомерСтроки = НомерСтроки;
	ОбластьСтаж.Параметры.ДатаНачалаПериода = ВыборкаЗаписейСтажа.ДатаНачалаПериода;
	ОбластьСтаж.Параметры.ДатаОкончанияПериода = ВыборкаЗаписейСтажа.ДатаОкончанияПериода;
	
	ОбластьСтаж.Параметры.ТерриториальныеУсловияКод = ВыборкаЗаписейСтажа.ТерриториальныеУсловияКод;
	ОбластьСтаж.Параметры.ДопТУ = ПерсонифицированныйУчет.ПредставлениеПараметровТерриториальныхУсловий(ВыборкаЗаписейСтажа);
	ОбластьСтаж.Параметры.ОсобыеУсловияТрудаКод = ВыборкаЗаписейСтажа.ОсобыеУсловияТрудаКод;
	ОбластьСтаж.Параметры.КодПозицииСписка = ВыборкаЗаписейСтажа.КодПозицииСпискаКод;
	ОбластьСтаж.Параметры.ОснованиеИТС = ВыборкаЗаписейСтажа.ОснованиеИсчисляемогоСтажаКод;
	ОбластьСтаж.Параметры.ОснованиеВыслуги = ВыборкаЗаписейСтажа.ОснованиеВыслугиЛетКод;
	ОбластьСтаж.Параметры.ДопИТС = ПерсонифицированныйУчет.ПредставлениеПараметровИсчисляемогоТрудовогоСтажа(ВыборкаЗаписейСтажа);
	
	ПерсонифицированныйУчет.ПредставлениеПараметровПенсииЗаВыслугуЛет(ВыборкаЗаписейСтажа, ОбластьСтаж.Параметры.ДопВЛ, ОбластьСтаж.Параметры.ДопВЛСтавка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли