#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Справочники.КомплектыОтчетностиПерсучета.ДокументыСЗВПередЗаписью(ЭтотОбъект, РежимЗаписи);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Если ПерсонифицированныйУчет.СведенияДокументаРазнесеныПоЛицевымСчетам(Ссылка) Тогда
		ДанныеДляПроведения = ДанныеДляПроведения();
		
		ПериодРасчетов = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
		ПерсонифицированныйУчет.ЗарегистрироватьПереданныеВПФРВзносы(Движения, Организация, ПериодРасчетов, ДанныеДляПроведения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДанныеДокумента(Отказ = Ложь, НеПроверяемыеРеквизиты = Неопределено) Экспорт 
	Ошибки = Новый Массив;
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;	
	
	ТекстОшибки = НСтр("ru = 'Форма СЗВ-6-4 подается за периоды до 2014 г.'");

	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если ОтчетныйПериод >= '20140101' Тогда
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "ОтчетныйПериод", Отказ);
		КонецЕсли;
	Иначе
		Если КорректируемыйПериод >= '20140101' Тогда
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		КонецЕсли;
	КонецЕсли;	
				
	Если Не ДополнительныеСвойства.Свойство("НеПроверятьДанныеОрганизации") Тогда
		ПерсонифицированныйУчет.ПроверитьДанныеОрганизации(ЭтотОбъект, Организация, Отказ);
	КонецЕсли;	
	
	Если Год(ОтчетныйПериод) < 2013 Тогда
		ТекстОшибки = НСтр("ru = 'Формы СЗВ-6-4 представляются начиная с 1 квартала 2013 года. Для формирования сведений за 2010-2012 годы используйте формы СЗВ-6-1, СЗВ-6-2'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "ОтчетныйПериод", Отказ);
	КонецЕсли;
	
	Если ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если Не ЗначениеЗаполнено(КорректируемыйПериод) Тогда
			ТекстОшибки = НСтр("ru = 'Не указан корректируемый отчетный период'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		ИначеЕсли ОтчетныйПериод <= КорректируемыйПериод Тогда
			ТекстОшибки = НСтр("ru = 'Корректируемый период должен предшествовать отчетному'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		ИначеЕсли Год(КорректируемыйПериод) < 2013 Тогда
			ТекстОшибки = НСтр("ru = 'Корректируемый период не может быть ранее 1 квартала 2013 года. Для корректировки сведений за 2010-2012 годы используйте формы СЗВ-6-1, СЗВ-6-2'");
		
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		КонецЕсли; 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипДоговора) Тогда
		ТекстОшибки = НСтр("ru = 'Не указан тип договора'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "ТипДоговора", Отказ);
		
	КонецЕсли;
	
	ЗапросПоСтрокамДокумента = ЗапросПоСтрокамДокументаДляПроверкиЗаполнения();
	
	КатегорииЗЛИностранцев = ПерсонифицированныйУчет.КатегорииЗЛИностранцев();
		
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПроверяемыйПериод = ОтчетныйПериод;
	Иначе
		ПроверяемыйПериод = КорректируемыйПериод;
	КонецЕсли;
	
	ТарифыПоКатегориям = ПерсонифицированныйУчет.ТарифыПоКатегориям(ПроверяемыйПериод);
	
	ТарифыПФР = ТарифыПоКатегориям.Получить(КатегорияЗастрахованныхЛиц);
	
	КатегорияДляТарифа = ПерсонифицированныйУчет.СоответствиеКатегорийИностранцевКатегориямРоссиян()[КатегорияЗастрахованныхЛиц];
	
	Если КатегорияДляТарифа = Перечисления.КатегорииЗастрахованныхЛицДляПФР.ЧЭС Тогда
		КатегорияДляТарифа = Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР
	КонецЕсли;
	
	ТарифыДляРасчета = ТарифыПоКатегориям.Получить(КатегорияДляТарифа);
	
	ПредельнаяВеличина = УчетСтраховыхВзносов.ТекущаяПредельнаяВеличинаБазыСтраховыхВзносов(ПроверяемыйПериод);
	
	ОкончаниеПериода = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ПроверяемыйПериод);
	ДанныеОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "Наименование, КодПоОКПО"); 
	
	Если Сотрудники.Количество() > 200 Тогда
		ТекстОшибки = НСтр("ru = 'В документе должно быть не более 200 сотрудников.'");
		
		ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, ,Отказ);
	КонецЕсли;
	
	ВыборкаПоСтрокамДокумента = ЗапросПоСтрокамДокумента.Выполнить().Выбрать();
	
	ПравилаПроверкиДанныхЗЛ = ПерсонифицированныйУчет.ДокументыСЗВПравилаПроверкиДанныхЗЛ(Ложь);
	
	Если НеПроверяемыеРеквизиты <> Неопределено Тогда
		Для Каждого Правило Из ПравилаПроверкиДанныхЗЛ Цикл
			Если Правило.ОбязательноКЗаполнению Тогда
				НеПроверяемыеРеквизиты.Добавить("Сотрудники." + Правило.ПутьКДанным);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Заработки = СведенияОЗаработке.Выгрузить();
	Заработки.Индексы.Добавить("Сотрудник,Месяц");
	Заработки.Сортировать("Сотрудник,Месяц");
	
	Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
		
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда 
			
			Если ВыборкаПоСтрокамДокумента.КонфликтующаяСтрока <> Null Тогда  
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Информация о сотруднике %1 была введена в документе ранее.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(Ошибки, 
						Ссылка, 
						ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
						ТекстОшибки,
						"Сотрудник",
						Отказ);
				
			ИначеЕсли ВыборкаПоСтрокамДокумента.КонфликтующаяСтрокаСтраховойНомер <> Null Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: информация о сотруднике с таким же страховым номером была введена в документе ранее.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
				
				ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(Ошибки, 
						Ссылка, 
						ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
						ТекстОшибки,
						"СтраховойНомерПФР",
						Отказ);
			КонецЕсли;
			
			ДанныеЗастрахованногоЛица = ПерсонифицированныйУчет.ДокументыСЗВДанныеЗастрахованногоЛица(ВыборкаПоСтрокамДокумента);
			
			ПерсонифицированныйУчет.ПроверитьДанныеЗастрахованногоЛица(
					ДанныеЗастрахованногоЛица, 
					ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
					ПравилаПроверкиДанныхЗЛ, 
					Ошибки, 
					Ссылка, 
					Отказ);
			
			Если ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда 
				ПроверяемыйПериод = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, КорректируемыйПериод, ПроверяемыйПериод);
				
				СтрокиЗаработка = Заработки.Скопировать(Новый Структура("Сотрудник", ВыборкаПоСтрокамДокумента.Сотрудник));
				
				СтрокиЗаработкаПоМесяцам = Новый Соответствие;
				Для НомерМесяца = 1 По 3 Цикл
					СтрокиЗаработкаПоМесяцам.Вставить(НомерМесяца, Новый Массив);
				КонецЦикла;
				
				Для каждого СтрокаЗаработка Из СтрокиЗаработка Цикл
					Если ЗначениеЗаполнено(ПроверяемыйПериод) Тогда
						Если СтрокаЗаработка.Месяц < 1
							Или СтрокаЗаработка.Месяц > 3 Тогда
							
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: неверно указан месяц'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
							
							ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
								ВыборкаПоСтрокамДокумента.НомерСтрокиЗаработок, 
								ТекстОшибки, 
								"Месяц",
								Отказ);
							
							МесяцСтрокой = "";
						Иначе
							МесяцСтрокой = Формат(Дата(Год(ОтчетныйПериод), Месяц(ОтчетныйПериод) + СтрокаЗаработка.Месяц - 1 , 1), "ДФ='ММММ гггг '");
							
							СтрокиТаблицыЗаработка = СтрокиЗаработкаПоМесяцам[СтрокаЗаработка.Месяц];
							СтрокиТаблицыЗаработка.Добавить(СтрокаЗаработка.НомерСтроки);
						КонецЕсли;
					КонецЕсли;
					Если СтрокаЗаработка.Заработок = 0  
						И СтрокаЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины = 0 
						И СтрокаЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины = 0 
						И СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = 0 
						И СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = 0 Тогда
						
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: за %2 указаны нулевые данные'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, МесяцСтрокой);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
							СтрокаЗаработка.НомерСтроки, 
							ТекстОшибки, 
							"Заработок",
							Отказ);
							
					КонецЕсли;
					Если СтрокаЗаработка.Заработок < 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: за %2 указан отрицательный заработок'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, МесяцСтрокой);
					
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
							СтрокаЗаработка.НомерСтроки, 
							ТекстОшибки, 
							"Заработок",
							Отказ);
							
					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины < 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: за %2 указана отрицательная облагаемая сумма'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, МесяцСтрокой);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
								СтрокаЗаработка.НомерСтроки, 
								ТекстОшибки, 
								"ОблагаетсяВзносамиДоПредельнойВеличины",
								Отказ);
					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины < 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: за %2 указана отрицательная облагаемая сумма'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, МесяцСтрокой);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
								СтрокаЗаработка.НомерСтроки, 
								ТекстОшибки, 
								"ОблагаетсяВзносамиСвышеПредельнойВеличины",
								Отказ);
							
					КонецЕсли;
					Если СтрокаЗаработка.Заработок < СтрокаЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины + СтрокаЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Сотрудник %1: в данных о заработке за %2 сумма, облагаемая взносами, превышает сумму начисленного заработка.'"), 
									ВыборкаПоСтрокамДокумента.СотрудникНаименование,
									МесяцСтрокой);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
								СтрокаЗаработка.НомерСтроки, 
								ТекстОшибки, 
								"Заработок",
								Отказ);
 					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах < 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: за %2 указана отрицательная облагаемая сумма'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, МесяцСтрокой);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
								СтрокаЗаработка.НомерСтроки, 
								ТекстОшибки, 
								"ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах",
								Отказ);
					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах < 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: за %2 указана отрицательная облагаемая сумма'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, МесяцСтрокой);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
								СтрокаЗаработка.НомерСтроки, 
								ТекстОшибки, 
								"ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах",
								Отказ);
								
					КонецЕсли;
				КонецЦикла;
				Для каждого КлючИЗначение Из СтрокиЗаработкаПоМесяцам Цикл
					Если КлючИЗначение.Значение.Количество() > 1 Тогда
						Для Сч = 1 По КлючИЗначение.Значение.Количество() - 1 Цикл 
							МесяцСтрокой = Формат(Дата(Год(ОтчетныйПериод), Месяц(ОтчетныйПериод) + КлючИЗначение.Ключ - 1 , 1), "ДФ='ММММ гггг '");
							
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: данные о заработке за %2 введены несколько раз.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, МесяцСтрокой);
							
							ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОЗаработкеЗаМесяц(
									Ошибки, 
									Ссылка,
									ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, 
									КлючИЗначение.Значение[Сч], 
									ТекстОшибки, 
									"Месяц",
									Отказ);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
				
				// П. 4.1 Должны отсутствовать  значения в графах «Начислено» и «Уплачено» графы «Сумма страховых взносов на
				// накопительную часть трудовой пенсии»  формы СЗВ-6-1 (2) с кодом категории застрахованного лица ВЖИЖ, ВЖНР, ВЖСХ,
				// ВЖЕН, ВЖМН, ВЖОИ, ВЖХО,  ВЖТЗ, ВЖИТ, ВЖСИ, ВЖЭД, ВЖЦС, ВЖСБ, ВЖЭС, ВПИЖ, ВПНР, ВПСХ, ВПЕН, ВПМН, ВПОИ, ВПХО,
				// ВПТЗ, ВПИТ, ВПСИ, ВПЭД, ВПЦС, ВПСБ, ВПЭС.
				Если КатегорииЗЛИностранцев.Найти(КатегорияЗастрахованныхЛиц) <> Неопределено Тогда  
					
					Если ВыборкаПоСтрокамДокумента.НачисленоНакопительная <> 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: для категории %2, данные о начисленных суммах на накопительную часть пенсии должны отсутствовать.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, КатегорияЗастрахованныхЛиц);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВзносах(Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								"НачисленоНакопительная",
								Отказ);
					КонецЕсли;
						
					Если ВыборкаПоСтрокамДокумента.УплаченоНакопительная <> 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: для категории %2, данные о уплаченных суммах на накопительную часть пенсии должны отсутствовать.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование, КатегорияЗастрахованныхЛиц);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВзносах(Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								"УплаченоНакопительная",
								Отказ);
					КонецЕсли;
					
				ИначеЕсли ТарифыПФР <> Неопределено Тогда
					
					// Проверим что заполнена накопительная часть пенсии.
					Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) И ВыборкаПоСтрокамДокумента.ДатаРождения >= '19670101' И 
						ТарифыПФР.ПФРНакопительная <> 0  И ВыборкаПоСтрокамДокумента.НачисленоСтраховая <> 0 И ВыборкаПоСтрокамДокумента.НачисленоНакопительная = 0 Тогда
						
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: не заполнена сумма страховых взносов на накопительную часть трудовой пенсии.'"), ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВзносах(Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,  
								"НачисленоНакопительная", 
								Отказ);
						
					ИначеЕсли ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) 
						И ВыборкаПоСтрокамДокумента.ДатаРождения >= '19670101' 
						И ТарифыПФР.ПФРНакопительная <> 0 
						И ТарифыПФР.ПФРСтраховая <> 0 Тогда
						
						// П 5.1 Значение, рассчитанное для каждой строки формы отдельно по каждому застрахованному лицу по формуле: 
						// страховые взносы на страховую часть трудовой пенсии умноженные на тариф страховых взносов на накопительную
						// часть пенсии и деленные на   тариф страховых взносов  на страховую часть  должно равняться сумме страховых
						// взносов на накопительную часть трудовой пенсии  (допустимое расхождение до 10 копеек).
						РассчитанныйПФРНакопительная = ВыборкаПоСтрокамДокумента.НачисленоСтраховая * ТарифыПФР.ПФРНакопительная / ТарифыПФР.ПФРСтраховая;
						Разность = Макс(РассчитанныйПФРНакопительная -  ВыборкаПоСтрокамДокумента.НачисленоНакопительная, ВыборкаПоСтрокамДокумента.НачисленоНакопительная - РассчитанныйПФРНакопительная);
						Если Разность >= 0.10 Тогда
							ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %2:  - страховые взносы на страховую часть трудовой пенсии умноженные на тариф страховых взносов на накопительную часть пенсии и деленные на  тариф страховых взносов  на страховую часть  должно равняться сумме страховых взносов на накопительную часть трудовой пенсии (допустимое расхождение до 10 копеек)'");
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник, ВыборкаПоСтрокамДокумента.СотрудникНаименование, КатегорияЗастрахованныхЛиц);
							ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВзносах(Ошибки, 
									Ссылка,
									ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
									ТекстОшибки,  
									"НачисленоСтраховая", 
									Отказ);
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
					// Проверим правильность расчета взносов.
				Если ТарифыДляРасчета <> Неопределено Тогда
				
					// П 10.1.1 Для форм СЗВ-6-4 по всем категориям застрахованных лиц сумма подграф «Начислено» граф «Сумма страховых
					// взносов на страховую часть трудовой пенсии»  и  «Сумма страховых взносов на накопительную часть трудовой
					// пенсии» таблицы  «Сведения о начисленных и уплаченных страховых взносах на обязательное пенсионное страхование
					// за последние три месяца отчетного периода не должна отличаться более чем на 3 копейки от значения графы «в том
					// числе на которые начислены страховые взносы на обязательное пенсионное страхование»
					// «входящих в базу для начисления страховых взносов, не превышающую предельную» строки «Всего за последние три
					// месяца отчетного периода, в т.ч.
					// Таблицы «Сведения о сумме выплат и иных вознаграждений, начисленных в пользу физического лица», умноженного на
					// соответствующий коэффициент.
					
					РассчитанныйПФР = СтрокиЗаработка.Итог("ОблагаетсяВзносамиДоПредельнойВеличины") * (ТарифыДляРасчета.ПФРСтраховая + ТарифыДляРасчета.ПФРНакопительная) / 100;
					Разность = Макс(РассчитанныйПФР - ВыборкаПоСтрокамДокумента.НачисленоСтраховая -  ВыборкаПоСтрокамДокумента.НачисленоНакопительная, ВыборкаПоСтрокамДокумента.НачисленоСтраховая + ВыборкаПоСтрокамДокумента.НачисленоНакопительная - РассчитанныйПФР);
					Если Разность > 0.03 Тогда
						ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - сумма страховых взносов на страховую часть трудовой пенсии и страховых взносов на накопительную часть пенсии должна равняться сумме выплат, на которые начислены страховые взносы, не превышающую предельную величину базы, умноженной на суммарный тариф взносов (допустимое расхождение до 3 копеек)'");
						
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки,
							, 
							Отказ);
					КонецЕсли;
					
				КонецЕсли;
				
				// П 10.1.2 Для отчетного периода - 1 квартал Если таблица «Период работы за последние три месяца отчетного
				// периода» содержит хотя бы одну запись, кроме записи  с кодом «АДМИНИСТР», «ДЕТИ», «НЕОПЛ», «ДЛДЕТИ», «ДЛОТПУСК»,
				// «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС»,  графа «Начислено» графы «Страховые взносы на страховую часть трудовой пенсии»
				// таблицы «Сведения о начисленных и уплаченных страховых взносах на обязательное пенсионное страхование за
				// последние три месяца отчетного периода» должны содержать ненулевое значение.
				Если НачалоКвартала(ПроверяемыйПериод) = НачалоГода(ПроверяемыйПериод) И ВыборкаПоСтрокамДокумента.НачисленоСтраховая = 0 И ВыборкаПоСтрокамДокумента.КоличествоОплачиваемыхСтрок > 0 Тогда
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1:  - Для отчетного периода - 1 квартал: если таблица «Период работы за последние три месяца отчетного периода» содержит хотя бы одну запись, кроме записи с кодом «АДМИНИСТР», «ДЕТИ», «НЕОПЛ», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС»,  графа «Начислено» графы «Страховые взносы на страховую часть трудовой пенсии» таблицы «Сведения о начисленных и уплаченных страховых взносах на обязательное пенсионное страхование за последние три месяца отчетного периода» должны содержать ненулевое значение'");
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки);
					
				КонецЕсли;
				
				// П 10.2 Сверка данных о сумме выплат и иных вознаграждений, начисленных в пользу застрахованного лица, занятого
				// на соответствующих видах работ, на которые начислены страховые взносы по дополнительному тарифу.
				// В случае, если в строке таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4
				// одновременно с  одним из кодов особых условий труда или условий для досрочного назначения трудовой  пенсии,
				// указан код «ВРНЕТРУД», «ДЕКРЕТ», «ДЛОТПУСК» или сочетание кодов «27-1» и «27-11» или «27-14» проверка не
				// производится.
				
				ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0;
				Для каждого СтрокаЗаработка Из СтрокиЗаработка Цикл
					Если СтрокаЗаработка.Месяц = 1 Тогда
						ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
						ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					КонецЕсли;
					Если СтрокаЗаработка.Месяц = 2 Тогда
						ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
						ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					КонецЕсли;
					Если СтрокаЗаработка.Месяц = 3 Тогда
						ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
						ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					КонецЕсли;
				КонецЦикла;
				
				// П 10.2.5 По всем формам СЗВ-6-4 при наличии значений в строках «1 месяц», «2 месяц», «3 месяц» графы «Сумма
				// выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ,  указанных в подпункте
				// 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе
				// «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4
				// кода особых условий труда 27-1 (ВОДОЛАЗ) в строке периода работы за соответствующий месяц.
				
				// П 10.2.7 По всем формам СЗВ-6-4 при наличии кода 27-1 и ВОДОЛАЗ особых условий труда в строке периода работы за
				// месяц, два месяца, три месяца отчетного периода обязательно наличие значений  в графах «Сумма выплат и иных
				// вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1
				// статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за соответствующие месяцы.
				
				Если ВыборкаПоСтрокамДокумента.Ст27_1ВПервомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0 Тогда
						ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1:  - При наличии кода 27-1 особых условий труда в строке периода работы за первый месяц отчетного периода обязательно наличие значений в графах «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27  Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц'");
						
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								, 
								Отказ);
					КонецЕсли; 
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьСт27_1ВПервомМесяце Тогда // Коды есть, но проверять не надо.
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце <> 0 Тогда	
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1:  - При наличии значений в строке «1 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»  таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 кода особых условий труда 27-1 в строке периода работы за этот месяц'");
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки,
							, 
							Отказ);
					
				КонецЕсли;
				
				Если ВыборкаПоСтрокамДокумента.Ст27_1ВоВторомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0 Тогда
						ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии кода 27-1 особых условий труда в строке периода работы за второй месяц отчетного периода обязательно наличие значений в графах «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27  федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц'");
						
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								, 
								Отказ);
						
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьСт27_1ВоВторомМесяце Тогда // Коды есть, но проверять не надо.
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце <> 0 Тогда	
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии значений в строке «2 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»  таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 кода особых условий труда 27-1 в строке периода работы за этот месяц'");
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки,
							, 
							Отказ);
					
				КонецЕсли;
				
				Если ВыборкаПоСтрокамДокумента.Ст27_1ВТретьемМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0 Тогда
						ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии кода 27-1 особых условий труда в строке периода работы за третий месяц отчетного периода обязательно наличие значений в графах «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27  Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц'");

						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								, 
								Отказ);
						
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьСт27_1ВТретьемМесяце Тогда // Коды есть, но проверять не надо.
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце <> 0 Тогда	
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии значений в строке «3 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»  таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 кода особых условий труда 27-1 в строке периода работы за этот месяц'");

					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки,
							, 
							Отказ);
					
				КонецЕсли;
				
				// П 10.2.6 По всем формам СЗВ-6-4 при наличии значений в строках «1 месяц», «2 месяц», «3 месяц» графы «Сумма
				// выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ,  указанных в подпункте
				// 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в
				// графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» формы
				// СЗВ-6-4  одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7,
				// 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание
				// (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП,
				// 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке
				// периода работы за соответствующий месяц.
				
				// П 10.2.8 По всем формам СЗВ-6-4 при наличии в графе «Особые условия труда (код)» таблицы «Период работы за
				// последние три месяца отчетного периода» одного из кодов особых условий труда,  кроме «27-1» и «28-СЕВ» (27-2,
				// 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения
				// трудовой пенсии. Основание (код)» таблицы.
				// «Период работы за последние три месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП,
				// САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ,
				// 27-14, 27-15 в строке периода работы за месяц, два месяца, три месяца отчетного периода обязательно наличие
				// значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному  лицу, занятому на видах
				// работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской
				// Федерации» за соответствующие месяцы.
				
				Если ВыборкаПоСтрокамДокумента.ОстальныеКодыВПервомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0 Тогда
						ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы за первый месяц отчетного периода обязательно наличие значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц'");

						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								, 
								Отказ);
						
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьОстальныеКодыВПервомМесяце Тогда // Коды есть, но проверять не надо.
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце <> 0 Тогда
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии значений в строке «1 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы за этот месяц'");

					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки,
							, 
							Отказ);
					
				КонецЕсли;
				
				Если ВыборкаПоСтрокамДокумента.ОстальныеКодыВоВторомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0 Тогда
						ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы за второй месяц отчетного периода обязательно наличие значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц'");

						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								, 
								Отказ);
						
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьОстальныеКодыВоВторомМесяце Тогда // Коды есть, но проверять не надо.
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце <> 0 Тогда	
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии значений в строке «2 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы за этот месяц'");

					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки,
							, 
							Отказ);
					
				КонецЕсли;
				
				Если ВыборкаПоСтрокамДокумента.ОстальныеКодыВТретьемМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0 Тогда
						ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы за третий месяц отчетного периода обязательно наличие значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц'");

						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
						
						ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
								Ошибки, 
								Ссылка,
								ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
								ТекстОшибки,
								, 
								Отказ);
						
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьОстальныеКодыВТретьемМесяце Тогда // Коды есть, но проверять не надо.
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце <> 0 Тогда	
					ШаблонТекстаОшибки = НСтр("ru = 'Сотрудник %1: - При наличии значений в строке «3 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы за этот месяц'");

					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, ВыборкаПоСтрокамДокумента.СотрудникНаименование);
					
					ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияСпискаСотрудников(
							Ошибки, 
							Ссылка,
							ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
							ТекстОшибки,
							, 
							Отказ);
					
				КонецЕсли;
				
				Если ТарифыДляРасчета <> Неопределено Тогда
					// П 10.3 Значение элемента Начислено блока Сумма страховых взносов на страховую часть трудовой пенсии должно быть
					// не больше предельной величины базы для начисления страховых взносов умноженный на тариф.
					Если ПредельнаяВеличина * (ТарифыДляРасчета.ПФРСтраховая + ТарифыДляРасчета.ПФРНакопительная) / 100 < ВыборкаПоСтрокамДокумента.НачисленоСтраховая Тогда
						ТекстСообщения = "";
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Сотрудник %1: - Значение элемента Начислено блока Сумма страховых взносов на страховую часть трудовой пенсии должно быть не больше предельной величины базы для начисления страховых взносов умноженный на тариф.'"),
									ВыборкаПоСтрокамДокумента.СотрудникНаименование);
							ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуДанныхОВзносах(
									Ошибки, 
									Ссылка,
									ВыборкаПоСтрокамДокумента.НомерСтрокиСотрудник,
									ТекстОшибки,  
									"НачисленоСтраховая", 
									Отказ);
							
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		Период = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
		ПерсонифицированныйУчет.ПроверитьЗаписиОСтаже(ЗапросПоСтрокамДокумента.МенеджерВременныхТаблиц, Ссылка, Период, Отказ);		
	КонецЕсли;	
КонецПроцедуры

Функция ДанныеДляПроведения()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник КАК ФизическоеЛицо,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ТипДоговора
		|ИЗ
		|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
		|ГДЕ
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = &Ссылка";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоНачисленоСтраховая КАК НачисленоСтраховая,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоУплаченоСтраховая КАК УплаченоСтраховая,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоНачисленоНакопительная КАК НачисленоНакопительная,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.ДоУплаченоНакопительная КАК УплаченоНакопительная,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник КАК ФизическоеЛицо,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ТипДоговора
		|ИЗ
		|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
		|ГДЕ
		|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = &Ссылка";
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЗапросПоСтрокамДокументаДляПроверкиЗаполнения()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаЗаписиОСтаже", ЗаписиОСтаже);
	Запрос.УстановитьПараметр("ТаблицаСотрудники", Сотрудники);
	
	ДопустимыеЗначенияТретьегоПараметра = Новый Массив;
	Для каждого Значение Из ПерсонифицированныйУчет.ДопустимыеЗначенияТретьегоПараметраИсчисляемогоСтажа() Цикл
		ДопустимыеЗначенияТретьегоПараметра.Добавить(Значение.Ключ);
	КонецЦикла;
	
	ИсключительныеОснованияВыслугиЛет = Новый Массив;
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ВП);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ГР);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_14);
	
	ПрочиеПроверяемыеКоды = Новый Массив;
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_2);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_3);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_4);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_5);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_6);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_7);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_8);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_9);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_10);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_ОС);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТрудаПФР.Ст27_ПЖ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ВП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_11ГР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_12);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_СП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.САМОЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.СПЕЦАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.СПАСАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.УЧЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.ВЫСШПИЛ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.НОРМАПР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.НОРМСП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.РЕАКТИВН);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.ЛЕТРАБ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_14);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияДосрочногоНазначенияПенсии.Ст27_15);
	
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("Ст27_1", Справочники.ОсобыеУсловияТрудаПФР.Ст27_1);
	Запрос.УстановитьПараметр("Ст27_2", Справочники.ОсобыеУсловияТрудаПФР.Ст27_2);
	Запрос.УстановитьПараметр("КодПозицииСпискаСт27_2", Справочники.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.НайтиПоКоду("23307000-17541"));
	Запрос.УстановитьПараметр("ДопустимыеЗначенияТретьегоПараметра", ДопустимыеЗначенияТретьегоПараметра);
	Запрос.УстановитьПараметр("ИсключительныеОснованияВыслугиЛет", ИсключительныеОснованияВыслугиЛет);
	Запрос.УстановитьПараметр("ПрочиеПроверяемыеКоды", ПрочиеПроверяемыеКоды);
	ПериодДействия = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
	ПервыйМесяц = Месяц(НачалоКвартала(ПериодДействия));
	Запрос.УстановитьПараметр("Месяц1", ПервыйМесяц);
	Запрос.УстановитьПараметр("Месяц2", ПервыйМесяц + 1);
	Запрос.УстановитьПараметр("Месяц3", ПервыйМесяц + 2);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСотрудники.НомерСтроки,
	|	ТаблицаСотрудники.Сотрудник,
	|	ТаблицаСотрудники.Фамилия,
	|	ТаблицаСотрудники.Имя,
	|	ТаблицаСотрудники.Отчество,
	|	ТаблицаСотрудники.СтраховойНомерПФР,
	|	ТаблицаСотрудники.НачисленоСтраховая,
	|	ТаблицаСотрудники.УплаченоСтраховая,
	|	ТаблицаСотрудники.НачисленоНакопительная,
	|	ТаблицаСотрудники.УплаченоНакопительная
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудники КАК ТаблицаСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудники.Сотрудник,
	|	МИНИМУМ(ВТСотрудники.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТСотрудникиНомераСтрок
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.Сотрудник";
	
	Запрос.Выполнить();
	
	КадровыйУчет.СоздатьВТФизическиеЛицаРаботавшиеВОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, Организация, ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод), ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод)));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	МИНИМУМ(ДублиСтрок.НомерСтроки) КАК НомерСтрокиДубль
	|ПОМЕСТИТЬ ВТДублиСтрокСотрудник
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ДублиСтрок
	|		ПО СотрудникиДокумента.НомерСтроки > ДублиСтрок.НомерСтроки
	|			И СотрудникиДокумента.Сотрудник = ДублиСтрок.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиДокумента.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	МИНИМУМ(ДублиСтрок.НомерСтроки) КАК НомерСтрокиДубль
	|ПОМЕСТИТЬ ВТДублиСтрокСтраховойНомерПФР
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ДублиСтрок
	|		ПО СотрудникиДокумента.НомерСтроки > ДублиСтрок.НомерСтроки
	|			И СотрудникиДокумента.СтраховойНомерПФР = ДублиСтрок.СтраховойНомерПФР
	|			И СотрудникиДокумента.Сотрудник <> ДублиСтрок.Сотрудник
	|			И (СотрудникиДокумента.СтраховойНомерПФР <> """")
	|			И (СотрудникиДокумента.СтраховойНомерПФР <> ""   -   -      "")
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиДокумента.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.Отчество,
	|	СотрудникиДокумента.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СотрудникиДокумента.СтраховойНомерПФР,
	|	ДублиСтрок.НомерСтрокиДубль КАК КонфликтующаяСтрока,
	|	ВЫБОР
	|		КОГДА АктуальныеСотрудники.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СотрудникРаботаетВОрганизации,
	|	ДублиСтрокСтраховойНомерПФР.НомерСтрокиДубль КАК КонфликтующаяСтрокаСтраховойНомер,
	|	СотрудникиДокумента.НачисленоСтраховая,
	|	СотрудникиДокумента.УплаченоСтраховая,
	|	СотрудникиДокумента.НачисленоНакопительная,
	|	СотрудникиДокумента.УплаченоНакопительная,
	|	СотрудникиДокумента.Сотрудник.ДатаРождения КАК ДатаРождения
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДублиСтрокСотрудник КАК ДублиСтрок
	|		ПО СотрудникиДокумента.НомерСтроки = ДублиСтрок.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДублиСтрокСтраховойНомерПФР КАК ДублиСтрокСтраховойНомерПФР
	|		ПО СотрудникиДокумента.НомерСтроки = ДублиСтрокСтраховойНомерПФР.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаРаботавшиеВОрганизации КАК АктуальныеСотрудники
	|		ПО СотрудникиДокумента.Сотрудник = АктуальныеСотрудники.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаписиОСтаже.Сотрудник,
	|	ТаблицаЗаписиОСтаже.НомерСтроки,
	|	ТаблицаЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ТаблицаЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ТаблицаЗаписиОСтаже.ДатаНачалаПериода,
	|	ТаблицаЗаписиОСтаже.ДатаОкончанияПериода,
	|	ТаблицаЗаписиОСтаже.ТерриториальныеУсловия,
	|	ТаблицаЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ТаблицаЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ТаблицаЗаписиОСтаже.КодПозицииСписка,
	|	ТаблицаЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ТаблицаЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ТаблицаЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ТаблицаЗаписиОСтаже.ТретийПараметрВыслугиЛет
	|ПОМЕСТИТЬ ВТТаблицаСтажа
	|ИЗ
	|	&ТаблицаЗаписиОСтаже КАК ТаблицаЗаписиОСтаже
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	КОЛИЧЕСТВО(ЗаписиОСтаже.НомерОсновнойЗаписи) КАК КоличествоЗаписей,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа ЕСТЬ NULL 
	|				ТОГДА 0
	|			КОГДА ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоОплачиваемыхСтрок,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) = &Месяц1
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) = &Месяц1
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) = &Месяц1
	|					И ОсновныеЗаписиОСтаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) = &Месяц1
	|					И ОсновныеЗаписиОСтаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ОсновныеЗаписиОСтаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ОсновныеЗаписиОСтаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) = &Месяц3
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) = &Месяц3
	|					И ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) = &Месяц3
	|					И ОсновныеЗаписиОСтаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОСтаже.ДатаОкончанияПериода) = &Месяц3
	|					И ОсновныеЗаписиОСтаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтаже.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтаже.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтаже.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВТретьемМесяце
	|ПОМЕСТИТЬ ВТПараметрыСверкиСтажа
	|ИЗ
	|	ВТСотрудникиДокумента КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаСтажа КАК ЗаписиОСтаже
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаСтажа КАК ОсновныеЗаписиОСтаже
	|			ПО ЗаписиОСтаже.Сотрудник = ОсновныеЗаписиОСтаже.Сотрудник
	|				И ЗаписиОСтаже.НомерОсновнойЗаписи = ОсновныеЗаписиОСтаже.НомерОсновнойЗаписи
	|				И (ОсновныеЗаписиОСтаже.НомерДополнительнойЗаписи = 0)
	|		ПО СотрудникиДокумента.Сотрудник = ЗаписиОСтаже.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиДокумента.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.Сотрудник,
	|	ЗаписиОСтаже.НомерСтроки,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	СотрудникиНомераСтрок.НомерСтроки КАК НомерСтрокиСотрудник
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	ВТТаблицаСтажа КАК ЗаписиОСтаже
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиНомераСтрок КАК СотрудникиНомераСтрок
	|		ПО ЗаписиОСтаже.Сотрудник = СотрудникиНомераСтрок.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.СотрудникНаименование,
	|	СотрудникиДокумента.СтраховойНомерПФР,
	|	СотрудникиДокумента.СотрудникРаботаетВОрганизации,
	|	СотрудникиДокумента.КонфликтующаяСтрока,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.Отчество,
	|	СотрудникиДокумента.КонфликтующаяСтрокаСтраховойНомер,
	|	СотрудникиДокумента.НачисленоСтраховая,
	|	СотрудникиДокумента.УплаченоСтраховая,
	|	СотрудникиДокумента.НачисленоНакопительная,
	|	СотрудникиДокумента.УплаченоНакопительная,
	|	СотрудникиДокумента.ДатаРождения КАК ДатаРождения,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.КоличествоЗаписей, 0) КАК КоличествоЗаписей,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.КоличествоОплачиваемыхСтрок, 0) КАК КоличествоОплачиваемыхСтрок,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.Ст27_1ВПервомМесяце, ЛОЖЬ) КАК Ст27_1ВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.НеПроверятьСт27_1ВПервомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.ОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК ОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.НеПроверятьОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.Ст27_1ВоВторомМесяце, ЛОЖЬ) КАК Ст27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.НеПроверятьСт27_1ВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.ОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК ОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.НеПроверятьОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.Ст27_1ВТретьемМесяце, ЛОЖЬ) КАК Ст27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.НеПроверятьСт27_1ВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.ОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК ОстальныеКодыВТретьемМесяце,
	|	ЕСТЬNULL(ПараметрыСверкиСтажа.НеПроверятьОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВТретьемМесяце
	|ИЗ
	|	ВТСотрудникиДокумента КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыСверкиСтажа КАК ПараметрыСверкиСтажа
	|		ПО СотрудникиДокумента.Сотрудник = ПараметрыСверкиСтажа.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник";
	
	Возврат Запрос;
	
КонецФункции

Функция ОкончаниеОтчетногоПериода() Экспорт
	
	Возврат ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
КонецФункции

#КонецОбласти

#КонецЕсли
