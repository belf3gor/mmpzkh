#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция СформироватьЗапросДляПроверки()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаСотрудники", Сотрудники);
	Запрос.УстановитьПараметр("ТаблицаСтажа", ЗаписиОСтаже);
	Запрос.УстановитьПараметр("ТаблицаПенсСведений", СведенияДляОценкиПенсионныхПрав);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_КСотрудники.НомерСтроки,
	|	ПачкаДокументовСЗВ_КСотрудники.Фамилия,
	|	ПачкаДокументовСЗВ_КСотрудники.Имя,
	|	ПачкаДокументовСЗВ_КСотрудники.Сотрудник КАК Сотрудник,
	|	ПачкаДокументовСЗВ_КСотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_КСотрудники.ТерриториальныеУсловияНа31_12_2001,
	|	ПачкаДокументовСЗВ_КСотрудники.РайонныйКоэффициентНа31_12_2001
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудники КАК ПачкаДокументовСЗВ_КСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудники.Сотрудник,
	|	МИНИМУМ(ВТСотрудники.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТСотрудникиНомераСтрок
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.Сотрудник";
	
	Запрос.Выполнить();
	
	КадровыйУчет.СоздатьВТФизическиеЛицаРаботавшиеВОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, Организация, Дата, Дата);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СотрудникиДокумента.ТерриториальныеУсловияНа31_12_2001,
	|	СотрудникиДокумента.РайонныйКоэффициентНа31_12_2001,
	|	СотрудникиДокумента.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ДублиСтрок.НомерСтроки КАК КонфликтующаяСтрока,
	|	ВЫБОР
	|		КОГДА АктуальныеСотрудники.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СотрудникРаботаетВОрганизации
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ДублиСтрок
	|		ПО СотрудникиДокумента.Сотрудник = ДублиСтрок.Сотрудник
	|			И СотрудникиДокумента.НомерСтроки > ДублиСтрок.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаРаботавшиеВОрганизации КАК АктуальныеСотрудники
	|		ПО СотрудникиДокумента.Сотрудник = АктуальныеСотрудники.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.НомерСтроки,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.Сотрудник,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.НомерПериодаТрудовойДеятельности,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ОрганизацияТрудовойДеятельности,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ВидДеятельности,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ДатаНачалаПериода,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ДатаОкончанияПериода,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.КодПозицииСписка,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.НулевойПараметрИсчисляемогоСтажа,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.ТерриториальныеУсловия,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.РайонныйКоэффициент,
	|	ПачкаДокументовСЗВ_КЗаписиОСтаже.Должность
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	&ТаблицаСтажа КАК ПачкаДокументовСЗВ_КЗаписиОСтаже
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.НомерСтроки,
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.Сотрудник,
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.ВидСтажа,
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.НомерЗаписи,
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.КодСтажа,
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.Лет,
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.Месяцев,
	|	ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав.Дней
	|ПОМЕСТИТЬ ВТПенсионныеСведения
	|ИЗ
	|	&ТаблицаПенсСведений КАК ПачкаДокументовСЗВ_КСведенияДляОценкиПенсионныхПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерСтроки,
	|	ЗаписиОСтаже.Сотрудник,
	|	ЗаписиОСтаже.НомерПериодаТрудовойДеятельности,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ОрганизацияТрудовойДеятельности,
	|	ЗаписиОСтаже.ВидДеятельности,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.НулевойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.РайонныйКоэффициент,
	|	ЗаписиОСтаже.Должность,
	|	СотрудникиНомераСтрок.НомерСтроки КАК НомерСтрокиСотрудник
	|ПОМЕСТИТЬ ВТСотрудникиБезДублей
	|ИЗ
	|	ВТЗаписиОСтаже КАК ЗаписиОСтаже
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиНомераСтрок КАК СотрудникиНомераСтрок
	|		ПО ЗаписиОСтаже.НомерСтроки = СотрудникиНомераСтрок.НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	Сотрудники.Сотрудник,
	|	Сотрудники.Сотрудник.Наименование КАК СотрудникНаименование,
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.КонфликтующаяСтрока,
	|	Сотрудники.ТерриториальныеУсловияНа31_12_2001,
	|	Сотрудники.РайонныйКоэффициентНа31_12_2001,
	|	Сотрудники.СотрудникРаботаетВОрганизации,
	|	Сотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ЗаписиОСтаже.НомерСтроки КАК НомерСтрокиСтаж,
	|	ЗаписиОСтаже.НомерПериодаТрудовойДеятельности,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ОрганизацияТрудовойДеятельности КАК Организация,
	|	ЗаписиОСтаже.ВидДеятельности,
	|	ЗаписиОСтаже.ВидДеятельности.Код КАК ВидДеятельностиКод,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда.Код КАК ОсобыеУсловияТрудаКод,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.КодПозицииСписка.Код КАК КодПозицииСпискаКод,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа.Код КАК ОснованиеИсчисляемогоСтажаКод,
	|	ЗаписиОСтаже.НулевойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет.Код КАК ОснованиеВыслугиЛетКод,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ТерриториальныеУсловия.Код КАК ТерриториальныеУсловияКод,
	|	ЗаписиОСтаже.РайонныйКоэффициент,
	|	ЗаписиОСтаже.Должность
	|ИЗ
	|	ВТСотрудникиДокумента КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	НомерСтрокиСтаж;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиНомераСтрок.НомерСтроки КАК НомерСтрокиСотрудник,
	|	ВТПенсионныеСведения.НомерСтроки КАК НомерСтроки,
	|	ВТПенсионныеСведения.Сотрудник КАК Сотрудник,
	|	ВТПенсионныеСведения.Сотрудник.Наименование КАК СотрудникНаименование,
	|	ВТПенсионныеСведения.ВидСтажа,
	|	ВТПенсионныеСведения.НомерЗаписи,
	|	ВТПенсионныеСведения.КодСтажа,
	|	ВТПенсионныеСведения.КодСтажа.Код КАК КодСтажаКод,
	|	ВТПенсионныеСведения.Лет,
	|	ВТПенсионныеСведения.Месяцев,
	|	ВТПенсионныеСведения.Дней
	|ИЗ
	|	ВТПенсионныеСведения КАК ВТПенсионныеСведения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиНомераСтрок КАК СотрудникиНомераСтрок
	|		ПО ВТПенсионныеСведения.Сотрудник = СотрудникиНомераСтрок.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	НомерСтроки";
	
	Возврат Запрос;
	
КонецФункции

// Выполняет проверку дополнительной записи стажа на допустимость значений реквизитов.
Процедура ПроверкаДополнительнойЗаписи(Запись, ОсновнаяЗапись, НомерСтрокиСотрудник, НомерСтроки, Отказ) 
	
	Если НЕ ЗначениеЗаполнено(ОсновнаяЗапись.ОсобыеУсловияТруда) 
		И НЕ ЗначениеЗаполнено(ОсновнаяЗапись.ОснованиеВыслугиЛет)
		И НЕ ЗначениеЗаполнено(ОсновнаяЗапись.ТерриториальныеУсловия)
		И НЕ ЗначениеЗаполнено(ОсновнаяЗапись.ОснованиеИсчисляемогоСтажа) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'дополнительная запись может вводиться только при заполнении хотя бы одного из реквизитов основной записи:
		| 		Особые условия труда , Выслуга лет, Территориальные условия, Основание исчисляемого стажа.'"), НомерСтроки, Запись.СотрудникНаименование);
		СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ОснованиеИсчисляемогоСтажа) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в дополнительной записи о стаже не может указываться основание исчисляемого стажа.'"), НомерСтроки, Запись.СотрудникНаименование);
		СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
	КонецЕсли;
	
	// Проверка на обязательный ввод одной из льгот
	УказаныТерриториальныеУсловия = ЗначениеЗаполнено(Запись.ТерриториальныеУсловия);
	УказанРК = ЗначениеЗаполнено(Запись.РайонныйКоэффициент);
	ЗаданаГруппаТерриториальныеУсловия = УказаныТерриториальныеУсловия Или УказанРК;
	
	УказаныОсобыеУсловияТруда = ЗначениеЗаполнено(Запись.ОсобыеУсловияТруда);
	УказаноОснованиеВыслугиЛет = ЗначениеЗаполнено(Запись.ОснованиеВыслугиЛет);
	
	Если (НЕ ЗаданаГруппаТерриториальныеУсловия) И (НЕ УказаныОсобыеУсловияТруда) И (НЕ УказаноОснованиеВыслугиЛет) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в дополнительной записи должна быть задана либо территориальная льгота, либо особые условия труда, либо выслуга лет.'"), НомерСтроки, Запись.СотрудникНаименование);
		СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
	КонецЕсли;
	
	// Проверка на ввод территориальной льготы
	Если ЗаданаГруппаТерриториальныеУсловия Тогда
		Если  (НЕ ЗначениеЗаполнено(ОсновнаяЗапись.ТерриториальныеУсловия)) И(НЕ ЗначениеЗаполнено(ОсновнаяЗапись.РайонныйКоэффициент)) Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в дополнительной записи территориальная льгота может быть указана только при указании территориальной льготы в основной записи.'"), НомерСтроки, Запись.СотрудникНаименование);
			СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	// Проверка на ввод условий труда
	Если УказаныОсобыеУсловияТруда Тогда
		УсловияТрудаЗаписи = Запись.ОсобыеУсловияТруда;
		Если (УсловияТрудаЗаписи <> Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12А)
			И (УсловияТрудаЗаписи <> Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12Б)
			И (УсловияТрудаЗаписи <> Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12Ж) Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в дополнительной записи код условий труда должен принимать значение ЗП12А, ЗП12Б или ЗП12Ж.'"), НомерСтроки, Запись.СотрудникНаименование);
			СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
		КонецЕсли;
		
		Если (УсловияТрудаЗаписи = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12Ж) 
			И (ОсновнаяЗапись.ОснованиеИсчисляемогоСтажа <> Справочники.ОснованияИсчисляемогоСтраховогоСтажа.УИК104) Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в дополнительной записи код условий труда ЗП12Ж может быть указан 
					|только в случае указания в основной записи кода исчисляемого стажа УИК104.'"), НомерСтроки, Запись.СотрудникНаименование);
			СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	// Проверка на ввод основания выслуги лет
	КодВыслугиЛетЗаписи = СокрЛП(Запись.ОснованиеВыслугиЛетКод);
	
	Если НЕ ЗначениеЗаполнено(ОсновнаяЗапись.ОснованиеВыслугиЛет) Тогда
		Если СтрНайти(",,ЗП81СМ,ЗП81ГД,ХИРУРСМ,ХИРУРГД,",","+КодВыслугиЛетЗаписи+",") = 0 Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'если в основной записи не указан код выслуги лет, то в дополнительной записи
					|основание выслуги лет должно быть пустым или указаны коды ЗП81СМ,ЗП81ГД,ХИРУРСМ или ХИРУРГД.'"), НомерСтроки, Запись.СотрудникНаименование);
			СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
		КонецЕсли;
	Иначе//В основной записи код выслуги указан
		
		МассивПравилНаКодыВыслугиДопЗаписей =  Новый Массив;
		МассивПравилНаКодыВыслугиДопЗаписей.Добавить(",ЛЕТИСП,САМОЛЕТ,СПЕЦАВ,ОПЫТИСП,ИСПКЛС1,ИТСМАВ,");
		МассивПравилНаКодыВыслугиДопЗаписей.Добавить(",НОРМАПР,РЕАКТИВН,НОРМСП,");
		МассивПравилНаКодыВыслугиДопЗаписей.Добавить(",,ЗП81СМ,ЗП81ГД,ХИРУРСМ,ХИРУРГД,");//пустой код допустим
		
		КодВыслугиЛетОсновнойЗаписи = СОКРЛП(ОсновнаяЗапись.ОснованиеВыслугиЛетКод);
		
		ПроверочнаяСтрокаКодов = "";
		Для Каждого СтрокаКодов Из МассивПравилНаКодыВыслугиДопЗаписей Цикл 
			Если СтрНайти(СтрокаКодов,","+КодВыслугиЛетОсновнойЗаписи+",") Тогда
				ПроверочнаяСтрокаКодов = СтрокаКодов;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПроверочнаяСтрокаКодов = "" Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'при указании в основной записи кода выслуги лет %3
					|в дополнительной записи код выслуги указываться не может.'"), НомерСтроки, Запись.СотрудникНаименование, КодВыслугиЛетОсновнойЗаписи);
			СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
		Иначе
			// Код выслуги основной записи исключим из списка возможных значений
			ПроверочнаяСтрокаКодов = СтрЗаменить(ПроверочнаяСтрокаКодов,","+КодВыслугиЛетОсновнойЗаписи,"");
			
			Если НЕ СтрНайти(ПроверочнаяСтрокаКодов,","+КодВыслугиЛетЗаписи+",") Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'при указании в основной записи кода выслуги лет %3
						|в дополнительной могут быть указаны только следующие коды выслуги: %4'"), НомерСтроки, Запись.СотрудникНаименование, КодВыслугиЛетОсновнойЗаписи, Сред(ПроверочнаяСтрокаКодов,2));
				СообщитьОбОшибкеСтажа(ТекстОшибки, Запись, Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Выполняет проверку записи стажа на допустимость значений реквизитов между группами.
Процедура  ВыполнитьПроверкуНаДопустимыеСочетанияМеждуГруппамиСтажа(Объект, МенеджерВременныхТаблиц, Отказ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Записи.НомерСтрокиСотрудник,
	|	Записи.НомерСтроки КАК НомерСтроки,
	|	Записи.Сотрудник.Наименование,
	|	Записи.Сотрудник,
	|	Записи.НомерПериодаТрудовойДеятельности,
	|	Записи.НомерОсновнойЗаписи,
	|	Записи.НомерДополнительнойЗаписи,
	|	Записи.ДатаНачалаПериода,
	|	Записи.ДатаОкончанияПериода,
	|	Записи.ТерриториальныеУсловия.Код,
	|	Записи.ОсобыеУсловияТруда.Код КАК УказанныйКодУсловийТруда,
	|	ЕСТЬNULL(Записи.КодПозицииСписка.Код, """") КАК УказанныйКодПозицииСписка,
	|	Записи.ОснованиеИсчисляемогоСтажа.Код КАК УказанныйКодОснованияИсчисляемогоСтажа,
	|	Записи.НулевойПараметрИсчисляемогоСтажа КАК УказанныйНулевойПараметрИсчисляемогоСтажа,
	|	Записи.ПервыйПараметрИсчисляемогоСтажа КАК УказанныйПервыйПараметрИсчисляемогоСтажа,
	|	Записи.ВторойПараметрИсчисляемогоСтажа КАК УказанныйВторойПараметрИсчисляемогоСтажа,
	|	Сочетания.НомерПравила КАК НомерПравила,
	|	Сочетания.КодУсловийТруда КАК КодУсловийТруда,
	|	Сочетания.ТипШаблонаКПС КАК ТипШаблонаКПС,
	|	Сочетания.КодПозицииСписка КАК КодПозицииСписка,
	|	Сочетания.КодОснованияИсчисляемогоСтажа КАК КодОснованияИсчисляемогоСтажа,
	|	Сочетания.КодОснованияВыслугиЛет КАК УказанныйКодОснованияВыслугиЛет,
	|	Сочетания.ФорматФОВ КАК ФорматФОВ,
	|	Сочетания.ПериодС,
	|	Сочетания.ПериодПо
	|ИЗ
	|	ВТСотрудникиБезДублей КАК Записи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДопустимыеСочетанияКодовГруппСтажа КАК Сочетания
	|		ПО (Записи.ОсобыеУсловияТруда.Код = Сочетания.КодУсловийТруда
	|				ИЛИ Записи.ОсобыеУсловияТруда.Код ЕСТЬ NULL 
	|					И Сочетания.КодУсловийТруда = """")
	|			И (Записи.ОснованиеИсчисляемогоСтажа.Код = Сочетания.КодОснованияИсчисляемогоСтажа
	|				ИЛИ Записи.ОснованиеИсчисляемогоСтажа.Код ЕСТЬ NULL 
	|					И Сочетания.КодОснованияИсчисляемогоСтажа = """")
	|			И (Записи.ОснованиеВыслугиЛет.Код = Сочетания.КодОснованияВыслугиЛет
	|				ИЛИ Записи.ОснованиеВыслугиЛет.Код ЕСТЬ NULL 
	|					И Сочетания.КодОснованияВыслугиЛет = """")
	|			И (Сочетания.ТипШаблонаКПС = ""Любой""
	|				ИЛИ Сочетания.ТипШаблонаКПС = ""Не указан""
	|					И Записи.КодПозицииСписка.Код ЕСТЬ NULL 
	|				ИЛИ Сочетания.ТипШаблонаКПС = ""=""
	|					И Записи.КодПозицииСписка.Код = Сочетания.КодПозицииСписка
	|				ИЛИ Сочетания.ТипШаблонаКПС = ""Первые Н""
	|					И ПОДСТРОКА(Записи.КодПозицииСписка.Код, 1, 8) = Сочетания.КодПозицииСписка
	|				ИЛИ ПОДСТРОКА(Записи.КодПозицииСписка.Код, 1, 4) = Сочетания.КодПозицииСписка)
	|			И (Сочетания.ПериодС <= 2001)
	|ГДЕ
	|	((НЕ Записи.ОсобыеУсловияТруда.Код ЕСТЬ NULL )
	|			ИЛИ (НЕ Записи.ОснованиеИсчисляемогоСтажа.Код ЕСТЬ NULL ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Записи.НомерСтрокиСотрудник,
	|	Записи.НомерПериодаТрудовойДеятельности,
	|	Записи.НомерОсновнойЗаписи,
	|	Записи.НомерДополнительнойЗаписи";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
		НомерСтроки = 0;
		Пока Выборка.СледующийПоЗначениюПоля("НомерПериодаТрудовойДеятельности") Цикл
			Пока Выборка.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") Цикл
				Пока Выборка.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи") Цикл
					
					НомерСтроки = НомерСтроки + 1;
					
					Если Не ЗначениеЗаполнено(Выборка.НомерПравила)
						Или СокрЛП(Выборка.УказанныйКодПозицииСписка) = "12100000-11465" И СокрЛП(Выборка.УказанныйКодОснованияИсчисляемогоСтажа) <> "ВОДОЛАЗ" 
						Или СокрЛП(Выборка.УказанныйКодПозицииСписка) = "12003000-17541" И СокрЛП(Выборка.УказанныйКодОснованияВыслугиЛет) <> "27-14" Тогда
						
						СтрокаСообщений = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'комбинация значений реквизитов:
								|Основание выслуги лет = %3
								|Основание исчисляемого стажа = %4
								|Особые условия труда = %5
								|Код позиции списка = %6
								|Не является допустимой.'"), Выборка.СотрудникНаименование, НомерСтроки, Выборка.УказанныйКодОснованияВыслугиЛет, Выборка.УказанныйКодОснованияИсчисляемогоСтажа,
								Выборка.УказанныйКодУсловийТруда, Выборка.УказанныйКодПозицииСписка); 
						
						СообщитьОбОшибкеСтажа(СтрокаСообщений, Выборка, Отказ);
						Продолжить;
						
					КонецЕсли;
					
					// Флаг допустимости значений реквизитов  группы "Фактически отработанное время"  
					ФОВДопустимо = Ложь;
					
					МассивСообщений = Новый Массив;
					Пока Выборка.Следующий() Цикл
						
						ФорматФОВ = Выборка.ФорматФОВ;
						СтрокаОшибкиФормата = "";
						ПрошлоПроверку = 0;
						СтрокаЗначенияПараметров = "";
						
						Для Сч = 0 По 2 Цикл
							ФорматПараметра = Сред(ФорматФОВ, Сч + 1, 1); 
							
							Если Сч = 0 Тогда
								ЗначениеПараметра = Выборка.УказанныйНулевойПараметрИсчисляемогоСтажа;
								ПсевдонимПараметра = "Годы";
							ИначеЕсли Сч = 1 Тогда	
								ЗначениеПараметра = Выборка.УказанныйПервыйПараметрИсчисляемогоСтажа;
								ПсевдонимПараметра = "Месяцы";
							Иначе
								ЗначениеПараметра = Выборка.УказанныйВторойПараметрИсчисляемогоСтажа;
								ПсевдонимПараметра = "Дни";
							КонецЕсли;
							
							ПараметрПрошелПроверку = Ложь;
							
							ТекстПараметра = Строка(Сч) + "(" + ПсевдонимПараметра + ")";
							
							Если (ФорматПараметра = "_") Тогда
								Если (ЗначениеПараметра <> 0) Тогда//ПУСТОЕ
									МассивСообщений.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'параметр исчисляемого стажа № %3 должен быть пустым (=0).'"), Выборка.СотрудникНаименование, НомерСтроки, ТекстПараметра)); 
								Иначе	
									ПараметрПрошелПроверку = ИСТИНА;
								КонецЕсли;
							ИначеЕсли (ФорматПараметра = "Г") Тогда
								Если (ЗначениеПараметра > 100) Тогда//ГОДЫ
									МассивСообщений.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'параметр исчисляемого стажа № %3 должен содержать значение не > 100 (лет).'"), Выборка.СотрудникНаименование, НомерСтроки, ТекстПараметра)); 
								Иначе	
									ПараметрПрошелПроверку = ИСТИНА;
								КонецЕсли;
							ИначеЕсли (ФорматПараметра = "М") Тогда 
								Если (ЗначениеПараметра > 11) Тогда//МЕСЯЦЫ
									МассивСообщений.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'параметр исчисляемого стажа № %3  должен содержать значение не > 11 (месяцев).'"), Выборка.СотрудникНаименование, НомерСтроки, ТекстПараметра));
								Иначе	
									ПараметрПрошелПроверку = ИСТИНА;
								КонецЕсли;
							ИначеЕсли (ФорматПараметра = "Д") Тогда 
								Если (ЗначениеПараметра > 30) Тогда//ДНИ
									МассивСообщений.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'параметр исчисляемого стажа № %3 должен содержать значение не > 30 (дней).'"), Выборка.СотрудникНаименование, НомерСтроки, ТекстПараметра));
								Иначе	
									ПараметрПрошелПроверку = ИСТИНА;
								КонецЕсли;
							ИначеЕсли (ФорматПараметра = "ч") Тогда//ЧАСЫ 
								ПараметрПрошелПроверку = ИСТИНА;
							ИначеЕсли (ФорматПараметра = "м") Тогда 
								Если (ЗначениеПараметра > 59) Тогда//МИНУТЫ
									МассивСообщений.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'параметр исчисляемого стажа № %3 должен содержать значение не > 59 (минут).'"),  Выборка.СотрудникНаименование, НомерСтроки, ТекстПараметра));
								Иначе	
									ПараметрПрошелПроверку = ИСТИНА;
								КонецЕсли;
							КонецЕсли;
							
							Если ПараметрПрошелПроверку Тогда
								ПрошлоПроверку = ПрошлоПроверку + 1;
							КонецЕсли;
							
							СтрокаЗначенияПараметров = СтрокаЗначенияПараметров + ЗначениеПараметра;
						КонецЦикла;
						
						// Если формат не равен [ПУСТОЕ,ПУСТОЕ,ПУСТОЕ], то значения всех трех параметров не должны равняться 0.
						Если (СокрЛП(ФорматФОВ) <> "___")и(СтрокаЗначенияПараметров="000") Тогда//
							ПрошлоПроверку = 0;
							МассивСообщений.Очистить();
							МассивСообщений.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в параметрах (Годы,Месяцы,Дни) должно быть указано отработанное время.'"), НомерСтроки, Выборка.СотрудникНаименование));
						КонецЕсли;
						
						Если ПрошлоПроверку = 3 Тогда
							ФОВДопустимо = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;// по вариантам формата ФОВ
					
					Если Не ФОВДопустимо Тогда
						Для Каждого Сообщение Из МассивСообщений Цикл
							СообщитьОбОшибкеСтажа(Сообщение, Выборка, Отказ);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;// По дополнительным записям	
			КонецЦикла;// По основным записям
		КонецЦикла;
	КонецЦикла;// По сотрудникам
	
КонецПроцедуры

Процедура ПроверитьДанныеДокумента(Отказ = Ложь, НеПроверяемыеРеквизиты = Неопределено) Экспорт 
	Ошибки = Новый Массив;
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;	
	
	ПерсонифицированныйУчет.ПроверитьДанныеОрганизации(ЭтотОбъект, Организация, Отказ);	
	
	ДанныеОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "Наименование, КодПоОКПО"); 
	
	ЗапросПоСтажу = СформироватьЗапросДляПроверки();
	ДанныеДляПроверки = ЗапросПоСтажу.ВыполнитьПакет();
	КоличествоРезультатов = ДанныеДляПроверки.Количество();
	
	ВыборкаЗаписиСтажа  = ДанныеДляПроверки[КоличествоРезультатов - 2].Выбрать();
	
	ПравилаПроверкиДанныхЗЛ = ПерсонифицированныйУчет.ДокументыСЗВПравилаПроверкиДанныхЗЛ(Ложь);
	
	Если ЭтотОбъект.Сотрудники.Количество() > 200 Тогда
		ТекстОшибки = НСтр("ru = 'В документе должно быть не более 200 сотрудников.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,,Отказ);
	КонецЕсли;
	
	Пока ВыборкаЗаписиСтажа.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
		
		Если ЗначениеЗаполнено(ВыборкаЗаписиСтажа.Сотрудник) Тогда 
			Если Не ВыборкаЗаписиСтажа.СотрудникРаботаетВОрганизации Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %2 не работает в организации %3.'"), ВыборкаЗаписиСтажа.НомерСтрокиСотрудник, ВыборкаЗаписиСтажа.СотрудникНаименование, ДанныеОрганизации.Наименование);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, "Объект.Сотрудники[" + Формат(ВыборкаЗаписиСтажа.НомерСтрокиСотрудник - 1, "ЧН=0; ЧГ=0") + "].Сотрудник",,Отказ);
				Продолжить;
			КонецЕсли;
			Если ВыборкаЗаписиСтажа.КонфликтующаяСтрока <> Null Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Информация о сотруднике %2 была введена в документе ранее.'"), ВыборкаЗаписиСтажа.НомерСтрокиСотрудник, ВыборкаЗаписиСтажа.СотрудникНаименование);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, "Объект.Сотрудники[" + Формат(ВыборкаЗаписиСтажа.НомерСтрокиСотрудник - 1, "ЧН=0; ЧГ=0") + "].Сотрудник",,Отказ);
				Продолжить;
			КонецЕсли;
			
			ДанныеЗастрахованногоЛица = ПерсонифицированныйУчет.ДокументыСЗВДанныеЗастрахованногоЛица(ВыборкаЗаписиСтажа);
			
			ПерсонифицированныйУчет.ПроверитьДанныеЗастрахованногоЛица(
				ДанныеЗастрахованногоЛица, 
				ВыборкаЗаписиСтажа.НомерСтрокиСотрудник, 
				ПравилаПроверкиДанныхЗЛ, 
				Ошибки, 
				Ссылка,
				Отказ);

			ТекущаяОсновнаяЗапись = Новый Структура("ФизЛицо, Организация, ВидДеятельности, ДатаНачалаПериода, ДатаОкончанияПериода, ОсобыеУсловияТруда, ОснованиеВыслугиЛет, ТерриториальныеУсловия, ОснованиеИсчисляемогоСтажа, ОснованиеВыслугиЛетКод, НомерОсновнойЗаписи, НомерДополнительнойЗаписи, НомерПериодаТрудовойДеятельности, РайонныйКоэффициент");
			
			// Список годов, в которых встречались записи с кодом исчисляемого стажа СЕЗОН
			СписокСезонныхГодов = Новый СписокЗначений;
			
			// Список значений группы реквизитов территориальные условия одной основной записи
			СписокТерриториальныеУсловияЗаписи = Новый СписокЗначений;
			
			// Список значений кодов условий труда одной основной записи
			СписокУсловияТрудаЗаписи = Новый СписокЗначений;
			
			// Список значений кодов выслуги лет основной записи
			СписокВыслугаЛетЗаписи = Новый СписокЗначений;
			
			ПредыдущийНомерПериодаДеятельности = 0;
			ПредыдущийНомерОсновнойЗаписи = 0;
			ПредыдущийНомерДополнительнойЗаписи = 0;
			ПредыдущаяОрганизация = "";
			
			ПредыдущийВидДеятельности = Справочники.ВидыОбщественноПолезнойДеятельностиСЗВК.ПустаяСсылка();
			
			НомерСтроки = 0;
			
			Если ЗначениеЗаполнено(ВыборкаЗаписиСтажа.НомерСтрокиСтаж) Тогда
				
				Пока ВыборкаЗаписиСтажа.СледующийПоЗначениюПоля("НомерСтрокиСтаж") Цикл
					
					НомерСтроки = НомерСтроки + 1;
					
					Запись = ВыборкаЗаписиСтажа;
					
					// Проверим, сменился ли период деятельности
					Если Запись.НомерПериодаТрудовойДеятельности <> ПредыдущийНомерПериодаДеятельности Тогда
						СменилсяНомерПериодаДеятельности = Истина;
					Иначе
						СменилсяНомерПериодаДеятельности = Ложь;
					КонецЕсли;
					
					Если (Запись.Организация <> ПредыдущаяОрганизация) ИЛИ (Запись.ВидДеятельности <>ПредыдущийВидДеятельности) Тогда
						СменилисьОрганизацияВидДеятельности = Истина;
					Иначе
						СменилисьОрганизацияВидДеятельности = Ложь
					КонецЕсли;
					
					Если (СменилисьОрганизацияВидДеятельности)и(НЕ СменилсяНомерПериодаДеятельности) Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'в рамках одного периода деятельности организация и вид деятельности меняться не должны.'"), НомерСтроки, Запись.СотрудникНаименование);
						СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
					КонецЕсли;
					
					// ПРОВЕРКА КОРРЕКТНОГО ЗАПОЛНЕНИЯ ДАТ НАЧАЛА И ОКОНЧАНИЯ ПЕРИОДА
					
					// По умолчанию считаем, что запись основная
					ЭтоОсновнаяЗапись = Истина;
					
					// Проверим, возможно ли появление в текущей позиции дополнительной записи о стаже
					ДополнительнаяЗаписьВозможна = Истина;
					Если СменилсяНомерПериодаДеятельности Тогда
						ДополнительнаяЗаписьВозможна = Ложь;
					КонецЕсли;
					
					// Проверка заполнения реквизитов "ДатаНачалаПериода" и "ДатаОкончанияПериода" 
					Если Не ЗначениеЗаполнено(Запись.ДатаНачалаПериода) И Не ЗначениеЗаполнено(Запись.ДатаОкончанияПериода) Тогда
						Если ДополнительнаяЗаписьВозможна Тогда
							ЭтоОсновнаяЗапись = Ложь;
						Иначе
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'не указаны даты начала и окончания периода.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
					ИначеЕсли Не ЗначениеЗаполнено(Запись.ДатаНачалаПериода) Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'при указании даты окончания периода необходимо указывать дату начала периода.'"), НомерСтроки, Запись.СотрудникНаименование);
						СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
					ИначеЕсли Не ЗначениеЗаполнено(Запись.ДатаОкончанияПериода) Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'при указании даты начала периода необходимо указывать дату окончания периода.'"), НомерСтроки, Запись.СотрудникНаименование);
						СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
					Иначе//Обе даты заполнены
						
						// Дата окончания периода не должна быть позднее 31.12.2001
						Если Запись.ДатаОкончанияПериода > '20011231'  Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'дата окончания периода должна быть не позднее 31 декабря 2001 года.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						// Начало периода не должно быть позже окончания периода 
						Если Запись.ДатаНачалаПериода > Запись.ДатаОкончанияПериода Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'дата начала периода не должна превышать дату окончания периода.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						// Начало периода не должно быть слишком старой
						Если Запись.ДатаНачалаПериода < Дата('19000101') Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'дата начала периода слишком старая.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						Если ГОД(Запись.ДатаНачалаПериода) <> ГОД (Запись.ДатаОкончанияПериода) Тогда
							
							Если (Запись.ОснованиеИсчисляемогоСтажа = Справочники.ОснованияИсчисляемогоСтраховогоСтажа.ВОДОЛАЗ) 
								ИЛИ (Запись.ОснованиеИсчисляемогоСтажа = Справочники.ОснованияИсчисляемогоСтраховогоСтажа.СЕЗОН) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для оснований исчисляемого стажа ВОДОЛАЗ и СЕЗОН даты начала и окончания периода должны находиться в пределах одного календарного года.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
							Если НЕ ((Запись.ПервыйПараметрВыслугиЛет = 0) И (Запись.ВторойПараметрВыслугиЛет  = 0) И (Запись.ТретийПараметрВыслугиЛет  = 0)) Тогда 
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'при указании параметров 1-3 выслуги лет даты начала и окончания периода должны находиться в пределах одного календарного года.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
					// Проверка только для основной записи о стаже
					Если ЭтоОсновнаяЗапись Тогда
						
						// Проверка на хронологический порядок записей
						Если ТекущаяОсновнаяЗапись.Организация <> Неопределено Тогда
							Если Запись.ДатаНачалаПериода <= ТекущаяОсновнаяЗапись.ДатаОкончанияПериода Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'дата начала периода должна быть больше даты окончания предыдущего периода.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						КонецЕсли;
						
						// Переустановка текущей основной записи
						ТекущаяОсновнаяЗапись.ФизЛицо = Запись.Сотрудник;
						ТекущаяОсновнаяЗапись.Организация = Запись.Организация;
						ТекущаяОсновнаяЗапись.ВидДеятельности = Запись.ВидДеятельности;
						ТекущаяОсновнаяЗапись.ДатаНачалаПериода = Запись.ДатаНачалаПериода;
						ТекущаяОсновнаяЗапись.ДатаОкончанияПериода = Запись.ДатаОкончанияПериода;
						ТекущаяОсновнаяЗапись.ОсобыеУсловияТруда = Запись.ОсобыеУсловияТруда;
						ТекущаяОсновнаяЗапись.ОснованиеВыслугиЛет = Запись.ОснованиеВыслугиЛет;
						ТекущаяОсновнаяЗапись.ОснованиеВыслугиЛетКод = Запись.ОснованиеВыслугиЛетКод;
						ТекущаяОсновнаяЗапись.ТерриториальныеУсловия = Запись.ТерриториальныеУсловия;
						ТекущаяОсновнаяЗапись.ОснованиеИсчисляемогоСтажа = Запись.ОснованиеИсчисляемогоСтажа;
						ТекущаяОсновнаяЗапись.НомерПериодаТрудовойДеятельности = Запись.НомерПериодаТрудовойДеятельности;
						ТекущаяОсновнаяЗапись.НомерОсновнойЗаписи = Запись.НомерОсновнойЗаписи;
						ТекущаяОсновнаяЗапись.НомерДополнительнойЗаписи = 0;
						ТекущаяОсновнаяЗапись.РайонныйКоэффициент = Запись.РайонныйКоэффициент;
						
						СписокТерриториальныеУсловияЗаписи.Очистить();
						СписокУсловияТрудаЗаписи.Очистить();
						СписокВыслугаЛетЗаписи.Очистить();
					КонецЕсли;
					
					// ПРОВЕРКА ПРАВИЛЬНОСТИ НУМЕРАЦИИ ЗАПИСЕЙ
					
					// Проверка нумерации периодов деятельности
					ОжидаемыйНомерПериода = ПредыдущийНомерПериодаДеятельности + 1;
					Если СменилсяНомерПериодаДеятельности Тогда
						Если (Запись.НомерПериодаТрудовойДеятельности <> ОжидаемыйНомерПериода)  Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'неверный номер периода трудовой деятельности. Ожидается номер: %3.'"), НомерСтроки, Запись.СотрудникНаименование, ОжидаемыйНомерПериода);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						// Сброс счетчика основных записей
						ПредыдущийНомерОсновнойЗаписи = 0;
					КонецЕсли;
					
					// Проверка нумерации основных и дополнительных записей
					Если (ЭтоОсновнаяЗапись) Тогда
						ОжидаемыйНомерОсновнойЗаписи = ПредыдущийНомерОсновнойЗаписи + 1;
						Если (Запись.НомерОсновнойЗаписи <> ОжидаемыйНомерОсновнойЗаписи)  Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'неверный номер основной записи. Ожидается номер: %3.'"), НомерСтроки, Запись.СотрудникНаименование, ОжидаемыйНомерОсновнойЗаписи);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						// Сброс счетчика дополнительных записей
						ПредыдущийНомерОсновнойЗаписи = 0;
					Иначе
						ОжидаемыйНомерДополнительнойЗаписи = ПредыдущийНомерДополнительнойЗаписи + 1;
						Если (Запись.НомерДополнительнойЗаписи <> ОжидаемыйНомерДополнительнойЗаписи)  Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'неверный номер дополнительной записи. Ожидается номер: %3.'"), НомерСтроки, Запись.СотрудникНаименование, ОжидаемыйНомерДополнительнойЗаписи);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
					КонецЕсли;
					
					//  ОПРЕДЕЛИМ, ЗАДАНЫ ЛИ РЕКВИЗИТЫ ОТДЕЛЬНЫХ ГРУПП
					
					// Признаки заполнения группы реквизитов "ТерриториальныеУсловия"
					УказаныТерриториальныеУсловия = ЗначениеЗаполнено(Запись.ТерриториальныеУсловияКод);
					УказанРК = ЗначениеЗаполнено(Запись.РайонныйКоэффициент);
					ЗаданаГруппаТерриториальныеУсловия = УказаныТерриториальныеУсловия Или УказанРК;
					
					// Признаки заполнения реквизитов группы "Особые условия труда"
					УказанКодПозицииСписка = ЗначениеЗаполнено(Запись.КодПозицииСпискаКод);
					УказаныОсобыеУсловияТруда = ЗначениеЗаполнено(Запись.ОсобыеУсловияТрудаКод);
					ЗаданаГруппаУсловияТруда = УказаныОсобыеУсловияТруда;
					
					// Признаки заполнения реквизитов группы "Исчисляемый стаж"
					УказаноОснованиеИсчисляемогоСтажа = ЗначениеЗаполнено(Запись.ОснованиеИсчисляемогоСтажаКод);
					УказанТретийПараметрИсчисляемогоСтажа = ЗначениеЗаполнено(Запись.ТретийПараметрИсчисляемогоСтажа);
					ЗаданаГруппаИсчисляемыйСтаж = УказаноОснованиеИсчисляемогоСтажа ИЛИ УказанТретийПараметрИсчисляемогоСтажа;
					
					// Признаки заполнения реквизитов группы "ФАКТИЧЕСКИ-ОТРАБОТАННОЕ ВРЕМЯ"
					УказанПараметрИсчисляемогоСтажа0 = ЗначениеЗаполнено(Запись.НулевойПараметрИсчисляемогоСтажа); 
					УказанПараметрИсчисляемогоСтажа1 = ЗначениеЗаполнено(Запись.ПервыйПараметрИсчисляемогоСтажа); 
					УказанПараметрИсчисляемогоСтажа2 = ЗначениеЗаполнено(Запись.ВторойПараметрИсчисляемогоСтажа); 
					ЗаданаГруппаФОВ = УказанПараметрИсчисляемогоСтажа0 ИЛИ УказанПараметрИсчисляемогоСтажа1 ИЛИ УказанПараметрИсчисляемогоСтажа2;
					
					// Признаки заполнения реквизитов группы "ВыслугаЛет"
					УказаноОснованиеВыслугиЛет = ЗначениеЗаполнено(Запись.ОснованиеВыслугиЛетКод);
					ЗаданаГруппаВыслугаЛет = УказаноОснованиеВыслугиЛет;
					
					//ПРОВЕРКА ЗАПИСЕЙ С ВИДОМ ДЕЯТЕЛЬНОСТИ, ОТЛИЧНЫМ ОТ РАБОТА
					
					Если Запись.ВидДеятельности <> Справочники.ВидыОбщественноПолезнойДеятельностиСЗВК.РАБОТА Тогда
						Если ЗаданаГруппаТерриториальныеУсловия ИЛИ ЗаданаГруппаУсловияТруда ИЛИ ЗаданаГруппаИсчисляемыйСтаж ИЛИ ЗаданаГруппаФОВ
							ИЛИ ЗаданаГруппаФОВ ИЛИ ЗаданаГруппаВыслугаЛет Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для записей с видом деятельности, отличным от РАБОТА, должен быть указан только период.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						Если НЕ ЭтоОсновнаяЗапись Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'дополнительные записи для видов деятельности, отличных от РАБОТА, недопустимы.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
					КонецЕсли;
					
					//  ПРОВЕРКА НА ДОПУСТИМЫЕ СОЧЕТАНИЯ МЕЖДУ ГРУППАМИ  
					
					Если  НЕ ЭтоОсновнаяЗапись Тогда
						ПроверкаДополнительнойЗаписи(Запись, ТекущаяОсновнаяЗапись, ВыборкаЗаписиСтажа.НомерСтрокиСотрудник, НомерСтроки, Отказ);
					КонецЕсли;
					
					// ПРОВЕРКА ОСНОВНЫХ И ДОПОЛНИТЕЛЬНЫХ ЗАПИСЕЙ НА ДУБЛИ ЗНАЧЕНИЙ РЕКВИЗИТОВ
					
					Если ЗаданаГруппаТерриториальныеУсловия Тогда
						ПредставлениеЗначения = " "+ СокрЛП(Запись.ТерриториальныеУсловияКод) + ", " + Запись.РайонныйКоэффициент;
						Если СписокТерриториальныеУсловияЗаписи.НайтиПоЗначению(ПредставлениеЗначения) <> Неопределено Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанные в дополнительной записи территориальные условия %3 не должны повторяться в рамках одной основной записи.'"), НомерСтроки, Запись.СотрудникНаименование, ПредставлениеЗначения);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						Иначе
							СписокТерриториальныеУсловияЗаписи.Добавить(ПредставлениеЗначения);
						КонецЕсли;
					КонецЕсли;
					
					Если УказаныОсобыеУсловияТруда Тогда
						ПредставлениеЗначения = СокрЛП(Запись.ОсобыеУсловияТрудаКод);
						Если СписокУсловияТрудаЗаписи.НайтиПоЗначению(ПредставлениеЗначения) <> Неопределено Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанный в дополнительной записи код условий труда %3 не должен повторяться в рамках одной основной записи.'"), НомерСтроки, Запись.СотрудникНаименование, ПредставлениеЗначения);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						Иначе
							СписокУсловияТрудаЗаписи.Добавить(ПредставлениеЗначения);
						КонецЕсли;
					КонецЕсли;
					
					Если УказаноОснованиеВыслугиЛет Тогда
						ПредставлениеЗначения = СОКРЛП(Запись.ОснованиеВыслугиЛетКод);
						Если СписокВыслугаЛетЗаписи.НайтиПоЗначению(ПредставлениеЗначения) <> Неопределено Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанный в дополнительной записи код выслуги лет %3 не должен повторяться в рамках одной основной записи.'"), НомерСтроки, Запись.СотрудникНаименование, ПредставлениеЗначения);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						Иначе
							СписокВыслугаЛетЗаписи.Добавить(ПредставлениеЗначения);
						КонецЕсли;
					КонецЕсли;
					
					//  ПРОВЕРКА ЗНАЧЕНИЙ РЕКВИЗИТОВ ГРУППЫ "ТерриториальныеУсловия"
					
					Если УказаныТерриториальныеУсловия Тогда
						Если Запись.ТерриториальныеУсловия = Справочники.ТерриториальныеУсловияПФР.РКС
							Или Запись.ТерриториальныеУсловия = Справочники.ТерриториальныеУсловияПФР.РКСМ 
							Или Запись.ТерриториальныеУсловия = Справочники.ТерриториальныеУсловияПФР.МКС 
							Или Запись.ТерриториальныеУсловия = Справочники.ТерриториальныеУсловияПФР.МКСР Тогда
							
							Если НЕ УказанРК Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для территориальных условий РКС, МКС, МКСР и РКСМ должен быть указан районный коэффициент.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						Иначе
							Если УказанРК Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для территориальных условий, отличных от РКС, МКС, МКСР и РКСМ, районный коэффициент указываться не должен.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					Если (УказанРК) И НЕ(Запись.РайонныйКоэффициент >= 1.01 И Запись.РайонныйКоэффициент <= 2.00) Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'районный коэффициент должен быть в диапазоне от 1.01 до 2.00.'"), НомерСтроки, Запись.СотрудникНаименование);
						СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
					КонецЕсли;
					
					//  ПРОВЕРКА ЗНАЧЕНИЙ РЕКВИЗИТОВ ГРУППЫ "Особые условия труда"
					
					КПС = СокрЛП(Запись.КодПозицииСпискаКод);
					
					// Определим, к какому списку принадлежит код позиции
					НазваниеСписка ="";
					Если УказанКодПозицииСписка Тогда 
						Если НЕ УказаныОсобыеУсловияТруда Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'код позиции списка не может указываться без указания кода особых условий труда.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						ДлинаКПС = СтрДлина(КПС);
						
						Если (ДлинаКПС=8)или(ДлинаКПС=14) Тогда
							
							Первые2СимволаКПС = Лев(КПС,2);
							Если (Первые2СимволаКПС = "10")или(Первые2СимволаКПС = "11")или(Первые2СимволаКПС = "12") Тогда
								НазваниеСписка = "Список№1";
							ИначеЕсли (Первые2СимволаКПС >= "20")и(Первые2СимволаКПС <= "23") Тогда
								НазваниеСписка = "Список№2";
							Иначе	
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'неверный код позиции списка вредных профессий.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						ИначеЕсли (ДлинаКПС=5) Тогда
							НазваниеСписка = "ПрочиеСписки";
						Иначе	
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'длина кода позиции списка должна быть равна либо 5, либо 8, либо 14 символам.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
					КонецЕсли;
					
					Если УказаныОсобыеУсловияТруда Тогда
						
						// Проверки на возможные коды списков для конкретных условий труда
						
						КодОсобыхУсловийТруда = СОКРЛП(Запись.ОсобыеУсловияТрудаКод);
						Первые8СимволовКПС = Лев(КПС,8);
						НачалоСообщения = "Для особых условий труда с кодом " + КодОсобыхУсловийТруда;
						
						Если Запись.ОсобыеУсловияТруда = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12А Тогда
							Если (НазваниеСписка <> "Список№1") Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 должен быть указан код позиции Списка №1.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						ИначеЕсли Запись.ОсобыеУсловияТруда = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12Б Тогда
							
							Если (НЕ УказанКодПозицииСписка) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 должен быть указан код позиции Списка №1 или Списка №2.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
							Если (НазваниеСписка = "Список№1") Тогда
								Если (ВРЕГ(Первые8СимволовКПС) <> "1010300Б")и(ВРЕГ(Первые8СимволовКПС) <> "1010100Г")и(ВРЕГ(Первые8СимволовКПС) <> "1010100Д")  Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 указан неверный код позиции списка.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								КонецЕсли;
							ИначеЕсли (НазваниеСписка <> "Список№2") Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 указан неверный код позиции списка.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						ИначеЕсли Запись.ОсобыеУсловияТруда = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12Г Тогда
							Если НЕ ((НЕ УказанКодПозицииСписка)или(НазваниеСписка="ПрочиеСписки")) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 код позиции списка должен быть либо пустым либо принадлежать списку по текстильной промышленности.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						ИначеЕсли Запись.ОсобыеУсловияТруда = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12Д Тогда
							Если НЕ ((НЕ УказанКодПозицииСписка)или(НазваниеСписка="ПрочиеСписки")) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 код позиции списка должен быть либо пустым либо принадлежать списку железнодорожников.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						ИначеЕсли Запись.ОсобыеУсловияТруда = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12Ж Тогда
							Если НЕ ((НЕ УказанКодПозицииСписка)или(НазваниеСписка="ПрочиеСписки")) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 код позиции списка должен быть либо пустым либо принадлежать списку лесозаготовителей.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						ИначеЕсли Запись.ОсобыеУсловияТруда = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12М Тогда
							Если НЕ ((НЕ УказанКодПозицииСписка)или(НазваниеСписка="ПрочиеСписки")) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 код позиции списка должен быть либо пустым либо принадлежать списку по работе с осужденными.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						ИначеЕсли Запись.ОсобыеУсловияТруда = Справочники.ОсобыеУсловияТрудаДляСЗВКПФР.ЗП12О Тогда
							Если НЕ ((НЕ УказанКодПозицииСписка)или(НазваниеСписка="ПрочиеСписки")) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 код позиции списка должен быть либо пустым либо принадлежать списку должностей противопожарной службы.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
						Иначе
							// Для остальных кодов условий труда КПС указываться не должен
							Если УказанКодПозицииСписка Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для особых условий труда с кодом %3 код позиции списка указываться не должен.'"), НомерСтроки, Запись.СотрудникНаименование, КодОсобыхУсловийТруда);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
					//  ПРОВЕРКА ПРАВИЛЬНОСТИ ЗАПОЛНЕНИЯ РЕКВИЗИТОВ ГРУППЫ "Выслуга лет"
					
					УказанПараметр1 = ЗначениеЗаполнено(Запись.ПервыйПараметрВыслугиЛет);
					УказанПараметр2 = ЗначениеЗаполнено(Запись.ВторойПараметрВыслугиЛет);
					УказанПараметр3 = ЗначениеЗаполнено(Запись.ТретийПараметрВыслугиЛет);
					ПараметрыУказаны = (УказанПараметр1) ИЛИ (УказанПараметр2) ИЛИ (УказанПараметр3);
					
					Если УказаноОснованиеВыслугиЛет Тогда
						
						КодОснования = СокрЛП(Запись.ОснованиеВыслугиЛетКод);
						
						УказанТолькоТретийПараметр = (НЕ УказанПараметр1) И (НЕ УказанПараметр2) И (УказанПараметр3);
						
						// Медицинские работники
						Если (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ЗП81СМ) 
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ЗП81ГД)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ХИРУРСМ)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ХИРУРГД) Тогда
							
							Если ТекущаяОсновнаяЗапись.ДатаОкончанияПериода < Дата('19991101') Тогда
								// до 1 ноября 1999 г
								Если ПараметрыУказаны Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 до 01.11.1999 года параметры 1-3 указываться не должны.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								КонецЕсли;
								
							Иначе//после 1 ноября 1999 г
								Если ПерсонифицированныйУчет.ДоляСтавкиУказанаНеверно(Запись.ТретийПараметрВыслугиЛет) Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 после 01.11.1999 третий параметр должен содержать долю ставки (число от 0.1 до 2)'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								ИначеЕсли НЕ УказанТолькоТретийПараметр Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 после 01.11.1999 должен указываться только третий параметр.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								КонецЕсли;
							КонецЕсли;
							
							// Педагогические работники	
						ИначеЕсли Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ЗП80ПД Тогда
							
							Если ТекущаяОсновнаяЗапись.ДатаОкончанияПериода < Дата('20000901') Тогда
								// до 1 сентября 2000г
								Если  ПараметрыУказаны Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3  до 01.09.2000 года параметры 1-3 указываться не должны.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								КонецЕсли;
							Иначе//после 1 сентября 2000г
								Если УказанПараметр2 Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 после 01.09.2000 второй параметр указываться не должен.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								ИначеЕсли ПерсонифицированныйУчет.ДоляСтавкиУказанаНеверно(Запись.ТретийПараметрВыслугиЛет) Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 после 01.09.2000 третий параметр должен содержать долю ставки (число от 0.1 до 2).'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								КонецЕсли;
							КонецЕсли;
							
						ИначеЕсли Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ЗП80РК Тогда
							
							Если ТекущаяОсновнаяЗапись.ДатаОкончанияПериода < Дата('20000901') Тогда
								// до 1 сентября 2000г
								Если  ПараметрыУказаны Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 до 01.09.2000 параметры 1-3 указываться не должны.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								КонецЕсли;
							Иначе//после 1 сентября 2000г
								Если (УказанПараметр2)или(УказанПараметр3) Тогда
									ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 после 01.09.2000 может быть указан только первый параметр.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
									СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
								КонецЕсли;
							КонецЕсли;
							
							//Летчики
						ИначеЕсли (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.САМОЛЕТ) 
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.СПЕЦАВ)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ИТСИСП)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ЛЕТИСП) 
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ИНСПЕКТ)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ОПЫТИСП)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ИСПКЛС1)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ИТСМАВ)Тогда
							
							Если  УказанПараметр3 Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 параметр 3 указываться не должен'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
							Если  (НЕ УказанПараметр1) И (НЕ УказанПараметр2) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 параметры 1 и 2 должны содержать отработанное время (часы и минуты).'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
							//Парашютисты
						ИначеЕсли (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.РЕАКТИВН)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.НОРМСП)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.НОРМАПР) Тогда
							
							Если (УказанПараметр2) ИЛИ (УказанПараметр3) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 параметры 2 и 3 указываться не должны.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
							// Управление воздушным движением и  инженерно-технический состав 	
						ИначеЕсли (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.УВД)
							ИЛИ (Запись.ОснованиеВыслугиЛет = Справочники.ОснованияДосрочногоНазначенияПенсииДляСЗВК.ИТС) Тогда
							
							Если  УказанПараметр3 Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 параметр 3 указываться не должен.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
							// Прочие коды выслуги лет	
						Иначе
							Если  ПараметрыУказаны Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 параметры выслуги лет 1,2,3 указываться не должны.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						КонецЕсли;
					Иначе
						Если ПараметрыУказаны Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'для основания выслуги лет %3 Параметры выслуги лет 1,2,3 без указания основания выслуги лет указываться не должны.'"), НомерСтроки, Запись.СотрудникНаименование, КодОснования);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
					КонецЕсли;
					
					//  ПРОВЕРКА ПРАВИЛЬНОСТИ ЗАПОЛНЕНИЯ РЕКВИЗИТОВ ГРУППЫ "Исчисляемый стаж"  (Основание + Третий параметр).
					
					Если УказанТретийПараметрИсчисляемогоСтажа Тогда
						Если (Запись.ТретийПараметрИсчисляемогоСтажа <> Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕТИ) И (Запись.ТретийПараметрИсчисляемогоСтажа <> Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ) Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'третий параметр исчисляемого стажа должен содержать значение ДЕТИ или ДЕКРЕТ.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						ИначеЕсли (Запись.ТретийПараметрИсчисляемогоСтажа = Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕТИ) Тогда
							Если (УказаноОснованиеИсчисляемогоСтажа) ИЛИ (ЗаданаГруппаФОВ) ИЛИ (УказаноОснованиеВыслугиЛет)  Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'при указании третьего параметра исчисляемого стажа следующие группы реквизитов должны быть пустыми:
										| Исчисляемый стаж: основание, Фактически отработанное время, Выслуга лет.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							Если ((ЗаданаГруппаУсловияТруда)ИЛИ(ЗаданаГруппаТерриториальныеУсловия)) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'при указании в третьем параметре исчисляемого стажа значения ДЕТИ группы реквизитов 
								|""Условия труда, Территориальные условия"" указываться не должны.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					Если Запись.ОснованиеИсчисляемогоСтажа = Справочники.ОснованияИсчисляемогоСтраховогоСтажа.СЕЗОН Тогда
						Если СписокСезонныхГодов.НайтиПоЗначению(Год(Запись.ДатаНачалаПериода)) = Неопределено Тогда
							СписокСезонныхГодов.Добавить(Год(Запись.ДатаНачалаПериода));
						Иначе
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'основание исчисляемого стажа СЕЗОН в течение календарного года может указываться не более одного раза.'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
					КонецЕсли;
					
					//  ПРОВЕРКА ПРАВИЛЬНОСТИ ЗАПОЛНЕНИЯ РЕКВИЗИТОВ ГРУППЫ "ФАКТИЧЕСКИ-ОТРАБОТАННОЕ ВРЕМЯ" (ПАРАМЕТРЫ 0,1,2 ИСЧИСЛЯЕМОГО СТАЖА)
					
					Если ЗаданаГруппаФОВ Тогда
						Если (НЕ УказаныОсобыеУсловияТруда) И (НЕ УказаноОснованиеИсчисляемогоСтажа)
							И (НЕ ЗаданаГруппаТерриториальныеУсловия)  Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'параметры 0,1,2 исчисляемого стажа должны указываться только при заполнении других групп реквизитов
									|(Территориальные условия, Условия труда, Исчисляемый стаж: основание).'"), НомерСтроки, Запись.СотрудникНаименование);
							СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
						КонецЕсли;
						
						Если Запись.ОснованиеИсчисляемогоСтажа <> Справочники.ОснованияИсчисляемогоСтраховогоСтажа.ВОДОЛАЗ Тогда
							
							Если Запись.ПервыйПараметрИсчисляемогоСтажа > 11 Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'первый параметр исчисляемого стажа (Месяцы) не должен быть больше 11.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							Если Запись.ВторойПараметрИсчисляемогоСтажа > 30 Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'второй параметр исчисляемого стажа (Дни) не должен быть больше 30.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
							
							Лет = 0;
							Месяцев = 0;
							Дней = 0;
							ПерсонифицированныйУчет.ПолучитьСтажЗаПериод(ТекущаяОсновнаяЗапись.ДатаОкончанияПериода, ТекущаяОсновнаяЗапись.ДатаНачалаПериода, Лет,	Месяцев, Дней);
							ПерсонифицированныйУчет.ПолучитьПриведенныйСтаж(Лет,Месяцев,Дней);
							КалендарноеВремя = Лет*12*30+Месяцев*30+Дней;
							ФОВДляСравнения = Запись.НулевойПараметрИсчисляемогоСтажа *12*30 + Запись.ПервыйПараметрИсчисляемогоСтажа *30 + Запись.ВторойПараметрИсчисляемогоСтажа; 
							
							Если (ФОВДляСравнения > КалендарноеВремя) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанное фактически отработанное время превышает календарное время.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписиСтажа, Отказ);
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
					//  ПОДГОТОВКА К СЛЕДУЮЩЕЙ ИТЕРАЦИИ  
					
					// Запомним для следующей итерации
					ПредыдущаяОрганизация = Запись.Организация;
					ПредыдущийВидДеятельности = Запись.ВидДеятельности;
					ПредыдущийНомерПериодаДеятельности= Запись.НомерПериодаТрудовойДеятельности;
					ПредыдущийНомерОсновнойЗаписи = Запись.НомерОсновнойЗаписи;
					ПредыдущийНомерДополнительнойЗаписи = Запись.НомерДополнительнойЗаписи;
					
				КонецЦикла;//Цикл по записям стажа	
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;//Цикл по сотруднику
	
	ВыполнитьПроверкуНаДопустимыеСочетанияМеждуГруппамиСтажа(ЭтотОбъект, ЗапросПоСтажу.МенеджерВременныхТаблиц, Отказ);
	
	ВыборкаСведений = ДанныеДляПроверки[КоличествоРезультатов - 1].Выбрать();
	
	Пока ВыборкаСведений.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
		КоличествоЗаписейОбОбщемТрудовомСтаже = 0; 
		КоличествоЗаписейТЕРР = 0; 
		КоличествоЗаписейОСОБ = 0; 
		КоличествоЗаписейВЫСЛ = 0; 
		СписокПроверенныхКодовСтажа = Новый СписокЗначений;
		
		НомерСтроки = 0;
		
		Пока ВыборкаСведений.Следующий() Цикл
			НомерСтроки = НомерСтроки + 1;
			
			Запись = ВыборкаСведений;
			
			НачалоСообщения = "";
			
			Если ЗначениеЗаполнено(Запись.ВидСтажа) Тогда
			
				Если (Запись.Лет + Запись.Месяцев + Запись.Дней) = 0 Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'значения реквизитов ""Лет, Месяцев, Дней"" не должны одновременно равняться нулю.'"), НомерСтроки, Запись.СотрудникНаименование);
					СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
				КонецЕсли;
				
				Если Запись.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ОбщийТрудовойСтаж Тогда
					
					// Проверка записей об общем стаже
					КоличествоЗаписейОбОбщемТрудовомСтаже = КоличествоЗаписейОбОбщемТрудовомСтаже + 1;
					Если КоличествоЗаписейОбОбщемТрудовомСтаже > 1 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'записей об общем стаже должно быть не больше одной.'"), НомерСтроки, Запись.СотрудникНаименование);
						СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
					КонецЕсли;
					
				Иначе
					
					// Проверка кода стажа 
					
					Если Запись.КодСтажа = Неопределено Тогда
						
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'не указан код стажа.'"), НомерСтроки, Запись.СотрудникНаименование);     
						СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
						
					Иначе//Код стажа заполнен
						
						КлючПоискаДублей = ""+Запись.ВидСтажа+СокрЛП(Запись.КодСтажаКод);
						Если СписокПроверенныхКодовСтажа.НайтиПоЗначению(КлючПоискаДублей) <> Неопределено Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанный вид стажа ""%3"" и код стажа ""%4"" не должны повторяться.'"), НомерСтроки, Запись.СотрудникНаименование, Запись.ВидСтажа, Запись.КодСтажаКод);
							СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
						Иначе	
							СписокПроверенныхКодовСтажа.Добавить(КлючПоискаДублей);
						КонецЕсли;
						СтруктураПоискаСтрокСтажа = Новый Структура;
						СтруктураПоискаСтрокСтажа.Вставить("Сотрудник", ВыборкаСведений.Сотрудник);
						
						// Проверка записей ТЕРР
						Если Запись.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ТерриториальныеУсловия Тогда	
							
							Если ТипЗнч(Запись.КодСтажа)<>Тип("СправочникСсылка.ТерриториальныеУсловияПФР") Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанный код территориального стажа не соответствует классификатору.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
							КонецЕсли;
							
							КоличествоЗаписейТЕРР = КоличествоЗаписейТЕРР +1;
							Если КоличествоЗаписейТЕРР > 10 Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'количество записей с расчетом стажа по территориальным условиям должно быть не более 10.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
							КонецЕсли;
							
							СтруктураПоискаСтрокСтажа.Вставить("ТерриториальныеУсловия",Запись.КодСтажа);
							
						ИначеЕсли Запись.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ОсобыеУсловияТруда Тогда	
							
							// Проверка записей ОСОБ
							Если ТипЗнч(Запись.КодСтажа)<>Тип("СправочникСсылка.ОсобыеУсловияТрудаДляСЗВКПФР") Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанный код условий труда не соответствует классификатору.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
							КонецЕсли;
							
							КоличествоЗаписейОСОБ = КоличествоЗаписейОСОБ +1;
							Если КоличествоЗаписейОСОБ > 10 Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'количество записей с расчетом стажа по особым условиям труда должно быть не более 10.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
							КонецЕсли;
							
							СтруктураПоискаСтрокСтажа.Вставить("ОсобыеУсловияТруда",Запись.КодСтажа);
						ИначеЕсли Запись.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ВыслугаЛет Тогда	
							
							// Проверка записей ВЫСЛ
							Если ТипЗнч(Запись.КодСтажа)<>Тип("СправочникСсылка.ОснованияДосрочногоНазначенияПенсииДляСЗВК") Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанный код выслуги лет не соответствует классификатору.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
							КонецЕсли;
							
							КоличествоЗаписейВЫСЛ = КоличествоЗаписейВЫСЛ +1;
							Если КоличествоЗаписейВЫСЛ > 10 Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'количество записей с расчетом стажа по выслуге лет должно быть не более 10.'"), НомерСтроки, Запись.СотрудникНаименование);
								СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
							КонецЕсли;
							
							СтруктураПоискаСтрокСтажа.Вставить("ОснованиеВыслугиЛет",Запись.КодСтажа);
						КонецЕсли;
						
						МассивНайденныхСтрокСтажа = ЗаписиОСтаже.НайтиСтроки(СтруктураПоискаСтрокСтажа);
						
						Если МассивНайденныхСтрокСтажа.Количество() = 0 Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'указанный код стажа ""%3"" не указан ни в одном из периодов трудовой деятельности.'"), НомерСтроки, Запись.СотрудникНаименование, Запись.КодСтажа);
							СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаСведений, НомерСтроки, Отказ);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкеСтажа(ТекстОшибки, ВыборкаЗаписейСтажа, Отказ) Экспорт
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1, записи о стаже, № основной записи %2 %3: %4'"), ВыборкаЗаписейСтажа.СотрудникНаименование, ВыборкаЗаписейСтажа.НомерОсновнойЗаписи, ?(ЗначениеЗаполнено(ВыборкаЗаписейСтажа.НомерДополнительнойЗаписи), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '№ дополнительной записи %1'"), ВыборкаЗаписейСтажа.НомерДополнительнойЗаписи), ""), ТекстОшибки);
	
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.Сотрудники[" + Формат(ВыборкаЗаписейСтажа.НомерСтрокиСотрудник - 1, "ЧН=0; ЧГ=0") + "].Сотрудник", ,Отказ);
	
КонецПроцедуры

Процедура СообщитьОбОшибкеСтажаИтог(ТекстОшибки, ВыборкаЗаписейСтажа, НомерСтроки, Отказ) Экспорт
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1, в строке %2 ""Сведения для оценки пенсионных прав"": %3'"), ВыборкаЗаписейСтажа.СотрудникНаименование, НомерСтроки, ТекстОшибки );
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.Сотрудники[" + Формат(ВыборкаЗаписейСтажа.НомерСтрокиСотрудник - 1, "ЧН=0; ЧГ=0") + "].Сотрудник", ,Отказ);
	
КонецПроцедуры

Функция ОкончаниеОтчетногоПериода() Экспорт
	
	Возврат КонецДня(Дата);
	
КонецФункции

#КонецОбласти

#КонецЕсли