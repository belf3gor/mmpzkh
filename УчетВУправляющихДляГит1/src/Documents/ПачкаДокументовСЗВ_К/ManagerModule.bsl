#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПачкаДокументовСЗВ_К;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт 
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьСтруктуруПроверяемыхДанных();
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьПредставленияПроверяемыхРеквизитов();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовФормеОбъекта();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	
	СоответствиеРеквизитовПутиВФормеОбъекта = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
	
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	Возврат Новый Структура;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры получения данных для заполнения и проведения документа.

Функция СформироватьЗапросПоЗаписямСтажаДляПечати(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияСЗВКСотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СведенияСЗВКСотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	СведенияСЗВКСотрудники.Сотрудник.ДатаРождения КАК ДатаРождения,
	|	СведенияСЗВКСотрудники.Сотрудник КАК Сотрудник,
	|	СведенияСЗВКСотрудники.ТерриториальныеУсловияНа31_12_2001.Код КАК ТерриториальныеУсловияНа_31_12_2001Код,
	|	СведенияСЗВКСотрудники.РайонныйКоэффициентНа31_12_2001 КАК РайонныйКоэффициентНа_31_12_2001,
	|	СведенияСЗВКСотрудники.Ссылка КАК Ссылка,
	|	СведенияСЗВКСотрудники.Ссылка.Дата КАК Дата,
	|	СведенияСЗВКСотрудники.Фамилия,
	|	СведенияСЗВКСотрудники.Имя,
	|	СведенияСЗВКСотрудники.Отчество
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_К.Сотрудники КАК СведенияСЗВКСотрудники
	|ГДЕ
	|	СведенияСЗВКСотрудники.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияСЗВКСотрудники.НомерСтрокиСотрудник КАК НомерСтрокиСотрудник,
	|	СведенияСЗВКСотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	СведенияСЗВКСотрудники.ДатаРождения КАК ДатаРождения,
	|	СведенияСЗВКСотрудники.Сотрудник КАК ФизЛицо,
	|	СведенияСЗВКСотрудники.Фамилия КАК Фамилия,
	|	СведенияСЗВКСотрудники.Имя КАК Имя,
	|	СведенияСЗВКСотрудники.Отчество КАК Отчество,
	|	СведенияСЗВКСотрудники.ТерриториальныеУсловияНа_31_12_2001Код,
	|	СведенияСЗВКСотрудники.РайонныйКоэффициентНа_31_12_2001,
	|	ЗаписиОСтаже.НомерПериодаТрудовойДеятельности КАК НомерПериодаТрудовойДеятельности,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи КАК НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи КАК НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ОрганизацияТрудовойДеятельности КАК ОрганизацияНаименование,
	|	ЗаписиОСтаже.ВидДеятельности КАК ВидДеятельности,
	|	ЗаписиОСтаже.ВидДеятельности.Код КАК ВидДеятельностиКод,
	|	ЗаписиОСтаже.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ТерриториальныеУсловия.Код КАК ТерриториальныеУсловияКод,
	|	ЗаписиОСтаже.РайонныйКоэффициент КАК РайонныйКоэффициент,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда.Код КАК ОсобыеУсловияТрудаКод,
	|	ЗаписиОСтаже.КодПозицииСписка КАК КодПозицииСписка,
	|	ЗаписиОСтаже.КодПозицииСписка.Код КАК КодПозицииСпискаКод,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа КАК ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа.Код КАК ОснованиеИсчисляемогоСтажаКод,
	|	ЗаписиОСтаже.НулевойПараметрИсчисляемогоСтажа КАК НулевойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа КАК ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа КАК ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа.Код КАК ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет.Код КАК ОснованиеВыслугиЛетКод,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет КАК ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет КАК ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтаже.Должность,
	|	ЗаписиОСтаже.НомерСтроки КАК НомерСтрокиСтаж,
	|	СведенияСЗВКСотрудники.Ссылка
	|ИЗ
	|	ВТСотрудникиДокумента КАК СведенияСЗВКСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_К.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО СведенияСЗВКСотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И СведенияСЗВКСотрудники.Ссылка = ЗаписиОСтаже.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	НомерПериодаТрудовойДеятельности,
	|	НомерОсновнойЗаписи,
	|	НомерДополнительнойЗаписи";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоСведениямДляОценкиПенсПравДляПечати(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияСЗВКСотрудники.НомерСтроки КАК НомерСтроки,
	|	СведенияСЗВКСотрудники.Сотрудник.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	СведенияСЗВКСотрудники.Сотрудник.ДатаРождения КАК ДатаРождения,
	|	СведенияСЗВКСотрудники.Сотрудник КАК Сотрудник,
	|	СведенияСЗВКСотрудники.Ссылка,
	|	СведенияСЗВКСотрудники.Фамилия,
	|	СведенияСЗВКСотрудники.Имя,
	|	СведенияСЗВКСотрудники.Отчество
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_К.Сотрудники КАК СведенияСЗВКСотрудники
	|ГДЕ
	|	СведенияСЗВКСотрудники.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияСЗВКСотрудники.Сотрудник КАК ФизЛицо,
	|	СведенияСЗВКСотрудники.НомерСтроки,
	|	СведенияДляОценкиПенсионныхПравСЗВК.НомерЗаписи,
	|	СведенияДляОценкиПенсионныхПравСЗВК.ВидСтажа,
	|	СведенияДляОценкиПенсионныхПравСЗВК.КодСтажа,
	|	СведенияДляОценкиПенсионныхПравСЗВК.КодСтажа.Код КАК КодСтажаКод,
	|	СведенияДляОценкиПенсионныхПравСЗВК.Лет,
	|	СведенияДляОценкиПенсионныхПравСЗВК.Месяцев,
	|	СведенияДляОценкиПенсионныхПравСЗВК.Дней,
	|	СведенияДляОценкиПенсионныхПравСЗВК.Ссылка
	|ИЗ
	|	ВТСотрудникиДокумента КАК СведенияСЗВКСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_К.СведенияДляОценкиПенсионныхПрав КАК СведенияДляОценкиПенсионныхПравСЗВК
	|		ПО СведенияСЗВКСотрудники.Сотрудник = СведенияДляОценкиПенсионныхПравСЗВК.Сотрудник
	|			И СведенияСЗВКСотрудники.Ссылка = СведенияДляОценкиПенсионныхПравСЗВК.Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоШапкеДляПечати(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовСЗВ_К";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = МассивСсылок;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_К.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_К.Организация КАК Организация,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	СведенияОбОрганизациях.ИНН КАК ИНН,
	|	СведенияОбОрганизациях.КПП КАК КПП,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	ПачкаДокументовСЗВ_К.СоставПачки,
	|	ПачкаДокументовСЗВ_К.ТипСведений,
	|	ПачкаДокументовСЗВ_К.Руководитель КАК Руководитель,
	|	ПачкаДокументовСЗВ_К.ДолжностьРуководителя.Наименование КАК ДолжностьРуководителя,
	|	ПачкаДокументовСЗВ_К.Дата,
	|	ПачкаДокументовСЗВ_К.ОкончаниеОтчетногоПериода,
	|	ПачкаДокументовСЗВ_К.НомерПачки
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_К КАК ПачкаДокументовСЗВ_К
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ПачкаДокументовСЗВ_К.Организация = СведенияОбОрганизациях.Организация
	|			И ПачкаДокументовСЗВ_К.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	ПачкаДокументовСЗВ_К.Ссылка В(&МассивСсылок)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Руководитель";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_К.Ссылка КАК Ссылка,
	|	ПачкаДокументовСЗВ_К.РегистрационныйНомерПФР КАК РегНомерПФР,
	|	ПачкаДокументовСЗВ_К.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	ПачкаДокументовСЗВ_К.ИНН КАК ИНН,
	|	ПачкаДокументовСЗВ_К.КПП КАК КПП,
	|	ПачкаДокументовСЗВ_К.СоставПачки,
	|	ПачкаДокументовСЗВ_К.ТипСведений,
	|	ЕСТЬNULL(ВТФИОПоследние.РасшифровкаПодписи, """") КАК Руководитель,
	|	ПачкаДокументовСЗВ_К.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ПачкаДокументовСЗВ_К.Дата,
	|	ПачкаДокументовСЗВ_К.НомерПачки
	|ИЗ
	|	ВТДанныеДокументов КАК ПачкаДокументовСЗВ_К
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОПоследние
	|		ПО ПачкаДокументовСЗВ_К.Ссылка = ВТФИОПоследние.Ссылка
	|			И ПачкаДокументовСЗВ_К.Руководитель = ВТФИОПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросДляПечатиАДВ_1(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовСЗВ_К";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = МассивСсылок;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСотрудники.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(ПачкаДокументовСотрудники.НомерСтроки) КАК ДокументовВПачке,
	|	ПачкаДокументовСотрудники.Ссылка.НомерПачки КАК НомерПачки,
	|	ПачкаДокументовСотрудники.Ссылка.Дата КАК Дата,
	|	ПачкаДокументовСотрудники.Ссылка.ОкончаниеОтчетногоПериода КАК ОкончаниеОтчетногоПериода,
	|	ПачкаДокументовСотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовСотрудники.Ссылка.Руководитель КАК Руководитель,
	|	ПачкаДокументовСотрудники.Ссылка.ДолжностьРуководителя.Наименование КАК Должность
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_К.Сотрудники КАК ПачкаДокументовСотрудники
	|ГДЕ
	|	ПачкаДокументовСотрудники.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСотрудники.Ссылка.Организация,
	|	ПачкаДокументовСотрудники.Ссылка.НомерПачки,
	|	ПачкаДокументовСотрудники.Ссылка,
	|	ПачкаДокументовСотрудники.Ссылка.Руководитель,
	|	ПачкаДокументовСотрудники.Ссылка.ДолжностьРуководителя.Наименование,
	|	ПачкаДокументовСотрудники.Ссылка.Дата";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	ПерсонифицированныйУчет.СоздатьПоМассивуСсылокВТИсторияРегистрацийВОрганеПФРСрезПоследних(Запрос.МенеджерВременныхТаблиц, МассивСсылок, "ПачкаДокументовСЗВ_К");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	Организации.КодПоОКПО,
	|	Организации.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	Организации.НаименованиеСокращенное,
	|	ДанныеОПачке.НомерПачки,
	|	ДанныеОПачке.ДокументовВПачке,
	|	ЕСТЬNULL(ФИОРуководителейПоследние.РасшифровкаПодписи, """") КАК Руководитель,
	|	ДанныеОПачке.Должность,
	|	ДанныеОПачке.Ссылка КАК Документ
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеОПачке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ДанныеОПачке.Организация = СведенияОбОрганизациях.Организация
	|			И ДанныеОПачке.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ДанныеОПачке.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОРуководителейПоследние
	|		ПО ДанныеОПачке.Ссылка = ФИОРуководителейПоследние.Ссылка
	|			И ДанныеОПачке.Руководитель = ФИОРуководителейПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеОПачке.Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Для обеспечения формирования выходного файла

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  ВыборкаПоШапкеДокумента
//  ВыборкаПоЗаписямСтажа
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоЗаписямСтажа)
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	НомерДокументаВПачке = 1;
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	
	КоличествоДокументов = ВыборкаПоШапкеДокумента.КоличествоДокументов;
	
	// Добавляем реквизит ПачкаВходящихДокументов
	УзелПачкаВходящихДокументов = ПерсонифицированныйУчет.ЗаполнитьНаборЗаписейВходящаяОпись(УзелПФР, ДеревоФормата, "КОНВЕРТАЦИЯ", ВыборкаПоШапкеДокумента, КоличествоДокументов, НомерДокументаВПачке);
	
	ФорматИССЗВК = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "КОНВЕРТАЦИЯ");
	
	ФорматИССЗВК.СтажДоРегистрации.Значение.Удалить("ПериодДеятельности");
	
	ФорматПериодДеятельности = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ПериодДеятельности");
	ФорматПериодРаботыСЗВК = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ПериодРаботыСЗВК");
	ФорматОсобенностиУчетаСЗВК = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ОсобенностиУчетаСЗВК");
	
	Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
		
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		НаборЗаписейСЗВК = ОбщегоНазначения.СкопироватьРекурсивно(ФорматИССЗВК);
		УзелКонвертация = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "КОНВЕРТАЦИЯ", "");
		
		НаборЗаписейСЗВК.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейСЗВК.ВидФормы.Значение = "СЗВ-К";
		Если ВыборкаПоШапкеДокумента.ТипСведений = "ИСХД" Тогда
			НаборЗаписейСЗВК.ТипСведений.Значение = "ИСХОДНАЯ";
		Иначе
			НаборЗаписейСЗВК.ТипСведений.Значение = "ПЕНСИОННАЯ";
		КонецЕсли;
		НаборЗаписейСЗВК.СтраховойНомер.Значение = ВыборкаПоЗаписямСтажа.СтраховойНомерПФР;
		
		Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияНа_31_12_2001Код) Тогда
			НаборЗаписейСЗВК.ТерриториальныеУсловияНа31_12_2001.Значение.ОснованиеТУ = СокрЛП(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияНа_31_12_2001Код);
			НаборЗаписейСЗВК.ТерриториальныеУсловияНа31_12_2001.Значение.Коэффициент = ВыборкаПоЗаписямСтажа.РайонныйКоэффициентНа_31_12_2001;
		Иначе
			НаборЗаписейСЗВК.Удалить("ТерриториальныеУсловияНа31_12_2001");
		КонецЕсли;
		НаборЗаписейСЗВК.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
		
		НаборЗаписейФИО = НаборЗаписейСЗВК.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(ВыборкаПоЗаписямСтажа.Фамилия);
		ПерсонифицированныйУчет.ЗаменитьБуквуЁ(НаборЗаписейФИО.Фамилия, "Фамилия");
		НаборЗаписейФИО.Имя = ВРег(ВыборкаПоЗаписямСтажа.Имя);
		ПерсонифицированныйУчет.ЗаменитьБуквуЁ(НаборЗаписейФИО.Имя, "Имя");
		НаборЗаписейФИО.Отчество = ВРег(ВыборкаПоЗаписямСтажа.Отчество);
		ПерсонифицированныйУчет.ЗаменитьБуквуЁ(НаборЗаписейФИО.Отчество, "Отчество");
		
		НаборЗаписейСЗВК.ДатаРождения.Значение = ВыборкаПоЗаписямСтажа.ДатаРождения;
		
		// Организация, представившая СЗВ-К
		НаборЗаписейСЗВК.Удалить("ОрганизацияПредставившаяСЗВ_К");
		НаборЗаписейСЗВК.Удалить("ВсеОсобыеЗаслуги");
		НаборЗаписейСЗВК.Удалить("ФИООценщика");
		НаборЗаписейСЗВК.Удалить("ТабельныйНомерОценщика");
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелКонвертация, НаборЗаписейСЗВК);
		
		НаборСтажДоРегистрации = УзелКонвертация.Строки.Найти("СтажДоРегистрации");
		КоличествоПериодовДеятельности = 0;
		Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерПериодаТрудовойДеятельности") Цикл
			
			УзелПериодыДеятельности = ЗарплатаКадры.ДобавитьУзелВДеревоXML(НаборСтажДоРегистрации, "ПериодДеятельности", "");
			
			НаборЗаписейПериодДеятельности = ОбщегоНазначения.СкопироватьРекурсивно(ФорматПериодДеятельности);
			НаборЗаписейПериодДеятельности.Удалить("ЗаработокЗаПериод");
			НаборЗаписейПериодДеятельности.ВсеПериодыРаботы.Значение.Удалить("ПериодРаботы");
			НаборЗаписейПериодДеятельности.ВидДеятельности.Значение = СокрЛП(ВыборкаПоЗаписямСтажа.ВидДеятельностиКод);
			НаборЗаписейПериодДеятельности.НаименованиеОрганизации.Значение = ВРег(ВыборкаПоЗаписямСтажа.ОрганизацияНаименование);
			
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелПериодыДеятельности, НаборЗаписейПериодДеятельности);
			
			НаборЗаписейВсеПериодыРаботы = УзелПериодыДеятельности.Строки[2].Строки;
			КоличествоПериодовРаботы = 0;
			
			Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") Цикл
				
				УзелПериодРаботы = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПериодыДеятельности.Строки[2], "ПериодРаботы", "");
				
				НаборЗаписейПериодРаботыСЗВК = ОбщегоНазначения.СкопироватьРекурсивно(ФорматПериодРаботыСЗВК);
				
				НаборЗаписейПериодРаботыСЗВК.ДополнительныеСтроки.Значение.Удалить("ОсобенностиУчета");
				
				ОсновнаяСтрокаСЗВК = НаборЗаписейПериодРаботыСЗВК.ОсновнаяСтрока.Значение;
				ОсновнаяСтрокаСЗВК.НомерСтроки.Значение = ВыборкаПоЗаписямСтажа.НомерОсновнойЗаписи;
				ОсновнаяСтрокаСЗВК.ДатаНачалаПериода.Значение = ВыборкаПоЗаписямСтажа.ДатаНачалаПериода;
				ОсновнаяСтрокаСЗВК.ДатаКонцаПериода.Значение = ВыборкаПоЗаписямСтажа.ДатаОкончанияПериода;
				
				ОсобенностиУчетаСЗВК = ОсновнаяСтрокаСЗВК.ОсобенностиУчета.Значение;
				Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияКод) Тогда
					ОсобенностиУчетаСЗВК.ТерриториальныеУсловия.Значение.ОснованиеТУ = СокрЛП(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияКод);
					ОсобенностиУчетаСЗВК.ТерриториальныеУсловия.Значение.Коэффициент = ВыборкаПоЗаписямСтажа.РайонныйКоэффициент;
				Иначе
					ОсобенностиУчетаСЗВК.Удалить("ТерриториальныеУсловия");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.ОсобыеУсловияТрудаКод) Тогда
					ОсобенностиУчетаСЗВК.ОсобыеУсловияТруда.Значение.ОснованиеОУТ = СокрЛП(ВыборкаПоЗаписямСтажа.ОсобыеУсловияТрудаКод);
					ОсобенностиУчетаСЗВК.ОсобыеУсловияТруда.Значение.ПозицияСписка = СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.КодПозицииСпискаКод));
				Иначе
					ОсобенностиУчетаСЗВК.Удалить("ОсобыеУсловияТруда");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.ОснованиеИсчисляемогоСтажаКод) Тогда
					ИсчисляемыйСтажСЗВК = ОсобенностиУчетаСЗВК.ИсчисляемыйСтаж.Значение;
					ИсчисляемыйСтажСЗВК.ОснованиеИС.Значение = СокрЛП(ВыборкаПоЗаписямСтажа.ОснованиеИсчисляемогоСтажаКод);
					
					ИсчисляемыйСтажВыработкаКалендарнаяСЗВК = ИсчисляемыйСтажСЗВК.ВыработкаКалендарная.Значение;
					ИсчисляемыйСтажВыработкаКалендарнаяСЗВК.ВсеГоды = ВыборкаПоЗаписямСтажа.НулевойПараметрИсчисляемогоСтажа;
					ИсчисляемыйСтажВыработкаКалендарнаяСЗВК.ВсеМесяцы = ВыборкаПоЗаписямСтажа.ПервыйПараметрИсчисляемогоСтажа;
					ИсчисляемыйСтажВыработкаКалендарнаяСЗВК.ВсеДни = ВыборкаПоЗаписямСтажа.ВторойПараметрИсчисляемогоСтажа;
				Иначе
					ОсобенностиУчетаСЗВК.Удалить("ИсчисляемыйСтаж");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.ТретийПараметрИсчисляемогоСтажа) Тогда
					ОсобенностиУчетаСЗВК.ДекретДети.Значение = ВыборкаПоЗаписямСтажа.ТретийПараметрИсчисляемогоСтажа;
				Иначе
					ОсобенностиУчетаСЗВК.Удалить("ДекретДети");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.ОснованиеВыслугиЛетКод) Тогда
					ВыслугаЛетСЗВК = ОсобенностиУчетаСЗВК.ВыслугаЛет.Значение;
					ВыслугаЛетСЗВК.ОснованиеВЛ.Значение = СокрЛП(ВыборкаПоЗаписямСтажа.ОснованиеВыслугиЛетКод);
					ВыслугаЛетСЗВК.ВыработкаВЧасах.Значение.Часы = ВыборкаПоЗаписямСтажа.ПервыйПараметрВыслугиЛет;
					ВыслугаЛетСЗВК.ВыработкаВЧасах.Значение.Минуты = ВыборкаПоЗаписямСтажа.ВторойПараметрВыслугиЛет;
					ВыслугаЛетСЗВК.ДоляСтавки.Значение = ВыборкаПоЗаписямСтажа.ТретийПараметрВыслугиЛет;
				Иначе
					ОсобенностиУчетаСЗВК.Удалить("ВыслугаЛет");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.Должность) Тогда
					ОсобенностиУчетаСЗВК.ПрофессияДолжность.Значение = ВРег(ВыборкаПоЗаписямСтажа.Должность);
				Иначе
					ОсобенностиУчетаСЗВК.Удалить("ПрофессияДолжность");
				КонецЕсли;
				
				ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелПериодРаботы, НаборЗаписейПериодРаботыСЗВК);
				
				КоличествоДополнительныхСтрок = 0;
				Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи") Цикл
					
					// В дополнительной записи с номером 0 находится информация об основной записи
					Если ВыборкаПоЗаписямСтажа.НомерДополнительнойЗаписи <> 0 Тогда
						
						КоличествоДополнительныхСтрок = КоличествоДополнительныхСтрок + 1;
						
						УзелОсобенностиУчета = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПериодРаботы.Строки[1], "ОсобенностиУчета", "");
						
						НаборЗаписейОсобенностиУчетаСЗВК = ОбщегоНазначения.СкопироватьРекурсивно(ФорматОсобенностиУчетаСЗВК);
						НаборЗаписейОсобенностиУчетаСЗВК.ТерриториальныеУсловия.Значение.ОснованиеТУ = СокрЛП(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияКод);
						НаборЗаписейОсобенностиУчетаСЗВК.ТерриториальныеУсловия.Значение.Коэффициент = ВыборкаПоЗаписямСтажа.РайонныйКоэффициент;
						
						НаборЗаписейОсобенностиУчетаСЗВК.ОсобыеУсловияТруда.Значение.ОснованиеОУТ = СокрЛП(ВыборкаПоЗаписямСтажа.ОсобыеУсловияТрудаКод);
						НаборЗаписейОсобенностиУчетаСЗВК.ОсобыеУсловияТруда.Значение.ПозицияСписка = СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.КодПозицииСпискаКод));
						
						ОсобенностиУчетаИсчисляемыйСтажСЗВК = НаборЗаписейОсобенностиУчетаСЗВК.ИсчисляемыйСтаж.Значение;
						ОсобенностиУчетаИсчисляемыйСтажСЗВК.ОснованиеИС.Значение = СокрЛП(ВыборкаПоЗаписямСтажа.ОснованиеИсчисляемогоСтажаКод);
						
						ИсчисляемыйСтажВыработкаКалендарнаяСЗВК = ОсобенностиУчетаИсчисляемыйСтажСЗВК.ВыработкаКалендарная.Значение;
						ИсчисляемыйСтажВыработкаКалендарнаяСЗВК.ВсеГоды = ВыборкаПоЗаписямСтажа.НулевойПараметрИсчисляемогоСтажа;
						ИсчисляемыйСтажВыработкаКалендарнаяСЗВК.ВсеМесяцы = ВыборкаПоЗаписямСтажа.ПервыйПараметрИсчисляемогоСтажа;
						ИсчисляемыйСтажВыработкаКалендарнаяСЗВК.ВсеДни = ВыборкаПоЗаписямСтажа.ВторойПараметрИсчисляемогоСтажа;
						
						НаборЗаписейОсобенностиУчетаСЗВК.ДекретДети.Значение = ВРег(ВыборкаПоЗаписямСтажа.ТретийПараметрИсчисляемогоСтажа);
						
						ВыслугаЛетСЗВК = НаборЗаписейОсобенностиУчетаСЗВК.ВыслугаЛет.Значение;
						ВыслугаЛетСЗВК.ОснованиеВЛ.Значение = СокрЛП(ВыборкаПоЗаписямСтажа.ОснованиеВыслугиЛетКод);
						ВыслугаЛетСЗВК.ВыработкаВЧасах.Значение.Часы = ВыборкаПоЗаписямСтажа.ПервыйПараметрВыслугиЛет;
						ВыслугаЛетСЗВК.ВыработкаВЧасах.Значение.Минуты = ВыборкаПоЗаписямСтажа.ВторойПараметрВыслугиЛет;
						ВыслугаЛетСЗВК.ДоляСтавки.Значение = ВыборкаПоЗаписямСтажа.ТретийПараметрВыслугиЛет;
						
						НаборЗаписейОсобенностиУчетаСЗВК.ПрофессияДолжность.Значение = ВРег(ВыборкаПоЗаписямСтажа.Должность);
						
						ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелОсобенностиУчета, НаборЗаписейОсобенностиУчетаСЗВК);
					КонецЕсли;
				
				КонецЦикла;
				УзелДополнительныеСтроки = УзелПериодРаботы.Строки.Найти("ДополнительныеСтроки");
				Если УзелДополнительныеСтроки.Имя = "ДополнительныеСтроки" Тогда
					Если КоличествоДополнительныхСтрок = 0 Тогда
						УзелПериодРаботы.Строки.Удалить(УзелДополнительныеСтроки);
					Иначе
						УзелКоличество = УзелДополнительныеСтроки.Строки.Найти("Количество");
						Если УзелКоличество.Имя = "Количество" Тогда
							УзелКоличество.Значение = Формат(КоличествоДополнительныхСтрок, "ЧН=0; ЧГ=0");
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
				КоличествоПериодовРаботы = КоличествоПериодовРаботы + 1
			КонецЦикла;
			
			НаборЗаписейВсеПериодыРаботы[1].Значение = Формат(КоличествоПериодовРаботы, "ЧН=0; ЧГ=0");
			
			КоличествоПериодовДеятельности = КоличествоПериодовДеятельности + 1;			
		КонецЦикла;
		НаборСтажДоРегистрации.Строки[1].Значение = Формат(КоличествоПериодовДеятельности, "ЧН=0; ЧГ=0");
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	Возврат СтрЗаменить(ТекстФайла, "ТерриториальныеУсловияНа31_12_2001", "ТерриториальныеУсловияНа31.12.2001");
	
КонецФункции

Функция СформироватьЗапросПоШапкеДокумента(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовСЗВ_К";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);

	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_КСотрудники.Ссылка,
	|	КОЛИЧЕСТВО(ПачкаДокументовСЗВ_КСотрудники.НомерСтроки) КАК КоличествоДокументов
	|ПОМЕСТИТЬ ВТКоличествоДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_К.Сотрудники КАК ПачкаДокументовСЗВ_КСотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_КСотрудники.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_КСотрудники.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_К.Дата,
	|	ПачкаДокументовСЗВ_К.Организация,
	|	СведенияОбОрганизациях.НаименованиеПолное,
	|	СведенияОбОрганизациях.НаименованиеСокращенное,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	СведенияОбОрганизациях.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	ПачкаДокументовСЗВ_К.ТипСведений,
	|	СведенияОбОрганизациях.ОГРН,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	ПачкаДокументовСЗВ_К.НомерПачки,
	|	ПачкаДокументовСЗВ_К.ИмяФайлаДляПФР,
	|	ВТКоличествоДокументов.КоличествоДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_К КАК ПачкаДокументовСЗВ_К
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ПачкаДокументовСЗВ_К.Организация = СведенияОбОрганизациях.Организация
	|			И ПачкаДокументовСЗВ_К.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоДокументов КАК ВТКоличествоДокументов
	|		ПО ПачкаДокументовСЗВ_К.Ссылка = ВТКоличествоДокументов.Ссылка
	|ГДЕ
	|	ПачкаДокументовСЗВ_К.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоЗаписямСтажа(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияСЗВКСотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СведенияСЗВКСотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	СведенияСЗВКСотрудники.Сотрудник.ДатаРождения КАК ДатаРождения,
	|	СведенияСЗВКСотрудники.Сотрудник КАК Сотрудник,
	|	СведенияСЗВКСотрудники.ТерриториальныеУсловияНа31_12_2001.Код КАК ТерриториальныеУсловияНа_31_12_2001Код,
	|	СведенияСЗВКСотрудники.РайонныйКоэффициентНа31_12_2001 КАК РайонныйКоэффициентНа_31_12_2001,
	|	СведенияСЗВКСотрудники.Фамилия,
	|	СведенияСЗВКСотрудники.Имя,
	|	СведенияСЗВКСотрудники.Отчество
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_К.Сотрудники КАК СведенияСЗВКСотрудники
	|ГДЕ
	|	СведенияСЗВКСотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияСЗВКСотрудники.НомерСтрокиСотрудник КАК НомерСтрокиСотрудник,
	|	СведенияСЗВКСотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	СведенияСЗВКСотрудники.ДатаРождения КАК ДатаРождения,
	|	СведенияСЗВКСотрудники.Сотрудник КАК ФизЛицо,
	|	СведенияСЗВКСотрудники.Фамилия КАК Фамилия,
	|	СведенияСЗВКСотрудники.Имя КАК Имя,
	|	СведенияСЗВКСотрудники.Отчество КАК Отчество,
	|	СведенияСЗВКСотрудники.ТерриториальныеУсловияНа_31_12_2001Код,
	|	СведенияСЗВКСотрудники.РайонныйКоэффициентНа_31_12_2001,
	|	ЗаписиОСтаже.НомерПериодаТрудовойДеятельности КАК НомерПериодаТрудовойДеятельности,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи КАК НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи КАК НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ОрганизацияТрудовойДеятельности КАК ОрганизацияНаименование,
	|	ЗаписиОСтаже.ВидДеятельности КАК ВидДеятельности,
	|	ЗаписиОСтаже.ВидДеятельности.Код КАК ВидДеятельностиКод,
	|	ЗаписиОСтаже.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ТерриториальныеУсловия.Код КАК ТерриториальныеУсловияКод,
	|	ЗаписиОСтаже.РайонныйКоэффициент КАК РайонныйКоэффициент,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда.Код КАК ОсобыеУсловияТрудаКод,
	|	ЗаписиОСтаже.КодПозицииСписка КАК КодПозицииСписка,
	|	ЗаписиОСтаже.КодПозицииСписка.Код КАК КодПозицииСпискаКод,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа КАК ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа.Код КАК ОснованиеИсчисляемогоСтажаКод,
	|	ЗаписиОСтаже.НулевойПараметрИсчисляемогоСтажа КАК НулевойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа КАК ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа КАК ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа.Код КАК ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет.Код КАК ОснованиеВыслугиЛетКод,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет КАК ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет КАК ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтаже.Должность
	|ИЗ
	|	ВТСотрудникиДокумента КАК СведенияСЗВКСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_К.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО СведенияСЗВКСотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И (ЗаписиОСтаже.Ссылка = &Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник,
	|	НомерПериодаТрудовойДеятельности,
	|	НомерОсновнойЗаписи,
	|	НомерДополнительнойЗаписи";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента(Объект.Ссылка).Выбрать();
	ВыборкаПоЗаписямСтажа = СформироватьЗапросПоЗаписямСтажа(Объект.Ссылка).Выбрать();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоЗаписямСтажа);
	
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции печати.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// СЗВ К
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_К";
	КомандаПечати.Представление = НСтр("ru = 'СЗВ К'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// АДВ-6-1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_6_1";
	КомандаПечати.Представление = НСтр("ru = 'АДВ-6-1'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Все формы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_К,ФормаАДВ_6_1";
	КомандаПечати.Представление = НСтр("ru = 'Все формы'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСЗВ_К") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаСЗВ_К", "Форма СЗВ-К", СформироватьПечатнуюФормуСЗВ_К(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_6_1", "Форма АДВ-6-1", СформироватьПечатнуюФормуАДВ_6_1(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСЗВ_К(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_К_Форма_СЗВ_К";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовСЗВ_К.ПФ_MXL_ФормаСЗВ_К");
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаПоЗаписямСтажа = СформироватьЗапросПоЗаписямСтажаДляПечати(МассивОбъектов).Выбрать();
	
	ТаблицаИтоговогоСтажа = СформироватьЗапросПоСведениямДляОценкиПенсПравДляПечати(МассивОбъектов).Выгрузить();
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
	ОбластьШапка3 = Макет.ПолучитьОбласть("Шапка3");
	ОбластьШапкаПериоды = Макет.ПолучитьОбласть("ШапкаПериоды");
	ОбластьШапкаДеят = Макет.ПолучитьОбласть("ШапкаДЕЯТ");
	ОбластьСтрокаСтажа = Макет.ПолучитьОбласть("СтрокаСтажа");
	ОбластьШапкаИтогов = Макет.ПолучитьОбласть("ШапкаИтогов");
	ОбластьСтрокаТЕРР = Макет.ПолучитьОбласть("СтрокаТЕРР");
	ОбластьСтрокаТЕРР2 = Макет.ПолучитьОбласть("СтрокаТЕРР2");
	ОбластьСтрокаОСОБ = Макет.ПолучитьОбласть("СтрокаОСОБ");
	ОбластьСтрокаОСОБ2 = Макет.ПолучитьОбласть("СтрокаОСОБ2");
	ОбластьСтрокаВЫСЛ = Макет.ПолучитьОбласть("СтрокаВЫСЛ");
	ОбластьСтрокаВЫСЛ2 = Макет.ПолучитьОбласть("СтрокаВЫСЛ2");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	НомерДокумента = 0;
	Пока ВыборкаПоШапкеДокумента.Следующий() Цикл 
		
		ОбластьПодвал.Параметры.Дата = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаПоШапкеДокумента.Дата);
		ОбластьПодвал.Параметры.ДолжностьРуководителя		 	= ВыборкаПоШапкеДокумента.ДолжностьРуководителя;
		ОбластьПодвал.Параметры.РасшифровкаПодписиРуководителя	= ВыборкаПоШапкеДокумента.Руководитель;
		
		НомерЗаписи = 5;
		
		// строк на листе
		СтрокНаЛисте	=	68.05;
		// количество строк для вывода записи о стаже
		ВысотаСтрокаСтажа = 3;
		
		СтруктураОтбора = Новый Структура("Ссылка", ВыборкаПоШапкеДокумента.Ссылка);
		
		Если ВыборкаПоЗаписямСтажа.НайтиСледующий(СтруктураОтбора) Тогда  
			
			ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("Ссылка");
			Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				
				НомерДокумента = НомерДокумента + 1;
				
				НомерЗаписи = НомерЗаписи + 1;
				
				ВысотаТаблицы = 0;
				КолВоЛистов  = 1;
				
				Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ТипСведений) Тогда
					ОбластьШапка.Рисунки["ТипФормы" + ВыборкаПоШапкеДокумента.ТипСведений].Текст    =   "ю";
				КонецЕсли;
				
				ОбластьШапка.Параметры.СтраховойНомер = ВыборкаПоЗаписямСтажа.СтраховойНомерПФР;
				ОбластьШапка.Параметры.Фамилия = ВРег(ВыборкаПоЗаписямСтажа.Фамилия);
				ОбластьШапка.Параметры.Имя = ВРег(ВыборкаПоЗаписямСтажа.Имя);
				ОбластьШапка.Параметры.Отчество = ВРег(ВыборкаПоЗаписямСтажа.Отчество);
				ОбластьШапка.Параметры.ДатаРождения = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаПоЗаписямСтажа.ДатаРождения);
				ОбластьШапка.Параметры.ТерриториальныеУсловия = СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияНа_31_12_2001Код)) + ВыборкаПоЗаписямСтажа.РайонныйКоэффициентНа_31_12_2001;
				
				ТабличныйДокумент.Вывести(ОбластьШапка);
				ТабличныйДокумент.Вывести(ОбластьШапкаПериоды);
				ВысотаТаблицы	=	ВысотаТаблицы	+	14.5;
				
				НомерСтрокиВариантСЗВК =  ТабличныйДокумент.ВысотаТаблицы - 13;
				
				ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,2).Текст = "Форма СЗВ-К";
				
				// Установим заранее для новых листов по текущему работнику
				ОбластьШапка3.Параметры.СтраховойНомер					=	ВыборкаПоЗаписямСтажа.СтраховойНомерПФР;
				ОбластьШапка3.Параметры.ФИО								=	ВРег(ВыборкаПоЗаписямСтажа.Фамилия)	+	" "	+	Лев(ВРег(ВыборкаПоЗаписямСтажа.Имя),1)	+	". "	+	Лев(ВРег(ВыборкаПоЗаписямСтажа.Отчество),1)+".";
				
				Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерПериодаТрудовойДеятельности") Цикл
					Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.НомерПериодаТрудовойДеятельности) Тогда
						НомерЗаписи = НомерЗаписи + 1;
						
						// Выводим шапку периода деятельности
						ВысотаШапкаДЕЯТ	=	8;
						ОбластьШапкаДЕЯТ.Параметры.НаименованиеОрганизации	=	ВыборкаПоЗаписямСтажа.ОрганизацияНаименование;
						ОбластьШапкаДЕЯТ.Параметры.ВидДеятельности			=	ВыборкаПоЗаписямСтажа.ВидДеятельностиКод;
						ОбластьШапкаДЕЯТ.Параметры.НомерПериода				=	""+ВыборкаПоЗаписямСтажа.НомерПериодаТрудовойДеятельности+".";
						Если	СтрДлина(СокрЛП(ВыборкаПоЗаписямСтажа.ОрганизацияНаименование))	>	65	Тогда
							ВысотаШапкаДЕЯТ	=	ВысотаШапкаДЕЯТ	+	1;
						КонецЕсли;
						
						ДополнениеСтрокаСтажа	=	ВысотаСтрокаСтажа;
						
						// Контроль выхода за пределы листа
						Если (ВысотаТаблицы	+	ВысотаШапкаДЕЯТ	+	ДополнениеСтрокаСтажа)	>=	СтрокНаЛисте	Тогда
							Если	КолВоЛистов	=	1	Тогда
								ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
								ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
							КонецЕсли;
							КолВоЛистов	= КолВоЛистов +	1;
							ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							// перед тем как выводить шапку стажа, выведем шапку СЗВ-К и номер листа
							ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
							ТабличныйДокумент.Вывести(ОбластьШапка2);
							НомерСтрокиВариантСЗВК = ТабличныйДокумент.ВысотаТаблицы;
							ТабличныйДокумент.Вывести(ОбластьШапка3);
							ТабличныйДокумент.Вывести(ОбластьШапкаПериоды);
							ВысотаТаблицы =	4.5;
						КонецЕсли;
						
						ТабличныйДокумент.Вывести(ОбластьШапкаДЕЯТ);
						ВысотаТаблицы	=	ВысотаТаблицы	+	ВысотаШапкаДЕЯТ;
						
						Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") Цикл
							
							// Выводим запись ПСТЖ
							ОбластьСтрокаСтажа.Параметры.НомерПериода 					= ВыборкаПоЗаписямСтажа.НомерОсновнойЗаписи;
							ОбластьСтрокаСтажа.Параметры.ДатаНачалаПериода 				= Формат(ВыборкаПоЗаписямСтажа.ДатаНачалаПериода,"ДФ='дд.ММ.гггг'");
							ОбластьСтрокаСтажа.Параметры.ДатаОкончанияПериода 			= Формат(ВыборкаПоЗаписямСтажа.ДатаОкончанияПериода,"ДФ='дд.ММ.гггг'");
							ОбластьСтрокаСтажа.Параметры.Должность 						= СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.Должность));
							ОбластьСтрокаСтажа.Параметры.ТерриториальныеУсловияКод 		= СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияКод));
							ОбластьСтрокаСтажа.Параметры.РайонныйКоэффициент			= ВыборкаПоЗаписямСтажа.РайонныйКоэффициент;
							ОбластьСтрокаСтажа.Параметры.ОсобыеУсловияТрудаКод 			= СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.ОсобыеУсловияТрудаКод));
							ОбластьСтрокаСтажа.Параметры.КодПозицииСписка 				= СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.КодПозицииСписка));
							ОбластьСтрокаСтажа.Параметры.ОснованиеИсчисляемогоСтажаКод 	= СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.ОснованиеИсчисляемогоСтажаКод));
							ОбластьСтрокаСтажа.Параметры.ИсчисляемыйСтажДопСведения 	= ПерсонифицированныйУчет.СобратьСтрокуИсчисляемогоСтажа(ВыборкаПоЗаписямСтажа);
							ОбластьСтрокаСтажа.Параметры.ОснованиеВыслугиЛетКод 		= СокрЛП(ВРег(ВыборкаПоЗаписямСтажа.ОснованиеВыслугиЛетКод));
							ОбластьСтрокаСтажа.Параметры.ВыслугаЛетДопСведения 			= ПерсонифицированныйУчет.СобратьСтрокуПенсииЗаВыслугуЛет(ВыборкаПоЗаписямСтажа);
							ВысотаВрСтрокаСтажа = ВысотаСтрокаСтажа;
							Если	СтрДлина(СокрЛП(ВыборкаПоЗаписямСтажа.Должность))	>	65	Тогда
								ВысотаВрСтрокаСтажа	=	ВысотаВрСтрокаСтажа + 1;
							КонецЕсли;
							
							Если (ВысотаТаблицы + ВысотаВрСтрокаСтажа) >= СтрокНаЛисте	Тогда
								Если	КолВоЛистов = 1 Тогда
									ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
									ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
								КонецЕсли;
								КолВоЛистов	= КолВоЛистов + 1;
								ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								// перед тем как выводить стаж,выведем шапку СЗВ-К и шапку стажа
								ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
								ТабличныйДокумент.Вывести(ОбластьШапка2);
								НомерСтрокиВариантСЗВК = ТабличныйДокумент.ВысотаТаблицы;
								ТабличныйДокумент.Вывести(ОбластьШапка3);
								ТабличныйДокумент.Вывести(ОбластьШапкаПериоды);
								ТабличныйДокумент.Вывести(ОбластьШапкаДЕЯТ);
								ВысотаТаблицы = 4.5 + ВысотаШапкаДЕЯТ;
							КонецЕсли;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаСтажа);
							ВысотаТаблицы = ВысотаТаблицы + ВысотаВрСтрокаСтажа;
							
							
							Пока ВыборкаПоЗаписямСтажа.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи") Цикл
								Если ЗначениеЗаполнено(ВыборкаПоЗаписямСтажа.НомерДополнительнойЗаписи) Тогда 
									НомерЗаписи = НомерЗаписи + 1;
									
									// Выводим запись ПЛГТ
									ОбластьСтрокаСтажа.Параметры.НомерПериода 					= "";
									ОбластьСтрокаСтажа.Параметры.ДатаНачалаПериода 				= "";
									ОбластьСтрокаСтажа.Параметры.ДатаОкончанияПериода 			= "";
									ОбластьСтрокаСтажа.Параметры.Должность 						= СокрЛ(ВРег(ВыборкаПоЗаписямСтажа.Должность));
									ОбластьСтрокаСтажа.Параметры.ТерриториальныеУсловияКод 		= СокрЛ(ВРег(ВыборкаПоЗаписямСтажа.ТерриториальныеУсловияКод));
									ОбластьСтрокаСтажа.Параметры.РайонныйКоэффициент			= ВыборкаПоЗаписямСтажа.РайонныйКоэффициент;
									ОбластьСтрокаСтажа.Параметры.ОсобыеУсловияТрудаКод 			= СокрЛ(ВРег(ВыборкаПоЗаписямСтажа.ОсобыеУсловияТрудаКод));
									ОбластьСтрокаСтажа.Параметры.КодПозицииСписка 				= СокрЛ(ВРег(ВыборкаПоЗаписямСтажа.КодПозицииСписка));
									ОбластьСтрокаСтажа.Параметры.ОснованиеИсчисляемогоСтажаКод 	= СокрЛ(ВРег(ВыборкаПоЗаписямСтажа.ОснованиеИсчисляемогоСтажаКод));
									ОбластьСтрокаСтажа.Параметры.ИсчисляемыйСтажДопСведения 	= ПерсонифицированныйУчет.СобратьСтрокуИсчисляемогоСтажа(ВыборкаПоЗаписямСтажа);
									ОбластьСтрокаСтажа.Параметры.ОснованиеВыслугиЛетКод 		= СокрЛ(ВРег(ВыборкаПоЗаписямСтажа.ОснованиеВыслугиЛетКод));
									ОбластьСтрокаСтажа.Параметры.ВыслугаЛетДопСведения 			= ПерсонифицированныйУчет.СобратьСтрокуПенсииЗаВыслугуЛет(ВыборкаПоЗаписямСтажа);
									ВысотаВрСтрокаСтажа = 3;
									Если	СтрДлина(СокрЛП(ВыборкаПоЗаписямСтажа.Должность))	>	65	Тогда
										ВысотаВрСтрокаСтажа	=	ВысотаВрСтрокаСтажа	+	1;
									КонецЕсли;
									
									// Контроль выхода за пределы листа
									Если (ВысотаТаблицы	+	ВысотаВрСтрокаСтажа)	>=	СтрокНаЛисте	Тогда
										Если	КолВоЛистов	=	1	Тогда
											ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
											ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
										КонецЕсли;
										КолВоЛистов	= КолВоЛистов +	1;
										ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
										// перед тем как выводить стаж,выведем шапку СЗВ-К и шапку стажа
										ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
										ТабличныйДокумент.Вывести(ОбластьШапка2);
										НомерСтрокиВариантСЗВК = ТабличныйДокумент.ВысотаТаблицы;
										ТабличныйДокумент.Вывести(ОбластьШапка3);
										ТабличныйДокумент.Вывести(ОбластьШапкаПериоды);
										ТабличныйДокумент.Вывести(ОбластьШапкаДЕЯТ);
										ВысотаТаблицы =	4.5 + ВысотаШапкаДЕЯТ;
									КонецЕсли;
									
									ТабличныйДокумент.Вывести(ОбластьСтрокаСтажа);
									ВысотаТаблицы	=	ВысотаТаблицы	+	ВысотаВрСтрокаСтажа;
								КонецЕсли;
							КонецЦикла;// Конец цикла по доп. записям
							
						КонецЦикла;//Конец цикла по основным записям стаж	
					КонецЕсли;
					
				КонецЦикла;// Конец цикла по периоду трудовой деятельности	
				
				СтруктураПоискаИтоговогоСтажа = Новый Структура("Ссылка, ФизЛицо", ВыборкаПоЗаписямСтажа.Ссылка, ВыборкаПоЗаписямСтажа.ФизЛицо);
				
				
				СтруктураПоискаИтоговогостажа.Вставить("ВидСтажа", Перечисления.ВидыТрудовогоСтажа.ТерриториальныеУсловия);
				СписокСтрокСтажаТерриториальныеУсловия = ТаблицаИтоговогоСтажа.НайтиСтроки(СтруктураПоискаИтоговогоСтажа);
				ЧислоЗаписейПоТерриториальнымУсловиям = СписокСтрокСтажаТерриториальныеУсловия.Количество();
				СтруктураПоискаИтоговогостажа.Вставить("ВидСтажа", Перечисления.ВидыТрудовогоСтажа.ОсобыеУсловияТруда);
				СписокСтрокСтажаОсобыеУсловияТруда = ТаблицаИтоговогоСтажа.НайтиСтроки(СтруктураПоискаИтоговогоСтажа);
				ЧислоЗаписейПоОсобымУсловиямТруда = СписокСтрокСтажаОсобыеУсловияТруда.Количество();
				СтруктураПоискаИтоговогостажа.Вставить("ВидСтажа", Перечисления.ВидыТрудовогоСтажа.ВыслугаЛет);
				СписокСтрокСтажаВыслугаЛет = ТаблицаИтоговогоСтажа.НайтиСтроки(СтруктураПоискаИтоговогоСтажа);
				ЧислоЗаписейПоВыслугеЛет = СписокСтрокСтажаВыслугаЛет.Количество();
				
				// Вывод подвала с итоговыми записями		
				ВысотаПодвала = 19 + Макс(ЧислоЗаписейПоТерриториальнымУсловиям-1,0) + Макс(ЧислоЗаписейПоОсобымУсловиямТруда-1,0) + Макс(ЧислоЗаписейПоВыслугеЛет-1,0);
				
				// Контроль выхода за пределы листа
				Если	(ВысотаТаблицы	+	ВысотаПодвала)	>=	СтрокНаЛисте	Тогда
					Если	КолВоЛистов	=	1	Тогда
						ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
						ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
					КонецЕсли;
					КолВоЛистов	= КолВоЛистов +	1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					// перед тем как выводить шапку стажа, выведем шапку СЗВ-К и номер листа
					ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
					ТабличныйДокумент.Вывести(ОбластьШапка2);
					НомерСтрокиВариантСЗВК = ТабличныйДокумент.ВысотаТаблицы;
					ТабличныйДокумент.Вывести(ОбластьШапка3);
					ВысотаТаблицы =	3.5;
				КонецЕсли;
				
				Если КолВоЛистов <> 1 Тогда
					ТабличныйДокумент.Область(НомерСтрокиВариантСЗВК,2).Текст = "Форма СЗВ-К (окончание)";//подвал - последний лист
				КонецЕсли;

				СтруктураПоискаИтоговогоСтажа.Вставить("ВидСтажа", Перечисления.ВидыТрудовогоСтажа.ОбщийТрудовойСтаж);
				СписокСтрокСтажа =  ТаблицаИтоговогоСтажа.НайтиСтроки(СтруктураПоискаИтоговогоСтажа);
				Если СписокСтрокСтажа.Количество() > 0 Тогда
					
					// Общий трудовой стаж
					ОбластьШапкаИтогов.Параметры.Лет = СписокСтрокСтажа[0].Лет;
					ОбластьШапкаИтогов.Параметры.Месяцев = СписокСтрокСтажа[0].Месяцев;
					ОбластьШапкаИтогов.Параметры.Дней = СписокСтрокСтажа[0].Дней;
					ТабличныйДокумент.Вывести(ОбластьШапкаИтогов);	
					
				КонецЕсли;
				
				//////////////////////////////////////////				
				
				// Вывод записей ТЕРР
				Если СписокСтрокСтажаТерриториальныеУсловия.Количество() = 0 Тогда
					ОбластьСтрокаТЕРР.Параметры.КодСтажа = "";
					ОбластьСтрокаТЕРР.Параметры.Лет = 0;
					ОбластьСтрокаТЕРР.Параметры.Месяцев = 0;
					ОбластьСтрокаТЕРР.Параметры.Дней = 0;
					ТабличныйДокумент.Вывести(ОбластьСтрокаТЕРР);
				КонецЕсли;	
				
				НомерСтроки = 0;
				Для Каждого СтрокаСтрокСтажа Из СписокСтрокСтажаТерриториальныеУсловия Цикл
					НомерСтроки = НомерСтроки + 1;
					
					Если НомерСтроки = 1 Тогда
						ОбластьТЕРР = ОбластьСтрокаТЕРР;
					Иначе	
						ОбластьТЕРР = ОбластьСтрокаТЕРР2;
					КонецЕсли;	 
					
					ОбластьТЕРР.Параметры.КодСтажа = СтрокаСтрокСтажа.КодСтажаКод;
					ОбластьТЕРР.Параметры.Лет = СтрокаСтрокСтажа.Лет;
					ОбластьТЕРР.Параметры.Месяцев = СтрокаСтрокСтажа.Месяцев;
					ОбластьТЕРР.Параметры.Дней = СтрокаСтрокСтажа.Дней;
					ТабличныйДокумент.Вывести(ОбластьТЕРР);
				КонецЦикла;//Цикл по записям ТЕРР	
				
				Если СписокСтрокСтажаОсобыеУсловияТруда.Количество() = 0 Тогда
					ОбластьСтрокаОСОБ.Параметры.КодСтажа = "";
					ОбластьСтрокаОСОБ.Параметры.Лет = 0;
					ОбластьСтрокаОСОБ.Параметры.Месяцев = 0;
					ОбластьСтрокаОСОБ.Параметры.Дней = 0;
					ТабличныйДокумент.Вывести(ОбластьСтрокаОСОБ);
				КонецЕсли;	
				
				НомерСтроки = 0;
				Для Каждого СтрокаСтрокСтажа Из СписокСтрокСтажаОсобыеУсловияТруда Цикл
					НомерСтроки = НомерСтроки + 1;
					
					Если НомерСтроки = 1 Тогда
						ОбластьОСОБ = ОбластьСтрокаОСОБ;
					Иначе	
						ОбластьОСОБ = ОбластьСтрокаОСОБ2;
					КонецЕсли;	 
					
					ОбластьОСОБ.Параметры.КодСтажа = СтрокаСтрокСтажа.КодСтажаКод;
					ОбластьОСОБ.Параметры.Лет = СтрокаСтрокСтажа.Лет;
					ОбластьОСОБ.Параметры.Месяцев = СтрокаСтрокСтажа.Месяцев;
					ОбластьОСОБ.Параметры.Дней = СтрокаСтрокСтажа.Дней;
					ТабличныйДокумент.Вывести(ОбластьОСОБ);
				КонецЦикла;//Цикл по записям ОСОБ	
				
				// Вывод записей ВЫСЛ
				Если СписокСтрокСтажаВыслугаЛет.Количество() = 0 Тогда
					ОбластьСтрокаВЫСЛ.Параметры.КодСтажа = "";
					ОбластьСтрокаВЫСЛ.Параметры.Лет = 0;
					ОбластьСтрокаВЫСЛ.Параметры.Месяцев = 0;
					ОбластьСтрокаВЫСЛ.Параметры.Дней = 0;
					ТабличныйДокумент.Вывести(ОбластьСтрокаВЫСЛ);
				КонецЕсли;	
				
				НомерСтроки = 0;
				Для Каждого СтрокаСтрокСтажа Из СписокСтрокСтажаВыслугаЛет Цикл
					НомерСтроки = НомерСтроки + 1;

					Если НомерСтроки = 1 Тогда
						ОбластьВЫСЛ = ОбластьСтрокаВЫСЛ;
					Иначе	
						ОбластьВЫСЛ = ОбластьСтрокаВЫСЛ2;
					КонецЕсли;	 
					
					ОбластьВЫСЛ.Параметры.КодСтажа = СтрокаСтрокСтажа.КодСтажаКод;
					ОбластьВЫСЛ.Параметры.Лет = СтрокаСтрокСтажа.Лет;
					ОбластьВЫСЛ.Параметры.Месяцев = СтрокаСтрокСтажа.Месяцев;
					ОбластьВЫСЛ.Параметры.Дней = СтрокаСтрокСтажа.Дней;
					ТабличныйДокумент.Вывести(ОбластьВЫСЛ);
				КонецЦикла;//Цикл по записям ОСОБ	
				
				// Выводим подвал
				ОбластьПодвал.Параметры.ТекстНаЛистах = "Сведения представлены на " + КолВоЛистов + " " + ПерсонифицированныйУчет.ФормаМножественногоЧисла("листе", "листах", "листах", КолВоЛистов);
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			КонецЦикла; //Конец цикла по сотрудникам	
			
		КонецЕсли;	

	КонецЦикла;	//Выборка по документам
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
КонецФункции	

Функция СформироватьПечатнуюФормуАДВ_6_1(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_К_Форма_АДВ_6_1";
	
	МакетОписи = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ФормаАДВ_6_1_2017");
	СекцияОпись = МакетОписи.ПолучитьОбласть("Опись");
	
	ВыборкаДокументов = СформироватьЗапросДляПечатиАДВ_1(МассивОбъектов).Выбрать();
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Документ") Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СекцияОпись.Параметры.РегНомерПФР						= ВыборкаДокументов.РегистрационныйНомерПФР;
		СекцияОпись.Параметры.ОКПО								= ВыборкаДокументов.КодПоОКПО;
		СекцияОпись.Параметры.ИНН								= ВыборкаДокументов.ИНН;
		СекцияОпись.Параметры.КПП								= ВыборкаДокументов.КПП;
		СекцияОпись.Параметры.Наименование						= ВыборкаДокументов.НаименованиеСокращенное;
		
		СекцияОпись.Параметры.ДокументовСЗВКвПачке              = ВыборкаДокументов.ДокументовВПачке;
		
		СекцияОпись.Параметры.НомерПачкиРаботодателя 			= ВыборкаДокументов.НомерПачки;
		
		СекцияОпись.Параметры.ДолжностьРуководителя		 		= ВыборкаДокументов.Должность;
		СекцияОпись.Параметры.РасшифровкаПодписиРуководителя	= ВыборкаДокументов.Руководитель;
		
		ТабличныйДокумент.Вывести(СекцияОпись);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Документ);
		
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли