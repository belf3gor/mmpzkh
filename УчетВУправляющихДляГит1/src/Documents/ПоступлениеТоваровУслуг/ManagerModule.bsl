#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 7, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	
	// расчеты с поставщиком
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "РасчетыСПоставщиком");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТребуетсяУчетРасчетов");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаРасчетовПоАвансам", "АвансыПоставщику");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТребуетсяУчетАвансов");
	
	// расчеты по таре
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовПоТаре", "ВозвратнаяТараПолученная");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "МатериалыПереработчика");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ПростаяФорма"); // Локальное условие
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ОбъектыСтроительства"); // Локальное условие
	
	// расчеты по лизингу
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "ЛизинговыеПлатежи");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "УслугиЛизинга");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаРасчетовПоАвансам", "АвансыПоставщику");
	
	// расчеты по факторингу
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "РасчетыПоФакторингу");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "УслугиФакторинга");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаРасчетовПоАвансам", "АвансыПоставщику");
	
	// Способ отражения расходов по амортизации
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СпособОтраженияРасходовПоАмортизации", "СпособОтраженияРасходовПоАмортизации");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "МестонахождениеОС", "МестонахождениеОС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОсновныеСредства");
	
	// Табличная часть Товары
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",      "ЗапасыКромеПринятыхНаКомиссиюИлиВПереработку");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Комитент",     "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "МатериалыПереработчика");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ПродажаТоваровКомитента");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ПриобретениеТоваровДляКомитента");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ТоварыВЦенахПродажи");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",      "МатериалыПринятыеВПереработку");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "МатериалыПереработчика");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",      "ТоварыПринятыеНаКомиссию");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ПродажаТоваровКомитента");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",      "ТоварыПриобретенныеДляКомитента");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Комитент",     "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ПриобретениеТоваровДляКомитента");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ТоварыВЦенахПродажи");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаНДС",   "ПредъявленныйНДС_Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Комитент",     "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "МатериалыПереработчика");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ПродажаТоваровКомитента");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ПриобретениеТоваровДляКомитента");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ТоварыВЦенахПродажи");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Комитент",     "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "МатериалыПереработчика");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ПродажаТоваровКомитента");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ПриобретениеТоваровДляКомитента");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетРасчетов",      "РасчетыСКомитентомЗаПриобретенныеДляНегоТоварыУслуги");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Комитент",         "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Контрагент",         "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ПриобретениеТоваровДляКомитента");
	
	// Табличная часть ВозвратнаяТара
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ВозвратнаяТара", "СчетУчета", "ВозвратнаяТараНаСкладе");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	// Табличная часть Услуги
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетЗатрат",     "Затраты");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "УслугиЛизинга");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "УслугиФакторинга");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто1",                "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто2",                "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто3",                "СубконтоЗатрат3");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "ПодразделениеЗатрат",      "ПодразделениеЗатрат");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаНДС",             "ПредъявленныйНДС_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС", "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетЗатратНУ",     "Затраты");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "УслугиЛизинга");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "УслугиФакторинга");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание",    "СчетЗатрат");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "ПлательщикНалогаНаПрибыль");
	
	СчетаУчетаВДокументах.ДобавитьУровеньПодчиненности(Правила);
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоНУ1", "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание",    "Субконто1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоНУ2", "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание",    "Субконто2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоНУ3", "СубконтоЗатрат3");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание",    "Субконто3");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетЗатрат",     "АрендныеОбязательства");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "УслугиЛизинга");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетУчетаНДС",   "ПредъявленныйНДС_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "УслугиЛизинга");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетЗатрат",     "РасходыУслугиФакторинга");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "УслугиФакторинга");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто1",           "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто2",           "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто3",           "СубконтоЗатрат3");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "ПодразделениеЗатрат", "ПодразделениеЗатрат");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетЗатратНУ",     "РасходыУслугиФакторинга");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "УслугиФакторинга");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоНУ1",           "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоНУ2",           "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоНУ3",           "СубконтоЗатрат3");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "ПлательщикНалогаНаПрибыль");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетУчетаНДС",   "ПредъявленныйНДС_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "УслугиФакторинга");
	
	// Табличная часть Оборудование
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Оборудование", "СчетУчета",      "ОборудованиеНаСкладе");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Оборудование", "СчетУчетаНДС",   "ПредъявленныйНДС_ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Оборудование", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	
	// Табличная часть ОбъектыСтроительства
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОбъектыСтроительства", "СчетУчета",      "ОбъектыСтроительства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОбъектСтроительства", "ОбъектСтроительства");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОбъектыСтроительства", "СчетУчетаНДС",   "ПредъявленныйНДС_ОбъектыСтроительства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОбъектСтроительства", "ОбъектСтроительства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",            "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОбъектыСтроительства", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОбъектСтроительства", "ОбъектСтроительства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",            "СуммаНДС");
	
	// Табличная часть ОсновныеСредства
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОсновныеСредства", "СчетУчета", "ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОсновныеСредства", "СчетНачисленияАмортизации", "ОсновныеСредстваАмортизация");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОсновныеСредства");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОсновныеСредства", "СчетУчетаНДС", "ПредъявленныйНДС_ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС", "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОсновныеСредства");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОсновныеСредства", "СпособУчетаНДС", "СпособУчетаНДСпоОСиНМА");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС", "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОсновныеСредства");
	
	// Табличная часть АгентскиеУслуги
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "АгентскиеУслуги", "СчетРасчетов",  "РасчетыСКомитентомЗаПриобретенныеДляНегоТоварыУслуги");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Контрагент",         "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Подразделение",            "ПодразделениеОрганизации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "СпособЗачетаАвансов");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "НДСВключенВСтоимость");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ОбъектыПредназначеныДляСдачиВАренду");
	
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ПростаяФорма",           "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ОбъектыСтроительства",   "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "МатериалыПереработчика", "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "УслугиЛизинга",          "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "УслугиФакторинга",       "ВидОперации, ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ТребуетсяУчетРасчетов",  "ВидОперации, ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ТребуетсяУчетАвансов",   "ВидОперации, ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ОсновныеСредства",       "ВидОперации");
	
КонецПроцедуры

Процедура ДополнитьДанныеЗаполненияСчетовУчета(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("ПростаяФорма") Тогда
		
		ДанныеЗаполнения.ПростаяФорма = ИспользоватьПростуюФорму(ДанныеЗаполнения.ВидОперации);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ОбъектыСтроительства") Тогда
		
		ДанныеЗаполнения.ОбъектыСтроительства = (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("МатериалыПереработчика") Тогда
		
		ДанныеЗаполнения.МатериалыПереработчика = (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ТребуетсяУчетРасчетов") Или ДанныеЗаполнения.Свойство("ТребуетсяУчетАвансов") Тогда
		
		ОсобенностиДокумента = ОсобенностиУчетаРасчетов(ДанныеЗаполнения.ВидОперации, ДанныеЗаполнения.ДоговорКонтрагента);
			
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, ОсобенностиДокумента);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("УслугиЛизинга") Тогда
		
		ДанныеЗаполнения.УслугиЛизинга = (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиЛизинга);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("УслугиФакторинга") Тогда
		
		Если (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиФакторинга) Тогда
			ДанныеЗаполнения.УслугиФакторинга = Истина;
		ИначеЕсли ЗначениеЗаполнено(ДанныеЗаполнения.ДоговорКонтрагента) Тогда
			ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.ДоговорКонтрагента, "ВидДоговора");
			ДанныеЗаполнения.УслугиФакторинга = (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СФакторинговойКомпанией);
		Иначе
			ДанныеЗаполнения.УслугиФакторинга = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ОсновныеСредства") Тогда
		
		ДанныеЗаполнения.ОсновныеСредства = (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства);
		
	КонецЕсли;
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьРеквизитыПриИзменении(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
// Параметры:
//  Объект		- ДокументОбъект
Процедура ЗаполнитьСчетаУчетаРасчетов(Объект) Экспорт
	
	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаРасчетов(Объект);
	
КонецПроцедуры

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВТабличнойЧасти(
		Объект,
		ИмяТабличнойЧасти);

КонецПроцедуры

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  Объект                - ДокументОбъект или соответствующие данные формы
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - оставлен для совместимости; не используется
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре = Неопределено) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
		Объект,
		СтрокаТабличнойЧасти,
		ИмяТабличнойЧасти);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

Функция ЕстьКомитентыНаЗакупку(Объект) Экспорт

	Результат = Ложь;
	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.Контрагент) Тогда
			Результат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция ИспользоватьПростуюФорму(ВидОперации) Экспорт
	
	Возврат
		(ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги)
		Или
		(ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары)
		Или
		(ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиЛизинга)
		Или
		(ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства)
		Или
		(ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПриобретениеЗемельныхУчастков);
	
КонецФункции

Функция РеквизитыЗаСсылками(ВидОперации) Экспорт
	
	РеквизитыЗаСсылками = Новый Соответствие;
	
	// Прячутся за "ПорядокУчетаРасчетов"
	Для Каждого ОписаниеРеквизита Из УчетВзаиморасчетовФормы.РеквизитыДокументаПорядокУчетаРасчетов() Цикл
		РеквизитыЗаСсылками.Вставить(ОписаниеРеквизита.Ключ, "ПорядокУчетаРасчетов");
	КонецЦикла;
	
	// Прячутся за "АналитикаУчета"
	АналитикаУчета = Новый Массив;
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги Тогда
		
		АналитикаУчета.Добавить("Услуги.СчетЗатрат");
		АналитикаУчета.Добавить("Услуги.ПодразделениеЗатрат");
		АналитикаУчета.Добавить("Услуги.Субконто1");
		АналитикаУчета.Добавить("Услуги.Субконто2");
		АналитикаУчета.Добавить("Услуги.Субконто3");
		АналитикаУчета.Добавить("Услуги.СчетЗатратНУ");
		АналитикаУчета.Добавить("Услуги.СубконтоНУ1");
		АналитикаУчета.Добавить("Услуги.СубконтоНУ2");
		АналитикаУчета.Добавить("Услуги.СубконтоНУ3");
		АналитикаУчета.Добавить("Услуги.СчетУчетаНДС");
		АналитикаУчета.Добавить("Услуги.СпособУчетаНДС");
		АналитикаУчета.Добавить("Услуги.ОтражениеВУСН");
		
	КонецЕсли;
	
	Для Каждого ИмяРеквизита Из АналитикаУчета Цикл
		РеквизитыЗаСсылками.Вставить(ИмяРеквизита, "АналитикаУчета");
	КонецЦикла;
	
	Возврат РеквизитыЗаСсылками;
	
КонецФункции

Функция ОсобенностиУчетаРасчетов(ВидОперации, ДоговорКонтрагента) Экспорт
	
	ОсобенностиДокумента = УчетВзаиморасчетовФормы.НовыйОсобенностиУчетаРасчетовДокумента();
	
	ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПлатежейПоставщикам");
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		ОсобенностиДокумента.ТребуетсяУчетРасчетов = Ложь;
		ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = Ложь;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиФакторинга Тогда
		ОсобенностиДокумента.ТребуетсяУчетРасчетов = Ложь;
		ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = Ложь;
	ИначеЕсли Не ИспользоватьПростуюФорму(ВидОперации) И ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "ВидДоговора");
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			ОсобенностиДокумента.ТребуетсяУчетАвансов = Ложь;
		ИначеЕсли ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СФакторинговойКомпанией Тогда
			ОсобенностиДокумента.ТребуетсяУчетРасчетов = Ложь;
			ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ОсобенностиДокумента.ТребуетсяУчетРасчетов Тогда
		ОсобенностиДокумента.ТребуетсяУчетАвансов = Ложь;
		ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = Ложь;
	КонецЕсли;
	
	Возврат ОсобенностиДокумента;
	
КонецФункции

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугВозвратнаяТара.Номенклатура,
	|	ПоступлениеТоваровУслугВозвратнаяТара.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	ИСТИНА КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ВозвратнаяТара
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПоступлениеТоваровУслугВозвратнаяТара
	|ГДЕ
	|	ПоступлениеТоваровУслугВозвратнаяТара.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
	|	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура В
	|				(ВЫБРАТЬ
	|					ВозвратнаяТара.Номенклатура
	|				ИЗ
	|					ВозвратнаяТара КАК ВозвратнаяТара)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугУслуги.Номенклатура,
	|	ПоступлениеТоваровУслугУслуги.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка = &Ссылка
	|	И НЕ ПоступлениеТоваровУслугУслуги.Номенклатура В
	|				(ВЫБРАТЬ
	|					ВозвратнаяТара.Номенклатура
	|				ИЗ
	|					ВозвратнаяТара КАК ВозвратнаяТара)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратнаяТара.Номенклатура,
	|	ВозвратнаяТара.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	ВозвратнаяТара.ЦенаВключаетНДС
	|ИЗ
	|	ВозвратнаяТара КАК ВозвратнаяТара
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Номенклатура,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугАгентскиеУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка = &Ссылка
	|	И НЕ ПоступлениеТоваровУслугАгентскиеУслуги.Номенклатура В
	|				(ВЫБРАТЬ
	|					ВозвратнаяТара.Номенклатура
	|				ИЗ
	|					ВозвратнаяТара КАК ВозвратнаяТара)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугОборудование.Номенклатура,
	|	ПоступлениеТоваровУслугОборудование.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	|ГДЕ
	|	ПоступлениеТоваровУслугОборудование.Ссылка = &Ссылка
	|	И НЕ ПоступлениеТоваровУслугОборудование.Номенклатура В
	|				(ВЫБРАТЬ
	|					ВозвратнаяТара.Номенклатура
	|				ИЗ
	|					ВозвратнаяТара КАК ВозвратнаяТара)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("ВременнаяТаблицаНаличиеТоваров",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_Реквизиты",                      НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",         НомераТаблиц.Количество());
	
	// В случае включения НДС в стоимость проводки по НДС не будет в Хозрасчетном,
	// поэтому для таблицы СуммыПроводок используем НДСПредъявленный.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицыТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НаличиеТоваров
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ТаблицаТовары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ТаблицаОборудование.Ссылка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Оборудование КАК ТаблицаОборудование
	|	ГДЕ
	|		ТаблицаОборудование.Ссылка = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ТаблицаОбъектыСтроительства.Ссылка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ТаблицаОбъектыСтроительства
	|	ГДЕ
	|		ТаблицаОбъектыСтроительства.Ссылка = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ТаблицаОсновныеСредства.Ссылка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ТаблицаОсновныеСредства
	|	ГДЕ
	|		ТаблицаОсновныеСредства.Ссылка = &ДокументОснование) КАК ТаблицыТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяПостановлениеНДС1137
	|				И Реквизиты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку)
	|			ТОГДА ВЫРАЗИТЬ(&СчетФактура КАК Документ.СчетФактураПолученный).Продавец
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	Реквизиты.Грузополучатель КАК Грузополучатель,
	|	Реквизиты.Грузоотправитель КАК Грузоотправитель,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реквизиты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	"""" КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &ПредставлениеПоставщика
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Поставщик,
	|	Реквизиты.Контрагент.ИНН КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель.ОбособленноеПодразделение
	|				И Реквизиты.Грузоотправитель.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Грузоотправитель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &Грузоотправитель
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Организация.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	ВЫБОР
	|		КОГДА НаличиеТоваров.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &АдресПоставщика
	|		ИНАЧЕ """"""""
	|	КОНЕЦ КАК АдресПоставщика,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &ИННКПППоставщика
	|		ИНАЧЕ """"""""
	|	КОНЕЦ КАК ИННКПППоставщика,
	|	&СводныйСФКомиссияПоЗакупке КАК СводныйСФКомиссияПоЗакупке,
	|	"""" КАК Исполнитель,
	|	"""" КАК ИсполнительНаОсновании,
	|	"""" КАК ОтпускПроизвел,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК ЗаЗаказчикаНаОсновании
	|ИЗ
	|	ВТ_Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеТоваров КАК НаличиеТоваров
	|		ПО Реквизиты.Ссылка = НаличиеТоваров.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаТовары.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТовары.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (ТаблицаТовары.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаОборудование.НомерСтроки,
	|	ТаблицаОборудование.Номенклатура,
	|	ТаблицаОборудование.Номенклатура.Код,
	|	ТаблицаОборудование.Номенклатура.Артикул,
	|	ТаблицаОборудование.Номенклатура.НаименованиеПолное,
	|	ТаблицаОборудование.СтранаПроисхождения,
	|	ТаблицаОборудование.СтранаПроисхождения.НаименованиеПолное,
	|	ТаблицаОборудование.НомерГТД,
	|	ТаблицаОборудование.НомерГТД.Представление,
	|	ТаблицаОборудование.НомерГТД.РегистрационныйНомер,
	|	ТаблицаОборудование.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаОборудование.Количество,
	|	ТаблицаОборудование.Цена,
	|	ТаблицаОборудование.Сумма,
	|	ТаблицаОборудование.СуммаНДС,
	|	ТаблицаОборудование.СтавкаНДС,
	|	ЛОЖЬ,
	|	ТаблицаОборудование.Ссылка.СуммаВключаетНДС,
	|	ТаблицаОборудование.Ссылка,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ТаблицаОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаОборудование.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|			И (ТаблицаОборудование.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаОборудование.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Номенклатура.Код,
	|	ТаблицаУслуги.Номенклатура.Артикул,
	|	ТаблицаУслуги.Содержание,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаУслуги.Количество,
	|	ТаблицаУслуги.Цена,
	|	ТаблицаУслуги.Сумма,
	|	ТаблицаУслуги.СуммаНДС,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ИСТИНА,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ТаблицаУслуги.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаАгентскиеУслуги.НомерСтроки,
	|	ТаблицаАгентскиеУслуги.Номенклатура,
	|	ТаблицаАгентскиеУслуги.Номенклатура.Код,
	|	ТаблицаАгентскиеУслуги.Номенклатура.Артикул,
	|	ТаблицаАгентскиеУслуги.Содержание,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаАгентскиеУслуги.Количество,
	|	ТаблицаАгентскиеУслуги.Цена,
	|	ТаблицаАгентскиеУслуги.Сумма,
	|	ТаблицаАгентскиеУслуги.СуммаНДС,
	|	ТаблицаАгентскиеУслуги.СтавкаНДС,
	|	ИСТИНА,
	|	ТаблицаАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаАгентскиеУслуги.Ссылка,
	|	ИСТИНА,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаАгентскиеУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (ТаблицаАгентскиеУслуги.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаАгентскиеУслуги.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаОбъектыСтроительства.НомерСтроки,
	|	ТаблицаОбъектыСтроительства.ОбъектСтроительства,
	|	ТаблицаОбъектыСтроительства.ОбъектСтроительства.Код,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаОбъектыСтроительства.ОбъектСтроительства.Наименование,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	0,
	|	ТаблицаОбъектыСтроительства.Сумма,
	|	ТаблицаОбъектыСтроительства.Сумма,
	|	ТаблицаОбъектыСтроительства.СуммаНДС,
	|	ТаблицаОбъектыСтроительства.СтавкаНДС,
	|	ЛОЖЬ,
	|	ТаблицаОбъектыСтроительства.Ссылка.СуммаВключаетНДС,
	|	ТаблицаОбъектыСтроительства.Ссылка,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ТаблицаОбъектыСтроительства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаОбъектыСтроительства.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОбъектыСтроительства))
	|			И (ТаблицаОбъектыСтроительства.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаОбъектыСтроительства.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ТаблицаОсновныеСредства.НомерСтроки,
	|	ТаблицаОсновныеСредства.ОсновноеСредство,
	|	ТаблицаОсновныеСредства.ОсновноеСредство.Код,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаОсновныеСредства.ОсновноеСредство.Наименование,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	0,
	|	ТаблицаОсновныеСредства.Сумма,
	|	ТаблицаОсновныеСредства.Сумма,
	|	ТаблицаОсновныеСредства.СуммаНДС,
	|	ТаблицаОсновныеСредства.СтавкаНДС,
	|	ЛОЖЬ,
	|	ТаблицаОсновныеСредства.Ссылка.СуммаВключаетНДС,
	|	ТаблицаОсновныеСредства.Ссылка,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ТаблицаОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаОсновныеСредства.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОС))
	|			И (ТаблицаОсновныеСредства.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаОсновныеСредства.Ссылка = &ДокументОснование";

	ТекстЗапроса = ТекстЗапроса
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	Возврат ТекстЗапроса;

КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	МассивРеквизитов.Добавить("УдалитьПредъявленСчетФактура");
	МассивРеквизитов.Добавить("УдалитьНомерВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьДатаВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьНДСПредъявленКВычету");
	МассивРеквизитов.Добавить("УдалитьКодВидаОперации");
	МассивРеквизитов.Добавить("УдалитьКодСпособаПолучения");
	
	Возврат МассивРеквизитов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("Основание")
			И ЗначениеЗаполнено(Параметры.Основание) Тогда
			ВидОперации = ОпределитьВидОперацииПоДокументуОснованию(Параметры.Основание);
		КонецЕсли;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	ФормыПоступлениеТоваровУслуг = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыПоступлениеТоваровУслуг[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ОпределитьВидОперацииПоДокументуОснованию(Основание) Экспорт

	Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;

	Если ЗначениеЗаполнено(Основание)
		И ТипЗнч(Основание) = Тип("ДокументСсылка.Доверенность") Тогда
		
		Если НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугДляКомитентов") Тогда
		    // При наличии деятельности по договорам комиссии на закупку возможно 
		    // выдача доверенности для получения товаров для комитента

			ДоговорКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Основание, "ДоговорКонтрагента");
			
			ЭтоКомиссияНаПродажу = Ложь;
				
			Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
				ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "ВидДоговора");
				ЭтоКомиссияНаПродажу = (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
			КонецЕсли;
			
			Если НЕ ЭтоКомиссияНаПродажу Тогда
				Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары;
			КонецЕсли;
		
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ДоговорКонтрагента.ВидДоговора");
			
		Если ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
			Или НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугДляКомитентов") Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Основание);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(Таблицы.ЕстьТовары) КАК ЕстьТовары,
			|	СУММА(Таблицы.ЕстьУслуги) КАК ЕстьУслуги,
			|	СУММА(Таблицы.ЕстьВозвратнаяТара) КАК ЕстьВозвратнаяТара
			|ИЗ
			|	(ВЫБРАТЬ ПЕРВЫЕ 1
			|		1 КАК ЕстьТовары,
			|		0 КАК ЕстьУслуги,
			|		0 КАК ЕстьВозвратнаяТара
			|	ИЗ
			|		Документ.СчетНаОплатуПоставщика.Товары КАК ДокОснование
			|	ГДЕ
			|		ДокОснование.Ссылка = &Ссылка
			|		И НЕ ЕСТЬNULL(ДокОснование.Номенклатура.Услуга, ИСТИНА)
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		0,
			|		1,
			|		0
			|	ИЗ
			|		Документ.СчетНаОплатуПоставщика.Товары КАК ДокОснование
			|	ГДЕ
			|		ДокОснование.Ссылка = &Ссылка
			|		И ЕСТЬNULL(ДокОснование.Номенклатура.Услуга, ИСТИНА)
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		0,
			|		0,
			|		1
			|	ИЗ
			|		Документ.СчетНаОплатуПоставщика.ВозвратнаяТара КАК ДокОснование
			|	ГДЕ
			|		ДокОснование.Ссылка = &Ссылка) КАК Таблицы";
			Выборка = Запрос.Выполнить().Выбрать();
			ЕстьТовары 	= Ложь;
			ЕстьУслуги	= Ложь;
			ЕстьВозвратнаяТара	= Ложь;
			Если Выборка.Следующий() Тогда
				ЕстьТовары 	= ЗначениеЗаполнено(Выборка.ЕстьТовары) И Выборка.ЕстьТовары > 0;
				ЕстьУслуги	= ЗначениеЗаполнено(Выборка.ЕстьУслуги) И Выборка.ЕстьУслуги > 0;
				ЕстьВозвратнаяТара	= ЗначениеЗаполнено(Выборка.ЕстьВозвратнаяТара) И Выборка.ЕстьВозвратнаяТара > 0;
			КонецЕсли;
			
			Если ЕстьВозвратнаяТара Тогда
				// Использование возвратной тары выполняется через основную форму
			ИначеЕсли ЕстьТовары И ЕстьУслуги Тогда
				// Одновременное поступление товаров и услуг выполняется через основную форму
			ИначеЕсли ЕстьТовары Тогда
				Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары;
			ИначеЕсли ЕстьУслуги Тогда
				Результат = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыПоступлениеТоваровУслуг = Новый Соответствие;
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары, "ФормаДокументаТовары");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги, "ФормаДокументаУслуги");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиФакторинга, "ФормаДокументаУслуги");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиЛизинга, "ФормаДокументаУслугиЛизинга");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия, "ФормаДокументаОбщая");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку, "ФормаДокументаОбщая");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование, "ФормаДокументаОбщая");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства, "ФормаДокументаОбщая");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства, "ФормаДокументаОсновныеСредства");
	ФормыПоступлениеТоваровУслуг.Вставить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПриобретениеЗемельныхУчастков, "ФормаДокументаОсновныеСредства");
	
	Возврат ФормыПоступлениеТоваровУслуг;

КонецФункции 

Процедура ЗаполнитьОтражениеВУСНВСтрокеТабличнойЧасти(Объект, СтрокаТаблицы) Экспорт
	
	Если УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, Объект.Дата) Тогда
		Если Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Объект.ДоговорКонтрагента, "ВидДоговора") = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			СтрокаТаблицы.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
		ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		Иначе
			СтрокаТаблицы.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Перечень табличных частей, данные которых не используются 
// в контексте документа, скрыты от пользователя
Функция НеИспользуемыеТабличныеЧасти(ВидОперации, Комиссия, ВозможнаКомиссияПоЗакупке) Экспорт
	
	ТабличныеЧасти = Новый Массив;
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары Тогда
	
		// Все, кроме товаров, не используется.
	    ТабличныеЧасти.Добавить("Оборудование");
	    ТабличныеЧасти.Добавить("ОбъектыСтроительства");
	    ТабличныеЧасти.Добавить("Услуги");
	    ТабличныеЧасти.Добавить("ВозвратнаяТара");
	    ТабличныеЧасти.Добавить("АгентскиеУслуги");
	    ТабличныеЧасти.Добавить("ОсновныеСредства");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиЛизинга Тогда

		// Все, кроме услуг, не используется.
	    ТабличныеЧасти.Добавить("Оборудование");
	    ТабличныеЧасти.Добавить("ОбъектыСтроительства");
	    ТабличныеЧасти.Добавить("Товары");
	    ТабличныеЧасти.Добавить("ВозвратнаяТара");
	    ТабличныеЧасти.Добавить("АгентскиеУслуги");
	    ТабличныеЧасти.Добавить("ОсновныеСредства");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПриобретениеЗемельныхУчастков Тогда

		// Все, кроме основных средств, не используется.
	    ТабличныеЧасти.Добавить("Оборудование");
	    ТабличныеЧасти.Добавить("ОбъектыСтроительства");
	    ТабличныеЧасти.Добавить("Товары");
	    ТабличныеЧасти.Добавить("Услуги");
	    ТабличныеЧасти.Добавить("ВозвратнаяТара");
	    ТабличныеЧасти.Добавить("АгентскиеУслуги");
		
	Иначе
	
		// Товары доступны всегда, кроме объектов строительства и основных средств
		Если ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства Тогда
			ТабличныеЧасти.Добавить("Товары");
		КонецЕсли;
		
		// Услуги доступны всегда, кроме переработки и комиссии
		Если ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку 
			ИЛИ Комиссия Тогда
			ТабличныеЧасти.Добавить("Услуги");
		КонецЕсли;
		
		Если НЕ ВозможнаКомиссияПоЗакупке Тогда
			ТабличныеЧасти.Добавить("АгентскиеУслуги");
		КонецЕсли;
		
		// Возвратная тара доступна только для двух видов операции и то,
		// если включена соответствующая опция
		Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВозвратнуюТару") Тогда
			ТабличныеЧасти.Добавить("ВозвратнаяТара");
		ИначеЕсли ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия
			И ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
			ТабличныеЧасти.Добавить("ВозвратнаяТара");
		КонецЕсли;
		
		// Оборудование, ОбъектыСтроительства, ОсновныеСредства доступны только в "своих" операциях
		Если ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
			ТабличныеЧасти.Добавить("Оборудование");
		КонецЕсли;
		
		Если ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства Тогда
			ТабличныеЧасти.Добавить("ОбъектыСтроительства");
		КонецЕсли;
		
		Если ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства
			И ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПриобретениеЗемельныхУчастков Тогда
			ТабличныеЧасти.Добавить("ОсновныеСредства");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТабличныеЧасти;
	
КонецФункции


// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ, ДоговорДляОтложенногоПроведения = Неопределено) Экспорт

	ПараметрыПроведения = Новый Структура;

	ЭтоОтложенноеПроведение = ЗначениеЗаполнено(ДоговорДляОтложенногоПроведения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц, ЭтоОтложенноеПроведение);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;

	ИспользуетсяОтложенноеПроведение = ПроведениеСервер.ИспользуетсяОтложенноеПроведение(
		Реквизиты.Организация, Реквизиты.Период);
	
	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("РасчетыВВалюте",  Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета);
	Реквизиты.Вставить("ИспользуетсяОтложенноеПроведение", ИспользуетсяОтложенноеПроведение);
	Реквизиты.Вставить("ЭтоОтложенноеПроведение", ЭтоОтложенноеПроведение);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Реквизиты.ВалютаРеглУчета);
	Запрос.УстановитьПараметр("РасчетыВВалюте",  Реквизиты.РасчетыВВалюте);
	
	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
		Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
			Результат    = Запрос.ВыполнитьПакет();
		КонецЕсли;
	КонецЕсли;
	
	Реквизиты.Вставить("УчетПоПродажнойСтоимости", 
		УчетнаяПолитика.СпособОценкиТоваровВРознице(Реквизиты.Организация, Реквизиты.Период) 
			= Перечисления.СпособыОценкиТоваровВРознице.ПоПродажнойСтоимости);
	
	Реквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", 
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходыМинусРасходы", Реквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
	Реквизиты.Вставить("ПлательщикНДС", 
		УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("МассивСчетовДляГТД", УчетНДСВызовСервераПовтИсп.СчетаУчетаДляГТД());
	
	Запрос.УстановитьПараметр("УчетАгентскогоНДС",  Реквизиты.УчетАгентскогоНДС);
	
	Запрос.УстановитьПараметр("Счета10", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	Запрос.УстановитьПараметр("Счета97", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов));
	Запрос.УстановитьПараметр("СчетаАО", УчетОС.СчетаУчетаАрендныхОбязательств());
	
	Запрос.УстановитьПараметр("СинонимТовары",       НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("СинонимУслуги",       НСтр("ru = 'Услуги'"));
	Запрос.УстановитьПараметр("СинонимОборудование", НСтр("ru = 'Оборудование'"));
	Запрос.УстановитьПараметр("СинонимОсновныеСредства", НСтр("ru = 'Основные средства'"));
	
	Реквизиты.Вставить("ПлательщикНДФЛ", 
		УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ПлательщикНДФЛ", Реквизиты.ПлательщикНДФЛ);
	Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП", УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа",   УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период));
	
	Запрос.УстановитьПараметр("СодержаниеПоступлениеТоваровКомитентов", "Поступление запасов");
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаЗачетАвансовКомиссияПоЗакупке(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступление(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеТоваровНаКомиссию(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеТоваровВПереработку(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеТоваровТорговаяНаценка(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеТоваровГТД(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеТары(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПроверкаСостоянияОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеПоСчету(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	СтруктураТаблицДокумента = Новый Структура;
	СтруктураТаблицДокумента.Вставить("ТаблицаТовары",                 ПараметрыПроведения.ТаблицаТовары);
	СтруктураТаблицДокумента.Вставить("ТаблицаОборудование",           ПараметрыПроведения.ТаблицаОборудование);
	СтруктураТаблицДокумента.Вставить("ТаблицаОбъектыСтроительства",   ПараметрыПроведения.ТаблицаОбъектыСтроительства);
	СтруктураТаблицДокумента.Вставить("ТаблицаУслуги",                 ПараметрыПроведения.ТаблицаУслуги);
	СтруктураТаблицДокумента.Вставить("ТаблицаТоварыУслугиКомиссияПоЗакупке", ПараметрыПроведения.ТаблицаТоварыУслугиКомиссияПоЗакупке);
	СтруктураТаблицДокумента.Вставить("ТаблицаОсновныеСредства",       ПараметрыПроведения.ТаблицаОсновныеСредства);
	
	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);
	
	Для каждого ТаблицаСтруктуры Из ПараметрыПроведения.СтруктураТаблицДокумента Цикл
		ДобавитьКолонкуСодержание(ТаблицаСтруктуры.Значение, Реквизиты);
	КонецЦикла;
	ДобавитьКолонкуСодержание(ПараметрыПроведения.НомераГТД,   Реквизиты);
	ДобавитьКолонкуСодержание(ПараметрыПроведения.ТаблицаТара, Реквизиты);
	ДобавитьКолонкуСодержание(ПараметрыПроведения.ПоступлениеТоваровНаКомиссиюТаблицаТовары,   Реквизиты);
	ДобавитьКолонкуСодержание(ПараметрыПроведения.ПоступлениеТоваровВПереработкуТаблицаТовары, Реквизиты);

	Возврат ПараметрыПроведения;
	
КонецФункции 

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц, ЭтоОтложенноеПроведение)

	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());

	Если ЭтоОтложенноеПроведение Тогда
		// При отложенном проведении нет необходимости обращаться к табличным частям документа, 
		// которые могут содержать много строк. 
		// Суммы взаиморасчетов могут быть получены из ранее сформированных проводок документа.
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЛОЖЬ КАК ЕстьТовары,
		|	ЛОЖЬ КАК ЕстьУслуги,
		|	ЛОЖЬ КАК ЕстьАгентскиеУслуги,
		|	ЛОЖЬ КАК ЕстьОборудование,
		|	ЛОЖЬ КАК ЕстьОбъектыСтроительства,
		|	ЛОЖЬ КАК ЕстьТара,
		|	ЛОЖЬ КАК ЕстьОсновныеСредства
		|ПОМЕСТИТЬ СоставДокумента
		|ГДЕ
		|	ЛОЖЬ";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	МАКСИМУМ(СоставДокумента.ЕстьТовары) КАК ЕстьТовары,
		|	МАКСИМУМ(СоставДокумента.ЕстьУслуги) КАК ЕстьУслуги,
		|	МАКСИМУМ(СоставДокумента.ЕстьАгентскиеУслуги) КАК ЕстьАгентскиеУслуги,
		|	МАКСИМУМ(СоставДокумента.ЕстьОборудование) КАК ЕстьОборудование,
		|	МАКСИМУМ(СоставДокумента.ЕстьОбъектыСтроительства) КАК ЕстьОбъектыСтроительства,
		|	МАКСИМУМ(СоставДокумента.ЕстьТара) КАК ЕстьТара,
		|	МАКСИМУМ(СоставДокумента.ЕстьОсновныеСредства) КАК ЕстьОсновныеСредства
		|ПОМЕСТИТЬ СоставДокумента
		|ИЗ
		|	(ВЫБРАТЬ ПЕРВЫЕ 1
		|		ИСТИНА КАК ЕстьТовары,
		|		ЛОЖЬ КАК ЕстьУслуги,
		|		ЛОЖЬ КАК ЕстьАгентскиеУслуги,
		|		ЛОЖЬ КАК ЕстьОборудование,
		|		ЛОЖЬ КАК ЕстьОбъектыСтроительства,
		|		ЛОЖЬ КАК ЕстьТара,
		|		ЛОЖЬ КАК ЕстьОсновныеСредства
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ЛОЖЬ,
		|		ИСТИНА,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.Услуги КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ИСТИНА,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ИСТИНА,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.Оборудование КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ИСТИНА,
		|		ЛОЖЬ,
		|		ЛОЖЬ
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ИСТИНА,
		|		ЛОЖЬ
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ЛОЖЬ,
		|		ИСТИНА
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() + 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВидДоговора, НЕОПРЕДЕЛЕНО) КАК ВидДоговора,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО) КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВидАгентскогоДоговора, ЛОЖЬ) КАК ВидАгентскогоДоговора,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ЭлектронныеУслуги, ЛОЖЬ) КАК ЭлектронныеУслуги,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.Наименование, """") КАК НаименованиеДоговора,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.Склад КАК Склад,
	|	ЕСТЬNULL(Реквизиты.Склад.ТипСклада, НЕОПРЕДЕЛЕНО) КАК ТипСклада,
	|	ЕСТЬNULL(Реквизиты.Склад.ТипЦенРозничнойТорговли, НЕОПРЕДЕЛЕНО) КАК ТипЦенРозничнойТорговли,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.СчетУчетаРасчетовПоТаре КАК СчетУчетаРасчетовПоТаре,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	Реквизиты.МОЛ КАК МОЛ,
	|	Реквизиты.МестонахождениеОС КАК МестонахождениеОС,
	|	Реквизиты.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
	|	Реквизиты.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВидДоговора, ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)) = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом) КАК ЭтоКомиссия,
	|	"""" КАК ИмяСписка,
	|	Реквизиты.СуммаДокумента КАК СуммаДокумента
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
	|	Реквизиты.ЭлектронныеУслуги КАК ЭлектронныеУслуги,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ТипСклада КАК ТипСклада,
	|	Реквизиты.ТипЦенРозничнойТорговли КАК ТипЦенРозничнойТорговли,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.СчетУчетаРасчетовПоТаре КАК СчетУчетаРасчетовПоТаре,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	Реквизиты.МОЛ КАК МОЛ,
	|	Реквизиты.МестонахождениеОС КАК МестонахождениеОС,
	|	Реквизиты.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
	|	Реквизиты.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика,
	|	Реквизиты.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТовары, ЛОЖЬ) КАК ЕстьТовары,
	|	ЕСТЬNULL(СоставДокумента.ЕстьУслуги, ЛОЖЬ) КАК ЕстьУслуги,
	|	ЕСТЬNULL(СоставДокумента.ЕстьАгентскиеУслуги, ЛОЖЬ) КАК ЕстьАгентскиеУслуги,
	|	ЕСТЬNULL(СоставДокумента.ЕстьОборудование, ЛОЖЬ) КАК ЕстьОборудование,
	|	ЕСТЬNULL(СоставДокумента.ЕстьОбъектыСтроительства, ЛОЖЬ) КАК ЕстьОбъектыСтроительства,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТара, ЛОЖЬ) КАК ЕстьТара,
	|	ЕСТЬNULL(СоставДокумента.ЕстьОсновныеСредства, ЛОЖЬ) КАК ЕстьОсновныеСредства,
	|	Реквизиты.ИмяСписка КАК ИмяСписка,
	|	Реквизиты.НомерДоговора КАК НомерДоговора,
	|	Реквизиты.ДатаДоговора КАК ДатаДоговора,
	|	Реквизиты.НаименованиеДоговора КАК НаименованиеДоговора,
	|	Реквизиты.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьТовары Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Количество,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.ЦенаВРознице,
		|	ТаблицаТовары.СуммаВРознице,
		|	ТаблицаТовары.СтавкаНДСВРознице,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.СтранаПроисхождения,
		|	ТаблицаТовары.СчетУчета,
		|	ТаблицаТовары.СчетУчета.Забалансовый КАК СчетУчетаЗабалансовый,
		|	ТаблицаТовары.СчетУчетаНДС,
		|	ТаблицаТовары.СпособУчетаНДС,
		|	ТаблицаТовары.ОтражениеВУСН,
		|	ТаблицаТовары.Контрагент,
		|	ТаблицаТовары.ДоговорКонтрагента,
		|	ТаблицаТовары.СчетРасчетов,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчета.Забалансовый
		|				И ТаблицаТовары.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК КомиссияПоЗакупке
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.Содержание,
		|	ТаблицаУслуги.Количество,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ТаблицаУслуги.СчетУчетаНДС,
		|	ТаблицаУслуги.СпособУчетаНДС,
		|	ТаблицаУслуги.ПодразделениеЗатрат,
		|	ТаблицаУслуги.СчетЗатрат,
		|	ТаблицаУслуги.Субконто1,
		|	ТаблицаУслуги.Субконто2,
		|	ТаблицаУслуги.Субконто3,
		|	ТаблицаУслуги.СчетЗатратНУ,
		|	ТаблицаУслуги.СубконтоНУ1,
		|	ТаблицаУслуги.СубконтоНУ2,
		|	ТаблицаУслуги.СубконтоНУ3,
		|	ТаблицаУслуги.ОтражениеВУСН
		|ПОМЕСТИТЬ ТаблицаУслуги
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ТаблицаУслуги
		|ГДЕ
		|	ТаблицаУслуги.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаАгентскиеУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаАгентскиеУслуги.Ссылка,
		|	ТаблицаАгентскиеУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаАгентскиеУслуги.Номенклатура,
		|	ТаблицаАгентскиеУслуги.Содержание,
		|	ТаблицаАгентскиеУслуги.Количество,
		|	ВЫБОР
		|		КОГДА ТаблицаАгентскиеУслуги.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА ТаблицаАгентскиеУслуги.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаАгентскиеУслуги.Контрагент,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов,
		|	ТаблицаАгентскиеУслуги.СтавкаНДС
		|ПОМЕСТИТЬ ТаблицаАгентскиеУслуги
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|ГДЕ
		|	ТаблицаАгентскиеУслуги.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьОборудование Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаОборудование", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаОборудование.Ссылка,
		|	ТаблицаОборудование.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОборудование.Номенклатура,
		|	ТаблицаОборудование.Количество,
		|	ВЫБОР
		|		КОГДА ТаблицаОборудование.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаОборудование.Сумма
		|		ИНАЧЕ ТаблицаОборудование.Сумма + ТаблицаОборудование.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаОборудование.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА ТаблицаОборудование.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаОборудование.Сумма
		|		ИНАЧЕ ТаблицаОборудование.Сумма + ТаблицаОборудование.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаОборудование.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаОборудование.СтавкаНДС,
		|	ТаблицаОборудование.НомерГТД,
		|	ТаблицаОборудование.СтранаПроисхождения,
		|	ТаблицаОборудование.СчетУчета,
		|	ТаблицаОборудование.СчетУчетаНДС,
		|	ТаблицаОборудование.СпособУчетаНДС
		|ПОМЕСТИТЬ ТаблицаОборудование
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ТаблицаОборудование
		|ГДЕ
		|	ТаблицаОборудование.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьОбъектыСтроительства Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаОбъектыСтроительства", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаОбъектыСтроительства.Ссылка,
		|	ТаблицаОбъектыСтроительства.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОбъектыСтроительства.ОбъектСтроительства,
		|	ТаблицаОбъектыСтроительства.СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ТаблицаОбъектыСтроительства.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаОбъектыСтроительства.Сумма
		|		ИНАЧЕ ТаблицаОбъектыСтроительства.Сумма + ТаблицаОбъектыСтроительства.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаОбъектыСтроительства.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА ТаблицаОбъектыСтроительства.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаОбъектыСтроительства.Сумма
		|		ИНАЧЕ ТаблицаОбъектыСтроительства.Сумма + ТаблицаОбъектыСтроительства.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаОбъектыСтроительства.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаОбъектыСтроительства.СтавкаНДС,
		|	ТаблицаОбъектыСтроительства.СчетУчета,
		|	ТаблицаОбъектыСтроительства.СчетУчетаНДС,
		|	ТаблицаОбъектыСтроительства.СпособУчетаНДС
		|ПОМЕСТИТЬ ТаблицаОбъектыСтроительства
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ТаблицаОбъектыСтроительства
		|ГДЕ
		|	ТаблицаОбъектыСтроительства.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьТара Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаТара", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаТара.Ссылка,
		|	ТаблицаТара.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТара.Номенклатура,
		|	ТаблицаТара.Количество,
		|	ТаблицаТара.Сумма КАК СуммаВзаиморасчетов,
		|	ТаблицаТара.Сумма КАК СуммаРуб,
		|	ТаблицаТара.СчетУчета
		|ПОМЕСТИТЬ ТаблицаТара
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ТаблицаТара
		|ГДЕ
		|	ТаблицаТара.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьОсновныеСредства Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаОсновныеСредства", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаОсновныеСредства.Ссылка,
		|	ТаблицаОсновныеСредства.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОсновныеСредства.ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ТаблицаОсновныеСредства.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаОсновныеСредства.Сумма
		|		ИНАЧЕ ТаблицаОсновныеСредства.Сумма + ТаблицаОсновныеСредства.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаОсновныеСредства.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА ТаблицаОсновныеСредства.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаОсновныеСредства.Сумма
		|		ИНАЧЕ ТаблицаОсновныеСредства.Сумма + ТаблицаОсновныеСредства.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаОсновныеСредства.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаОсновныеСредства.СтавкаНДС,
		|	ТаблицаОсновныеСредства.СчетУчета,
		|	ТаблицаОсновныеСредства.СчетНачисленияАмортизации,
		|	ТаблицаОсновныеСредства.СчетУчетаНДС,
		|	ТаблицаОсновныеСредства.СпособУчетаНДС,
		|	ТаблицаОсновныеСредства.СрокПолезногоИспользования,
		|	ТаблицаОсновныеСредства.ИнвентарныйНомер КАК ИнвентарныйНомер
		|ПОМЕСТИТЬ ТаблицаОсновныеСредства
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ТаблицаОсновныеСредства
		|ГДЕ
		|	ТаблицаОсновныеСредства.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Результат    = Запрос.ВыполнитьПакет();
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьТовары Тогда
		СуммыТаблицыТовары = Результат[НомераТаблиц["СуммыТаблицыТовары"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыТовары, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыТовары", СуммыТаблицыТовары);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеТовары();
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		СуммыТаблицыУслуги = Результат[НомераТаблиц["СуммыТаблицыУслуги"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыУслуги, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыУслуги", СуммыТаблицыУслуги);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеУслуги();
	КонецЕсли;
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
		СуммыТаблицыАгентскиеУслуги = Результат[НомераТаблиц["СуммыТаблицыАгентскиеУслуги"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыАгентскиеУслуги, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыАгентскиеУслуги", СуммыТаблицыАгентскиеУслуги);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеАгентскиеУслуги();
	КонецЕсли;
	Если Реквизиты.ЕстьОборудование Тогда
		СуммыТаблицыОборудование = Результат[НомераТаблиц["СуммыТаблицыОборудование"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыОборудование, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыОборудование", СуммыТаблицыОборудование);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеОборудование();
	КонецЕсли;
	Если Реквизиты.ЕстьОбъектыСтроительства Тогда
		СуммыТаблицыОбъектыСтроительства = Результат[НомераТаблиц["СуммыТаблицыОбъектыСтроительства"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыОбъектыСтроительства, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыОбъектыСтроительства", СуммыТаблицыОбъектыСтроительства);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеОбъектыСтроительства();
	КонецЕсли;
	Если Реквизиты.ЕстьТара Тогда
		СуммыТаблицыТара = Результат[НомераТаблиц["СуммыТаблицыТара"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыТара, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыТара", СуммыТаблицыТара);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеТара();
	КонецЕсли;
	Если Реквизиты.ЕстьОсновныеСредства Тогда
		СуммыТаблицыОсновныеСредства = Результат[НомераТаблиц["СуммыТаблицыОсновныеСредства"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыОсновныеСредства, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыОсновныеСредства", СуммыТаблицыОсновныеСредства);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеОсновныеСредства();
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Результат    = Запрос.ВыполнитьПакет();
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты)

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
	
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаТовары", "ПОМЕСТИТЬ ВременнаяТаблицаТовары");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Ссылка = &Ссылка", "ТаблицаТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки,
		|	ВременнаяТаблицаТовары.СтавкаНДС,
		|	ВременнаяТаблицаТовары.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаРуб,
		|	ВременнаяТаблицаТовары.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаУслуги", "ПОМЕСТИТЬ ВременнаяТаблицаУслуги");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаУслуги.Ссылка = &Ссылка", "ТаблицаУслуги.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаУслуги.НомерСтроки,
		|	ВременнаяТаблицаУслуги.СтавкаНДС,
		|	ВременнаяТаблицаУслуги.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаУслуги.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаУслуги.СуммаРуб,
		|	ВременнаяТаблицаУслуги.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаАгентскиеУслуги", "ПОМЕСТИТЬ ВременнаяТаблицаАгентскиеУслуги");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаАгентскиеУслуги.Ссылка = &Ссылка", "ТаблицаАгентскиеУслуги.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыАгентскиеУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаАгентскиеУслуги.НомерСтроки,
		|	ВременнаяТаблицаАгентскиеУслуги.СтавкаНДС,
		|	ВременнаяТаблицаАгентскиеУслуги.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаАгентскиеУслуги.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаАгентскиеУслуги.СуммаРуб,
		|	ВременнаяТаблицаАгентскиеУслуги.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаАгентскиеУслуги КАК ВременнаяТаблицаАгентскиеУслуги"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьОборудование Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаОборудование", "ПОМЕСТИТЬ ВременнаяТаблицаОборудование");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОборудование.Ссылка = &Ссылка", "ТаблицаОборудование.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыОборудование", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОборудование.НомерСтроки,
		|	ВременнаяТаблицаОборудование.СтавкаНДС,
		|	ВременнаяТаблицаОборудование.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаОборудование.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаОборудование.СуммаРуб,
		|	ВременнаяТаблицаОборудование.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаОборудование КАК ВременнаяТаблицаОборудование"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьОбъектыСтроительства Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаОбъектыСтроительства", "ПОМЕСТИТЬ ВременнаяТаблицаОбъектыСтроительства");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОбъектыСтроительства.Ссылка = &Ссылка", "ТаблицаОбъектыСтроительства.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыОбъектыСтроительства", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОбъектыСтроительства.НомерСтроки,
		|	ВременнаяТаблицаОбъектыСтроительства.СтавкаНДС,
		|	ВременнаяТаблицаОбъектыСтроительства.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаОбъектыСтроительства.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаОбъектыСтроительства.СуммаРуб,
		|	ВременнаяТаблицаОбъектыСтроительства.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаОбъектыСтроительства КАК ВременнаяТаблицаОбъектыСтроительства"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьТара Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаТара", "ПОМЕСТИТЬ ВременнаяТаблицаТара");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТара.Ссылка = &Ссылка", "ТаблицаТара.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыТара", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТара.НомерСтроки,
		|	ВременнаяТаблицаТара.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТара.СуммаРуб
		|ИЗ
		|	ВременнаяТаблицаТара КАК ВременнаяТаблицаТара"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьОсновныеСредства Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаОсновныеСредства", "ПОМЕСТИТЬ ВременнаяТаблицаОсновныеСредства");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОсновныеСредства.Ссылка = &Ссылка", "ТаблицаОсновныеСредства.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыОсновныеСредства", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОсновныеСредства.НомерСтроки,
		|	ВременнаяТаблицаОсновныеСредства.СтавкаНДС,
		|	ВременнаяТаблицаОсновныеСредства.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаОсновныеСредства.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаОсновныеСредства.СуммаРуб,
		|	ВременнаяТаблицаОсновныеСредства.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаОсновныеСредства КАК ВременнаяТаблицаОсновныеСредства"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРасчетыВВалютеТовары()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыТовары.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаРуб,
	|	СуммыТаблицыТовары.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыТовары
	|ИЗ
	|	&СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.Ссылка,
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВременнаяТаблицаТовары.Количество,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаРуб,
	|	СуммыТаблицыТовары.СуммаНДСРуб,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.ЦенаВРознице,
	|	ВременнаяТаблицаТовары.СуммаВРознице,
	|	ВременнаяТаблицаТовары.СтавкаНДСВРознице,
	|	ВременнаяТаблицаТовары.НомерГТД,
	|	ВременнаяТаблицаТовары.СтранаПроисхождения,
	|	ВременнаяТаблицаТовары.СчетУчета,
	|	ВременнаяТаблицаТовары.СчетУчетаЗабалансовый КАК СчетУчетаЗабалансовый,
	|	ВременнаяТаблицаТовары.СчетУчетаНДС,
	|	ВременнаяТаблицаТовары.СпособУчетаНДС,
	|	ВременнаяТаблицаТовары.ОтражениеВУСН,
	|	ВременнаяТаблицаТовары.Контрагент,
	|	ВременнаяТаблицаТовары.ДоговорКонтрагента,
	|	ВременнаяТаблицаТовары.СчетРасчетов,
	|	ВременнаяТаблицаТовары.КомиссияПоЗакупке
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|		ПО ВременнаяТаблицаТовары.НомерСтроки = СуммыТаблицыТовары.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеУслуги()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыУслуги.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаРуб,
	|	СуммыТаблицыУслуги.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыУслуги
	|ИЗ
	|	&СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаУслуги.Ссылка,
	|	ВременнаяТаблицаУслуги.НомерСтроки,
	|	ВременнаяТаблицаУслуги.Номенклатура,
	|	ВременнаяТаблицаУслуги.Содержание,
	|	ВременнаяТаблицаУслуги.Количество,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаРуб,
	|	СуммыТаблицыУслуги.СуммаНДСРуб,
	|	ВременнаяТаблицаУслуги.СтавкаНДС,
	|	ВременнаяТаблицаУслуги.СчетУчетаНДС,
	|	ВременнаяТаблицаУслуги.СпособУчетаНДС,
	|	ВременнаяТаблицаУслуги.ПодразделениеЗатрат,
	|	ВременнаяТаблицаУслуги.СчетЗатрат,
	|	ВременнаяТаблицаУслуги.Субконто1,
	|	ВременнаяТаблицаУслуги.Субконто2,
	|	ВременнаяТаблицаУслуги.Субконто3,
	|	ВременнаяТаблицаУслуги.СчетЗатратНУ,
	|	ВременнаяТаблицаУслуги.СубконтоНУ1,
	|	ВременнаяТаблицаУслуги.СубконтоНУ2,
	|	ВременнаяТаблицаУслуги.СубконтоНУ3,
	|	ВременнаяТаблицаУслуги.ОтражениеВУСН
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|		ПО ВременнаяТаблицаУслуги.НомерСтроки = СуммыТаблицыУслуги.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеАгентскиеУслуги()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыАгентскиеУслуги.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыАгентскиеУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаРуб,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыАгентскиеУслуги
	|ИЗ
	|	&СуммыТаблицыАгентскиеУслуги КАК СуммыТаблицыАгентскиеУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаАгентскиеУслуги.Ссылка,
	|	ВременнаяТаблицаАгентскиеУслуги.НомерСтроки,
	|	ВременнаяТаблицаАгентскиеУслуги.Номенклатура,
	|	ВременнаяТаблицаАгентскиеУслуги.Содержание,
	|	ВременнаяТаблицаАгентскиеУслуги.Количество,
	|	СуммыТаблицыАгентскиеУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаРуб,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСРуб,
	|	ВременнаяТаблицаАгентскиеУслуги.Контрагент,
	|	ВременнаяТаблицаАгентскиеУслуги.ДоговорКонтрагента,
	|	ВременнаяТаблицаАгентскиеУслуги.СчетРасчетов,
	|	ВременнаяТаблицаАгентскиеУслуги.СтавкаНДС
	|ПОМЕСТИТЬ ТаблицаАгентскиеУслуги
	|ИЗ
	|	ВременнаяТаблицаАгентскиеУслуги КАК ВременнаяТаблицаАгентскиеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыАгентскиеУслуги КАК СуммыТаблицыАгентскиеУслуги
	|		ПО ВременнаяТаблицаАгентскиеУслуги.НомерСтроки = СуммыТаблицыАгентскиеУслуги.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеОборудование()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыОборудование.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыОборудование.СуммаВзаиморасчетов,
	|	СуммыТаблицыОборудование.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОборудование.СуммаРуб,
	|	СуммыТаблицыОборудование.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыОборудование
	|ИЗ
	|	&СуммыТаблицыОборудование КАК СуммыТаблицыОборудование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОборудование.Ссылка,
	|	ВременнаяТаблицаОборудование.НомерСтроки,
	|	ВременнаяТаблицаОборудование.Номенклатура,
	|	ВременнаяТаблицаОборудование.Количество,
	|	СуммыТаблицыОборудование.СуммаВзаиморасчетов,
	|	СуммыТаблицыОборудование.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОборудование.СуммаРуб,
	|	СуммыТаблицыОборудование.СуммаНДСРуб,
	|	ВременнаяТаблицаОборудование.СтавкаНДС,
	|	ВременнаяТаблицаОборудование.НомерГТД,
	|	ВременнаяТаблицаОборудование.СтранаПроисхождения,
	|	ВременнаяТаблицаОборудование.СчетУчета,
	|	ВременнаяТаблицаОборудование.СчетУчетаНДС,
	|	ВременнаяТаблицаОборудование.СпособУчетаНДС
	|ПОМЕСТИТЬ ТаблицаОборудование
	|ИЗ
	|	ВременнаяТаблицаОборудование КАК ВременнаяТаблицаОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыОборудование КАК СуммыТаблицыОборудование
	|		ПО ВременнаяТаблицаОборудование.НомерСтроки = СуммыТаблицыОборудование.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеОбъектыСтроительства()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыОбъектыСтроительства.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыОбъектыСтроительства.СуммаВзаиморасчетов,
	|	СуммыТаблицыОбъектыСтроительства.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОбъектыСтроительства.СуммаРуб,
	|	СуммыТаблицыОбъектыСтроительства.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыОбъектыСтроительства
	|ИЗ
	|	&СуммыТаблицыОбъектыСтроительства КАК СуммыТаблицыОбъектыСтроительства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОбъектыСтроительства.Ссылка,
	|	ВременнаяТаблицаОбъектыСтроительства.НомерСтроки,
	|	ВременнаяТаблицаОбъектыСтроительства.ОбъектСтроительства,
	|	ВременнаяТаблицаОбъектыСтроительства.СтатьяЗатрат,
	|	СуммыТаблицыОбъектыСтроительства.СуммаВзаиморасчетов,
	|	СуммыТаблицыОбъектыСтроительства.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОбъектыСтроительства.СуммаРуб,
	|	СуммыТаблицыОбъектыСтроительства.СуммаНДСРуб,
	|	ВременнаяТаблицаОбъектыСтроительства.СтавкаНДС,
	|	ВременнаяТаблицаОбъектыСтроительства.СчетУчета,
	|	ВременнаяТаблицаОбъектыСтроительства.СчетУчетаНДС,
	|	ВременнаяТаблицаОбъектыСтроительства.СпособУчетаНДС
	|ПОМЕСТИТЬ ТаблицаОбъектыСтроительства
	|ИЗ
	|	ВременнаяТаблицаОбъектыСтроительства КАК ВременнаяТаблицаОбъектыСтроительства
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыОбъектыСтроительства КАК СуммыТаблицыОбъектыСтроительства
	|		ПО ВременнаяТаблицаОбъектыСтроительства.НомерСтроки = СуммыТаблицыОбъектыСтроительства.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеТара()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыТара.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыТара.СуммаВзаиморасчетов,
	|	СуммыТаблицыТара.СуммаРуб
	|ПОМЕСТИТЬ СуммыТаблицыТара
	|ИЗ
	|	&СуммыТаблицыТара КАК СуммыТаблицыТара
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТара.Ссылка,
	|	ВременнаяТаблицаТара.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаТара.Номенклатура,
	|	ВременнаяТаблицаТара.Количество,
	|	СуммыТаблицыТара.СуммаВзаиморасчетов,
	|	СуммыТаблицыТара.СуммаРуб,
	|	ВременнаяТаблицаТара.СчетУчета
	|ПОМЕСТИТЬ ТаблицаТара
	|ИЗ
	|	ВременнаяТаблицаТара КАК ВременнаяТаблицаТара
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыТара КАК СуммыТаблицыТара
	|		ПО ВременнаяТаблицаТара.НомерСтроки = СуммыТаблицыТара.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
		ИЛИ Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовРеквизиты",        Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаДокумента", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаЗачетАвансов",          Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСуммВзаиморасчетов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаРуб) КАК СуммаРуб
	|ПОМЕСТИТЬ ТаблицаСуммВзаиморасчетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		0 КАК СуммаВзаиморасчетов,
	|		0 КАК СуммаРуб"
	+ ?(Реквизиты.ЕстьТовары, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ТаблицаТовары.СуммаВзаиморасчетов
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб
	|			ИНАЧЕ ТаблицаТовары.СуммаРуб
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаТовары КАК ТаблицаТовары", "")
	+ ?(Реквизиты.ЕстьУслуги, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов - ТаблицаУслуги.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ТаблицаУслуги.СуммаВзаиморасчетов
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб
	|			ИНАЧЕ ТаблицаУслуги.СуммаРуб
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаУслуги КАК ТаблицаУслуги", "")
	+ ?(Реквизиты.ЕстьАгентскиеУслуги, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов - ТаблицаАгентскиеУслуги.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаАгентскиеУслуги.СуммаРуб - ТаблицаАгентскиеУслуги.СуммаНДСРуб
	|			ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаРуб
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги", "")
	+ ?(Реквизиты.ЕстьОборудование, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаОборудование.СуммаВзаиморасчетов - ТаблицаОборудование.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ТаблицаОборудование.СуммаВзаиморасчетов
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаОборудование.СуммаРуб - ТаблицаОборудование.СуммаНДСРуб
	|			ИНАЧЕ ТаблицаОборудование.СуммаРуб
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаОборудование КАК ТаблицаОборудование", "")
	+ ?(Реквизиты.ЕстьОбъектыСтроительства, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаОбъектыСтроительства.СуммаВзаиморасчетов - ТаблицаОбъектыСтроительства.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ТаблицаОбъектыСтроительства.СуммаВзаиморасчетов
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаОбъектыСтроительства.СуммаРуб - ТаблицаОбъектыСтроительства.СуммаНДСРуб
	|			ИНАЧЕ ТаблицаОбъектыСтроительства.СуммаРуб
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаОбъектыСтроительства КАК ТаблицаОбъектыСтроительства", "")
	+ ?(Реквизиты.ЕстьОсновныеСредства, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаОсновныеСредства.СуммаВзаиморасчетов - ТаблицаОсновныеСредства.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ТаблицаОсновныеСредства.СуммаВзаиморасчетов
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &УчетАгентскогоНДС
	|				ТОГДА ТаблицаОсновныеСредства.СуммаРуб - ТаблицаОсновныеСредства.СуммаНДСРуб
	|			ИНАЧЕ ТаблицаОсновныеСредства.СуммаРуб
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаОсновныеСредства КАК ТаблицаОсновныеСредства", "") + ") КАК ТаблицаСуммВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	Реквизиты.НДСВключенВСтоимость,
	|	&УчетАгентскогоНДС КАК УчетАгентскогоНДС
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.ЭлектронныеУслуги
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ Реквизиты.РасчетыВУсловныхЕдиницах
	|	КОНЕЦ КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаСуммВзаиморасчетов.СуммаРуб КАК СуммаРуб,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаВзаиморасчетовПатент
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммВзаиморасчетов КАК ТаблицаСуммВзаиморасчетов
	|		ПО (ИСТИНА)"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если Реквизиты.СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		ПараметрыПроведения.Вставить("ТаблицаЗачетАвансов", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ТаблицаЗачетАвансов", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса
		+ "ВЫБРАТЬ
		|	ПоступлениеТоваровУслугЗачетАвансов.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
		|	Реквизиты.Контрагент,
		|	Реквизиты.ДоговорКонтрагента,
		|	ПоступлениеТоваровУслугЗачетАвансов.ДокументАванса,
		|	ПоступлениеТоваровУслугЗачетАвансов.СуммаЗачета
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ЗачетАвансов КАК ПоступлениеТоваровУслугЗачетАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ПоступлениеТоваровУслугЗачетАвансов.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
		
КонецФункции

Функция ТекстЗапросаЗачетАвансовКомиссияПоЗакупке(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ЕстьТовары
		И НЕ Реквизиты.ЕстьАгентскиеУслуги
		ИЛИ Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом 
		ИЛИ Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовКомиссияПоЗакупкеРеквизиты", Неопределено);
		Возврат "";
	Иначе
		НомераТаблиц.Вставить("ЗачетАвансовКомиссияПоЗакупкеРеквизиты", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
		|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАвансов,
		|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
		|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
		|	""Выбытие"" КАК НаправлениеДвижения,
		|	ЛОЖЬ КАК ЭтоВозврат,
		|	Реквизиты.НДСВключенВСтоимость
		|ИЗ
		|	Реквизиты КАК Реквизиты";
		Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
		
КонецФункции

Функция ТекстЗапросаПоступление(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	
	Если НЕ Реквизиты.ЕстьТовары
		ИЛИ Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом 
		ИЛИ Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		ПараметрыПроведения.Вставить("ТаблицаТовары", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ТаблицаТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	""Товары"" КАК ИмяСписка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаТовары.СуммаРуб КАК СуммаРуб,
		|	ТаблицаТовары.СуммаРуб КАК СуммаБУ,
		|	ТаблицаТовары.СуммаРуб КАК СуммаНУ,
		|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчетаЗабалансовый
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|	КОНЕЦ КАК КорСчет,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчетаЗабалансовый
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
		|	КОНЕЦ КАК ВидКорСубконто1,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчетаЗабалансовый
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
		|	КОНЕЦ КАК ВидКорСубконто2,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчетаЗабалансовый
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами)
		|	КОНЕЦ КАК ВидКорСубконто3,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчетаЗабалансовый
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Реквизиты.Контрагент
		|	КОНЕЦ КАК КорСубконто1,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчетаЗабалансовый
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Реквизиты.ДоговорКонтрагента
		|	КОНЕЦ КАК КорСубконто2,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчетаЗабалансовый
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Реквизиты.Ссылка
		|	КОНЕЦ КАК КорСубконто3,
		|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
		|	ТаблицаТовары.СпособУчетаНДС КАК СпособУчетаНДС,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.ЦенаВРознице КАК ЦенаВРознице,
		|	ТаблицаТовары.СуммаВРознице КАК СуммаВРознице,
		|	ТаблицаТовары.СтавкаНДСВРознице КАК СтавкаНДСВРознице
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ТаблицаТовары.КомиссияПоЗакупке
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("ТаблицаУслуги", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ТаблицаУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка,
		|	""Услуги"" КАК ИмяСписка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.Содержание,
		|	ТаблицаУслуги.СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаНДСВзаиморасчетов,
		|	ТаблицаУслуги.СуммаРуб КАК СуммаБУ,
		|	ТаблицаУслуги.СуммаРуб КАК СуммаНУ,
		|	ТаблицаУслуги.СуммаРуб,
		|	ТаблицаУслуги.СуммаНДСРуб,
		|	ТаблицаУслуги.СчетЗатрат,
		|	ТаблицаУслуги.СчетУчетаНДС,
		|	ТаблицаУслуги.СпособУчетаНДС,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ТаблицаУслуги.Субконто1,
		|	ТаблицаУслуги.Субконто2,
		|	ТаблицаУслуги.Субконто3,
		|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
		|	Реквизиты.Контрагент КАК КорСубконто1,
		|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
		|	Реквизиты.Ссылка КАК КорСубконто3,
		|	ТаблицаУслуги.СчетЗатратНУ,
		|	ТаблицаУслуги.СубконтоНУ1,
		|	ТаблицаУслуги.СубконтоНУ2,
		|	ТаблицаУслуги.СубконтоНУ3,
		|	ТаблицаУслуги.ПодразделениеЗатрат
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьОборудование Тогда
		ПараметрыПроведения.Вставить("ТаблицаОборудование", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ТаблицаОборудование", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	Оборудование.Ссылка,
		|	""Оборудование"" КАК ИмяСписка,
		|	Оборудование.НомерСтроки КАК НомерСтроки,
		|	Оборудование.Номенклатура,
		|	Оборудование.СуммаВзаиморасчетов,
		|	Оборудование.СуммаНДСВзаиморасчетов,
		|	Оборудование.СуммаРуб,
		|	Оборудование.СуммаРуб КАК СуммаБУ,
		|	Оборудование.СуммаРуб КАК СуммаНУ,
		|	Оборудование.СуммаНДСРуб,
		|	Оборудование.Количество,
		|	Оборудование.СчетУчета,
		|	Оборудование.СчетУчетаНДС,
		|	Оборудование.СпособУчетаНДС,
		|	Оборудование.СтавкаНДС
		|ИЗ
		|	ТаблицаОборудование КАК Оборудование
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьОбъектыСтроительства Тогда
		ПараметрыПроведения.Вставить("ТаблицаОбъектыСтроительства", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ТаблицаОбъектыСтроительства", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ОбъектыСтроительства.Ссылка,
		|	""ОбъектыСтроительства"" КАК ИмяСписка,
		|	ОбъектыСтроительства.НомерСтроки КАК НомерСтроки,
		|	ОбъектыСтроительства.ОбъектСтроительства,
		|	ОбъектыСтроительства.СтатьяЗатрат,
		|	ОбъектыСтроительства.СуммаВзаиморасчетов,
		|	ОбъектыСтроительства.СуммаНДСВзаиморасчетов,
		|	ОбъектыСтроительства.СуммаРуб,
		|	ОбъектыСтроительства.СуммаРуб КАК СуммаБУ,
		|	ОбъектыСтроительства.СуммаРуб КАК СуммаНУ,
		|	ОбъектыСтроительства.СуммаНДСРуб,
		|	ОбъектыСтроительства.СчетУчета,
		|	ОбъектыСтроительства.СчетУчетаНДС,
		|	ОбъектыСтроительства.СпособУчетаНДС,
		|	ОбъектыСтроительства.СтавкаНДС
		|ИЗ
		|	ТаблицаОбъектыСтроительства КАК ОбъектыСтроительства
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьОсновныеСредства Тогда
		ПараметрыПроведения.Вставить("ТаблицаОсновныеСредства", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ТаблицаОсновныеСредства", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ОсновныеСредства.Ссылка,
		|	""ОсновныеСредства"" КАК ИмяСписка,
		|	ОсновныеСредства.НомерСтроки КАК НомерСтроки,
		|	ОсновныеСредства.ОсновноеСредство,
		|	ОсновныеСредства.ИнвентарныйНомер,
		|	ОсновныеСредства.СуммаВзаиморасчетов,
		|	ОсновныеСредства.СуммаНДСВзаиморасчетов,
		|	ОсновныеСредства.СуммаРуб,
		|	ОсновныеСредства.СуммаРуб КАК СуммаБУ,
		|	ОсновныеСредства.СуммаРуб КАК СуммаНУ,
		|	ОсновныеСредства.СуммаНДСРуб,
		|	ОсновныеСредства.СчетУчета,
		|	ОсновныеСредства.СчетНачисленияАмортизации,
		|	ОсновныеСредства.СчетУчетаНДС,
		|	ОсновныеСредства.СпособУчетаНДС,
		|	ОсновныеСредства.СтавкаНДС,
		|	ОсновныеСредства.СрокПолезногоИспользования
		|ИЗ
		|	ТаблицаОсновныеСредства КАК ОсновныеСредства
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьТовары
		И НЕ Реквизиты.ЕстьАгентскиеУслуги
		ИЛИ Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом 
		ИЛИ Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		ПараметрыПроведения.Вставить("ТаблицаТоварыУслугиКомиссияПоЗакупке", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ТаблицаТоварыУслугиКомиссияПоЗакупке", НомераТаблиц.Количество());
		Если Реквизиты.ЕстьТовары Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	Товары.Ссылка,
			|	1 КАК НомерСписка,
			|	""Товары"" КАК ИмяСписка,
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.СчетУчета,
			|	Товары.Номенклатура,
			|	ЛОЖЬ КАК ЭтоУслуга,
			|	Товары.Количество,
			|	ВЫРАЗИТЬ(&СодержаниеПоступлениеТоваровКомитентов КАК СТРОКА(100)) КАК Содержание,
			|	Товары.СуммаВзаиморасчетов,
			|	Товары.СуммаНДСВзаиморасчетов,
			|	Товары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетовКомитент,
			|	Товары.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетовКомитент,
			|	Товары.СуммаРуб КАК СуммаБУ,
			|	Товары.СуммаРуб КАК СуммаНУ,
			|	Товары.СуммаРуб,
			|	Товары.СуммаНДСРуб,
			|	Товары.СчетРасчетов КАК СчетРасчетовКомитента,
			|	Товары.Контрагент КАК Комитент,
			|	Товары.ДоговорКонтрагента КАК ДоговорКомитента,
			|	Товары.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаРасчетовСКомитентом,
			|	Реквизиты.Ссылка КАК ДокументРасчетовКомитента,
			|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетовПоставщика,
			|	Реквизиты.Контрагент КАК Поставщик,
			|	Реквизиты.ДоговорКонтрагента КАК ДоговорПоставщика,
			|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетовПоставщика,
			|	Реквизиты.Ссылка КАК ДокументРасчетовПоставщика
			|ИЗ
			|	ТаблицаТовары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)
			|ГДЕ
			|	Товары.КомиссияПоЗакупке";
		КонецЕсли;
		Если Реквизиты.ЕстьТовары 
			И Реквизиты.ЕстьАгентскиеУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		Если Реквизиты.ЕстьАгентскиеУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	АгентскиеУслуги.Ссылка,
			|	2 КАК НомерСписка,
			|	""АгентскиеУслуги"" КАК ИмяСписка,
			|	АгентскиеУслуги.НомерСтроки КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
			|	АгентскиеУслуги.Номенклатура,
			|	ИСТИНА КАК ЭтоУслуга,
			|	АгентскиеУслуги.Количество,
			|	АгентскиеУслуги.Содержание,
			|	АгентскиеУслуги.СуммаВзаиморасчетов,
			|	АгентскиеУслуги.СуммаНДСВзаиморасчетов,
			|	АгентскиеУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетовКомитент,
			|	АгентскиеУслуги.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетовКомитент,
			|	АгентскиеУслуги.СуммаРуб КАК СуммаБУ,
			|	АгентскиеУслуги.СуммаРуб КАК СуммаНУ,
			|	АгентскиеУслуги.СуммаРуб,
			|	АгентскиеУслуги.СуммаНДСРуб,
			|	АгентскиеУслуги.СчетРасчетов КАК СчетРасчетовКомитента,
			|	АгентскиеУслуги.Контрагент КАК Комитент,
			|	АгентскиеУслуги.ДоговорКонтрагента КАК ДоговорКомитента,
			|	АгентскиеУслуги.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаРасчетовСКомитентом,
			|	Реквизиты.Ссылка КАК ДокументРасчетовКомитента,
			|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетовПоставщика,
			|	Реквизиты.Контрагент КАК Поставщик,
			|	Реквизиты.ДоговорКонтрагента КАК ДоговорПоставщика,
			|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетовПоставщика,
			|	Реквизиты.Ссылка КАК ДокументРасчетовПоставщика
			|ИЗ
			|	ТаблицаАгентскиеУслуги КАК АгентскиеУслуги
			|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСписка,
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоступлениеТоваровНаКомиссию(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары
		ИЛИ Реквизиты.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		ПараметрыПроведения.Вставить("ПоступлениеТоваровНаКомиссиюТаблицаТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПоступлениеТоваровНаКомиссиюТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СуммаРуб,
	|	ТаблицаТовары.СуммаНДСРуб,
	|	ТаблицаТовары.СуммаРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб КАК СуммаБезНДСРуб,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеТоваровВПереработку(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары
		ИЛИ Реквизиты.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		ПараметрыПроведения.Вставить("ПоступлениеТоваровВПереработкуТаблицаТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПоступлениеТоваровВПереработкуТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СуммаРуб,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеТоваровТорговаяНаценка(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары 
		ИЛИ НЕ Реквизиты.УчетПоПродажнойСтоимости 
		ИЛИ Реквизиты.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда
		ПараметрыПроведения.Вставить("ПоступлениеТоваровТорговаяНаценкаРеквизиты", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПоступлениеТоваровТорговаяНаценкаРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Склад,
	|	Реквизиты.ТипСклада,
	|	Реквизиты.ТипЦенРозничнойТорговли,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеТоваровГТД(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если (НЕ Реквизиты.ЕстьТовары И НЕ Реквизиты.ЕстьОборудование)
		ИЛИ Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
		ПараметрыПроведения.Вставить("НомераГТД", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("НомераГТД", НомераТаблиц.Количество());
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	1 КАК НомерСписка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.СчетУчета,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.СтранаПроисхождения,
		|	ТаблицаТовары.Количество
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ТаблицаТовары.СчетУчета В (&МассивСчетовДляГТД)";
	КонецЕсли;
	Если Реквизиты.ЕстьТовары
		И Реквизиты.ЕстьОборудование Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	КонецЕсли;
	Если Реквизиты.ЕстьОборудование Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	2 КАК НомерСписка,
		|	ТаблицаОборудование.НомерСтроки,
		|	ТаблицаОборудование.Номенклатура,
		|	ТаблицаОборудование.СчетУчета,
		|	ТаблицаОборудование.НомерГТД,
		|	ТаблицаОборудование.СтранаПроисхождения,
		|	ТаблицаОборудование.Количество
		|ИЗ
		|	ТаблицаОборудование КАК ТаблицаОборудование
		|ГДЕ
		|	ТаблицаОборудование.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ТаблицаОборудование.СчетУчета В (&МассивСчетовДляГТД)";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСписка,
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеТары(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТара Тогда
		ПараметрыПроведения.Вставить("ТаблицаТара", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТаблицаТара", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ВозвратнаяТара"" КАК ИмяСписка,
	|	ТаблицаТара.Ссылка,
	|	ТаблицаТара.НомерСтроки,
	|	ТаблицаТара.Номенклатура,
	|	ТаблицаТара.СуммаВзаиморасчетов,
	|	ТаблицаТара.СуммаРуб,
	|	ТаблицаТара.Количество,
	|	ТаблицаТара.СчетУчета
	|ИЗ
	|	ТаблицаТара КАК ТаблицаТара
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТара.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПрименяетсяУСНДоходыМинусРасходы Тогда
		ПараметрыПроведения.Вставить("УСНРеквизиты",       Неопределено);
		ПараметрыПроведения.Вставить("УСНТаблицаРасходов", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("УСНРеквизиты", НомераТаблиц.Количество());
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК Валюта,
	|	Реквизиты.УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК РасходыПредпринимателя
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	УчестьРасходыУСНУслуги = Реквизиты.ЕстьУслуги
		И Реквизиты.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом;
	УчестьРасходыУСНТовары = Реквизиты.ЕстьТовары
		И Реквизиты.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства
		И Реквизиты.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги
		И Реквизиты.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиЛизинга
		И Реквизиты.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку
		И Реквизиты.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
		И (НЕ Реквизиты.УчетПоПродажнойСтоимости 
			ИЛИ Реквизиты.ТипСклада <> Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка);
	УчестьРасходыУСНОсновныеСредства = Реквизиты.ЕстьОсновныеСредства;
	
	Если НЕ УчестьРасходыУСНТовары
		И НЕ УчестьРасходыУСНУслуги
		И НЕ УчестьРасходыУСНОсновныеСредства Тогда
		ПараметрыПроведения.Вставить("УСНТаблицаРасходов", Неопределено);
		Возврат ТекстЗапроса;
	Иначе
		НомераТаблиц.Вставить("УСНТаблицаРасходов", НомераТаблиц.Количество());
		Если УчестьРасходыУСНТовары Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура) КАК ВидРасхода,
			|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
			|	ТаблицаТовары.Номенклатура КАК ЭлементРасхода,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.СчетУчета В (&Счета10)
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ЭтоТовар,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.СчетУчета В (&Счета10)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ЭтоМатериал,
			|	ТаблицаТовары.СчетУчета КАК СчетУчета,
			|	ТаблицаТовары.Ссылка КАК Партия,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.СуммаВзаиморасчетов КАК Сумма,
			|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК НДС,
			|	ТаблицаТовары.ОтражениеВУСН КАК ОтражениеВУСН
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|ГДЕ
			|	НЕ ТаблицаТовары.КомиссияПоЗакупке";
		КонецЕсли;
		Если УчестьРасходыУСНТовары
			И УчестьРасходыУСНУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		Если УчестьРасходыУСНУслуги Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ТаблицаУслуги.СчетЗатрат В (&Счета97)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.РБП)
			|		КОГДА ТаблицаУслуги.СчетЗатрат В (&СчетаАО)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ЛизинговыеПлатежи)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
			|	КОНЕЦ КАК ВидРасхода,
			|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
			|	ВЫБОР
			|		КОГДА ТаблицаУслуги.СчетЗатрат В (&Счета97)
			|			ТОГДА ТаблицаУслуги.Субконто1
			|		ИНАЧЕ ТаблицаУслуги.Номенклатура
			|	КОНЕЦ КАК ЭлементРасхода,
			|	ЛОЖЬ КАК ЭтоТовар,
			|	ЛОЖЬ КАК ЭтоМатериал,
			|	ТаблицаУслуги.СчетЗатрат КАК СчетУчета,
			|	НЕОПРЕДЕЛЕНО КАК Партия,
			|	0 КАК Количество,
			|	ТаблицаУслуги.СуммаВзаиморасчетов КАК Сумма,
			|	ТаблицаУслуги.СуммаНДСВзаиморасчетов КАК НДС,
			|	ТаблицаУслуги.ОтражениеВУСН КАК ОтражениеВУСН
			|ИЗ
			|	ТаблицаУслуги КАК ТаблицаУслуги";
		КонецЕсли;
		Если (УчестьРасходыУСНТовары Или УчестьРасходыУСНУслуги)
			И УчестьРасходыУСНОсновныеСредства Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		Если УчестьРасходыУСНОсновныеСредства Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС) КАК ВидРасхода,
			|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
			|	ТаблицаОсновныеСредства.ОсновноеСредство КАК ЭлементРасхода,
			|	ЛОЖЬ КАК ЭтоТовар,
			|	ЛОЖЬ КАК ЭтоМатериал,
			|	ТаблицаОсновныеСредства.СчетУчета КАК СчетУчета,
			|	НЕОПРЕДЕЛЕНО КАК Партия,
			|	0 КАК Количество,
			|	ТаблицаОсновныеСредства.СуммаВзаиморасчетов КАК Сумма,
			|	ТаблицаОсновныеСредства.СуммаНДСВзаиморасчетов КАК НДС,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН
			|ИЗ
			|	ТаблицаОсновныеСредства КАК ТаблицаОсновныеСредства";
		КонецЕсли;
			
		Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПлательщикНДФЛ Тогда
		ПараметрыПроведения.Вставить("ИПРеквизиты",               Неопределено);
		ПараметрыПроведения.Вставить("ИПТаблицаТоваров",          Неопределено);
		ПараметрыПроведения.Вставить("ИПТаблицаУслуг",            Неопределено);
		ПараметрыПроведения.Вставить("ИПТаблицаОборудования",     Неопределено);
		ПараметрыПроведения.Вставить("ИПТаблицаОсновныеСредства", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ИПРеквизиты", НомераТаблиц.Количество());
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ПоступлениеТоваровУслуг"" КАК ТипПоступления,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ТипСклада КАК ТипСклада,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("ИПТаблицаТоваров", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ИПТаблицаТоваров", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.СуммаРуб КАК Сумма,
		|	ТаблицаТовары.СуммаНДСРуб КАК НДС,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		ИНАЧЕ ТаблицаТовары.Номенклатура.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК ВидРасходовНУ,
		|	ИСТИНА КАК ПринятиеКналоговомуУчету,
		|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Партия
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"		
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("ИПТаблицаУслуг", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ИПТаблицаУслуг", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""Услуги"" КАК ИмяСписка,
		|	&СинонимУслуги КАК СинонимСписка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ТаблицаУслуги.СуммаРуб КАК Сумма,
		|	ТаблицаУслуги.СуммаНДСРуб КАК НДС,
		|	ТаблицаУслуги.Количество КАК Количество,
		|	ТаблицаУслуги.СчетЗатрат КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		КОГДА ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ТаблицаУслуги.Субконто1
		|		КОГДА ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ТаблицаУслуги.Субконто2
		|		КОГДА ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ТаблицаУслуги.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА ТаблицаУслуги.Субконто1
		|		КОГДА ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА ТаблицаУслуги.Субконто2
		|		КОГДА ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА ТаблицаУслуги.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто2 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто3 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУ,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА ТаблицаУслуги.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА ТаблицаУслуги.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА ТаблицаУслуги.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Партия
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"		
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьОборудование Тогда
		ПараметрыПроведения.Вставить("ИПТаблицаОборудования", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ИПТаблицаОборудования", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""Оборудование"" КАК ИмяСписка,
		|	&СинонимОборудование КАК СинонимСписка,
		|	ТаблицаОборудование.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОборудование.Номенклатура КАК Номенклатура,
		|	ТаблицаОборудование.СуммаРуб КАК Сумма,
		|	ТаблицаОборудование.СуммаНДСРуб КАК НДС,
		|	ТаблицаОборудование.Количество КАК Количество,
		|	ТаблицаОборудование.СчетУчета КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		ИНАЧЕ ТаблицаОборудование.Номенклатура.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК ВидРасходовНУ,
		|	ИСТИНА КАК ПринятиеКналоговомуУчету,
		|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Партия
		|ИЗ
		|	ТаблицаОборудование КАК ТаблицаОборудование
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьОсновныеСредства Тогда
		ПараметрыПроведения.Вставить("ИПТаблицаОсновныеСредства", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ИПТаблицаОсновныеСредства", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""ОсновныеСредства"" КАК ИмяСписка,
		|	&СинонимОсновныеСредства КАК СинонимСписка,
		|	ТаблицаОсновныеСредства.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОсновныеСредства.ОсновноеСредство КАК Номенклатура,
		|	ТаблицаОсновныеСредства.СуммаРуб КАК Сумма,
		|	ТаблицаОсновныеСредства.СуммаНДСРуб КАК НДС,
		|	1 КАК Количество,
		|	ТаблицаОсновныеСредства.СчетУчета КАК СчетУчета,
		|	&ОсновнаяНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК ВидРасходовНУ,
		|	ИСТИНА КАК ПринятиеКналоговомуУчету,
		|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Партия
		|ИЗ
		|	ТаблицаОсновныеСредства КАК ТаблицаОсновныеСредства
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	// Вычет по электронным услугам иностранцев регистрируется особым образом.
	// Необходимую для вычета информацию регистрируем в журнале счетов-фактур.
	Если НЕ Реквизиты.ЭлектронныеУслуги Тогда
		ПараметрыПроведения.Вставить("РегистрацияВЖурналеУчетаСчетовФактур", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ИтогиДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрацияВЖурналеУчетаСчетовФактур", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СУММА(ИтогиДокумента.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ИтогиДокумента.СуммаНДСВзаиморасчетов) КАК СуммаНДСВзаиморасчетов
	|ПОМЕСТИТЬ ИтогиДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		0 КАК СуммаВзаиморасчетов,
	|		0 КАК СуммаНДСВзаиморасчетов"
	+ ?(Реквизиты.ЕстьУслуги, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаУслуги.СуммаВзаиморасчетов,
	|		ТаблицаУслуги.СуммаНДСВзаиморасчетов
	|	ИЗ
	|		ТаблицаУслуги КАК ТаблицаУслуги", "")
	+ ?(Реквизиты.ЕстьТовары, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТовары.СуммаВзаиморасчетов,
	|		ТаблицаТовары.СуммаНДСВзаиморасчетов
	|	ИЗ
	|		ТаблицаТовары КАК ТаблицаТовары", "") + ") КАК ИтогиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	"""" КАК КППКонтрагента,
	|	"""" КАК ИННКонтрагента,
	|	Реквизиты.Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	Реквизиты.Дата КАК ДатаВыставленияПолучения,
	|	1 КАК КодСпособаВыставленияПолучения,
	|	""45"" КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА Реквизиты.НомерВходящегоДокумента <> """"
	|			ТОГДА Реквизиты.НомерВходящегоДокумента
	|		КОГДА Реквизиты.НомерДоговора <> """"
	|			ТОГДА Реквизиты.НомерДоговора
	|		ИНАЧЕ Реквизиты.НаименованиеДоговора
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Реквизиты.ДатаВходящегоДокумента
	|		ИНАЧЕ Реквизиты.ДатаДоговора
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	ИтогиДокумента.СуммаВзаиморасчетов КАК СуммаПоСчетуФактуре,
	|	ИтогиДокумента.СуммаНДСВзаиморасчетов КАК СуммаНДС,
	|	НЕОПРЕДЕЛЕНО КАК НомерКорректировочногоСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаКорректировочногоСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК ПоСтавкеБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураНеВыставляется,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	0 КАК ИндексСтроки,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	НЕОПРЕДЕЛЕНО КАК Субкомиссионер,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйПокупателю,
	|	НЕОПРЕДЕЛЕНО КАК КодВидаСделки,
	|	НЕОПРЕДЕЛЕНО КАК Посредник,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактурыПродавца,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактурыПродавца,
	|	НЕОПРЕДЕЛЕНО КАК КодВидаОперацииКомиссия,
	|	НЕОПРЕДЕЛЕНО КАК Продавец,
	|	0 КАК СуммаПоСчетуФактуреКомиссия,
	|	0 КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0 КАК СуммаНДСРазницаУвеличение,
	|	0 КАК СуммаНДСРазницаУменьшение,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	"""" КАК КодВидаОперацииНаУменьшение,
	|	ЛОЖЬ КАК ИсправлениеСобственнойОшибки,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураПолученныйОтПродавца,
	|	ЛОЖЬ КАК Сторно,
	|	"""" КАК ИННПродавца,
	|	"""" КАК КПППродавца,
	|	"""" КАК ИННСубкомиссионера,
	|	"""" КАК КППСубкомиссионера
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиДокумента КАК ИтогиДокумента
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений, Реквизиты) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщееСодержание = " по вх.д. " + Реквизиты.НомерВходящегоДокумента 
		+ " от " + Формат(Реквизиты.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
		СодержанияПроводок = Новый Соответствие;
		Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
			СодержаниеПроводки = СодержанияПроводок[СтрокаТаблицы.СчетУчета];
			Если СодержаниеПроводки = Неопределено Тогда
				СодержаниеПроводки = "Поступление " 
					+ БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета) 
					+ ОбщееСодержание;
				СодержанияПроводок.Вставить(СтрокаТаблицы.СчетУчета, СодержаниеПроводки);
			КонецЕсли;
			СтрокаТаблицы.Содержание = СодержаниеПроводки;
		КонецЦикла;
	Иначе	
		Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
			СтрокаТаблицы.Содержание = СтрокаТаблицы.Содержание + ОбщееСодержание;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицыНДС(ТаблицыДокумента) Экспорт
	
	Товары = Неопределено;
	Услуги = Неопределено;
	
	Для каждого СтрокаТаблицыДокумента Из ТаблицыДокумента Цикл
		
		Если СтрокаТаблицыДокумента.Значение = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаТаблицыДокумента.Ключ = "ТаблицаТоварыУслугиКомиссияПоЗакупке" Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТаблицыДокумента.Ключ = "ТаблицаУслуги" Тогда
			
			Услуги = СтрокаТаблицыДокумента.Значение.Скопировать();
			Услуги.Колонки.Добавить("СтатьяЗатрат", Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));
			Для каждого СтрокаУслуги Из Услуги Цикл
				Если ТипЗнч(СтрокаУслуги.Субконто1) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
					СтрокаУслуги.СтатьяЗатрат = СтрокаУслуги.Субконто1;
				ИначеЕсли ТипЗнч(СтрокаУслуги.Субконто2) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
					СтрокаУслуги.СтатьяЗатрат = СтрокаУслуги.Субконто2;
				ИначеЕсли ТипЗнч(СтрокаУслуги.Субконто3) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
					СтрокаУслуги.СтатьяЗатрат = СтрокаУслуги.Субконто3;
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			Если Товары = Неопределено Тогда
				Товары = СтрокаТаблицыДокумента.Значение.Скопировать();
				Если СтрокаТаблицыДокумента.Ключ = "ТаблицаОбъектыСтроительства" Тогда
					Товары.Колонки.Добавить("Номенклатура");
					Товары.ЗагрузитьКолонку(Товары.ВыгрузитьКолонку("ОбъектСтроительства"), "Номенклатура");
					Товары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
				ИначеЕсли СтрокаТаблицыДокумента.Ключ = "ТаблицаОсновныеСредства" Тогда
					Товары.Колонки.Добавить("Номенклатура");
					Товары.ЗагрузитьКолонку(Товары.ВыгрузитьКолонку("ОсновноеСредство"), "Номенклатура");
					Товары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
				КонецЕсли;
			Иначе
				Для каждого СтрокаДокумента Из СтрокаТаблицыДокумента.Значение Цикл
					НоваяСтрока = Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДокумента);
					Если СтрокаТаблицыДокумента.Ключ = "ТаблицаОбъектыСтроительства" Тогда
						НоваяСтрока.Номенклатура = СтрокаДокумента.ОбъектСтроительства;
					ИначеЕсли СтрокаТаблицыДокумента.Ключ = "ТаблицаОсновныеСредства" Тогда
						НоваяСтрока.Номенклатура = СтрокаДокумента.ОсновноеСредство;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Новый Структура("Товары,Услуги", Товары, Услуги);
		
КонецФункции	

Функция ПодготовитьТаблицуТоварыУслугиКомиссияПоЗакупке(ИсходнаяТаблица, ТаблицаПараметры, Реквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ИсходнаяТаблица) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Реквизиты) Тогда 
		Возврат ИсходнаяТаблица;
	КонецЕсли;
	
	ИсключатьНДСИзВзаиморасчетов = Реквизиты[0].УчетАгентскогоНДС
		И Реквизиты[0].ВидАгентскогоДоговора = Перечисления.ВидыАгентскихДоговоров.Нерезидент;
	МассивВалютРасчетовСКомитентами = ИсходнаяТаблица.ВыгрузитьКолонку("ВалютаРасчетовСКомитентом");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ТаблицаПараметры[0].Период); 
	Запрос.УстановитьПараметр("МассивВалют", МассивВалютРасчетовСКомитентами);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта В (&МассивВалют)) КАК КурсыВалютСрезПоследних";
	
	ВыборкаВалют = Запрос.Выполнить().Выбрать();
	
	ТаблицаРезультат = ИсходнаяТаблица.Скопировать();
	Для каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
		
		Если ИсключатьНДСИзВзаиморасчетов Тогда
			СтрокаТаблицы.СуммаНДСРуб = 0;
			СтрокаТаблицы.СуммаНДСВзаиморасчетов = 0;
			СтрокаТаблицы.СуммаВзаиморасчетовКомитент = 
				СтрокаТаблицы.СуммаВзаиморасчетовКомитент - СтрокаТаблицы.СуммаНДСВзаиморасчетовКомитент;
			СтрокаТаблицы.СуммаНДСВзаиморасчетовКомитент = 0;
		КонецЕсли;
		
		Если НЕ ТаблицаПараметры[0].НДСВключенВСтоимость Тогда
			
			СтрокаТаблицы.СуммаБУ = СтрокаТаблицы.СуммаБУ + СтрокаТаблицы.СуммаНДСРуб;
			СтрокаТаблицы.СуммаНУ = СтрокаТаблицы.СуммаНУ + СтрокаТаблицы.СуммаНДСРуб;
			СтрокаТаблицы.СуммаВзаиморасчетов = СтрокаТаблицы.СуммаВзаиморасчетов + СтрокаТаблицы.СуммаНДСВзаиморасчетов;
				
		КонецЕсли;
		
		// Если валюты расчетов не совпадают, то необходимо пересчитать сумму взаиморасчетов комитента по курсу.
		Если СтрокаТаблицы.ВалютаРасчетовСКомитентом <> СтрокаТаблицы.ВалютаВзаиморасчетовПоставщика Тогда
			ВыборкаВалют.Сбросить();
			Если ВыборкаВалют.НайтиСледующий(СтрокаТаблицы.ВалютаРасчетовСКомитентом, "Валюта") Тогда
				
				Если НЕ ВыборкаВалют.Курс = 0 Тогда
					СтрокаТаблицы.СуммаВзаиморасчетовКомитент = Окр(СтрокаТаблицы.СуммаБУ*ВыборкаВалют.Кратность/ВыборкаВалют.Курс,2);
					СтрокаТаблицы.СуммаНДСВзаиморасчетовКомитент = Окр(СтрокаТаблицы.СуммаНДСРуб*ВыборкаВалют.Кратность/ВыборкаВалют.Курс,2); 
				Иначе
					СтрокаТаблицы.СуммаВзаиморасчетовКомитент = 0;
					СтрокаТаблицы.СуммаНДСВзаиморасчетовКомитент = 0;
				КонецЕсли;
				
			Иначе
				СтрокаТаблицы.СуммаВзаиморасчетовКомитент = 0;
				СтрокаТаблицы.СуммаНДСВзаиморасчетовКомитент = 0;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаРезультат;

КонецФункции 

Функция ПодготовитьТаблицуЗачетАвансовКомиссияПоЗакупке(ТаблицаТоварыУслугиКомиссияПоЗакупке) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаТоварыУслугиКомиссияПоЗакупке) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Комитент КАК Контрагент,
	|	ТаблицаДанных.ДоговорКомитента КАК ДоговорКонтрагента,
	|	ТаблицаДанных.ДокументРасчетовКомитента КАК ДокументРасчетов,
	|	ТаблицаДанных.СчетРасчетовКомитента КАК СчетРасчетов,
	|	ТаблицаДанных.СчетРасчетовКомитента КАК СчетАвансов,
	|	ТаблицаДанных.СуммаВзаиморасчетовКомитент КАК СуммаВзаиморасчетов,
	|	ТаблицаДанных.СуммаБУ КАК СуммаРуб
	|ПОМЕСТИТЬ ТаблицаДанных
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанных.Контрагент КАК Контрагент,
	|	ТаблицаДанных.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку) КАК ВидДоговора,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ НЕ ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	ТаблицаДанных.ДокументРасчетов КАК ДокументРасчетов,
	|	ТаблицаДанных.СчетРасчетов КАК СчетРасчетов,
	|	ТаблицаДанных.СчетАвансов КАК СчетАвансов,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДокументРасчетов КАК Документ.ПоступлениеТоваровУслуг).ПодразделениеОрганизации КАК Подразделение,
	|	СУММА(ТаблицаДанных.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаДанных.СуммаРуб) КАК СуммаРуб,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаВзаиморасчетовПатент
	|ИЗ
	|	ТаблицаДанных КАК ТаблицаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.Контрагент,
	|	ТаблицаДанных.ДоговорКонтрагента,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).УчетАгентскогоНДС,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ НЕ ВЫРАЗИТЬ(ТаблицаДанных.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах
	|	КОНЕЦ,
	|	ТаблицаДанных.ДокументРасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДанных.ДокументРасчетов КАК Документ.ПоступлениеТоваровУслуг).ПодразделениеОрганизации,
	|	ТаблицаДанных.СчетРасчетов,
	|	ТаблицаДанных.СчетАвансов";
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("ТаблицаДанных",   ТаблицаТоварыУслугиКомиссияПоЗакупке);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ИспользуетсяОтложенноеПроведение
		ИЛИ Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку
		ИЛИ Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары Тогда
		// Если в табличной части Товары введены только товары, учитываемые на забалансовых счетах,
		// то такой документ не двигает взаиморасчеты с контрагентами, его не надо актуализировать.
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ВидДоговора КАК ВидДоговора,
		|	Реквизиты.Дата КАК Дата
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(НЕ ТаблицаТовары.СчетУчетаЗабалансовый
		|			ИЛИ ТаблицаТовары.КомиссияПоЗакупке)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТовары.Контрагент,
		|	ТаблицаТовары.ДоговорКонтрагента,
		|	ТаблицаТовары.ДоговорКонтрагента.ВалютаВзаиморасчетов,
		|	ТаблицаТовары.ДоговорКонтрагента.ВидДоговора,
		|	Реквизиты.Дата
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаТовары.КомиссияПоЗакупке";
	КонецЕсли;
	
	Если Реквизиты.ЕстьТара 
		ИЛИ Реквизиты.ЕстьОборудование
		ИЛИ Реквизиты.ЕстьОбъектыСтроительства
		ИЛИ Реквизиты.ЕстьУслуги
		ИЛИ Реквизиты.ЕстьАгентскиеУслуги
		ИЛИ Реквизиты.ЕстьОсновныеСредства Тогда
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ВидДоговора КАК ВидДоговора,
		|	Реквизиты.Дата КАК Дата
		|ИЗ
		|	Реквизиты";
	КонецЕсли;
	
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда

		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
	
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаАгентскиеУслуги.Контрагент,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
		|	Реквизиты.Дата
		|ИЗ
		|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	Иначе
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ИспользуетсяОтложенноеПроведение
		ИЛИ Реквизиты.ЭтоОтложенноеПроведение Тогда
	    ПараметрыПроведения.Вставить("РеквизитыРегистрацияВПоследовательности", Неопределено);
		ПараметрыПроведения.Вставить("ТоварыРегистрацияВПоследовательности", Неопределено);
		ПараметрыПроведения.Вставить("УслугиРегистрацияВПоследовательности", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыРегистрацияВПоследовательности", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.ВидОперации,
	|	Реквизиты.Организация,
	|	Реквизиты.Дата КАК Период
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Если Реквизиты.ЕстьОборудование ИЛИ Реквизиты.ЕстьТовары Тогда

		ТекстЗапросаТовары = "";
		НомераТаблиц.Вставить("ТоварыРегистрацияВПоследовательности", НомераТаблиц.Количество());

		Если Реквизиты.ЕстьОборудование Тогда

			ТекстЗапросаТовары = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Оборудование.СчетУчета КАК СчетУчета,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчетСписания
			|ИЗ
			|	ТаблицаОборудование КАК Оборудование";
		
		КонецЕсли;

		Если Реквизиты.ЕстьТовары Тогда
	
			Если НЕ ПустаяСтрока(ТекстЗапросаТовары) Тогда
				ТекстЗапросаТовары = ТекстЗапросаТовары +
				"
				|ОБЪЕДИНИТЬ ВСЕ
				|";
			КонецЕсли;

			ТекстЗапросаТовары = ТекстЗапросаТовары +
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТаблицаТовары.СчетУчета КАК СчетУчета,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчетСписания
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары";
		
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса 
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() 
			+ ТекстЗапросаТовары;
		
	Иначе
		ПараметрыПроведения.Вставить("ТоварыРегистрацияВПоследовательности", Неопределено);
	КонецЕсли;
	
	Если Реквизиты.ЕстьУслуги Тогда
		НомераТаблиц.Вставить("УслугиРегистрацияВПоследовательности", НомераТаблиц.Количество());
	
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаУслуги.СчетЗатрат
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги";
	Иначе
		ПараметрыПроведения.Вставить("УслугиРегистрацияВПоследовательности", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ЗарегистрироватьОтложенныеРасчетыВПоследовательности(Объект, ПараметрыПроведения, Отказ) Экспорт

	ВключенВПоследовательность = РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		Объект,
		Отказ,
		ПараметрыПроведения.РасчетыСКонтрагентамиОтложенноеПроведение,
		ПараметрыПроведения.ТоварыРегистрацияВПоследовательности,
		Перечисления.ВидыРегламентныхОпераций.ПустаяСсылка());

	Если ВключенВПоследовательность Тогда
		// Документ включен в последовательность, больше с ним не требуется ничего делать.
		Возврат;
	КонецЕсли;

	// Ниже проверяем особые виды операций.
	// Для остальных видов операций действует общая логика регистрации как и в других документах.

	ОбязательноРегистрироватьВПоследовательности = Ложь;

	Параметры = ПодготовитьПараметрыЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ПараметрыПроведения.РеквизитыРегистрацияВПоследовательности,
		ПараметрыПроведения.УслугиРегистрацияВПоследовательности);
		
	ТаблицаУслуги = Параметры.ТаблицаУслуги;
		
	Реквизиты = Параметры.Реквизиты[0];

	Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства Тогда
		// Поступление объектов строительства региструем в последовательности всегда.
		ОбязательноРегистрироватьВПоследовательности = Истина;
	КонецЕсли;

	// Регистрация в последовательности.
	Если ОбязательноРегистрироватьВПоследовательности Тогда
		РаботаСПоследовательностями.ЗарегистрироватьВПоследовательности(Объект, Отказ, Ложь);

	ИначеЕсли Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства Тогда
		// При поступлении ОС помечаем как неактуальную рег.операцию по начислению амортизации.
		РаботаСПоследовательностями.ЗарегистрироватьУстареваниеОперации(Объект, Перечисления.ВидыРегламентныхОпераций.АмортизацияИИзносОС);

	Иначе
	
		// Если документ регистрирует поступление услуг и при этом не был включен в последовательность,
		// то сбросим актуальность для тех рег.операций, которые зависят от соответствующих счетов.
		РаботаСПоследовательностями.ЗарегистрироватьУстареваниеРегламентныхОперацийПриПоступленииЗатрат(
			Объект, ТаблицаУслуги.ВыгрузитьКолонку("СчетЗатрат"));	
			
	КонецЕсли;
		
КонецПроцедуры

Функция ПодготовитьПараметрыЗарегистрироватьОтложенныеРасчетыВПоследовательности(ТаблицаРеквизиты, ТаблицаУслуги)

	Параметры = Новый Структура;
	
	// Реквизиты
	СписокОбязательныхКолонок = ""
	+ "ВидОперации,"                  // <Перечисление.ВидыОперацийПоступлениеТоваровУслуг> - Вид операции документа.
	+ "Организация,"                  // <Справочник.Организации> - Организация документа.
	+ "Период"                  	  // <Дата> - Дата документа.
	;

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	// Услуги
	СписокОбязательныхКолонок = ""
	+ "СчетЗатрат"                    // <ПланСчетовСсылка.Хозрасчетный> - Счет учета поступивших услуг.
	;

	Параметры.Вставить("ТаблицаУслуги",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаУслуги, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Процедура ОбработкаОтложенногоПроведения(Параметры, Отказ) Экспорт
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведения(
		Параметры.Регистратор,
		Отказ,
		Параметры.ДоговорКонтрагента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	

	ТаблицаВзаиморасчетов = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ТаблицаЗачетАвансов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияЗачетАвансов(
		Параметры,
		ТаблицаВзаиморасчетов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Приходный ордер (М-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'Приходный ордер (М-4)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары";
	КомандаПечати.Порядок       = 10;
	
	// Акт о приеме-передаче ОС (ОС-1)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОС1";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приеме-передаче ОС (ОС-1)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаОсновныеСредства";
	КомандаПечати.Порядок       = 20;
	КомандаПечати.ФункциональныеОпции = "ВедетсяУчетОсновныхСредств";
	
	// Акт о приеме оборудования (ОС-14)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОС14";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приеме оборудования (ОС-14)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";
	КомандаПечати.Порядок       = 20;
	КомандаПечати.ФункциональныеОпции = "ВедетсяУчетОсновныхСредств";
	
	// Акт о приемке товара без счета поставщика (ТОРГ-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ4";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приемке товара без счета поставщика (ТОРГ-4)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары";
	КомандаПечати.Порядок       = 30;
	
	// Приходная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Приходная накладная'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары";
	КомандаПечати.Порядок       = 40;
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	КомандаПечати.Порядок       = 50;
	
	// Товарная накладная (ТОРГ-12) за поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12_БезУслуг";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12) за поставщика'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары";
	КомандаПечати.Порядок       = 60;
	
	// Товарная накладная (ТОРГ-12) с услугами за поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12) с услугами за поставщика'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";
	КомандаПечати.Порядок       = 70;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг за поставщика'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаУслуги";
	КомандаПечати.Порядок       = 80;
	
	// Счет-фактура от поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураПолученный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактурПолученных";
	КомандаПечати.Порядок       = 90;
	
	// Универсальный передаточный документ за поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД) за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","УниверсальныйПередаточныйДокументКомплект");
	КомандаПечати.Порядок = 100;
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.Контрагенты) Тогда
		// Печать конвертов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Конверт";
		КомандаПечати.Представление = НСтр("ru = 'Конверт'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиКонверта";
		КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,ФормаДокументаУслуги,ФормаДокументаУслугиЛизинга";
		КомандаПечати.Порядок       = 110;
	КонецЕсли;
	
	Если ПравоДоступа("Использование", Метаданные.Обработки.ПечатьЭтикеток) Тогда
		// Этикетки
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ЭтикеткиОбщая";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Этикетки'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиЭтикеток";
		КомандаПечати.СписокФорм    = "ФормаДокументаОбщая";
		КомандаПечати.Порядок       = 120;
		
		УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия);
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ЭтикеткиТовары";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Этикетки'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиЭтикеток";
		КомандаПечати.СписокФорм    = "ФормаДокументаТовары";
		КомандаПечати.Порядок       = 120;
	КонецЕсли;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Поступление (акт, накладная)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 130;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", 
			"Приходная накладная", ПечатьПоступлениеТоваров(МассивОбъектов, ОбъектыПечати),,
			"Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Накладная");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		ВключатьУслуги = Истина;
		ТаблицаСведенийТОРГ12 = ПолучитьТаблицуСведенийТОРГ12Покупатель(МассивОбъектов, ВключатьУслуги);
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаПоступления_ТОРГ12");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12", "ТОРГ-12 (Товарная накладная за поставщика с услугами)",
			ПечатьТорговыхДокументов.ПечатьТОРГ12(ТаблицаСведенийТОРГ12, ОбъектыПечати, ПараметрыПечати),,"ОбщийМакет.ПФ_MXL_ТОРГ12");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12_БезУслуг") Тогда
		ВключатьУслуги = Ложь;
		ТаблицаСведенийТОРГ12 = ПолучитьТаблицуСведенийТОРГ12Покупатель(МассивОбъектов, ВключатьУслуги);
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаПоступления_ТОРГ12");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12_БезУслуг", "ТОРГ-12 (Товарная накладная за поставщика)",
			ПечатьТорговыхДокументов.ПечатьТОРГ12(ТаблицаСведенийТОРГ12, ОбъектыПечати, ПараметрыПечати),,"ОбщийМакет.ПФ_MXL_ТОРГ12");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ4", 
			"ТОРГ-4 (Акт о приемке товара без счета поставщика)", ПечатьТОРГ4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"ОбщийМакет.ПФ_MXL_ТОРГ4");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М4",
			"М-4 (Приходный ордер)", ПечатьМ4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"ОбщийМакет.ПФ_MXL_М4");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОС1",
			"Акт о приеме-передаче объекта ОС (ОС-1)", ПечатьОС1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"ОбщийМакет.ПФ_MXL_ОС1");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС14") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОС14",
			"ОС-14 (Акт о приеме оборудования)", ПечатьОС14(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"Документ.ПоступлениеТоваровУслуг.ПФ_MXL_ОС14");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов);
		ПараметрыПечати.Вставить("ВидДокументаПечати", "ПоступлениеТоваровУслуг");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати", "Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Акт об оказании услуг за поставщика", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Акт");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПоступление") Тогда
		МассивДокументов = Новый Массив;
		Для каждого Документ Из МассивОбъектов Цикл
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
				И Документ.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги Тогда
				МассивДокументов.Добавить(Документ);
			КонецЕсли;
		КонецЦикла;
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивДокументов);
		ПараметрыПечати.Вставить("ВидДокументаПечати", "ПоступлениеТоваровУслуг");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати", "Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктПоступление", "Акт (поступление)", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Акт");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяПоступление") Тогда
		ВключатьУслуги = Истина;
		МассивДокументов = Новый Массив;
		Для каждого Документ Из МассивОбъектов Цикл
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
				И Документ.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги Тогда
				МассивДокументов.Добавить(Документ);
			КонецЕсли;
		КонецЦикла;
		ТаблицаСведенийТОРГ12 = ПолучитьТаблицуСведенийТОРГ12Покупатель(МассивДокументов, ВключатьУслуги);
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаПоступления_ТОРГ12");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяПоступление", "Накладная (поступление)",
			ПечатьТорговыхДокументов.ПечатьТОРГ12(ТаблицаСведенийТОРГ12, ОбъектыПечати, ПараметрыПечати),,"ОбщийМакет.ПФ_MXL_ТОРГ12");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УниверсальныйПередаточныйДокументКомплект") Тогда
		ИменаФайлов = Неопределено;
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "УниверсальныйПередаточныйДокумент", "УПД",
			УчетНДС.ПечатьКомплектаУПД(КоллекцияПечатныхФорм, МассивОбъектов, ОбъектыПечати, ИменаФайлов, ПараметрыПечати),,, ИменаФайлов);
	КонецЕсли;

	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

#Область ПечатьУПД

// Определяет какие из переданных документов, на основании которых формируется печатная форма
// универсального передаточного документа на печать, можно распечатать без выписки счета-фактуры.
// В конфигурации не поддерживается печать универсального передаточного документа в статусе "2" 
// (только первичный документ), если в документе выделена сумма НДС и сумма налога не относится
// к посреднической деятельности.
//
// Параметры:
//   МассивДокументов - Массив - массив документов, по которым формируется печатная форма.
//
// Возвращаемое значение:
//   ДокументыСчетФактураНеТребуются - Массив - документы, для печати которых не требуется выписка счета-фактуры.
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)
	|	И ПоступлениеТоваровУслуг.СуммаНДС > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)
	|	И ПоступлениеТоваровУслуг.СуммаНДС > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)
	|	И ПоступлениеТоваровУслуг.СуммаНДС > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Дата КАК Дата,
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ПоступлениеТоваровУслуг.Ссылка)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	// Поступление товаров/услуг от комитента
	ВыборкаКомиссия = Результат[1].Выбрать();
	Пока ВыборкаКомиссия.Следующий() Цикл
		ДокументыСчетФактураНеТребуются.Добавить(ВыборкаКомиссия.Ссылка);
	КонецЦикла;
	
	// Обычные поступления
	ВыборкаРеализация = Результат[2].Выбрать();
	Пока ВыборкаРеализация.Следующий() Цикл
		Если НЕ ВыборкаРеализация.ЕстьНДС Тогда
			ДокументыСчетФактураНеТребуются.Добавить(ВыборкаРеализация.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращает текст запроса для формирования печатной формы универсального передаточного документа
// Параметры:
//   ИспользуетсяПостановлениеНДС981 - Булево - признак применения постановления Правительства РФ №981
//
// Возвращаемое значение:
//   ТекстЗапроса - Строка - текст запроса для формирования печатной формы универсального передаточного документа.
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ИспользуетсяПостановлениеНДС981 = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка) КАК СчетФактура,
	|	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента КАК Дата,
	|	ПоступлениеТоваровУслуг.НомерВходящегоДокумента КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	"""" КАК Руководитель,
	|	"""" КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ПоступлениеТоваровУслуг.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате";
	
	Если ИспользуетсяПостановлениеНДС981 = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате", "ИСТИНА");
	ИначеЕсли ИспользуетсяПостановлениеНДС981 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ПоступлениеТоваровУслуг.Дата >= ДАТАВРЕМЯ(2017,10,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ПоступлениеТоваровУслуг.Дата < ДАТАВРЕМЯ(2017,10,1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыПоступлениеТоваров()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗапросПоОборудованию.Ссылка.Номер КАК Номер,
	|	ЗапросПоОборудованию.Ссылка КАК Ссылка,
	|	ЗапросПоОборудованию.Ссылка.Дата КАК Дата,
	|	ЗапросПоОборудованию.Ссылка.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ЗапросПоОборудованию.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЗапросПоОборудованию.Ссылка.Контрагент КАК Контрагент,
	|	ЗапросПоОборудованию.Ссылка.Контрагент КАК Поставщик,
	|	ЗапросПоОборудованию.Ссылка.Организация КАК Организация,
	|	ЗапросПоОборудованию.Ссылка.Организация КАК Покупатель,
	|	ЗапросПоОборудованию.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ЗапросПоОборудованию.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ЗапросПоОборудованию.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗапросПоОборудованию.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЗапросПоОборудованию.Номенклатура,
	|	ЗапросПоОборудованию.Номенклатура.НаименованиеПолное КАК Товар,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ЗапросПоОборудованию.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ЗапросПоОборудованию.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК КодАртикул,
	|	ЗапросПоОборудованию.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаХранения,
	|	ЗапросПоОборудованию.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ЗапросПоОборудованию.Количество КАК КоличествоМест,
	|	ЗапросПоОборудованию.Количество КАК Количество,
	|	ЗапросПоОборудованию.Коэффициент,
	|	ЗапросПоОборудованию.Цена,
	|	ЗапросПоОборудованию.Сумма,
	|	ЗапросПоОборудованию.СуммаНДС,
	|	ЗапросПоОборудованию.СтавкаНДС,
	|	ЗапросПоОборудованию.НомерСтроки,
	|	1 КАК ID
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ЗапросПоОборудованию
	|ГДЕ
	|	ЗапросПоОборудованию.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоОбъектамСтройки.Ссылка.Номер,
	|	ЗапросПоОбъектамСтройки.Ссылка,
	|	ЗапросПоОбъектамСтройки.Ссылка.Дата,
	|	ЗапросПоОбъектамСтройки.Ссылка.ДатаВходящегоДокумента,
	|	ЗапросПоОбъектамСтройки.Ссылка.ДоговорКонтрагента,
	|	ЗапросПоОбъектамСтройки.Ссылка.Контрагент,
	|	ЗапросПоОбъектамСтройки.Ссылка.Контрагент,
	|	ЗапросПоОбъектамСтройки.Ссылка.Организация,
	|	ЗапросПоОбъектамСтройки.Ссылка.Организация,
	|	ЗапросПоОбъектамСтройки.Ссылка.ПодразделениеОрганизации,
	|	ЗапросПоОбъектамСтройки.Ссылка.СуммаДокумента,
	|	ЗапросПоОбъектамСтройки.Ссылка.ВалютаДокумента,
	|	ЗапросПоОбъектамСтройки.Ссылка.СуммаВключаетНДС,
	|	ЗапросПоОбъектамСтройки.ОбъектСтроительства,
	|	ЗапросПоОбъектамСтройки.ОбъектСтроительства.Наименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|		ИНАЧЕ ЗапросПоОбъектамСтройки.ОбъектСтроительства.Код
	|	КОНЕЦ,
	|	""шт."",
	|	""шт."",
	|	1,
	|	1,
	|	1,
	|	ЗапросПоОбъектамСтройки.Сумма,
	|	ЗапросПоОбъектамСтройки.Сумма,
	|	ЗапросПоОбъектамСтройки.СуммаНДС,
	|	ЗапросПоОбъектамСтройки.СтавкаНДС,
	|	ЗапросПоОбъектамСтройки.НомерСтроки,
	|	2
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ЗапросПоОбъектамСтройки
	|ГДЕ
	|	ЗапросПоОбъектамСтройки.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоТоварам.Ссылка.Номер,
	|	ЗапросПоТоварам.Ссылка,
	|	ЗапросПоТоварам.Ссылка.Дата,
	|	ЗапросПоТоварам.Ссылка.ДатаВходящегоДокумента,
	|	ЗапросПоТоварам.Ссылка.ДоговорКонтрагента,
	|	ЗапросПоТоварам.Ссылка.Контрагент,
	|	ЗапросПоТоварам.Ссылка.Контрагент,
	|	ЗапросПоТоварам.Ссылка.Организация,
	|	ЗапросПоТоварам.Ссылка.Организация,
	|	ЗапросПоТоварам.Ссылка.ПодразделениеОрганизации,
	|	ЗапросПоТоварам.Ссылка.СуммаДокумента,
	|	ЗапросПоТоварам.Ссылка.ВалютаДокумента,
	|	ЗапросПоТоварам.Ссылка.СуммаВключаетНДС,
	|	ЗапросПоТоварам.Номенклатура,
	|	ЗапросПоТоварам.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ЗапросПоТоварам.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ЗапросПоТоварам.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ЗапросПоТоварам.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ЗапросПоТоварам.ЕдиницаИзмерения.Представление,
	|	ЗапросПоТоварам.КоличествоМест,
	|	ЗапросПоТоварам.Количество,
	|	ЗапросПоТоварам.Коэффициент,
	|	ЗапросПоТоварам.Цена,
	|	ЗапросПоТоварам.Сумма,
	|	ЗапросПоТоварам.СуммаНДС,
	|	ЗапросПоТоварам.СтавкаНДС,
	|	ЗапросПоТоварам.НомерСтроки,
	|	3
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|		СУММА(ПоступлениеТоваровУслуг.КоличествоМест) КАК КоличествоМест,
	|		СУММА(ПоступлениеТоваровУслуг.Количество) КАК Количество,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.Коэффициент КАК Коэффициент,
	|		ПоступлениеТоваровУслуг.Цена КАК Цена,
	|		СУММА(ПоступлениеТоваровУслуг.Сумма) КАК Сумма,
	|		СУММА(ПоступлениеТоваровУслуг.СуммаНДС) КАК СуммаНДС,
	|		ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|		МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслуг.Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.Коэффициент) КАК ЗапросПоТоварам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоУслугам.Ссылка.Номер,
	|	ЗапросПоУслугам.Ссылка,
	|	ЗапросПоУслугам.Ссылка.Дата,
	|	ЗапросПоУслугам.Ссылка.ДатаВходящегоДокумента,
	|	ЗапросПоУслугам.Ссылка.ДоговорКонтрагента,
	|	ЗапросПоУслугам.Ссылка.Контрагент,
	|	ЗапросПоУслугам.Ссылка.Контрагент,
	|	ЗапросПоУслугам.Ссылка.Организация,
	|	ЗапросПоУслугам.Ссылка.Организация,
	|	ЗапросПоУслугам.Ссылка.ПодразделениеОрганизации,
	|	ЗапросПоУслугам.Ссылка.СуммаДокумента,
	|	ЗапросПоУслугам.Ссылка.ВалютаДокумента,
	|	ЗапросПоУслугам.Ссылка.СуммаВключаетНДС,
	|	ВЫБОР
	|		КОГДА НЕ ЗапросПоУслугам.Содержание ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Содержание
	|		КОГДА НЕ ЗапросПоУслугам.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ЗапросПоУслугам.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ЗапросПоУслугам.Содержание ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Содержание
	|		КОГДА НЕ ЗапросПоУслугам.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ЗапросПоУслугам.Номенклатура.Наименование
	|	КОНЕЦ,
	|	NULL,
	|	ЗапросПоУслугам.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	NULL,
	|	NULL,
	|	ЗапросПоУслугам.Количество,
	|	1,
	|	ЗапросПоУслугам.Цена,
	|	ЗапросПоУслугам.Сумма,
	|	ЗапросПоУслугам.СуммаНДС,
	|	ЗапросПоУслугам.СтавкаНДС,
	|	ЗапросПоУслугам.НомерСтроки,
	|	4
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ЗапросПоУслугам
	|ГДЕ
	|	ЗапросПоУслугам.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата,
	|	ID,
	|	ЗапросПоОборудованию.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьПоступлениеТоваров(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Накладная";
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
 	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыПоступлениеТоваров();
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	// Определение количества строк в документах.
	КоличествоСтрокДокумента = Новый Соответствие;
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		КоличествоСтрок = 0;
		Пока Шапка.Следующий() Цикл
			Если Шапка.Номенклатура <> Null Тогда 
				КоличествоСтрок = КоличествоСтрок + 1;
			КонецЕсли;
		КонецЦикла;
		КоличествоСтрокДокумента.Вставить(Шапка.Ссылка, КоличествоСтрок);
	КонецЦикла;
	Шапка.Сбросить();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
 		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Накладная");

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, "Накладная");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		СведенияОПоставщике     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата);
		ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик = Шапка.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		СведенияОПокупателе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата);
		ПредставлениеПокупателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПокупателя;
		ОбластьМакета.Параметры.Получатель = Шапка.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести табличную часть
		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Артикул";
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Код";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьСтроки = ?(ВыводитьКоды,	"СтрокаСКодом", "Строка");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		Сумма    = 0;
		СуммаНДС = 0;

		НомерСтроки = 1;
		Пока Шапка.Следующий() Цикл
			
			Если Шапка.Номенклатура = Null Тогда 
				Продолжить;
			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			ОбластьМакета.Параметры.Товар       = СокрЛП(Шапка.Товар);

			ТабличныйДокумент.Вывести(ОбластьМакета);

			Сумма    = Сумма    + ?(ЗначениеЗаполнено(Шапка.Сумма), Шапка.Сумма, 0);
			СуммаНДС = СуммаНДС + ?(ЗначениеЗаполнено(Шапка.СуммаНДС), Шапка.СуммаНДС, 0);
			НомерСтроки = НомерСтроки + 1;

		КонецЦикла;

		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести ИтогоНДС
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС);
		ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + КоличествоСтрокДокумента.Получить(Шапка.Ссылка)
		+ ", на сумму " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьПоступлениеТоваров()

// Функция выполняет расчет рублевых сумм для вывода таблиц документа на печать
//
Функция ПодготовитьТаблицуДокументаДляПечати(ВыборкаСтрок, ТаблицаПоТоварам, МассивIDТабличныхЧастей)

	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	СуммаВзаиморасчетов = 0;
	СуммаВзаиморасчетовНДС = 0;
	ТаблицаПоТоварам.Очистить();
	
	НуженПересчетВРубли = Ложь;
	
	Если ВыборкаСтрок.Проведен 
		И (ВыборкаСтрок.РасчетыВУсловныхЕдиницах
		ИЛИ (ВыборкаСтрок.ВалютаДокумента <> ВалютаРегламентированногоУчета И ВыборкаСтрок.Дата >= '20090101000000')) Тогда
		НуженПересчетВРубли = Истина;
	КонецЕсли;
	
	Пока ВыборкаСтрок.Следующий() Цикл
		
		СтрокаТаблицы = ТаблицаПоТоварам.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаСтрок);
		
		Если НуженПересчетВРубли Тогда
			
			СтрокаТаблицы.СуммаНДС = ?(СтрокаТаблицы.НДСРуб = 0, СтрокаТаблицы.СуммаНДС, СтрокаТаблицы.НДСРуб);
			
			// В случае если сумма включает НДС, то сумма без НДС будет рассчитана позже
			Если СтрокаТаблицы.СуммаВключаетНДС Тогда
				СтрокаТаблицы.Сумма = ?(СтрокаТаблицы.ВсегоРуб = 0, СтрокаТаблицы.Сумма, СтрокаТаблицы.ВсегоРуб);
			// Для валютных документов для Суммы необходимо применять средний курс, 
			// так как сумма документа рассчитывается по курсу аванса,
			// а сумма НДС по курсу текущего документа
			ИначеЕсли НЕ ВыборкаСтрок.РасчетыВУсловныхЕдиницах Тогда
				СуммаРуб            = ?(СтрокаТаблицы.ВсегоРуб = 0, СтрокаТаблицы.Сумма, СтрокаТаблицы.ВсегоРуб);
				СтрокаТаблицы.Сумма = СуммаРуб - СтрокаТаблицы.СуммаНДС;
			// Для условных единиц и сумма НДС и сумма документа рассчитывается по курсу аванса
			Иначе
				СтрокаТаблицы.Сумма = ?(СтрокаТаблицы.СуммаБезНДСРуб = 0, СтрокаТаблицы.Сумма, СтрокаТаблицы.СуммаБезНДСРуб);
			КонецЕсли; 
			
			СтрокаТаблицы.Цена      = ?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма/СтрокаТаблицы.Количество);
			
		КонецЕсли;	
		
	КонецЦикла;

	// Исключим строки из табличный частей, которые не удовлетворяют условиям печати. При выборке запросом их необходимо получать, 
	// чтобы распределять сумма взаиморасчетов в рублях на все строки документа.
	Если МассивIDТабличныхЧастей <> Неопределено
		И МассивIDТабличныхЧастей.Количество() <> 0 Тогда
		Инд = ТаблицаПоТоварам.Количество() - 1;
		Пока Инд >= 0 Цикл
			СтрокаТовар = ТаблицаПоТоварам[Инд];
			
			Если МассивIDТабличныхЧастей.Найти(СтрокаТовар.ID) = Неопределено Тогда
				ТаблицаПоТоварам.Удалить(Инд);
			КонецЕсли;
			
			Инд = Инд - 1;
		КонецЦикла;
	КонецЕсли;

	Возврат ТаблицаПоТоварам;

КонецФункции

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаДляПолученияСведений,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.ПодразделениеОрганизации КАК Подразделение,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ПоступлениеТоваровУслуг.Организация КАК Покупатель,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслуг.Организация
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслуг.Контрагент
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента КАК Договор,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Представление, """") КАК Основание,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Номер, """") КАК ОснованиеНомер,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ОснованиеДата,
	|	ПоступлениеТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
	|	ПоступлениеТоваровУслуг.КурсВзаиморасчетов КАК Курс,
	|	ПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК Кратность
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоступлениеТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати КАК ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	ПоступлениеТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровУслуг.Номенклатура КАК Товар,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК ТоварКод,
	|	ПоступлениеТоваровУслуг.Количество КАК Количество,
	|	0 КАК КоличествоМест,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения КАК ВидУпаковки,
	|	ПоступлениеТоваровУслуг.Коэффициент КАК Коэффициент,
	|	ПоступлениеТоваровУслуг.Коэффициент КАК КоличествоВОдномМесте,
	|	ПоступлениеТоваровУслуг.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма - ПоступлениеТоваровУслуг.СуммаНДС
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ПоступлениеТоваровУслуг.СуммаНДС КАК СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары),
	|	2,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.КоличествоМест,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Коэффициент,
	|	ПоступлениеТоваровУслуг.Коэффициент,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма - ПоступлениеТоваровУслуг.СуммаНДС
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Сумма
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги),
	|	3,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Количество,
	|	0,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	NULL,
	|	1,
	|	1,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма - ПоступлениеТоваровУслуг.СуммаНДС
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Сумма
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|ГДЕ
	|	&ВключатьУслуги = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги),
	|	4,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Количество,
	|	0,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	NULL,
	|	1,
	|	1,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма - ПоступлениеТоваровУслуг.СуммаНДС
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Сумма
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|ГДЕ
	|	&ВключатьУслуги = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ВозвратнаяТара),
	|	5,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Количество,
	|	0,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	NULL,
	|	0,
	|	0,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.Сумма,
	|	0,
	|	NULL,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ВозвратнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуСведенийТОРГ12Покупатель(Знач МассивОбъектов, Знач ВключатьУслуги) Экспорт
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеТОРГ12();
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Параметры.Вставить("ВключатьУслуги", ВключатьУслуги);
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12(); 
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		СведенияОДокументе.Валюта             = ВалютаРегУчета;
		СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
		СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыТОРГ12();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.ВалютаДокумента <> ВалютаРегУчета Тогда
			НуженПересчетВРубли	= Истина;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС 	= Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС 	= Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность 	= 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС 	= Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС 	= (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			СтрокаТаблицыДокумента.Цена = ?(СтрокаТаблицыДокумента.Количество = 0, СтрокаТаблицыДокумента.СуммаБезНДС, СтрокаТаблицыДокумента.СуммаБезНДС / СтрокаТаблицыДокумента.Количество);
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыТОРГ4()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер КАК Номер,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Ссылка.Проведен КАК Проведен,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата КАК Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата КАК ДатаДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента КАК ДатаДокументаСопровождения,
	|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента КАК НомерДокументаСопровождения,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация КАК ЮрФизЛицо,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация КАК Руководители,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент КАК Поставщик,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент КАК Грузоотправитель,
	|	ПоступлениеТоваровУслуг.Ссылка.Склад КАК МестоПриемки,
	|	ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации.НаименованиеПолное КАК ПредставлениеПодразделения,
	|	ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов КАК Курс,
	|	ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК Кратность,
	|	ПоступлениеТоваровУслуг.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ПоступлениеТоваровУслуг.КоличествоМест,
	|	ПоступлениеТоваровУслуг.Количество КАК КоличествоШтук,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ПоступлениеТоваровУслуг.Коэффициент КАК КоличествоВОдномМесте,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.Сумма,
	|	ПоступлениеТоваровУслуг.СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	2 КАК ID,
	|	ПоступлениеТоваровУслуг.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ПоступлениеТоваровУслуг.ВсегоРуб КАК ВсегоРуб,
	|	ПоступлениеТоваровУслуг.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
	|	ПоступлениеТоваровУслуг.НДСРуб КАК НДСРуб
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|		СУММА(ЕСТЬNULL(ПоступлениеТоваровУслуг.КоличествоМест, 0)) КАК КоличествоМест,
	|		СУММА(ЕСТЬNULL(ПоступлениеТоваровУслуг.Количество, 0)) КАК Количество,
	|		ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.Коэффициент КАК Коэффициент,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|					ТОГДА ПоступлениеТоваровУслуг.Цена
	|				КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Цена * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|			КОНЕЦ, 0) КАК Цена,
	|		СУММА(ЕСТЬNULL(ВЫБОР
	|					КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|						ТОГДА ПоступлениеТоваровУслуг.Сумма
	|					КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|				КОНЕЦ, 0)) КАК Сумма,
	|		СУММА(ЕСТЬNULL(ВЫБОР
	|					КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|						ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|					КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|				КОНЕЦ, 0)) КАК СуммаНДС,
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)) КАК СтавкаНДС,
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|		МИНИМУМ(ЕСТЬNULL(ПоступлениеТоваровУслуг.НомерСтроки, 0)) КАК НомерСтроки,
	|		СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)) КАК ВсегоРуб,
	|		СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)) КАК СуммаБезНДСРуб,
	|		СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)) КАК НДСРуб
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|			ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|			ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|				И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|				И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|				И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|	ГДЕ
	|		ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокументПоступлениеТоваровУслуг.Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)),
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|					ТОГДА ПоступлениеТоваровУслуг.Цена
	|				КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Цена * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|			КОНЕЦ, 0),
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ)) КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер,
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Ссылка.Проведен,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Склад,
	|	ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации,
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации.НаименованиеПолное,
	|	ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.КоличествоМест,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Представление,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Коэффициент,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.Сумма,
	|	ПоступлениеТоваровУслуг.СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	1,
	|	ПоступлениеТоваровУслуг.ЭтоКомиссия,
	|	ПоступлениеТоваровУслуг.ВсегоРуб,
	|	ПоступлениеТоваровУслуг.СуммаБезНДСРуб,
	|	ПоступлениеТоваровУслуг.НДСРуб
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|		СУММА(ЕСТЬNULL(ПоступлениеТоваровУслуг.Количество, 0)) КАК КоличествоМест,
	|		СУММА(ЕСТЬNULL(ПоступлениеТоваровУслуг.Количество, 0)) КАК Количество,
	|		ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.Коэффициент КАК Коэффициент,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|					ТОГДА ПоступлениеТоваровУслуг.Цена
	|				КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Цена * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|			КОНЕЦ, 0) КАК Цена,
	|		СУММА(ЕСТЬNULL(ВЫБОР
	|					КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|						ТОГДА ПоступлениеТоваровУслуг.Сумма
	|					КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|				КОНЕЦ, 0)) КАК Сумма,
	|		СУММА(ЕСТЬNULL(ВЫБОР
	|					КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|						ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|					КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|				КОНЕЦ, 0)) КАК СуммаНДС,
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)) КАК СтавкаНДС,
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|		МИНИМУМ(ЕСТЬNULL(ПоступлениеТоваровУслуг.НомерСтроки, 0)) КАК НомерСтроки,
	|		СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)) КАК ВсегоРуб,
	|		СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)) КАК СуммаБезНДСРуб,
	|		СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)) КАК НДСРуб
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслуг
	|			ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|			ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|				И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|				И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|				И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|	ГДЕ
	|		ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокументПоступлениеТоваровУслуг.Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)),
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|					ТОГДА ПоступлениеТоваровУслуг.Цена
	|				КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Цена * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|			КОНЕЦ, 0),
	|		ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ)) КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер,
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Ссылка.Проведен,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Склад,
	|	ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации,
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации.НаименованиеПолное,
	|	ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.СуммаВключаетНДС,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.Код,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	1,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.Цена
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Цена * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	3,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер,
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Ссылка.Проведен,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Склад,
	|	ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации,
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации.НаименованиеПолное,
	|	ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.СуммаВключаетНДС,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.Код,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	1,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.Цена
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Цена * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	4,
	|	ИСТИНА,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер,
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Ссылка.Проведен,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.Дата,
	|	ПоступлениеТоваровУслуг.Ссылка.ДатаВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Склад,
	|	ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации,
	|	ПоступлениеТоваровУслуг.Ссылка.ПодразделениеОрганизации.НаименованиеПолное,
	|	ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.Ссылка.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ПоступлениеТоваровУслуг.Номенклатура.Код,
	|	1,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	1,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.Цена
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Цена * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма
	|		КОГДА ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов / ПоступлениеТоваровУслуг.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	0,
	|	NULL,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	5,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ВозвратнаяТара))
	|			И (ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка,
	|	ID,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует табличный документ унифицированной формы ТОРГ-4
// "Акт о приемке товара, поступившего без счета поставщика"
//
// Возвращаемое значение:
//  Табличный документ - печатная форма ТОРГ-4
//
Функция ПечатьТОРГ4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	Перем ПодразделениеОтветственныхЛиц;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРегламентированногоУчета   = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ПолеСверху			= 0;
	ТабличныйДокумент.ПолеСнизу				= 0;
	ТабличныйДокумент.ПолеСправа			= 0;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ4";

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ4");

	СисИнфо = Новый СистемнаяИнформация;
	Если ПустаяСтрока(СисИнфо.ИнформацияПрограммыПросмотра) Тогда 
		ТабличныйДокумент.ПолеСлева          = 0;
	Иначе
		ТабличныйДокумент.ПолеСлева          = 10;
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыТОРГ4();
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	ОписаниеТиповЧисло15_3 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 3);	
	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);	

	ТаблицаПоТоварам = Новый ТаблицаЗначений; 		
	ТаблицаПоТоварам.Колонки.Добавить("НомерСтроки");
	ТаблицаПоТоварам.Колонки.Добавить("Номенклатура");
	ТаблицаПоТоварам.Колонки.Добавить("ТоварНаименование");
	ТаблицаПоТоварам.Колонки.Добавить("ТоварКод");
	ТаблицаПоТоварам.Колонки.Добавить("Количество", 				ОписаниеТиповЧисло15_3);
	ТаблицаПоТоварам.Колонки.Добавить("КоличествоМест");
	ТаблицаПоТоварам.Колонки.Добавить("КоличествоШтук");
	ТаблицаПоТоварам.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	ТаблицаПоТоварам.Колонки.Добавить("ЕдиницаИзмеренияКодПоОКЕИ");
	ТаблицаПоТоварам.Колонки.Добавить("ВидУпаковки");
	ТаблицаПоТоварам.Колонки.Добавить("Коэффициент");
	ТаблицаПоТоварам.Колонки.Добавить("КоличествоВОдномМесте");
	ТаблицаПоТоварам.Колонки.Добавить("СуммаВключаетНДС");
	ТаблицаПоТоварам.Колонки.Добавить("Цена", 						ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("Сумма", 						ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаНДС", 					ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаВВалютеДокумента", 		ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаНДСВВалютеДокумента", 	ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СтавкаНДС");
	ТаблицаПоТоварам.Колонки.Добавить("ID");
	ТаблицаПоТоварам.Колонки.Добавить("СуммаБезНДС",				ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаРублевая", 				ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("Стоимость", 					ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("ЭтоКомиссия", 				Новый ОписаниеТипов("Булево"));
	ТаблицаПоТоварам.Колонки.Добавить("ВсегоРуб",                   ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("НДСРуб",                     ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаБезНДСРуб",             ОписаниеТиповЧисло15_2);
	
	МассивIDТабличныхЧастей = Новый Массив;
	МассивIDТабличныхЧастей.Добавить(2); // Товары
	МассивIDТабличныхЧастей.Добавить(3); // Услуги
	МассивIDТабличныхЧастей.Добавить(4); // АгентскиеУслуги
	МассивIDТабличныхЧастей.Добавить(5); // ВозвратнаяТара
	
	// Определение количества строк в документах.
	КоличествоСтрокДокумента = Новый Соответствие;
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		КоличествоСтрок = 0;
		Пока Шапка.Следующий() Цикл
			Если МассивIDТабличныхЧастей.Найти(Шапка.ID) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			КоличествоСтрок = КоличествоСтрок + 1;
		КонецЦикла;
		КоличествоСтрокДокумента.Вставить(Шапка.Ссылка, КоличествоСтрок);
	КонецЦикла;
	Шапка.Сбросить();
	
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало 	= ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТаблицаПоТоварам 	= ПодготовитьТаблицуДокументаДляПечати(Шапка, ТаблицаПоТоварам, МассивIDТабличныхЧастей);
		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогиПоСтранице");
		ОбластьМакетаВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
		
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента);

		Если ЗначениеЗаполнено(Шапка.Контрагент) Тогда
			СведенияОПоставщике = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента);
			ОбластьМакетаШапка.Параметры.ПредставлениеПоставщика       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике);
			ОбластьМакетаШапка.Параметры.ОписаниеПоставщика            = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
				СведенияОПоставщике, "НаименованиеДляПечатныхФорм,ЮридическийАдрес,Телефоны,");
			ОбластьМакетаШапка.Параметры.ПредставлениеГрузоотправителя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
				СведенияОПоставщике, "НаименованиеДляПечатныхФорм,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			ОбластьМакетаШапка.Параметры.ПоставщикПоОКПО               = СведенияОПоставщике.КодПоОКПО;
			ОбластьМакетаШапка.Параметры.ГрузоотправительПоОКПО        = СведенияОПоставщике.КодПоОКПО;
		КонецЕсли;

		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		ОбластьМакетаШапка.Параметры.ДатаДокумента            = Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Ложь);
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОПокупателе, "НаименованиеДляПечатныхФорм,ЮридическийАдрес,");
		ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакетаШапка.Параметры.РеквизитыСопроводительногоДокумента = "сопроводительный документ № "
																		 + Шапка.НомерДокументаСопровождения 
																		 + " от " 
																		 + Формат(Шапка.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'");

		ПодразделениеОтветственныхЛиц = Шапка.ПодразделениеОрганизации;

		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента, ПодразделениеОтветственныхЛиц);
		
		ОбластьМакетаШапка.Параметры.ФИОРуководителя       = Руководители.РуководительПредставление;
		ОбластьМакетаШапка.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжностьПредставление;

		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		// Инициализация счетчика страниц
		НомерСтраницы = 1;
		
		// Инициализация счетчика строк
		НомерСтроки = 0;
		КоличествоСтрок = КоличествоСтрокДокумента.Получить(Шапка.Ссылка);
		
		// инициализация итогов по странице
		ИтогоМестПоСтранице        = 0;
		ИтогоШтукПоСтранице        = 0;
		ИтогоМассаБруттоПоСтранице = 0;
		ИтогоМассаНеттоПоСтранице  = 0;
		ИтогоСтоимостьПоСтранице   = 0;

		// инициализация итогов по документу
		ИтогоМест        = 0;
		ИтогоШтук        = 0;
		ИтогоМассаБрутто = 0;
		ИтогоМассаНетто  = 0;
		ИтогоСтоимость   = 0;
		Ном              = 0;

		// Выводим многострочную часть документа
		Для Каждого СтрокаТовар Из ТаблицаПоТоварам Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(СтрокаТовар);
			
			КоличествоШтук = ?(ЗначениеЗаполнено(СтрокаТовар.КоличествоШтук), СтрокаТовар.КоличествоШтук, 0);
			
			ОбластьМакетаСтрока.Параметры.КоличествоШтук = КоличествоШтук;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТовар.КоличествоМест) Тогда
				ОбластьМакетаСтрока.Параметры.КоличествоВОдномМесте = "";
			КонецЕсли;
			
			Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
			СуммаСНДС = СтрокаТовар.Сумма + ?(Шапка.СуммаВключаетНДС, 0, СтрокаТовар.СуммаНДС);
			ОбластьМакетаСтрока.Параметры.Цена      = ?(КоличествоШтук <> 0, Окр(СуммаСНДС / КоличествоШтук, 2), СуммаСНДС);
			ОбластьМакетаСтрока.Параметры.Стоимость = СуммаСНДС;
			ОбластьМакетаСтрока.Параметры.ТоварНаименование = СокрЛП(СтрокаТовар.ТоварНаименование);
		
			// Проверим вывод
			СтрокаСПодвалом = Новый Массив;
			Если НомерСтроки = 1 Тогда
				СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); // если первая строка, то должен
			КонецЕсли;                                                   // помещаться заголовок
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
			Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
				СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  // помещаться и повал документа
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			КонецЕсли;

			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда

				// Выводим итоги по странице
				Если НЕ (НомерСтроки = 1) Тогда
				
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоМестПоСтранице        = ИтогоМестПоСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоМассаНеттоПоСтранице  = ИтогоМассаНеттоПоСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице;
					
					ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					
				КонецЕсли;
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
				
				// Очистим итоги по странице
				ИтогоМестПоСтранице        = 0;
				ИтогоШтукПоСтранице        = 0;
				ИтогоМассаБруттоПоСтранице = 0;
				ИтогоМассаНеттоПоСтранице  = 0;
				ИтогоСтоимостьПоСтранице   = 0;
				
				// Выведем заголовок таблицы
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				
			ИначеЕсли НомерСтроки = 1 Тогда // первая срока, все помещается
				
				ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				
			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

			// Обновим итоги по странице
			ИтогоМестПоСтранице        = ИтогоМестПоСтранице        + ?(ЗначениеЗаполнено(СтрокаТовар.КоличествоМест), СтрокаТовар.КоличествоМест, 0);
			ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице        + КоличествоШтук;
			ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице + 0;
			ИтогоМассаНеттоПоСтранице  = ИтогоМассаНеттоПоСтранице  + 0;
			ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице   + СуммаСНДС;

			// Обновим итогов по документу
			ИтогоМест        = ИтогоМест        + ?(ЗначениеЗаполнено(СтрокаТовар.КоличествоМест), СтрокаТовар.КоличествоМест, 0);
			ИтогоШтук        = ИтогоШтук        + КоличествоШтук;
			ИтогоМассаБрутто = ИтогоМассаБрутто + 0;
			ИтогоМассаНетто  = ИтогоМассаНетто  + 0;
			ИтогоСтоимость   = ИтогоСтоимость   + СуммаСНДС;

		КонецЦикла;

		// Выводим итоги по последней странице
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоМестПоСтранице        = ИтогоМестПоСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоМассаНеттоПоСтранице  = ИтогоМассаНеттоПоСтранице;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице;
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);

		// Выводим итоги по документу в общем
		ОбластьМакетаВсего.Параметры.ИтогоМест        = ИтогоМест;
		ОбластьМакетаВсего.Параметры.ИтогоШтук        = ИтогоШтук;
		ОбластьМакетаВсего.Параметры.ИтогоМассаБрутто = ИтогоМассаБрутто;
		ОбластьМакетаВсего.Параметры.ИтогоМассаНетто  = ИтогоМассаНетто;
		ОбластьМакетаВсего.Параметры.ИтогоСтоимость   = ИтогоСтоимость;
		ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
		
		// Выводим подвал документа
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьТОРГ4()

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыМ4()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер КАК Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен КАК Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК ДатаСоставления,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента КАК НомерСопроводительногоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация КАК ЮрФизЛицо,
	|	ДокументПоступлениеТоваровУслуг.Склад КАК МестоПриемки,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление КАК СкладНаименование,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код КАК ПоставщикКод,
	|	ДокументПоступлениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное КАК ПредставлениеПодразделения,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов КАК Курс,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК Кратность,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом КАК СубСчет,
	|	ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаНДС,
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки) КАК НомерСтроки,
	|	2 КАК ID,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)) КАК ВсегоРуб,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)) КАК СуммаБезНДСРуб,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)) КАК НДСРуб
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки),
	|	1,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки),
	|	3,
	|	ЛОЖЬ,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки),
	|	4,
	|	ИСТИНА,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	ID,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует табличный документ унифицированной формы М-4
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-4 (приходный ордер).
//
Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_М4";
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М4");

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов"  , МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыМ4();
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ТаблицаПоТоварам = Новый ТаблицаЗначений; 		
	ТаблицаПоТоварам.Колонки.Добавить("НомерСтроки");
	ТаблицаПоТоварам.Колонки.Добавить("Номенклатура");
	ТаблицаПоТоварам.Колонки.Добавить("ТоварНаименование");
	ТаблицаПоТоварам.Колонки.Добавить("ТоварКод");
	ТаблицаПоТоварам.Колонки.Добавить("Количество");
	ТаблицаПоТоварам.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	ТаблицаПоТоварам.Колонки.Добавить("ЕдиницаИзмеренияКод");
	ТаблицаПоТоварам.Колонки.Добавить("СуммаВключаетНДС");
	ТаблицаПоТоварам.Колонки.Добавить("Цена", 						ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("Сумма", 						ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СтавкаНДС");
	ТаблицаПоТоварам.Колонки.Добавить("СуммаНДС", 					ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаНДСВВалютеДокумента", 	ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаБезНДС", 				ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаРублевая", 				ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("ID");
	ТаблицаПоТоварам.Колонки.Добавить("ЭтоКомиссия", 				Новый ОписаниеТипов("Булево"));
	ТаблицаПоТоварам.Колонки.Добавить("ВсегоРуб",                   ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("НДСРуб",                     ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаБезНДСРуб",             ОписаниеТиповЧисло15_2);
	
	МассивIDТабличныхЧастей = Новый Массив;
	МассивIDТабличныхЧастей.Добавить(2); // Товары
	
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ТаблицаПоТоварам = ПодготовитьТаблицуДокументаДляПечати(Шапка, ТаблицаПоТоварам, МассивIDТабличныхЧастей);
		
		ОбластьМакетаШапка              = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаЗаголовокДокумента = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакетаЗаголовокТаблицы   = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакетаСтрока             = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаПодвалСтрок        = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьМакетаИтого              = Макет.ПолучитьОбласть("Итого");
		ОбластьМакетаПодвал             = Макет.ПолучитьОбласть("Подвал");
		
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Ложь);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);

		// Выводим заголовок документа
		ОбластьМакетаЗаголовокДокумента.Параметры.Заполнить(Шапка);
		ОбластьМакетаЗаголовокДокумента.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "НаименованиеДляПечатныхФорм,");
		ОбластьМакетаЗаголовокДокумента.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокДокумента);
		
		// Выводим заголовок таблицы
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС       = 0;
		ИтогоСуммаНДС          = 0;
		ИтогоВсегоСНДС         = 0;
		Ном                    = 0;

		// Инициализация счетчиков страниц и строк
		НомерСтраницы   = 1;
		НомерСтроки     = 0;
		КоличествоСтрок = ТаблицаПоТоварам.Количество();
		
		// Выводим многострочную часть документа
		Для Каждого ВыборкаСтрок Из ТаблицаПоТоварам Цикл

			НомерСтроки = НомерСтроки + 1;

			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);

			Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
			ВсегоСНДС = (?(ЗначениеЗаполнено(ВыборкаСтрок.Сумма), ВыборкаСтрок.Сумма, 0)
					  + ?(Шапка.СуммаВключаетНДС, 0, ?(ЗначениеЗаполнено(ВыборкаСтрок.СуммаНДС), ВыборкаСтрок.СуммаНДС, 0)));

			КоличествоПринято = ?(ЗначениеЗаполнено(ВыборкаСтрок.Количество), ВыборкаСтрок.Количество, 0);
			СуммаНДС          = ?(ЗначениеЗаполнено(ВыборкаСтрок.СуммаНДС), ВыборкаСтрок.СуммаНДС, 0);
			СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
			
			Если Шапка.СуммаВключаетНДС И СуммаНДС <> 0 Тогда
				Цена = ?(КоличествоПринято = 0,
					СуммаБезНДС,
					СуммаБезНДС / КоличествоПринято);
					
			Иначе
					
				Цена = ВыборкаСтрок.Цена;
					
			КонецЕсли;

			ОбластьМакетаСтрока.Параметры.КоличествоПринято = КоличествоПринято;
			ОбластьМакетаСтрока.Параметры.ВсегоСНДС         = ВсегоСНДС;
			ОбластьМакетаСтрока.Параметры.СуммаБезНДС       = СуммаБезНДС;
			ОбластьМакетаСтрока.Параметры.СуммаНДС          = СуммаНДС;
			ОбластьМакетаСтрока.Параметры.Цена              = Цена;
			ОбластьМакетаСтрока.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);

			// Проверим вывод
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
				СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);  // помещаться и подвал документа
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			Иначе                                              // иначе - только подвал строк
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвалСтрок);
			КонецЕсли;

			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда

				ТабличныйДокумент.Вывести(ОбластьМакетаПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + СуммаБезНДС;
			ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
			ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакетаИтого.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакетаИтого.Параметры.ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС;
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС          = ИтогоСуммаНДС;
		ОбластьМакетаИтого.Параметры.ИтогоВсегоСНДС         = ИтогоВсегоСНДС;
		ТабличныйДокумент.Вывести(ОбластьМакетаИтого);

		// Выводим итоги по документу
		ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
		ДанныеПодвал = Новый Структура;
		Если ЗначениеЗаполнено(Шапка.МестоПриемки) Тогда 
			МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Шапка.МестоПриемки, Шапка.ДатаСоставления);
			ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, МОЛ, Шапка.ДатаСоставления);
			ДанныеПодвал.Вставить("ДолжностьПоставщика", ДанныеФизЛица.Должность);
			ДанныеПодвал.Вставить("ФИОПоставщика",       ДанныеФизЛица.Представление);
		КонецЕсли;
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеПодвал);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьМ4()

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыОС14()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслугОборудование.Дата КАК ДатаДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.Дата КАК Дата,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка КАК Ссылка,
	|	ДокументПоступлениеТоваровУслугОборудование.Проведен КАК Проведен,
	|	""0306006"" КАК КодПоОКУД,
	|	ДокументПоступлениеТоваровУслугОборудование.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслугОборудование.Номер КАК НомерДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация КАК ОрганизацияПолучатель,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация.КодПоОКПО КАК ОрганизацияПолучательКодПоОКПО,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад КАК МестоПриема,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад.Представление КАК МестоПриемаНаименование,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаДокумента КАК СуммаДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент КАК ОрганизацияПоставщик,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент КАК ОрганизацияГрузоотправитель,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент.КодПоОКПО КАК ОрганизацияПоставщикКодПоОКПО,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.Представление, """") КАК Основание,
	|	ДокументПоступлениеТоваровУслугОборудование.НомерВходящегоДокумента КАК ОснованиеНомер,
	|	ДокументПоступлениеТоваровУслугОборудование.ДатаВходящегоДокумента КАК ОснованиеДата,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации.НаименованиеПолное КАК ПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.ВалютаВзаиморасчетов, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ПоступлениеТоваровУслугОборудование.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура КАК Оборудование,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.НаименованиеПолное КАК ОборудованиеНаименование,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеТоваровУслугОборудование.Коэффициент,
	|	ПоступлениеТоваровУслугОборудование.СтавкаНДС,
	|	ПоступлениеТоваровУслугОборудование.Количество,
	|	ПоступлениеТоваровУслугОборудование.Количество КАК ФактическиПринято,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Цена
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Цена * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СтоимостьЗаЕдиницу,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Сумма
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Сумма * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.СуммаНДС
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.СуммаНДС * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДС,
	|	ПоступлениеТоваровУслугОборудование.Сумма КАК СуммаВВалютеДокумента,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС КАК СуммаНДСВВалютеДокумента,
	|	1 КАК ID,
	|	ЕСТЬNULL(ПоступлениеТоваровУслугОборудование.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ДокументПоступлениеТоваровУслугОборудование.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	ПоступлениеТоваровУслугОборудование.СпособУчетаНДС КАК СпособУчетаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслугОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = ДокументПоступлениеТоваровУслугОборудование.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслугОборудование.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|			И (ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслугОборудование.Дата,
	|	ДокументПоступлениеТоваровУслугОборудование.Дата,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка,
	|	ДокументПоступлениеТоваровУслугОборудование.Проведен,
	|	""0306006"",
	|	ДокументПоступлениеТоваровУслугОборудование.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслугОборудование.Номер,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация.КодПоОКПО,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад.Представление,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент.КодПоОКПО,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.Представление, """"),
	|	ДокументПоступлениеТоваровУслугОборудование.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.ДатаВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.ВалютаВзаиморасчетов, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка.ВалютаДокумента,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ПоступлениеТоваровУслугОборудование.НомерСтроки,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.НаименованиеПолное,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслугОборудование.Коэффициент,
	|	ПоступлениеТоваровУслугОборудование.СтавкаНДС,
	|	ПоступлениеТоваровУслугОборудование.Количество,
	|	ПоступлениеТоваровУслугОборудование.Количество,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Цена
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Цена * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Сумма
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Сумма * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.СуммаНДС
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.СуммаНДС * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслугОборудование.Сумма,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС,
	|	2,
	|	ЕСТЬNULL(ПоступлениеТоваровУслугОборудование.СчетУчета.Забалансовый, ЛОЖЬ),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ДокументПоступлениеТоваровУслугОборудование.НДСВключенВСтоимость,
	|	ПоступлениеТоваровУслугОборудование.СпособУчетаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслугОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугОборудование
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = ДокументПоступлениеТоваровУслугОборудование.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслугОборудование.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслугОборудование.Дата,
	|	ДокументПоступлениеТоваровУслугОборудование.Дата,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка,
	|	ДокументПоступлениеТоваровУслугОборудование.Проведен,
	|	""0306006"",
	|	ДокументПоступлениеТоваровУслугОборудование.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслугОборудование.Номер,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация.КодПоОКПО,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад.Представление,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент.КодПоОКПО,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.Представление, """"),
	|	ДокументПоступлениеТоваровУслугОборудование.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.ДатаВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.ВалютаВзаиморасчетов, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка.ВалютаДокумента,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ПоступлениеТоваровУслугОборудование.НомерСтроки,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.НаименованиеПолное,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	1,
	|	ПоступлениеТоваровУслугОборудование.СтавкаНДС,
	|	ПоступлениеТоваровУслугОборудование.Количество,
	|	ПоступлениеТоваровУслугОборудование.Количество,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Цена
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Цена * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Сумма
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Сумма * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.СуммаНДС
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.СуммаНДС * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслугОборудование.Сумма,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС,
	|	3,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ДокументПоступлениеТоваровУслугОборудование.НДСВключенВСтоимость,
	|	ПоступлениеТоваровУслугОборудование.СпособУчетаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслугОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугОборудование
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = ДокументПоступлениеТоваровУслугОборудование.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслугОборудование.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслугОборудование.Дата,
	|	ДокументПоступлениеТоваровУслугОборудование.Дата,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка,
	|	ДокументПоступлениеТоваровУслугОборудование.Проведен,
	|	""0306006"",
	|	ДокументПоступлениеТоваровУслугОборудование.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслугОборудование.Номер,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация,
	|	ДокументПоступлениеТоваровУслугОборудование.Организация.КодПоОКПО,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад,
	|	ДокументПоступлениеТоваровУслугОборудование.Склад.Представление,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслугОборудование.СуммаДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент,
	|	ДокументПоступлениеТоваровУслугОборудование.Контрагент.КодПоОКПО,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.Представление, """"),
	|	ДокументПоступлениеТоваровУслугОборудование.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.ДатаВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслугОборудование.ПодразделениеОрганизации.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.ВалютаВзаиморасчетов, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка.ВалютаДокумента,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслугОборудование.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ПоступлениеТоваровУслугОборудование.НомерСтроки,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.НаименованиеПолное,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	1,
	|	ПоступлениеТоваровУслугОборудование.СтавкаНДС,
	|	ПоступлениеТоваровУслугОборудование.Количество,
	|	ПоступлениеТоваровУслугОборудование.Количество,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Цена
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Цена * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Сумма
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.Сумма * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|			ТОГДА ПоступлениеТоваровУслугОборудование.СуммаНДС
	|		КОГДА ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугОборудование.СуммаНДС * ДокументПоступлениеТоваровУслугОборудование.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслугОборудование.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслугОборудование.Сумма,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС,
	|	4,
	|	ИСТИНА,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ДокументПоступлениеТоваровУслугОборудование.НДСВключенВСтоимость,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПустаяСсылка)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслугОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугОборудование
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = ДокументПоступлениеТоваровУслугОборудование.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслугОборудование.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслугОборудование.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (ДокументПоступлениеТоваровУслугОборудование.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	ДокументПоступлениеТоваровУслугОборудование.Ссылка,
	|	ID,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует табличный документ унифицированной формы ОС-14
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме ОС-14 (приходный ордер).
//
Функция ПечатьОС14(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	Перем ПодразделениеОтветственныхЛиц;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ОС14";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_ОС14");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыОС14();
	
	ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	ОписаниеТиповЧисло15_3 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 3);
	
	ТаблицаПоОборудованию = Новый ТаблицаЗначений;
	ТаблицаПоОборудованию.Колонки.Добавить("НомерСтроки");
	ТаблицаПоОборудованию.Колонки.Добавить("Оборудование");
	ТаблицаПоОборудованию.Колонки.Добавить("ОборудованиеНаименование");
	ТаблицаПоОборудованию.Колонки.Добавить("Цена",                        ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("Количество",                  ОписаниеТиповЧисло15_3);
	ТаблицаПоОборудованию.Колонки.Добавить("ФактическиПринято",           ОписаниеТиповЧисло15_3);
	ТаблицаПоОборудованию.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	ТаблицаПоОборудованию.Колонки.Добавить("Коэффициент");
	ТаблицаПоОборудованию.Колонки.Добавить("СтавкаНДС");
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаВключаетНДС");
	ТаблицаПоОборудованию.Колонки.Добавить("Сумма",                       ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаНДС",                    ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаБезНДС",                 ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаВВалютеДокумента",       ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаНДСВВалютеДокумента",    ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаБезНДСВВалютеДокумента", ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаРублевая",               ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("ID");
	ТаблицаПоОборудованию.Колонки.Добавить("ЭтоКомиссия",                 Новый ОписаниеТипов("Булево"));
	ТаблицаПоОборудованию.Колонки.Добавить("ВсегоРуб",                    ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("НДСРуб",                      ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("СуммаБезНДСРуб",              ОписаниеТиповЧисло15_2);
	ТаблицаПоОборудованию.Колонки.Добавить("НДСВключенВСтоимость",        Новый ОписаниеТипов("Булево"));
	ТаблицаПоОборудованию.Колонки.Добавить("СпособУчетаНДС",              Новый ОписаниеТипов("ПеречислениеСсылка.СпособыУчетаНДС"));
	
	МассивIDТабличныхЧастей = Новый Массив;
	МассивIDТабличныхЧастей.Добавить(1); // Оборудование
	
	Пока ВыборкаПоШапке.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ТаблицаПоОборудованию = ПодготовитьТаблицуДокументаДляПечати(ВыборкаПоШапке, ТаблицаПоОборудованию, МассивIDТабличныхЧастей);

		РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(
			ВыборкаПоШапке.ОрганизацияПолучатель, ВыборкаПоШапке.Дата);
		
		Шапка         = Макет.ПолучитьОбласть("Шапка");
		ШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
		СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
		Подвал        = Макет.ПолучитьОбласть("Подвал");
		
		СведенияОПолучателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
			ВыборкаПоШапке.ОрганизацияПолучатель, ВыборкаПоШапке.ДатаДокумента);
		ОрганизацияПолучательНаименование = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОПолучателе, "НаименованиеДляПечатныхФорм,");
		ОрганизацияПолучательТелефоны = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОПолучателе, "Телефоны,");
		ОрганизацияПолучательБанковскиеРеквизиты = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОПолучателе, "НомерСчета,Банк,БИК,КоррСчет,");
		
		СведенияОПоставщике = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
			ВыборкаПоШапке.ОрганизацияПоставщик, ВыборкаПоШапке.ДатаДокумента);
		ОрганизацияПоставщикНаименование = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОПоставщике, "ПолноеНаименование,");
		ОрганизацияПоставщикТелефоны = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОПоставщике, "Телефоны,");
		ОрганизацияПоставщикБанковскиеРеквизиты = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОПоставщике, "НомерСчета,Банк,БИК,КоррСчет,");
		
		СведенияОГрузоотправителе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
			ВыборкаПоШапке.ОрганизацияГрузоотправитель, ВыборкаПоШапке.ДатаДокумента);
		ОрганизацияГрузоотправительНаименование = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОГрузоотправителе, "НаименованиеДляПечатныхФорм,");
		ОрганизацияГрузоотправительБанковскиеРеквизиты = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОГрузоотправителе, "Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		
		Шапка.Параметры.Заполнить(ВыборкаПоШапке);
		Шапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоШапке.НомерДокумента, Истина, Ложь);
		
		Шапка.Параметры.ОрганизацияПолучательНаименование               = ОрганизацияПолучательНаименование;
		Шапка.Параметры.ОрганизацияПолучательТелефоны                   = ОрганизацияПолучательТелефоны;
		Шапка.Параметры.ОрганизацияПолучательБанковскиеРеквизиты        = ОрганизацияПолучательБанковскиеРеквизиты;
		Шапка.Параметры.ОрганизацияПоставщикНаименование                = ОрганизацияПоставщикНаименование;
		Шапка.Параметры.ОрганизацияПоставщикТелефоны                    = ОрганизацияПоставщикТелефоны;
		Шапка.Параметры.ОрганизацияПоставщикБанковскиеРеквизиты         = ОрганизацияПоставщикБанковскиеРеквизиты;
		Шапка.Параметры.ОрганизацияГрузоотправительНаименование         = ОрганизацияГрузоотправительНаименование;
		Шапка.Параметры.ОрганизацияГрузоотправительБанковскиеРеквизиты  = ОрганизацияГрузоотправительБанковскиеРеквизиты;

		ПодразделениеОтветственныхЛиц = ВыборкаПоШапке.ПодразделениеОрганизации;
		
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(
			ВыборкаПоШапке.ОрганизацияПолучатель, ВыборкаПоШапке.ДатаДокумента, ПодразделениеОтветственныхЛиц);

		Шапка.Параметры.РуководительДолжность    = ОтветственныеЛица.РуководительДолжностьПредставление;
		Шапка.Параметры.РуководительНаименование = ОтветственныеЛица.РуководительПредставление;
		
		ТабличныйДокумент.Вывести(Шапка);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.Вывести(ШапкаТаблицы);
		
		Для Каждого СтрокаОборудование Из ТаблицаПоОборудованию Цикл

			СтрокаТаблицы.Параметры.Заполнить(СтрокаОборудование);
			СтрокаТаблицы.Параметры.ОборудованиеНаименование = СокрЛП(СтрокаОборудование.ОборудованиеНаименование);
			
			Если Не РаздельныйУчетНДСНаСчете19 Тогда
				НДСВключенВСтоимость = СтрокаОборудование.НДСВключенВСтоимость;
			Иначе
				НДСВключенВСтоимость = СтрокаОборудование.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.УчитываетсяВCтоимости;
			КонецЕсли;
			
			Если ВыборкаПоШапке.СуммаВключаетНДС И Не НДСВключенВСтоимость Тогда
				СтрокаТаблицы.Параметры.СтоимостьВсего = СтрокаОборудование.Сумма - СтрокаОборудование.СуммаНДС;
				СтрокаТаблицы.Параметры.СтоимостьЗаЕдиницу = ?(СтрокаОборудование.Количество > 0,
					(СтрокаОборудование.Сумма - СтрокаОборудование.СуммаНДС) / СтрокаОборудование.Количество,
					СтрокаОборудование.Сумма - СтрокаОборудование.СуммаНДС);
			ИначеЕсли Не ВыборкаПоШапке.СуммаВключаетНДС И НДСВключенВСтоимость Тогда
				СтрокаТаблицы.Параметры.СтоимостьВсего = СтрокаОборудование.Сумма + СтрокаОборудование.СуммаНДС;
				СтрокаТаблицы.Параметры.СтоимостьЗаЕдиницу = ?(СтрокаОборудование.Количество > 0,
					(СтрокаОборудование.Сумма + СтрокаОборудование.СуммаНДС) / СтрокаОборудование.Количество,
					СтрокаОборудование.Сумма + СтрокаОборудование.СуммаНДС);
			Иначе
				СтрокаТаблицы.Параметры.СтоимостьВсего = СтрокаОборудование.Сумма;
				СтрокаТаблицы.Параметры.СтоимостьЗаЕдиницу = ?(СтрокаОборудование.Количество > 0,
					СтрокаОборудование.Сумма / СтрокаОборудование.Количество, СтрокаОборудование.Сумма);
			КонецЕсли;
			ТабличныйДокумент.Вывести(СтрокаТаблицы);
			
		КонецЦикла;
		
		Подвал.Параметры.ГлавныйБухгалтерНаименование = ОтветственныеЛица.ГлавныйБухгалтерПредставление;
		
		ТабличныйДокумент.Вывести(Подвал);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапке.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции 

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|			И НЕ ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.ЭлектронныеУслуги, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент КАК Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ КАК Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление КАК ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбрабатываемаяТаблица.Ссылка КАК Ссылка,
	|	2 КАК ПорядокТабличныхЧастей,
	|	ОбрабатываемаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ОбрабатываемаяТаблица.Номенклатура КАК Товар,
	|	ОбрабатываемаяТаблица.Номенклатура.Наименование КАК ТоварНаименование,
	|	ОбрабатываемаяТаблица.Сумма КАК ВсегоВал,
	|	ОбрабатываемаяТаблица.СуммаНДС КАК НДСВал,
	|	ОбрабатываемаяТаблица.СтавкаНДС КАК СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ОбрабатываемаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОбрабатываемаяТаблица.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОбрабатываемаяТаблица.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|ГДЕ
	|	ОбрабатываемаяТаблица.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОбрабатываемаяТаблица.Ссылка,
	|	1,
	|	ОбрабатываемаяТаблица.НомерСтроки,
	|	ОбрабатываемаяТаблица.Номенклатура,
	|	ОбрабатываемаяТаблица.Номенклатура.Наименование,
	|	ОбрабатываемаяТаблица.Сумма,
	|	ОбрабатываемаяТаблица.СуммаНДС,
	|	ОбрабатываемаяТаблица.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ОбрабатываемаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОбрабатываемаяТаблица.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОбрабатываемаяТаблица.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|ГДЕ
	|	ОбрабатываемаяТаблица.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОбрабатываемаяТаблица.Ссылка,
	|	3,
	|	ОбрабатываемаяТаблица.НомерСтроки,
	|	ОбрабатываемаяТаблица.Номенклатура,
	|	ОбрабатываемаяТаблица.Номенклатура.Наименование,
	|	ОбрабатываемаяТаблица.Сумма,
	|	ОбрабатываемаяТаблица.СуммаНДС,
	|	ОбрабатываемаяТаблица.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ОбрабатываемаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОбрабатываемаяТаблица.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОбрабатываемаяТаблица.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|ГДЕ
	|	ОбрабатываемаяТаблица.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОбрабатываемаяТаблица.Ссылка,
	|	1,
	|	ОбрабатываемаяТаблица.НомерСтроки,
	|	ОбрабатываемаяТаблица.Номенклатура,
	|	ОбрабатываемаяТаблица.Номенклатура.Наименование,
	|	ОбрабатываемаяТаблица.Сумма,
	|	ОбрабатываемаяТаблица.СуммаНДС,
	|	ОбрабатываемаяТаблица.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ОбрабатываемаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОбрабатываемаяТаблица.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОбрабатываемаяТаблица.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|ГДЕ
	|	ОбрабатываемаяТаблица.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОбрабатываемаяТаблица.Ссылка,
	|	1,
	|	ОбрабатываемаяТаблица.НомерСтроки,
	|	ОбрабатываемаяТаблица.ОбъектСтроительства,
	|	ОбрабатываемаяТаблица.ОбъектСтроительства.Наименование,
	|	ОбрабатываемаяТаблица.Сумма,
	|	ОбрабатываемаяТаблица.СуммаНДС,
	|	ОбрабатываемаяТаблица.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ОбрабатываемаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОбрабатываемаяТаблица.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОбрабатываемаяТаблица.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОбъектыСтроительства))
	|ГДЕ
	|	ОбрабатываемаяТаблица.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОбрабатываемаяТаблица.Ссылка,
	|	1,
	|	ОбрабатываемаяТаблица.НомерСтроки,
	|	ОбрабатываемаяТаблица.ОсновноеСредство,
	|	ОбрабатываемаяТаблица.ОсновноеСредство.Наименование,
	|	ОбрабатываемаяТаблица.Сумма,
	|	ОбрабатываемаяТаблица.СуммаНДС,
	|	ОбрабатываемаяТаблица.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ОбрабатываемаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОбрабатываемаяТаблица.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОбрабатываемаяТаблица.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОсновныеСредства))
	|ГДЕ
	|	ОбрабатываемаяТаблица.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПорядокТабличныхЧастей,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	ПолеТовары = "Таб.Товары.Ссылка";
	Результат.Вставить("ЕстьТовары",          ПолеТовары);
	Результат.Вставить("ЕстьОборудование",    СтрЗаменить(ПолеТовары, "Товары", "Оборудование"));
	Результат.Вставить("ЕстьУслуги",          СтрЗаменить(ПолеТовары, "Товары", "Услуги"));
	Результат.Вставить("ЕстьАгентскиеУслуги", СтрЗаменить(ПолеТовары, "Товары", "АгентскиеУслуги"));
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	НЕ ПоступлениеТоваровУслуг.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Товары))
	|	И ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаДляПолученияСведений,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.ДоговорКонтрагента) КАК ПредставлениеДоговора,
	|	ПоступлениеТоваровУслуг.Организация КАК Получатель,
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.ПодразделениеОрганизации КАК Подразделение,
	|	"""" КАК БанковскийСчетПродавца,
	|	ПоступлениеТоваровУслуг.ВалютаДокумента КАК Валюта,
	|	ПоступлениеТоваровУслуг.КурсВзаиморасчетов КАК Курс,
	|	ПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК Кратность,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ВалютаДокумента.Код, """") КАК ВалютаКод,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ВалютаДокумента.Наименование, """") КАК ВалютаНаименование,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	"""" КАК Руководитель,
	|	"""" КАК ЗаРуководителяНаОсновании
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоступлениеТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	ПоступлениеТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК НоменклатураКод,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Цена КАК Цена,
	|	ПоступлениеТоваровУслуг.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма - ПоступлениеТоваровУслуг.СуммаНДС
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ПоступлениеТоваровУслуг.СуммаНДС КАК СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги),
	|	2,
	|	ПоступлениеТоваровУслуг.НомерСтроки,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Содержание
	|		КОГДА НЕ ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	ПоступлениеТоваровУслуг.Количество,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслуг.Сумма - ПоступлениеТоваровУслуг.СуммаНДС
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Сумма
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.СуммаНДС,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуСведенийАктаОбОказанииУслуг(Знач МассивОбъектов) Экспорт
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеАктаОбОказанииУслуг();
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг();
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		Если Выборка.РасчетыВУсловныхЕдиницах Тогда
			СведенияОДокументе.Валюта             = ВалютаРегУчета;
			СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
			СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		КонецЕсли;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыАктаОбОказанииУслуг();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.Валюта <> ВалютаРегУчета
			И Выборка.РасчетыВУсловныхЕдиницах Тогда
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность = 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
				СтрокаТаблицыДокумента.Сумма = СтрокаТаблицыДокумента.СуммаБезНДС + ?(Выборка.СуммаВключаетНДС, СтрокаТаблицыДокумента.СуммаНДС, 0);
				СтрокаТаблицыДокумента.Цена  = ?(СтрокаТаблицыДокумента.Количество=0, СтрокаТаблицыДокумента.Сумма, СтрокаТаблицыДокумента.Сумма / СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, Новый Структура("ЗаполнятьРуководителя"));
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

Функция КоличествоДокументовЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	ТаблицаДанных = ПерсонализированныеПредложенияСервисов.ТаблицаДанных();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоступлениеТоваровУслуг.Ссылка) КАК КоличествоДокументов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Организация = &Организация
	|	И ПоступлениеТоваровУслуг.Дата >= &НачалоПериода
	|	И ПоступлениеТоваровУслуг.Дата <= &КонецПериода
	|	И ПоступлениеТоваровУслуг.Проведен = ИСТИНА";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоДокументов = Выборка.КоличествоДокументов;
	Иначе
		КоличествоДокументов = 0;
	КонецЕсли;
	
	// Добавляем итог по разделу
	СтрокаДанных = ТаблицаДанных.Добавить();
	СтрокаДанных.Порядок            = 0;
	СтрокаДанных.ЗначениеПоказателя = КоличествоДокументов;

	Возврат ТаблицаДанных;
	
КонецФункции

// ОБРАБОТЧИКИ ОБНОВЛЕНИЯ ИБ

Процедура ЗаменитьВидыОперацийНаПростыеПриПереходеС20Отложенно(Параметры) Экспорт

	Запрос = Новый Запрос;
	
	КонецПериодаВыборки = '20191231235959';
	
	Если Параметры.Свойство("КонецПериодаВыборки")
		И ТипЗнч(Параметры.КонецПериодаВыборки) = Тип("Дата") Тогда
		КонецПериодаВыборки = Параметры.КонецПериодаВыборки;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПериодаВыборки", 	КонецПериодаВыборки);	
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Дата
	|ПОМЕСТИТЬ ВТ_Документы
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата <= &КонецПериодаВыборки
	|	И ПоступлениеТоваровУслуг.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия)
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеТоваровУслуг.Дата УБЫВ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоступлениеТоваровУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.Дата,
	|	СУММА(ТаблицаДокументов.ЕстьОборудование) КАК ЕстьОборудование,
	|	СУММА(ТаблицаДокументов.ЕстьОбъектыСтроительства) КАК ЕстьОбъектыСтроительства,
	|	СУММА(ТаблицаДокументов.ЕстьТовары) КАК ЕстьТовары,
	|	СУММА(ТаблицаДокументов.ЕстьВозвратнаяТара) КАК ЕстьВозвратнаяТара,
	|	СУММА(ТаблицаДокументов.ЕстьУслуги) КАК ЕстьУслуги,
	|	СУММА(ТаблицаДокументов.ЕстьАгентскиеУслуги) КАК ЕстьАгентскиеУслуги,
	|	СУММА(ТаблицаДокументов.ЕстьКомитентыНаЗакупку) КАК ЕстьКомитентыНаЗакупку
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_Документы.Ссылка КАК Ссылка,
	|		ВТ_Документы.Дата КАК Дата,
	|		ЕСТЬNULL(СтрокиТЧ.НомерСтроки, 0) КАК ЕстьОборудование,
	|		0 КАК ЕстьОбъектыСтроительства,
	|		0 КАК ЕстьТовары,
	|		0 КАК ЕстьВозвратнаяТара,
	|		0 КАК ЕстьУслуги,
	|		0 КАК ЕстьАгентскиеУслуги,
	|		0 КАК ЕстьКомитентыНаЗакупку
	|	ИЗ
	|		ВТ_Документы КАК ВТ_Документы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК СтрокиТЧ
	|			ПО ВТ_Документы.Ссылка = СтрокиТЧ.Ссылка
	|				И (СтрокиТЧ.НомерСтроки = 1)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_Документы.Ссылка,
	|		ВТ_Документы.Дата,
	|		0,
	|		ЕСТЬNULL(СтрокиТЧ.НомерСтроки, 0),
	|		0,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВТ_Документы КАК ВТ_Документы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК СтрокиТЧ
	|			ПО ВТ_Документы.Ссылка = СтрокиТЧ.Ссылка
	|				И (СтрокиТЧ.НомерСтроки = 1)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_Документы.Ссылка,
	|		ВТ_Документы.Дата,
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА СтрокиТЧ.НомерСтроки = 1
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		0,
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА СтрокиТЧ.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТ_Документы КАК ВТ_Документы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК СтрокиТЧ
	|			ПО ВТ_Документы.Ссылка = СтрокиТЧ.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_Документы.Ссылка,
	|		ВТ_Документы.Дата,
	|		0,
	|		0,
	|		0,
	|		ЕСТЬNULL(СтрокиТЧ.НомерСтроки, 0),
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВТ_Документы КАК ВТ_Документы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК СтрокиТЧ
	|			ПО ВТ_Документы.Ссылка = СтрокиТЧ.Ссылка
	|				И (СтрокиТЧ.НомерСтроки = 1)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_Документы.Ссылка,
	|		ВТ_Документы.Дата,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ЕСТЬNULL(СтрокиТЧ.НомерСтроки, 0),
	|		0,
	|		0
	|	ИЗ
	|		ВТ_Документы КАК ВТ_Документы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК СтрокиТЧ
	|			ПО ВТ_Документы.Ссылка = СтрокиТЧ.Ссылка
	|				И (СтрокиТЧ.НомерСтроки = 1)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_Документы.Ссылка,
	|		ВТ_Документы.Дата,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ЕСТЬNULL(СтрокиТЧ.НомерСтроки, 0),
	|		0
	|	ИЗ
	|		ВТ_Документы КАК ВТ_Документы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК СтрокиТЧ
	|			ПО ВТ_Документы.Ссылка = СтрокиТЧ.Ссылка
	|				И (СтрокиТЧ.НомерСтроки = 1)) КАК ТаблицаДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.Дата
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДокументов.ЕстьОборудование) + СУММА(ТаблицаДокументов.ЕстьОбъектыСтроительства) + СУММА(ТаблицаДокументов.ЕстьТовары) + СУММА(ТаблицаДокументов.ЕстьВозвратнаяТара) + СУММА(ТаблицаДокументов.ЕстьУслуги) + СУММА(ТаблицаДокументов.ЕстьАгентскиеУслуги) = 1 И
	|	СУММА(ТаблицаДокументов.ЕстьКомитентыНаЗакупку) = 0 И
	|	(СУММА(ТаблицаДокументов.ЕстьТовары) = 1
	|		ИЛИ СУММА(ТаблицаДокументов.ЕстьУслуги) = 1)";

	УстановитьПривилегированныйРежим(Истина);

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	ВыборкаПоДокументам = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Попытка
			
			ЗаменитьВДокументеВидОперацииНаПростойПриПереходеС20(ВыборкаПоДокументам);
			ОбъектовОбработано = ОбъектовОбработано + 1;
			КонецПериодаВыборки = ВыборкаПоДокументам.Дата; // Запоминаем дату, с которой будем начинать в следующий раз.
			
		Исключение
			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать поступление товаров и услуг: %1 по причине:
					|%2'"),
					ВыборкаПоДокументам.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.РеализацияТоваровУслуг, ВыборкаПоДокументам.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	// Запоминаем дату, с которой будем начинать в следующий раз.
	Параметры.Вставить("КонецПериодаВыборки", КонецПериодаВыборки);
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ЗаменитьВидыОперацийНаПростыеПриПереходеС20
				|не удалось обработать некоторые поступления товаров и услуг (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.РеализацияТоваровУслуг,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ЗаменитьВидыОперацийНаПростыеПриПереходеС20
					|обработала очередную порцию поступлений товаров и услуг: %1 документов'"), ОбъектовОбработано));
	КонецЕсли;


КонецПроцедуры

Процедура ЗаменитьВДокументеВидОперацииНаПростойПриПереходеС20(ВыборкаПоДокументам)
	
	НачатьТранзакцию();
	Попытка
		
		// Блокируем объект от изменения другими сеансами.
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.ПоступлениеТоваровУслуг");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоДокументам.Ссылка);
		Блокировка.Заблокировать();
		
		ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
		
		// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
		Если ДокументОбъект = Неопределено Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
		НовыйВидОперации = Неопределено;
		
		Если ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия Тогда
			Если ДокументОбъект.Товары.Количество() > 0
				И ДокументОбъект.Оборудование.Количество() = 0
				И ДокументОбъект.ОбъектыСтроительства.Количество() = 0
				И ДокументОбъект.ВозвратнаяТара.Количество() = 0
				И ДокументОбъект.Услуги.Количество() = 0
				И ДокументОбъект.АгентскиеУслуги.Количество() = 0 Тогда

				Если НЕ ЕстьКомитентыНаЗакупку(ДокументОбъект) Тогда
					НовыйВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары;
				КонецЕсли;
			
			ИначеЕсли ДокументОбъект.Товары.Количество() = 0
				И ДокументОбъект.Оборудование.Количество() = 0
				И ДокументОбъект.ОбъектыСтроительства.Количество() = 0
				И ДокументОбъект.ВозвратнаяТара.Количество() = 0
				И ДокументОбъект.Услуги.Количество() > 0
				И ДокументОбъект.АгентскиеУслуги.Количество() = 0 Тогда

				НовыйВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги;
				
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НовыйВидОперации) Тогда
			// Документ уже обработан либо его данные перестали удовлетворять условию замены вида операции
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
		ДокументОбъект.ВидОперации = НовыйВидОперации;
		
		// Запись обработанного объекта (без перепроведения).
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Устанавливаем счета расчетов с комитентом в документах поступления комиссионных товаров
// Если ранее счет учета в документе задан не был, а сейчас он задан в настройке счетов учета с контрагентами
Процедура ЗаполнитьСчетаРасчетовСКомитентами() Экспорт
	
	Запрос = Новый Запрос;
	
	// Получаем только документы поступления по комиссии на реализацию, в которых не заполнен счет расчетов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Организация,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Комитент,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента КАК ДоговорКомиссии
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ПоступлениеТоваровУслуг.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	|	И ПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	ВыборкаИзРезультатовЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаИзРезультатовЗапроса.Следующий() Цикл
		
		ДокументОбъект = ВыборкаИзРезультатовЗапроса.Ссылка.ПолучитьОбъект();
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СчетаУчетаРасчетовСКонтрагентом = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
			ВыборкаИзРезультатовЗапроса.Организация, ВыборкаИзРезультатовЗапроса.Комитент, ВыборкаИзРезультатовЗапроса.ДоговорКомиссии);
		
		Если СчетаУчетаРасчетовСКонтрагентом.Свойство("СчетРасчетовСКомитентом") 
			И ЗначениеЗаполнено(СчетаУчетаРасчетовСКонтрагентом.СчетРасчетовСКомитентом) Тогда
			
			ДокументОбъект.СчетУчетаРасчетовСКонтрагентом = СчетаУчетаРасчетовСКонтрагентом.СчетРасчетовСКомитентом;
			
			Попытка
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
				
			Исключение
				ШаблонСообщения = НСтр("ru = 'Не удалось записать документ.
                                        |%1'");
				
				ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка, 
					Метаданные.Документы.ПоступлениеТоваровУслуг,
					ВыборкаИзРезультатовЗапроса.Ссылка, 
					ТекстСообщения);
			КонецПопытки;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ТекстЗапросаРасчетыВВалютеОсновныеСредства()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыОсновныеСредства.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыОсновныеСредства.СуммаВзаиморасчетов,
	|	СуммыТаблицыОсновныеСредства.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОсновныеСредства.СуммаРуб,
	|	СуммыТаблицыОсновныеСредства.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыОсновныеСредства
	|ИЗ
	|	&СуммыТаблицыОсновныеСредства КАК СуммыТаблицыОсновныеСредства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОсновныеСредства.Ссылка,
	|	ВременнаяТаблицаОсновныеСредства.НомерСтроки,
	|	ВременнаяТаблицаОсновныеСредства.ОсновноеСредство,
	|	ВременнаяТаблицаОсновныеСредства.ИнвентарныйНомер,
	|	СуммыТаблицыОсновныеСредства.СуммаВзаиморасчетов,
	|	СуммыТаблицыОсновныеСредства.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОсновныеСредства.СуммаРуб,
	|	СуммыТаблицыОсновныеСредства.СуммаНДСРуб,
	|	ВременнаяТаблицаОсновныеСредства.СтавкаНДС,
	|	ВременнаяТаблицаОсновныеСредства.СчетУчета,
	|	ВременнаяТаблицаОсновныеСредства.СчетУчетаНДС,
	|	ВременнаяТаблицаОсновныеСредства.СпособУчетаНДС,
	|	ВременнаяТаблицаОсновныеСредства.СчетНачисленияАмортизации,
	|	ВременнаяТаблицаОсновныеСредства.СрокПолезногоИспользования
	|ПОМЕСТИТЬ ТаблицаОсновныеСредства
	|ИЗ
	|	ВременнаяТаблицаОсновныеСредства КАК ВременнаяТаблицаОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыОсновныеСредства КАК СуммыТаблицыОсновныеСредства
	|		ПО ВременнаяТаблицаОсновныеСредства.НомерСтроки = СуммыТаблицыОсновныеСредства.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПроверкаСостоянияОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ЕстьОсновныеСредства Тогда
		ПараметрыПроведения.Вставить("ПроверкаСостоянияОСРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ПроверкаСостоянияОСТаблица",   Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ПроверкаСостоянияОСРеквизиты", НомераТаблиц.Количество());
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	""ОсновныеСредства"" КАК ИмяСписка,
	|	Реквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК СостояниеОС,
	|	Реквизиты.Ссылка КАК Регистратор
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	НомераТаблиц.Вставить("ПроверкаСостоянияОСТаблица", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаОсновныеСредства.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	ТаблицаОсновныеСредства КАК ТаблицаОсновныеСредства
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;

КонецФункции

// Функция формирует табличный документ унифицированной формы ОС-1
//
// Возвращаемое значение:
//  Табличный документ по форме ОС-1 (приходный ордер).
//
Функция ПечатьОС1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ОС1";

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1");
	МакетОС1а = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1а");
	МакетОС1б = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1б");

	// Области
	ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакетаЗаголовок_а = МакетОС1а.ПолучитьОбласть("Заголовок");

	Шапка1ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка1");
	Шапка2ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка2");
	Строка2ОС1б    = МакетОС1б.ПолучитьОбласть("Строка2");
	Строка2ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка2П");
	Подвал2        = МакетОС1б.ПолучитьОбласть("Подвал2");
	Шапка3ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка3");
	Строка3ОС1б    = МакетОС1б.ПолучитьОбласть("Строка3");
	Строка3ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка3П");
	Подвал3        = МакетОС1б.ПолучитьОбласть("Подвал3");
	Шапка4ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка4");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка.Организация КАК Организация,
	|	ПоступлениеТоваровУслугОсновныеСредства.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	|	ПоступлениеТоваровУслугОсновныеСредства.СчетУчета КАК СчетУчета,
	|	ПоступлениеТоваровУслугОсновныеСредства.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПоступлениеТоваровУслугОсновныеСредства.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.АмортизационнаяГруппа.Порядок + 1 КАК НомерГруппы,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.Изготовитель КАК Изготовитель,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.КодПоОКОФ.Код КАК КодОКОФ,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	МАКСИМУМ(ПервоначальныеСведенияОСБухгалтерскийУчет.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТ_МаксПериодыСведенийОСБУ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ПоступлениеТоваровУслугОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	|			И ПоступлениеТоваровУслугОсновныеСредства.Ссылка.Организация = ПервоначальныеСведенияОСБухгалтерскийУчет.Организация
	|			И (ПервоначальныеСведенияОСБухгалтерскийУчет.Период <= КОНЕЦПЕРИОДА(ПоступлениеТоваровУслугОсновныеСредства.Ссылка.Дата, МЕСЯЦ))
	|ГДЕ
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство,
	|	ПоступлениеТоваровУслугОсновныеСредства.СчетУчета,
	|	ПоступлениеТоваровУслугОсновныеСредства.СрокПолезногоИспользования,
	|	ПоступлениеТоваровУслугОсновныеСредства.ИнвентарныйНомер,
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка.Организация,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.АмортизационнаяГруппа.Порядок + 1,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.Изготовитель,
	|	ПоступлениеТоваровУслугОсновныеСредства.НомерСтроки,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.ГруппаОС,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.НаименованиеПолное,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.ЗаводскойНомер,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.КодПоОКОФ.Код,
	|	ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство.ДатаВыпуска
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТ_ПоступлениеТоваровУслуг_КоличествоОС
	|ИЗ
	|	ВТ_МаксПериодыСведенийОСБУ КАК ПоступлениеТоваровУслугОсновныеСредства
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Номер КАК НомерАкта,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК ДатаВвода,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК ДатаВводаПриПередаче,
	|	0 КАК КоэффициентУскоренияБУ,
	|	ДокументПоступлениеТоваровУслуг.МОЛ КАК МОЛБУ,
	|	0 КАК НормаАморт,
	|	ДокументПоступлениеТоваровУслуг.Ответственный,
	|	ДокументПоступлениеТоваровУслуг.МестонахождениеОС КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ДокументПоступлениеТоваровУслуг.МестонахождениеОС.НаименованиеПолное ПОДОБНО """"""""
	|			ТОГДА ДокументПоступлениеТоваровУслуг.МестонахождениеОС.Наименование
	|		ИНАЧЕ ДокументПоступлениеТоваровУслуг.МестонахождениеОС.НаименованиеПолное
	|	КОНЕЦ КАК ПодрПолучателя,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыПоступленияАктивов.ПриобретениеЗаПлату) КАК СпособПоступления,
	|	ЕСТЬNULL(Сведения.ПервоначальнаяСтоимость, 0) КАК СтоимостьБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный) КАК СпособАмортизации,
	|	ДокументПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ЕСТЬNULL(Сведения.ИнвентарныйНомер, ВТ_МаксПериодыСведенийОСБУ.ИнвентарныйНомер) КАК ИнвНомер,
	|	ЕСТЬNULL(Сведения.ПервоначальнаяСтоимость, 0) КАК НачСтоимость,
	|	ВТ_МаксПериодыСведенийОСБУ.СчетУчета КАК СчетУчетаОС,
	|	ВТ_МаксПериодыСведенийОСБУ.СрокПолезногоИспользования КАК СрокПолезнИспПриПост,
	|	ВТ_МаксПериодыСведенийОСБУ.НомерГруппы КАК НомерГруппы,
	|	ВТ_МаксПериодыСведенийОСБУ.Изготовитель КАК Изготовитель,
	|	ВТ_МаксПериодыСведенийОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_МаксПериодыСведенийОСБУ.НомерСтроки КАК НомерСтроки,
	|	ВТ_МаксПериодыСведенийОСБУ.ГруппаОС КАК ГруппаОС,
	|	ВТ_МаксПериодыСведенийОСБУ.НаименованиеОС КАК НаименованиеОС,
	|	ВТ_МаксПериодыСведенийОСБУ.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ВТ_МаксПериодыСведенийОСБУ.ДатаВыпуска КАК ГодВыпуска,
	|	ВТ_МаксПериодыСведенийОСБУ.КодОКОФ КАК КодОКОФ,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.КоличествоСтрок, 0) КАК КоличествоСтрок
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоступлениеТоваровУслуг_КоличествоОС КАК ПоступлениеТоваровУслуг
	|		ПО ДокументПоступлениеТоваровУслуг.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаксПериодыСведенийОСБУ КАК ВТ_МаксПериодыСведенийОСБУ
	|		ПО ДокументПоступлениеТоваровУслуг.Ссылка = ВТ_МаксПериодыСведенийОСБУ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК Сведения
	|		ПО (ВТ_МаксПериодыСведенийОСБУ.ОсновноеСредство = Сведения.ОсновноеСредство)
	|			И (ВТ_МаксПериодыСведенийОСБУ.Организация = Сведения.Организация)
	|			И (ВТ_МаксПериодыСведенийОСБУ.МаксПериод = Сведения.Период)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	НомерСтроки";

	ВыборкаПоОС = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока ВыборкаПоОС.СледующийПоЗначениюПоля("Ссылка") Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Если ВыборкаПоОС.КоличествоСтрок <= 1 Тогда

			ВыборкаПоОС.Следующий();

			Если НЕ(ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Здания 
				ИЛИ ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Сооружения) Тогда
				
				ОбластьМакетаЗаголовок.Параметры.Заполнить(ВыборкаПоОС);
				
				ОбластьМакетаЗаголовок.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОС.НомерАкта, Истина, Ложь);
				
				Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
					ОбластьМакетаЗаголовок.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
				КонецЕсли;

				ОбластьМакетаЗаголовок.Параметры.ПодрПолучателя = Строка(ВыборкаПоОС.ПодразделениеОрганизации);
				Документы.ПринятиеКУчетуОС.ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаПоОС, ОбластьМакетаЗаголовок);
				
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоОС.Организация,ВыборкаПоОС.МОЛБУ,ВыборкаПоОС.Дата);
				ОбластьМакетаЗаголовок.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
				ОбластьМакетаЗаголовок.Параметры.МОЛРасшифровкаПодписи = ДанныеФизЛица.Представление;

				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);

			Иначе
				
				ОбластьМакетаЗаголовок_а.Параметры.Заполнить(ВыборкаПоОС);
				
				ОбластьМакетаЗаголовок_а.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОС.НомерАкта, Истина, Ложь);
				
				Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
					ОбластьМакетаЗаголовок_а.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
				КонецЕсли;

				ОбластьМакетаЗаголовок_а.Параметры.ПодрПолучателя = Строка(ВыборкаПоОС.ПодразделениеОрганизации);
				
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоОС.Организация,ВыборкаПоОС.МОЛБУ,ВыборкаПоОС.Дата);
				ОбластьМакетаЗаголовок_а.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
				ОбластьМакетаЗаголовок_а.Параметры.МОЛРасшифровкаПодписи = ДанныеФизЛица.Представление;
				
				Документы.ПринятиеКУчетуОС.ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаПоОС, ОбластьМакетаЗаголовок_а);
				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок_а);

			КонецЕсли;

		Иначе // Объектов много - групповая печать.

			ОС1б_Страница1 = Новый ТабличныйДокумент();
			ОС1б_Страница2 = Новый ТабличныйДокумент();
			ОС1б_Страница3 = Новый ТабличныйДокумент();
			ОС1б_Страница4 = Новый ТабличныйДокумент();

			Шапка1ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			Документы.ПринятиеКУчетуОС.ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаПоОС, Шапка1ОС1б);
			Шапка1ОС1б.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОС.НомерАкта, Истина, Ложь);
			ОС1б_Страница1.Вывести(Шапка1ОС1б);

			Шапка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Шапка2ОС1б);

			Шапка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница3.Вывести(Шапка3ОС1б);

			Шапка4ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоОС.Организация,ВыборкаПоОС.МОЛБУ,ВыборкаПоОС.Дата);
			Шапка4ОС1б.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
			Шапка4ОС1б.Параметры.МОЛРасшифровкаПодписи = ДанныеФизЛица.Представление;			
			ОС1б_Страница4.Вывести(Шапка4ОС1б);

			НомПП            = 0;
			ИтогНачСтоимость = 0;

			Пока ВыборкаПоОС.Следующий() Цикл

				ИтогНачСтоимость = ИтогНачСтоимость + ВыборкаПоОС.НачСтоимость;

				НомПП = НомПП + 1;
				Строка2ОС1б.Параметры.Нс = НомПП;

				Строка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
				Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
					Строка2ОС1б.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
				КонецЕсли;
				ОС1б_Страница2.Вывести(Строка2ОС1б);

				Строка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
				ОС1б_Страница3.Вывести(Строка3ОС1б);

			КонецЦикла;

			Строка2ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Строка2ПОС1б);

			Подвал2.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Подвал2);

			Строка3ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница3.Вывести(Строка3ПОС1б);

			Подвал3.Параметры.Заполнить(ВыборкаПоОС);
			Подвал3.Параметры.ИтогНачСтоимость = ИтогНачСтоимость;
			ОС1б_Страница3.Вывести(Подвал3);

			ТабличныйДокумент.Вывести(ОС1б_Страница1);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница2);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница3);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница4);
			
		КонецЕсли;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоОС.Ссылка);

	КонецЦикла;
	
	Возврат ТабличныйДокумент;

КонецФункции

#Область СтатусыСчетовПоставщика

Функция ПоступленияПоСчету(СчетНаОплату) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("СчетНаОплату", СчетНаОплату);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СвязанныеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	КритерийОтбора.СвязанныеДокументы(&СчетНаОплату) КАК СвязанныеДокументы
	|ГДЕ
	|	СвязанныеДокументы.Ссылка ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.ПоступлениеТоваровУслуг).Проведен";
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;
	
КонецФункции

Функция ТоварыУслугиКПоступлениюПоСчету(СчетНаОплату, ПоступленияПоСчету) Экспорт
	
	ТоварыУслуги = Новый ТаблицаЗначений;
	ТоварыУслуги.Колонки.Добавить("ЭтоУслуга",     Новый ОписаниеТипов("Булево"));
	ТоварыУслуги.Колонки.Добавить("Номенклатура",  Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТоварыУслуги.Колонки.Добавить("Содержание",    ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ТоварыУслуги.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
	ТоварыУслуги.Колонки.Добавить("Коэффициент",   ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	ТоварыУслуги.Колонки.Добавить("Количество",    ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	ТоварыУслуги.Колонки.Добавить("Цена",          ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("Сумма",         ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("СтавкаНДС",     Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	ТоварыУслуги.Колонки.Добавить("СуммаНДС",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("НомерГТД",      Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТоварыУслуги.Колонки.Добавить("СтранаПроисхождения", Новый ОписаниеТипов("СправочникСсылка.СтраныМира"));
	ТоварыУслуги.Колонки.Добавить("ОтражениеВУСН", Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетНаОплату",       СчетНаОплату);
	Запрос.УстановитьПараметр("ПоступленияПоСчету", ПоступленияПоСчету);
	
	НомераТаблиц = Новый Массив;
	
	Запрос.Текст = ТекстЗапросаРеквизитыСчета(НомераТаблиц) 
		+ ТекстЗапросаПоступившаяНоменклатура(НомераТаблиц)
		+ ТекстЗапросаТоварыУслугиКПоступлениюПоСчету(НомераТаблиц);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	Для НомерТаблицы = 0 По НомераТаблиц.Количество() - 1 Цикл
		Результат.Вставить(НомераТаблиц[НомерТаблицы], РезультатЗапроса[НомерТаблицы].Выгрузить());
	КонецЦикла;
	
	ПоступившаяНоменклатура = Результат.ПоступившаяНоменклатура;
	
	ПоляОтбора = "ЭтоУслуга, Номенклатура, Содержание";
	
	ПоступившаяНоменклатура.Свернуть(ПоляОтбора, "Количество");
	ПоступившаяНоменклатура.Индексы.Добавить(ПоляОтбора);
	
	Отбор = Новый Структура(ПоляОтбора);
	
	РеквизитыСчета = Новый Структура("СуммаВключаетНДС,ЭтоКомиссия", Истина, Ложь);
	Если Результат.РеквизитыСчета.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(РеквизитыСчета, Результат.РеквизитыСчета[0]);
	КонецЕсли;
	
	
	ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(Результат.ТоварыУслуги, ТоварыУслуги);
	
	ПолученныеПолностью = Новый Массив;
	
	Для каждого СтрокаСчета Из ТоварыУслуги Цикл
		
		// Если количество не указано, считаем, что услуга получается один раз.
		КоличествоВСчете = ?(СтрокаСчета.ЭтоУслуга И СтрокаСчета.Количество = 0, 1, СтрокаСчета.Количество);
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаСчета);
		НайденныеСтроки = ПоступившаяНоменклатура.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() <> 0 Тогда
			
			ПолученоРанее = НайденныеСтроки[0].Количество;
			
			Если ПолученоРанее < КоличествоВСчете Тогда
				// Товар получен частично.
				Количество = Макс(КоличествоВСчете - ПолученоРанее, 0);
				СтрокаСчета.Количество = Количество;
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаСчета, РеквизитыСчета.СуммаВключаетНДС);
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаСчета, РеквизитыСчета.СуммаВключаетНДС);
			Иначе
				ПолученныеПолностью.Добавить(СтрокаСчета);
			КонецЕсли;
			
			НайденныеСтроки[0].Количество = Макс(ПолученоРанее - КоличествоВСчете, 0);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВГраница = ПолученныеПолностью.Количество() - 1;
	Для Индекс = 0 По ВГраница Цикл
		ТоварыУслуги.Удалить(ПолученныеПолностью[ВГраница - Индекс]);
	КонецЦикла;
	
	Если РеквизитыСчета.ЭтоКомиссия Тогда
		ТоварыУслуги.ЗаполнитьЗначения(Перечисления.ОтражениеВУСН.НеПринимаются, "ОтражениеВУСН");
	Иначе
		ТоварыУслуги.ЗаполнитьЗначения(Перечисления.ОтражениеВУСН.Принимаются, "ОтражениеВУСН");
	КонецЕсли;
	
	Возврат ТоварыУслуги;
	
КонецФункции

Функция ВозвратнаяТараКПоступлениюПоСчету(СчетНаОплату, ПоступленияПоСчету) Экспорт
	
	ВозвратнаяТара = Новый ТаблицаЗначений;
	ВозвратнаяТара.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ВозвратнаяТара.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	ВозвратнаяТара.Колонки.Добавить("Цена", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ВозвратнаяТара.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетНаОплату", СчетНаОплату);
	Запрос.УстановитьПараметр("ПоступленияПоСчету", ПоступленияПоСчету);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПолученнаяТара.Номенклатура КАК Номенклатура,
	|	СУММА(ПолученнаяТара.Количество) КАК Количество
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПолученнаяТара
	|ГДЕ
	|	ПолученнаяТара.Ссылка В(&ПоступленияПоСчету)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолученнаяТара.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратнаяТара.Номенклатура,
	|	ВозвратнаяТара.Количество,
	|	ВозвратнаяТара.Цена,
	|	ВозвратнаяТара.Сумма
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.ВозвратнаяТара КАК ВозвратнаяТара
	|ГДЕ
	|	ВозвратнаяТара.Ссылка = &СчетНаОплату";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ПолученнаяНоменклатура = Результат[0].Выгрузить();
	
	ПоляОтбора = "Номенклатура";
	ПолученнаяНоменклатура.Индексы.Добавить(ПоляОтбора);
	Отбор = Новый Структура(ПоляОтбора);
	
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, Выборка);
		НайденныеСтроки = ПолученнаяНоменклатура.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			НоваяСтрока = ВозвратнаяТара.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		Иначе
			
			ПолученоРанее = НайденныеСтроки[0].Количество;
			НайденныеСтроки[0].Количество = Макс(ПолученоРанее - Выборка.Количество, 0);
			
			Если ПолученоРанее < Выборка.Количество Тогда
				НоваяСтрока = ВозвратнаяТара.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Количество = Выборка.Количество - ПолученоРанее;
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(НоваяСтрока);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВозвратнаяТара;
	
КонецФункции

Функция ТекстЗапросаПоступлениеПоСчету(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ ЗначениеЗаполнено(Реквизиты.СчетНаОплатуПоставщика) 
		ИЛИ Реквизиты.ЭтоКомиссия Тогда
		ПараметрыПроведения.Вставить("ПоступлениеТоваровУслугПоСчету",   Неопределено);
		ПараметрыПроведения.Вставить("ПоступлениеВозвратнойТарыПоСчету", Неопределено);
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары 
		ИЛИ Реквизиты.ЕстьОборудование 
		ИЛИ Реквизиты.ЕстьУслуги 
		ИЛИ Реквизиты.ЕстьАгентскиеУслуги Тогда
		
		НомераТаблиц.Вставить("ПоступлениеТоваровУслугПоСчету", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ВложенныйЗапрос.ЭтоУслуга,
			|	ВложенныйЗапрос.Номенклатура,
			|	ВложенныйЗапрос.Содержание,
			|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
			|ИЗ
			|	(";
		Если Реквизиты.ЕстьТовары Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|		ЛОЖЬ КАК ЭтоУслуга,
			|		ТаблицаТовары.Номенклатура КАК Номенклатура,
			|		"""" КАК Содержание,
			|		ТаблицаТовары.Количество КАК Количество
			|	ИЗ
			|		ТаблицаТовары КАК ТаблицаТовары";
		КонецЕсли;
		Если Реквизиты.ЕстьОборудование Тогда
			Если Реквизиты.ЕстьТовары Тогда
				ТекстЗапроса = ТекстЗапроса +" ОБЪЕДИНИТЬ ВСЕ ";
			КонецЕсли;
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|		ЛОЖЬ КАК ЭтоУслуга,
			|		ТаблицаОборудование.Номенклатура КАК Номенклатура,
			|		"""" КАК Содержание,
			|		ТаблицаОборудование.Количество КАК Количество
			|	ИЗ
			|		ТаблицаОборудование КАК ТаблицаОборудование";
		КонецЕсли;
		Если Реквизиты.ЕстьУслуги Тогда
			Если Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьОборудование Тогда
				ТекстЗапроса = ТекстЗапроса +" ОБЪЕДИНИТЬ ВСЕ ";
			КонецЕсли;
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ИСТИНА КАК ЭтоУслуга,
			|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
			|	ТаблицаУслуги.Содержание КАК Содержание,
			|	ВЫБОР
			|		КОГДА ТаблицаУслуги.Количество = 0
			|			ТОГДА 1
			|		ИНАЧЕ ТаблицаУслуги.Количество
			|	КОНЕЦ КАК Количество
			|ИЗ
			|	ТаблицаУслуги КАК ТаблицаУслуги";
		КонецЕсли;
		Если Реквизиты.ЕстьАгентскиеУслуги Тогда
			Если Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьОборудование ИЛИ Реквизиты.ЕстьУслуги Тогда
				ТекстЗапроса = ТекстЗапроса +" ОБЪЕДИНИТЬ ВСЕ ";
			КонецЕсли;
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ИСТИНА КАК ЭтоУслуга,
			|	ТаблицаАгентскиеУслуги.Номенклатура КАК Номенклатура,
			|	ТаблицаАгентскиеУслуги.Содержание КАК Содержание,
			|	ВЫБОР
			|		КОГДА ТаблицаАгентскиеУслуги.Количество = 0
			|			ТОГДА 1
			|		ИНАЧЕ ТаблицаАгентскиеУслуги.Количество
			|	КОНЕЦ КАК Количество
			|ИЗ
			|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ") КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.ЭтоУслуга,
			|	ВложенныйЗапрос.Номенклатура,
			|	ВложенныйЗапрос.Содержание" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	Иначе
		ПараметрыПроведения.Вставить("ПоступлениеТоваровУслугПоСчету", Неопределено);
	КонецЕсли;
	
	Если Реквизиты.ЕстьТара Тогда
		НомераТаблиц.Вставить("ПоступлениеВозвратнойТарыПоСчету", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ТаблицаТара.Номенклатура КАК Номенклатура,
			|	СУММА(ТаблицаТара.Количество) КАК Количество
			|ИЗ
			|	ТаблицаТара КАК ТаблицаТара
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТара.Номенклатура" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	Иначе
		ПараметрыПроведения.Вставить("ПоступлениеВозвратнойТарыПоСчету", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРеквизитыСчета(ИменаТаблиц)
	ИменаТаблиц.Добавить("ВТ_ПоступленияПоСчету");
	ИменаТаблиц.Добавить("РеквизитыСчета");
	ИменаТаблиц.Добавить("ТоварыУслуги");
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслуг.Ссылка КАК ПоступлениеТоваров,
	|	ПоступлениеТоваровУслуг.СчетНаОплатуПоставщика КАК СчетНаОплату
	|ПОМЕСТИТЬ ВТ_ПоступленияПоСчету
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&ПоступленияПоСчету)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыСчета.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЕСТЬNULL(РеквизитыСчета.ДоговорКонтрагента.ВидДоговора, ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)) = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом) КАК ЭтоКомиссия
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика КАК РеквизитыСчета
	|ГДЕ
	|	РеквизитыСчета.Ссылка = &СчетНаОплату
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТоварыУслуги.Номенклатура.Услуга, ИСТИНА) КАК ЭтоУслуга,
	|	ТоварыУслуги.Номенклатура КАК Номенклатура,
	|	ТоварыУслуги.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыУслуги.Номенклатура.НомерГТД КАК НомерГТД,
	|	ТоварыУслуги.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТоварыУслуги.Содержание КАК Содержание,
	|	1 КАК Коэффициент,
	|	ТоварыУслуги.Количество КАК Количество,
	|	ТоварыУслуги.Цена КАК Цена,
	|	ТоварыУслуги.Сумма КАК Сумма,
	|	ТоварыУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыУслуги.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Товары КАК ТоварыУслуги
	|ГДЕ
	|	ТоварыУслуги.Ссылка = &СчетНаОплату
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыУслуги.НомерСтроки";
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

Функция ТекстЗапросаПоступившаяНоменклатура(ИменаТаблиц) Экспорт
	ИменаТаблиц.Добавить("ВТ_ПоступившаяНоменклатура");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.СчетНаОплату КАК СчетНаОплату,
	|	ВложенныйЗапрос.ПоступлениеТоваров КАК ПоступлениеТоваров,
	|	ВложенныйЗапрос.ЭтоУслуга КАК ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Содержание КАК Содержание,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерТаможеннойДекларации КАК НомерТаможеннойДекларации,
	|	ВложенныйЗапрос.КодСтраныПроисхожденияТовара КАК КодСтраныПроисхожденияТовара
	|ПОМЕСТИТЬ ВТ_ПоступившаяНоменклатура
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ПоступленияПоСчету.СчетНаОплату КАК СчетНаОплату,
	|		ВТ_ПоступленияПоСчету.ПоступлениеТоваров КАК ПоступлениеТоваров,
	|		ЛОЖЬ КАК ЭтоУслуга,
	|		ПолученныеТовары.Номенклатура КАК Номенклатура,
	|		"""" КАК Содержание,
	|		ЕСТЬNULL(ПолученныеТовары.НомерГТД.РегистрационныйНомер, НЕОПРЕДЕЛЕНО) КАК НомерТаможеннойДекларации,
	|		ЕСТЬNULL(ПолученныеТовары.СтранаПроисхождения.Код, НЕОПРЕДЕЛЕНО) КАК КодСтраныПроисхожденияТовара,
	|		ПолученныеТовары.Количество КАК Количество,
	|		ПолученныеТовары.Цена КАК Цена,
	|		ПолученныеТовары.Сумма КАК Сумма,
	|		ПолученныеТовары.СтавкаНДС КАК СтавкаНДС,
	|		ПолученныеТовары.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		ВТ_ПоступленияПоСчету КАК ВТ_ПоступленияПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПолученныеТовары
	|			ПО ВТ_ПоступленияПоСчету.ПоступлениеТоваров = ПолученныеТовары.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_ПоступленияПоСчету.СчетНаОплату,
	|		ВТ_ПоступленияПоСчету.ПоступлениеТоваров,
	|		ЛОЖЬ,
	|		ПолученноеОборудование.Номенклатура,
	|		"""",
	|		ЕСТЬNULL(ПолученноеОборудование.НомерГТД.РегистрационныйНомер, НЕОПРЕДЕЛЕНО),
	|		ЕСТЬNULL(ПолученноеОборудование.СтранаПроисхождения.Наименование, НЕОПРЕДЕЛЕНО),
	|		ПолученноеОборудование.Количество,
	|		ПолученноеОборудование.Цена,
	|		ПолученноеОборудование.Сумма,
	|		ПолученноеОборудование.СтавкаНДС,
	|		ПолученноеОборудование.СуммаНДС
	|	ИЗ
	|		ВТ_ПоступленияПоСчету КАК ВТ_ПоступленияПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПолученноеОборудование
	|			ПО ВТ_ПоступленияПоСчету.ПоступлениеТоваров = ПолученноеОборудование.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_ПоступленияПоСчету.СчетНаОплату,
	|		ВТ_ПоступленияПоСчету.ПоступлениеТоваров,
	|		ИСТИНА,
	|		ПолученныеУслуги.Номенклатура,
	|		ПолученныеУслуги.Содержание,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		ВЫБОР
	|			КОГДА ПолученныеУслуги.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ ПолученныеУслуги.Количество
	|		КОНЕЦ,
	|		ПолученныеУслуги.Цена,
	|		ПолученныеУслуги.Сумма,
	|		ПолученныеУслуги.СтавкаНДС,
	|		ПолученныеУслуги.СуммаНДС
	|	ИЗ
	|		ВТ_ПоступленияПоСчету КАК ВТ_ПоступленияПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПолученныеУслуги
	|			ПО ВТ_ПоступленияПоСчету.ПоступлениеТоваров = ПолученныеУслуги.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_ПоступленияПоСчету.СчетНаОплату,
	|		ВТ_ПоступленияПоСчету.ПоступлениеТоваров,
	|		ИСТИНА,
	|		ПолученныеАгентскиеУслуги.Номенклатура,
	|		ПолученныеАгентскиеУслуги.Содержание,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		ВЫБОР
	|			КОГДА ПолученныеАгентскиеУслуги.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ ПолученныеАгентскиеУслуги.Количество
	|		КОНЕЦ,
	|		ПолученныеАгентскиеУслуги.Цена,
	|		ПолученныеАгентскиеУслуги.Сумма,
	|		ПолученныеАгентскиеУслуги.СтавкаНДС,
	|		ПолученныеАгентскиеУслуги.СуммаНДС
	|	ИЗ
	|		ВТ_ПоступленияПоСчету КАК ВТ_ПоступленияПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПолученныеАгентскиеУслуги
	|			ПО ВТ_ПоступленияПоСчету.ПоступлениеТоваров = ПолученныеАгентскиеУслуги.Ссылка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.СчетНаОплату,
	|	ВложенныйЗапрос.ПоступлениеТоваров,
	|	ВложенныйЗапрос.ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Содержание,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.НомерТаможеннойДекларации,
	|	ВложенныйЗапрос.КодСтраныПроисхожденияТовара";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

Функция ТекстЗапросаТоварыУслугиКПоступлениюПоСчету(ИменаТаблиц)
	ИменаТаблиц.Добавить("ПоступившаяНоменклатура");
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ПоступившаяНоменклатура.СчетНаОплату КАК СчетНаОплату,
	|	ВТ_ПоступившаяНоменклатура.ЭтоУслуга КАК ЭтоУслуга,
	|	ВТ_ПоступившаяНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТ_ПоступившаяНоменклатура.Содержание КАК Содержание,
	|	ВТ_ПоступившаяНоменклатура.Количество КАК Количество
	|ИЗ
	|	ВТ_ПоступившаяНоменклатура КАК ВТ_ПоступившаяНоменклатура";
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

#КонецОбласти

Функция ТекстЗапросаДанныеДляПечатиЧека(ИменаТаблиц) Экспорт
	
	ИменаТаблиц.Добавить("ВТ_ОплачиваемыеДокументы");
	ИменаТаблиц.Добавить("ВТ_ОплачиваемаяНоменклатура");
	ИменаТаблиц.Добавить("ОплачиваемаяНоменклатура");
	ИменаТаблиц.Добавить("ОплачиваемыеДокументы");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_РасшифровкаПлатежа.Сделка КАК Документ,
	|	ДокументПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК Дата,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС, ИСТИНА) КАК СуммаВключаетНДС,
	|	0 КАК СуммаСкидкиПоДокументу,
	|	ВТ_РасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ВалютаДокумента, &ВалютаРегламентированногоУчета) КАК ВалютаДокумента,
	|	ВТ_РеквизитыШапки.ВалютаДокумента КАК ВалютаПлатежа,
	|	СУММА(ВТ_РасшифровкаПлатежа.СуммаПлатежа) КАК СуммаОплаты,
	|	СУММА(ВТ_РасшифровкаПлатежа.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВТ_РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	ВТ_РасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВТ_ОплачиваемыеДокументы
	|ИЗ
	|	ВТ_РасшифровкаПлатежа КАК ВТ_РасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеквизитыШапки КАК ВТ_РеквизитыШапки
	|		ПО ВТ_РасшифровкаПлатежа.Ссылка = ВТ_РеквизитыШапки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ПО ВТ_РасшифровкаПлатежа.Сделка = ДокументПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ВТ_РасшифровкаПлатежа.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РасшифровкаПлатежа.Сделка,
	|	ВТ_РасшифровкаПлатежа.СтавкаНДС,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС, ИСТИНА),
	|	ВТ_РеквизитыШапки.ВалютаДокумента,
	|	ВТ_РасшифровкаПлатежа.ДоговорКонтрагента,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ВалютаДокумента, &ВалютаРегламентированногоУчета),
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах,
	|	ДоговорыКонтрагентов.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоступившаяНоменклатура.ПоступлениеТоваров КАК Документ,
	|	ВТ_ПоступившаяНоменклатура.ПоступлениеТоваров.Дата КАК ДатаДокумента,
	|	ВТ_ПоступившаяНоменклатура.Номенклатура КАК Номенклатура,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг КАК Наименование,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ПоступившаяНоменклатура.Количество = 0
	|					И ЕСТЬNULL(ВТ_ПоступившаяНоменклатура.Номенклатура.Услуга, ИСТИНА)
	|				ТОГДА 1
	|			ИНАЧЕ ВТ_ПоступившаяНоменклатура.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВТ_ПоступившаяНоменклатура.Количество) КАК КоличествоОтгружено,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ВТ_ОплачиваемыеДокументы.СуммаВключаетНДС
	|				ТОГДА ВТ_ПоступившаяНоменклатура.Цена
	|			КОГДА ВТ_ПоступившаяНоменклатура.Количество = 0
	|				ТОГДА ВТ_ПоступившаяНоменклатура.Сумма + ВТ_ПоступившаяНоменклатура.СуммаНДС
	|			ИНАЧЕ (ВТ_ПоступившаяНоменклатура.Сумма + ВТ_ПоступившаяНоменклатура.СуммаНДС) / ВТ_ПоступившаяНоменклатура.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	|	0 КАК СуммаСкидок,
	|	ВТ_ПоступившаяНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВТ_ПоступившаяНоменклатура.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ОплачиваемыеДокументы.СуммаВключаетНДС
	|				ТОГДА ВТ_ПоступившаяНоменклатура.Сумма
	|			ИНАЧЕ ВТ_ПоступившаяНоменклатура.Сумма + ВТ_ПоступившаяНоменклатура.СуммаНДС
	|		КОНЕЦ) КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПлатежногоАгента,
	|	НЕОПРЕДЕЛЕНО КАК ПлатежныйАгент,
	|	ВТ_ПоступившаяНоменклатура.НомерТаможеннойДекларации КАК НомерТаможеннойДекларации,
	|	ВТ_ПоступившаяНоменклатура.КодСтраныПроисхожденияТовара КАК КодСтраныПроисхожденияТовара
	|ПОМЕСТИТЬ ВТ_ОплачиваемаяНоменклатура
	|ИЗ
	|	ВТ_ПоступившаяНоменклатура КАК ВТ_ПоступившаяНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОплачиваемыеДокументы КАК ВТ_ОплачиваемыеДокументы
	|		ПО ВТ_ПоступившаяНоменклатура.ПоступлениеТоваров = ВТ_ОплачиваемыеДокументы.Документ
	|			И ВТ_ПоступившаяНоменклатура.СтавкаНДС = ВТ_ОплачиваемыеДокументы.СтавкаНДС
	|ГДЕ
	|	(ВТ_ПоступившаяНоменклатура.Количество <> 0
	|			ИЛИ ЕСТЬNULL(ВТ_ПоступившаяНоменклатура.Номенклатура.Услуга, ИСТИНА))
	|	И НЕ ВТ_ОплачиваемыеДокументы.Документ ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПоступившаяНоменклатура.ПоступлениеТоваров,
	|	ВТ_ПоступившаяНоменклатура.ПоступлениеТоваров.Дата,
	|	ВТ_ПоступившаяНоменклатура.СтавкаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ВТ_ОплачиваемыеДокументы.СуммаВключаетНДС
	|				ТОГДА ВТ_ПоступившаяНоменклатура.Цена
	|			КОГДА ВТ_ПоступившаяНоменклатура.Количество = 0
	|				ТОГДА ВТ_ПоступившаяНоменклатура.Сумма + ВТ_ПоступившаяНоменклатура.СуммаНДС
	|			ИНАЧЕ (ВТ_ПоступившаяНоменклатура.Сумма + ВТ_ПоступившаяНоменклатура.СуммаНДС) / ВТ_ПоступившаяНоменклатура.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	ВТ_ПоступившаяНоменклатура.Номенклатура,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг,
	|	ВТ_ПоступившаяНоменклатура.НомерТаможеннойДекларации,
	|	ВТ_ПоступившаяНоменклатура.КодСтраныПроисхожденияТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОплачиваемаяНоменклатура.Документ КАК Документ,
	|	ВТ_ОплачиваемаяНоменклатура.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_ОплачиваемаяНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТ_ОплачиваемаяНоменклатура.Наименование КАК Наименование,
	|	ВТ_ОплачиваемаяНоменклатура.Количество КАК Количество,
	|	ВТ_ОплачиваемаяНоменклатура.КоличествоОтгружено КАК КоличествоОтгружено,
	|	ВТ_ОплачиваемаяНоменклатура.Цена КАК Цена,
	|	ВТ_ОплачиваемаяНоменклатура.СуммаСкидок КАК СуммаСкидок,
	|	ВТ_ОплачиваемаяНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ОплачиваемаяНоменклатура.СуммаНДС КАК СуммаНДС,
	|	ВТ_ОплачиваемаяНоменклатура.Сумма КАК Сумма,
	|	ВТ_ОплачиваемаяНоменклатура.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента,
	|	ВТ_ОплачиваемаяНоменклатура.ПлатежныйАгент КАК ПлатежныйАгент,
	|	МАКСИМУМ(ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, НЕОПРЕДЕЛЕНО)) КАК Штрихкод,
	|	ВТ_ОплачиваемаяНоменклатура.НомерТаможеннойДекларации КАК НомерТаможеннойДекларации,
	|	ВТ_ОплачиваемаяНоменклатура.КодСтраныПроисхожденияТовара КАК КодСтраныПроисхожденияТовара
	|ИЗ
	|	ВТ_ОплачиваемаяНоменклатура КАК ВТ_ОплачиваемаяНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ВТ_ОплачиваемаяНоменклатура.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОплачиваемаяНоменклатура.Документ,
	|	ВТ_ОплачиваемаяНоменклатура.ДатаДокумента,
	|	ВТ_ОплачиваемаяНоменклатура.Номенклатура,
	|	ВТ_ОплачиваемаяНоменклатура.Наименование,
	|	ВТ_ОплачиваемаяНоменклатура.Количество,
	|	ВТ_ОплачиваемаяНоменклатура.КоличествоОтгружено,
	|	ВТ_ОплачиваемаяНоменклатура.Цена,
	|	ВТ_ОплачиваемаяНоменклатура.СуммаСкидок,
	|	ВТ_ОплачиваемаяНоменклатура.СтавкаНДС,
	|	ВТ_ОплачиваемаяНоменклатура.СуммаНДС,
	|	ВТ_ОплачиваемаяНоменклатура.Сумма,
	|	ВТ_ОплачиваемаяНоменклатура.ДоговорПлатежногоАгента,
	|	ВТ_ОплачиваемаяНоменклатура.ПлатежныйАгент,
	|	ВТ_ОплачиваемаяНоменклатура.НомерТаможеннойДекларации,
	|	ВТ_ОплачиваемаяНоменклатура.КодСтраныПроисхожденияТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплачиваемыеДокументы.Документ КАК Документ,
	|	ОплачиваемыеДокументы.Организация КАК Организация,
	|	ОплачиваемыеДокументы.Дата КАК Дата,
	|	ОплачиваемыеДокументы.СуммаСкидкиПоДокументу КАК СуммаСкидкиПоДокументу,
	|	ОплачиваемыеДокументы.РасчетыВУсловныхЕдиницах
	|		И ОплачиваемыеДокументы.ВалютаДокумента <> ОплачиваемыеДокументы.ВалютаПлатежа КАК РасчетыВУсловныхЕдиницах,
	|	ОплачиваемыеДокументы.СтавкаНДС КАК СтавкаНДС,
	|	ОплачиваемыеДокументы.СуммаНДС КАК СуммаНДС,
	|	ОплачиваемыеДокументы.СуммаОплаты КАК СуммаОплаты,
	|	ОплачиваемыеДокументы.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	СУММА(ЕСТЬNULL(РасходныйКассовыйОрдерРасшифровкаПлатежа.СуммаВзаиморасчетов, 0)) КАК СуммаОплатыВсего
	|ИЗ
	|	ВТ_ОплачиваемыеДокументы КАК ОплачиваемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасходныйКассовыйОрдерРасшифровкаПлатежа
	|		ПО ОплачиваемыеДокументы.Документ = РасходныйКассовыйОрдерРасшифровкаПлатежа.Сделка
	|			И ОплачиваемыеДокументы.СтавкаНДС = РасходныйКассовыйОрдерРасшифровкаПлатежа.СтавкаНДС
	|			И (РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплачиваемыеДокументы.Документ,
	|	ОплачиваемыеДокументы.Организация,
	|	ОплачиваемыеДокументы.Дата,
	|	ОплачиваемыеДокументы.СуммаСкидкиПоДокументу,
	|	ОплачиваемыеДокументы.СтавкаНДС,
	|	ОплачиваемыеДокументы.СуммаНДС,
	|	ОплачиваемыеДокументы.СуммаОплаты,
	|	ОплачиваемыеДокументы.СуммаВзаиморасчетов,
	|	ОплачиваемыеДокументы.РасчетыВУсловныхЕдиницах
	|		И ОплачиваемыеДокументы.ВалютаДокумента <> ОплачиваемыеДокументы.ВалютаПлатежа";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ОбщегоНазначенияБПВызовСервера.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("ВТ_ПоступившаяНоменклатура");
	Возврат СтрЗаменить(ТекстЗапроса, "&ЧастьЗапросаДляВыбораСодержанияУслуг", ЧастьЗапросаДляВыбораСодержанияУслуг);
КонецФункции


// Определяет предъявлена ли сумма НДС по документу
//
// Параметры:
// ТекущийДокумент - документ, сумму НДС которого нужно вычислить
//
// Возвращаемое значение:
// Булево - если сумма НДС в документе не нулевая
Функция НаличиеСуммыНДС(ТекущийДокумент) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС КАК СуммаНДС,
	|	ПоступлениеТоваровУслугОборудование.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	|ГДЕ
	|	ПоступлениеТоваровУслугОборудование.Ссылка = &СсылкаНаДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОбъектыСтроительства.СуммаНДС,
	|	ПоступлениеТоваровУслугОбъектыСтроительства.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ПоступлениеТоваровУслугОбъектыСтроительства
	|ГДЕ
	|	ПоступлениеТоваровУслугОбъектыСтроительства.Ссылка = &СсылкаНаДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.СуммаНДС,
	|	ПоступлениеТоваровУслугТовары.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &СсылкаНаДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугУслуги.СуммаНДС,
	|	ПоступлениеТоваровУслугУслуги.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка = &СсылкаНаДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугАгентскиеУслуги.СуммаНДС,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугАгентскиеУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка = &СсылкаНаДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОсновныеСредства.СуммаНДС,
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ПоступлениеТоваровУслугОсновныеСредства
	|ГДЕ
	|	ПоступлениеТоваровУслугОсновныеСредства.Ссылка = &СсылкаНаДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТаблицаНДС.СуммаНДС) КАК СуммаНДС,
	|	ТаблицаНДС.Ссылка КАК Ссылка
	|ИЗ
	|	ТаблицаНДС КАК ТаблицаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДС.Ссылка";

	Запрос.УстановитьПараметр("СсылкаНаДокумент", ТекущийДокумент);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.СуммаНДС > 0;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

// Подготоваливает необходимые таблицы для счет фактуры полученный.
// Данные таблиц необходимы для формирования движений по регистру НДС Предъявленный.
//
// Параметры:
// ТекущийДокумент - документ по которому нужно получить движения
// Отказ - флаг отказа.
//
// Возвращаемое значение:
// Структура - содержатся таблицы по документу.
Функция ПодготовитьПараметрыПроведенияДляСчетФактуры(ТекущийДокумент, Отказ = Ложь) Экспорт

	ПараметрыПроведения = Документы.ПоступлениеТоваровУслуг.ПодготовитьПараметрыПроведения(ТекущийДокумент, Отказ);
	
	Если Отказ Тогда
		Возврат "";
	КонецЕсли;
	
		// Таблица взаиморасчетов
	ТаблицаВзаиморасчеты = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ТаблицаЗачетАвансов, ПараметрыПроведения.ЗачетАвансовРеквизиты, Отказ);

	// Таблицы документа с корректировкой сумм по курсу авансов
	СтруктураТаблицДокумента = УчетДоходовРасходов.ПодготовитьТаблицыПоступленияПоКурсуАвансов(
		ПараметрыПроведения.СтруктураТаблицДокумента,
		ТаблицаВзаиморасчеты, ПараметрыПроведения.ЗачетАвансовРеквизиты);
		
	ТаблицыНДС = Документы.ПоступлениеТоваровУслуг.ПодготовитьТаблицыНДС(СтруктураТаблицДокумента);

	ПараметрыПроведения.Вставить("ТаблицыНДС", ТаблицыНДС);
	ПараметрыПроведения.Вставить("ТаблицаВзаиморасчеты", ТаблицаВзаиморасчеты);
	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);

	Возврат ПараметрыПроведения
КонецФункции

#КонецЕсли