
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ОбновитьТаблицуОшибок(ПеречитатьДанные = Ложь)
	
	Если ПеречитатьДанные Тогда
		Прочитать();
	КонецЕсли;
	
	РеквизитыОперации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ОписаниеОшибок");
	
	ОписаниеОшибок = РеквизитыОперации.ОписаниеОшибок.Получить();
	
	Если ОписаниеОшибок = Неопределено Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СписокОшибок = ОписаниеОшибок;
	
	СписокОшибок.ОтображатьСетку       = Ложь;
	СписокОшибок.ОтображатьГруппировки = Истина;
	СписокОшибок.АвтоМасштаб           = Истина;
	
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = 'Список ошибок: %1'");
	ТекстСообщения  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Объект.Ссылка);
	Заголовок = ТекстСообщения;
	
	ОбновитьТаблицуОшибок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	// Перечитаем данные
	ОбновитьТаблицуОшибок(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьРегламентныеОперации" 
		И ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("ОбрабатываемыеОперации") Тогда
		
		Если Параметр.ОбрабатываемыеОперации = Объект.Ссылка
			Или (ТипЗнч(Параметр.ОбрабатываемыеОперации) = Тип("Массив")
			И Параметр.ОбрабатываемыеОперации.Найти(Объект.Ссылка) <> Неопределено) Тогда
			Если Не ОбновитьТаблицуОшибок(Истина) Тогда
				Закрыть();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОшибокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	// Навигационная ссылка
	Если СтрНайти(Строка(Расшифровка),"e1cib") > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ПерейтиПоНавигационнойСсылке(Расшифровка);
		Возврат;
	КонецЕсли;
	
	// Комплексная расшифровка
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		ОбработатьРасшифровку(Элемент, Расшифровка);
		Возврат;
	КонецЕсли;
	
	// Несколько вариантов расшифровки
	Если ТипЗнч(Расшифровка) = Тип("Массив") Тогда
		СтандартнаяОбработка = Ложь;
		ВыбратьВариантРасшифровки(Элемент, Расшифровка);
		Возврат;
	КонецЕсли;
	
	ОтборОрганизация = Новый Структура;
	ОтборОрганизация.Вставить("Организация", Объект.Организация);
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Отбор", ОтборОрганизация);
	
  // Объект по ссылке открывается по стандартной обработке
	
КонецПроцедуры

// ОБРАБОТКА РАСШИФРОВКИ

&НаКлиенте
Процедура ВыбратьВариантРасшифровки(Элемент, Расшифровка)
	
	СписокПунктовМеню = Новый СписокЗначений;
	Для Каждого ПунктМеню Из Расшифровка Цикл
		
		// Допустимые способы расшифровки см. в ВыводСообщенийОбОшибках.НовыйОписаниеРасшифровки()
		
		Если ТипЗнч(ПунктМеню) <> Тип("Структура") Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Открыть ""%1""'"),
				ПунктМеню);
		ИначеЕсли ПунктМеню.СпособРасшифровки = "Ссылка" Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Открыть ""%1""'"),
				ПунктМеню.Ссылка);
		ИначеЕсли ПунктМеню.СпособРасшифровки = "КарточкаСчета" Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Карточка счета %1'"),
				ПунктМеню.Счет);
		ИначеЕсли ПунктМеню.СпособРасшифровки = "ОтчетПоПроводкам" Тогда
			Представление = ПунктМеню.Заголовок;
		ИначеЕсли ПунктМеню.СпособРасшифровки = "ФормаСписка" Тогда
			Представление = ПунктМеню.Заголовок;
		Иначе
			Продолжить;
		КонецЕсли;
		
		СписокПунктовМеню.Добавить(ПунктМеню, Представление);
		
	КонецЦикла;
	
	Если СписокПунктовМеню.Количество() = 0 Тогда
		ВыбранноеДействие = Неопределено;
	ИначеЕсли СписокПунктовМеню.Количество() = 1 Тогда
		ВыбранноеДействие = СписокПунктовМеню[0];
		ОбработатьРасшифровку(Элемент, ВыбранноеДействие.Значение);
	Иначе
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Элемент", Элемент);
		Оповещение = Новый ОписаниеОповещения("ВыбратьИзМенюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВыборИзМеню(Оповещение, СписокПунктовМеню, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзМенюЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьРасшифровку(ДополнительныеПараметры.Элемент, Результат.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРасшифровку(Элемент, Действие)
	
	// Допустимые способы расшифровки см. в ВыводСообщенийОбОшибках.НовыйОписаниеРасшифровки()
	
	Если ТипЗнч(Действие) <> Тип("Структура") Тогда
		
		ПоказатьЗначение( , Действие);
		
	ИначеЕсли Действие.СпособРасшифровки = "Ссылка" Тогда
		
		ПоказатьЗначение( , Действие.Ссылка);
		
	ИначеЕсли Действие.СпособРасшифровки = "КарточкаСчета" Тогда
		
		ОткрытьФормуБухгалтерскогоОтчетаРасшифровки("КарточкаСчета", Действие);
		
	ИначеЕсли Действие.СпособРасшифровки = "ВедомостьПоСчету" Тогда
		
		ОткрытьФормуБухгалтерскогоОтчетаРасшифровки("ОборотноСальдоваяВедомостьПоСчету", Действие);
		
	ИначеЕсли Действие.СпособРасшифровки = "ОтчетПоПроводкам" Тогда
		
		ОткрытьФормуБухгалтерскогоОтчетаРасшифровки("ОтчетПоПроводкам", Действие);
		
	ИначеЕсли Действие.СпособРасшифровки = "ФормаСписка" Тогда
		
		ИмяОткрываемойФормы = Действие.Объект + ".ФормаСписка";
		
		Действие.Отбор.Вставить("Организация", Объект.Организация);
		
		ПараметрыОткрываемойФормы = Новый Структура;
		ПараметрыОткрываемойФормы.Вставить("Отбор",  Действие.Отбор);
		ПараметрыОткрываемойФормы.Вставить("Период", Новый СтандартныйПериод(НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата)));// Обработку этого параметра следует прописывать в формах
		
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыОткрываемойФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуБухгалтерскогоОтчетаРасшифровки(ИмяОтчета, Действие)
	
	НастройкиОтчета = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	
	ДополнительныеСвойства = НастройкиОтчета.ДополнительныеСвойства;
	ДополнительныеСвойства.Вставить("Организация",   Объект.Организация);
	ДополнительныеСвойства.Вставить("НачалоПериода", НачалоМесяца(Объект.Дата));
	ДополнительныеСвойства.Вставить("КонецПериода",  КонецМесяца(Объект.Дата));
	
	Если Действие.Свойство("Счет") Тогда
		ДополнительныеСвойства.Вставить("Счет",          Действие.Счет);
	КонецЕсли;
	Если Действие.Свойство("Подразделение") Тогда
		ДополнительныеСвойства.Вставить("Подразделение", Действие.Подразделение);
	КонецЕсли;
	
	Если Действие.Свойство("Отбор") Тогда
		Отбор = НастройкиОтчета.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		Для Каждого КлючИЗначение Из Действие.Отбор Цикл
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(Отбор, КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРасшифровки",          Истина);
	ПараметрыФормы.Вставить("ВидРасшифровки",            2); // Из параметров формы
	ПараметрыФормы.Вставить("ПользовательскиеНастройки", НастройкиОтчета);
	ПараметрыФормы.Вставить("ЗаполняемыеНастройки",      Новый Структура("Показатели", Истина));// Заполняемые по умолчанию
	
	ФормаРасшифровки = ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	
КонецПроцедуры
