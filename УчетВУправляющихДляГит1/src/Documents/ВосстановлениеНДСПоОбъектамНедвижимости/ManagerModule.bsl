#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 22, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура СформироватьДвиженияКнигиПродаж(ТаблицаДокумента, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыКнигиПродаж(ТаблицаДокумента, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Дата = Реквизиты.Дата;
	
	Для каждого СтрокаТаблицы Из Параметры.ТаблицаДокумента Цикл

		Движение = Движения.НДСЗаписиКнигиПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
		Движение.Период = Реквизиты.Дата;

	КонецЦикла;

	Движения.НДСЗаписиКнигиПродаж.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыКнигиПродаж(ТаблицаДокумента, ТаблицаРеквизиты)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаДокумента
	
	СписокОбязательныхКолонок = ""
	+ "Организация,"
	+ "СчетФактура,"
	+ "Покупатель,"
	+ "СтавкаНДС,"
	+ "СуммаБезНДС,"
	+ "НДС,"
	+ "Событие,"
	+ "ДатаСобытия,"
	+ "ВидЦенности,"
	+ "КодВидаОперации";
	
	Параметры.Вставить("ТаблицаДокумента", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаДокумента, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Дата";         // <Дата> - период движений - дата документа
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияВосстановлениеНДС(ТаблицаДокумента, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаДокумента)
	 Или ТаблицаДокумента.Итог("НДС") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыВосстановлениеНДС(ТаблицаДокумента, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	СуммаНДС = Параметры.ТаблицаДокумента.Итог("НДС");
	
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Дата);
		
	Проводка = Движения.Хозрасчетный.Добавить();
	Проводка.Период      = Реквизиты.Дата;
	Проводка.Организация = Реквизиты.Организация;
	Проводка.Содержание  = "Восстановлен НДС";
	
	Проводка.СчетДт = Реквизиты.СчетСписанияНДС; 
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Реквизиты.СубконтоСписанияНДС1);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Реквизиты.СубконтоСписанияНДС2);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Реквизиты.СубконтоСписанияНДС3);
	
	Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДС; //68.02
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", 
		Перечисления.ВидыПлатежейВГосБюджет.Налог);
	
	Проводка.Сумма = СуммаНДС;
	
	БухгалтерскийУчет.УстановитьПодразделенияПроводки(
		Проводка, Реквизиты.ПодразделениеСписания, Реквизиты.ПодразделениеСписания);
	НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(Проводка.Сумма, , , , , , Проводка, ПоддержкаПБУ18);
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыВосстановлениеНДС(ТаблицаДокумента, ТаблицаРеквизиты)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаДокумента
	
	СписокОбязательныхКолонок = ""
	+ "Организация,"
	+ "СчетФактура,"
	+ "Покупатель,"
	+ "СтавкаНДС,"
	+ "СуммаБезНДС,"
	+ "НДС,"
	+ "Событие,"
	+ "ДатаСобытия";
	
	Параметры.Вставить("ТаблицаДокумента", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаДокумента, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Дата,"         // <Дата> - период движений - дата документа
	+ "Организация,"
	+ "СчетСписанияНДС,"
	+ "СубконтоСписанияНДС1,"
	+ "СубконтоСписанияНДС2,"
	+ "СубконтоСписанияНДС3,"
	+ "ПодразделениеСписания";
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Реквизиты.Дата КАК Период,
	               |	Реквизиты.Организация КАК Организация
	               |ИЗ
	               |	Документ.ВосстановлениеНДСПоОбъектамНедвижимости КАК Реквизиты
	               |ГДЕ
	               |	Реквизиты.Ссылка = &Ссылка";

	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Событие", Перечисления.СобытияПоНДСПродажи.ВосстановлениеНДС);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
				 + ТекстЗапросаТаблицыДокумента(НомераТаблиц)
				 + ТекстЗапросаКнигиПродаж(НомераТаблиц)
				 + ТекстЗапросаВосстановлениеНДС(НомераТаблиц)
				 + ТекстЗапросаПоФормированиюРегламентнойОперации(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.ОтражатьВосстановлениеВКнигеПродаж,
	|	Реквизиты.СчетСписанияНДС,
	|	Реквизиты.СубконтоСписанияНДС1,
	|	Реквизиты.СубконтоСписанияНДС2,
	|	Реквизиты.СубконтоСписанияНДС3,
	|	Реквизиты.ПодразделениеСписания
	|ИЗ
	|	Документ.ВосстановлениеНДСПоОбъектамНедвижимости КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаОбъектыНедвижимости", НомераТаблиц.Количество());
    НомераТаблиц.Вставить("ВременнаяТаблицаСчетаФактуры", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОбъектыНедвижимости.Ссылка,
	|	ОбъектыНедвижимости.НомерСтроки,
	|	ОбъектыНедвижимости.КлючСтроки,
	|	ОбъектыНедвижимости.ОбъектНедвижимости,
	|	ОбъектыНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС,
	|	ОбъектыНедвижимости.ДатаНачалаИспользованияДляОпераций,
	|	ОбъектыНедвижимости.ДатаВводаВЭксплуатациюБУ,
	|	ОбъектыНедвижимости.ДатаНачисленияАмортизацииНУ,
	|	ОбъектыНедвижимости.СтоимостьОбъектаНедвижимости,
	|	ОбъектыНедвижимости.СуммаНДСПоПодряднымРаботам,
	|	ОбъектыНедвижимости.СуммаНДСПоСМРДляСобственногоПотребления,
	|	ОбъектыНедвижимости.СуммаНДСПоОбъектуНедвижимости,
	|	ОбъектыНедвижимости.ДоляВыручкиНеОблагаемаяНДС,
	|	ОбъектыНедвижимости.СуммаНДСПоПодряднымРаботамВосстановлена,
	|	ОбъектыНедвижимости.СуммаНДСПоСМРДляСобственногоПотребленияВосстановлена,
	|	ОбъектыНедвижимости.СуммаНДСПоОбъектуНедвижимостиВосстановлена
	|ПОМЕСТИТЬ ОбъектыНедвижимости
	|ИЗ
	|	Документ.ВосстановлениеНДСПоОбъектамНедвижимости.ОбъектыНедвижимости КАК ОбъектыНедвижимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка,
	|	СчетаФактуры.НомерСтроки,
	|	СчетаФактуры.КлючСтроки,
	|	СчетаФактуры.СчетФактура,
	|	СчетаФактуры.ВидЦенности,
	|	СчетаФактуры.КодОперацииДляДекларации,
	|	СчетаФактуры.Поставщик,
	|	СчетаФактуры.СуммаБезНДС,
	|	СчетаФактуры.СтавкаНДС,
	|	СчетаФактуры.НДС,
	|	СчетаФактуры.СуммаБезНДСВосстановлена,
	|	СчетаФактуры.НДСВосстановлен,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.Ссылка.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""21""
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.ВосстановлениеНДСПоОбъектамНедвижимости.СчетаФактуры КАК СчетаФактуры";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаКнигиПродаж(НомераТаблиц)
	
	НомераТаблиц.Вставить("КнигиПродаж", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	СчетаФактуры.СчетФактура,
	|	СчетаФактуры.ВидЦенности,
	|	СчетаФактуры.КодВидаОперации,
	|	СчетаФактуры.Поставщик КАК Покупатель,
	|	СчетаФактуры.СтавкаНДС,
	|	СчетаФактуры.СуммаБезНДСВосстановлена КАК СуммаБезНДС,
	|	СчетаФактуры.НДСВосстановлен КАК НДС,
	|	&Событие КАК Событие,
	|	СчетаФактуры.Ссылка.Дата КАК ДатаСобытия
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыНедвижимости КАК ОбъектыНедвижимости
	|		ПО СчетаФактуры.Ссылка = ОбъектыНедвижимости.Ссылка
	|			И СчетаФактуры.КлючСтроки = ОбъектыНедвижимости.КлючСтроки
	|ГДЕ
	|	СчетаФактуры.Ссылка = &Ссылка
	|	И ОбъектыНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС
	|	И СчетаФактуры.НДСВосстановлен <> 0";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВосстановлениеНДС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВосстановлениеНДС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	СчетаФактуры.СчетФактура,
	|	СчетаФактуры.ВидЦенности,
	|	СчетаФактуры.Поставщик КАК Покупатель,
	|	СчетаФактуры.СтавкаНДС,
	|	СчетаФактуры.СуммаБезНДСВосстановлена КАК СуммаБезНДС,
	|	СчетаФактуры.НДСВосстановлен КАК НДС,
	|	&Событие КАК Событие,
	|	СчетаФактуры.Ссылка.Дата КАК ДатаСобытия
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыНедвижимости КАК ОбъектыНедвижимости
	|		ПО СчетаФактуры.Ссылка = ОбъектыНедвижимости.Ссылка
	|			И СчетаФактуры.КлючСтроки = ОбъектыНедвижимости.КлючСтроки
	|ГДЕ
	|	СчетаФактуры.Ссылка = &Ссылка
	|	И ОбъектыНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС
	|	И СчетаФактуры.НДСВосстановлен <> 0";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоФормированиюРегламентнойОперации(НомераТаблиц)

	НомераТаблиц.Вставить("ДанныеРегламентнойОперации", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	НАЧАЛОПЕРИОДА(Реквизиты.Дата, КВАРТАЛ) КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ВосстановлениеНДСПоОбъектамНедвижимости) КАК РегламентнаяОперация
	|ИЗ
	|	Документ.ВосстановлениеНДСПоОбъектамНедвижимости КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Функция ПолучитьПараметрыОСпоСписку(Дата, Организация, СписокОС ) Экспорт
	
	// Получение списка ОС, стоимость которых не окончательно погашена, с указанием остаточной стоимости
	
	СубконтоОС = Новый Массив();
	СубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      КонецГода(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокОС",    СписокОС);
	Запрос.УстановитьПараметр("СубконтоОС",  СубконтоОС);
	Запрос.УстановитьПараметр("ВведеноВЭксплуатацию", Перечисления.СостоянияОС.ПринятоКУчету);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОбъектНедвижимости,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация
	|ПОМЕСТИТЬ ПервоначальныеСведения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектНедвижимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБУОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиАмортизацияОС.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстаткиАмортизацияОС.Счет,
	|	ХозрасчетныйОстаткиАмортизацияОС.СуммаОстатокКт
	|ПОМЕСТИТЬ ОстаткиАмортизацияОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			,
	|			&СубконтоОС,
	|			Организация = &Организация
	|				И Субконто1 В (&СписокОС)) КАК ХозрасчетныйОстаткиАмортизацияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокДт
	|ПОМЕСТИТЬ ОстаткиСтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			,
	|			&СубконтоОС,
	|			Организация = &Организация
	|				И Субконто1 В (&СписокОС)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.ОбъектНедвижимости КАК ОбъектНедвижимости,
	|	СостоянияОСОрганизаций.ДатаСостояния КАК ДатаВводаВЭксплуатациюБУ,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(СостоянияОСОрганизаций.ДатаСостояния, МЕСЯЦ, 1), МЕСЯЦ) КАК ДатаНачисленияАмортизацииНУ,
	|	ОстаткиСтоимостьОС.СуммаОстатокДт КАК СтоимостьОбъектаНедвижимости
	|ИЗ
	|	ПервоначальныеСведения КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ПервоначальныеСведения.ОбъектНедвижимости = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ПервоначальныеСведения.Организация = СостоянияОСОрганизаций.Организация
	|			И (СостоянияОСОрганизаций.Состояние = &ВведеноВЭксплуатацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБУОС КАК СчетаБУОС
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиСтоимостьОС КАК ОстаткиСтоимостьОС
	|			ПО СчетаБУОС.ОсновноеСредство = ОстаткиСтоимостьОС.Субконто1
	|				И СчетаБУОС.СчетУчета = ОстаткиСтоимостьОС.Счет
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиАмортизацияОС КАК ОстаткиАмортизацияОС
	|			ПО СчетаБУОС.ОсновноеСредство = ОстаткиАмортизацияОС.Субконто1
	|				И СчетаБУОС.СчетУчета = ОстаткиАмортизацияОС.Счет
	|		ПО ПервоначальныеСведения.ОбъектНедвижимости = СчетаБУОС.ОсновноеСредство
	|ГДЕ
	|	ЕСТЬNULL(ОстаткиСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ОстаткиАмортизацияОС.СуммаОстатокКт, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектНедвижимости";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецЕсли