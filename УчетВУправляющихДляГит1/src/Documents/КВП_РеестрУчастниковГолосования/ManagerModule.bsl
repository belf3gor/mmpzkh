
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

#Область ПроцедурыИФункцииПечати

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  ИмяМакета    - Строка - название макета.
//  КоличествоЭкземпляров - Число - количество экземпляров на печать.
//  НаПринтер    - Булево - если Истина, то выводим сразу на принтер.
//  НепосредственнаяПечать - Булево - для режима вывода на принтер
//                 печатать сразу или выводить диалог перед печатью.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак достпности печати по-комплектно
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрУчастников") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"РеестрУчастников", "Реестр участников", ПечатьРеестра(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокПомещенийБезСобственников") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СписокПомещенийБезСобственников", "Список помещений без собственников", ПечатьПомещенийБезСобственников(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры // Печать()

// Функция формирует табличный документ с чеками.
//
Функция ПечатьРеестра(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	Запрос = Новый Запрос();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеестрУчастниковГолосования.Номер,
	|	РеестрУчастниковГолосования.Дата,
	|	РеестрУчастниковГолосования.Организация,
	|	ВЫБОР
	|		КОГДА РеестрУчастниковГолосования.ОбъектПроведения ССЫЛКА Справочник.УПЖКХ_Помещения
	|				ИЛИ РеестрУчастниковГолосования.ОбъектПроведения ССЫЛКА Справочник.КВП_Подъезды
	|			ТОГДА РеестрУчастниковГолосования.ОбъектПроведения.Владелец
	|		КОГДА РеестрУчастниковГолосования.ОбъектПроведения ССЫЛКА Справочник.КВП_ЛицевыеСчета
	|			ТОГДА РеестрУчастниковГолосования.ОбъектПроведения.Адрес.Владелец
	|		КОГДА РеестрУчастниковГолосования.ОбъектПроведения ССЫЛКА Справочник.КВП_Здания
	|			ТОГДА РеестрУчастниковГолосования.ОбъектПроведения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КВП_Здания.ПустаяСсылка)
	|	КОНЕЦ КАК Здание,
	|	РеестрУчастниковГолосования.ОписаниеРеестра,
	|	РеестрУчастниковГолосования.Участники.(
	|		СобственникПомещения КАК ФИО,
	|		Помещение КАК Помещение,
	|		Помещение.Владелец КАК Здание,
	|		ВесГолоса
	|	)
	|ИЗ
	|	Документ.КВП_РеестрУчастниковГолосования КАК РеестрУчастниковГолосования
	|ГДЕ
	|	РеестрУчастниковГолосования.Ссылка В(&ТекущийДокумент)";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_РеестрУчастниковГолосования_РеестрУчастников";
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.КВП_РеестрУчастниковГолосования.ПФ_MXL_РеестрУчастников");
	
	Пока Шапка.Следующий() Цикл
		ВыборкаСтрокУчастников = Шапка.Участники.Выбрать();
		
		// Выводим шапку накладной
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ПредставлениеОрганизации = УПЖКХ_ТиповыеМетодыВызовСервера.ОписаниеОрганизации(УПЖКХ_ТиповыеМетодыСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если Не ПустаяСтрока(Шапка.ОписаниеРеестра) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ОписаниеРеестра");
			ОбластьМакета.Параметры.ОписаниеРеестра = Шапка.ОписаниеРеестра;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		Если Не ПустаяСтрока(Шапка.Здание) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("АдресПроведения");
			АдресДома = Справочники.КВП_Здания.ПолучитьПредставлениеЗдания(Шапка.Здание);
			ОбластьМакета.Параметры.АдресПроведения = АдресДома;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьМакета);
		
		Ном = 0;
		Пока ВыборкаСтрокУчастников.Следующий() Цикл
			
			Ном = Ном + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокУчастников);
			ОбластьМакета.Параметры.НомерСтроки = Ном;
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьРеестра()

// Функция формирует табличный документ со списком помещений, 
// для которых не введены данные о собственности.
//
Функция ПечатьПомещенийБезСобственников(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_Помещения.Ссылка КАК Помещение
	|ПОМЕСТИТЬ Помещения
	|ИЗ
	|	Справочник.УПЖКХ_Помещения КАК УПЖКХ_Помещения
	|ГДЕ
	|	УПЖКХ_Помещения.Ссылка В (&СпПомещений)
	|	И (НЕ УПЖКХ_Помещения.Ссылка В (&СпПомещенийССобствениками))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Помещения.Помещение КАК Помещение,
	|	ЕСТЬNULL(КВП_ПлощадьПомещенияСрезПоследних.Площадь, 0) КАК Площадь,
	|	Помещения.Помещение.Код КАК НомерПомещения
	|ИЗ
	|	Помещения КАК Помещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_ПлощадьПомещения.СрезПоследних(, ВидПлощади = &ВидПлощади) КАК КВП_ПлощадьПомещенияСрезПоследних
	|		ПО (КВП_ПлощадьПомещенияСрезПоследних.Объект = Помещения.Помещение)
	|ГДЕ
	|	Помещения.Помещение.Родитель = ЗНАЧЕНИЕ(Справочник.УПЖКХ_Помещения.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПомещения";

	Запрос.УстановитьПараметр("СпПомещений",               ПараметрыПечати.СписокПомещений);
	Запрос.УстановитьПараметр("СпПомещенийССобствениками", ПараметрыПечати.СпПомещенийССобствениками);
	Запрос.УстановитьПараметр("ВидПлощади",                Справочники.УПЖКХ_ВидыПлощадей.ОбщаяПлощадь);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрУчастниковГолосования_СписокПомещений";
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.КВП_РеестрУчастниковГолосования.ПФ_MXL_СписокПомещенийБезСобственников");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	Ном = 0;
	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл
		
		Ном = Ном + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьМакета.Параметры.Заполнить(Результат);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции //ПечатьПомещенийБезСобственников()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ЭкспортныеПроцедурыИФункции

// Функция определяет вес голоса собственника с учетом вида собственности.
Функция ОпределитьВесГолосаСУчетомВидаСобственности(ДанныеОСобственности, КоличествоСобственников, Площадь) Экспорт
	
	ВесГолоса = 0;
	
	Если ДанныеОСобственности.ВидСобственности = Перечисления.УПЖКХ_ВидыСобственности.Частная Тогда
		// Частная, долевая
		Если ДанныеОСобственности.ПодвидЧастнойСобственности = Перечисления.УПЖКХ_ВидыЧастнойСобственности.Долевая Тогда
			ВесГолоса = ?(ДанныеОСобственности.ДоляСобственникаЗнаменатель = 0, 0, 
							Площадь * ДанныеОСобственности.ДоляСобственникаЧислитель / ДанныеОСобственности.ДоляСобственникаЗнаменатель);
			// Частная, совместная
		ИначеЕсли ДанныеОСобственности.ПодвидЧастнойСобственности = Перечисления.УПЖКХ_ВидыЧастнойСобственности.Совместная Тогда
			ВесГолоса = ? (КоличествоСобственников = 0, 0, Площадь / КоличествоСобственников);
			// Частная, индивидуальная
		Иначе
			ВесГолоса = Площадь;
		КонецЕсли;
	Иначе // Муниципальная или Государственная
		ВесГолоса = Площадь;
	КонецЕсли;
	
	Возврат ВесГолоса;
	
КонецФункции // ОпределитьВесГолосаСУчетомВидаСобственности()

#КонецОбласти

#КонецЕсли