#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьПараметрыВРеквизитыФормы();
	
	ПодготовитьФормуНаСервере();
	РасходныйКассовыйОрдерФормы.УстановитьВидимостьСчетовУчета(ЭтотОбъект);
	РасходныйКассовыйОрдерФормы.УстановитьУсловноеОформление(ЭтотОбъект);
	РасходныйКассовыйОрдерФормы.УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И (Модифицированность ИЛИ ПеренестиВДокумент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		
		Отказ = Истина;
		
		Оповещение   = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		
	ИначеЕсли ПеренестиВДокумент Тогда
		
		Отказ = НЕ ПроверитьЗаполнение();
		
		Если Отказ Тогда
			Модифицированность = Истина;
			ПеренестиВДокумент = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		СтруктураВозврата = Новый Структура();
		СтруктураВозврата.Вставить("СуммаДокумента", Объект.СуммаДокумента);
		СтруктураВозврата.Вставить("АдресХранилищаРасшифровкаПлатежа", АдресХранилищаРасшифровкаПлатежа);
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Документы.РасходныйКассовыйОрдер.ОбработкаПроверкиЗаполненияРасшифровкаПлатежа(
		Объект, ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	// Чтобы дважды не вызывать сервер, сразу поместим во временное хранилище 
	// таблицу РасшифровкаПлатежа.
	Если НЕ Отказ Тогда
		АдресХранилищаРасшифровкаПлатежа = ПоместитьРасшифровкаПлатежаВоВременноеХранилище();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРасшифровкаПлатежа

&НаКлиенте
Процедура РасшифровкаПлатежаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаПриНачалеРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.НомерСтроки = РасшифровкаПлатежа.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПередУдалением(Элемент, Отказ)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаПередУдалением(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаПриИзменении(Элемент)
	
	СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	РасходныйКассовыйОрдерФормыКлиентСервер.ИнициализироватьСвойстваПлатежа(ЭтотОбъект); // Только создаем структуру, если она еще не создана.
	
	Если СтрокаПлатеж.ДоговорКонтрагента = СвойстваПлатежа.ДоговорКонтрагента Тогда
		Возврат;
	КонецЕсли;
	
	РасшифровкаПлатежаДоговорКонтрагентаПриИзмененииНаСервере(СтрокаПлатеж.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаОткрытие(Элемент, СтандартнаяОбработка)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаДоговорКонтрагентаОткрытие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаСтатьяДвиженияДенежныхСредствПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСпособПогашенияЗадолженностиПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаСпособПогашенияЗадолженностиПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСделкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаСделкаНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаПлатежаПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаСуммаПлатежаПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаКурсВзаиморасчетовПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаКурсВзаиморасчетовПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаКурсВзаиморасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаКурсВзаиморасчетовНачалоВыбора(
		ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаВзаиморасчетовПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаСуммаВзаиморасчетовПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСтавкаНДСПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаСтавкаНДСПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСчетУчетаРасчетовСКонтрагентомПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаСчетУчетаРасчетовСКонтрагентомПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаРасходыУСНПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаРасходыУСНПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаВидПлатежаПоКредитамЗаймамПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаВидПлатежаПоКредитамЗаймамПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаДоговорКонтрагентаАвтоПодбор(
		ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаДоговорКонтрагентаОбработкаВыбора(
		ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПолеОтражениеДоходаПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаПлатежаПолеОтражениеДоходаПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры
&НаКлиенте
Процедура РасшифровкаПлатежаПослеУдаления(Элемент)
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРозничнаяВыручка

&НаКлиенте
Процедура РозничнаяВыручкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РасходныйКассовыйОрдерФормыКлиент.РозничнаяВыручкаПриНачалеРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.НомерСтроки = РасшифровкаПлатежа.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РозничнаяВыручкаПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаВыручкиПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РозничнаяВыручкаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаВыручкиПриОкончанииРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РозничнаяВыручкаПередУдалением(Элемент, Отказ)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаВыручкиПередУдалением(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура РозничнаяВыручкаСуммаПлатежаПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаВыручкиСуммаПлатежаПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РозничнаяВыручкаСтавкаНДСПриИзменении(Элемент)
	
	РасходныйКассовыйОрдерФормыКлиент.РасшифровкаВыручкиСтавкаНДСПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РозничнаяВыручкаПослеУдаления(Элемент)
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РасшифровкаПлатежаДоговорКонтрагентаПриИзмененииНаСервере(ИдСтроки)
	
	СтрокаПлатеж = РасшифровкаПлатежа.НайтиПоИдентификатору(ИдСтроки);
	
	РасходныйКассовыйОрдерФормы.РасшифровкаПлатежаДоговорКонтрагентаПриИзмененииНаСервере(ЭтотОбъект, СтрокаПлатеж);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПараметрыВРеквизитыФормы()
	
	Объект = Новый Структура;
	Для каждого ПараметрЗаполнения Из Параметры.ПараметрыФормы.Шапка Цикл
		Объект.Вставить(ПараметрЗаполнения.Ключ, ПараметрЗаполнения.Значение);
	КонецЦикла;
	
	Объект.Вставить("ДополнительныеСвойства", Новый Структура()); // Используется при проверке заполнения.

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыФормы.Шапка);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыФормы);
	
	Если ЗначениеЗаполнено(Параметры.ПараметрыФормы.АдресХранилищаРасшифровкаПлатежа) Тогда
		РасшифровкаПлатежа.Загрузить(ПолучитьИзВременногоХранилища(Параметры.ПараметрыФормы.АдресХранилищаРасшифровкаПлатежа));
	КонецЕсли;
	
	Ссылка = Параметры.Ключ;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	РасходныйКассовыйОрдерФормы.УстановитьФункциональныеОпцииФормы(ЭтотОбъект);
	
	// Заполнение реквизитов формы
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ?(ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратРозничномуПокупателю, Элементы.ГруппаРозничнаяВыручка, Элементы.ГруппаРасшифровкаПлатежа);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	ОплатаВВалюте = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Объект.СчетКасса).Валютный
		ИЛИ ЗначениеЗаполнено(Объект.ВалютаДокумента) И Объект.ВалютаДокумента <> ВалютаРегламентированногоУчета;
	РасходныйКассовыйОрдерФормыКлиентСервер.УстановитьПараметрыВыбораДоговораСКонтрагентом(ЭтотОбъект);
	
	РасходныйКассовыйОрдерФормы.УстановитьКурсДокумента(ЭтотОбъект);
	
	Если Объект.БезЗакрывающихДокументов Тогда
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Статья расходов'");
	ИначеЕсли ВестиУчетПоДоговорам И ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств") Тогда
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Договор / Статья расходов'");
	ИначеЕсли ВестиУчетПоДоговорам Тогда
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Договор'");
	Иначе
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Статья расходов'");
	КонецЕсли;
	
	Элементы.РасшифровкаПлатежаГруппаДоговор.Заголовок = ЗаголовокДоговорСтатьяДДС;
	Элементы.РасшифровкаПлатежаСчетНаОплату.Видимость = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ОплатаПоставщику")
		И НЕ Объект.БезЗакрывающихДокументов;
		
	БанкИКассаФормы.ЗаполнитьСписокВыбораПорядкаОтраженияДоходаВТЧ(ЭтотОбъект, "РасшифровкаПлатежа");
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	Если СвойстваПлатежа = Неопределено И РасшифровкаПлатежа.Количество() > 0 Тогда
		СвойстваПлатежа = РасходныйКассовыйОрдерФормыКлиентСервер.ПустаяСтруктураСвойстваПлатежа();
		Если ЗначениеЗаполнено(РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств) Тогда
			СвойстваПлатежа.СтатьяДвиженияДенежныхСредств = РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ВестиУчетПоДоговорам Тогда
		ПараметрыОбъекта = РасходныйКассовыйОрдерФормыКлиентСервер.ТекущиеПараметрыОбъекта(ЭтотОбъект);
		СвойстваПлатежа = РасходныйКассовыйОрдерФормы.СвойстваСтрокРасшифровкиПлатежа(ПараметрыОбъекта, Ложь);
		
		ПараметрыЗаполненияСчетовУчета = РасходныйКассовыйОрдерФормыКлиентСервер.НачатьЗаполнениеСчетовУчета(
			"Контрагент", Объект, СвойстваПлатежа);
		СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(
			Документы.РасходныйКассовыйОрдер,
			ПараметрыЗаполненияСчетовУчета.КЗаполнению,
			Объект,
			"РасшифровкаПлатежа",
			СвойстваПлатежа,
			Ложь);
	КонецЕсли;
	Если Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ОплатаПоставщику
		И НЕ ОплатаВВалюте И ВестиУчетПоДоговорам Тогда
		ПредлагатьНовыйДоговор = РаботаСДоговорамиКонтрагентовБП.ПредлагатьНовыйДоговор(Объект.Организация, Объект.Контрагент);
	КонецЕсли;
	
	// Управление внешним видом формы
	РасходныйКассовыйОрдерФормы.УправлениеЭлементамиОтраженияВУСНСервер(ЭтотОбъект);
	РасходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	РасходныйКассовыйОрдерФормы.ЗаполнитьДобавленныеКолонкиТаблиц(ЭтотОбъект);
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПеренумероватьСтроки(Форма)
	
	Для Сч = 0 По Форма.РасшифровкаПлатежа.Количество() - 1 Цикл
		СтрокаПлатеж = Форма.РасшифровкаПлатежа[Сч];
		СтрокаПлатеж.НомерСтроки = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРасшифровкаПлатежаВоВременноеХранилище()
	
	ТаблицаРасшифровкаПлатежа = РасшифровкаПлатежа.Выгрузить();
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаРасшифровкаПлатежа, УникальныйИдентификатор);
	
	Возврат АдресХранилища;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЗАВЕРШЕНИЕ НЕМОДАЛЬНЫХ ВЫЗОВОВ


&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

