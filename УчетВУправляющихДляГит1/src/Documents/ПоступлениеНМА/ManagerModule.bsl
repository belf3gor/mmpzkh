#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 7, 0);
	
КонецФункции

Процедура ЗаполнитьСчетаУчетаРасчетов(Объект) Экспорт
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
		Объект.Организация,  Объект.Контрагент,  Объект.ДоговорКонтрагента);
	
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
	Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансов;
	
КонецПроцедуры

Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(СтрокаТаблицы, Период) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.НематериальныйАктив) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТаблицы.СтавкаНДС = УчетНДСКлиентСервер.СтавкаНДСПоУмолчанию(Период);
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.НематериальныйАктив,"ВидОбъектаУчета") = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив Тогда
		СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов;
	Иначе
		СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ВыполнениеНИОКР;
	КонецЕсли;
	СтрокаТаблицы.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымНематериальнымАктивам;
	СтрокаТаблицы.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Распределяется;
	
КонецПроцедуры

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьСделка");
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	МассивРеквизитов.Добавить("УдалитьПредъявленСчетФактура");
	МассивРеквизитов.Добавить("УдалитьНомерВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьДатаВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьНДСПредъявленКВычету");
	МассивРеквизитов.Добавить("УдалитьКодВидаОперации");
	МассивРеквизитов.Добавить("УдалитьКодСпособаПолучения");
	
	Возврат МассивРеквизитов;
	
КонецФункции

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ, ДоговорДляОтложенногоПроведения = Неопределено) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	ЭтоОтложенноеПроведение = ЗначениеЗаполнено(ДоговорДляОтложенногоПроведения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭлектронныеУслуги,
	|	Реквизиты.ДоговорКонтрагента.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПоступлениеНМА КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.Ссылка,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	// Заменим обращение к реквизитам договора через переопределяемый функции
	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
								"Реквизиты.ДоговорКонтрагента.ВидДоговора",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаВидДоговора("Реквизиты.ДоговорКонтрагента"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));
								
	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	// Коэффициенты пересчета сумм
	// - из валюты документа в валюту взаиморасчетов 
	// - из валюты взаиморасчетов в рубли
	Реквизиты.Вставить("ОрганизацияПрименяетУСН",
		УчетнаяПолитика.СистемаНалогообложения(Реквизиты.Организация, Реквизиты.Период) = Перечисления.СистемыНалогообложения.Упрощенная);
	Реквизиты.Вставить("НачислятьНДСПоОтгрузке",  УчетнаяПолитика.НачислятьНДСПоОтгрузке(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ВалютаРеглУчета",         Константы.ВалютаРегламентированногоУчета.Получить());
	Реквизиты.Вставить("ЭтоОтложенноеПроведение", ЭтоОтложенноеПроведение);
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаРеглУчета Тогда
		Реквизиты.Вставить("КурсДокумента",      1);
		Реквизиты.Вставить("КратностьДокумента", 1);
		КоэффициентРуб = 1;
	Иначе
		Реквизиты.Вставить("КурсДокумента",      Реквизиты.КурсВзаиморасчетов);
		Реквизиты.Вставить("КратностьДокумента", Реквизиты.КратностьВзаиморасчетов);
		КоэффициентРуб = Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов;
	КонецЕсли;
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаДокумента Тогда
		Реквизиты.Вставить("КурсВзаиморасчетов",      1);
		Реквизиты.Вставить("КратностьВзаиморасчетов", 1);
		КоэффициентВзаиморасчетов = 1;
	Иначе
		Реквизиты.Вставить("КурсВзаиморасчетов",      Реквизиты.КурсВзаиморасчетов);
		Реквизиты.Вставить("КратностьВзаиморасчетов", Реквизиты.КратностьВзаиморасчетов);
		КоэффициентВзаиморасчетов = (Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов) / КоэффициентРуб;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КоэффициентВзаиморасчетов", КоэффициентВзаиморасчетов);
	Запрос.УстановитьПараметр("КоэффициентРуб",            КоэффициентРуб);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",           Реквизиты.ВалютаРеглУчета);
	
	ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаЗачетАвансов(НомераТаблиц)
		+ ТекстЗапросаТаблицаНематериальныеАктивы(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРеквизиты(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРеквизитыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	СтруктураТаблицДокумента = Новый Структура;
	СтруктураТаблицДокумента.Вставить("ТаблицаНематериальныеАктивы" , ПараметрыПроведения.ТаблицаНематериальныеАктивы);
	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);
	
	Возврат ПараметрыПроведения;
	
КонецФункции

// Подготоваливает необходимые таблицы для счет фактуры полученный.
// Данные таблиц необходимы для формирования движений по регистру НДС Предъявленный.
//
// Параметры:
// ТекущийДокумент - документ по которому нужно получить движения
// Отказ - флаг отказа.
//
// Возвращаемое значение:
// Структура - содержатся таблицы по документу.
Функция ПодготовитьПараметрыПроведенияДляСчетФактуры(ТекущийДокумент, Отказ = Ложь) Экспорт

	ПараметрыПроведения = Документы.ПоступлениеНМА.ПодготовитьПараметрыПроведения(ТекущийДокумент, Отказ);
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ (АНАЛИЗ ОСТАТКОВ И Т.П.)
	
	// Таблица взаиморасчетов
	ТаблицаВзаиморасчеты = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ЗачетАвансовТаблицаАвансов, ПараметрыПроведения.ЗачетАвансовРеквизиты, Отказ);
	
	// Таблицы документа с корректировкой сумм по курсу авансов
	СтруктураТаблицДокумента = УчетДоходовРасходов.ПодготовитьТаблицыПоступленияПоКурсуАвансов(ПараметрыПроведения.СтруктураТаблицДокумента,
		ТаблицаВзаиморасчеты, ПараметрыПроведения.ЗачетАвансовРеквизиты);

	Документы.ПоступлениеНМА.ДобавитьКолонкуСодержание(ПараметрыПроведения.ПоступлениеНематериальныхАктивовРеквизиты,
		СтруктураТаблицДокумента.ТаблицаНематериальныеАктивы);

	ПараметрыПроведения.Вставить("ТаблицаВзаиморасчеты", ТаблицаВзаиморасчеты);
	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);
	
	Возврат ПараметрыПроведения;
КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаРеквизиты, ТаблицаЗначений) Экспорт
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	ОбщееСодержание = " по вх.д. " + Реквизиты.НомерВходящегоДокумента 
		+ " от " + Формат(Реквизиты.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
	
	ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = "Поступление " + БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета) 
			+ ОбщееСодержание;
	КонецЦикла;
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Счет-фактура от поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураПолученный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактурПолученных";
	
	// Универсальный передаточный документ за поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД) за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Поступление НМА""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("Реквизиты",                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",         НомераТаблиц.Количество());
	
	// В случае включения НДС в стоимость проводки по НДС не будет в Хозрасчетном, 
	// поэтому для таблицы СуммыПроводок используем НДСПредъявленный.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Поставщик,
	|	Реквизиты.Контрагент.ИНН КАК ИННпоставщика,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Организация.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	Реквизиты.Организация КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом,
	|	"""" КАК Исполнитель,
	|	"""" КАК ИсполнительНаОсновании,
	|	"""" КАК ОтпускПроизвел,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК ЗаЗаказчикаНаОсновании
	|ИЗ
	|	Документ.ПоступлениеНМА КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаНМА.НомерСтроки КАК НомерСтроки,
	|	ТаблицаНМА.НематериальныйАктив КАК Товар,
	|	"""" КАК ТоварКод,
	|	"""" КАК ТоварАртикул,
	|	ВЫРАЗИТЬ(ТаблицаНМА.НематериальныйАктив.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК РегистрационныйНомерТД,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
	|	1 КАК Количество,
	|	ТаблицаНМА.Сумма КАК Цена,
	|	ТаблицаНМА.Сумма КАК Сумма,
	|	ТаблицаНМА.СуммаНДС КАК СуммаНДС,
	|	ТаблицаНМА.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаНМА.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаНМА.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПоступлениеНМА.НематериальныеАктивы КАК ТаблицаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаНМА.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.НематериальныеАктивы))
	|			И (ТаблицаНМА.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &ДокументОснование";

	// Заменим обращение к реквизитам договора через переопределяемые функции.
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));
								
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭлектронныеУслуги,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ПоступлениеНМА КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.ЭлектронныеУслуги,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеНМАНематериальныеАктивы.Ссылка КАК Ссылка,
	|	ПоступлениеНМАНематериальныеАктивы.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеНМАНематериальныеАктивы.НематериальныйАктив КАК Товар,
	|	ПоступлениеНМАНематериальныеАктивы.НематериальныйАктив.Наименование КАК ТоварНаименование,
	|	ПоступлениеНМАНематериальныеАктивы.Сумма КАК ВсегоВал,
	|	ПоступлениеНМАНематериальныеАктивы.СуммаНДС КАК НДСВал,
	|	ПоступлениеНМАНематериальныеАктивы.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.ПоступлениеНМА.НематериальныеАктивы КАК ПоступлениеНМАНематериальныеАктивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ПоступлениеНМАНематериальныеАктивы.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ПоступлениеНМАНематериальныеАктивы.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|ГДЕ
	|	ПоступлениеНМАНематериальныеАктивы.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

// Определяет предъявлена ли сумма НДС по документу
//
// Параметры:
// ТекущийДокумент - документ, сумму НДС которого нужно вычислить
//
// Возвращаемое значение:
// Булево - если сумма НДС в документе не нулевая
Функция НаличиеСуммыНДС(ТекущийДокумент) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ПоступлениеНМАНематериальныеАктивы.СуммаНДС) КАК СуммаНДС,
	|	ПоступлениеНМАНематериальныеАктивы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеНМА.НематериальныеАктивы КАК ПоступлениеНМАНематериальныеАктивы
	|ГДЕ
	|	ПоступлениеНМАНематериальныеАктивы.Ссылка = &СсылкаНаДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеНМАНематериальныеАктивы.Ссылка";

	Запрос.УстановитьПараметр("СсылкаНаДокумент", ТекущийДокумент);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.СуммаНДС > 0;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НематериальныеАктивы.Ссылка,
	|	НематериальныеАктивы.НомерСтроки,
	|	НематериальныеАктивы.НематериальныйАктив,
	|	НематериальныеАктивы.Сумма,
	|	НематериальныеАктивы.СтавкаНДС,
	|	НематериальныеАктивы.СуммаНДС КАК НДС,
	|	НематериальныеАктивы.СчетУчета,
	|	НематериальныеАктивы.СчетУчетаНДС,
	|	НематериальныеАктивы.СпособУчетаНДС,
	|	НематериальныеАктивы.ОтражениеВУСН
	|ИЗ
	|	Документ.ПоступлениеНМА.НематериальныеАктивы КАК НематериальныеАктивы
	|ГДЕ
	|	НематериальныеАктивы.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	НематериальныеАктивы = РезультатЗапроса[0].Выгрузить();
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(НематериальныеАктивы, Реквизиты);
	Запрос.УстановитьПараметр("НематериальныеАктивы",НематериальныеАктивы);

КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаНематериальныеАктивы", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНематериальныеАктивы.Ссылка,
	|	ТаблицаНематериальныеАктивы.НомерСтроки,
	|	ТаблицаНематериальныеАктивы.НематериальныйАктив,
	|	ТаблицаНематериальныеАктивы.Сумма КАК СуммаРуб,
	|	ТаблицаНематериальныеАктивы.НДС КАК СуммаНДСРуб,
	|	ТаблицаНематериальныеАктивы.СуммаВал КАК СуммаВзаиморасчетов,
	|	ТаблицаНематериальныеАктивы.НДСВал КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаНематериальныеАктивы.СтавкаНДС,
	|	ТаблицаНематериальныеАктивы.СчетУчета,
	|	ТаблицаНематериальныеАктивы.СчетУчетаНДС,
	|	ТаблицаНематериальныеАктивы.СпособУчетаНДС,
	|	ТаблицаНематериальныеАктивы.ОтражениеВУСН
	|ПОМЕСТИТЬ ТаблицаНематериальныеАктивы
	|ИЗ
	|	&НематериальныеАктивы КАК ТаблицаНематериальныеАктивы";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаДанныхПоНМА" , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты"       , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаАвансов"  , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНематериальныеАктивы.Ссылка КАК Ссылка,
	|	ТаблицаНематериальныеАктивы.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаНематериальныеАктивы.СуммаРуб КАК СуммаРуб,
	|	ТаблицаНематериальныеАктивы.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаНематериальныеАктивы.СуммаНДСРуб КАК СуммаНДСРуб
	|ПОМЕСТИТЬ ТаблицаДанныхПоНематериальнымАктивам
	|ИЗ
	|	ТаблицаНематериальныеАктивы КАК ТаблицаНематериальныеАктивы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭлектронныеУслуги
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ЭлектронныеУслуги КАК ЭлектронныеУслуги,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	СУММА(ВЫБОР
	|			КОГДА Реквизиты.УчетАгентскогоНДС
	|				ТОГДА ТаблицаДанныхПоНематериальнымАктивам.СуммаВзаиморасчетов - ТаблицаДанныхПоНематериальнымАктивам.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ТаблицаДанныхПоНематериальнымАктивам.СуммаВзаиморасчетов
	|		КОНЕЦ) КАК СуммаВзаиморасчетов,
	|	СУММА(ВЫБОР
	|			КОГДА Реквизиты.УчетАгентскогоНДС
	|				ТОГДА ТаблицаДанныхПоНематериальнымАктивам.СуммаРуб - ТаблицаДанныхПоНематериальнымАктивам.СуммаНДСРуб
	|			ИНАЧЕ ТаблицаДанныхПоНематериальнымАктивам.СуммаРуб
	|		КОНЕЦ) КАК СуммаРуб,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Реквизиты.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхПоНематериальнымАктивам КАК ТаблицаДанныхПоНематериальнымАктивам
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Ссылка,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ЭлектронныеУслуги,
	|	Реквизиты.ПодразделениеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗачетАвансов.НомерСтроки,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	ТаблицаЗачетАвансов.ДокументАванса,
	|	ТаблицаЗачетАвансов.СуммаЗачета
	|ИЗ
	|	Документ.ПоступлениеНМА.ЗачетАвансов КАК ТаблицаЗачетАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаЗачетАвансов.Ссылка = &Ссылка
	|	И Реквизиты.СпособЗачетаАвансов = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.ПоДокументу)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаЗачетАвансов.НомерСтроки";
	
	// Заменим обращение к реквизитам договора через переопределяемые функции.
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"Реквизиты.ДоговорКонтрагента.ВидДоговора",
		БухгалтерскийУчетПереопределяемый.ТекстЗапросаВидДоговора("Реквизиты.ДоговорКонтрагента"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
		БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаТаблицаНематериальныеАктивы(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ТаблицаНематериальныеАктивы", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТаблицаНематериальныеАктивы", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНематериальныеАктивы.Ссылка КАК Ссылка,
	|	""ТаблицаНематериальныеАктивы"" КАК ИмяСписка,
	|	ТаблицаНематериальныеАктивы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаНематериальныеАктивы.НематериальныйАктив КАК НематериальныйАктив,
	|	ТаблицаНематериальныеАктивы.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаНематериальныеАктивы.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаНематериальныеАктивы.СуммаРуб КАК СуммаРуб,
	|	ТаблицаНематериальныеАктивы.СуммаРуб КАК СуммаБУ,
	|	ТаблицаНематериальныеАктивы.СуммаРуб КАК СуммаНУ,
	|	ТаблицаНематериальныеАктивы.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаНематериальныеАктивы.СчетУчета КАК СчетУчета,
	|	ТаблицаНематериальныеАктивы.Ссылка.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	ТаблицаНематериальныеАктивы.Ссылка.Контрагент КАК КорСубконто1,
	|	ТаблицаНематериальныеАктивы.Ссылка.ДоговорКонтрагента КАК КорСубконто2,
	|	ТаблицаНематериальныеАктивы.Ссылка КАК КорСубконто3,
	|	ТаблицаНематериальныеАктивы.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаНематериальныеАктивы.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ТаблицаНематериальныеАктивы.СтавкаНДС КАК СтавкаНДС,
	|	НематериальныеАктивы.ВидОбъектаУчета КАК ВидОбъектаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Поступил) КАК Состояние
	|ИЗ
	|	ТаблицаНематериальныеАктивы КАК ТаблицаНематериальныеАктивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ПО ТаблицаНематериальныеАктивы.НематериальныйАктив = НематериальныеАктивы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРеквизиты(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ПоступлениеНематериальныхАктивовРеквизиты", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПоступлениеНематериальныхАктивовРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРеквизитыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("РеквизитыНДС", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыНДС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ЭлектронныеУслуги КАК ЭлектронныеУслуги,
	|	Реквизиты.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";								

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ПереоценкаВалютныхОстатковРеквизиты", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатковРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#Область ПечатьУПД

// Определяет какие из переданных документов, на основании которых формируется печатная форма
// универсального передаточного документа на печать, можно распечатать без выписки счета-фактуры.
// В конфигурации не поддерживается печать универсального передаточного документа в статусе "2" 
// (только первичный документ), если в документе выделена сумма НДС и сумма налога не относится
// к посреднической деятельности.
//
// Параметры:
//   МассивДокументов - Массив - массив документов, по которым формируется печатная форма.
//
// Возвращаемое значение:
//   ДокументыСчетФактураНеТребуются - Массив - документы, для печати которых не требуется выписка счета-фактуры.
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеНМА.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ПоступлениеНМА.НематериальныеАктивы КАК ПоступлениеНМА
	|ГДЕ
	|	ПоступлениеНМА.Ссылка В(&МассивДокументов)
	|	И ПоступлениеНМА.СуммаНДС > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеНМА.Ссылка КАК Ссылка,
	|	ПоступлениеНМА.Дата КАК Дата,
	|	ПоступлениеНМА.Организация КАК Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.ПоступлениеНМА КАК ПоступлениеНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ПоступлениеНМА.Ссылка)
	|ГДЕ
	|	ПоступлениеНМА.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.ЕстьНДС Тогда
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращает текст запроса для формирования печатной формы универсального передаточного документа
// Параметры:
//   ИспользуетсяПостановлениеНДС981 - Булево - признак применения постановления Правительства РФ №981
//
// Возвращаемое значение:
//   ТекстЗапроса - Строка - текст запроса для формирования печатной формы универсального передаточного документа.
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ИспользуетсяПостановлениеНДС981 = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка) КАК СчетФактура,
	|	ПоступлениеНМА.ДатаВходящегоДокумента КАК Дата,
	|	ПоступлениеНМА.НомерВходящегоДокумента КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	"""" КАК Руководитель,
	|	"""" КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ПоступлениеНМА.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ПоступлениеНМА.Контрагент КАК Контрагент,
	|	ПоступлениеНМА.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	ПоступлениеНМА.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ПоступлениеНМА КАК ПоступлениеНМА
	|ГДЕ
	|	ПоступлениеНМА.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате";
	
	Если ИспользуетсяПостановлениеНДС981 = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате", "ИСТИНА");
	ИначеЕсли ИспользуетсяПостановлениеНДС981 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ПоступлениеНМА.Дата >= ДАТАВРЕМЯ(2017,10,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ПоступлениеНМА.Дата < ДАТАВРЕМЯ(2017,10,1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#Область ОтложенноеПроведение

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Период КАК Дата
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ОбработкаОтложенногоПроведения(Параметры, Отказ) Экспорт
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведения(
		Параметры.Регистратор,
		Отказ,
		Параметры.ДоговорКонтрагента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	

	ТаблицаВзаиморасчетов = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ЗачетАвансовТаблицаАвансов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияЗачетАвансов(
		Параметры,
		ТаблицаВзаиморасчетов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли