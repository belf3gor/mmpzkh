
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВспомогательныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьВыпадающиеДоходы(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент();
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат ТабДокумент;
	КонецЕсли;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.УПЖКХ_ОтчетОВыпадающихДоходах.ПФ_MXL_ОсновнойОтчет");
	
	Для Каждого ТекСсылка Из МассивОбъектов Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.Текст = ПолучитьТекстЗапросаОсновногоОтчета();
		Запрос.УстановитьПараметр("Плательщики",    ТекСсылка.Плательщики);
		Запрос.УстановитьПараметр("ДокументыЛьгот", ТекСсылка.ДокументыЛьгот);
		Запрос.УстановитьПараметр("Скидки",         ТекСсылка.Скидки);
		
		ВыборкаМесяцевКорректировкиИлиНачислений = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаМесяцевКорректировкиИлиНачислений.Следующий() Цикл
			
			// Выводим заголовок отчета.
			ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтчета");
			ОбластьШапки.Параметры.ЗаголовокОтчета = "Отчет о выпадающих доходах от предоставления льгот по оплате"
													+ " жилищно-коммунальных услуг, предоставленных в электронном виде";
			ОбластьШапки.Параметры.Дата = "за " + Формат(НачалоМесяца(?(ЗначениеЗаполнено(ВыборкаМесяцевКорректировкиИлиНачислений.МесяцКорректировки), ВыборкаМесяцевКорректировкиИлиНачислений.МесяцКорректировки, ТекСсылка.Период)), "ДФ=""ММММ гггг 'г.'""");
			ТабДокумент.Вывести(ОбластьШапки);
			
			ВыборкаЖилФондов = ВыборкаМесяцевКорректировкиИлиНачислений.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаЖилФондов.Следующий() Цикл
				
				ВыборкаЛьгот = ВыборкаЖилФондов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаЛьгот.Следующий() Цикл
					
					// заполнение шапки табличной части
					ОбластьШапкиТЧ = Макет.ПолучитьОбласть("ШапкаТЧ");
					ОбластьШапкиТЧ.Параметры.Организация       = ТекСсылка.Организация;
					ОбластьШапкиТЧ.Параметры.ТипЖилФонда       = ВыборкаЖилФондов.ЖилищныйФонд;
					ОбластьШапкиТЧ.Параметры.ЛьготнаяКатегория = ВыборкаЛьгот.Льгота;
					ОбластьШапкиТЧ.Параметры.ДатаПечати        = Формат(ТекСсылка.Дата, "ДЛФ=ДД");
					ОбластьШапкиТЧ.Параметры.ВидОтчета         = ?(ТекСсылка.РежимРаботы = 0, "Отчет", "Корректировка");
					ТабДокумент.Вывести(ОбластьШапкиТЧ);
					
					ВыборкаАдрес = ВыборкаЛьгот.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаАдрес.Следующий() Цикл
						
						// заполнение данных по адресу
						ОбластьАдрес = Макет.ПолучитьОбласть("Адрес");
						ОбластьАдрес.Параметры.Адрес = ВыборкаАдрес.Адрес;
						ТабДокумент.Вывести(ОбластьАдрес);
						
						ВыборкаПлательщиков = ВыборкаАдрес.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						НомерЗаписи = 1;
						ВсегоСодержаниеОсновная      = 0;
						ВсегоСодержаниеИзлишки       = 0;
						ВсегоПлатазаНаем             = 0;
						ВсегоОтоплениеОсновная       = 0;
						ВсегоОтоплениеИзлишки        = 0;
						ВсегоВодоснабжениеХол        = 0;
						ВсегоВодоснабжениеГоряч      = 0;
						ВсегоВодоотведение           = 0;
						ВсегоПодогревВоды            = 0;
						ВсегоГаз                     = 0;
						ВсегоЭлектроэнергия          = 0;
						ВсегоНепредусмотренныеСтатьи = 0;
						ВсегоСуммаКомпенсации        = 0;
						ВсегоОбщаяПлощадь            = 0;
						ВсегоЖилаяПлощадь            = 0;
						ВсегоКоличествоПроживающих   = 0;
						ВсегоКоличествоЛьготников    = 0;
						ВсегоСуммаКорректировки      = 0;
						ПредыдущийЛС = Неопределено;
						
						Пока ВыборкаПлательщиков.Следующий() Цикл
							
							// заполнение данных по плательщику
							ОбластьЗаписей = Макет.ПолучитьОбласть("СтрокаТЧ");
							ОбластьЗаписей.Параметры.Пункт = НомерЗаписи;
							ОбластьЗаписей.Параметры.НомерКвартиры = ВыборкаПлательщиков.Квартира;
							ОбластьЗаписей.Параметры.Жилец = ВыборкаПлательщиков.Плательщик;
							ОбластьЗаписей.Параметры.СНИЛС = ВыборкаПлательщиков.СтраховойНомер;
							ОбластьЗаписей.Параметры.ОснованиеЛьготы = ВыборкаПлательщиков.ВидДокументаЛьготы + " № док."
																	+ ВыборкаПлательщиков.НомерДокументаЛьготы + " сер."
																	+ ВыборкаПлательщиков.СерияДокументаЛьготы
																	+ " дата " + Формат(ВыборкаПлательщиков.ДатаВыдачиДокументаЛьготы, "ДЛФ=Д")
																	+ " выдан " + ВыборкаПлательщиков.КемВыданДокументЛьготы;
							ОбластьЗаписей.Параметры.ОбщаяПлощадь = ВыборкаПлательщиков.ОбщаяПлощадь;
							ОбластьЗаписей.Параметры.ЖилаяПлощадь = ВыборкаПлательщиков.ЖилаяПлощадь;
							ОбластьЗаписей.Параметры.КоличествоПроживающих = ВыборкаПлательщиков.КолвоФактическиПроживающих;
							ОбластьЗаписей.Параметры.КоличествоЛьготников = ВыборкаПлательщиков.КолвоПользующихсяЛьготой;
							ОбластьЗаписей.Параметры.СуммаКорректировки = ВыборкаПлательщиков.СуммаКорректировки;
							ОбластьЗаписей.Параметры.СуммаКомпенсации = ВыборкаПлательщиков.РазмерСкидки;
							ОбластьЗаписей.Параметры.ПлощадьУслуги    = 0; //пока не заполняем
							ОбластьЗаписей.Параметры.ПлощадьОтопление = 0; //пока не заполняем
							ВсегоСуммаКомпенсации        = ВсегоСуммаКомпенсации + ВыборкаПлательщиков.РазмерСкидки;
							ВсегоОбщаяПлощадь            = ?(ВыборкаПлательщиков.ЛицевойСчет = ПредыдущийЛС, ВсегоОбщаяПлощадь, ВсегоОбщаяПлощадь + ВыборкаПлательщиков.ОбщаяПлощадь);
							ВсегоЖилаяПлощадь            = ?(ВыборкаПлательщиков.ЛицевойСчет = ПредыдущийЛС, ВсегоЖилаяПлощадь, ВсегоЖилаяПлощадь + ВыборкаПлательщиков.ЖилаяПлощадь);
							ВсегоКоличествоПроживающих   = ?(ВыборкаПлательщиков.ЛицевойСчет = ПредыдущийЛС, ВсегоКоличествоПроживающих, ВсегоКоличествоПроживающих + ВыборкаПлательщиков.КолвоФактическиПроживающих);
							ВсегоКоличествоЛьготников    = ВсегоКоличествоЛьготников + ВыборкаПлательщиков.КолвоПользующихсяЛьготой;
							ВсегоСуммаКорректировки      = ВсегоСуммаКорректировки + ВыборкаПлательщиков.СуммаКорректировки;
							
							ПредыдущийЛС = ВыборкаПлательщиков.ЛицевойСчет;
							СодержаниеОсновная      = 0;
							СодержаниеИзлишки       = 0;
							ПлатазаНаем             = 0;
							ОтоплениеОсновная       = 0;
							ОтоплениеИзлишки        = 0;
							ВодоснабжениеХол        = 0;
							ВодоснабжениеГоряч      = 0;
							Водоотведение           = 0;
							ПодогревВоды            = 0;
							Газ                     = 0;
							Электроэнергия          = 0;
							НепредусмотренныеСтатьи = 0;
							
							ВыборкаДеталей = ВыборкаПлательщиков.Выбрать();
							Пока ВыборкаДеталей.Следующий() Цикл
								
								// заполнение детальных записей
								Если ВыборкаДеталей.КодУслуги = 2 ИЛИ ВыборкаДеталей.КодУслуги = 43
									ИЛИ ВыборкаДеталей.КодУслуги = 48 Тогда
									СодержаниеОсновная = СодержаниеОсновная + ВыборкаДеталей.РазмерСкидки;
									ВсегоСодержаниеОсновная = ВсегоСодержаниеОсновная + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 45 ИЛИ ВыборкаДеталей.КодУслуги = 47 Тогда
									СодержаниеИзлишки = СодержаниеИзлишки + ВыборкаДеталей.РазмерСкидки;
									ВсегоСодержаниеИзлишки = ВсегоСодержаниеИзлишки + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 1 ИЛИ ВыборкаДеталей.КодУслуги = 153 Тогда
									ПлатазаНаем = ПлатазаНаем + ВыборкаДеталей.РазмерСкидки;
									ВсегоПлатазаНаем = ВсегоПлатазаНаем + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 3 ИЛИ ВыборкаДеталей.КодУслуги = 16
									ИЛИ ВыборкаДеталей.КодУслуги = 33 ИЛИ ВыборкаДеталей.КодУслуги = 73 Тогда
									ОтоплениеОсновная = ОтоплениеОсновная + ВыборкаДеталей.РазмерСкидки;
									ВсегоОтоплениеОсновная = ВсегоОтоплениеОсновная + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 42 ИЛИ ВыборкаДеталей.КодУслуги = 46 Тогда
									ОтоплениеИзлишки = ОтоплениеИзлишки + ВыборкаДеталей.РазмерСкидки;
									ВсегоОтоплениеИзлишки = ВсегоОтоплениеИзлишки + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 5 ИЛИ ВыборкаДеталей.КодУслуги = 35
									ИЛИ ВыборкаДеталей.КодУслуги = 75 Тогда
									ВодоснабжениеХол = ВодоснабжениеХол + ВыборкаДеталей.РазмерСкидки;
									ВсегоВодоснабжениеХол = ВсегоВодоснабжениеХол + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 15 ИЛИ ВыборкаДеталей.КодУслуги = 32
									ИЛИ ВыборкаДеталей.КодУслуги = 67 Тогда
									ВодоснабжениеГоряч = ВодоснабжениеГоряч + ВыборкаДеталей.РазмерСкидки;
									ВсегоВодоснабжениеГоряч = ВсегоВодоснабжениеГоряч + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 36 ИЛИ ВыборкаДеталей.КодУслуги = 56
									ИЛИ ВыборкаДеталей.КодУслуги = 76 Тогда
									Водоотведение = Водоотведение + ВыборкаДеталей.РазмерСкидки;
									ВсегоВодоотведение = ВсегоВодоотведение + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 4 ИЛИ ВыборкаДеталей.КодУслуги = 34
									ИЛИ ВыборкаДеталей.КодУслуги = 74 Тогда
									ПодогревВоды = ПодогревВоды + ВыборкаДеталей.РазмерСкидки;
									ВсегоПодогревВоды = ВсегоПодогревВоды + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 6 Тогда
									Газ = Газ + ВыборкаДеталей.РазмерСкидки;
									ВсегоГаз = ВсегоГаз + ВыборкаДеталей.РазмерСкидки;
								ИначеЕсли ВыборкаДеталей.КодУслуги = 20 ИЛИ ВыборкаДеталей.КодУслуги = 27
									ИЛИ ВыборкаДеталей.КодУслуги = 154 ИЛИ ВыборкаДеталей.КодУслуги = 155
									ИЛИ ВыборкаДеталей.КодУслуги = 157 ИЛИ ВыборкаДеталей.КодУслуги = 158 Тогда
									Электроэнергия = Электроэнергия + ВыборкаДеталей.РазмерСкидки;
									ВсегоЭлектроэнергия = ВсегоЭлектроэнергия + ВыборкаДеталей.РазмерСкидки;
								Иначе
									НепредусмотренныеСтатьи = НепредусмотренныеСтатьи + ВыборкаДеталей.РазмерСкидки;
									ВсегоНепредусмотренныеСтатьи = ВсегоНепредусмотренныеСтатьи + ВыборкаДеталей.РазмерСкидки;
								КонецЕсли;
								
							КонецЦикла;
							
							ОбластьЗаписей.Параметры.СодержаниеОсновная      = СодержаниеОсновная;
							ОбластьЗаписей.Параметры.СодержаниеИзлишки       = СодержаниеИзлишки;
							ОбластьЗаписей.Параметры.ПлатазаНаем             = ПлатазаНаем;
							ОбластьЗаписей.Параметры.ОтоплениеОсновная       = ОтоплениеОсновная;
							ОбластьЗаписей.Параметры.ОтоплениеИзлишки        = ОтоплениеИзлишки;
							ОбластьЗаписей.Параметры.ВодоснабжениеХол        = ВодоснабжениеХол;
							ОбластьЗаписей.Параметры.ВодоснабжениеГоряч      = ВодоснабжениеГоряч;
							ОбластьЗаписей.Параметры.Водоотведение           = Водоотведение;
							ОбластьЗаписей.Параметры.ПодогревВоды            = ПодогревВоды;
							ОбластьЗаписей.Параметры.Газ                     = Газ;
							ОбластьЗаписей.Параметры.Электроэнергия          = Электроэнергия;
							ОбластьЗаписей.Параметры.НепредусмотренныеСтатьи = НепредусмотренныеСтатьи;
							
							ТабДокумент.Вывести(ОбластьЗаписей);
							
							НомерЗаписи = НомерЗаписи + 1;
							
						КонецЦикла;
						
						// заполнение подвала табличной части
						ОбластьПодвалТЧ = Макет.ПолучитьОбласть("ПодвалТЧ");
						ОбластьПодвалТЧ.Параметры.ЛьготникиВсего          = НомерЗаписи - 1;
						ОбластьПодвалТЧ.Параметры.СодержаниеОсновная      = ВсегоСодержаниеОсновная;
						ОбластьПодвалТЧ.Параметры.СодержаниеИзлишки       = ВсегоСодержаниеИзлишки;
						ОбластьПодвалТЧ.Параметры.ПлатазаНаем             = ВсегоПлатазаНаем;
						ОбластьПодвалТЧ.Параметры.ОтоплениеОсновная       = ВсегоОтоплениеОсновная;
						ОбластьПодвалТЧ.Параметры.ОтоплениеИзлишки        = ВсегоОтоплениеИзлишки;
						ОбластьПодвалТЧ.Параметры.ВодоснабжениеХол        = ВсегоВодоснабжениеХол;
						ОбластьПодвалТЧ.Параметры.ВодоснабжениеГоряч      = ВсегоВодоснабжениеГоряч;
						ОбластьПодвалТЧ.Параметры.Водоотведение           = ВсегоВодоотведение;
						ОбластьПодвалТЧ.Параметры.ПодогревВоды            = ВсегоПодогревВоды;
						ОбластьПодвалТЧ.Параметры.Газ                     = ВсегоГаз;
						ОбластьПодвалТЧ.Параметры.Электроэнергия          = ВсегоЭлектроэнергия;
						ОбластьПодвалТЧ.Параметры.НепредусмотренныеСтатьи = ВсегоНепредусмотренныеСтатьи;
						ОбластьПодвалТЧ.Параметры.ОбщаяПлощадь            = ВсегоОбщаяПлощадь;
						ОбластьПодвалТЧ.Параметры.ЖилаяПлощадь            = ВсегоЖилаяПлощадь;
						ОбластьПодвалТЧ.Параметры.КоличествоПроживающих   = ВсегоКоличествоПроживающих;
						ОбластьПодвалТЧ.Параметры.КоличествоЛьготников    = ВсегоКоличествоЛьготников;
						ОбластьПодвалТЧ.Параметры.СуммаКорректировки      = ВсегоСуммаКорректировки;
						ОбластьПодвалТЧ.Параметры.СуммаКомпенсации        = ВсегоСуммаКомпенсации;
						ОбластьПодвалТЧ.Параметры.ПлощадьУслугиВсего      = 0; //пока не заполняем
						ОбластьПодвалТЧ.Параметры.ПлощадьОтоплениеВсего   = 0; //пока не заполняем
						ТабДокумент.Вывести(ОбластьПодвалТЧ);
						
						// заполнение подвала отчета
						ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалОтчета");
						ТабДокумент.Вывести(ОбластьПодвал);
						
						ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						
					КонецЦикла;
					
					УПЖКХ_ТиповыеМетодыСервер.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекСсылка);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1, 2, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьВыпадающиеДоходы()

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьСводнуюВедомость(МассивОбъектов, ОбъектыПечати, Знач ПараметрыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент();
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат ТабДокумент;
	КонецЕсли;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.УПЖКХ_ОтчетОВыпадающихДоходах.ПФ_MXL_СводнаяВедомость");
	
	Для Каждого ТекСсылка Из МассивОбъектов Цикл
		
		Если НЕ ЗначениеЗаполнено(ПараметрыПечати) Тогда
			
			Документ = ТекСсылка.ПолучитьОбъект();
			КодОрганизации = РегистрыСведений.УПЖКХ_НастройкиВыгрузкиВГЦЖС.ПолучитьКодОрганизации(Документ.Дата, Документ.Организация, Ложь);
			ТекстФайла = Документ.ПолучитьТекстФайлаДляВыгрузки(,КодОрганизации);
			
			Структура = Новый Структура;
			Структура.Вставить("ИмяФайла",          "");
			Структура.Вставить("КоличествоЗаписей", СтрЧислоСтрок(ТекстФайла));
			СуммаВФайле = Прав(ТекстФайла, 13);
			
			Попытка
				ИтоговоеЧисло = Число(Лев(СуммаВФайле, 10) + "," + Прав(СуммаВФайле, 3));
			Исключение
				ИтоговоеЧисло = 0;
			КонецПопытки;
			
			Структура.Вставить("Сумма", ИтоговоеЧисло);
			
			ПараметрыПечати = Структура;
			
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим заголовок отчета.
		ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтчета");
		ОбластьШапки.Параметры.ДатаОтчета   = "Отчет предоставлен за: " + Формат(ТекСсылка.Период, "ДФ=""ММММ гггг 'г.'""");
		
		ОбластьШапки.Параметры.Организация  = "Организация: " + ТекСсылка.Организация;
		ОбластьШапки.Параметры.ВидДокумента = "Вид документа: " + ?(ТекСсылка.РежимРаботы = 0, "отчет", "корректировка");
		ТабДокумент.Вывести(ОбластьШапки);
		
		// Выводим шапку табличной части.
		ОбластьШапкиТЧ = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьШапкиТЧ);
		
		Если ПараметрыПечати.Свойство("МассивПараметров") Тогда
			Для Каждого ТекПараметрПечати ИЗ ПараметрыПечати.МассивПараметров Цикл
				// Выводим записи таблицы.
				ОбластьЗаписи = Макет.ПолучитьОбласть("ЗаписиТаблицы");
				Если ЗначениеЗаполнено(ТекПараметрПечати) Тогда
					ЗаполнитьЗначенияСвойств(ОбластьЗаписи.Параметры, ТекПараметрПечати);
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьЗаписи);
			КонецЦикла;
		Иначе
			// Выводим записи таблицы.
			ОбластьЗаписи = Макет.ПолучитьОбласть("ЗаписиТаблицы");
			Если ЗначениеЗаполнено(ПараметрыПечати) Тогда
				ЗаполнитьЗначенияСвойств(ОбластьЗаписи.Параметры, ПараметрыПечати);
			КонецЕсли;
			ТабДокумент.Вывести(ОбластьЗаписи);
		КонецЕсли;
		
		// Выводим подвал
		ОбластьЗаписи = Макет.ПолучитьОбласть("Подвал");
		ОбластьЗаписи.Параметры.ДатаОтчета = Формат(ТекСсылка.Дата, "ДФ=""дд ММММ гггг 'г.'""");
		ТабДокумент.Вывести(ОбластьЗаписи);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УПЖКХ_ТиповыеМетодыСервер.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекСсылка);
		
		ПараметрыПечати = Неопределено;
		
	КонецЦикла;
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1, 2, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьВыпадающиеДоходы()

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьИтоговыхДанных(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент();
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат ТабДокумент;
	КонецЕсли;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.УПЖКХ_ОтчетОВыпадающихДоходах.ПФ_MXL_ИтоговыеДанные");
	
	Для Каждого ТекСсылка Из МассивОбъектов Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим заголовок отчета.
		ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтчета");
		ОбластьШапки.Параметры.Дата = "за " + Формат(НачалоМесяца(ТекСсылка.Период), "ДФ=""ММММ гггг 'г.'""");
		ТабДокумент.Вывести(ОбластьШапки);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ПолучитьТекстЗапросаИтоговойВедомости();
		Запрос.УстановитьПараметр("Плательщики",    ТекСсылка.Плательщики.Выгрузить());
		Запрос.УстановитьПараметр("ДокументыЛьгот", ТекСсылка.ДокументыЛьгот.Выгрузить());
		Запрос.УстановитьПараметр("Скидки",         ТекСсылка.Скидки.Выгрузить());
		
		// заполнение шапки табличной части
		ОбластьШапкиТЧ = Макет.ПолучитьОбласть("ШапкаТЧ");
		ОбластьШапкиТЧ.Параметры.Организация = ТекСсылка.Организация;
		ОбластьШапкиТЧ.Параметры.ДатаПечати  = Формат(ТекСсылка.Дата, "ДЛФ=ДД");
		ОбластьШапкиТЧ.Параметры.ВидОтчета   = ?(ТекСсылка.РежимРаботы = 0, "Отчет", "Корректировка");
		ТабДокумент.Вывести(ОбластьШапкиТЧ);
		
		ВыборкаЖилФондов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ВсегоСодЖилья        = 0;
		ВсегоСодЖильяИзлишки = 0;
		ВсегоНаем            = 0;
		ВсегоВывозОтходов    = 0;
		ВсегоОтопление       = 0;
		ВсегоВодоснабжение   = 0;
		ВсегоПодогревВоды    = 0;
		ВсегоГаз             = 0;
		ВсегоЭлектроэнергия  = 0;
		ВсегоСкидки          = 0;
		ВсегоКорректировки   = 0;
		
		Пока ВыборкаЖилФондов.Следующий() Цикл
			
			// заполнение области жилищного фонда
			ОбластьЖилФонда = Макет.ПолучитьОбласть("ЖилФонд");
			ОбластьЖилФонда.Параметры.КодЖилФонда = "Тип жилого фонда: (код " + ВыборкаЖилФондов.КодЖилФонд + ")";
			ОбластьЖилФонда.Параметры.ЖилФонд     = ВыборкаЖилФондов.ЖилищныйФонд;
			ТабДокумент.Вывести(ОбластьЖилФонда);
			
			ВыборкаЛьгот = ВыборкаЖилФондов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЛьгот.Следующий() Цикл
				
				// заполнение области льготы
				ОбластьЛьготы = Макет.ПолучитьОбласть("Льгота");
				ОбластьЛьготы.Параметры.КодЛьготы = "Льготная категория: (код " + ВыборкаЛьгот.КодЛьготы + ")";
				ОбластьЛьготы.Параметры.Льгота    = ВыборкаЛьгот.Льгота;
				ТабДокумент.Вывести(ОбластьЛьготы);
				
				ВыборкаПлательщиков = ВыборкаЛьгот.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				СодЖилья        = 0;
				СодЖильяИзлишки = 0;
				Наем            = 0;
				ВывозОтходов    = 0;
				Отопление       = 0;
				Водоснабжение   = 0;
				ПодогревВоды    = 0;
				Газ             = 0;
				Электроэнергия  = 0;
				ФактПлощадь     = 0;
				РассчПлощадь    = 0;
				ПользующихсяЛьготой = 0;
				ТекПлательщик       = Неопределено;
				ТекЛС               = Неопределено;
				
				Пока ВыборкаПлательщиков.Следующий() Цикл
					
					ВыборкаДеталей = ВыборкаПлательщиков.Выбрать();
					
					Пока ВыборкаДеталей.Следующий() Цикл
						
						// заполнение детальных записей
						Если ВыборкаДеталей.КодУслуги = 2 ИЛИ ВыборкаДеталей.КодУслуги = 43
						 ИЛИ ВыборкаДеталей.КодУслуги = 48 Тогда
							СодЖилья = СодЖилья + ВыборкаДеталей.РазмерСкидки;
							ВсегоСодЖилья = ВсегоСодЖилья + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 45 ИЛИ ВыборкаДеталей.КодУслуги = 47 Тогда
							СодЖильяИзлишки = СодЖильяИзлишки + ВыборкаДеталей.РазмерСкидки;
							ВсегоСодЖильяИзлишки = ВсегоСодЖильяИзлишки + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 1 ИЛИ ВыборкаДеталей.КодУслуги = 153 Тогда
							Наем = Наем + ВыборкаДеталей.РазмерСкидки;
							ВсегоНаем = ВсегоНаем + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 7 Тогда
							ВывозОтходов = ВывозОтходов + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 3 ИЛИ ВыборкаДеталей.КодУслуги = 16
							  ИЛИ ВыборкаДеталей.КодУслуги = 33 ИЛИ ВыборкаДеталей.КодУслуги = 42
							  ИЛИ ВыборкаДеталей.КодУслуги = 46 ИЛИ ВыборкаДеталей.КодУслуги = 73 Тогда
							Отопление = Отопление + ВыборкаДеталей.РазмерСкидки;
							ВсегоОтопление = ВсегоОтопление + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 5 ИЛИ ВыборкаДеталей.КодУслуги = 15
							  ИЛИ ВыборкаДеталей.КодУслуги = 32 ИЛИ ВыборкаДеталей.КодУслуги = 35
							  ИЛИ ВыборкаДеталей.КодУслуги = 36 ИЛИ ВыборкаДеталей.КодУслуги = 56
							  ИЛИ ВыборкаДеталей.КодУслуги = 67 ИЛИ ВыборкаДеталей.КодУслуги = 75
							  ИЛИ ВыборкаДеталей.КодУслуги = 76 Тогда
							Водоснабжение = Водоснабжение + ВыборкаДеталей.РазмерСкидки;
							ВсегоВодоснабжение = ВсегоВодоснабжение + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 4 ИЛИ ВыборкаДеталей.КодУслуги = 34
							  ИЛИ ВыборкаДеталей.КодУслуги = 74 Тогда
							ПодогревВоды = ПодогревВоды + ВыборкаДеталей.РазмерСкидки;
							ВсегоПодогревВоды = ВсегоПодогревВоды + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 6 Тогда
							Газ = Газ + ВыборкаДеталей.РазмерСкидки;
							ВсегоГаз = ВсегоГаз + ВыборкаДеталей.РазмерСкидки;
						ИначеЕсли ВыборкаДеталей.КодУслуги = 20 ИЛИ ВыборкаДеталей.КодУслуги = 27
							  ИЛИ ВыборкаДеталей.КодУслуги = 154 ИЛИ ВыборкаДеталей.КодУслуги = 155
							  ИЛИ ВыборкаДеталей.КодУслуги = 157 ИЛИ ВыборкаДеталей.КодУслуги = 158 Тогда
							Электроэнергия = Электроэнергия + ВыборкаДеталей.РазмерСкидки;
							ВсегоЭлектроэнергия = ВсегоЭлектроэнергия + ВыборкаДеталей.РазмерСкидки;
						КонецЕсли;
						
						ФактПлощадь = ?(ВыборкаДеталей.ЛицевойСчет = ТекЛС, ФактПлощадь,
						                  ФактПлощадь + ВыборкаДеталей.ОбщаяПлощадь);
						ТекЛС = ВыборкаДеталей.ЛицевойСчет;
						
						РассчПлощадь = ?(ЗначениеЗаполнено(ВыборкаДеталей.Услуга) И ВыборкаДеталей.Услуга.СпособРасчета =
						                 Перечисления.КВП_СпособыРасчета.ПоПлощади,
						                 РассчПлощадь + ВыборкаДеталей.Площадь, РассчПлощадь);
						
					КонецЦикла;
					
					ПользующихсяЛьготой = ПользующихсяЛьготой + ВыборкаПлательщиков.КолвоПользующихсяЛьготой;
					
				КонецЦикла;
				
				// заполним область детальных записей
				ОбластьЗаписей = Макет.ПолучитьОбласть("СтрокаТЧ");
				ОбластьЗаписей.Параметры.КолВладельцевЛьгот = ВыборкаЛьгот.Плательщик;
				ОбластьЗаписей.Параметры.КолЛьготников      = ПользующихсяЛьготой;
				ОбластьЗаписей.Параметры.ФактПлощадь     = ФактПлощадь;
				ОбластьЗаписей.Параметры.РассчПлощадь    = РассчПлощадь;
				ОбластьЗаписей.Параметры.СодЖилья        = СодЖилья;
				ОбластьЗаписей.Параметры.СодЖильяИзлишки = СодЖильяИзлишки;
				ОбластьЗаписей.Параметры.Наем            = Наем;
				ОбластьЗаписей.Параметры.ВывозОтходов    = ВывозОтходов;
				ОбластьЗаписей.Параметры.Отопление       = Отопление;
				ОбластьЗаписей.Параметры.Водоснабжение   = Водоснабжение;
				ОбластьЗаписей.Параметры.ПодогревВоды    = ПодогревВоды;
				ОбластьЗаписей.Параметры.Газ             = Газ;
				ОбластьЗаписей.Параметры.Электроэнергия  = Электроэнергия;
				ОбластьЗаписей.Параметры.Компенсация     = ВыборкаЛьгот.РазмерСкидки;
				ОбластьЗаписей.Параметры.Изменения       = ВыборкаЛьгот.СуммаКорректировки;
				ТабДокумент.Вывести(ОбластьЗаписей);
				
				ВсегоСкидки          = ВсегоСкидки + ВыборкаЛьгот.РазмерСкидки;
				ВсегоКорректировки   = ВсегоКорректировки + ВыборкаЛьгот.СуммаКорректировки;
				
			КонецЦикла;
			
		КонецЦикла;
		
		// заполнение подвала табличной части
		ОбластьПодвалТЧ = Макет.ПолучитьОбласть("ПодвалТЧ");
		ОбластьПодвалТЧ.Параметры.ВсегоСодЖилья        = ВсегоСодЖилья;
		ОбластьПодвалТЧ.Параметры.ВсегоСодЖильяИзлишки = ВсегоСодЖильяИзлишки;
		ОбластьПодвалТЧ.Параметры.ВсегоНаем            = ВсегоНаем;
		ОбластьПодвалТЧ.Параметры.ВсегоВывозОтходов    = ВсегоВывозОтходов;
		ОбластьПодвалТЧ.Параметры.ВсегоОтопление       = ВсегоОтопление;
		ОбластьПодвалТЧ.Параметры.ВсегоВодоснабжение   = ВсегоВодоснабжение;
		ОбластьПодвалТЧ.Параметры.ВсегоПодогревВоды    = ВсегоПодогревВоды;
		ОбластьПодвалТЧ.Параметры.ВсегоГаз             = ВсегоГаз;
		ОбластьПодвалТЧ.Параметры.ВсегоЭлектроэнергия  = ВсегоЭлектроэнергия;
		ОбластьПодвалТЧ.Параметры.ВсегоКомпенсация     = ВсегоСкидки;
		ОбластьПодвалТЧ.Параметры.ВсегоИзменения       = ВсегоКорректировки;
		ТабДокумент.Вывести(ОбластьПодвалТЧ);
		
		// заполнение подвала отчета
		ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалОтчета");
		ТабДокумент.Вывести(ОбластьПодвал);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УПЖКХ_ТиповыеМетодыСервер.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекСсылка);
		
	КонецЦикла;
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1, 2, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьВыпадающиеДоходы()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую;
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать;
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы;
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, 
	КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОсновнойОтчет") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "ОсновнойОтчет", 
																   "ОсновнойОтчет",
																   ПечатьВыпадающиеДоходы(МассивОбъектов,
																   						ОбъектыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "СводнуюВедомость") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "СводнуюВедомость", 
																   "СводнуюВедомость",
																   ПечатьСводнуюВедомость(МассивОбъектов,
																   						ОбъектыПечати,
																						ПараметрыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИтоговыеДанные") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "ИтоговыеДанные", 
																   "ИтоговыеДанные",
																   ПечатьИтоговыхДанных(МассивОбъектов,
																   						ОбъектыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает текст запроса по табличным частям документа.
Функция ПолучитьТекстЗапросаОсновногоОтчета()
	
	Текст = 
	"ВЫБРАТЬ
	|	Плательщики.Плательщик,
	|	Плательщики.ЛицевойСчет,
	|	Плательщики.СтраховойНомер,
	|	Плательщики.Фамилия,
	|	Плательщики.Имя,
	|	Плательщики.Отчество,
	|	Плательщики.КодУлицы,
	|	Плательщики.Улица + "" дом "" + Плательщики.Дом + ВЫБОР
	|		КОГДА НЕ Плательщики.Корпус = """"
	|			ТОГДА "" корп. "" + Плательщики.Корпус
	|		ИНАЧЕ """"
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ Плательщики.Строение = """"
	|			ТОГДА "" строение "" + Плательщики.Строение
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Адрес,
	|	Плательщики.Корпус,
	|	Плательщики.Строение,
	|	Плательщики.Квартира,
	|	Плательщики.Телефон,
	|	Плательщики.КодЖилФонд,
	|	Плательщики.ЖилищныйФонд,
	|	Плательщики.КодТипЗаселения,
	|	Плательщики.КодФормаСобственности,
	|	Плательщики.КолвоПостоянноПроживающих,
	|	Плательщики.КолвоФактическиПроживающих,
	|	Плательщики.ОбщаяПлощадь,
	|	Плательщики.ЖилаяПлощадь,
	|	Плательщики.Пол,
	|	Плательщики.ДатаРождения,
	|	Плательщики.КодВидДокументаЛичности,
	|	Плательщики.СерияДокументаЛичности,
	|	Плательщики.НомерДокументаЛичности,
	|	Плательщики.ДатаВыдачиДокументаЛичности,
	|	Плательщики.ОрганизацияДокументаЛичности
	|ПОМЕСТИТЬ втПлательщиков
	|ИЗ
	|	&Плательщики КАК Плательщики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыЛьгот.Плательщик,
	|	ДокументыЛьгот.КодЛьготы,
	|	ДокументыЛьгот.Льгота,
	|	ДокументыЛьгот.КодВидДокументаЛьготы,
	|	ДокументыЛьгот.ВидДокументаЛьготы,
	|	ДокументыЛьгот.СерияДокументаЛьготы,
	|	ДокументыЛьгот.НомерДокументаЛьготы,
	|	ДокументыЛьгот.ДатаВыдачиДокументаЛьготы,
	|	ДокументыЛьгот.ДатаОкончанияДокументаЛьготы,
	|	ДокументыЛьгот.КемВыданДокументЛьготы
	|ПОМЕСТИТЬ втДокументовЛьгот
	|ИЗ
	|	&ДокументыЛьгот КАК ДокументыЛьгот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Скидки.Плательщик,
	|	Скидки.Льгота,
	|	Скидки.ДатаСкидки,
	|	Скидки.КодУслуги,
	|	Скидки.КолвоПользующихсяЛьготой,
	|	Скидки.Объем,
	|	Скидки.Площадь,
	|	Скидки.РазмерСкидки,
	|	Скидки.СуммаКорректировки,
	|	Скидки.ФактическийОбъем,
	|	Скидки.ПорядокРасчетаУслуги,
	|	Скидки.МесяцКорректировки
	|ПОМЕСТИТЬ втСкидок
	|ИЗ
	|	&Скидки КАК Скидки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПлательщиков.Плательщик КАК Плательщик,
	|	ТаблицаПлательщиков.ЛицевойСчет,
	|	ТаблицаПлательщиков.СтраховойНомер КАК СтраховойНомер,
	|	ТаблицаПлательщиков.Фамилия,
	|	ТаблицаПлательщиков.Имя,
	|	ТаблицаПлательщиков.Отчество,
	|	ТаблицаПлательщиков.КодУлицы,
	|	ТаблицаПлательщиков.Адрес КАК Адрес,
	|	ТаблицаПлательщиков.Корпус,
	|	ТаблицаПлательщиков.Строение,
	|	ТаблицаПлательщиков.Квартира КАК Квартира,
	|	ТаблицаПлательщиков.Телефон,
	|	ТаблицаПлательщиков.КодЖилФонд КАК КодЖилФонд,
	|	ТаблицаПлательщиков.ЖилищныйФонд КАК ЖилищныйФонд,
	|	ТаблицаПлательщиков.КодТипЗаселения,
	|	ТаблицаПлательщиков.КодФормаСобственности,
	|	ТаблицаПлательщиков.КолвоПостоянноПроживающих,
	|	ТаблицаПлательщиков.КолвоФактическиПроживающих КАК КолвоФактическиПроживающих,
	|	ТаблицаПлательщиков.ОбщаяПлощадь КАК ОбщаяПлощадь,
	|	ТаблицаПлательщиков.ЖилаяПлощадь КАК ЖилаяПлощадь,
	|	ТаблицаПлательщиков.Пол,
	|	ТаблицаПлательщиков.ДатаРождения,
	|	ТаблицаПлательщиков.КодВидДокументаЛичности,
	|	ТаблицаПлательщиков.СерияДокументаЛичности,
	|	ТаблицаПлательщиков.НомерДокументаЛичности,
	|	ТаблицаПлательщиков.ДатаВыдачиДокументаЛичности,
	|	ТаблицаПлательщиков.ОрганизацияДокументаЛичности,
	|	ТаблицаДокументовЛьгот.КодЛьготы КАК КодЛьготы,
	|	ТаблицаДокументовЛьгот.Льгота КАК Льгота,
	|	ТаблицаДокументовЛьгот.КодВидДокументаЛьготы,
	|	ТаблицаДокументовЛьгот.ВидДокументаЛьготы КАК ВидДокументаЛьготы,
	|	ТаблицаДокументовЛьгот.СерияДокументаЛьготы КАК СерияДокументаЛьготы,
	|	ТаблицаДокументовЛьгот.НомерДокументаЛьготы КАК НомерДокументаЛьготы,
	|	ТаблицаДокументовЛьгот.ДатаВыдачиДокументаЛьготы КАК ДатаВыдачиДокументаЛьготы,
	|	ТаблицаДокументовЛьгот.ДатаОкончанияДокументаЛьготы,
	|	ТаблицаДокументовЛьгот.КемВыданДокументЛьготы КАК КемВыданДокументЛьготы,
	|	ТаблицаСкидок.ДатаСкидки,
	|	ТаблицаСкидок.КодУслуги,
	|	ТаблицаСкидок.КолвоПользующихсяЛьготой КАК КолвоПользующихсяЛьготой,
	|	ТаблицаСкидок.Объем КАК Объем,
	|	ТаблицаСкидок.Площадь КАК Площадь,
	|	ТаблицаСкидок.РазмерСкидки КАК РазмерСкидки,
	|	ТаблицаСкидок.СуммаКорректировки КАК СуммаКорректировки,
	|	ТаблицаСкидок.ФактическийОбъем КАК ФактическийОбъем,
	|	ТаблицаСкидок.ПорядокРасчетаУслуги,
	|	ТаблицаСкидок.МесяцКорректировки
	|ИЗ
	|	втПлательщиков КАК ТаблицаПлательщиков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДокументовЛьгот КАК ТаблицаДокументовЛьгот
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСкидок КАК ТаблицаСкидок
	|			ПО (ТаблицаСкидок.Плательщик = ТаблицаДокументовЛьгот.Плательщик)
	|				И (ТаблицаСкидок.Льгота = ТаблицаДокументовЛьгот.Льгота)
	|		ПО ТаблицаПлательщиков.Плательщик = ТаблицаДокументовЛьгот.Плательщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЛицевойСчет
	|ИТОГИ
	|	МАКСИМУМ(Плательщик),
	|	МАКСИМУМ(ЛицевойСчет),
	|	МАКСИМУМ(СтраховойНомер),
	|	МАКСИМУМ(Квартира),
	|	МАКСИМУМ(КолвоФактическиПроживающих),
	|	МАКСИМУМ(ОбщаяПлощадь),
	|	МАКСИМУМ(ЖилаяПлощадь),
	|	МАКСИМУМ(ВидДокументаЛьготы),
	|	МАКСИМУМ(СерияДокументаЛьготы),
	|	МАКСИМУМ(НомерДокументаЛьготы),
	|	МАКСИМУМ(ДатаВыдачиДокументаЛьготы),
	|	МАКСИМУМ(КемВыданДокументЛьготы),
	|	МАКСИМУМ(КолвоПользующихсяЛьготой),
	|	СУММА(РазмерСкидки),
	|	СУММА(СуммаКорректировки)
	|ПО
	|	МесяцКорректировки,
	|	ЖилищныйФонд,
	|	Льгота,
	|	Адрес,
	|	Плательщик";
	
	Возврат Текст;
	
КонецФункции // ПолучитьТекстЗапросаОсновногоОтчета()

// Функция возвращает текст запроса итоговой ведомости.
Функция ПолучитьТекстЗапросаИтоговойВедомости()
	
	Текст = 
	"ВЫБРАТЬ
	|	Плательщики.Плательщик,
	|	Плательщики.ЛицевойСчет,
	|	Плательщики.КодЖилФонд,
	|	Плательщики.ЖилищныйФонд,
	|	Плательщики.ОбщаяПлощадь
	|ПОМЕСТИТЬ втПлательщиков
	|ИЗ
	|	&Плательщики КАК Плательщики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыЛьгот.КодЛьготы,
	|	ДокументыЛьгот.Льгота
	|ПОМЕСТИТЬ втДокументовЛьгот
	|ИЗ
	|	&ДокументыЛьгот КАК ДокументыЛьгот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Скидки.Плательщик,
	|	Скидки.Льгота,
	|	Скидки.КодУслуги,
	|	Скидки.Услуга,
	|	Скидки.КолвоПользующихсяЛьготой,
	|	Скидки.Объем,
	|	Скидки.Площадь,
	|	Скидки.РазмерСкидки,
	|	Скидки.СуммаКорректировки,
	|	Скидки.ФактическийОбъем
	|ПОМЕСТИТЬ втСкидок
	|ИЗ
	|	&Скидки КАК Скидки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПлательщиков.Плательщик КАК Плательщик,
	|	ТаблицаПлательщиков.ЛицевойСчет КАК ЛицевойСчет,
	|	ТаблицаПлательщиков.КодЖилФонд КАК КодЖилФонд,
	|	ТаблицаПлательщиков.ЖилищныйФонд КАК ЖилищныйФонд,
	|	ТаблицаПлательщиков.ОбщаяПлощадь КАК ОбщаяПлощадь,
	|	ТаблицаДокументовЛьгот.КодЛьготы КАК КодЛьготы,
	|	ТаблицаДокументовЛьгот.Льгота КАК Льгота,
	|	ТаблицаСкидок.КодУслуги,
	|	ТаблицаСкидок.Услуга,
	|	ЕСТЬNULL(ТаблицаСкидок.КолвоПользующихсяЛьготой, 0) КАК КолвоПользующихсяЛьготой,
	|	ТаблицаСкидок.Объем КАК Объем,
	|	ТаблицаСкидок.Площадь КАК Площадь,
	|	ТаблицаСкидок.РазмерСкидки КАК РазмерСкидки,
	|	ТаблицаСкидок.СуммаКорректировки КАК СуммаКорректировки,
	|	ТаблицаСкидок.ФактическийОбъем КАК ФактическийОбъем
	|ИЗ
	|	втПлательщиков КАК ТаблицаПлательщиков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСкидок КАК ТаблицаСкидок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДокументовЛьгот КАК ТаблицаДокументовЛьгот
	|			ПО (ТаблицаДокументовЛьгот.Льгота = ТаблицаСкидок.Льгота)
	|		ПО ТаблицаПлательщиков.Плательщик = ТаблицаСкидок.Плательщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодЖилФонд,
	|	КодЛьготы,
	|	ЛицевойСчет
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Плательщик),
	|	МАКСИМУМ(КодЖилФонд),
	|	МАКСИМУМ(КодЛьготы),
	|	СУММА(РазмерСкидки),
	|	СУММА(СуммаКорректировки),
	|	МАКСИМУМ(КолвоПользующихсяЛьготой)
	|ПО
	|	ЖилищныйФонд,
	|	Льгота,
	|	Плательщик";
	
	Возврат Текст;
	
КонецФункции // ПолучитьТекстЗапросаИтоговойВедомости()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли