#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 13, 0);
	
КонецФункции

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	Если ИмяТабличнойЧасти = "ИнвентарьИХозяйственныеПринадлежности" Тогда
		Возврат;
	КонецЕсли;
	
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	УникальныеЗначенияПартий = Новый Соответствие;
	МассивПартий = Новый Массив;
	
	Для каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ПартияМатериаловВЭксплуатации)
			И ТипЗнч(СтрокаТаблицы.ПартияМатериаловВЭксплуатации) = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
			
			Если УникальныеЗначенияПартий[СтрокаТаблицы.ПартияМатериаловВЭксплуатации] = Неопределено Тогда
				МассивПартий.Добавить(СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
				УникальныеЗначенияПартий.Вставить(СтрокаТаблицы.ПартияМатериаловВЭксплуатации, Истина);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СоответствиеСкладов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивПартий, "Склад");
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		
		ДанныеОбъекта.Склад = СоответствиеСкладов.Получить(СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(
			ДанныеОбъекта.Организация, СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
		
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТаблицы, ИмяТабличнойЧасти, СчетаУчета);
		
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчета") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если (ИмяТабличнойЧасти = "Спецодежда") ИЛИ (ИмяТабличнойЧасти = "Спецоснастка") Тогда
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетПередачи) Тогда
			СтрокаТабличнойЧасти.СчетПередачи = СчетаУчета.СчетПередачи;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;

	Запрос.УстановитьПараметр("СинонимСпецодежда",   НСтр("ru = 'Спецодежда'"));
	Запрос.УстановитьПараметр("СинонимСпецоснастка", НСтр("ru = 'Спецоснастка'"));
	Запрос.УстановитьПараметр("СинонимИнвентарь",    НСтр("ru = 'Инвентарь и хозяйственные принадлежности'"));

	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаСписаниеСпецодеждыСпецоснастки(НомераТаблиц)
		+ ТекстЗапросаСписаниеИнвентаря(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции

Процедура ДобавитьКолонкуСодержаниеСписаниеСпецодеждыСпецоснастки(ТаблицаЗначений) Экспорт

	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;

	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = "Списание " + БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетПередачи);
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьКолонкуСодержаниеСписаниеИнвентаря(ТаблицаЗначений) Экспорт

	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;

	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = "Списание инвентаря";
	КонецЦикла;

КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт на списание (МБ-8)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МБ8";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание (МБ-8)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Списание материалов из эксплуатации""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ8") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"МБ8", "МБ-8 (Акт на списание)",
			ПечатьМБ8(МассивОбъектов, ОбъектыПечати), , "Документ.СписаниеМатериаловИзЭксплуатации.ПФ_MXL_МБ8");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры // Печать()

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "СпособСписанияРасходов");
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаСписаниеСпецодеждыСпецоснастки(НомераТаблиц)

	НомераТаблиц.Вставить("СписаниеСпецодеждыСпецоснасткиРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеСпецодеждыСпецоснасткиТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.СпособСписанияРасходов = ЗНАЧЕНИЕ(Перечисление.СпособыСписанияРасходов.ВДебетСчетаУказанногоВДокументе)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СписыватьВДебетСчетаУказанногоВДокументе
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Спецодежда"" КАК ИмяСписка,
	|	&СинонимСпецодежда КАК СинонимСписка,
	|	МИНИМУМ(ТаблицаСпецодежда.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаСпецодежда.Номенклатура,
	|	ТаблицаСпецодежда.ПартияМатериаловВЭксплуатации,
	|	ТаблицаСпецодежда.ФизЛицо,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицаСпецодежда.СчетПередачи,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный) КАК СчетМЦ,
	|	Реквизиты.СчетДт КАК СчетРасходов,
	|	Реквизиты.СубконтоДт1 КАК СубконтоРасходов1,
	|	Реквизиты.СубконтоДт2 КАК СубконтоРасходов2,
	|	Реквизиты.СубконтоДт3 КАК СубконтоРасходов3,
	|	1 КАК ВидСубконтоРасходов1,
	|	2 КАК ВидСубконтоРасходов2,
	|	3 КАК ВидСубконтоРасходов3,
	|	СУММА(ТаблицаСпецодежда.Количество) КАК Количество
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации.Спецодежда КАК ТаблицаСпецодежда
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеМатериаловИзЭксплуатации КАК Реквизиты
	|		ПО ТаблицаСпецодежда.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСпецодежда.Номенклатура,
	|	ТаблицаСпецодежда.ПартияМатериаловВЭксплуатации,
	|	ТаблицаСпецодежда.ФизЛицо,
	|	Реквизиты.ПодразделениеОрганизации,
	|	ТаблицаСпецодежда.СчетПередачи,
	|	Реквизиты.СчетДт,
	|	Реквизиты.СубконтоДт1,
	|	Реквизиты.СубконтоДт2,
	|	Реквизиты.СубконтоДт3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Спецоснастка"",
	|	&СинонимСпецоснастка,
	|	МИНИМУМ(ТаблицаСпецоснастка.НомерСтроки),
	|	ТаблицаСпецоснастка.Номенклатура,
	|	ТаблицаСпецоснастка.ПартияМатериаловВЭксплуатации,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка),
	|	Реквизиты.ПодразделениеОрганизации,
	|	ТаблицаСпецоснастка.СчетПередачи,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный),
	|	Реквизиты.СчетДт,
	|	Реквизиты.СубконтоДт1,
	|	Реквизиты.СубконтоДт2,
	|	Реквизиты.СубконтоДт3,
	|	1,
	|	2,
	|	3,
	|	СУММА(ТаблицаСпецоснастка.Количество)
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации.Спецоснастка КАК ТаблицаСпецоснастка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеМатериаловИзЭксплуатации КАК Реквизиты
	|		ПО ТаблицаСпецоснастка.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСпецоснастка.Номенклатура,
	|	ТаблицаСпецоснастка.ПартияМатериаловВЭксплуатации,
	|	Реквизиты.ПодразделениеОрганизации,
	|	ТаблицаСпецоснастка.СчетПередачи,
	|	Реквизиты.СчетДт,
	|	Реквизиты.СубконтоДт1,
	|	Реквизиты.СубконтоДт2,
	|	Реквизиты.СубконтоДт3
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСписаниеИнвентаря(НомераТаблиц)

	НомераТаблиц.Вставить("СписаниеИнвентаряРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеИнвентаряТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ИнвентарьИХозяйственныеПринадлежности"" КАК ИмяСписка,
	|	&СинонимИнвентарь КАК СинонимСписка,
	|	МИНИМУМ(ТаблицаИнвентарь.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаИнвентарь.Номенклатура,
	|	ТаблицаИнвентарь.ПартияМатериаловВЭксплуатации,
	|	ТаблицаИнвентарь.ФизЛицо,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации) КАК СчетМЦ,
	|	СУММА(ТаблицаИнвентарь.Количество) КАК КоличествоМЦ
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации.ИнвентарьИХозяйственныеПринадлежности КАК ТаблицаИнвентарь
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеМатериаловИзЭксплуатации КАК Реквизиты
	|		ПО ТаблицаИнвентарь.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИнвентарь.Номенклатура,
	|	ТаблицаИнвентарь.ПартияМатериаловВЭксплуатации,
	|	ТаблицаИнвентарь.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Функция формирует табличный документ унифицированной формы МБ-8
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме МБ-8 (акт на списание).
//
Функция ПечатьМБ8(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ПечатьТорговыхДокументов.УстановитьМинимальныеПоляПечати(ТабличныйДокумент);
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериаловИзЭксплуатации_МБ8";

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыМБ8();

	ДокументыДляПечати = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока ДокументыДляПечати.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеМатериаловИзЭксплуатации.ПФ_MXL_МБ8");

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		// Выводим общие реквизиты шапки
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокументыДляПечати.ЮрФизЛицо, ДокументыДляПечати.ДатаСоставления);

		ШапкаТаблицы     = Макет.ПолучитьОбласть("Шапка");
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		Итого            = Макет.ПолучитьОбласть("Итого");
		Подвал           = Макет.ПолучитьОбласть("Подвал");
		
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(ДокументыДляПечати.Организация, ДокументыДляПечати.ДатаДокумента, ДокументыДляПечати.Подразделение);

		ШапкаТаблицы.Параметры.Заполнить(ДокументыДляПечати);
		ШапкаТаблицы.Параметры.ПредставлениеОрганизации   		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
		ШапкаТаблицы.Параметры.ОрганизацияПоОКПО          		= СведенияОбОрганизации.КодПоОКПО;
		ШапкаТаблицы.Параметры.НомерДокумента             		= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументыДляПечати.Номер);
		ШапкаТаблицы.Параметры.ПредставлениеПодразделения 		= ДокументыДляПечати.Подразделение;
		ШапкаТаблицы.Параметры.РасшифровкаПодписиРуководителя	= ОтветственныеЛица.РуководительПредставление;
		ШапкаТаблицы.Параметры.ДолжностьРуководителя			= ОтветственныеЛица.РуководительДолжностьПредставление;

		ТабличныйДокумент.Вывести(ШапкаТаблицы);

		// Инициализация номера страницы
		НомерСтраницы = 1;

		// Выводим заголовок таблицы
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);

		// Инициализация итогов в документе
		ИтогоКоличество                   = 0;
		ИтогоСуммаПервоначальнойСтоимости = 0;
		ИтогоСуммаПогашеннойСтоимости     = 0;

		НомерСтроки = 0;

		// Выводим многострочную часть документа
		Строка = Макет.ПолучитьОбласть("Строка");
		ПоследняяСтрока = Макет.ПолучитьОбласть("ПоследняяСтрока");

		Пока ДокументыДляПечати.Следующий() Цикл

			Если ДокументыДляПечати.Номенклатура = Null Тогда 
				Продолжить;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;

			Строка.Параметры.Заполнить(ДокументыДляПечати);

			Строка.Параметры.ТоварНаименование        = СокрЛП(ДокументыДляПечати.ТоварНаименование);
			Строка.Параметры.Цена                     = ?(ДокументыДляПечати.Количество = 0, 0, ДокументыДляПечати.СуммаПервоначальнойСтоимости / ДокументыДляПечати.Количество);
			Строка.Параметры.СуммаПогашеннойСтоимости = ДокументыДляПечати.СуммаПервоначальнойСтоимости - ДокументыДляПечати.СуммаОстаточнойСтоимости;

			Если НЕ (ДокументыДляПечати.ДатаДокумента = Неопределено) И НЕ (ДокументыДляПечати.ДатаВводаВЭксплуатацию = Неопределено) Тогда

				КоличествоЛет     = Год(ДокументыДляПечати.ДатаДокумента) - Год(ДокументыДляПечати.ДатаВводаВЭксплуатацию);
				КоличествоМесяцев = Месяц(ДокументыДляПечати.ДатаДокумента) - Месяц(ДокументыДляПечати.ДатаВводаВЭксплуатацию);

				Строка.Параметры.СрокСлужбы = Строка(КоличествоЛет * 12 + КоличествоМесяцев) + " мес.";

			КонецЕсли;
			
			// Проверим, помещается ли строка с данными и последняя строка (или итоги) на странице.
			СтрокаТаблицы = Новый Массив;
			СтрокаТаблицы.Добавить(Строка);
			Если НЕ (НомерСтроки = ДокументыДляПечати.Количество()) Тогда
				СтрокаТаблицы.Добавить(ПоследняяСтрока);
			Иначе
				СтрокаТаблицы.Добавить(Итого);
			КонецЕсли;

			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаТаблицы) Тогда

				НомерСтраницы = НомерСтраницы + 1;

				ТабличныйДокумент.Вывести(ПоследняяСтрока);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);

			КонецЕсли;

			ТабличныйДокумент.Вывести(Строка);

			ИтогоКоличество                   = ИтогоКоличество                   + Строка.Параметры.Количество;
			ИтогоСуммаПервоначальнойСтоимости = ИтогоСуммаПервоначальнойСтоимости + Строка.Параметры.СуммаПервоначальнойСтоимости;
			ИтогоСуммаПогашеннойСтоимости     = ИтогоСуммаПогашеннойСтоимости     + Строка.Параметры.СуммаПогашеннойСтоимости;

		КонецЦикла;

		// Выводим итоги по документу
		Итого.Параметры.ИтогоСуммаПервоначальнойСтоимости          = ИтогоСуммаПервоначальнойСтоимости;
		Итого.Параметры.ИтогоСуммаПогашеннойСтоимости              = ИтогоСуммаПогашеннойСтоимости;
		Итого.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(ИтогоКоличество, ,",,,,,,,,0");
		ТабличныйДокумент.Вывести(Итого);

		// Проверим, помещается ли подвал
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Подвал) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		// Выводим подвал
		Подвал.Параметры.Заполнить(ДокументыДляПечати);
		ТабличныйДокумент.Вывести(Подвал);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДокументыДляПечати.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьДокумента()

Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыМБ8()

	ТекстЗапроса = "
		|// 1. Движения документа по забалансовому счету Спецодежда (МЦ.02)
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор КАК Регистратор,
		|	СУММА(ХозрасчетныйДвиженияССубконтоЗБ.Сумма) КАК ПервоначальнаяСтоимость,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3 КАК СубконтоКт3
		|ПОМЕСТИТЬ ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецодеждаПервоначальнаяСтоимость
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|		,
		|		,
		|		Регистратор В (&МассивОбъектов)
		|			И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный),
		|		,
		|	) КАК ХозрасчетныйДвиженияССубконтоЗБ
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3
		|;
		|
		|// 2. Движения документа по забалансовому счету Спецоснастка (МЦ.03)
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор КАК Регистратор,
		|	СУММА(ХозрасчетныйДвиженияССубконтоЗБ.Сумма) КАК ПервоначальнаяСтоимость,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3 КАК СубконтоКт3
		|ПОМЕСТИТЬ ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецоснасткаПервоначальнаяСтоимость
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|		,
		|		,
		|		Регистратор В (&МассивОбъектов)
		|			И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный),
		|		,
		|	) КАК ХозрасчетныйДвиженияССубконтоЗБ
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3
		|;
		|
		|// 3. Движения документа по забалансовому счету Инвентарь (МЦ.04)
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор КАК Регистратор,
		|	СУММА(ХозрасчетныйДвиженияССубконтоЗБ.Сумма) КАК ПервоначальнаяСтоимость,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3 КАК СубконтоКт3
		|ПОМЕСТИТЬ ВТ_ДвиженияДокументаПоЗабалансовымСчетамИнвентарьПервоначальнаяСтоимость
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|		,
		|		,
		|		Регистратор В (&МассивОбъектов)
		|			И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации),
		|		,
		|	) КАК ХозрасчетныйДвиженияССубконтоЗБ
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3
		|;
		|
		|// 4. Движения документа - остаточная стоимость Спецодежды
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор КАК Регистратор,
		|	СУММА(ХозрасчетныйДвиженияССубконтоЗБ.Сумма) КАК ОстаточнаяСтоимость,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3 КАК СубконтоКт3
		|ПОМЕСТИТЬ ВТ_ДвиженияДокументаСпецодеждаОстаточнаяСтоимость
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|		,
		|		,
		|		Регистратор В (&МассивОбъектов)
		|			И (СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный))
		|			И (КоличествоКт <> 0),
		|		,
		|	) КАК ХозрасчетныйДвиженияССубконтоЗБ
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3
		|;
		|
		|// 5. Движения документа - остаточная стоимость Спецоснастки
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор,
		|	СУММА(ХозрасчетныйДвиженияССубконтоЗБ.Сумма) КАК ОстаточнаяСтоимость,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3 КАК СубконтоКт3
		|ПОМЕСТИТЬ ВТ_ДвиженияДокументаСпецоснасткаОстаточнаяСтоимость
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|		,
		|		,
		|		Регистратор В (&МассивОбъектов)
		|			И (СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный))
		|			И (КоличествоКт <> 0),
		|		,
		|	) КАК ХозрасчетныйДвиженияССубконтоЗБ
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконтоЗБ.Регистратор,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконтоЗБ.СубконтоКт3
		|;
		|
		|
		|// 6. Табличная часть Спецодежда
		|ВЫБРАТЬ
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.Ссылка КАК Регистратор,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.Ссылка.Организация КАК Организация,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.Номенклатура КАК Номенклатура,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.ФизЛицо КАК ФизЛицо,
		|	СУММА(СписаниеМатериаловИзЭксплуатацииСпецодежда.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ТЧ_Спецодежда
		|ИЗ
		|	Документ.СписаниеМатериаловИзЭксплуатации.Спецодежда КАК СписаниеМатериаловИзЭксплуатацииСпецодежда
		|ГДЕ
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.Ссылка В (&МассивОбъектов)
		|СГРУППИРОВАТЬ ПО
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.Ссылка,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.Ссылка.Организация,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.Номенклатура,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.ФизЛицо,
		|	СписаниеМатериаловИзЭксплуатацииСпецодежда.ПартияМатериаловВЭксплуатации
		|;
		|
		|// 7. Табличная часть Спецоснастка
		|ВЫБРАТЬ
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.Ссылка КАК Регистратор,
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.Ссылка.Организация КАК Организация,
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.Номенклатура КАК Номенклатура,
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	СУММА(СписаниеМатериаловИзЭксплуатацииСпецоснастка.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ТЧ_Спецоснастка
		|ИЗ
		|	Документ.СписаниеМатериаловИзЭксплуатации.Спецоснастка КАК СписаниеМатериаловИзЭксплуатацииСпецоснастка
		|ГДЕ
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.Ссылка В (&МассивОбъектов)
		|СГРУППИРОВАТЬ ПО
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.Ссылка,
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.Ссылка.Организация,
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.Номенклатура,
		|	СписаниеМатериаловИзЭксплуатацииСпецоснастка.ПартияМатериаловВЭксплуатации
		|;
		|
		|// 8. Табличная часть Инвентарь
		|ВЫБРАТЬ
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.Ссылка КАК Регистратор,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.Ссылка.Организация КАК Организация,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.Номенклатура КАК Номенклатура,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.ФизЛицо КАК ФизЛицо,
		|	СУММА(СписаниеМатериаловИзЭксплуатацииИнвентарь.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ТЧ_Инвентарь
		|ИЗ
		|	Документ.СписаниеМатериаловИзЭксплуатации.ИнвентарьИХозяйственныеПринадлежности КАК СписаниеМатериаловИзЭксплуатацииИнвентарь
		|ГДЕ
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.Ссылка В (&МассивОбъектов)
		|СГРУППИРОВАТЬ ПО
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.Ссылка,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.Ссылка.Организация,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.Номенклатура,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.ФизЛицо,
		|	СписаниеМатериаловИзЭксплуатацииИнвентарь.ПартияМатериаловВЭксплуатации
		|;
		|
		|// 9. Спецодежда со всеми стоимостями
		|ВЫБРАТЬ
		|	ВТ_ТЧ_Спецодежда.Регистратор КАК Регистратор,
		|	ВТ_ТЧ_Спецодежда.Организация КАК Организация,
		|	ВТ_ТЧ_Спецодежда.Номенклатура КАК Номенклатура,
		|	ВТ_ТЧ_Спецодежда.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ВТ_ТЧ_Спецодежда.ФизЛицо КАК ФизЛицо,
		|	СУММА(ВТ_ТЧ_Спецодежда.Количество) КАК Количество,
		|	ЕСТЬNULL(СУММА(ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецодеждаПервоначальнаяСтоимость.ПервоначальнаяСтоимость), 0) КАК ПервоначальнаяСтоимость,
		|	ЕСТЬNULL(СУММА(ВТ_ДвиженияДокументаСпецодеждаОстаточнаяСтоимость.ОстаточнаяСтоимость), 0) КАК ОстаточнаяСтоимость
		|ПОМЕСТИТЬ ВТ_СпецодеждаСоСтоимостями
		|ИЗ
		|	ВТ_ТЧ_Спецодежда
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецодеждаПервоначальнаяСтоимость
		|	ПО (ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецодеждаПервоначальнаяСтоимость.Регистратор = ВТ_ТЧ_Спецодежда.Регистратор)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецодеждаПервоначальнаяСтоимость.СубконтоКт1 = ВТ_ТЧ_Спецодежда.Номенклатура)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецодеждаПервоначальнаяСтоимость.СубконтоКт2 = ВТ_ТЧ_Спецодежда.ПартияМатериаловВЭксплуатации)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецодеждаПервоначальнаяСтоимость.СубконтоКт3 = ВТ_ТЧ_Спецодежда.ФизЛицо)
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТ_ДвиженияДокументаСпецодеждаОстаточнаяСтоимость
		|	ПО (ВТ_ДвиженияДокументаСпецодеждаОстаточнаяСтоимость.Регистратор = ВТ_ТЧ_Спецодежда.Регистратор)
		|		И (ВТ_ДвиженияДокументаСпецодеждаОстаточнаяСтоимость.СубконтоКт1 = ВТ_ТЧ_Спецодежда.Номенклатура)
		|		И (ВТ_ДвиженияДокументаСпецодеждаОстаточнаяСтоимость.СубконтоКт2 = ВТ_ТЧ_Спецодежда.ПартияМатериаловВЭксплуатации)
		|		И (ВТ_ДвиженияДокументаСпецодеждаОстаточнаяСтоимость.СубконтоКт3 = ВТ_ТЧ_Спецодежда.ФизЛицо)
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЧ_Спецодежда.Регистратор,
		|	ВТ_ТЧ_Спецодежда.Организация,
		|	ВТ_ТЧ_Спецодежда.Номенклатура,
		|	ВТ_ТЧ_Спецодежда.ПартияМатериаловВЭксплуатации,
		|	ВТ_ТЧ_Спецодежда.ФизЛицо
		|;
		|
		|// 10. Спецоснастка со всеми стоимостями
		|ВЫБРАТЬ
		|	ВТ_ТЧ_Спецоснастка.Регистратор КАК Регистратор,
		|	ВТ_ТЧ_Спецоснастка.Организация КАК Организация,
		|	ВТ_ТЧ_Спецоснастка.Номенклатура КАК Номенклатура,
		|	ВТ_ТЧ_Спецоснастка.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизЛицо,
		|	СУММА(ВТ_ТЧ_Спецоснастка.Количество) КАК Количество,
		|	ЕСТЬNULL(СУММА(ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецоснасткаПервоначальнаяСтоимость.ПервоначальнаяСтоимость), 0) КАК ПервоначальнаяСтоимость,
		|	ЕСТЬNULL(СУММА(ВТ_ДвиженияДокументаСпецоснасткаОстаточнаяСтоимость.ОстаточнаяСтоимость), 0) КАК ОстаточнаяСтоимость
		|ПОМЕСТИТЬ ВТ_СпецоснасткаСоСтоимостями
		|ИЗ
		|	ВТ_ТЧ_Спецоснастка
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецоснасткаПервоначальнаяСтоимость
		|	ПО (ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецоснасткаПервоначальнаяСтоимость.Регистратор = ВТ_ТЧ_Спецоснастка.Регистратор)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецоснасткаПервоначальнаяСтоимость.СубконтоКт1 = ВТ_ТЧ_Спецоснастка.Номенклатура)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамСпецоснасткаПервоначальнаяСтоимость.СубконтоКт2 = ВТ_ТЧ_Спецоснастка.ПартияМатериаловВЭксплуатации)
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТ_ДвиженияДокументаСпецоснасткаОстаточнаяСтоимость
		|	ПО (ВТ_ДвиженияДокументаСпецоснасткаОстаточнаяСтоимость.Регистратор = ВТ_ТЧ_Спецоснастка.Регистратор)
		|		И (ВТ_ДвиженияДокументаСпецоснасткаОстаточнаяСтоимость.СубконтоКт1 = ВТ_ТЧ_Спецоснастка.Номенклатура)
		|		И (ВТ_ДвиженияДокументаСпецоснасткаОстаточнаяСтоимость.СубконтоКт2 = ВТ_ТЧ_Спецоснастка.ПартияМатериаловВЭксплуатации)
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЧ_Спецоснастка.Регистратор,
		|	ВТ_ТЧ_Спецоснастка.Организация,
		|	ВТ_ТЧ_Спецоснастка.Номенклатура,
		|	ВТ_ТЧ_Спецоснастка.ПартияМатериаловВЭксплуатации
		|;
		|
		|// 11. Инвентарь со всеми стоимостями
		|ВЫБРАТЬ
		|	ВТ_ТЧ_Инвентарь.Регистратор КАК Регистратор,
		|	ВТ_ТЧ_Инвентарь.Организация КАК Организация,
		|	ВТ_ТЧ_Инвентарь.Номенклатура КАК Номенклатура,
		|	ВТ_ТЧ_Инвентарь.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ВТ_ТЧ_Инвентарь.ФизЛицо КАК ФизЛицо,
		|	СУММА(ВТ_ТЧ_Инвентарь.Количество) КАК Количество,
		|	ЕСТЬNULL(СУММА(ВТ_ДвиженияДокументаПоЗабалансовымСчетамИнвентарьПервоначальнаяСтоимость.ПервоначальнаяСтоимость), 0) КАК ПервоначальнаяСтоимость,
		|	0 КАК ОстаточнаяСтоимость
		|ПОМЕСТИТЬ ВТ_ИнвентарьСоСтоимостями
		|ИЗ
		|	ВТ_ТЧ_Инвентарь
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТ_ДвиженияДокументаПоЗабалансовымСчетамИнвентарьПервоначальнаяСтоимость
		|	ПО (ВТ_ДвиженияДокументаПоЗабалансовымСчетамИнвентарьПервоначальнаяСтоимость.Регистратор = ВТ_ТЧ_Инвентарь.Регистратор)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамИнвентарьПервоначальнаяСтоимость.СубконтоКт1 = ВТ_ТЧ_Инвентарь.Номенклатура)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамИнвентарьПервоначальнаяСтоимость.СубконтоКт2 = ВТ_ТЧ_Инвентарь.ПартияМатериаловВЭксплуатации)
		|		И (ВТ_ДвиженияДокументаПоЗабалансовымСчетамИнвентарьПервоначальнаяСтоимость.СубконтоКт3 = ВТ_ТЧ_Инвентарь.ФизЛицо)
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЧ_Инвентарь.Регистратор,
		|	ВТ_ТЧ_Инвентарь.Организация,
		|	ВТ_ТЧ_Инвентарь.Номенклатура,
		|	ВТ_ТЧ_Инвентарь.ПартияМатериаловВЭксплуатации,
		|	ВТ_ТЧ_Инвентарь.ФизЛицо
		|;
		|
		|// 12. Все табличные части со всеми стоимостями
		|ВЫБРАТЬ
		|	1                                                        КАК ПорядокТаблицы,
		|	ВТ_СпецодеждаСоСтоимостями.Регистратор                   КАК Регистратор,
		|	ВТ_СпецодеждаСоСтоимостями.Организация                   КАК Организация,
		|	ВТ_СпецодеждаСоСтоимостями.Номенклатура                  КАК Номенклатура,
		|	ВТ_СпецодеждаСоСтоимостями.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ВТ_СпецодеждаСоСтоимостями.ФизЛицо                       КАК ФизЛицо,
		|	ВТ_СпецодеждаСоСтоимостями.Количество                    КАК Количество,
		|	ВТ_СпецодеждаСоСтоимостями.ПервоначальнаяСтоимость       КАК ПервоначальнаяСтоимость,
		|	ВТ_СпецодеждаСоСтоимостями.ОстаточнаяСтоимость           КАК ОстаточнаяСтоимость
		|ПОМЕСТИТЬ ВТ_ВсеТЧ_ВсеСтоимости
		|ИЗ
		|	ВТ_СпецодеждаСоСтоимостями
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2                                                          КАК ПорядокТаблицы,
		|	ВТ_СпецоснасткаСоСтоимостями.Регистратор                   КАК Регистратор,
		|	ВТ_СпецоснасткаСоСтоимостями.Организация                   КАК Организация,
		|	ВТ_СпецоснасткаСоСтоимостями.Номенклатура                  КАК Номенклатура,
		|	ВТ_СпецоснасткаСоСтоимостями.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ВТ_СпецоснасткаСоСтоимостями.ФизЛицо                       КАК ФизЛицо,
		|	ВТ_СпецоснасткаСоСтоимостями.Количество                    КАК Количество,
		|	ВТ_СпецоснасткаСоСтоимостями.ПервоначальнаяСтоимость       КАК ПервоначальнаяСтоимость,
		|	ВТ_СпецоснасткаСоСтоимостями.ОстаточнаяСтоимость           КАК ОстаточнаяСтоимость
		|ИЗ
		|	ВТ_СпецоснасткаСоСтоимостями
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3                                                       КАК ПорядокТаблицы,
		|	ВТ_ИнвентарьСоСтоимостями.Регистратор                   КАК Регистратор,
		|	ВТ_ИнвентарьСоСтоимостями.Организация                   КАК Организация,
		|	ВТ_ИнвентарьСоСтоимостями.Номенклатура                  КАК Номенклатура,
		|	ВТ_ИнвентарьСоСтоимостями.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ВТ_ИнвентарьСоСтоимостями.ФизЛицо                       КАК ФизЛицо,
		|	ВТ_ИнвентарьСоСтоимостями.Количество                    КАК Количество,
		|	ВТ_ИнвентарьСоСтоимостями.ПервоначальнаяСтоимость       КАК ПервоначальнаяСтоимость,
		|	ВТ_ИнвентарьСоСтоимостями.ОстаточнаяСтоимость           КАК ОстаточнаяСтоимость
		|ИЗ
		|	ВТ_ИнвентарьСоСтоимостями
		|;
		|
		|// 13. Запрос со всеми полями 'через точку' и с условными полями 'ВЫБОР'
		|ВЫБРАТЬ
		|	ВТ_ВсеТЧ_ВсеСтоимости.ПорядокТаблицы                              КАК ПорядокТаблицы,
		|	ВТ_ВсеТЧ_ВсеСтоимости.Регистратор                                 КАК Регистратор,
		|	ВТ_ВсеТЧ_ВсеСтоимости.Организация                                 КАК Организация,
		|	ВТ_ВсеТЧ_ВсеСтоимости.Номенклатура                                КАК Номенклатура,
		|	ВТ_ВсеТЧ_ВсеСтоимости.Номенклатура.НаименованиеПолное             КАК ТоварНаименование,
		|	ВЫБОР
		|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
		|			ТОГДА ВТ_ВсеТЧ_ВсеСтоимости.Номенклатура.Артикул
		|		ИНАЧЕ ВТ_ВсеТЧ_ВсеСтоимости.Номенклатура.Код
		|	КОНЕЦ                                                             КАК НоменклатурныйНомер,
		|	ВТ_ВсеТЧ_ВсеСтоимости.Номенклатура.ЕдиницаИзмерения.Наименование  КАК ЕдиницаИзмеренияНаименование,
		|	ВТ_ВсеТЧ_ВсеСтоимости.Номенклатура.ЕдиницаИзмерения.Код           КАК ЕдиницаИзмеренияКод,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, НЕОПРЕДЕЛЕНО) КАК ДатаВводаВЭксплуатацию,
		|	ВТ_ВсеТЧ_ВсеСтоимости.Количество                                  КАК Количество,
		|	ВТ_ВсеТЧ_ВсеСтоимости.ПервоначальнаяСтоимость                     КАК ПервоначальнаяСтоимость,
		|	ВТ_ВсеТЧ_ВсеСтоимости.ОстаточнаяСтоимость                         КАК ОстаточнаяСтоимость
		|ПОМЕСТИТЬ ВТ_ВсеДанные
		|ИЗ
		|	ВТ_ВсеТЧ_ВсеСтоимости
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|	ПО ВТ_ВсеТЧ_ВсеСтоимости.ПартияМатериаловВЭксплуатации = ДанныеПервичныхДокументов.Документ
		|		И ВТ_ВсеТЧ_ВсеСтоимости.Организация = ДанныеПервичныхДокументов.Организация
		|;
		|
		|// Основной запрос, без расшифровки документа
		|ВЫБРАТЬ
		|	ВТ_ВсеДанные.Регистратор                                 КАК Регистратор,
		|	ВТ_ВсеДанные.Организация                                 КАК Организация,
		|	ВТ_ВсеДанные.Номенклатура                                КАК Номенклатура,
		|	ВТ_ВсеДанные.ТоварНаименование                           КАК ТоварНаименование,
		|	ВТ_ВсеДанные.НоменклатурныйНомер                         КАК НоменклатурныйНомер,
		|	ВТ_ВсеДанные.ЕдиницаИзмеренияНаименование                КАК ЕдиницаИзмеренияНаименование,
		|	ВТ_ВсеДанные.ЕдиницаИзмеренияКод                         КАК ЕдиницаИзмеренияКод,
		|	ВТ_ВсеДанные.ДатаВводаВЭксплуатацию                      КАК ДатаВводаВЭксплуатацию,
		|	СУММА(ЕСТЬNULL(ВТ_ВсеДанные.Количество, 0))              КАК Количество,
		|	СУММА(ЕСТЬNULL(ВТ_ВсеДанные.ПервоначальнаяСтоимость, 0)) КАК СуммаПервоначальнойСтоимости,
		|	СУММА(ЕСТЬNULL(ВТ_ВсеДанные.ОстаточнаяСтоимость, 0))     КАК СуммаОстаточнойСтоимости
		|ПОМЕСТИТЬ
		|	ВТ_ВсеДанныеДляПечати
		|ИЗ
		|	ВТ_ВсеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеДанные.Регистратор,
		|	ВТ_ВсеДанные.Организация,
		|	ВТ_ВсеДанные.Номенклатура,
		|	ВТ_ВсеДанные.ТоварНаименование,
		|	ВТ_ВсеДанные.НоменклатурныйНомер,
		|	ВТ_ВсеДанные.ЕдиницаИзмеренияНаименование,
		|	ВТ_ВсеДанные.ЕдиницаИзмеренияКод,
		|	ВТ_ВсеДанные.ДатаВводаВЭксплуатацию
		|;
		|
		|// Основной запрос, с расшифровкой полей документа через точку
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеДляПечати.Регистратор                                 КАК Регистратор,
		|	ВТ_ВсеДанныеДляПечати.Регистратор                                 КАК Ссылка,
		|	СписаниеМатериаловИзЭксплуатации.Номер                            КАК Номер,
		|	СписаниеМатериаловИзЭксплуатации.Дата                             КАК ДатаСоставления,
		|	СписаниеМатериаловИзЭксплуатации.Дата                             КАК ДатаДокумента,
		|	ВТ_ВсеДанныеДляПечати.Организация                                 КАК Организация,
		|	ВТ_ВсеДанныеДляПечати.Организация                                 КАК ЮрФизЛицо,
		|	ВТ_ВсеДанныеДляПечати.Организация                                 КАК Руководители,
		|	СписаниеМатериаловИзЭксплуатации.ПодразделениеОрганизации         КАК Подразделение,
		|	ВЫБОР
		|		КОГДА СписаниеМатериаловИзЭксплуатации.СпособСписанияРасходов = ЗНАЧЕНИЕ(Перечисление.СпособыСписанияРасходов.ВДебетСчетаУказанногоВДокументе)
		|			ТОГДА СписаниеМатериаловИзЭксплуатации.СчетДт.Код
		|		ИНАЧЕ """"
		|	КОНЕЦ                                                             КАК Счет,
		|	ВТ_ВсеДанныеДляПечати.Номенклатура                                КАК Номенклатура,
		|	ВТ_ВсеДанныеДляПечати.ТоварНаименование                           КАК ТоварНаименование,
		|	ВТ_ВсеДанныеДляПечати.НоменклатурныйНомер                         КАК НоменклатурныйНомер,
		|	ВТ_ВсеДанныеДляПечати.ЕдиницаИзмеренияНаименование                КАК ЕдиницаИзмеренияНаименование,
		|	ВТ_ВсеДанныеДляПечати.ЕдиницаИзмеренияКод                         КАК ЕдиницаИзмеренияКод,
		|	ВТ_ВсеДанныеДляПечати.ДатаВводаВЭксплуатацию                      КАК ДатаВводаВЭксплуатацию,
		|	ВТ_ВсеДанныеДляПечати.Количество                                  КАК Количество,
		|	ВТ_ВсеДанныеДляПечати.СуммаПервоначальнойСтоимости                КАК СуммаПервоначальнойСтоимости,
		|	ВТ_ВсеДанныеДляПечати.СуммаОстаточнойСтоимости                    КАК СуммаОстаточнойСтоимости
		|ИЗ
		|	ВТ_ВсеДанныеДляПечати
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеМатериаловИзЭксплуатации КАК СписаниеМатериаловИзЭксплуатации
		|	ПО ВТ_ВсеДанныеДляПечати.Регистратор = СписаниеМатериаловИзЭксплуатации.Ссылка
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСоставления,
		|	Регистратор,
		|	ДатаВводаВЭксплуатацию УБЫВ,
		|	ТоварНаименование,
		|	Номенклатура";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#КонецЕсли