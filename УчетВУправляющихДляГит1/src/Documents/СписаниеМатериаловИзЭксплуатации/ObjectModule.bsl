#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.СписаниеМатериаловИзЭксплуатации.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	Документы.СписаниеМатериаловИзЭксплуатации.ДобавитьКолонкуСодержаниеСписаниеСпецодеждыСпецоснастки(
		ПараметрыПроведения.СписаниеСпецодеждыСпецоснасткиТаблица);
	Документы.СписаниеМатериаловИзЭксплуатации.ДобавитьКолонкуСодержаниеСписаниеИнвентаря(
		ПараметрыПроведения.СписаниеИнвентаряТаблица);

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);

	УчетМатериаловВЭксплуатации.СформироватьДвиженияСписаниеСпецодеждыСпецоснасткиИзЭксплуатации(
		ПараметрыПроведения.СписаниеСпецодеждыСпецоснасткиТаблица,
		ПараметрыПроведения.СписаниеСпецодеждыСпецоснасткиРеквизиты,
		Движения, Отказ);

	УчетМатериаловВЭксплуатации.СформироватьДвиженияСписаниеИнвентаряИзЭксплуатации(
		ПараметрыПроведения.СписаниеИнвентаряТаблица,
		ПараметрыПроведения.СписаниеИнвентаряРеквизиты,
		Движения, Отказ);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если Спецоснастка.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
	КонецЕсли;

	Если Спецодежда.Количество() = 0 ИЛИ Спецоснастка.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособСписанияРасходов");
	КонецЕсли;

	Если СпособСписанияРасходов <> Перечисления.СпособыСписанияРасходов.ВДебетСчетаУказанногоВДокументе Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетДт");
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения)

	ТипОснования = ТипЗнч(ДанныеЗаполнения);

	Если ТипОснования = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда

		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);

		ПодразделениеОрганизации     = ДанныеЗаполнения.Местонахождение;
		Комментарий                  = ДанныеЗаполнения.Комментарий;
		Ответственный                = ДанныеЗаполнения.Ответственный;

		// Заполнение табличной части "Спецодежда"
		Для Каждого ТекСтрокаСпецодежда Из ДанныеЗаполнения.Спецодежда Цикл

			НоваяСтрока = Спецодежда.Добавить();

			НоваяСтрока.Номенклатура                  = ТекСтрокаСпецодежда.Номенклатура;
			НоваяСтрока.ФизЛицо                       = ТекСтрокаСпецодежда.ФизЛицо;
			НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
			НоваяСтрока.Количество                    = ТекСтрокаСпецодежда.Количество;
			Если ТекСтрокаСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию Тогда
				НоваяСтрока.СчетПередачи = ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный;
			Иначе
				НоваяСтрока.СчетПередачи = ТекСтрокаСпецодежда.СчетПередачи;
			КонецЕсли;

		КонецЦикла;

		// Заполнение табличной части "Спецоснастка"
		Для Каждого ТекСтрокаСпецоснастка Из ДанныеЗаполнения.Спецоснастка Цикл

			НоваяСтрока = Спецоснастка.Добавить();

			НоваяСтрока.Номенклатура                  = ТекСтрокаСпецоснастка.Номенклатура;
			НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
			НоваяСтрока.Количество                    = ТекСтрокаСпецоснастка.Количество;
			Если ТекСтрокаСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию Тогда
				НоваяСтрока.СчетПередачи = ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный;
			Иначе
				НоваяСтрока.СчетПередачи = ТекСтрокаСпецоснастка.СчетПередачи;
			КонецЕсли;

		КонецЦикла;

		// Заполнение табличной части "Инвентарь и хозяйственные принадлежности"
		Для Каждого ТекСтрокаИнвентарьИХозяйственныеПринадлежности Из ДанныеЗаполнения.ИнвентарьИХозяйственныеПринадлежности Цикл

			НоваяСтрока = ИнвентарьИХозяйственныеПринадлежности.Добавить();

			НоваяСтрока.Номенклатура                  = ТекСтрокаИнвентарьИХозяйственныеПринадлежности.Номенклатура;
			НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
			НоваяСтрока.ФизЛицо                       = ТекСтрокаИнвентарьИХозяйственныеПринадлежности.ФизЛицо;
			НоваяСтрока.Количество                    = ТекСтрокаИнвентарьИХозяйственныеПринадлежности.Количество;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли