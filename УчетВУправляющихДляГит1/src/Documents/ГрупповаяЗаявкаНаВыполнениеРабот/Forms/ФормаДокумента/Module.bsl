&НаСервере
Функция ТекСотр(сотрудник)
		СпрСотр = Справочники.ШтатноеРасписание;
		НайтиСотр = СпрСотр.НайтиПоНаименованию(сотрудник);
		ТекСотр =  НайтиСотр.ТарифнаяСтавкаСДоплатой;
		возврат ТекСотр;

	КонецФункции

Функция ТЗЦеныНоменклатуры(Товар)
	
	Склад = Объект.Склад;	 
		
	
	Запрос = Новый Запрос;
	
	Если Не Объект.ПоСкладам Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
		|	ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
		|	СУММА(ХозрасчетныйОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстаток) КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки КАК ХозрасчетныйОстатки
		|ГДЕ
		//|     Счет = &Cчет И
		|    Субконто1 = &Товар
		|    И Субконто2 =&Склад   		
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Подразделение,
		|	ХозрасчетныйОстатки.Организация"; 
	Иначе 
			Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
		|	ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
		|	СУММА(ХозрасчетныйОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстаток) КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки КАК ХозрасчетныйОстатки
		|ГДЕ
		//|     Счет = &Cчет И
		|    Субконто1 = &Товар
		//|    И Субконто2 =&Склад   		
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Подразделение,
		|	ХозрасчетныйОстатки.Организация";
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Товар", Товар);

	//РезультатЗапроса = Запрос.Выполнить();
	Запрос.УстановитьПараметр("Склад", Склад);
	
	//Запрос.УстановитьПараметр("Счет", 10.01);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Запрос.Выполнить().Пустой() Тогда

				  цена = 0;
	КонецЕсли;

	Пока Выборка.Следующий() Цикл
		Если Выборка.Субконто1 = Товар тогда
				  цена = Выборка.СуммаОстаток  / Выборка.КоличествоОстаток ;
		КонецЕсли;
	КонецЦикла;
	
 
   возврат Цена;
   
КонецФункции

&НаКлиенте
Процедура НарядЗаказНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НарядЗаказ.ТекущиеДанные;
	//ВидРабот      = ТекущиеДанные.ВидРабот;
	//Номенклатура  = ТекущиеДанные.Номенклатура;
	

	ТекущиеДанные.Цена  = ТЗЦеныНоменклатуры(ТекущиеДанные.Номенклатура);
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;

КонецПроцедуры

&НаКлиенте
Процедура СоставЗвенаДолжностьПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СоставЗвена.ТекущиеДанные;
		
    
	ТекущиеДанные.Цена = ТекСотр(ТекущиеДанные.Должность);
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Время;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДЗ(Команда)
	
//	 Если Дерево.Количество() > 0 Тогда
//		           Режим = РежимДиалогаВопрос.ДаНет;
//Текст = "ru = ""Таблица содержит строки! Очистить?"";"
//     + " en = ""Do you want to continue?""";
//Ответ = Вопрос(НСтр(Текст), Режим, 0);
//Если Ответ = КодВозвратаДиалога.Нет Тогда
//       ЗаполнитьДЗнаСервере();	
// иначе
//	  

//	   ЗаполнитьДЗнаСервере();	


//КонецЕсли;              
//иначе
// ЗаполнитьДЗнаСервере();	


//	КонецЕсли;

	ЗаполнитьДЗнаСервере();	
КонецПроцедуры


Процедура ЗаполнитьДЗнаСервере()
 тДерево = РеквизитФормыВЗначение("Дерево");
   
   
   
   Для Каждого ТекСтрока из Объект.ОбъектыУчета Цикл
               ТекСтр = тДерево.Строки.Добавить();
			   ТекСтр.Здания = ТекСтрока.Здания;
			   
			   
			   материалы = ТекСтр.Строки.Добавить();
				 материалы.Здания = "материалы";
				 рабочие = ТекСтр.Строки.Добавить();
				 рабочие.Здания = "рабочие";
                 техника = ТекСтр.Строки.Добавить();
				 техника.Здания = "техника";
				


			   Для Каждого материал из Объект.НарядЗаказ Цикл
				  нСтр2 = материалы.Строки.Добавить();
				    

					Если Объект.ВидРаспределения = "Поровну" Тогда
						кол = Поровну(материал.количество);

				  ИначеЕсли Объект.ВидРаспределения = "ПоЛифтам" тогда 
				        кол = ПоЛифтам(материал.количество);
				 Иначе
						кол = 0;
				      сообщить("ощибка");
				  КонецЕсли;
						
						
				  нСтр2.Здания = материал.Номенклатура;
				  нСтр2.Количество = кол;
				  нСтр2.Цена = Материал.Цена;
				  нСтр2.сумма = материал.Цена * кол;
				 
				  материалы.Сумма = материалы.Сумма + нСтр2.Сумма;
			  КонецЦикла;
			  
			  ТекСтр.Сумма = ТекСтр.Сумма + материалы.Сумма;
			  //Объект.Итого = Объект.Итого + ТекСтр.Сумма; 
      
   Для каждого рабочий из объект.СоставЗвена Цикл
	   
	   				  нСтр3 = рабочие.Строки.Добавить();
				    

					Если Объект.ВидРаспределения = "Поровну" Тогда
						кол = Поровну(Рабочий.время);

				  ИначеЕсли Объект.ВидРаспределения = "ПоЛифтам" тогда 
				        кол = ПоЛифтам(Рабочий.время);
					Иначе
						кол = 0;
				      сообщить("ощибка");
				  КонецЕсли;
							

				  нСтр3.Здания = рабочий.Должность;
				  нСтр3.Количество = кол;
				  нСтр3.Цена = Рабочий.Цена;
				  нСтр3.сумма = рабочий.Цена * кол;
				 
				  рабочий.Сумма = рабочий.Сумма + нСтр3.Сумма;


	   
			  КонецЦикла;
			  	  ТекСтр.Сумма = ТекСтр.Сумма + Рабочий.Сумма;
			  //Объект.Итого = Объект.Итого + ТекСтр.Сумма; 
    КонецЦикла;

   ЗначениеВРеквизитФормы(тДерево, "Дерево");
   
   
//   
//Запрос = новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	СоответствиеСтатейЗатратИТиповЗАтрат.Ссылка
//	               |ИЗ
//	               |	Справочник.СоответствиеСтатейЗатратИТиповЗАтрат КАК СоответствиеСтатейЗатратИТиповЗАтрат";
//	
//	Выборка = Запрос.Выполнить().Выбрать();
//					
//			Пока Выборка.Следующий() Цикл
//		
//			ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
//			ДокОбъект.удалить();
//			КонецЦикла;
   
КонецПроцедуры


Функция Поровну(Количество)
	кол = Количество / Объект.ОбъектыУчета.Количество();
	возврат кол;
КонецФункции

Функция ПоЛифтам(Количество)
	
КонецФункции


&НаКлиенте
Процедура ДеревоЗданияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;  
	род = Элементы.Дерево.ТекущиеДанные.ПолучитьРодителя();

	Если род = Неопределено тогда 
		ФормаВыбора = ПолучитьФорму("Справочник.КВП_Здания.ФормаВыбора",,Элемент);
		ФормаВыбора.Параметры.РежимВыбора = истина;
		ФормаВыбора.Открыть();

	ИначеЕсли род.Здания = "материалы" тогда
		ФормаВыбора = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора",,Элемент);
		ФормаВыбора.Параметры.РежимВыбора = истина;
		ФормаВыбора.Открыть();
	ИначеЕсли род.Здания = "рабочие" тогда
		ФормаВыбора = ПолучитьФорму("Справочник.ШтатноеРасписание.ФормаВыбора",,Элемент);
		ФормаВыбора.Параметры.РежимВыбора = истина;
		ФормаВыбора.Открыть();
	иначе
		СписокВыбора = Новый СписокЗначений;

		СписокВыбора.Очистить();

		СписокВыбора.Добавить("Материалы");
		СписокВыбора.Добавить("Рабочие");
		//элементы.Дерево.РежимВыбор
		//Элемент.СписокВыбора = СписокВыбора;
		Эл = Элементы.Дерево.ТекущиеДанные;
		Эл.СписокВыбора = СписокВыбора;

	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗданияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	Если Элементы.Дерево.ТекущиеДанные <> Неопределено Тогда
        
       др = Элементы.Дерево.ТекущиеДанные;
	   др.Здания = ВыбранноеЗначение;
      КонецЕсли;

КонецПроцедуры

