#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ОтчетОператораСистемыПлатон.ПодготовитьПараметрыПроведения(Ссылка, Отказ);

	// Таблица взаиморасчетов
	ТаблицаВзаиморасчеты = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ТаблицаЗачетАвансов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);
	
	// Таблица расходы
	ТаблицаРасходы = Документы.ОтчетОператораСистемыПлатон.ПодготовитьТаблицуРасходов(
		ПараметрыПроведения.ТаблицаРасходы,
		ПараметрыПроведения.Реквизиты,
		ЭтотОбъект,
		Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	// Зачет аванса
	УчетВзаиморасчетов.СформироватьДвиженияЗачетАвансов(ТаблицаВзаиморасчеты,
		ПараметрыПроведения.ЗачетАвансовРеквизиты, Движения, Отказ);

	// Поступление расходов
	УчетДоходовРасходов.СформироватьДвиженияПоступлениеУслуг(ТаблицаРасходы,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);

	Документы.ОтчетОператораСистемыПлатон.СформироватьДвиженияРасходыНаПлатон(ПараметрыПроведения.ТаблицаРасходыНаПлатон,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Отложенные расчеты с контрагентами.
	УчетВзаиморасчетовОтложенноеПроведение.ЗарегистрироватьОтложенныеРасчетыСКонтрагентами(
		ЭтотОбъект, Отказ, ПараметрыПроведения.РасчетыСКонтрагентамиОтложенноеПроведение);
		
	// Регистрация в последовательности
	Документы.ОтчетОператораСистемыПлатон.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ЭтотОбъект, ПараметрыПроведения, ТаблицаРасходы, Отказ);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив();

	// Проверка реквизитов шапки документа
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			ТекстСообщения = "";
			Если НЕ УчетВзаиморасчетов.ПроверитьВозможностьПроведенияВРеглУчете(
					ЭтотОбъект, ДоговорКонтрагента, ТекстСообщения) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, "Корректность",
					НСтр("ru = 'Договор'"),,, ТекстСообщения);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
					"ДоговорКонтрагента", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;
	
	// Табличная часть "Транспортные средства"
	Параметры = Новый Структура("ТаблицаТС, Организация, Дата");
	Параметры.ТаблицаТС = ТранспортныеСредства.Выгрузить(,"НомерСтроки, ТранспортноеСредство");
	Параметры.Дата = Дата;
	Параметры.Организация = Организация;
	
	Документы.ОтчетОператораСистемыПлатон.ПроверитьРегистрациюВСистемеПлатон(ЭтотОбъект, Параметры, Отказ);
	
	// Табличная часть "Зачет авансов"
	Если СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗачетАвансов");
	ИначеЕсли ЗачетАвансов.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗачетАвансов");
	
		ТекстСообщения = НСтр("ru = 'Не введено ни одной строки с документом аванса!'");
		Поле = "ПорядокУчетаРасчетов";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, , Поле, Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = ТранспортныеСредства.Итог("Сумма");
	
	РаботаСДоговорамиКонтрагентовБП.ЗаполнитьДоговорПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли