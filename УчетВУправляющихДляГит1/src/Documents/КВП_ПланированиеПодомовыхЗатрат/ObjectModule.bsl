
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииДляОбеспеченияПроведенияДокумента

// Разбивает период по месяцам
//
// Параметры
//  нет параметров
//
// Возвращаемое значение:
//   массив   - массив периодов
//
Функция ПолучитьМассивПериодов()

	// Получим список месяцев для распределения.
	МассивПериодов = Новый Массив;
	
	тмТекДата = НачалоПериода;
	
	Пока тмТекДата < ОкончаниеПериода Цикл
		
		МассивПериодов.Добавить(НачалоМесяца(тмТекДата));
		тмТекДата = ДобавитьМесяц(тмТекДата, 1);
		
	КонецЦикла;

	Возврат МассивПериодов;
	
КонецФункции // ПолучитьМассивПериодов()

// Функция списания материалов с регистра ТоварыНаСкладе.
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок, РежимПроведения)

	// Проведение по регистрам учета подомовых затрат.
	ДвиженияПоРегистрамПодомовыхЗатрат(СтруктураШапкиДокумента, Отказ, Заголовок);

КонецПроцедуры

// Формирует движения по регистрам подомовых затрат.
Процедура ДвиженияПоРегистрамПодомовыхЗатрат(СтруктураШапкиДокумента, Отказ, Заголовок)

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	МассивПериодов = ПолучитьМассивПериодов();
	
	КоличествоПериодов = МассивПериодов.Количество();
	
	Для Каждого ТекСтрокаТЧ Из ТаблицаЗатрат Цикл
		
		КоличествоРаспред = Окр(ТекСтрокаТЧ.Количество/КоличествоПериодов, 3);
		СуммаРаспред      = Окр(ТекСтрокаТЧ.Сумма/КоличествоПериодов, 2);
		
		ВсегоКоличество = 0;
		ВсегоСумма = 0;
		
		Для Индекс = 0 По КоличествоПериодов - 2 Цикл
			
			Движение = Движения.КВП_ЗатратыПодомовогоУчета.Добавить();
			Движение.Период       = МассивПериодов.Получить(Индекс);
			Движение.Организация  = СтруктураШапкиДокумента.Организация;
			Движение.Здание       = ТекСтрокаТЧ.Объект;
			Движение.ВидЗатрат    = Перечисления.КВП_ВидыПодомовыхЗатрат.Планирование;
			Движение.Номенклатура = ТекСтрокаТЧ.Номенклатура;
			
			Если ЗначениеЗаполнено(СтруктураШапкиДокумента.Услуга) Тогда
				Движение.Услуга   = СтруктураШапкиДокумента.Услуга;
			Иначе
				Движение.Услуга   = ТекСтрокаТЧ.Номенклатура;
			КонецЕсли;
			
			Движение.Количество   = КоличествоРаспред;
			Движение.Сумма        = СуммаРаспред;
			
			ВсегоКоличество = ВсегоКоличество + КоличествоРаспред;
			ВсегоСумма      = ВсегоСумма + СуммаРаспред;
			
		КонецЦикла;
		
		Движение = Движения.КВП_ЗатратыПодомовогоУчета.Добавить();
		Движение.Период       = МассивПериодов.Получить(КоличествоПериодов - 1);
		Движение.Организация  = СтруктураШапкиДокумента.Организация;
		Движение.Здание       = ТекСтрокаТЧ.Объект;
		Движение.ВидЗатрат    = Перечисления.КВП_ВидыПодомовыхЗатрат.Планирование;
		Движение.Номенклатура = ТекСтрокаТЧ.Номенклатура;
		
		Если ЗначениеЗаполнено(СтруктураШапкиДокумента.Услуга) Тогда
			Движение.Услуга   = СтруктураШапкиДокумента.Услуга;
		Иначе
			Движение.Услуга   = ТекСтрокаТЧ.Номенклатура;
		КонецЕсли;
		
		Движение.Количество   = ТекСтрокаТЧ.Количество - ВсегоКоличество;
		Движение.Сумма        = ТекСтрокаТЧ.Сумма - ВсегоСумма;
		
	КонецЦикла;
	
КонецПроцедуры // ДвиженияПоРегистрамПодомовыхЗатрат()

#КонецОбласти 

#Область ОбработчикиСобытий

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаПроведения".
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Заголовок = УПЖКХ_ТиповыеМетодыВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении,
	// по данным шапки документа.
	ПараметрыПроведения = Документы.КВП_ПланированиеПодомовыхЗатрат.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента = ПараметрыПроведения.Реквизиты;
	
	Если НЕ Отказ Тогда
		
		// Формирование движения регистров
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок, РежимПроведения);
	
	КонецЕсли;
	
КонецПроцедуры  //ОбработкаПроведения()

// Обработчик события "ОбработкаПроверкиЗаполнения" документа.
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Организация");
	ПроверяемыеРеквизиты.Добавить("НачалоПериода");
	ПроверяемыеРеквизиты.Добавить("ОкончаниеПериода");
	
	ПроверяемыеРеквизиты.Добавить("ТаблицаЗатрат.Объект");
	ПроверяемыеРеквизиты.Добавить("ТаблицаЗатрат.Номенклатура");
	ПроверяемыеРеквизиты.Добавить("ТаблицаЗатрат.Сумма");
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли