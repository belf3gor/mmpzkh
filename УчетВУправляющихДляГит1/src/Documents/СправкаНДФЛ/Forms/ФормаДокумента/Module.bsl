#Область ОписаниеПеременных

&НаКлиенте
Перем СтарыеЗначенияКонтролируемыхПолей;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВнешниеДанные = Параметры.ВнешниеДанные;
	
	УстановитьСвойстваЭлементовПоИсточникуДанныхСправки();
	
	Если Не ФормаДополнена Тогда
		ДополнитьФорму();
	КонецЕсли;
	
	Если Не Параметры.Свойство("Ключ") Или Параметры.Ключ = Документы.СправкаНДФЛ.ПустаяСсылка() Тогда
		
		Если ВнешниеДанные Тогда
		
			ПрочитатьДанныеСправкиИзВременногоХранилища(Параметры.АдресДанныхСправкиВХранилище);
			
		Иначе
			
			ЗначенияДляЗаполнения = Новый Структура("Год, Организация, Ответственный", 
				"Объект.НалоговыйПериод",
				"Объект.Организация",
				"Объект.Ответственный");
				
			ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
			
			ПриПолученииДанныхНаСервере();
			
			Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
				ЗаполнитьДанныеСправкиНаСервере();
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Объект.Телефон) Тогда 
				ЗаполнитьТелефонОрганизации();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке13КодВычета", "СведенияОДоходахПоСтавке13СуммаВычета");
	УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке30КодВычета", "СведенияОДоходахПоСтавке30СуммаВычета");
	УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке35КодВычета", "СведенияОДоходахПоСтавке35СуммаВычета");
	УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке15КодВычета", "СведенияОДоходахПоСтавке15СуммаВычета");
	УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке09КодВычета", "СведенияОДоходахПоСтавке09СуммаВычета");
	УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке05КодВычета", "СведенияОДоходахПоСтавке05СуммаВычета");
	УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке10КодВычета", "СведенияОДоходахПоСтавке10СуммаВычета");
	
	Элементы.ДоходыНалоги.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Видимость", Истина));
	Элементы.СведенияОДоходахПоСтавке13.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка13));
	Элементы.СведенияОДоходахПоСтавке30.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка30));
	Элементы.СведенияОДоходахПоСтавке35.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка35));
	Элементы.СведенияОДоходахПоСтавке15.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка15));
	Элементы.СведенияОДоходахПоСтавке09.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка09));
	Элементы.СведенияОДоходахПоСтавке05.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка05));
	Элементы.СведенияОДоходахПоСтавке10.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка10));
	
	УстановитьВидимостьАдресов(ЭтаФорма);
	
	Если ПолучитьФункциональнуюОпцию("ИспользуютсяСтавкиНДФЛМеждународныхДоговоров") Тогда
		
		УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке03КодВычета", "СведенияОДоходахПоСтавке03СуммаВычета");
		УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке06КодВычета", "СведенияОДоходахПоСтавке06СуммаВычета");
		УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке07КодВычета", "СведенияОДоходахПоСтавке07СуммаВычета");
		УчетНДФЛФормы.СведенияОДоходахПриСозданииНаСервере(ЭтаФорма, "Объект.СведенияОДоходах.КодДохода", "СведенияОДоходахПоСтавке12КодВычета", "СведенияОДоходахПоСтавке12СуммаВычета");
		
		Элементы.СведенияОДоходахПоСтавке03.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка03));
		Элементы.СведенияОДоходахПоСтавке06.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка06));
		Элементы.СведенияОДоходахПоСтавке07.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка07));
		Элементы.СведенияОДоходахПоСтавке12.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Ставка", Перечисления.НДФЛСтавки.Ставка12));
		
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаСтавка03",
			"Видимость",
			Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаСтавка06",
			"Видимость",
			Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаСтавка07",
			"Видимость",
			Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаСтавка12",
			"Видимость",
			Ложь);
	КонецЕсли;
	
	УчетНДФЛФормы.СправкиНДФЛЗаполнитьСписокКонтролируемыхПолей(ЭтаФорма);
	
	УстановитьСписокВыбораМесяцевНалоговогоПериода();
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Не ФормаДополнена Тогда
		ДополнитьФорму();
	КонецЕсли;
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ"); 
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ВнешниеДанные Тогда
		ДокументПроведен = Объект.Проведен;
	КонецЕсли;
	
	ДанныеСправок = Новый Массив;
	ДанныеСправок.Добавить(Объект);
	
	ЗаполнитьСписокМесяцевНалоговогоПериода();
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьСвойстваЭлементовСФиксациейДанных(ЭтаФорма, Объект, ДокументПроведен);
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьИнфонадписьИсправления(ИнфоНадписьИсправления, Объект, ДокументПроведен);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_СправкаНДФЛ", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ВнешниеДанные Тогда
		Модифицированность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеДанныхФизическогоЛица" Тогда
		ПрочитатьДанныеФизическогоЛица(Источник);
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьПризнакНаличияГражданства(ЭтаФорма, Объект);
	ИначеЕсли ИмяСобытия = "ИзмененаРегистрацияВНалоговомОргане" Тогда
		УстановитьПредставлениеРегистрацииВНО();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "Объект");
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если Не ДокументОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не удалось провести документ.
								|При проверке заполнения были обнаружены ошибки.'");
		
		ЗарплатаКадрыОтображениеОшибок.ПослеПроверкиЗаполненияВФорме(
			ЭтотОбъект,
			ДокументОбъект,
			СоответствиеДанныхОбъектаДаннымФормы(),
			ОписаниеПодчиненностиДанных(),
			"Объект");
		
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗарплатаКадрыОтображениеОшибок.ПослеПроверкиЗаполненияВФорме(
			ЭтотОбъект,
			ДокументОбъект,
			СоответствиеДанныхОбъектаДаннымФормы(),
			ОписаниеПодчиненностиДанных(),
			"Объект");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииНаСервере();
	
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ"); 
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	УчетНДФЛФормы.СправкиНДФЛУстановитьСписокВыбораРегистрацийВНО(ЭтаФорма, Объект.Сотрудник);
	УчетНДФЛФормы.СправкиНДФЛУстановитьКодИФНС(Объект.РегистрацияВНалоговомОргане, Объект.КодИФНС);
	УстановитьВидимостьАдресов(ЭтаФорма);
	ЗаполнитьДанныеСправкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыйПериодПриИзменении(Элемент)
	
	НалоговыйПериодПриИзмененииНаСервере();
	
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ"); 
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.НалоговыйПериод");
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.Организация");
КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокФормированияСправкиОДоходахФизическогоЛица.ВРазрезеКодовОКАТО"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно"));
	
КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияПриИзменении(Элемент)
	СпособФормированияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СпособФормированияПриИзмененииНаСервере()
	
	УчетНДФЛФормы.СправкиНДФЛУстановитьСписокВыбораРегистрацийВНО(ЭтаФорма, Объект.Сотрудник);
	
	// Если формируем сводно, то регистрацию в налоговом органе установим от организации.
	Если Объект.СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно Тогда
		Объект.РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Объект.Организация, Дата(Объект.НалоговыйПериод, 12, 31));
		УчетНДФЛФормы.СправкиНДФЛУстановитьПредставлениеРегистрацииВНО(ЭтотОбъект);
	КонецЕсли;
	УчетНДФЛФормы.СправкиНДФЛУстановитьКодИФНС(Объект.РегистрацияВНалоговомОргане, Объект.КодИФНС);
	ЗаполнитьДанныеСправкиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НалоговыйПериодПриИзмененииНаСервере()
	
	УчетНДФЛФормы.СправкиНДФЛУстановитьЗаголовокПоляРегистрацияВНО(ЭтаФорма);
	УчетНДФЛФормы.СправкиНДФЛУстановитьСписокВыбораРегистрацийВНО(ЭтаФорма, Объект.Сотрудник);
	УчетНДФЛФормы.СправкиНДФЛУстановитьКодИФНС(Объект.РегистрацияВНалоговомОргане, Объект.КодИФНС);
	УстановитьПараметрыВыбораВидаДоходов(Объект.НалоговыйПериод);
	УстановитьВидимостьАдресов(ЭтаФорма);
	ЗаполнитьДанныеСправкиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Объект.РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	УчетНДФЛФормы.СправкиНДФЛУстановитьСписокВыбораРегистрацийВНО(ЭтаФорма, Объект.Сотрудник);
	УчетНДФЛФормы.СправкиНДФЛУстановитьКодИФНС(Объект.РегистрацияВНалоговомОргане, Объект.КодИФНС);
	УстановитьИнофнадписьОписаниеДоходовОрганизации();
	
	Объект.СведенияОДоходах.Очистить();
	Объект.СведенияОВычетах.Очистить();
	
	УчетНДФЛФормы.СправкиНДФЛОчиститьДанныеСправки(Объект);
	
	ЗарплатаКадрыОтображениеОшибок.УдалитьОшибкиИзДанныхФормы(ЭтотОбъект);
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагиНаличияОшибок(ЭтотОбъект);
	
	ЗаполнитьТелефонОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ОбщегоНазначенияКлиент.СкопироватьРекурсивно(РегистрацияВНалоговомОрганеСписокВыбора);
	
	Если ДанныеВыбора.Количество() = 1 Тогда
		ДанныеВыбора.Добавить("");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Объект.РегистрацияВНалоговомОргане = ВыбранноеЗначение.Регистрация;
		РегистрацияВНОПредставление = ВыбранноеЗначение.Представление;
		
		РегистрацияВНалоговомОрганеПриИзмененииНаСервере();
		
		УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
		УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	КонецЕсли;
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "РегистрацияВНОПредставление");
	
КонецПроцедуры

&НаСервере
Процедура РегистрацияВНалоговомОрганеПриИзмененииНаСервере()
	
	УстановитьИнофнадписьОписаниеДоходовОрганизации();
	
	Если Не Объект.ФиксНалоги Тогда
		Объект.СведенияОДоходах.Очистить();
		Объект.СведенияОВычетах.Очистить();
		Объект.УведомленияНОоПравеНаВычеты.Очистить();
		
		ДанныеСправок = Новый Массив;
		ДанныеСправок.Добавить(Объект);
		
		УчетНДФЛФормы.СправкиНДФЛПрочитатьДанные(ДанныеСправок,
				Объект.СведенияОДоходах,
				Объект.СведенияОВычетах,
				Объект.НалоговыйПериод,
				КонецДня(Объект.Дата),
				Объект.Организация,
				РегистрацияВНалоговомОргане(),
				Ложь,
				Не ДокументПроведен,
				НеВключатьДоходыПоЦеннымБумагам,
				Объект.УведомленияНОоПравеНаВычеты);
				
		ОчиститьРеквизитыХраненияОшибокДанныхОНалогах();
	КонецЕсли;
	
	УчетНДФЛФормы.СправкиНДФЛУстановитьКодИФНС(Объект.РегистрацияВНалоговомОргане, Объект.КодИФНС);
	
КонецПроцедуры

&НаКлиенте
Процедура КодИФНСПриИзменении(Элемент)
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.КодИФНС");
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеОткрытие(Элемент, СтандартнаяОбработка)
	УчетНДФЛКлиент.СправкиНДФЛРегистрацияВНалоговомОрганеОткрытие(ЭтаФорма, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	СотрудникПриИзмененииНаСервере();
	
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ"); 
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.Сотрудник");
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	
	УчетНДФЛФормы.СправкиНДФЛОчиститьДанныеСправки(Объект);
	ЗаполнитьДанныеСправкиНаСервере();
	УстановитьДоступностьДанныхСправки();
	
КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииФиксируемогоЗначения(ЭтаФорма, Объект, "Фамилия");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.Фамилия");
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииФиксируемогоЗначения(ЭтаФорма, Объект, "Имя");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.Имя");
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииФиксируемогоЗначения(ЭтаФорма, Объект, "Отчество");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.Отчество");
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииФиксируемогоЗначения(ЭтаФорма, Объект, "ИНН");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.ИНН");
КонецПроцедуры

&НаКлиенте
Процедура ДатаРожденияПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииФиксируемогоЗначения(ЭтаФорма, Объект, "ДатаРождения");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.ДатаРождения");
КонецПроцедуры

&НаКлиенте
Процедура СтатусНалогоплательщикаПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииФиксируемогоЗначения(ЭтаФорма, Объект, "СтатусНалогоплательщика");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.СтатусНалогоплательщика");
КонецПроцедуры

&НаКлиенте
Процедура ГражданствоПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛГражданствоПриИзменении(ЭтаФорма, Объект);
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.Гражданство");
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезГражданстваПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛЛицБезГражданстваПриИзменении(ЭтаФорма, Объект);
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.Гражданство");
КонецПроцедуры

&НаКлиенте
Процедура ИННвСтранеГражданстваПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииФиксируемогоЗначения(ЭтаФорма, Объект, "Гражданство");
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииУдостоверенияЛичности(ЭтаФорма, Объект);
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.ВидДокумента");
КонецПроцедуры

&НаКлиенте
Процедура СерияДокументаПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииУдостоверенияЛичности(ЭтаФорма, Объект);
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.СерияДокумента");
КонецПроцедуры

&НаКлиенте
Процедура НомерДокументаПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриИзмененииУдостоверенияЛичности(ЭтаФорма, Объект);
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.НомерДокумента");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиОбщаяСуммаДоходаПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиОблагаемаяСуммаДоходаПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиИсчисленоПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиУдержаноПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиЗадолженностьПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиИзлишнеУдержаноПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПеречисленоПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиДатаУведомленияПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.ДатаУведомленияАвансовыеПлатежи");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиНомерУведомленияПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.НомерУведомленияАвансовыеПлатежи");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиКодНалоговогоОрганаУведомленияПриИзменении(Элемент)
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "Уведомление");
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Объект.КодНалоговогоОрганаУведомленияАвансовыеПлатежи");
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыСведенияОДоходах

&НаКлиенте
Процедура СведенияОДоходахПриАктивизацииСтроки(Элемент)
	
	ДанныеТекущейСтроки = Элементы[Элемент.Имя].ТекущиеДанные;
	Если ДанныеТекущейСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетНДФЛКлиент.КодДоходаАктивацииСтроки(
		ЭтаФорма,
		Объект.НалоговыйПериод,
		Элемент.Имя,
		"КодДохода",
		Элемент.Имя + "КодВычета");
	
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(
		ДанныеТекущейСтроки,
		СтарыеЗначенияКонтролируемыхПолей,
		КонтролируемыеПоля,
		"СведенияОДоходах");
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	РедактируемыеДанные = Элементы[Элемент.Имя].ТекущиеДанные;
	Если РедактируемыеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, РедактируемыеДанные, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "СведенияОДоходах");
	
	Индекс = Объект.СведенияОДоходах.Индекс(РедактируемыеДанные);
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриОкончанииРедактированияСтрокиТаблицыСИндикациейОшибок(
		ЭтотОбъект,
		Элемент,
		НоваяСтрока,
		"Объект.СведенияОДоходах");
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахСуммаДоходаПриИзменении(Элемент)
	ОбновитьИтогиПоТекущейСправке();
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахСуммаВычетаПриИзменении(Элемент)
	ОбновитьИтогиПоТекущейСправке();
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахПослеУдаления(Элемент)
	
	Объект.ФиксНалоги = Истина;
	ОбновитьИтогиПоТекущейСправке();
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ДанныеТекущейСтроки = Элементы[Элемент.Имя].ТекущиеДанные;
		Если ДанныеТекущейСтроки = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ДанныеТекущейСтроки.Ставка = ПредопределенноеЗначение("Перечисление.НДФЛСтавки.Ставка" + Прав(Элемент.Имя, 2));
		ДанныеТекущейСтроки.МесяцНалоговогоПериода = 1;
		ДанныеТекущейСтроки.МесяцНалоговогоПериодаСтрокой = УчетНДФЛКлиентСервер.МесяцНалоговогоПериодаСтрокой(1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не НаличиеТекущегоСотрудника() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахПередУдалением(Элемент, Отказ)
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПередУдалениемСтрокиТаблицыСИндикациейОшибок(
		ЭтотОбъект,
		Элемент,
		"Объект.СведенияОДоходах");
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахКодДоходаПриИзменении(Элемент)
	
	УчетНДФЛКлиент.КодДоходаПриИзменении(
		ЭтаФорма,
		Объект.НалоговыйПериод,
		СтрЗаменить(Элемент.Имя, "КодДохода", ""),
		"КодДохода",
		СтрЗаменить(Элемент.Имя, "КодДохода", "") + "КодВычета",
		"КодВычета",
		"СуммаВычета");
	
	ОбновитьИтогиПоТекущейСправке();
	
КонецПроцедуры

&НаКлиенте

&НаКлиенте
Процедура ДоходыНалогиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, Объект, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "ИТОГИ");
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриОкончанииРедактированияСтрокиТаблицыСИндикациейОшибок(
		ЭтотОбъект,
		Элемент,
		НоваяСтрока,
		"ДоходыНалоги");
	
КонецПроцедуры

&НаКлиенте
Процедура ДоходыНалогиПередУдалением(Элемент, Отказ)
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПередУдалениемСтрокиТаблицыСИндикациейОшибок(
		ЭтотОбъект,
		Элемент,
		"ДоходыНалоги");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСведенияОВычетах

&НаКлиенте
Процедура СведенияОВычетахПриАктивизацииСтроки(Элемент)
	
	ДанныеТекущейСтроки = Элементы.СведенияОВычетах.ТекущиеДанные;
	Если ДанныеТекущейСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(ДанныеТекущейСтроки, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "СведенияОВычетах");
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОВычетахПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	РедактируемыеДанные = Элементы.СведенияОВычетах.ТекущиеДанные;
	Если РедактируемыеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, РедактируемыеДанные, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "СведенияОВычетах");
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОВычетахСуммаВычетаПриИзменении(Элемент)
	ОбновитьИтогиПоТекущейСправке();
КонецПроцедуры

&НаКлиенте
Процедура СведенияОВычетахПослеУдаления(Элемент)
	Объект.ФиксНалоги = Истина;
	ОбновитьИтогиПоТекущейСправке();
КонецПроцедуры

&НаКлиенте
Процедура СведенияОВычетахПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не НаличиеТекущегоСотрудника() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОДоходахМесяцНалоговогоПериодаПриИзменении(Элемент)
	
	РедактируемыеДанные = Элементы[СтрЗаменить(Элемент.Имя, "МесяцНалоговогоПериода", "")].ТекущиеДанные;
	Если РедактируемыеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РедактируемыеДанные.МесяцНалоговогоПериода = МесяцНалоговогоПериодаПоСтроковомуПредставлению(РедактируемыеДанные.МесяцНалоговогоПериодаСтрокой); 
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОВычетахПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриОкончанииРедактированияСтрокиТаблицыСИндикациейОшибок(
		ЭтотОбъект,
		Элемент,
		НоваяСтрока,
		"Объект.СведенияОВычетах");
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОВычетахПередУдалением(Элемент, Отказ)
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПередУдалениемСтрокиТаблицыСИндикациейОшибок(
		ЭтотОбъект,
		Элемент,
		"Объект.СведенияОВычетах");
	
КонецПроцедуры

&НаКлиенте
Процедура УведомленияНОоПравеНаВычетыПриАктивизацииСтроки(Элемент)
	
	ДанныеТекущейСтроки = Элементы.УведомленияНОоПравеНаВычеты.ТекущиеДанные;
	Если ДанныеТекущейСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетНДФЛКлиент.СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(ДанныеТекущейСтроки, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "УведомленияНОоПравеНаВычеты");
	
КонецПроцедуры

&НаКлиенте
Процедура УведомленияНОоПравеНаВычетыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не НаличиеТекущегоСотрудника() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УведомленияНОоПравеНаВычетыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	РедактируемыеДанные = Элементы.УведомленияНОоПравеНаВычеты.ТекущиеДанные;
	Если РедактируемыеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетНДФЛКлиент.СправкиНДФЛПриОкончанииРедактирования(ЭтаФорма, Объект, РедактируемыеДанные, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, "УведомленияНОоПравеНаВычеты");
	
КонецПроцедуры

&НаКлиенте
Процедура УведомленияНОоПравеНаВычетыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриОкончанииРедактированияСтрокиТаблицыСИндикациейОшибок(
		ЭтотОбъект,
		Элемент,
		НоваяСтрока,
		"Объект.УведомленияНОоПравеНаВычеты");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Проверить(Команда)
	
	Отказ = Ложь;
	ПроверитьДанныеДокумента(Отказ);
	
	Если Отказ Тогда
		ТекстПредупреждения = НСтр("ru = 'При проверке обнаружены ошибки'");
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Ошибок не обнаружено'");
	КонецЕсли;
	
	ПоказатьПредупреждение(, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСЗапросомДальнейшегоДействия(ОповещениеЗавершения = Неопределено)
	
	ОчиститьСообщения();
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	
	Отказ = Ложь;
	ПроверитьДанныеДокумента(Отказ);
	
	Если Отказ Тогда
		
		ТекстВопроса = НСтр("ru = 'В документе обнаружены ошибки.
							|Продолжить (не рекомендуется)?'");
		
		Оповещение = Новый ОписаниеОповещения("ПроверитьСЗапросомДальнейшегоДействияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, НСтр("ru = 'Предупреждение.'"));
		
	Иначе 
		ПроверитьСЗапросомДальнейшегоДействияЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСЗапросомДальнейшегоДействияЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДанныеДокумента(Отказ)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект", Тип("ДокументОбъект.СправкаНДФЛ"));
	
	ЗаполнитьДанныеСправкиПоТаблицеДоходыНалоги(ДокументОбъект);
	
	ДокументОбъект.ВнешниеДанные = ВнешниеДанные;
	
	Если Не ДокументОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ДокументОбъект.ПроверитьДанныеДокумента(Отказ);
	
	ЗарплатаКадрыОтображениеОшибок.ПослеПроверкиЗаполненияВФорме(
		ЭтотОбъект,
		ДокументОбъект,
		СоответствиеДанныхОбъектаДаннымФормы(),
		ОписаниеПодчиненностиДанных(),
		"Объект");
		
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	Оповещение = Новый ОписаниеОповещения("ВыполнитьПодключаемуюКомандуЗавершение", ЭтотОбъект, Команда);
	ПроверитьСЗапросомДальнейшегоДействия(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодключаемуюКомандуЗавершение(Результат, Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОтменитьИсправленияДанныхСотрудника(Команда)
	ОтменитьИсправлениеДанныхСотрудника();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКарточкуСотрудника(Команда)
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Ключ, АктивнаяСтраница", Объект.Сотрудник, "ЛичныеДанные");
		ОткрытьФорму("Справочник.ФизическиеЛица.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНалоги(Команда)
	ОбновитьНалогиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПринятьИзменения();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьДанныеСправкиИзВременногоХранилища(АдресДанныхСправкиВХранилище)
	
	ВнешниеДанные = Истина;
	
	ДанныеСправки = ПолучитьИзВременногоХранилища(АдресДанныхСправкиВХранилище);
	ЗаполнитьЗначенияСвойств(Объект, ДанныеСправки);
	ДокументПроведен = ДанныеСправки.ДокументПроведен;
	Объект.СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.ВРазрезеКодовОКАТО;
	
	НомерСправки = ДанныеСправки.НомерСправки;
	НеВключатьДоходыПоЦеннымБумагам = ДанныеСправки.НеВключатьДоходыПоЦеннымБумагам;
	
	Для каждого СтрокаДоходов Из ДанныеСправки.МассивСведенийОДоходах Цикл
		ЗаполнитьЗначенияСвойств(Объект.СведенияОДоходах.Добавить(), СтрокаДоходов);
	КонецЦикла;
	
	Для каждого СтрокаВычетов Из ДанныеСправки.МассивСведенийОВычетах Цикл
		ЗаполнитьЗначенияСвойств(Объект.СведенияОВычетах.Добавить(), СтрокаВычетов);
	КонецЦикла;
	
	Для каждого СтрокаУведомления Из ДанныеСправки.МассивСведенийОбУведомлениях Цикл
		ЗаполнитьЗначенияСвойств(Объект.УведомленияНОоПравеНаВычеты.Добавить(), СтрокаУведомления);
	КонецЦикла;
	
	НоваяСтрока = ДанныеСправки.НоваяСтрока;
	
	ПриПолученииДанныхНаСервере();
	
	ЗарплатаКадрыОтображениеОшибок.ПреобразоватьПутиКДаннымВСообщенияхПользователю(
		Объект,
		ЭтотОбъект,
		ДанныеСправки.ОшибкиДанныхСправки,
		СоответствиеДанныхОбъектаДаннымФормы(),
		"Объект");
		
	ЗарплатаКадрыОтображениеОшибок.ПоместитьСообщенияОбОшибкахВДанныеФормы(ЭтотОбъект, ДанныеСправки.ОшибкиДанныхСправки);
	
	ЗарплатаКадрыОтображениеОшибок.УстановитьФлагиНаличияОшибокПоСообщениямОбОшибках(ЭтотОбъект, ДанныеСправки.ОшибкиДанныхСправки, , Истина);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовПоИсточникуДанныхСправки()
	
	Если ВнешниеДанные Тогда 
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru='2-НДФЛ сотрудника'");
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ОрганизацияГод",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаШапкаСредняя",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ДатаНомер",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"КодИФНС",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"НомерСправки",
			"Видимость",
			Истина);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ПодписиГруппа",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаКомментарийОтветственный",
			"Видимость",
			Ложь);
			
		ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"КоманднаяПанельФормыВнешниеДанные",
			"Видимость",
			Истина);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ОК",
			"КнопкаПоУмолчанию",
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьФорму()
	
	ОписаниеЭлементовИндикации = ОписаниеЭлементовСИндикациейОшибок();
	ОписаниеПодчиненности = ОписаниеПодчиненностиДанных();
	ФормаДополнена = Истина;
	
	ЗарплатаКадрыОтображениеОшибок.ПриСозданииНаСервере(ЭтотОбъект, ОписаниеЭлементовИндикации, ОписаниеПодчиненности);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеРегистрацииВНО()
	УчетНДФЛФормы.СправкиНДФЛУстановитьПредставлениеРегистрацииВНО(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьДанныхСправки()
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Элементы.ДанныеСправки.Доступность = Истина;
	Иначе
		Элементы.ДанныеСправки.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНалогиНаСервере()
	
	ОчиститьРеквизитыХраненияОшибокДанныхОНалогах();
	
	Объект.СведенияОДоходах.Очистить();
	Объект.СведенияОВычетах.Очистить();
	Объект.УведомленияНОоПравеНаВычеты.Очистить();
	
	УчетНДФЛФормы.СправкиНДФЛОбновитьНалоги(
		ЭтаФорма,
		Объект,
		Объект.СведенияОДоходах,
		Объект.СведенияОВычетах,
		Объект.НалоговыйПериод,
		КонецДня(Объект.Дата), 
		Объект.Организация,
		РегистрацияВНалоговомОргане(),
		Ложь,
		НеВключатьДоходыПоЦеннымБумагам,
		Объект.УведомленияНОоПравеНаВычеты);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСправкиНаСервере()
	
	ОчиститьРеквизитыХраненияОшибокДанныхОНалогах();
	ОчиститьРеквизитыХраненияОшибокДанныеСотрудника();
	
	Если Не Объект.ФиксНалоги Тогда
		Объект.СведенияОДоходах.Очистить();
		Объект.СведенияОВычетах.Очистить();
		Объект.УведомленияНОоПравеНаВычеты.Очистить();
	КонецЕсли;
	
	ДанныеСправок = Новый Массив;
	
	ДанныеСправок.Добавить(Объект);
	
	УстановитьИнофнадписьОписаниеДоходовОрганизации();
	
	УчетНДФЛФормы.СправкиНДФЛПрочитатьДанные(
		ДанныеСправок, 
		Объект.СведенияОДоходах, 
		Объект.СведенияОВычетах, 
		Объект.НалоговыйПериод, 
		КонецДня(Объект.Дата), 
		Объект.Организация, 
		РегистрацияВНалоговомОргане(), 
		Ложь,
		Истина,
		НеВключатьДоходыПоЦеннымБумагам,
		Объект.УведомленияНОоПравеНаВычеты);
	
	УстановитьПредставлениеАдресов(ЭтаФорма);
	
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьСвойстваЭлементовСФиксациейДанных(ЭтаФорма, Объект, ДокументПроведен);
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьИнфонадписьИсправления(ИнфоНадписьИсправления, Объект, ДокументПроведен);
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьПризнакНаличияГражданства(ЭтаФорма, Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораМесяцевНалоговогоПериода()
	
	Для Сч = 1 По 12 Цикл
		Элементы.СведенияОДоходахПоСтавке13МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке30МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке35МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке15МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке09МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке05МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке10МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке03МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке06МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке07МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
		Элементы.СведенияОДоходахПоСтавке12МесяцНалоговогоПериода.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ПрочитатьДанныеФормы();
	
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьСвойстваЭлементовСФиксациейДанных(ЭтаФорма, Объект, ДокументПроведен);
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьИнфонадписьИсправления(ИнфоНадписьИсправления, Объект, ДокументПроведен);
	УчетНДФЛФормы.СправкиНДФЛУстановитьСписокВыбораРегистрацийВНО(ЭтаФорма, Объект.Сотрудник);
	УчетНДФЛФормы.СправкиНДФЛУстановитьКодИФНС(Объект.РегистрацияВНалоговомОргане, Объект.КодИФНС);
	УстановитьИнофнадписьОписаниеДоходовОрганизации();
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьПризнакНаличияГражданства(ЭтаФорма, Объект);
	
	УстановитьПараметрыВыбораВидаДоходов(Объект.НалоговыйПериод);
	
	УстановитьДоступностьДанныхСправки();
	
	УчетНДФЛФормы.СправкиНДФЛУстановитьЗаголовокПоляРегистрацияВНО(ЭтаФорма);
	
	ТолькоПросмотр = Объект.СпециальныйДокумент2013года;
	
	Если Не ВнешниеДанные Тогда
		ДокументПроведен = Объект.Проведен;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораВидаДоходов(НалоговыйПериод)
	
	МассивОтбора = Справочники.ВидыДоходовНДФЛ.ДоходыПоСтавке13(НалоговыйПериод);
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивОтбора)));
	Элементы.СведенияОДоходахПоСтавке13КодДохода.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	МассивОтбора = Справочники.ВидыДоходовНДФЛ.ДоходыПоСтавке30(НалоговыйПериод);
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивОтбора)));
	Элементы.СведенияОДоходахПоСтавке30КодДохода.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	МассивОтбора = Справочники.ВидыДоходовНДФЛ.ДоходыПоСтавке09(НалоговыйПериод);
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивОтбора)));
	Элементы.СведенияОДоходахПоСтавке09КодДохода.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеФормы()
	
	ПрочитатьДанныеСправки();
	УстановитьПредставлениеАдресов(ЭтаФорма);
	ЗаполнитьСписокМесяцевНалоговогоПериода();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеСправки()
	
	Если Не ВнешниеДанные Тогда
		ДанныеСправок = Новый Массив;
		ДанныеСправок.Добавить(Объект);
		
		УчетНДФЛФормы.СправкиНДФЛПрочитатьДанныеСотрудников(ДанныеСправок, Объект.НалоговыйПериод, КонецДня(Объект.Дата), Не ДокументПроведен);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокМесяцевНалоговогоПериода()
	
	Для Каждого СтрокаДоходов Из Объект.СведенияОДоходах Цикл
		СтрокаДоходов.МесяцНалоговогоПериодаСтрокой = УчетНДФЛКлиентСервер.МесяцНалоговогоПериодаСтрокой(СтрокаДоходов.МесяцНалоговогоПериода);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция НаличиеТекущегоСотрудника()
	Возврат ЗначениеЗаполнено(Объект.Сотрудник);
КонецФункции

&НаКлиенте
Функция МесяцНалоговогоПериодаПоСтроковомуПредставлению(МесяцСтрока)
	
	Для НомерМесяца = 1 По 12 Цикл
		Если МесяцСтрока = Формат(Дата(2011, НомерМесяца, 1), "ДФ=ММММ") Тогда
			Возврат НомерМесяца;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Процедура УстановитьИнофнадписьОписаниеДоходовОрганизации()
	ЭтоСводнаяСправка = Объект.СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно;
	УчетНДФЛФормы.СправкаНДФЛУстановитьИнфонадписьОписаниеДоходовОрганизации(ЭтаФорма, ЭтоСводнаяСправка, Объект.Сотрудник);
КонецПроцедуры

#Область МетодыЗаполненияДанныхСправок

&НаСервере
Функция РегистрацияВНалоговомОргане()
	
	Если Объект.СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно Тогда
		Возврат Неопределено;
	Иначе
		Возврат Объект.РегистрацияВНалоговомОргане;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПрочитатьДанныеФизическогоЛица(ФизическоеЛицо)
	
	ОчиститьРеквизитыХраненияОшибокДанныеСотрудника();
	ДанныеСправок = Новый Массив;
	ДанныеСправок.Добавить(Объект);
	
	УчетНДФЛФормы.СправкиНДФЛПрочитатьДанныеСотрудников(ДанныеСправок, Объект.НалоговыйПериод, КонецДня(Объект.Дата), Не ДокументПроведен);
	УстановитьПредставлениеАдресов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьИсправлениеДанныхСотрудника()
	
	УчетНДФЛФормы.СправкиНДФЛОтменитьИсправлениеДанныхСотрудника(ЭтаФорма, Объект, Объект.НалоговыйПериод, Объект.Дата);
	
	ОчиститьРеквизитыХраненияОшибокДанныеСотрудника();
	
	УстановитьПредставлениеАдресов(ЭтаФорма);
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьПризнакНаличияГражданства(ЭтаФорма, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИтогиПоТекущейСправке()
	
	УчетНДФЛФормы.СправкиНДФЛОбновитьИтоги(Объект, Объект.СведенияОДоходах, Объект.СведенияОВычетах);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПредставлениеАдресов(Форма)
	
	Если Не ПустаяСтрока(Форма.Объект.Адрес) Тогда
		Форма.АдресПредставление = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
			Форма.Объект.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
	Иначе
		Форма.АдресПредставление = НСтр("ru = '<Не заполнен>'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Форма.Объект.АдресЗарубежом) Тогда
		Форма.АдресЗарубежомПредставление = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
			Форма.Объект.АдресЗарубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
	Иначе
		Форма.АдресЗарубежомПредставление = НСтр("ru = '<Не заполнен>'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСправкиПоТаблицеДоходыНалоги(ЗаполняемыйОбъект)
	
	Для Каждого СтрокаИтогов Из ДоходыНалоги Цикл
		ЗаполнитьДанныеСправкиПоСтрокеТаблицыДоходыНалоги(ЗаполняемыйОбъект, СтрокаИтогов);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСправкиПоСтрокеТаблицыДоходыНалоги(ЗаполняемыйОбъект, СтрокаДоходыНалоги)
	
	Если СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка13 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке13		= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке13	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке13				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке13				= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке13			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке13			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке13				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке13 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке13	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке13				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке13				= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке13 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке13			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке13				= 0;
			
		КонецЕсли;
	КонецЕсли; 
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка30 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
				
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке30		= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке30	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке30				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке30				= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке30			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке30			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке30				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке30 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке30	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке30				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке30				= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке30 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке30			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке30				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка09 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке9			= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке9	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке9				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке9					= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке9			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке9			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке9				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке9			= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке9	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке9				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке9					= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке9 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке9			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке9				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка35 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке35		= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке35	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке35				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке35				= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке35			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке35			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке35				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке35 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке35	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке35				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке35				= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке35 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке35			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке35				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка15 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке15		= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке15	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке15				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке15				= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке15			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке15			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке15				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке15 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке15	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке15				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке15				= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке15 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке15			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке15				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка05 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке5			= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке5	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке5				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке5					= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке5			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке5			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке5				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке5 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке5	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке5				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке5					= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке5 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке5			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке5				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка10 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке10		= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке10	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке10				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке10				= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке10			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке10			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке10				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке10 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке10	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке10				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке10				= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке10 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке10			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке10				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка03 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке3			= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке3	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке3				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке3					= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке3			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке3			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке3				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке3 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке3	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке3				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке3					= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке3 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке3			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке3				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка06 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке6			= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке6	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке6				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке6					= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке6			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке6			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке6				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке6 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке6	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке6				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке6					= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке6 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке6			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке6				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка07 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке7			= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке7	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке7				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке7					= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке7			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке7			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке7				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке7 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке7	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке7				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке7					= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке7 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке7			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке7				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если  СтрокаДоходыНалоги.НДФЛСтавка = Перечисления.НДФЛСтавки.Ставка12 Тогда
		Если СтрокаДоходыНалоги.Видимость Тогда
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке12			= СтрокаДоходыНалоги.Общий;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке12	= СтрокаДоходыНалоги.Облагаемый;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке12				= СтрокаДоходыНалоги.Исчислено;
			ЗаполняемыйОбъект.УдержаноПоСтавке12					= СтрокаДоходыНалоги.Удержано;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке12			= СтрокаДоходыНалоги.НеУдержано;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке12			= СтрокаДоходыНалоги.ИзлишнеУдержано;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке12				= СтрокаДоходыНалоги.Перечислено;
			
		Иначе
			
			ЗаполняемыйОбъект.ОбщаяСуммаДоходаПоСтавке12 		= 0;
			ЗаполняемыйОбъект.ОблагаемаяСуммаДоходаПоСтавке12	= 0;
			ЗаполняемыйОбъект.ИсчисленоПоСтавке12				= 0;
			ЗаполняемыйОбъект.УдержаноПоСтавке12					= 0;
			ЗаполняемыйОбъект.ЗадолженностьПоСтавке12 			= 0;
			ЗаполняемыйОбъект.ИзлишнеУдержаноПоСтавке12			= 0;
			ЗаполняемыйОбъект.ПеречисленоПоСтавке12				= 0;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьИзменения()
	
	Если Модифицированность Тогда
		АдресДанныхСправки = ПоместитьДанныеСправкиВХранилище();
		
		Оповестить("ИзмененыДанныеСправки2НДФЛ", АдресДанныхСправки, ВладелецФормы);
		Модифицированность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьДанныеСправкиВХранилище()
	ОшибкиДанныхСправки = ЗарплатаКадрыОтображениеОшибок.СообщенияОбОшибкахИзДанныхФормы(ЭтотОбъект);
			
	Возврат УчетНДФЛФормы.ПоместитьДанныеСправки2НДФЛВХранилище(
				ЭтаФорма,
				Объект,
				Объект.СведенияОДоходах,
				Объект.СведенияОВычетах,
				НомерСправки,
				ОшибкиДанныхСправки,
				НоваяСтрока,,,
				Объект.УведомленияНОоПравеНаВычеты);
		
КонецФункции

&НаСервере
Процедура ЗаполнитьТелефонОрганизации()
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеКИОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, , "ТелОрганизации");
	
	Если ТипЗнч(ДанныеКИОрганизации) = Тип("Структура") И ДанныеКИОрганизации.Свойство("ТелОрганизации") Тогда
		Объект.Телефон = ДанныеКИОрганизации.ТелОрганизации;
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьАдресов(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ГруппаАдреса", "Видимость", Не УчетНДФЛ.ВыводитьФорму2НДФЛ2018Года(Форма.Объект.НалоговыйПериод, Форма.Объект.Дата))
КонецПроцедуры

#КонецОбласти

#Область ИндикацияОшибок

&НаСервере
Функция ОписаниеЭлементовСИндикациейОшибок()
	
	КоллекцияОписанийЭлементов = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементовСИндикациейОшибок();
	
	// Элементы шапки
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "НалоговыйПериод";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.НалоговыйПериод";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	Если ВнешниеДанные Тогда
		ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
		ОписаниеЭлемента.ИмяЭлемента = "НомерСправки";
		ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
		ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "НомерСправки";
		ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	Иначе
		ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
		ОписаниеЭлемента.ИмяЭлемента = "КодИФНС";
		ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
		ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.КодИФНС";
		ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	КонецЕсли;
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "Организация";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.Организация";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "РегистрацияВНалоговомОргане";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "РегистрацияВНОПредставление";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "Сотрудник";
	ОписаниеЭлемента.ОтображатьНепривязанныеОшибки = Истина;
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.Сотрудник";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// таблицы документа 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке13";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке13";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке30";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке30";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке35";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке35";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке15";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке15";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке09";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке09";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке05";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке05";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке10";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке10";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке03";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке03";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке06";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке06";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке07";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке07";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОДоходахПоСтавке12";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОДоходахПоСтавке12";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОДоходах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "СведенияОВычетах";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "СведенияОВычетах";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СведенияОВычетах";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "УведомленияНОоПравеНаВычеты";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "УведомленияНОоПравеНаВычеты";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УведомленияНОоПравеНаВычеты";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы();
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ИмяЭлемента = "ДоходыНалоги";
	ОписаниеЭлемента.ИмяЭлементаТаблица = "ДоходыНалоги";
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "ДоходыНалоги";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВСтрокеТаблицы(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 13 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке13";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке13";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 30 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке30";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке30";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 35 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке35";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке35";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 09 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке09";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке09";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 15 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке15";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке15";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 5 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке05";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке05";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 10 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке10";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке10";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 3 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке03";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке03";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 6 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке06";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке06";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 7 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке07";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке07";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// итоги по ставке 12 
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОбщий12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОбщаяСуммаДоходаПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогОблагаемый12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ОблагаемаяСуммаДоходаПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИсчислено12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИсчисленоПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогУдержано12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.УдержаноПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогНеУдержано12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗадолженностьПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогИзлишнеУдержано12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИзлишнеУдержаноПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИтогПеречислено12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ПеречисленоПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ЗачтеноАвансовыхПлатежейПоСтавке12";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ЗачтеноАвансовыхПлатежейПоСтавке12";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	// Личные данные налогоплательщика.
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "Фамилия";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.Фамилия";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "Имя";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.Имя";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "Отчество";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.Отчество";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ИНН";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ИНН";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ДатаРождения";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ДатаРождения";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "СтатусНалогоплательщика";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СтатусНалогоплательщика";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "Гражданство";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.Гражданство";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "ВидДокумента";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.ВидДокумента";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "СерияДокумента";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.СерияДокумента";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "НомерДокумента";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.НомерДокумента";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "Адрес";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.Адрес";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	ОписаниеЭлемента = ЗарплатаКадрыОтображениеОшибок.ОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки();
	ОписаниеЭлемента.ИмяЭлемента = "АдресЗарубежом";
	ОписаниеЭлемента.ОтображатьГиперссылку = Истина;
	ОписаниеЭлемента.ПутьКДаннымФормыСодержащимОшибку = "Объект.АдресЗарубежом";
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеЭлементаСИндикациейОшибокВРеквизитеШапки(КоллекцияОписанийЭлементов, ОписаниеЭлемента);
	
	Возврат КоллекцияОписанийЭлементов;
	
КонецФункции

&НаСервере
Функция СоответствиеДанныхОбъектаДаннымФормы()
	
	ОписаниеСоответствияДанныхОбъектовДаннымФормы = ЗарплатаКадрыОтображениеОшибок.ОписаниеСвязиДанных();
	
	ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеСвязиРеквизитов(
		ОписаниеСоответствияДанныхОбъектовДаннымФормы,  
		"РегистрацияВНалоговомОргане", 
		"РегистрацияВНОПредставление");
	
	Если ВнешниеДанные Тогда
		ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеСвязиРеквизитов(
			ОписаниеСоответствияДанныхОбъектовДаннымФормы,  
			"НомерСправки", 
			"НомерСправки");
	КонецЕсли;
	
	ЗаполнитьСоответствиеПолейИтоговДокументаСтрокамТаблицыИтоговФормы(ОписаниеСоответствияДанныхОбъектовДаннымФормы);
	
	Возврат ОписаниеСоответствияДанныхОбъектовДаннымФормы;
	
КонецФункции

&НаСервере
Функция СоответствиеПолейИтоговПоСтавкамПолямТаблицыИтогов()
	
	ПоляИтогов = Новый Соответствие;
	ПоляИтогов.Вставить("ОбщаяСуммаДоходаПоСтавке", "Общий");
	ПоляИтогов.Вставить("ОблагаемаяСуммаДоходаПоСтавке", "Облагаемый");
	ПоляИтогов.Вставить("ИсчисленоПоСтавке", "Исчислено");
	ПоляИтогов.Вставить("УдержаноПоСтавке", "Удержано");
	ПоляИтогов.Вставить("ЗадолженностьПоСтавке", "НеУдержано");
	ПоляИтогов.Вставить("ИзлишнеУдержаноПоСтавке", "ИзлишнеУдержано");
	ПоляИтогов.Вставить("ПеречисленоПоСтавке", "Перечислено");
	
	Возврат ПоляИтогов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСоответствиеПолейИтоговДокументаСтрокамТаблицыИтоговФормы(ОписаниеСоответствияДанныхОбъектовДаннымФормы)
	
	СтавкиНДФЛ = Новый Соответствие;
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка03, "3");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка05, "5");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка06, "6");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка07, "7");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка09, "9");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка10, "10");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка12, "12");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка13, "13");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка15, "15");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка30, "30");
	СтавкиНДФЛ.Вставить(Перечисления.НДФЛСтавки.Ставка35, "35");
	
	ПоляИтогов = СоответствиеПолейИтоговПоСтавкамПолямТаблицыИтогов();
	
	Для Каждого Ставка Из СтавкиНДФЛ Цикл
		КлючСвязи = ЗарплатаКадрыОтображениеОшибок.КлючСвязиДанныхСтрокТаблиц();
		ЗарплатаКадрыОтображениеОшибок.ДобавитьЭлементКлючаСвязиПоФиксированномуЗначениюПоляПодчиненнойТаблицы(
			КлючСвязи,
			"НДФЛСтавка",
			Ставка.Ключ);
			
		Для Каждого ИтоговоеПоле Из ПоляИтогов Цикл
			ПолеИтогаПоСтавке = ИтоговоеПоле.Ключ + Ставка.Значение;
			
			ЗарплатаКадрыОтображениеОшибок.ДобавитьОписаниеСвязиРеквизитаСДаннымиСтрокиТаблицы(
				ОписаниеСоответствияДанныхОбъектовДаннымФормы,
				ПолеИтогаПоСтавке,
				"ДоходыНалоги",
				ИтоговоеПоле.Значение,
				КлючСвязи);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОписаниеПодчиненностиДанных() 
	
	ОписаниеПодчиненностиДанных = ЗарплатаКадрыОтображениеОшибок.ОписаниеПодчиненностиДанныхФормы();
	
	Возврат ОписаниеПодчиненностиДанных;
	
КонецФункции

&НаСервере
Процедура ОчиститьРеквизитыХраненияОшибокДанныеСотрудника()
	
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Фамилия");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Фамилия");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Имя");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Имя");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Отчество");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Отчество");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ИНН");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ИНН");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Адрес");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Адрес");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ВидДокумента");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ВидДокумента");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.СерияДокумента");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.СерияДокумента");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.НомерДокумента");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.НомерДокумента");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Гражданство");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.Гражданство");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ДатаРождения");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ДатаРождения");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.СтатусНалогоплательщика");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.СтатусНалогоплательщика");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.АдресЗарубежом");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.АдресЗарубежом");
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьРеквизитыХраненияОшибокДанныхОНалогах()
	
	Для Индекс = 0 По Объект.СведенияОДоходах.Количество() - 1 Цикл
		ПутьКДанным = "Объект.СведенияОДоходах[" + Формат(Индекс, "ЧН=0; ЧГ=") + "].*";
		
		ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
		
		ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
		
	КонецЦикла;
	
	Для Индекс = 0 По Объект.СведенияОВычетах.Количество() - 1 Цикл
		ПутьКДанным = "Объект.СведенияОВычетах[" + Формат(Индекс, "ЧН=0; ЧГ=") + "].*";
		
		ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
		
		ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
			
	КонецЦикла;
	
	Для Индекс = 0 По Объект.УведомленияНОоПравеНаВычеты.Количество() - 1 Цикл
		ПутьКДанным = "Объект.УведомленияНОоПравеНаВычеты[" + Формат(Индекс, "ЧН=0; ЧГ=") + "].*";
		
		ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
		
		ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
		
	КонецЦикла;
	
	Для Индекс = 0 По ДоходыНалоги.Количество() - 1 Цикл
		ПутьКДанным = "ДоходыНалоги[" + Формат(Индекс, "ЧН=0; ЧГ=") + "].*";
		
		ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
		
		ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
			ЭтотОбъект,
			ПутьКДанным);
		
	КонецЦикла;
	
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.НомерУведомленияАвансовыеПлатежи");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.НомерУведомленияАвансовыеПлатежи");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.КодНалоговогоОрганаУведомленияАвансовыеПлатежи");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.КодНалоговогоОрганаУведомленияАвансовыеПлатежи");
		
	ЗарплатаКадрыОтображениеОшибокКлиентСервер.УдалитьОшибкиИзДанныхФормыПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ДатаУведомленияАвансовыеПлатежи");
		
	ЗарплатаКадрыОтображениеОшибок.ОчиститьФлагНаличияОшибокПоПутиКДанным(
		ЭтотОбъект,
		"Объект.ДатаУведомленияАвансовыеПлатежи");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлементИндикацииОшибкиНажатие(Элемент, СтандартнаяОбработка)
	ЗарплатаКадрыОтображениеОшибокКлиент.ЭлементИндикацииОшибкиНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлементИндикацииПриАктивизацииЯчейки(Элемент)
	ЗарплатаКадрыОтображениеОшибокКлиент.ЭлементИндикацииПриАктивизацииЯчейки(ЭтотОбъект, Элемент);
КонецПроцедуры

СтарыеЗначенияКонтролируемыхПолей = Новый Соответствие;

#КонецОбласти

#КонецОбласти
