
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ПлатежноеПоручениеФормы.ЗаполнитьПравилоУплатыНалоговИзПараметровФормы(ЭтотОбъект, Параметры);
	
	ПлатежноеПоручениеФормы.ЗаполнитьСведенияОГосударственномОрганеИзПараметров(ЭтотОбъект, Параметры);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		УстановитьЗначенияПоУмолчаниюДляНовогоДокумента(Параметры);
		
		ПодготовитьФормуНаСервере();
		
	КонецЕсли;
	
	ДлительнаяОперацияПроверкиПлатежныхРеквизитов = ПлатежноеПоручениеФормы.ПроверитьПлатежныеРеквизитыВФоне(ЭтотОбъект);
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтотОбъект,
		"БП.Документ.ПлатежноеПоручение",
		"ФормаДокументаНалоговая",
		НСтр("ru = 'Новости: Платежное поручение'"),
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтотОбъект);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодключитьОбработчикОжидания("Подключаемый_ПредупреждениеОбОшибке", 0.5, Истина);
	
	ЗапуститьПроверкуФоновогоЗадания();
	
	ЗапуститьОбновлениеБаннераСостоянияОтправки()
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ Объект.ПометкаУдаления
		И ЭтоИнтерфейсИнтеграцииСБанком
		И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	
	ПроверитьПередЗаписью(Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьНомерДокумента(ТекущийОбъект);
	
	ПроверкаРеквизитовОрганизации.ПередЗаписьюНаСервере(
			Объект.Организация,
			Объект.СчетОрганизации,
			ИспользоватьНесколькоБанковскихСчетовОрганизации,
			Отказ,
			ПараметрыЗаписи);
			
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Состояние", Состояние);
	
	ВыполнениеЗадачБухгалтера.УстановитьСвойстваПлатежаПриРегистрации(
		ТекущийОбъект,
		ПравилоУплатыНалогов,
		ПериодСобытияКалендаря);
	
	ПараметрыЗаписи.Вставить("СостояниеИнтеграцииСБанкомДо", РегистрыСведений.ДокументыИнтеграцииСБанком.СостояниеИнтеграции(ТекущийОбъект.Ссылка));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПлатежноеПоручениеФормы.УстановитьСостояниеДокумента(ЭтотОбъект);
	
	ПлатежноеПоручениеФормы.ПроверитьИзменитьНастройкуПлатежаВБюджет(ЭтотОбъект);
	
	РазблокироватьДанныеФормыДляРедактирования();
	
	Состояние = ПолучитьСостояниеОбмена(Объект.Ссылка);
	
	ПараметрыЗаписи.Вставить("СостояниеИнтеграцииСБанкомПосле", РегистрыСведений.ДокументыИнтеграцииСБанком.СостояниеИнтеграции(ТекущийОбъект.Ссылка));
	Если ПараметрыЗаписи.СостояниеИнтеграцииСБанкомПосле = Перечисления.СостоянияДокументовИнтеграцииСБанком.ПодготовленоКОтправке Тогда
		РегистрыСведений.ДокументыИнтеграцииСБанком.ОтправитьОповещениеОбИзмененииПоДокументамВФоне(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Ссылка));
	КонецЕсли;
	
	Если ЭтоИнтерфейсИнтеграцииСБанком Тогда
		УстановитьЗаголовокФормыПриИнтерфейсеИнтеграцииСБанком(ЭтотОбъект);
		ПоказатьБаннерСостоянияОтправки();
	КонецЕсли;
	
	БанкИКассаФормы.ПоказатьБаннерПредупреждениеОЗаполненииРеквизитовПлатежаНПД(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьФорму", ВладелецФормы, Объект.Ссылка);
	
	ДокументОплачен = Состояние = ПредопределенноеЗначение("Перечисление.СостоянияБанковскихДокументов.Оплачено");
	
	ПлатежноеПоручениеФормыКлиент.ОповеститьОЗаписиПлатежногоПорученияНаУплатуНалога(
		Объект, ДокументОплачен);
	
	Если ПараметрыЗаписи.СостояниеИнтеграцииСБанкомДо <> ПараметрыЗаписи.СостояниеИнтеграцииСБанкомПосле Тогда
		Оповестить("ИзменилосьСостояниеДокументаИнтеграцииСБанком", Неопределено, Объект.Ссылка);
	КонецЕсли;
	
	ЗапуститьОбновлениеБаннераСостоянияОтправки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение   = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыборРеквизитовПлательщика" И Источник = ЭтотОбъект Тогда
		
		ИзмененКПП = Параметр.КПППлательщика <> Объект.КПППлательщика;
		Модифицированность = ИзмененКПП ИЛИ Параметр.ИННПлательщика <> Объект.ИННПлательщика
			ИЛИ СокрЛП(Параметр.ТекстПлательщика) <> СокрЛП(Объект.ТекстПлательщика);
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		Если ИзмененКПП И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога") Тогда
			ОбработатьИзменениеКПППлательщика();
		ИначеЕсли Модифицированность Тогда
			НадписьРеквизитыПлательщика = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПлательщика(ЭтотОбъект);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ВыборРеквизитовПолучателя" И Источник = ЭтотОбъект Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		НадписьРеквизитыПолучателя = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПолучателя(ЭтотОбъект);
		Модифицированность = Истина;
	ИначеЕсли ИмяСобытия = "ОбновитьФорму" И ТипЗнч(Источник) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		
		Прочитать();
		
	ИначеЕсли ИмяСобытия = "Запись_Контрагенты" Тогда
		Если Источник = Объект.Контрагент Тогда
			УстановитьРеквизитыПолучателяНаСервере(Истина);
			Модифицированность = Истина;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "Запись_Организации" Тогда
		Если Источник = Объект.Организация Тогда
			ОбработатьИзмененияВОрганизацииНаСервере();
			Модифицированность = Истина;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ОбновитьСостояниеОбменСБанками" Тогда
		ОтобразитьСостояниеОбменаСБанком();
		ДокументОплачен = Состояние = ПредопределенноеЗначение("Перечисление.СостоянияБанковскихДокументов.Оплачено");
		ПлатежноеПоручениеФормыКлиент.ОповеститьОЗаписиПлатежногоПорученияНаУплатуНалога(
			Объект, ДокументОплачен);
	ИначеЕсли ИмяСобытия = "ИзмененБанковскийСчет" Тогда
		Если Параметр.Владелец = Объект.Организация Тогда
			УстановитьРеквизитыПлательщикаНаСервере();
			Модифицированность = Истина;
		ИначеЕсли Параметр.Владелец = Объект.Контрагент Тогда
			УстановитьРеквизитыПолучателяНаСервере(Истина, Ложь);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Перем ПериодПлатежа;
	
	УстановитьЗаголовокФормыПриИнтерфейсеИнтеграцииСБанком(ЭтотОбъект);
	
	ПлатежноеПоручениеФормыКлиентСервер.УстановитьОчередностьПлатежаПо345ФЗДляПеречисленияВБюджет(ЭтотОбъект);
	
	ИзменилсяМесяц = НачалоМесяца(Объект.Дата) <> НачалоМесяца(ПредыдущаяДата);
	РеквизитыПерезаполнены = Ложь;
	
	Если ПлатежиВБюджетКлиентСервер.ПрименяетсяОКТМО8Символов(Объект.Дата) Тогда
		Объект.КодОКАТО = Лев(Объект.КодОКАТО, 8);
		НадписьРеквизитыПлатежейВБюджет = ПлатежноеПоручениеФормыКлиентСервер.НадписьРеквизитыПлатежейВБюджет(ЭтотОбъект);
	КонецЕсли;
	
	Если ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(Объект.ПоказательПериода) Тогда
		ПоказателиПериода = ПлатежиВБюджетКлиентСервер.РазобратьНалоговыйПериод(Объект.ПоказательПериода);
		ПериодПлатежа     = ПоказателиПериода.Дата;
	КонецЕсли;
	
	Если ПлатежиВБюджетКлиентСервер.ДействуетПриказ107н(ПредыдущаяДата)
		<> ПлатежиВБюджетКлиентСервер.ДействуетПриказ107н(Объект.Дата) Тогда
		Объект.ПеречислениеВБюджет = Истина;
		ИзменениеПериодаПримененияПравилПлатежаВБюджет();
	ИначеЕсли ПлатежиВБюджетКлиентСервер.ДействуетПриказ2017_90н(ПредыдущаяДата)
		<> ПлатежиВБюджетКлиентСервер.ДействуетПриказ2017_90н(Объект.Дата)
		ИЛИ ЗначениеЗаполнено(ПериодПлатежа)
		И ПлатежиВБюджетКлиентСервер.ДействуетПриказ2017_90н(ПериодПлатежа)
		<> ПлатежиВБюджетКлиентСервер.ДействуетПриказ2017_90н(Объект.Дата) Тогда
		НалогПриИзмененииНаСервере(РеквизитыПерезаполнены, "");
	Иначе
		Если ИзменилсяМесяц Тогда
			ИзменитьПеречислениеВБюджет(,, Истина);
			РеквизитыПерезаполнены = Истина;
		КонецЕсли;
	КонецЕсли;
	
	УведомитьПользователяПлатежиВБюджет();
	
	Если НачалоДня(Объект.Дата) <> НачалоДня(ПредыдущаяДата) ИЛИ ИзменилсяМесяц Тогда
		ИзменитьПлатежныеРеквизитыПриИзмененииДаты(РеквизитыПерезаполнены, ИзменилсяМесяц);
	КонецЕсли;
	
	ЗапуститьПроверкуФоновогоЗадания();
	
	ПредыдущаяДата = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерПлатежногоПорученияПриИзменении(Элемент)
	
	УстановитьЗаголовокФормыПриИнтерфейсеИнтеграцииСБанком(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетОрганизацииПриИзменении(Элемент)
	
	СчетОрганизацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыПлательщикаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПлатежноеПоручениеФормыКлиент.ОткрытьФормуРедактированияРеквизитовПлательщика(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииНаСервере(Истина, Истина);
	
	ЗапуститьПроверкуФоновогоЗадания();
	
	УведомитьПользователяПлатежиВБюджет();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("Ключ", Объект.Контрагент);
		ПараметрыФормы.Вставить("ОткрытИзПлатежки"); 
		
		ЗначенияЗаполнения = Новый Структура();
		ЗначенияЗаполнения.Вставить("ГосударственныйОрган", Истина);
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетКонтрагентаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		
		СчетКонтрагентаПриИзмененииНаСервере(ПустаяСтрока(Объект.ИННПолучателя));
		
		ЗапуститьПроверкуФоновогоЗадания();
		
		УведомитьПользователяПлатежиВБюджет();
		
	Иначе
		
		СчетПолучателяБИКБанка = "";
		СчетПолучателяВБанкеРФ = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыПолучателяНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПлатежноеПоручениеФормыКлиент.ОткрытьФормуРедактированияРеквизитовПолучателя(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент)
	
	СформироватьНазначениеПлатежаНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыПлатежейВБюджетНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПлатежноеПоручениеФормыКлиент.ОткрытьФормуРедактированияРеквизитовНаУплатуНалога(
		ЭтотОбъект, ОповещениеОбработкаРедактированияРеквизитовПлатежаВБюджетЗавершение());
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеПлатежаПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.НазначениеПлатежа) Тогда
		НазначениеПлатежаБылоИзмененоВручную = Ложь;
	Иначе
		НазначениеПлатежаБылоИзмененоВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыОрганизацииСсылкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ПроверкаРеквизитовОрганизацииКлиент.РеквизитыОрганизацииСсылкаОбработкаНавигационнойСсылки(Объект.Организация, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредупреждениеОЗаполненииРеквизитовПлатежаНПДОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	БанкИКассаФормыКлиент.ОбработатьСсылкуБаннераПредупреждениеОЗаполненииРеквизитовПлатежаНПД(
		Объект.Организация, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательГиперрсылкойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = ПараметрыФормыРедактированияРеквизитовПолучателя(Объект.Контрагент);
	ПараметрыФормы.Вставить("ОткрытИзПлатежногоПоручения", Истина);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтотОбъект.ТолькоПросмотр);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьИзменениеПлатежныхРеквизитовФНС", ЭтотОбъект, ПараметрыФормы);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ПлатежныеРеквизитыГосударственныхОрганов", ПараметрыФормы, ЭтотОбъект, ЭтотОбъект, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетКонтрагентаExtendedTooltipОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "e1cib/app/Документ.ПлатежноеПоручение.Форма.ФормаПроверкиПлатежныхРеквизитов" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ПлатежныеРеквизиты", ПлатежныеРеквизиты());
		ПараметрыФормы.Вставить("Контрагент", Объект.Контрагент);
		ОписаниеОповещения = Новый ОписаниеОповещения("СчетКонтрагентаExtendedTooltipОбработкаНавигационнойСсылкиЗавершение", ЭтотОбъект);
		ОткрытьФорму("Документ.ПлатежноеПоручение.Форма.ФормаПроверкиПлатежныхРеквизитов",
			ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор,,, ОписаниеОповещения);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "e1cib/app/Обработка.ИнтернетПоддержкаПользователей.Форма.ОбщаяАвторизация" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьПлатежныеРеквизиты", ЭтотОбъект);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСБанкамиКлиент.ОткрытьАктуальныйЭД(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСостояниеЗагрузкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ИнтеграцияСБанкамиФормыКлиент.ОбработкаНавигационнойСсылкиБаннера(
		ЭтотОбъект, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьВБанк(Команда)
	
	Если Модифицированность Тогда
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		ПараметрыЗаписи.Вставить("Закрыть",     Истина);
		
		Если Записать(ПараметрыЗаписи) Тогда
			ОбменСБанкамиКлиент.СформироватьПодписатьОтправитьЭД(Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)
	
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтотОбъект,
		Команда
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	ПараметрыЗаписи.Вставить("Закрыть",     Истина);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ПлатежноеПоручениеФормы.УстановитьФункциональныеОпцииФормы(ЭтотОбъект);
	
	ЗаполнитьРеквизитыФормыПриПодготовке();
	
	ЗаполнитьРеквизитыФормыПоОрганизации();
	
	ЗаполнитьРеквизитыФормыПоСчетуКонтрагента();
	
	УстановитьРежимИнтерфейсаИнтеграцииСБанком();
	
	ПоказатьБаннерСостоянияОтправки();
	
	АвтоЗначенияРеквизитов = ПлатежноеПоручениеФормы.АвтоЗначенияРеквизитов(ЭтотОбъект);
	ДополнитьАвтоЗначенияРеквизитовТекстомНазначенияПлатежа(Объект, АвтоЗначенияРеквизитов, ШаблонНазначенияПлатежаВБюджет);
	
	НазначениеПлатежаБылоИзмененоВручную = Документы.ПлатежноеПоручение.НазначениеПлатежаИзмененоВручную(
		Объект.НазначениеПлатежа, АвтоЗначенияРеквизитов.ТекстНазначенияПлатежа);
	
	УстановитьНадписиРеквизитов();
	
	ПлатежноеПоручениеФормы.ОтобразитьПредупреждениеОЗаполненииРеквизитовСчета(ЭтотОбъект);
	
	ПлатежноеПоручениеФормы.ЗаполнитьРеквизитыСчетаПолучателя(ЭтотОбъект);
	
	ПлатежноеПоручениеФормы.УстановитьОграничениеТипаКонтрагента(ЭтотОбъект);
	ПлатежноеПоручениеФормы.УстановитьПараметрыВыбораБанковскихСчетов(ЭтотОбъект);
	ПлатежноеПоручениеФормы.УстановитьСостояниеДокумента(ЭтотОбъект);
	
	БанкИКассаФормы.ПоказатьБаннерПредупреждениеОЗаполненииРеквизитовПлатежаНПД(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимОбменаСБанком()
	
	НастроенПрямойОбменСБанком = НастроенПрямойОбменСБанком();
	
	ОтобразитьСостояниеОбменаСБанком();
	
КонецПроцедуры

&НаСервере
Функция НастроенПрямойОбменСБанком()
	
	Если ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СчетОрганизации, "Банк");
		Если ЗначениеЗаполнено(Банк) Тогда
			НастройкаОбмена = ОбменСБанками.НастройкаОбмена(Объект.Организация, Банк);
			Возврат ЗначениеЗаполнено(НастройкаОбмена);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура УстановитьРежимИнтерфейсаИнтеграцииСБанком()
	
	Элементы.Номер.Видимость                      = НЕ ЭтоИнтерфейсИнтеграцииСБанком;
	Элементы.НомерПлатежногоПоручения.Видимость   = ЭтоИнтерфейсИнтеграцииСБанком;
	
	Если ЭтоИнтерфейсИнтеграцииСБанком Тогда
		Элементы.ФормаПровестиИЗакрыть.Заголовок = НСтр("ru = 'Записать и закрыть'");
	КонецЕсли;
	
	Элементы.ГруппаГлобальныеКоманды.Видимость    = НЕ ЭтоИнтерфейсИнтеграцииСБанком;
	
	Если ЭтоИнтерфейсИнтеграцииСБанком Тогда
		Исключения = "ФормаИзменитьФорму";
		ОтключитьВидимостьПодчиненныхЭлементов(Элементы.ГруппаКнопкиКоманднойПанели, Исключения);
	КонецЕсли;
	
	Элементы.СчетОрганизацииИнтеграцияСБанком.Видимость = ЭтоИнтерфейсИнтеграцииСБанком;
	Элементы.ГруппаШапкаПравая.Видимость          = НЕ ЭтоИнтерфейсИнтеграцииСБанком;
	Элементы.СостояниеДокумента.Видимость         = НЕ ЭтоИнтерфейсИнтеграцииСБанком;
	
	Элементы.Контрагент.Видимость                 = НЕ ЭтоИнтерфейсИнтеграцииСБанком;
	Элементы.СчетКонтрагента.Видимость            = НЕ ЭтоИнтерфейсИнтеграцииСБанком;
	Элементы.НадписьРеквизитыПолучателя.Видимость = НЕ ЭтоИнтерфейсИнтеграцииСБанком;
	
	Элементы.ПолучательГиперрсылкой.Видимость = ЭтоИнтерфейсИнтеграцииСБанком;
	
	Если ЭтоИнтерфейсИнтеграцииСБанком Тогда
		ЭтотОбъект.АвтоЗаголовок = Ложь;
	КонецЕсли;
	УстановитьЗаголовокФормыПриИнтерфейсеИнтеграцииСБанком(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьБаннерСостоянияОтправки()
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ИнтеграцияСБанкамиФормы.ПоказатьБаннерНовогоДокумента(ЭтотОбъект, Объект.СчетОрганизации);
		
	Иначе
		
		СостоянияИнтеграцииДокументов = РегистрыСведений.ДокументыИнтеграцииСБанком.СостоянияИнтеграцииДокументов(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Ссылка));
		
		ИнтеграцияСБанкамиФормы.ПолучитьДанныеИПоказатьБаннерСостоянияОтправки(ЭтотОбъект, СостоянияИнтеграцииДокументов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбновлениеБаннераСостоянияОтправки()
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И ИнтервалПроверкиСостоянияИнтеграцииСБанком > 0 Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ЗапуститьОбновлениеБаннераСостояниеОтправки", ИнтервалПроверкиСостоянияИнтеграцииСБанком, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗапуститьОбновлениеБаннераСостояниеОтправки() Экспорт
	
	Если ХэшДанныхБаннера(Объект.Ссылка) <> ХешДанныхБаннера Тогда
		ПоказатьБаннерСостоянияОтправки();
	КонецЕсли;
	ЗапуститьОбновлениеБаннераСостоянияОтправки();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ХэшДанныхБаннера(Знач ДокументОплаты)
	
	ДокументыОплаты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументОплаты);
	Возврат ИнтеграцияСБанкамиФормы.ХэшДанныхБаннера(ДокументыОплаты);
	
КонецФункции

&НаСервере
Процедура ОтключитьВидимостьПодчиненныхЭлементов(Элемент, Исключения)
	
	ИсключаемыеЭлементы = СтрРазделить(Исключения, ",", Ложь);
	
	Для Каждого ПодчиненныйЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
		Если ИсключаемыеЭлементы.Найти(ПодчиненныйЭлемент.Имя) = Неопределено Тогда
			ПодчиненныйЭлемент.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПриПодготовке()
	
	РеквизитыОрганизацииСсылка = ПроверкаРеквизитовОрганизации.СтрокаСообщенияНеЗаполненБанковскийСчет();
	
	ПредыдущаяДата = Объект.Дата;
	
	// Налоги платяться только государственному органу,
	// поэтому контрагент - всегда юридическое лицо.
	КонтрагентЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	ПеречислениеФизическомуЛицу = Ложь;
	ПеречислениеНаЛичныйСчет    = Ложь;
	
	ЭтоИнтерфейсИнтеграцииСБанком = ОбщегоНазначенияБП.ЭтоИнтерфейсИнтеграцииСБанком();
	
	Если ЭтоИнтерфейсИнтеграцииСБанком Тогда
		НомерПлатежногоПоручения = УчетДенежныхСредствКлиентСервер.НомерОбъектаБезПрефикса(Объект.Номер);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПоСчетуКонтрагента()
	
	Если ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		НомерСчетаПолучателя = Объект.СчетКонтрагента.НомерСчета;
	Иначе
		НомерСчетаПолучателя = "";
	КонецЕсли;
	
	УстановитьРежимОбменаСБанком();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПоОрганизации()
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ИспользоватьНесколькоБанковскихСчетовОрганизации =
			Справочники.БанковскиеСчета.ИспользуетсяНесколькоБанковскихСчетовОрганизации(Объект.Организация);
		ОрганизацияЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ЮридическоеФизическоеЛицо");
		СчетПоГосконтракту   = ЗначениеЗаполнено(Объект.СчетОрганизации) И
			ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СчетОрганизации, "ГосударственныйКонтракт"));
	Иначе
		ИспользоватьНесколькоБанковскихСчетовОрганизации = Истина;
		ОрганизацияЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		СчетПоГосконтракту = Ложь;
	КонецЕсли;
	
	ОсновнойБанковскийСчетОрганизацииЗаполнен = ПроверкаРеквизитовОрганизации.ОсновнойБанковскийСчетОрганизацииЗаполнен(Объект.Организация);
	ПодключенаИнтеграцияСБанком = ИнтеграцияСБанкамиПовтИсп.ИнтеграцияВключена(Объект.СчетОрганизации);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()
	
	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтотОбъект, ИдентификаторыСобытийПриОткрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПредупреждениеОбОшибке()
	
	УведомитьПользователяПлатежиВБюджет();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписиРеквизитов()
	
	НадписьРеквизитыПлательщика     = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПлательщика(ЭтотОбъект);
	НадписьРеквизитыПолучателя      = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПолучателя(ЭтотОбъект);
	НадписьРеквизитыПлатежейВБюджет = ПлатежноеПоручениеФормыКлиентСервер.НадписьРеквизитыПлатежейВБюджет(ЭтотОбъект);
	УстановитьНадписьПолучателя(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДополнитьАвтоЗначенияРеквизитовТекстомНазначенияПлатежа(Объект, АвтоЗначенияРеквизитов, ШаблонНазначенияПлатежаВБюджет)
	
	ТекстНазначенияАвто = АвтоТекстНазначенияПлатежа(Объект, АвтоЗначенияРеквизитов, ШаблонНазначенияПлатежаВБюджет);
	АвтоЗначенияРеквизитов.Вставить("ТекстНазначенияПлатежа", ТекстНазначенияАвто);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АвтоТекстНазначенияПлатежа(Объект, АвтоЗначенияРеквизитов, ШаблонНазначенияПлатежаВБюджет)
	
	ПараметрыНазначенияПлатежа = Документы.ПлатежноеПоручение.НовыеПараметрыНазначенияПлатежа();
	ЗаполнитьЗначенияСвойств(ПараметрыНазначенияПлатежа, Объект);
	
	ТекстНазначенияАвто = Документы.ПлатежноеПоручение.ТекстНазначенияПлатежа(ПараметрыНазначенияПлатежа, ШаблонНазначенияПлатежаВБюджет);
	
	Возврат ТекстНазначенияАвто;
	
КонецФункции

&НаСервере
Процедура УстановитьЗначенияПоУмолчаниюДляНовогоДокумента(Параметры)
	
	Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога;
	
	ПлатежноеПоручениеФормыКлиентСервер.УстановитьОчередностьПлатежаПо345ФЗДляПеречисленияВБюджет(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПеречислениеВБюджет(НастройкаЗаполнения = Неопределено, ИзменениеКонтрагента = Ложь, ПолучитьКонтекст = Ложь, ИзменениеВидаОперации = Ложь)
	
	НомерСчетаПолучателя = "";
	Если ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		РеквизитыСчетаПолучателя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.СчетКонтрагента, "НомерСчета");
		НомерСчетаПолучателя = РеквизитыСчетаПолучателя.НомерСчета;
	КонецЕсли;
	
	Объект.ПеречислениеВБюджет = Истина;
	ПлатежноеПоручениеФормы.УстановитьРеквизитыДляПлатежаВБюджет(ЭтотОбъект);
	
	АвтоЗначенияРеквизитов = ПлатежноеПоручениеФормы.АвтоЗначенияРеквизитов(ЭтотОбъект);
	
	Если НЕ ИзменениеКонтрагента И НЕ ИзменениеВидаОперации Тогда
		ЗаполнитьЗначенияСвойств(Объект, АвтоЗначенияРеквизитов,, "ИННПлательщика, КПППлательщика, ТекстПлательщика");
	Иначе
		ЗаполнитьЗначенияСвойств(Объект, АвтоЗначенияРеквизитов);
	КонецЕсли;
	
	УстановитьНадписиРеквизитов();
	
	ИзменилсяКонтрагент = ИзменениеКонтрагента;
	ЗаполнитьРеквизитыПлатежаВБюджет(ЭтотОбъект, ИзменилсяКонтрагент, НастройкаЗаполнения);
	Если НЕ ИзменениеКонтрагента И ИзменилсяКонтрагент Тогда
		КонтрагентПриИзмененииНаСервере(,, Истина);
	КонецЕсли;
	
	Если КонтекстПлатежногоДокумента <> Неопределено Тогда
		Если ПолучитьКонтекст Тогда
			КонтекстПлатежногоДокумента = Документы.ПлатежноеПоручение.КонтекстПлатежногоДокумента(Объект);
		Иначе
			Если НомерСчетаПолучателя <> КонтекстПлатежногоДокумента.НомерСчетаПолучателя Тогда
				КонтекстПлатежногоДокумента.НомерСчетаПолучателя = НомерСчетаПолучателя;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПлатежаВБюджет(Форма, ИзменилсяКонтрагент = Ложь, НастройкаЗаполнения = Неопределено)
	
	Объект = Форма.Объект;
	
	Если (НЕ ЗначениеЗаполнено(Объект.Налог) 
			ИЛИ Объект.Налог = Справочники.ВидыНалоговИПлатежейВБюджет.ПрочиеНалогиИСборы)
		И НастройкаЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОбъекта = ПлатежиВБюджетКлиентСерверПереопределяемый.НовыеРеквизитыПлатежаВБюджет(Объект, Объект.ПеречислениеВБюджет);
	
	ИсточникДанныхКонтекста = ПлатежноеПоручениеФормы.ИсточникДанныхКонтекстаПлатежногоДокумента(Форма);
	ЗаполнитьРеквизитыПлатежаВБюджетНаСервере(РеквизитыОбъекта, ИсточникДанныхКонтекста, НастройкаЗаполнения);
	
	// Функция вызвана из обработчика изменения контрагента
	Если ИзменилсяКонтрагент И РеквизитыОбъекта.Свойство("Контрагент") Тогда
		
		ИсключатьСвойства = Новый Массив;
		ИсключатьСвойства.Добавить("Контрагент");
		Если РеквизитыОбъекта.Свойство("СчетКонтрагента") Тогда
			ИсключатьСвойства.Добавить("СчетКонтрагента");
		КонецЕсли;
		
		// Назначение платежа заполняем значением "по умолчанию" только для вида операции Уплата налога
		Если РеквизитыОбъекта.Свойство("ШаблонНазначенияПлатежаВБюджет") Тогда
			Форма.ШаблонНазначенияПлатежаВБюджет = РеквизитыОбъекта.ШаблонНазначенияПлатежаВБюджет;
		КонецЕсли;
		
		Если Форма.СчетПоГосконтракту Тогда
			ИсключатьСвойства.Добавить("ИдентификаторПлатежа");
		КонецЕсли;
		
		ИзменилсяКонтрагент = ИзменилсяКонтрагент ИЛИ 
			РеквизитыОбъекта.Свойство("Контрагент") И РеквизитыОбъекта.Контрагент <> Объект.Контрагент;
		
		ИсключатьСвойстваИзЗаполнения = СтрСоединить(ИсключатьСвойства, ",");
		Если ПустаяСтрока(ИсключатьСвойстваИзЗаполнения) Тогда
			ЗаполнитьЗначенияСвойств(Объект, РеквизитыОбъекта);
		Иначе
			ЗаполнитьЗначенияСвойств(Объект, РеквизитыОбъекта,, ИсключатьСвойстваИзЗаполнения);
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.НадписьРеквизитыПлатежейВБюджет = ПлатежноеПоручениеФормыКлиентСервер.НадписьРеквизитыПлатежейВБюджет(Форма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПлатежаВБюджетНаСервере(РеквизитыОбъекта, Знач ИсточникДанных, Знач НастройкаЗаполнения)
	
	Если НастройкаЗаполнения <> Неопределено Тогда
		ДанныеЗаполнения = РегистрыСведений.РеквизитыУплатыНалоговИПлатежейВБюджет.ДанныеЗаполнения(
			НастройкаЗаполнения, ИсточникДанных.Период, ИсточникДанных.Организация);
	КонецЕсли;
	
	Документы.ПлатежноеПоручение.ЗаполнитьРеквизитыПлатежаВБюджетДопустимымиЗначениями(
		РеквизитыОбъекта, ИсточникДанных, ДанныеЗаполнения);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере(ОпределятьОсновнойВариантПеречисления = Ложь, Знач ИзменениеКонтрагента = Ложь, Знач ЗаполнениеПоНастройкеПлатежаВБюджет = Ложь)
	
	Если ЗаполнениеПоНастройкеПлатежаВБюджет Тогда
		КонтрагентОбработатьИзменение(ОпределятьОсновнойВариантПеречисления, ИзменениеКонтрагента, Истина);
	Иначе
		КонтрагентОбработатьИзменение(ОпределятьОсновнойВариантПеречисления, ИзменениеКонтрагента);
		ЗаполнитьРеквизитыПлатежаВБюджет(ЭтотОбъект, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентОбработатьИзменение(ОпределятьОсновнойВариантПеречисления = Ложь, ИзменениеКонтрагента = Ложь, ЗаполнениеПоНастройкеПлатежаВБюджет = Ложь)
	
	Если ИзменениеКонтрагента ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		УстановитьСчетПолучателя(Истина, ЗаполнениеПоНастройкеПлатежаВБюджет);
	КонецЕсли;
	
	Если ИзменениеКонтрагента И НЕ ЗаполнениеПоНастройкеПлатежаВБюджет Тогда
		ПлатежноеПоручениеФормы.ПроверитьИзменитьКПППлательщика(ЭтотОбъект);
	КонецЕсли;
	
	ПлатежноеПоручениеФормы.УстановитьПараметрыВыбораБанковскихСчетов(ЭтотОбъект);
	
	АвтоЗначенияРеквизитов = ПлатежноеПоручениеФормы.АвтоЗначенияРеквизитов(ЭтотОбъект);
	
	// При изменении контрагента нельзя затирать реквизиты организации.
	ЗаполнитьЗначенияСвойств(Объект, АвтоЗначенияРеквизитов, , "ИННПлательщика, КПППлательщика, ТекстПлательщика");
	
	НадписьРеквизитыПлательщика = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПлательщика(ЭтотОбъект);
	НадписьРеквизитыПолучателя  = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПолучателя(ЭтотОбъект);
	УстановитьНадписьПолучателя(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСчетПолучателя(Знач ИзменениеКонтрагента = Ложь, Знач ЗаполнениеПоНастройкеПлатежаВБюджет = Ложь)
	
	Если СчетПоГосконтракту Тогда
		ПлатежноеПоручениеФормы.УстановитьСчетКонтагентаПоГосконтракту(ЭтотОбъект);
	Иначе
		УчетДенежныхСредствБП.УстановитьБанковскийСчет(
			Объект.СчетКонтрагента, Объект.Контрагент, Объект.ВалютаДокумента);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		СчетКонтрагентаПриИзмененииНаСервере(ИзменениеКонтрагента, ЗаполнениеПоНастройкеПлатежаВБюджет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СчетКонтрагентаПриИзмененииНаСервере(Знач ИзменениеКонтрагента = Ложь, Знач ЗаполнениеПоНастройкеПлатежаВБюджет = Ложь)
	
	Если НЕ ЗаполнениеПоНастройкеПлатежаВБюджет Тогда
		ПлатежГосОргану = УчетДенежныхСредствБП.ПлатежГосОргану(Объект.ВидОперации, Объект.Контрагент);
		Если ПлатежГосОргану Тогда
			ИзменитьПеречислениеВБюджет(, ИзменениеКонтрагента);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьРеквизитыФормыПоСчетуКонтрагента();
	
	ЗаполнитьВспомогательныеРеквизитыПолучателя(ИзменениеКонтрагента);
	
	НадписьРеквизитыПолучателя = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПолучателя(ЭтотОбъект);
	УстановитьНадписьПолучателя(ЭтотОбъект);
	
	Если ЗаполнениеПоНастройкеПлатежаВБюджет И НЕ ПустаяСтрока(Объект.НазначениеПлатежа) Тогда
		НазначениеПлатежаБылоИзмененоВручную = Истина;
	КонецЕсли;
	
	СформироватьНазначениеПлатежаНаСервере(Ложь);
	
	ДлительнаяОперацияПроверкиПлатежныхРеквизитов = ПлатежноеПоручениеФормы.ПроверитьПлатежныеРеквизитыВФоне(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВспомогательныеРеквизитыПолучателя(ИзменениеКонтрагента = Истина)
	
	АвтоЗначенияРеквизитов = ПлатежноеПоручениеФормы.АвтоЗначенияРеквизитов(ЭтотОбъект);
	
	ПлатежноеПоручениеФормы.ЗаполнитьРеквизитыПолучателяПоАвтоЗначениямРеквизитов(
		ЭтотОбъект, АвтоЗначенияРеквизитов, ИзменениеКонтрагента);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНазначениеПлатежаНаСервере(ТолькоСумму = Ложь)
	
	Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(
		Объект,
		АвтоЗначенияРеквизитов,
		НазначениеПлатежаБылоИзмененоВручную,
		ТолькоСумму);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьПроверкуФоновогоЗадания()
	
	Если ДлительнаяОперацияПроверкиПлатежныхРеквизитов <> Неопределено Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПроверитьПлатежныеРеквизитыВФонеЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперацияПроверкиПлатежныхРеквизитов, ОповещениеОЗавершении, ПараметрыОжидания);
		
		ДлительнаяОперацияПроверкиПлатежныхРеквизитов = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПлатежныеРеквизитыВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПредотвратитьСбросРедактируемогоЗначения();
	
	УстановитьСостояниеКонтрагента(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредотвратитьСбросРедактируемогоЗначения() Экспорт
	
	// Обход особенности платформы, когда затирается редактируемое значение
	// в текущем элементе при изменении формы.
	Если НЕ ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
		Если ТипЗнч(ТекущийЭлемент) = Тип("ПолеФормы") И ТекущийЭлемент.Вид = ВидПоляФормы.ПолеВвода Тогда
			ТекущийЭлемент.ОбновлениеТекстаРедактирования = ОбновлениеТекстаРедактирования.ПриИзмененииЗначения;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеКонтрагента(Результат)
	
	ПлатежноеПоручениеФормы.УстановитьСостояниеКонтрагента(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыЗаписи = Новый Структура("Закрыть", Истина);
		Если Записать(ПараметрыЗаписи) Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеКПППлательщика()
	
	Если НЕ ЗначениеЗаполнено(Объект.Налог) ИЛИ ПлатежиВБюджетКлиентСервер.ПлатежАдминистрируетсяНалоговымиОрганами(Объект.КодБК) Тогда
		
		РеквизитыГосОргана = ПлатежноеПоручениеФормы.РеквизитыГосударственногоОрганаПоКППОрганизации(
			Объект.Организация, Объект.КПППлательщика);
		
		Если РеквизитыГосОргана <> Неопределено
			И ЗначениеЗаполнено(РеквизитыГосОргана.Ссылка)
			И Объект.Контрагент <> РеквизитыГосОргана.Ссылка Тогда
			
			// Выбран КПП организации, который относится к другому налоговому органу.
			// Поэтому нужно изменить получателя платежа.
			
			Объект.Контрагент      = РеквизитыГосОргана.Ссылка;
			Объект.СчетКонтрагента = РеквизитыГосОргана.ПлатежныеРеквизиты.БанковскийСчет;
			ПлатежноеПоручениеФормы.УстановитьПараметрыВыбораБанковскихСчетов(ЭтотОбъект);
			
			УстановитьРеквизитыПолучателяНаСервере();
			НадписьРеквизитыПолучателя = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПолучателя(ЭтотОбъект);
			УстановитьНадписьПолучателя(ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьРеквизитыПлатежаВБюджет(ЭтотОбъект, Истина);
	НадписьРеквизитыПлательщика = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПлательщика(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизитыПолучателяНаСервере(ОбработкаОповещения = Ложь, ИзменениеКонтрагента = Истина)
	
	Если ОбработкаОповещения И ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
			Объект.СчетКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "ОсновнойБанковскийСчет");
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьВспомогательныеРеквизитыПолучателя(ИзменениеКонтрагента);
	НадписьРеквизитыПолучателя = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПолучателя(ЭтотОбъект);
	УстановитьНадписьПолучателя(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СчетОрганизацииПриИзмененииНаСервере()
	
	ЗаполнитьРеквизитыФормыПоСчетуКонтрагента();
	
	УстановитьРеквизитыПлательщикаНаСервере(ПустаяСтрока(Объект.ИННПлательщика));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизитыПлательщикаНаСервере(Знач ИзменениеОрганизации = Ложь)
	
	ПодключенаИнтеграцияСБанком = ИнтеграцияСБанкамиПовтИсп.ИнтеграцияВключена(Объект.СчетОрганизации);
	
	ПоказатьБаннерСостоянияОтправки();
	
	СчетПоГосконтракту = ЗначениеЗаполнено(Объект.СчетОрганизации) И
		ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СчетОрганизации, "ГосударственныйКонтракт"));
	
	Если СчетПоГосконтракту Тогда
		Объект.ИдентификаторПлатежа = ИдентификаторГосконтактаПоСчету(Объект.СчетОрганизации);
	КонецЕсли;
	
	АвтоЗначенияРеквизитов = ПлатежноеПоручениеФормы.АвтоЗначенияРеквизитов(ЭтотОбъект);
	
	ПлатежноеПоручениеФормы.ЗаполнитьРеквизитыПлательщикаПоАвтоЗначениямРеквизитов(ЭтотОбъект, АвтоЗначенияРеквизитов, ИзменениеОрганизации);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзмененияВОрганизацииНаСервере()
	
	ЗаполнитьРеквизитыФормыПоОрганизации();
	
	Если НЕ ИспользоватьНесколькоБанковскихСчетовОрганизации И ОсновнойБанковскийСчетОрганизацииЗаполнен И Не ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		Объект.СчетОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ОсновнойБанковскийСчет");
	КонецЕсли;
	
	ПлатежноеПоручениеФормы.ОтобразитьПредупреждениеОЗаполненииРеквизитовСчета(ЭтотОбъект);
	
	УстановитьРеквизитыПлательщикаНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеПлатежноеПоручение";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("ПропуститьПроверку")
		И ПараметрыЗаписи.ПропуститьПроверку Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПроверкаРеквизитовПередЗаписьюНаСервере();
	
	СообщатьОДубляхУИН = НЕ СчетПоГосконтракту;
	ТекстВопроса = ПлатежноеПоручениеФормыКлиент.ТекстВопросаОбОшибкахЗаполнения(РезультатПроверки, СообщатьОДубляхУИН);
	
	Если ПустаяСтрока(ТекстВопроса) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина; // Примем решение позже, в зависимости от ответа пользователя
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ВопросЗаписатьСОшибкамиЗавершение", ЭтотОбъект, ПараметрыЗаписи),
		ТекстВопроса,
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаСервере
Функция ПроверкаРеквизитовПередЗаписьюНаСервере()
	
	Возврат ПлатежноеПоручениеФормы.ПроверитьРеквизитыПередЗаписью(ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ВопросЗаписатьСОшибкамиЗавершение(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ПараметрыЗаписи.Вставить("ПропуститьПроверку", Истина);
		Если (Параметры.Ключ.Пустая() Или Модифицированность)
			И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			// Сначала запишем документ, а потом проведем - иначе из-за проверки заполнения документ не только не проведется,
			// но и не запишется.
			ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись;
			Записать(ПараметрыЗаписи);
			ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Записать(ПараметрыЗаписи);
			
			// Форму в этом случае не закрываем - т.к. с большой вероятностью
			// при попытке проведения будут выданы ошибки проверки заполнения и документ не проведется.
			// Если закрыть форму, то эти ошибки пользователь не увидит, т.к. они привязаны к родительскому окну документа.
			// В итоге документ окажется не проведен, что необъяснимо для пользователя:
			//  - он нажимал "Провести и закрыть"
			//  - согласился выполнить это без проверки
			//  - а результат не соответствует ожиданиям.
			Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
				ПараметрыЗаписи.Закрыть = Ложь;
			КонецЕсли;
		Иначе
			Записать(ПараметрыЗаписи);
		КонецЕсли;
		
		Если ПараметрыЗаписи.Свойство("Закрыть") И ПараметрыЗаписи.Закрыть Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетКонтрагентаExtendedTooltipОбработкаНавигационнойСсылкиЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если ТипЗнч(РезультатВыполнения) = Тип("Структура") И РезультатВыполнения.Свойство("ПерезаполнитьКонтрагента") Тогда
		
		УстановитьКонтрагентаНаСервере(РезультатВыполнения.Контрагент, РезультатВыполнения.СчетКонтрагента);
		
	КонецЕсли;
	
	ЗапуститьПроверкуФоновогоЗадания();
	
КонецПроцедуры

&НаСервере
Функция ПлатежныеРеквизиты()
	
	Возврат ПлатежноеПоручениеФормы.ПлатежныеРеквизиты(ЭтотОбъект);
	
КонецФункции

#Область ОшибкиПлатежейВБюджет

&НаКлиенте
Процедура УведомитьПользователяПлатежиВБюджет()
	
	ОписаниеОповещения = ОповещениеОбработкаРедактированияРеквизитовПлатежаВБюджетЗавершение();
	ПлатежноеПоручениеФормыКлиент.УведомитьПользователяПлатежиВБюджет(ЭтотОбъект, ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция ПараметрыФормыРедактированияРеквизитовПолучателя(Контрагент)
	
	СведенияОКонтрагенте = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент,
		"ВидГосударственногоОргана, КодГосударственногоОргана, Наименование");
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидГосударственногоОргана", СведенияОКонтрагенте.ВидГосударственногоОргана);
	ПараметрыФормы.Вставить("КодГосударственногоОргана", СведенияОКонтрагенте.КодГосударственногоОргана);
	ПараметрыФормы.Вставить("НаименованиеГосударственногоОргана", СведенияОКонтрагенте.Наименование);
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаКлиенте
Функция ОповещениеОбработкаРедактированияРеквизитовПлатежаВБюджетЗавершение()
	
	Возврат Новый ОписаниеОповещения("ОбработкаРедактированияРеквизитовПлатежаВБюджетЗавершение", ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ОбработкаРедактированияРеквизитовПлатежаВБюджетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ПлатежноеПоручениеФормыКлиент.ЗаполнитьРеквизитыПлатежаВБюджетПослеРедактированияВФорме(ЭтотОбъект, Результат);
	
	Если Результат.Модифицированность Тогда
		
		РеквизитыОбъекта = ПлатежноеПоручениеФормыКлиентСервер.РеквизитыОбъектаДляФормированияНазначенияПлатежа(ЭтотОбъект);
		
		НазначениеПлатежа = НазначениеПлатежаПриИзмененииПоказателяПериода(РеквизитыОбъекта);
		Если НЕ ПустаяСтрока(НазначениеПлатежа) Тогда
			Если НЕ НазначениеПлатежаБылоИзмененоВручную
				ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога") Тогда
				Объект.НазначениеПлатежа = НазначениеПлатежа;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	НадписьРеквизитыПлатежейВБюджет = ПлатежноеПоручениеФормыКлиентСервер.НадписьРеквизитыПлатежейВБюджет(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИзменениеПериодаПримененияПравилПлатежаВБюджет()
	
	НадписьРеквизитыПлатежейВБюджет = ПлатежноеПоручениеФормыКлиентСервер.НадписьРеквизитыПлатежейВБюджет(ЭтотОбъект);
	
	УстановитьРеквизитыПлательщикаНаСервере();
	
	ПлатежноеПоручениеФормы.НайтиОшибкиПлатежаВБюджет(ЭтотОбъект, ПредыдущаяДата);
	
КонецПроцедуры

&НаСервере
Функция УстановитьКонтрагентаНаСервере(Контрагент, СчетКонтрагента)
	
	Модифицированность = Истина;
	
	ИзменилсяКонтрагент = Объект.Контрагент <> Контрагент;
	
	Объект.Контрагент      = Контрагент;
	Объект.СчетКонтрагента = СчетКонтрагента;
	
	СчетКонтрагентаПриИзмененииНаСервере(ИзменилсяКонтрагент);
	
КонецФункции

&НаСервере
Процедура НалогПриИзмененииНаСервере(АктуализированыРеквизитыПлатежаВБюджет, СтрокаПоискаПоКБК)
	
	АктуализированыРеквизитыПлатежаВБюджет = Ложь;
	Если НЕ Справочники.ВидыНалоговИПлатежейВБюджет.РеквизитыАктуальны(Объект.Налог, Объект.Дата) Тогда
		Справочники.ВидыНалоговИПлатежейВБюджет.ОбновитьПоставляемыеДанныеИзКлассификатора();
		АктуализированыРеквизитыПлатежаВБюджет = Истина;
	КонецЕсли;
	
	НалогОбработатьИзменение(СтрокаПоискаПоКБК);
	
КонецПроцедуры

&НаСервере
Процедура НалогОбработатьИзменение(СтрокаПоискаПоКБК)
	
	ВидНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Налог, "ВидНалога");
	
	Объект.ВидНалоговогоОбязательства = Справочники.ВидыНалоговИПлатежейВБюджет.ВидНалоговогоОбязательстваПоКБК(
		СтрокаПоискаПоКБК, Объект.Дата, ВидНалога);
	
	ПравилаЗаполнения = ПлатежиВБюджетНастройки.ПравилаЗаполненияРеквизитовПлатежа(Объект.Налог);
	Если ПравилаЗаполнения.ЗаполнятьПолучателя Тогда
		ТекущийПолучатель = Объект.Контрагент;
		Получатель = ДанныеГосударственныхОрганов.АдминистраторНалогаОрганизации(Объект.Налог, Объект.Организация, Объект.Дата);
		Если ЗначениеЗаполнено(Получатель) И ТекущийПолучатель <> Получатель Тогда
			Объект.Контрагент = Получатель;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Налог <> Справочники.ВидыНалоговИПлатежейВБюджет.ПрочиеНалогиИСборы Тогда
		РегистрацияВНалоговомОргане = Документы.ПлатежноеПоручение.РегистрацияВНалоговомОрганеПоДаннымПлатежногоПоручения(
			Объект.Организация, Объект.Контрагент, Объект.КПППлательщика);
		НастройкаЗаполнения = РегистрыСведений.РеквизитыУплатыНалоговИПлатежейВБюджет.КлючНастройкиУплатыНалога(
			Объект.Налог, Объект.Организация, РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	ПлатежноеПоручениеФормы.ПерезаполнитьСтатьюДДС(ЭтотОбъект);
	
	ЗаполнитьРеквизитыПлатежаВБюджет(ЭтотОбъект,, НастройкаЗаполнения);
	
	Если ТекущийПолучатель <> Объект.Контрагент Тогда
		КонтрагентПриИзмененииНаСервере(, Истина, Истина);
	КонецЕсли;
	
	БанкИКассаФормы.ПоказатьБаннерПредупреждениеОЗаполненииРеквизитовПлатежаНПД(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПлатежныеРеквизитыПриИзмененииДаты(РеквизитыПерезаполнены, ИзменилсяМесяц)
	
	Если НЕ РеквизитыПерезаполнены Тогда
		Документы.ПлатежноеПоручение.ИзменитьПлатежныеРеквизитыПриИзмененииДаты(Объект, ПредыдущаяДата);
		НадписьРеквизитыПлательщика = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПлательщика(ЭтотОбъект);
		НадписьРеквизитыПолучателя  = ПлатежноеПоручениеФормыКлиентСервер.УстановитьНадписьРеквизитыПолучателя(ЭтотОбъект);
		УстановитьНадписьПолучателя(ЭтотОбъект);
	КонецЕсли;
	
	БанкИКассаФормы.ПоказатьБаннерПредупреждениеОЗаполненииРеквизитовПлатежаНПД(ЭтотОбъект);
	
	ДлительнаяОперацияПроверкиПлатежныхРеквизитов = ПлатежноеПоручениеФормы.ПроверитьПлатежныеРеквизитыВФоне(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НазначениеПлатежаПриИзмененииПоказателяПериода(Знач РеквизитыОбъекта)
	
	НазначениеПлатежа = Справочники.ВидыНалоговИПлатежейВБюджет.НазначениеПлатежа(
		РеквизитыОбъекта.Налог,
		РеквизитыОбъекта.ВидНалоговогоОбязательства,
		РеквизитыОбъекта.Организация,
		РеквизитыОбъекта.Дата,
		ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(РеквизитыОбъекта.ПоказательПериода),
		РеквизитыОбъекта.ШаблонНазначенияПлатежаВБюджет);
	
	Возврат НазначениеПлатежа;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИдентификаторГосконтактаПоСчету(ОтдельныйСчет)
	
	Возврат ПлатежноеПоручениеФормы.ИдентификаторГосконтактаПоСчету(ОтдельныйСчет);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьИзменениеПлатежныхРеквизитовФНС(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = Истина Тогда
		УстановитьПлатежныеДанныеГосударственногоОргана(
			ДопПараметры.ВидГосударственногоОргана, ДопПараметры.КодГосударственногоОргана);
	КонецЕсли;
	
	ЗапуститьПроверкуФоновогоЗадания();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПлатежныеДанныеГосударственногоОргана(ВидГосударственногоОргана, КодГосударственногоОргана)
	
	ГосударственныйОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(
		ВидГосударственногоОргана, КодГосударственногоОргана);
	УстановитьКонтрагентаНаСервере(ГосударственныйОрган.Ссылка, ГосударственныйОрган.ПлатежныеРеквизиты.БанковскийСчет);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьНадписьПолучателя(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ТекстПолучателя) Тогда
		Форма.НадписьПолучатель = Форма.Объект.ТекстПолучателя;
		Форма.Элементы.ПолучательГиперрсылкой.ЦветТекста = Новый Цвет;
	Иначе
		Форма.НадписьПолучатель = НСтр("ru = 'Заполнить'");
		Форма.Элементы.ПолучательГиперрсылкой.ЦветТекста = ЦветаСтиля.НезаполненныйРеквизит;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНомерДокумента(ТекущийОбъект)
	
	Если ЭтоИнтерфейсИнтеграцииСБанком Тогда
		Если ЗначениеЗаполнено(НомерПлатежногоПоручения) Тогда
			ПрефиксНомера = ПрефиксацияОбъектовБПСобытия.ПрефиксИнформационнойБазыОрганизацииПодразделения(ТекущийОбъект.Организация, ТекущийОбъект.ПодразделениеОрганизации, "");
			ДлинаНомера = Метаданные.Документы.ПлатежноеПоручение.ДлинаНомера;
			ТекущийОбъект.Номер = ПрефиксНомера + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(
				НомерПлатежногоПоручения, ДлинаНомера - СтрДлина(ПрефиксНомера), "0", "Слева");
		Иначе
			Если ЗначениеЗаполнено(ТекущийОбъект.Номер) Тогда
				ТекущийОбъект.Номер = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормыПриИнтерфейсеИнтеграцииСБанком(Форма)
	
	Если Форма.ЭтоИнтерфейсИнтеграцииСБанком Тогда
		Если ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
			Форма.Заголовок = СтрШаблон(НСтр("ru = 'Платежное поручение %1 от %2'"),
				Форма.НомерПлатежногоПоручения, Формат(Форма.Объект.Дата, "ДЛФ=D"));
		Иначе
			Форма.Заголовок = НСтр("ru = 'Платежное поручение (создание)'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область Отправка

&НаСервереБезКонтекста
Функция ПолучитьСостояниеОбмена(Ссылка)
	
	Возврат РегистрыСведений.СостоянияБанковскихДокументов.ТекущееСостояниеДокумента(Ссылка);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СостояниеОшибки(Состояние)
	
	Возврат Состояние = ПредопределенноеЗначение("Перечисление.СостоянияБанковскихДокументов.Отклонено");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СостояниеУспешнойОтправки(Состояние)
	
	Возврат Состояние = ПредопределенноеЗначение("Перечисление.СостоянияБанковскихДокументов.Отправлено")
		ИЛИ Состояние = ПредопределенноеЗначение("Перечисление.СостоянияБанковскихДокументов.Оплачено");
	
КонецФункции

&НаСервере
Процедура ОтобразитьСостояниеОбменаСБанком()
	
	Состояние = ПолучитьСостояниеОбмена(Объект.Ссылка);
	
	ВидимостьОшибкиОтправки      = СостояниеОшибки(Состояние);
	ВидимостьУспешнойОтправки    = СостояниеУспешнойОтправки(Состояние);
	ВидимостьГотовностьОтправки  = НЕ (ВидимостьОшибкиОтправки ИЛИ ВидимостьУспешнойОтправки);
	
	УстановитьСвойстваПоляСостояние();
	
	Элементы.ФормаОтправитьВБанк.Видимость         = НастроенПрямойОбменСБанком;
	Элементы.ФормаОтправитьВБанк.Доступность       = ВидимостьГотовностьОтправки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваПоляСостояние()
	
	Элементы.Состояние.Видимость = НЕ ПодключенаИнтеграцияСБанком;
	Элементы.СостояниеИнтеграцияСБанком.Видимость = ПодключенаИнтеграцияСБанком И ЗначениеЗаполнено(Состояние);
	
	Если Элементы.Состояние.Видимость Тогда
		НастроитьПолеСостояние();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПолеСостояние()
	
	Если ТолькоПросмотр
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Организация)
		ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		Элементы.Состояние.ТолькоПросмотр = Истина;
		Элементы.Состояние.КнопкаОткрытия = Ложь;
	Иначе
		Если НЕ ПодключенаИнтеграцияСБанком Тогда
			СписокВыбора = Новый Массив;
			ЕстьНастройкаДиректБанк = Ложь;
			ПлатежноеПоручениеФормы.НастройкаДиректБанк(ЕстьНастройкаДиректБанк, Объект.Организация, Объект.СчетОрганизации, СписокВыбора);
			Элементы.Состояние.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);
			Элементы.Состояние.ТолькоПросмотр = ЕстьНастройкаДиректБанк;
			Элементы.Состояние.КнопкаОткрытия = ЕстьНастройкаДиректБанк;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПодключаемыеКомандыБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти