#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ЗначениеЗаполнено(Организация)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо") 
			= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		Организация = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УставныйКапиталДоИзменения = Учредители.Итог("СуммаВзносаДоИзменения");
	УставныйКапитал            = Учредители.Итог("СуммаВзноса");
	
	Если Не ИзменениеУставногоКапитала Тогда
		Для Каждого СтрокаТаблицы Из Учредители Цикл
			СтрокаТаблицы.СуммаВзносаДоИзменения = 0;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	НепроверяемыеРеквизиты.Добавить("УставныйКапиталДоИзменения");
	НепроверяемыеРеквизиты.Добавить("УставныйКапитал");
	НепроверяемыеРеквизиты.Добавить("Учредители.ПредставительУчредителя");
	НепроверяемыеРеквизиты.Добавить("Учредители.ДолжностьПредставителя");
	НепроверяемыеРеквизиты.Добавить("Учредители.ПредставительНаОсновании");
	Если СформированПомощникомРегистрации Тогда
		Для Индекс = 0 По Учредители.Количество() - 1 Цикл
			СтрокаТаблицы = Учредители[Индекс];
			НомерСтроки   = Формат(Индекс + 1, "ЧГ=");
			ИмяСписка     = "Учредители";
			ПутьКСтроке   = "Объект" + "." + ИмяСписка + "[" + Формат(Индекс, "ЧГ=") + "].";
			Если СтрокаТаблицы.ТипУчредителя = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
				// Представитель учредителя
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ПредставительУчредителя) Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
						"Колонка", , НСтр("ru = 'Представитель'"), НомерСтроки, ИмяСписка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, 
						Ссылка, ПутьКСтроке + "ПредставительУчредителя", , Отказ);
				КонецЕсли;
				// Должность представителя
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДолжностьПредставителя) Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
						"Колонка", , НСтр("ru = 'Должность представителя'"), НомерСтроки, ИмяСписка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, 
						Ссылка, ПутьКСтроке + "ДолжностьПредставителя", , Отказ);
				КонецЕсли;
				// Основание полномочий представителя
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ПредставительНаОсновании) Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
						"Колонка", , НСтр("ru = 'На основании'"), НомерСтроки, ИмяСписка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, 
						Ссылка, ПутьКСтроке + "ПредставительНаОсновании", , Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СформированПомощникомРегистрации
		И ИзменениеУставногоКапитала Тогда
		НепроверяемыеРеквизиты.Добавить("Учредители.СуммаВзноса");
	КонецЕсли;
	
	// Уставный капитал
	МинимальныйУставныйКапитал = РегистрацияОрганизацииКлиентСервер.МинимальныйУставныйКапитал();
	Если Учредители.Количество() > 0
		И Учредители.Итог("СуммаВзноса") < МинимальныйУставныйКапитал Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Уставный капитал не может быть меньше %1 руб.'"),
			Формат(МинимальныйУставныйКапитал, "ЧДЦ="));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.Учредители", , Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	ПараметрыПроведения = Документы.ФормированиеУставногоКапитала.ПодготовитьПараметрыПроведения(
		Ссылка, 
		Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаИзмененияУставногоКапитала = Документы.ФормированиеУставногоКапитала.ПодготовитьТаблицуИзмененияУставногоКапитала(
		ПараметрыПроведения.Реквизиты, ПараметрыПроведения.Учредители);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	Документы.ФормированиеУставногоКапитала.СформироватьПроводки(
		ПараметрыПроведения.Реквизиты,
		ТаблицаИзмененияУставногоКапитала,
		Движения, 
		Отказ);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли