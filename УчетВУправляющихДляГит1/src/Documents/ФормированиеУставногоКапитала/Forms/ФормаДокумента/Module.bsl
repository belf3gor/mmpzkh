&НаКлиенте
Перем ТипУчредителяНовойСтроки;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчредители

&НаКлиенте
Процедура УчредителиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование
		ИЛИ ТипУчредителяНовойСтроки <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Оповещение = Новый ОписаниеОповещения("ДобавитьУчредителяЗавершение", ЭтотОбъект);
	Элементы.Учредители.ТекущийЭлемент = Элементы.УчредителиУчредитель;
	ПоказатьВыборИзМеню(Оповещение, СписокВыбора, Элементы.Учредители);
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	
	Если Объект.СформированПомощникомРегистрации Тогда
		Если НоваяСтрока И НЕ Копирование Тогда
			ЗаполнитьДобавленныеКолонкиСтроки(ТекущиеДанные);
			ТекущиеДанные.ТипУчредителя = ТипУчредителяНовойСтроки;
			ТипУчредителяНовойСтроки = Неопределено;
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ТипУчредителя) Тогда
				ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьОграничениеТипаУчредителя(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УчредителиДолжностьПредставителяПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	РуководительНаОсновании = РегистрацияОрганизацииКлиентСервер.ОснованиеПолномочийПредставителя();
	ПрочееНаОсновании       = НСтр("ru='Доверенности №'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Если РегистрацияОрганизацииКлиентСервер.ЭтоДолжностьРуководителя(ТекущиеДанные.ДолжностьПредставителя) Тогда
		ТекущиеДанные.ПредставительНаОсновании = РуководительНаОсновании;
	ИначеЕсли ПустаяСтрока(ТекущиеДанные.ПредставительНаОсновании)
		ИЛИ ТекущиеДанные.ПредставительНаОсновании = РуководительНаОсновании Тогда
		ТекущиеДанные.ПредставительНаОсновании = ПрочееНаОсновании;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьУчредителяФизическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	Элементы.Учредители.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	ТекущиеДанные.ТипУчредителя = ТипУчредителяНовойСтроки;
	УстановитьОграничениеТипаУчредителя(ТекущиеДанные);
	ТипУчредителяНовойСтроки = Неопределено;
	
	ТекущийЭлемент = Элементы.Учредители;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЮридическоеЛицо(Команда)
	
	ТипУчредителяНовойСтроки = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
	Элементы.Учредители.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	ТекущиеДанные.ТипУчредителя = ТипУчредителяНовойСтроки;
	УстановитьОграничениеТипаУчредителя(ТекущиеДанные);
	ТипУчредителяНовойСтроки = Неопределено;
	
	ТекущийЭлемент = Элементы.Учредители;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Представитель учредителя, должность и основание полномочий.
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиПредставительУчредителя");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиНадписьПредставитель");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиНадписьДолжность");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиДолжностьПредставителя");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиНадписьНаОсновании");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "УчредителиПредставительНаОсновании");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Учредители.ТипУчредителя",
		ВидСравненияКомпоновкиДанных.НеРавно,
		ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеТипаУчредителя(ТекущиеДанные)
	
	МассивПараметрыВыбора = Новый Массив;
	Если ТекущиеДанные.ТипУчредителя = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Элементы.УчредителиУчредитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ЮридическоеФизическоеЛицо", 
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		МассивПараметрыВыбора.Добавить(НовыйПараметр);
	Иначе
		Элементы.УчредителиУчредитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	КонецЕсли;
	Элементы.УчредителиУчредитель.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметрыВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	СформированПомощником = Объект.СформированПомощникомРегистрации;
	Элементы.УчредителиГруппаСведенияОбУчредителе.Видимость = СформированПомощником;
	
	ИзменениеУставногоКапитала = СформированПомощником И Объект.ИзменениеУставногоКапитала;
	
	Элементы.УчредителиСуммаВзносаДоИзменения.Видимость    = ИзменениеУставногоКапитала;
	Элементы.УчредителиСуммаВзносаПослеИзменения.Видимость = ИзменениеУставногоКапитала;
	Элементы.УчредителиСуммаВзноса.Видимость               = НЕ ИзменениеУставногоКапитала;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Для каждого СтрокаТаблицы Из Объект.Учредители Цикл
		ЗаполнитьДобавленныеКолонкиСтроки(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтроки(СтрокаТаблицы)
	
	СтрокаТаблицы.НадписьПредставитель = НСтр("ru='Представитель:'");
	СтрокаТаблицы.НадписьДолжность     = НСтр("ru='Должность:'");
	СтрокаТаблицы.НадписьНаОсновании   = НСтр("ru='На основании:'");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУчредителяЗавершение(ВыбранныйЭлемент, ДопПараметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТипУчредителяНовойСтроки = ВыбранныйЭлемент.Значение;
	Элементы.Учредители.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Учредители.ТекущиеДанные;
	ТекущиеДанные.ТипУчредителя = ТипУчредителяНовойСтроки;
	УстановитьОграничениеТипаУчредителя(ТекущиеДанные);
	ТипУчредителяНовойСтроки = Неопределено;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

