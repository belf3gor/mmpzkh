#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

    // Список учредителей организации.
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.Идентификатор = "СписокУчредителей";
    КомандаПечати.Представление = НСтр("ru = 'Список учредителей'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов – Массив – ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати – Структура – дополнительные настройки печати;
//  КоллекцияПечатныхФорм – ТаблицаЗначений – сформированные табличные документы (выходной параметр)
//  ОбъектыПечати – СписокЗначений – значение – ссылка на объект;
//                                            представление – имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода – Структура – дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокУчредителей") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"СписокУчредителей", 
			НСтр("ru = 'Список учредителей'"), 
			ПечатьСписокУчредителей(МассивОбъектов, ОбъектыПечати),
			, 
			"Документ.ФормированиеУставногоКапитала.ПФ_MXL_СписокУчредителей");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	
КонецПроцедуры

Функция ПечатьСписокУчредителей(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	
	Макет = Документы.ФормированиеУставногоКапитала.ПолучитьМакет("СписокУчредителейООО");
	
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьМакетаСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьМакетаПодвал        = Макет.ПолучитьОбласть("Подвал");
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументыСпискаУчредителей", МассивОбъектов);
	Запрос.УстановитьПараметр("ЮридическоеЛицо", Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФормированиеУставногоКапитала.Ссылка КАК Ссылка,
	|	ФормированиеУставногоКапитала.Дата КАК Дата,
	|	ФормированиеУставногоКапитала.Организация КАК Организация,
	|	ФормированиеУставногоКапитала.УставныйКапитал КАК УставныйКапитал,
	|	ФормированиеУставногоКапитала.СформированПомощникомРегистрации КАК СформированПомощникомРегистрации,
	|	ФормированиеУставногоКапитала.Учредители.(
	|		НомерСтроки,
	|		ФормированиеУставногоКапитала.Учредители.Учредитель ССЫЛКА Справочник.Контрагенты КАК ЭтоЮридическоеЛицо,
	|		ФормированиеУставногоКапитала.Учредители.Учредитель КАК Учредитель,
	|		СуммаВзноса
	|	)
	|ИЗ
	|	Документ.ФормированиеУставногоКапитала КАК ФормированиеУставногоКапитала
	|ГДЕ
	|	ФормированиеУставногоКапитала.Ссылка В(&ДокументыСпискаУчредителей)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	НомерСтрокиНачало = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НомерСтрокиНачало > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация);
		ПолноеНаименованиеОрганизацииВРодительномПадеже = СокрЛП(СведенияОбОрганизации.ПолноеНаименование);
		СловоОбщество = НСтр("ru = 'Общество с ограниченной ответственностью'", 
			ОбщегоНазначения.КодОсновногоЯзыка());
		Если Лев(ВРег(ПолноеНаименованиеОрганизацииВРодительномПадеже), СтрДлина(СловоОбщество)) = ВРег(СловоОбщество) Тогда
			ПолноеНаименованиеОрганизацииВРодительномПадеже = НСтр("ru = 'Общества с ограниченной ответственностью'", 
				ОбщегоНазначения.КодОсновногоЯзыка())
				+ Сред(ПолноеНаименованиеОрганизацииВРодительномПадеже, СтрДлина(СловоОбщество) + 1);
		КонецЕсли;
		
		ПараметрыШапка = Новый Структура;
		ПараметрыШапка.Вставить("ПолноеНаименованиеОрганизацииВРодительномПадеже", 
			ПолноеНаименованиеОрганизацииВРодительномПадеже);
		ПараметрыШапка.Вставить("ДатаАктуальности",       Формат(Выборка.Дата, "ДЛФ=DD"));
		ПараметрыШапка.Вставить("ОГРН",                   СведенияОбОрганизации.ОГРН);
		ПараметрыШапка.Вставить("ИНН",                    СведенияОбОрганизации.ИНН);
		ПараметрыШапка.Вставить("ЮридическийАдрес",       СведенияОбОрганизации.ЮридическийАдрес);
		ПараметрыШапка.Вставить("СуммаУставногоКапитала", Формат(Выборка.УставныйКапитал, "ЧДЦ=2; ЧГ=3,0"));
		СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Выборка.УставныйКапитал,
			ВалютаРегламентированногоУчета);
		ПараметрыШапка.Вставить("СуммаУставногоКапиталаПрописью", СуммаПрописью);
		
		ОбластьМакетаШапка.Параметры.Заполнить(ПараметрыШапка);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТаблицы);
		
		СуммаВзносаВсего = Выборка.УставныйКапитал;
		ДоляВзносовВсего = 0;
		
		ТаблицаУчредителей = Выборка.Учредители.Выгрузить();
		ТаблицаУчредителей.Сортировать("НомерСтроки");
		
		Для Каждого СтрокаТаблицы Из ТаблицаУчредителей Цикл
			
			Если СтрокаТаблицы.НомерСтроки < ТаблицаУчредителей.Количество() Тогда
				ДоляУставногоКапитала = Окр(СтрокаТаблицы.СуммаВзноса / СуммаВзносаВсего * 100, 2);
			Иначе
				// Это последняя строка, отнесем на нее остаток от доли взносов.
				// Это необходимо, чтобы общая сумма долей была 100%.
				ДоляУставногоКапитала = 100 - ДоляВзносовВсего;
			КонецЕсли;
			ДоляВзносовВсего = ДоляВзносовВсего + ДоляУставногоКапитала;
			
			ПараметрыСтрока = Новый Структура;
			ПараметрыСтрока.Вставить("НомерУчастника",     СтрокаТаблицы.НомерСтроки);
			ПараметрыСтрока.Вставить("ДанныеУчастника",    ОписаниеУчредителя(СтрокаТаблицы));
			ПараметрыСтрока.Вставить("РазмерДоли",         Формат(ДоляУставногоКапитала, "ЧГ=0") + "%");
			ПараметрыСтрока.Вставить("СуммаВзносаСтрокой", Формат(СтрокаТаблицы.СуммаВзноса, "ЧДЦ=2; ЧГ=3,0"));
			ПараметрыСтрока.Вставить("ФормаОплаты",        НСтр("ru = 'Денежные средства'"));
			
			ОбластьМакетаСтрокаТаблицы.Параметры.Заполнить(ПараметрыСтрока);
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаТаблицы);
			
		КонецЦикла;
		
		ПараметрыПодвал = Новый Структура;
		ПараметрыПодвал.Вставить("Должность", СведенияОбОрганизации.ДолжностьРуководителяПредставление);
		ПараметрыПодвал.Вставить("ФИОРуководителя", ?(ЗначениеЗаполнено(СведенияОбОрганизации.РуководительФИО),
			СведенияОбОрганизации.РуководительФИО.Представление, ""));
															
		ОбластьМакетаПодвал.Параметры.Заполнить(ПараметрыПодвал);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ОписаниеУчредителя(Учредитель)
	
	ОписаниеУчредителя = "";
	Если Учредитель.ЭтоЮридическоеЛицо Тогда
		
		СведенияОбУчредителе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Учредитель.Учредитель);
		ОписаниеУчредителя   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 (ОГРН %2, ИНН %3, КПП %4, адрес места нахождения: %5)'"),
			СведенияОбУчредителе.ПолноеНаименование,
			СведенияОбУчредителе.ОГРН,
			СведенияОбУчредителе.ИНН,
			СведенияОбУчредителе.КПП,
			СведенияОбУчредителе.ЮридическийАдрес);
		
	Иначе
		
		ДанныеФизическогоЛица = УчетЗарплаты.ДанныеФизическихЛиц( , Учредитель.Учредитель, ТекущаяДатаСеанса());
		АдресПрописки = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Учредитель.Учредитель, 
			Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
		
		ФИО = СокрЛП(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2 %3'"),
			ДанныеФизическогоЛица.Фамилия, ДанныеФизическогоЛица.Имя, ДанныеФизическогоЛица.Отчество));
		ОписаниеУчредителя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 (%2, зарегистрирован по адресу: %3)'"),
			ФИО,
			ДанныеФизическогоЛица.ПредставлениеДокумента,
			АдресПрописки);
		
	КонецЕсли;
	
	Возврат ОписаниеУчредителя;
	
КонецФункции

#КонецОбласти

#Область ПроведениеДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
		+ ТекстЗапросаУчредители(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	Реквизиты   = ПараметрыПроведения.Реквизиты[0];
	Период      = Реквизиты.Период;
	Организация = Реквизиты.Организация;

	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СформированПомощникомРегистрации
	|		И Реквизиты.ИзменениеУставногоКапитала КАК ИзменениеУставногоКапитала
	|ИЗ
	|	Документ.ФормированиеУставногоКапитала КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаУчредители(НомераТаблиц)

	НомераТаблиц.Вставить("Учредители", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Учредители.Ссылка КАК Регистратор,
	|	Учредители.НомерСтроки КАК НомерСтроки,
	|	Учредители.Учредитель КАК Учредитель,
	|	Учредители.СуммаВзноса - Учредители.СуммаВзносаДоИзменения КАК СуммаВзноса
	|ИЗ
	|	Документ.ФормированиеУставногоКапитала.Учредители КАК Учредители
	|ГДЕ
	|	Учредители.Ссылка = &Ссылка
	|	И Учредители.СуммаВзноса - Учредители.СуммаВзносаДоИзменения <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура СформироватьПроводки(ТаблицаРеквизиты, ТаблицаУчредители, Движения, Отказ) Экспорт

	Проводки  = Движения.Хозрасчетный;
	Реквизиты = ТаблицаРеквизиты[0];
	СчетРасчетов          = ПланыСчетов.Хозрасчетный.РасчетыПоВкладамВУставныйКапитал;
	СчетУставногоКапитала = ПланыСчетов.Хозрасчетный.УставныйКапитал_ПрочийКапитал;
	СодержаниеПроводки = НСтр("ru='Формирование уставного капитала'", 
		ОбщегоНазначения.КодОсновногоЯзыка());
	
	Для Каждого СтрокаТаблицы Из ТаблицаУчредители Цикл
		
		Если СтрокаТаблицы.СуммаВзноса > 0 Тогда
			Сумма = СтрокаТаблицы.СуммаВзноса;
			СчетДт = СчетРасчетов;
			СчетКт = СчетУставногоКапитала;
		ИначеЕсли СтрокаТаблицы.СуммаВзноса < 0 Тогда
			Сумма = -СтрокаТаблицы.СуммаВзноса;
			СчетДт = СчетУставногоКапитала;
			СчетКт = СчетРасчетов;
		Иначе
			Продолжить;
		КонецЕсли;
		
		Проводка = Проводки.Добавить();
		Проводка.Период = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание = СодержаниеПроводки;
		Проводка.Сумма = Сумма;
		Проводка.СчетДт = СчетДт;
		Проводка.СчетКт = СчетКт;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Учредители", СтрокаТаблицы.Учредитель);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Учредители", СтрокаТаблицы.Учредитель);
		
	КонецЦикла;
	
	Проводки.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьТаблицуИзмененияУставногоКапитала(Реквизиты, ТаблицаУчредители) Экспорт
	
	Параметры = ПодготовитьПараметрыТаблицыИзмененияУставногоКапитала(Реквизиты, ТаблицаУчредители);
	
	УставныйКапиталДоИзменения = ПолучитьУставныйКапиталДоИзменения(Реквизиты);
	
	Если УставныйКапиталДоИзменения <> Неопределено Тогда
		
		Для Каждого СтрокаУставногоКапиталаДоИзменения Из УставныйКапиталДоИзменения Цикл
			
			Отбор = Новый Структура("Учредитель", СтрокаУставногоКапиталаДоИзменения.Учредитель);
			СтрокиУчредителя = Параметры.ТаблицаУчредители.НайтиСтроки(Отбор);
			Если СтрокиУчредителя.Количество() = 0 Тогда
				СтрокаУставногоКапитала = Параметры.ТаблицаУчредители.Добавить();
				СтрокаУставногоКапитала.Учредитель = СтрокаУставногоКапиталаДоИзменения.Учредитель;
				СтрокаУставногоКапитала.СуммаВзноса = - СтрокаУставногоКапиталаДоИзменения.СуммаВзноса;
			Иначе
				СтрокаУставногоКапитала = СтрокиУчредителя[0];
				СтрокаУставногоКапитала.СуммаВзноса = СтрокаУставногоКапитала.СуммаВзноса - СтрокаУставногоКапиталаДоИзменения.СуммаВзноса;
			КонецЕсли;
			
		КонецЦикла;
		
		Параметры.ТаблицаУчредители.Сортировать("НомерСтроки");
		
	КонецЕсли;
	
	Возврат Параметры.ТаблицаУчредители;
	
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыИзмененияУставногоКапитала(ТаблицаРеквизитов, ТаблицаУчредители)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+"Регистратор,"					// <ДокументСсылка>
	+"Период,"						// <Дата>
	+"Организация,"					// <СправочникСсылка.Организация>
	+"ИзменениеУставногоКапитала";	// Булево
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Учредители
	
	СписокОбязательныхКолонок = ""
	+"НомерСтроки,"				// <Число>
	+"Учредитель,"				// <СправочникСсылка.Контрагенты>, <СправочникСсылка.ФизическиеЛица>
	+"СуммаВзноса";				// <Число 15, 2>
	
	Параметры.Вставить("ТаблицаУчредители", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаУчредители, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьУставныйКапиталДоИзменения(ТаблицаРеквизиты)
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если Реквизиты.ИзменениеУставногоКапитала Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Организация", Реквизиты.Организация);
	Запрос.Параметры.Вставить("ДатаОстатков", Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор));
	Запрос.Параметры.Вставить("СчетУчетаУставногоКапитала", ПланыСчетов.Хозрасчетный.УставныйКапитал_ПрочийКапитал);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Учредитель,
	|	- ЕстьNULL(ХозрасчетныйОстатки.СуммаОстаток,0) КАК СуммаВзноса
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОстатков, Счет = &СчетУчетаУставногоКапитала, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители), Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли