#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выгружает документ и возвращает свойства файла выгрузки.
//
// Параметры:
//  УникальныйИдентификатор - уникальный идентификатор окна, откуда была дернута функция выгрузки или Неопределено.
//
// Возвращаемое значение - 
//	Массив структур или Неопределено, если не удалось сформировать файл выгрузки.
//	Ключи структуры:
//		- АдресФайлаВыгрузки - адрес двоичных данных файла выгрузки во временном хранилище
//		- ИмяФайлаВыгрузки - короткое имя файла выгрузки (с расширением)
Функция ВыгрузитьДокумент(УникальныйИдентификатор = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		УстановитьПривилегированныйРежим(Истина);
		
		СодержаниеВыгрузки = ЭлектронноеПредставление(УникальныйИдентификатор);
		
		Если СодержаниеВыгрузки = Неопределено Тогда 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Выгрузка данного уведомления не предусмотрена'");
			Сообщение.Сообщить();
			Возврат Неопределено;
		КонецЕсли;
		
		Для Каждого ЭлементВыгрузки Из СодержаниеВыгрузки Цикл
			
			Если Результат = Неопределено Тогда
				Результат = Новый Массив;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЭлементВыгрузки.ТекстФайла) Тогда 
				ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
				СохраняемыйФайл = Новый ТекстовыйДокумент;
				СохраняемыйФайл.УстановитьТекст(ЭлементВыгрузки.ТекстФайла);
				СохраняемыйФайл.Записать(ИмяВременногоФайла, ЭлементВыгрузки.КодировкаТекста);
				
				ФайлВыгрузки = Новый ДвоичныеДанные(ИмяВременногоФайла);
				Если УникальныйИдентификатор <> Неопределено Тогда
					СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ФайлВыгрузки, УникальныйИдентификатор);
				Иначе
					СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ФайлВыгрузки);
				КонецЕсли;
				
				УдалитьФайлы(ИмяВременногоФайла);
				
				СтруктураВыгрузки = Новый Структура;
				СтруктураВыгрузки.Вставить("АдресФайлаВыгрузки", СсылкаНаДвоичныеДанныеФайла);
				СтруктураВыгрузки.Вставить("ИмяФайлаВыгрузки", ЭлементВыгрузки.ИмяФайла);
				СтруктураВыгрузки.Вставить("ТестВыгрузки", ЭлементВыгрузки.ТекстФайла);
				СтруктураВыгрузки.Вставить("КодировкаВыгрузки", ЭлементВыгрузки.КодировкаТекста);
				
				Результат.Добавить(СтруктураВыгрузки);
			ИначеЕсли СодержаниеВыгрузки.Колонки.Найти("ДвоичныеДанныеФайла") <> Неопределено Тогда 
				СтруктураВыгрузки = Новый Структура;
				СтруктураВыгрузки.Вставить("АдресФайлаВыгрузки", ПоместитьВоВременноеХранилище(ЭлементВыгрузки.ДвоичныеДанныеФайла));
				СтруктураВыгрузки.Вставить("ИмяФайлаВыгрузки", ЭлементВыгрузки.ИмяФайла);
				СтруктураВыгрузки.Вставить("ТестВыгрузки", "");
				СтруктураВыгрузки.Вставить("КодировкаВыгрузки", "");
				
				Результат.Добавить(СтруктураВыгрузки);
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Результат;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//Для сообщения об открытии/закрытии счета
//0=ФНС
//1=ПФР
//2=ФСС
Функция ПечатьСразу() Экспорт 
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяОтчета) Тогда
		Возврат Отчеты[ИмяОтчета].ПечатьСразу(ЭтотОбъект, ИмяФормы);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

//Для сообщения об открытии/закрытии счета
//0=ФНС
//1=ПФР
//2=ФСС
Функция СформироватьМакет() Экспорт 
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяОтчета) Тогда
		Возврат Отчеты[ИмяОтчета].СформироватьМакет(ЭтотОбъект, ИмяФормы);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПроверитьДокумент(УникальныйИдентификатор = Неопределено) Экспорт 
	Если ЗначениеЗаполнено(ИмяОтчета) Тогда 
		Отчеты[ИмяОтчета].ПроверитьДокумент(ЭтотОбъект, ИмяФормы, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор = Неопределено) Экспорт 
	Если ЗначениеЗаполнено(ИмяОтчета) Тогда 
		Возврат Отчеты[ИмяОтчета].ПроверитьДокументСВыводомВТаблицу(ЭтотОбъект, ИмяФормы, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление(УникальныйИдентификатор = Неопределено)
	Если ЗначениеЗаполнено(ИмяОтчета) Тогда 
		Возврат Отчеты[ИмяОтчета].ЭлектронноеПредставление(ЭтотОбъект, ИмяФормы, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецЕсли