
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыль;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти


Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	Возврат Новый Структура;
КонецФункции

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	Возврат УчетНДФЛ.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	Возврат УчетНДФЛ.ПолучитьСоответствиеРеквизитовФормеОбъекта();
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат УчетНДФЛ.ПолучитьПредставлениеПроверяемыхРеквизитовФизическихЛиц();
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт
	Возврат УчетНДФЛ.ПолучитьСтруктуруПроверяемыхДанныхФизическихЛиц();
КонецФункции

Функция НомерПервойСправки(Дата, НалоговыйПериод, Организация) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыльСотрудники.НомерСтроки) КАК КоличествоСформированныхСправок
	|ИЗ
	|	Документ.СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыль.Сотрудники КАК СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыльСотрудники
	|ГДЕ
	|	СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыльСотрудники.Ссылка.Дата < &ДатаДокумента
	|	И СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыльСотрудники.Ссылка.Проведен
	|	И СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыльСотрудники.Ссылка.Организация = &Организация
	|	И СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыльСотрудники.Ссылка.НалоговыйПериод = &НалоговыйПериод";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НомерПервойСправки = ?(Выборка.КоличествоСформированныхСправок = NULL, 0, Выборка.КоличествоСформированныхСправок) + 1;
	Иначе
		НомерПервойСправки = 1;
	КонецЕсли;
	
	Возврат НомерПервойСправки;
КонецФункции

#КонецОбласти

#КонецЕсли