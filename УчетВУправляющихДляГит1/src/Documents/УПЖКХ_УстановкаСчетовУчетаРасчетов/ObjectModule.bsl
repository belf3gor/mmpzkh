
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытийДокумента

// Проверяет существование записей в регистрах.
Процедура ПроверкаСуществованияДокумента(Отказ, Заголовок)
	
	// проверка существования документа в регистре УПЖКХ_ВидВзаиморасчетовУслуг
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УПЖКХ_ВидыВзаиморасчетовУслугСрезПоследних.Услуга,
	|	УПЖКХ_ВидыВзаиморасчетовУслугСрезПоследних.Период,
	|	УПЖКХ_ВидыВзаиморасчетовУслугСрезПоследних.Регистратор
	|ИЗ
	|	РегистрСведений.УПЖКХ_ВидыВзаиморасчетовУслуг.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И Услуга В (&СпУслуг)) КАК УПЖКХ_ВидыВзаиморасчетовУслугСрезПоследних
	|ГДЕ
	|	КОНЕЦПЕРИОДА(УПЖКХ_ВидыВзаиморасчетовУслугСрезПоследних.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)";
	
	Запрос.УстановитьПараметр("Дата",        Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СпУслуг",     Услуги.ВыгрузитьКолонку("Услуга"));
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		
		ТекстОшибки = "Счета для услуги """ + Результат.Услуга 
					+ """ уже были установлены в этом месяце документом """ + Результат.Регистратор + """.";
		КВП_ПрочиеПроцедурыИФункции.ОшибкаПриПроведении(ТекстОшибки, Отказ, Заголовок);
		
	КонецЦикла;
	
	// проверка существования документа в регистре УПЖКХ_СчетаУчетаРасчетовЖКХ
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УПЖКХ_СчетаУчетаРасчетовЖКХСрезПоследних.Регистратор
	|ИЗ
	|	РегистрСведений.УПЖКХ_СчетаУчетаРасчетовЖКХ.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ВидВзаиморасчетов = &ВидВзаиморасчетов) КАК УПЖКХ_СчетаУчетаРасчетовЖКХСрезПоследних
	|ГДЕ
	|	КОНЕЦПЕРИОДА(УПЖКХ_СчетаУчетаРасчетовЖКХСрезПоследних.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)";
	
	Запрос.УстановитьПараметр("Дата",              Дата);
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("ВидВзаиморасчетов", ВидВзаиморасчетов);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		
		ТекстОшибки = "Счета для вида взаиморасчетов """ + ВидВзаиморасчетов 
					+ """ уже были установлены в этом месяце документом """ + Результат.Регистратор + """.";
		КВП_ПрочиеПроцедурыИФункции.ОшибкаПриПроведении(ТекстОшибки, Отказ, Заголовок);
		
	КонецЦикла;
	
КонецПроцедуры

// По результату запроса по шапке документа формируем движения по регистрам.
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);

	// регистр УПЖКХ_СчетаУчетаРасчетовЖКХ
	Движение = Движения.УПЖКХ_СчетаУчетаРасчетовЖКХ.Добавить();
	Движение.Период = Дата;
	Движение.Организация = Организация;
	Движение.ВидВзаиморасчетов = ВидВзаиморасчетов;
	Движение.СчетаУчетаРасчетов = СчетаУчетаРасчетов;
	Движение.СчетаУчетаАвансов = СчетаУчетаАвансов;

	// регистр УПЖКХ_ВидВзаиморасчетовУслуг
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		
		Движение = Движения.УПЖКХ_ВидыВзаиморасчетовУслуг.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Услуга = ТекСтрокаУслуги.Услуга;
		Движение.ВидВзаиморасчетов = ВидВзаиморасчетов;
		
	КонецЦикла;

КонецПроцедуры

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Процедура проведения документа.
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = УПЖКХ_ТиповыеМетодыВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);

	// Сформируем запрос на дополнительные параметры, нужные при проведении,
	// по данным шапки документа.
	ПараметрыПроведения = Документы.УПЖКХ_УстановкаСчетовУчетаРасчетов.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента = ПараметрыПроведения.Реквизиты;

	// Проверим правильность заполнения документа.
	ПроверкаСуществованияДокумента(Отказ, Заголовок);

	Если Не Отказ Тогда

		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);

	КонецЕсли;

КонецПроцедуры

// Обработчик события "ОбработкаПроверкиЗаполнения" документа.
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Организация");
	ПроверяемыеРеквизиты.Добавить("ВидВзаиморасчетов");
	ПроверяемыеРеквизиты.Добавить("СчетаУчетаРасчетов");
	ПроверяемыеРеквизиты.Добавить("СчетаУчетаАвансов");
	
	ПроверяемыеРеквизиты.Добавить("Услуги.Услуга");
	
	Если Услуги.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не заполнена табличная часть ""Услуги""", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли