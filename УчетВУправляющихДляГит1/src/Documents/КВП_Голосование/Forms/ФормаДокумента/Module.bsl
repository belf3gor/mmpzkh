
#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость колонок дерева голосов.
&НаКлиенте
Процедура УстановитьВидимостьКолонокДеревоГолосов()
	
	Если ГруппировкаДереваГолосов = "Участник" Тогда
		Элементы.ДеревоГолосовТема.Видимость         = Ложь;
		Элементы.ДеревоГолосовТемаУчастник.Видимость = Истина;
	Иначе
		Элементы.ДеревоГолосовТема.Видимость         = Истина;
		Элементы.ДеревоГолосовТемаУчастник.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Процедура обновляет дерево голосов.
&НаСервере
Процедура ОбновитьДеревоИтогов()
	
	ЭлементыДерева = ДеревоГолосов.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	ПустойОтвет = Справочники.КВП_ВариантыВыбораГолосования.ПустаяСсылка();
	
	Если ГруппировкаДереваГолосов = "Участник" Тогда
		
		Для Каждого СтрокаУчастника Из Объект.РеестрУчастников.Участники Цикл
			СтрокаГруппы = ЭлементыДерева.Добавить();
			СтрокаГруппы.Помещение   = СтрокаУчастника.Помещение;
			СтрокаГруппы.Собственник = СтрокаУчастника.СобственникПомещения;
			СтрокаГруппы.ВесГолоса   = СтрокаУчастника.ВесГолоса;
			
			ЭлементыГруппыДерева = СтрокаГруппы.ПолучитьЭлементы();
			Для Каждого СтрокаТемы Из Объект.ТемыГолосования Цикл
				НоваяСтрока = ЭлементыГруппыДерева.Добавить();
				НоваяСтрока.Тема    = СтрокаТемы.Тема;
				НоваяСтрока.Вариант = НайтиВариантОтвета(НоваяСтрока.Тема, СтрокаГруппы.Помещение, СтрокаГруппы.Собственник);
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаТемы Из Объект.ТемыГолосования Цикл
			СтрокаГруппы = ЭлементыДерева.Добавить();
			СтрокаГруппы.Тема = СтрокаТемы.Тема;
			
			ЭлементыГруппыДерева = СтрокаГруппы.ПолучитьЭлементы();
			Для Каждого СтрокаУчастника Из Объект.РеестрУчастников.Участники Цикл
				НоваяСтрока = ЭлементыГруппыДерева.Добавить();
				НоваяСтрока.Помещение   = СтрокаУчастника.Помещение;
				НоваяСтрока.Собственник = СтрокаУчастника.СобственникПомещения;
				НоваяСтрока.ВесГолоса   = СтрокаУчастника.ВесГолоса;
				НоваяСтрока.Вариант     = НайтиВариантОтвета(СтрокаГруппы.Тема, НоваяСтрока.Помещение, НоваяСтрока.Собственник);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьДеревоИтогов()

// Процедура ищет в документе выбранный вариант ответа по указанной теме указанного лицевого счета.
//
// Параметры:
//  Тема         – тема голосования
//  Помещение    – Помещение для поиска ответа
//  СтрокаОтвета – строка табличной части с найденным ответом.
//
// Возвращаемое значение:
//  Вариант ответа, указанный в документе.
//
&НаСервере
Функция НайтиВариантОтвета(Тема, Помещение, Собственник, СтрокаОтвета = Неопределено)
	
	СтруктураПоиска = Новый Структура("Тема, Помещение, СобственникПомещения", Тема, Помещение, Собственник);
	СтрокиОтвета = Объект.РезультатыГолосования.НайтиСтроки(СтруктураПоиска);
	
	Если СтрокиОтвета.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		СтрокаОтвета = СтрокиОтвета.Получить(0);
		Возврат СтрокаОтвета.Вариант;
	КонецЕсли;
	
КонецФункции // НайтиВариантОтвета()

// Процедура устанавливает отбор по теме в списке вариантов ответов.
&НаКлиенте
Процедура СписокВариантовУстановитьОтборПоВладельцу(Владелец)
	
	СписокВариантов.Отбор.Элементы.Очистить();
	ТипПолеКомпоновкиДанных      = Новый ПолеКомпоновкиДанных("Владелец");
	ЭлементОтбора                = СписокВариантов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = ТипПолеКомпоновкиДанных;
	ЭлементОтбора.ПравоеЗначение = Владелец;
	
КонецПроцедуры //СписокВариантовУстановитьОтборПоВладельцу()

&НаСервереБезКонтекста
// Перемещает варианты выбора голосования вверх или вниз на сервере.
Процедура ПереместитьВариантВверхВнизНаСервере(ТекСтрока, Направление)
	
	Справочники.КВП_ВариантыВыбораГолосования.ПереместитьВариантВверхВниз(ТекСтрока, Направление);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события "ПриЧтенииНаСервере" формы.
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УПЖКХ_ТиповыеМетодыСервер.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
// Процедура - обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	УПЖКХ_ТиповыеМетодыСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		УПЖКХ_ЗаполнениеДокументовСервер.ЗаполнитьШапкуДокумента(Объект,
																 УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());
		УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	КонецЕсли;
	
	// Установить доступность формы с учетом ключа СЛК.
	СЗК_МодульЗащитыКлиентСервер.УстановитьДоступностьФормыДляРедактирования(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

// Обработчик события "ПриОткрытии" формы.
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Устанавливаем значение по умолчанию.
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ОбновитьДеревоИтогов();
	КонецЕсли;
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Объект.Дата;
	
	Если ПустаяСтрока(ГруппировкаДереваГолосов) Тогда
		ГруппировкаДереваГолосов = Элементы.ГруппировкаДереваГолосов.СписокВыбора.Получить(0).Значение;
	КонецЕсли;
	
	УстановитьВидимостьКолонокДеревоГолосов();
	
КонецПроцедуры //ПриОткрытии()

&НаСервере
// Процедура - обработчик события "ПослеЗаписиНаСервере" формы.
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

// Обработчик события "ПриИзменении" поля ввода даты документа.
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УПЖКХ_РаботаСДиалогамиКлиентСервер.ПроверитьНомерДокумента(Объект, мТекущаяДатаДокумента);
	
	мТекущаяДатаДокумента = Объект.Дата; // запомним текущую дату документа для контроля номера документа
	
КонецПроцедуры // ДатаПриИзменении()

// Обработчик события "ПриИзменении" поля выбора группировки.
&НаКлиенте
Процедура ГруппировкаДереваГолосовПриИзменении(Элемент)
	
	ОбновитьДеревоИтогов();
	УстановитьВидимостьКолонокДеревоГолосов();
	
КонецПроцедуры //ГруппировкаДереваГолосовПриИзменении()

// Обработчик события "ПриСменеСтраницы" поля выбора группировки.
&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница.Имя = "ГруппаПодведениеИтогов" Тогда
		ОбновитьДеревоИтогов();
	КонецЕсли;
	
КонецПроцедуры //СтраницыПриСменеСтраницы()

// Обработчик события "ПриИзменении" поля выбора реестра участников голосования.
&НаКлиенте
Процедура РеестрУчастниковПриИзменении(Элемент)
		
	Если Объект.РезультатыГолосования.Количество() > 0 Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработатьРезультатВопросаРеестрУчастниковПриИзменении", ЭтотОбъект),
					  "Результаты голосования будут очищены. Продолжить?",
					  РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	РеестрУчастниковПриИзмененииПродолжение();
	
КонецПроцедуры // РеестрУчастниковПриИзменении()

&НаКлиенте
// Процедура-обработчик результата вопроса, вызванного с процедуре-обработчике "РеестрУчастниковПриИзменении()".
Процедура ОбработатьРезультатВопросаРеестрУчастниковПриИзменении(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.РезультатыГолосования.Очистить();
	
	РеестрУчастниковПриИзмененииПродолжение();

КонецПроцедуры // ОбработатьРезультатВопросаРеестрУчастниковПриИзменении()

&НаКлиенте
// Процедура-продолжение процедуры "РеестрУчастниковПриИзменении()".
Процедура РеестрУчастниковПриИзмененииПродолжение()
	
	ОбновитьДеревоИтогов();
	
КонецПроцедуры //РеестрУчастниковПриИзменении()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТЧТемыГолосования

// Обработчик события "ПриАктивизацииСтроки" табл.поля темы голосования.
&НаКлиенте
Процедура ТемыГолосованияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда 
		СписокВариантовУстановитьОтборПоВладельцу(ПредопределенноеЗначение("Справочник.КВП_ТемыГолосования.ПустаяСсылка"));
	Иначе
		СписокВариантовУстановитьОтборПоВладельцу(Элемент.ТекущиеДанные.Тема);
	КонецЕсли;
	
КонецПроцедуры //ТемыГолосованияПриАктивизацииСтроки()

// Обработчик события "ПриИзменении" табл.поля темы голосования.
&НаКлиенте
Процедура ТемыГолосованияПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда 
		СписокВариантовУстановитьОтборПоВладельцу(ПредопределенноеЗначение("Справочник.КВП_ТемыГолосования.ПустаяСсылка"));
	Иначе
		СписокВариантовУстановитьОтборПоВладельцу(Элемент.ТекущиеДанные.Тема);
	КонецЕсли;
	
КонецПроцедуры //ТемыГолосованияПриИзменении()

// Обработчик события "ПослеУдаления" списка тем голосования.
&НаКлиенте
Процедура ТемыГолосованияПослеУдаления(Элемент)
	
	Если Объект.ТемыГолосования.Количество() = 0 Тогда
		СписокВариантовУстановитьОтборПоВладельцу(ПредопределенноеЗначение("Справочник.КВП_ТемыГолосования.ПустаяСсылка"));
	КонецЕсли;
	
КонецПроцедуры //ТемыГолосованияПослеУдаления()

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТЧВариантыГолосования
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ТЧ "ВАРИАНТЫ ГОЛОСОВАНИЯ"

&НаКлиенте
// Обработчик события команды "Вверх" списка вариантов ответов.
Процедура КомандаСписокВариантовВверх(Команда)
	
	Если НЕ Элементы.СписокВариантов.ТекущаяСтрока = Неопределено Тогда
		ПереместитьВариантВверхВнизНаСервере(Элементы.СписокВариантов.ТекущаяСтрока, "Вверх");
		Элементы.СписокВариантов.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события команды "Вниз" списка вариантов ответов.
Процедура КомандаСписокВариантовВниз(Команда)
	
	Если НЕ Элементы.СписокВариантов.ТекущаяСтрока = Неопределено Тогда
		ПереместитьВариантВверхВнизНаСервере(Элементы.СписокВариантов.ТекущаяСтрока, "Вниз");
		Элементы.СписокВариантов.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТЧРезультатыГолосования

// Обработчик события "НачалоВыбора" поля выбора варианта ответа.
&НаКлиенте
Процедура ДеревоГолосовВариантНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрокаДерева = Элемент.Родитель.ТекущиеДанные;
	
	// если это корневая запись - указание варианта невозможно
	Если ТекСтрокаДерева.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекСтрокаДерева.Тема) Тогда
		ТекТема = ТекСтрокаДерева.Тема;
	Иначе
		ТекТема = ТекСтрокаДерева.ПолучитьРодителя().Тема;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("Владелец", ТекТема);
	ПараметрыФормы  = Новый Структура("ТекущаяСтрока, Отбор", ТекСтрокаДерева.Вариант, СтруктураОтбора);
	ОткрытьФорму("Справочник.КВП_ВариантыВыбораГолосования.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры //ДеревоГолосовВариантНачалоВыбора()

// Обработчик события "ПриИзменении" поля выбора варианта ответа.
&НаКлиенте
Процедура ДеревоГолосовВариантПриИзменении(Элемент)
	
	ТекСтрокаДерева = Элемент.Родитель.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекСтрокаДерева.Тема) Тогда
		ТекТема = ТекСтрокаДерева.Тема;
	Иначе
		ТекТема = ТекСтрокаДерева.ПолучитьРодителя().Тема;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекСтрокаДерева.Помещение) Тогда
		ТекПомещение = ТекСтрокаДерева.Помещение;
	Иначе
		ТекПомещение = ТекСтрокаДерева.ПолучитьРодителя().Помещение;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекСтрокаДерева.Собственник) Тогда
		ТекСобственник = ТекСтрокаДерева.Собственник;
	Иначе
		ТекСобственник = ТекСтрокаДерева.ПолучитьРодителя().Собственник;
	КонецЕсли;
	
	ДеревоГолосовВариантПриИзмененииСервер(ТекТема, ТекПомещение, ТекСобственник, ТекСтрокаДерева.Вариант);
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры //ДеревоГолосовВариантПриИзменении()

// Обработчик события "ПриИзменении" поля выбора варианта ответа на сервере.
&НаСервере
Процедура ДеревоГолосовВариантПриИзмененииСервер(ТекТема, ТекПомещение, ТекСобственник, ТекВариант)
	
	СтрокаОтвета = Неопределено;
	НайтиВариантОтвета(ТекТема, ТекПомещение, ТекСобственник, СтрокаОтвета);
	Если СтрокаОтвета = Неопределено Тогда
		СтрокаОтвета = Объект.РезультатыГолосования.Добавить();
		СтрокаОтвета.Помещение            = ТекПомещение;
		СтрокаОтвета.СобственникПомещения = ТекСобственник;
		СтрокаОтвета.Тема                 = ТекТема;
	КонецЕсли;
	СтрокаОтвета.Вариант = ТекВариант;
	
КонецПроцедуры //ДеревоГолосовВариантПриИзмененииСервер()

// Обработчик события "ПередНачаломИзменения" дерева голосов.
&НаКлиенте
Процедура ДеревоГолосовПередНачаломИзменения(Элемент, Отказ)
	
	ТекСтрокаДерева = Элемент.ТекущиеДанные;
	
	// если это корневая запись - указание варианта невозможно
	Если ТекСтрокаДерева.ПолучитьРодителя() = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры //ДеревоГолосовПередНачаломИзменения()

// Обработчик события "ПередНачаломДобавления" дерева голосов.
&НаКлиенте
Процедура ДеревоГолосовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры //ДеревоГолосовПередНачаломДобавления()

// Обработчик события "ПередУдалением" дерева голосов.
&НаКлиенте
Процедура ДеревоГолосовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры //ДеревоГолосовПередУдалением()

// Обработчик команды "КомандаСвернуть".
&НаКлиенте
Процедура ДеревоГолосовКомандаСвернуть(Команда)
	
	Для Каждого ТекСтрока Из ДеревоГолосов.ПолучитьЭлементы() Цикл
		ИдентификаторСтроки = ТекСтрока.ПолучитьИдентификатор();
		Элементы.ДеревоГолосов.Свернуть(ИдентификаторСтроки);
	КонецЦикла;
	
КонецПроцедуры

// Обработчик команды "КомандаРазвернуть".
&НаКлиенте
Процедура ДеревоГолосовКомандаРазвернуть(Команда)
	
	Для Каждого ТекСтрока Из ДеревоГолосов.ПолучитьЭлементы() Цикл
		ИдентификаторСтроки = ТекСтрока.ПолучитьИдентификатор();
		Элементы.ДеревоГолосов.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	УПЖКХ_ТиповыеМетодыСервер.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти

