
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  ИмяМакета    - Строка - название макета
//  КоличествоЭкземпляров - Число - количество экземпляров на печать
//  НаПринтер    - Булево - если Истина, то выводим сразу на принтер
//  НепосредственнаяПечать - Булево - для режима вывода на принтер
//                 печатать сразу или выводить диалог перед печатью.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак достпности печати по-комплектно
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "Бланк") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Бланк", "Бланк голосования", ПечататьБланк(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "РезультатыГолосования") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"РезультатыГолосования", "Результаты голосования", ПечататьРезультатыГолосования(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокТемГолосования") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СписокТемГолосования", "Список тем голосования", ПечататьСписокТемГолосования(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры // Печать

// Функция формирует табличный документ с бланками голосования.
Функция ПечататьБланк(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	МассивРеестрУчастников = Новый Массив;
	Для Каждого ЭлементМассива ИЗ МассивОбъектов Цикл
		МассивРеестрУчастников.Добавить(ЭлементМассива.РеестрУчастников);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументРеестра", МассивРеестрУчастников);
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_Голосование.Номер,
	|	КВП_Голосование.Дата,
	|	КВП_Голосование.Организация,
	|	КВП_Голосование.Ссылка
	|ИЗ
	|	Документ.КВП_Голосование КАК КВП_Голосование
	|ГДЕ
	|	КВП_Голосование.Ссылка В(&ТекущийДокумент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ФИО,
	|	ВложенныйЗапрос.Квартира,
	|	ВложенныйЗапрос.НомерКвартиры КАК НомерКвартиры,
	|	ВложенныйЗапрос.Здание КАК Здание,
	|	ВложенныйЗапрос.ВесГолоса,
	|	ЕСТЬNULL(УПЖКХ_СобственникиПомещенийСрезПоследних.ВидДокумента, ЗНАЧЕНИЕ(Справочник.УПЖКХ_ДокументыНаПравоСобственности.ПустаяСсылка)) КАК ВидДокумента,
	|	ЕСТЬNULL(УПЖКХ_СобственникиПомещенийСрезПоследних.НомерДокумента, """") КАК НомерДокумента,
	|	ЕСТЬNULL(УПЖКХ_СобственникиПомещенийСрезПоследних.ДатаДокумента, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокумента,
	|	ВложенныйЗапрос.ГолосованиеСсылка КАК ГолосованиеСсылка,
	|	ВложенныйЗапрос.ЯвляетсяФизЛицом,
	|	ВложенныйЗапрос.УдостоверениеЛичности,
	|	ВложенныйЗапрос.ЮрФизЛицо
	|ИЗ
	|	(ВЫБРАТЬ
	|		КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения КАК ФИО,
	|		КВП_РеестрУчастниковГолосованияУчастники.Помещение КАК Квартира,
	|		КВП_РеестрУчастниковГолосованияУчастники.Помещение.Код КАК НомерКвартиры,
	|		КВП_РеестрУчастниковГолосованияУчастники.Помещение.Владелец КАК Здание,
	|		КВП_РеестрУчастниковГолосованияУчастники.ВесГолоса КАК ВесГолоса,
	|		ВЫБОР
	|			КОГДА УПЖКХ_Жильцы.Ссылка ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК Жилец,
	|		ЕСТЬNULL(УПЖКХ_Жильцы.Владелец, ЗНАЧЕНИЕ(Справочник.КВП_ЛицевыеСчета.ПустаяСсылка)) КАК ЛицевойСчет,
	|		КВП_Голосование.Ссылка КАК ГолосованиеСсылка,
	|		ВЫБОР
	|			КОГДА КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения ССЫЛКА Справочник.ФизическиеЛица
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЯвляетсяФизЛицом,
	|		ВЫБОР
	|			КОГДА КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения ССЫЛКА Справочник.Контрагенты
	|					И КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|				ТОГДА КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения.ДокументУдостоверяющийЛичность
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК УдостоверениеЛичности,
	|		ВЫБОР
	|			КОГДА КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения ССЫЛКА Справочник.ФизическиеЛица
	|					ИЛИ КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения ЕСТЬ NULL
	|				ТОГДА """"
	|			ИНАЧЕ КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения.ЮридическоеФизическоеЛицо
	|		КОНЕЦ КАК ЮрФизЛицо
	|	ИЗ
	|		Документ.КВП_РеестрУчастниковГолосования.Участники КАК КВП_РеестрУчастниковГолосованияУчастники
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УПЖКХ_Жильцы КАК УПЖКХ_Жильцы
	|			ПО КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения = УПЖКХ_Жильцы.ФизЛицо
	|				И КВП_РеестрУчастниковГолосованияУчастники.Помещение = УПЖКХ_Жильцы.Владелец.Адрес
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КВП_Голосование КАК КВП_Голосование
	|			ПО КВП_РеестрУчастниковГолосованияУчастники.Ссылка = КВП_Голосование.РеестрУчастников
	|	ГДЕ
	|		КВП_РеестрУчастниковГолосованияУчастники.Ссылка В(&ДокументРеестра)
	|		И ВЫБОР
	|				КОГДА УПЖКХ_Жильцы.Ссылка ЕСТЬ NULL
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ НЕ УПЖКХ_Жильцы.ПометкаУдаления
	|			КОНЕЦ) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_СобственникиПомещений.СрезПоследних(, ) КАК УПЖКХ_СобственникиПомещенийСрезПоследних
	|		ПО ВложенныйЗапрос.Квартира = УПЖКХ_СобственникиПомещенийСрезПоследних.Помещение
	|			И ВложенныйЗапрос.ФИО = УПЖКХ_СобственникиПомещенийСрезПоследних.Собственник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
	|		ПО (ВЫБОР
	|				КОГДА ВложенныйЗапрос.Жилец
	|					ТОГДА ВложенныйЗапрос.ЛицевойСчет = КВП_ЛицевыеСчета.Ссылка
	|				ИНАЧЕ ВложенныйЗапрос.Квартира = КВП_ЛицевыеСчета.Адрес
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Здание,
	|	НомерКвартиры
	|ИТОГИ ПО
	|	ГолосованиеСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КВП_ГолосованиеТемыГолосования.НомерСтроки КАК НомерСтроки,
	|	КВП_ВариантыВыбораГолосования.Ссылка КАК ВариантСсылка,
	|	КВП_ВариантыВыбораГолосования.Наименование КАК НаименованиеВарианта,
	|	КВП_ГолосованиеТемыГолосования.Ссылка КАК ГолосованиеСсылка
	|ИЗ
	|	Документ.КВП_Голосование.ТемыГолосования КАК КВП_ГолосованиеТемыГолосования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КВП_ВариантыВыбораГолосования КАК КВП_ВариантыВыбораГолосования
	|		ПО КВП_ГолосованиеТемыГолосования.Тема = КВП_ВариантыВыбораГолосования.Владелец
	|			И (НЕ КВП_ВариантыВыбораГолосования.ПометкаУдаления)
	|ГДЕ
	|	КВП_ГолосованиеТемыГолосования.Ссылка В(&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	КВП_ВариантыВыбораГолосования.Код
	|ИТОГИ ПО
	|	ГолосованиеСсылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыФизическихЛиц.Физлицо,
	|	ДокументыФизическихЛиц.ВидДокумента,
	|	ДокументыФизическихЛиц.Серия,
	|	ДокументыФизическихЛиц.Номер,
	|	ДокументыФизическихЛиц.ДатаВыдачи,
	|	ДокументыФизическихЛиц.КемВыдан,
	|	ДокументыФизическихЛиц.КодПодразделения
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(, ) КАК ДокументыФизическихЛиц";
	
	УпрощенныйВариантУчетаСобственников = Константы.УПЖКХ_УпрощенныйВариантУчетаСобственников.Получить();
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Шапка                          = МассивРезультатов[0].Выбрать();
	ДеревоУчастников               = МассивРезультатов[1].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДеревоТем                      = МассивРезультатов[2].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаПаспортныхДанных        = МассивРезультатов[3].Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_Голосование_Бланк";
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.КВП_Голосование.ПФ_MXL_Бланк");
	ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");
	
	Пока Шапка.Следующий() Цикл
		ПредставлениеОрганизации = УПЖКХ_ТиповыеМетодыВызовСервера.ОписаниеОрганизации(УПЖКХ_ТиповыеМетодыСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), 
																						"НаименованиеДляПечатныхФорм,");
		ОбластьЗаголовка.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		ОбластьЗаголовка.Параметры.НомерДокумента           = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер);
		ОбластьЗаголовка.Параметры.ДатаДокумента            = Формат(Шапка.Дата, "ДФ=dd.MM.yyyy");
		
		ЭтоПервый = Истина;
		// печатаем бланк для каждого участника
		СтрокиУчастниковДокумента = ДеревоУчастников.Строки.Найти(Шапка.Ссылка, "ГолосованиеСсылка");
		Если НЕ СтрокиУчастниковДокумента = Неопределено Тогда
			Для Каждого СтрокаУчастниковДокумента ИЗ СтрокиУчастниковДокумента.Строки Цикл
				
				Если ЭтоПервый Тогда
					ЭтоПервый = Ложь;
				Иначе
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				АдресДома = Справочники.КВП_Здания.ПолучитьПредставлениеЗдания(СтрокаУчастниковДокумента.Здание);
				ОбластьЗаголовка.Параметры.ФИО = СтрокаУчастниковДокумента.ФИО;
				
				УдостоверениеЛичности = "";
				Если НЕ СтрокаУчастниковДокумента.ЯвляетсяФизЛицом Тогда
					
					УдостоверениеЛичности = СтрокаУчастниковДокумента.УдостоверениеЛичности;
					
				Иначе
					
					СтуктураПоиска         = Новый Структура("ФизЛицо");
					СтуктураПоиска.ФизЛицо = СтрокаУчастниковДокумента.ФИО;
					
					ВыборкаПаспортныхДанных.Сбросить();
					Если ВыборкаПаспортныхДанных.НайтиСледующий(СтуктураПоиска) Тогда
						Паспорт = ВыборкаПаспортныхДанных;
						
						УдостоверениеЛичности = "" + Паспорт.ВидДокумента + 
												", серия: " + Паспорт.Серия + 
												", № " + Паспорт.Номер + 
												", выдан: " + Формат(Паспорт.ДатаВыдачи,"ДФ='дд ММММ гггг'; ДП='Не указано'") + 
												" года, " + Паспорт.КемВыдан + 
												?(Паспорт.КодПодразделения = "", "", ", № подр. " +  Паспорт.КодПодразделения);
												//"Дата регистрации по месту жительства: " + Формат(Паспорт.ДатаРегистрацииПоМестуЖительства,"ДФ='дд ММММ гггг'; ДП='Не указано'");
					КонецЕсли;
					
				КонецЕсли;
				
				ПравоСобственности = ПолучитьПредставлениеДокументаСобственности(СтрокаУчастниковДокумента.НомерДокумента, СтрокаУчастниковДокумента.ДатаДокумента, СтрокаУчастниковДокумента.ВидДокумента);
				
				ОбластьЗаголовка.Параметры.Документ           = УдостоверениеЛичности;
				ОбластьЗаголовка.Параметры.Адрес              = ПолучитьАдресПомещения(АдресДома, СтрокаУчастниковДокумента.Квартира);
				ОбластьЗаголовка.Параметры.ПравоСобственности = ПравоСобственности;
				ОбластьЗаголовка.Параметры.КоличествоГолосов  = Формат(СтрокаУчастниковДокумента.ВесГолоса, "ЧДЦ=2");
				
				ТабДокумент.Вывести(ОбластьЗаголовка);
				
				СтрокиТемДокумента = ДеревоТем.Строки.Найти(Шапка.Ссылка, "ГолосованиеСсылка");
				Если НЕ СтрокиТемДокумента = Неопределено Тогда
					Для Каждого СтрокаТемДокумента ИЗ СтрокиТемДокумента.Строки Цикл
						
						СтрокаТемы = СтрокаТемДокумента.ГолосованиеСсылка.ТемыГолосования.Получить(СтрокаТемДокумента.НомерСтроки - 1);
						
						ОбластьМакета = Макет.ПолучитьОбласть("Тема");
						ОбластьМакета.Параметры.НомерСтроки      = СтрокаТемы.НомерСтроки;
						ОбластьМакета.Параметры.ТемаСсылка       = СтрокаТемы.Тема;
						ОбластьМакета.Параметры.НаименованиеТемы = СтрокаТемы.Тема.Наименование;
						ОбластьМакета.Параметры.ОписаниеТемы     = СтрокаТемы.Тема.ПолноеОписание;
						ТабДокумент.Вывести(ОбластьМакета);
						
						Если ПараметрыПечати.ГоризонтальнаяПечать Тогда
							// Каждый третий вариант (начиная с первого) выводим с новой строки,
							// остальные варианты выводим в той же строке.
							Сч = 0;
							Для Каждого ВариантТемДокумент ИЗ СтрокаТемДокумента.Строки Цикл
								
								ОбластьМакета = Макет.ПолучитьОбласть("Вариант");
								ОбластьМакета.Параметры.Заполнить(ВариантТемДокумент);
								Если (Сч%3 = 0) Тогда
									ОбластьОтступ = Макет.ПолучитьОбласть("Отступ");
									ТабДокумент.Вывести(ОбластьОтступ);
								КонецЕсли;
								ТабДокумент.Присоединить(ОбластьМакета);
								
								Сч = Сч + 1;
							КонецЦикла; // ВыборкаВариантов
						Иначе
							Для Каждого ВариантТемДокумент ИЗ СтрокаТемДокумента.Строки Цикл
								
								ОбластьОтступ = Макет.ПолучитьОбласть("Отступ");
								ТабДокумент.Вывести(ОбластьОтступ);
								
								ОбластьМакета = Макет.ПолучитьОбласть("Вариант");
								ОбластьМакета.Параметры.Заполнить(ВариантТемДокумент);
								ТабДокумент.Присоединить(ОбластьМакета);
								
							КонецЦикла; // ВыборкаВариантов
						КонецЕсли;
						
					КонецЦикла; // ВыборкаТем
				КонецЕсли;
				
				ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
				// получение фамилии, имени, отчества
				Если НЕ СтрокаУчастниковДокумента.ФИО = Неопределено 
					И НЕ (НЕ СтрокаУчастниковДокумента.ЯвляетсяФизЛицом 
					И СтрокаУчастниковДокумента.ЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо) Тогда
					
					РазделеннаяФИО = РазделитьФИО(СтрокаУчастниковДокумента.ФИО.Наименование);
					ОбластьПодвала.Параметры.РасшифровкаФИО = РазделеннаяФИО.Фамилия + " " + 
																Лев(РазделеннаяФИО.Имя,1) + "." + 
																Лев(РазделеннаяФИО.Отчество,1) + ".";
				Иначе
					ОбластьПодвала.Параметры.РасшифровкаФИО = "                          ";
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьПодвала);
				
			КонецЦикла; // ВыборкаУчастников
		КонецЕсли;
		
		ТабДокумент.АвтоМасштаб = Истина;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечататьБланк()

// Функция формирует табличный документ с результатами голосования.
Функция ПечататьРезультатыГолосования(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	МассивРеестрУчастников = Новый Массив;
	Для Каждого ЭлементМассива ИЗ МассивОбъектов Цикл
		МассивРеестрУчастников.Добавить(ЭлементМассива.РеестрУчастников);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент",  МассивОбъектов);
	Запрос.УстановитьПараметр("РеестрУчастников", МассивРеестрУчастников);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_Голосование.Номер КАК Номер,
	|	КВП_Голосование.Дата КАК Дата,
	|	КВП_Голосование.Организация КАК Организация,
	|	КВП_Голосование.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КВП_Голосование КАК КВП_Голосование
	|ГДЕ
	|	КВП_Голосование.Ссылка В(&ТекущийДокумент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КВП_ГолосованиеТемыГолосования.Тема КАК Тема,
	|	КВП_ГолосованиеТемыГолосования.НомерСтроки КАК НомерТемы,
	|	КВП_РеестрУчастниковГолосованияУчастники.СобственникПомещения КАК СобственникПомещения,
	|	КВП_РеестрУчастниковГолосованияУчастники.Помещение КАК Помещение,
	|	КВП_РеестрУчастниковГолосованияУчастники.ВесГолоса КАК ВесГолоса,
	|	КВП_ГолосованиеТемыГолосования.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ врРеестрУчастников
	|ИЗ
	|	Документ.КВП_РеестрУчастниковГолосования.Участники КАК КВП_РеестрУчастниковГолосованияУчастники
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.КВП_Голосование.ТемыГолосования КАК КВП_ГолосованиеТемыГолосования
	|		ПО (ИСТИНА)
	|			И КВП_РеестрУчастниковГолосованияУчастники.Ссылка = КВП_ГолосованиеТемыГолосования.Ссылка.РеестрУчастников
	|ГДЕ
	|	КВП_ГолосованиеТемыГолосования.Ссылка В(&ТекущийДокумент)
	|	И КВП_РеестрУчастниковГолосованияУчастники.Ссылка В(&РеестрУчастников)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КВП_ГолосованиеРезультатыГолосования.Вариант КАК НаименованиеВарианта,
	|	КВП_ГолосованиеРезультатыГолосования.СобственникПомещения КАК СобственникПомещения,
	|	КВП_ГолосованиеРезультатыГолосования.Помещение КАК Помещение,
	|	КВП_ГолосованиеРезультатыГолосования.Тема КАК Тема,
	|	КВП_ГолосованиеРезультатыГолосования.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ врРеестрРезультата
	|ИЗ
	|	Документ.КВП_Голосование.РезультатыГолосования КАК КВП_ГолосованиеРезультатыГолосования
	|ГДЕ
	|	КВП_ГолосованиеРезультатыГолосования.Ссылка В(&ТекущийДокумент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрУчастников.Ссылка КАК Ссылка,
	|	РеестрУчастников.Тема КАК Тема,
	|	ВЫБОР
	|		КОГДА РезультатыГолосования.НаименованиеВарианта = ЗНАЧЕНИЕ(Справочник.КВП_ВариантыВыбораГолосования.ПустаяСсылка)
	|			ТОГДА ""Не участвовал в голосовании""
	|		ИНАЧЕ ЕСТЬNULL(РезультатыГолосования.НаименованиеВарианта, ""Не участвовал в голосовании"")
	|	КОНЕЦ КАК НаименованиеВарианта,
	|	СУММА(ВЫБОР
	|			КОГДА РезультатыГолосования.НаименованиеВарианта <> ЗНАЧЕНИЕ(Справочник.КВП_ВариантыВыбораГолосования.ПустаяСсылка)
	|				ТОГДА РеестрУчастников.ВесГолоса
	|		КОНЕЦ) КАК КоличествоГолосовавших,
	|	СУММА(РеестрУчастников.ВесГолоса) КАК КоличествоГолосов,
	|	СУММА(1) КАК Проголосовало,
	|	РеестрУчастников.НомерТемы КАК НомерТемы
	|ПОМЕСТИТЬ втИтоговыеДанные
	|ИЗ
	|	врРеестрУчастников КАК РеестрУчастников
	|		ЛЕВОЕ СОЕДИНЕНИЕ врРеестрРезультата КАК РезультатыГолосования
	|		ПО РеестрУчастников.СобственникПомещения = РезультатыГолосования.СобственникПомещения
	|			И РеестрУчастников.Помещение = РезультатыГолосования.Помещение
	|			И РеестрУчастников.Тема = РезультатыГолосования.Тема
	|			И РеестрУчастников.Ссылка = РезультатыГолосования.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РезультатыГолосования.НаименованиеВарианта,
	|	РеестрУчастников.Тема,
	|	РеестрУчастников.Ссылка,
	|	РеестрУчастников.НомерТемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтоговыеДанные.Ссылка КАК Ссылка,
	|	втИтоговыеДанные.Тема КАК Тема,
	|	втИтоговыеДанные.НаименованиеВарианта КАК НаименованиеВарианта,
	|	СУММА(втИтоговыеДанные.КоличествоГолосовавших) КАК КоличествоГолосовавших,
	|	СУММА(втИтоговыеДанные.КоличествоГолосов) КАК КоличествоГолосов,
	|	СУММА(втИтоговыеДанные.Проголосовало) КАК Проголосовало,
	|	втИтоговыеДанные.НомерТемы КАК НомерТемы
	|ИЗ
	|	втИтоговыеДанные КАК втИтоговыеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втИтоговыеДанные.Ссылка,
	|	втИтоговыеДанные.Тема,
	|	втИтоговыеДанные.НаименованиеВарианта,
	|	втИтоговыеДанные.НомерТемы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТемы,
	|	НаименованиеВарианта
	|ИТОГИ
	|	СУММА(КоличествоГолосовавших),
	|	СУММА(КоличествоГолосов),
	|	СУММА(Проголосовало)
	|ПО
	|	Ссылка,
	|	Тема";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Шапка = МассивРезультатов[0].Выбрать();
	
	ДеревоРезГолосования = МассивРезультатов[4].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.КВП_Голосование.ПФ_MXL_РезультатыГолосования");
	
	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_Голосование_РезультатыГолосования";
	
	Пока Шапка.Следующий() Цикл
		
		ИтогиПоДокументу = ДеревоРезГолосования.Строки.Найти(Шапка.Ссылка, "Ссылка");
		
		Если НЕ ИтогиПоДокументу = Неопределено Тогда
			// Выводим шапку
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			
			ПредставлениеОрганизации = УПЖКХ_ТиповыеМетодыВызовСервера.ОписаниеОрганизации(УПЖКХ_ТиповыеМетодыСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), 
																							"НаименованиеДляПечатныхФорм,");
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
			ОбластьМакета.Параметры.НомерДокумента           = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер);
			ОбластьМакета.Параметры.ДатаДокумента            = Формат(Шапка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьМакета);
			
			НомерТемы = 1;
			
			Для Каждого ТекТема ИЗ ИтогиПоДокументу.Строки Цикл
				
				ОбластьМакета = Макет.ПолучитьОбласть("Тема");
				ОбластьМакета.Параметры.НомерСтроки      = НомерТемы;
				ОбластьМакета.Параметры.ТемаСсылка       = ТекТема.Тема;
				ОбластьМакета.Параметры.НаименованиеТемы = ТекТема.Тема.Наименование;
				ОбластьМакета.Параметры.ОписаниеТемы     = ТекТема.Тема.ПолноеОписание;
				ТабДокумент.Вывести(ОбластьМакета);
				
				Для Каждого ТекТемаВариант ИЗ ТекТема.Строки Цикл
					
					ОбластьМакета = Макет.ПолучитьОбласть("Вариант");
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекТемаВариант);
					ТабДокумент.Вывести(ОбластьМакета);
					
				КонецЦикла;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Итог");
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекТема);
				ТабДокумент.Вывести(ОбластьМакета);
				
				// Выводим подвал
				ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
				ОбластьМакета.Параметры.КоличествоУчастников = ТекТема.Проголосовало;
				ОбластьМакета.Параметры.КоличествоГолосов    = ТекТема.КоличествоГолосов;
				ТабДокумент.Вывести(ОбластьМакета);
				
				НомерТемы = НомерТемы + 1;
				
			КонецЦикла;
		КонецЕсли;
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечататьРезультатыГолосования()

// Функция формирует табличный документ со списком тем и вариантов голосования.
Функция ПечататьСписокТемГолосования(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_Голосование_СписокТемГолосования";
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.КВП_Голосование.ПФ_MXL_СписокТемГолосования");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_Голосование.Ссылка КАК Ссылка,
	|	КВП_ГолосованиеТемыГолосования.Тема.Наименование КАК Тема,
	|	КВП_ГолосованиеТемыГолосования.НомерСтроки КАК НомерСтроки,
	|	КВП_ВариантыВыбораГолосования.Код КАК КодВарианта,
	|	КВП_ВариантыВыбораГолосования.Наименование КАК НаименованиеВарианта
	|ИЗ
	|	Документ.КВП_Голосование.ТемыГолосования КАК КВП_ГолосованиеТемыГолосования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КВП_ВариантыВыбораГолосования КАК КВП_ВариантыВыбораГолосования
	|		ПО КВП_ГолосованиеТемыГолосования.Тема = КВП_ВариантыВыбораГолосования.Владелец
	|			И (НЕ КВП_ВариантыВыбораГолосования.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КВП_Голосование КАК КВП_Голосование
	|		ПО КВП_ГолосованиеТемыГолосования.Ссылка = КВП_Голосование.Ссылка
	|ГДЕ
	|	КВП_Голосование.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	КодВарианта
	|ИТОГИ
	|	МАКСИМУМ(НомерСтроки)
	|ПО
	|	Ссылка,
	|	Тема";
	
	ВыборкаДокументов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ОбластьДокумент                 = Макет.ПолучитьОбласть("Документ");
		ОбластьДокумент.Параметры.Дата  = Формат(ВыборкаДокументов.Ссылка.Дата, "ДФ=dd.MM.yyyy");
		ТабДокумент.Вывести(ОбластьДокумент);
			
		ВыборкаТем = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТем.Следующий() Цикл
			
			ОбластьТема                            = Макет.ПолучитьОбласть("Тема");
			ОбластьТема.Параметры.НомерСтроки      = ВыборкаТем.НомерСтроки;
			ОбластьТема.Параметры.НаименованиеТемы = ВыборкаТем.Тема;
			ТабДокумент.Вывести(ОбластьТема);
			
			ВыборкаВариантов = ВыборкаТем.Выбрать();
			Пока ВыборкаВариантов.Следующий() Цикл
				
				ОбластьВарианты                                = Макет.ПолучитьОбласть("Варианты");
				ОбластьВарианты.Параметры.КодВарианта          = Число(ВыборкаВариантов.КодВарианта);
				ОбластьВарианты.Параметры.НаименованиеВарианта = ВыборкаВариантов.НаименованиеВарианта;
				ТабДокумент.Вывести(ОбластьВарианты);
				
			КонецЦикла; // ВыборкаВариантов
			
		КонецЦикла; // ВыборкаТем
		
		ОбластьОтступ = Макет.ПолучитьОбласть("Отступ");
		ТабДокумент.Вывести(ОбластьОтступ);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечататьТемыИВарианты()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли
