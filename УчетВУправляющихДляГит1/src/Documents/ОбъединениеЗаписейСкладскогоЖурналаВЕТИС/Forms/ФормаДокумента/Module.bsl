
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектов = ОбщегоНазначения.ОбщийМодуль("ВерсионированиеОбъектов");
		МодульВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормИСКлиентПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСтатусВЕТИС();
	
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);
	
	РазблокироватьДанныеФормыДляРедактирования();
	
	ИнтеграцияВЕТИСПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ИнтеграцияИСКлиентСервер.ИмяСобытияИзмененоСостояние(ИнтеграцияВЕТИСКлиентСервер.ИмяПодсистемы())
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		Если Параметр.Свойство("ОбъектИзменен")
			И Параметр.ОбъектИзменен Тогда
			ОбновитьПредставленияНаФорме(Истина);
		Иначе
			ОбновитьПредставленияНаФорме(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = ИнтеграцияИСКлиентСервер.ИмяСобытияВыполненОбмен(ИнтеграцияВЕТИСКлиентСервер.ИмяПодсистемы())
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусВЕТИСВФормахДокументов)) Тогда
		
		ОбновитьПредставленияНаФорме(Истина);
		
	КонецЕсли;
	
	Если ИмяСобытия = "Закрытие_ПерейтиКСтрокеОшибки" И Источник = "Справочник.ВЕТИСПрисоединенныеФайлы.Форма.ФормаОшибки" Тогда
		ТекущийЭлемент = Элементы.ОбъединяемыеЗаписиСкладскогоЖурнала;
		Элементы.ОбъединяемыеЗаписиСкладскогоЖурнала.ТекущаяСтрока = Параметр;
	КонецЕсли;
	
	СобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПродукцияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.Продукция);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если ЗапрещенаПродукцияТретьегоУровня(ИсключитьПродукциюТретьегоУровня, Объект.ЗаписьСкладскогоЖурнала) Тогда
		ПараметрыФормы.Вставить("ИсключитьПродукциюТретьегоУровня", Истина);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ПродукцияВЕТИС.Форма.ФормаСписка", ПараметрыФормы, Элемент, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьПризнакИсключенияПродукцииТретьегоУровня();
	
КонецПроцедуры

&НаКлиенте
Процедура ХозяйствующийСубъектПриИзменении(Элемент)
	
	ОчиститьСписокЗаписейЖурнала("ХозяйствующийСубъект"); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	
	ОчиститьСписокЗаписейЖурнала("Предприятие"); 
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусВЕТИСПредставлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	ТекстВопроса = "";
	НуженВопрос = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьПричинуОшибки" Тогда
	ИначеЕсли (Не ЗначениеЗаполнено(Объект.Ссылка)) Или (Не Объект.Проведен) Тогда
		ТекстВопроса = НСтр("ru = 'Документ не проведен. Провести?'");
		НуженВопрос = Истина;
	ИначеЕсли Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Документ был изменен. Провести?'");
		НуженВопрос = Истина;
	КонецЕсли;
	
	Если НуженВопрос Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусВЕТИСОбработкаНавигационнойСсылкиЗавершение",
		                                                    ЭтотОбъект,
		                                                    Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособОбъединенияПриИзменении(Элемент)
	
	СпособОбъединенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьСкладскогоЖурналаПриИзменении(Элемент)
	
	Если Объект.ЗаписьСкладскогоЖурнала = СохраненныеЗначенияРеквизитов.ЗаписьСкладскогоЖурнала Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ЗаписьСкладскогоЖурнала)
		И Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() <> 0
		И ОтличаютсяКлючевыеРеквизитыЗаписейЖурнала(Объект.ЗаписьСкладскогоЖурнала, СохраненныеЗначенияРеквизитов.ЗаписьСкладскогоЖурнала) Тогда
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Продолжить'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена);
		
		ТекстВопроса = НСтр("ru = 'Список записей складского журнала будет очищен?
	                         |Продолжить?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписьСкладскогоЖурналаПриИзмененииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок);
		
	Иначе
		ЗаписьСкладскогоЖурналаПриИзмененииНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РучнойВводПродукцииПриИзменении(Элемент)
	
	Объект.РучнойВводПродукции = РучнойВводПродукции;
	НастроитьЗависимыеЭлементыФормы(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъединяемыеЗаписиСкладскогоЖурнала

&НаКлиенте
Процедура ОбъединяемыеЗаписиСкладскогоЖурналаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОбъединяемыеЗаписиСкладскогоЖурнала.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Поле = Элементы.ОбъединяемыеЗаписиСкладскогоЖурналаЗаписьСкладскогоЖурнала
		И Элементы.ОбъединяемыеЗаписиСкладскогоЖурнала.ТолькоПросмотр 
		И ЗначениеЗаполнено(ТекущиеДанные.ЗаписьСкладскогоЖурнала) Тогда
		
		ПоказатьЗначение(, ТекущиеДанные.ЗаписьСкладскогоЖурнала);
		
	ИначеЕсли Поле = Элементы.ОбъединяемыеЗаписиСкладскогоЖурналаЗаписьСкладскогоЖурналаПродукция
		И ЗначениеЗаполнено(ТекущиеДанные.ЗаписьСкладскогоЖурнала) Тогда
		
		ПродукцияЗаписи = ИнтеграцияВЕТИСВызовСервера.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ЗаписьСкладскогоЖурнала, "Продукция");
		Если ЗначениеЗаполнено(ПродукцияЗаписи) Тогда
			ПоказатьЗначение(, ПродукцияЗаписи);
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъединяемыеЗаписиСкладскогоЖурналаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПредупреждения = ОбъединяемыеЗаписиСкладскогоЖурналаОбработкаВыбораНаСервере(ВыбранноеЗначение);
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъединяемыеЗаписиСкладскогоЖурналаПриИзменении(Элемент)
	
	ОбъединяемыеЗаписиСкладскогоЖурналаПриИзмененииНаСервере();
	
КонецПроцедуры
 
&НаКлиенте
Процедура ОбъединяемыеЗаписиСкладскогоЖурналаЗаписьСкладскогоЖурналаПриИзменении(Элемент)
	
	ОбъединяемыеЗаписиСкладскогоЖурналаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъединяемыеЗаписиСкладскогоЖурналаЗаписьСкладскогоЖурналаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ЗаписьСкладскогоЖурналаДанныхВыбора(Текст, ПараметрыПолученияДанных);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьПодбор(Команда)
	
	ПараметрыПодбора = ИнтеграцияВЕТИСКлиент.ПараметрыПодбора(Элементы.ОбъединяемыеЗаписиСкладскогоЖурналаЗаписьСкладскогоЖурнала, ЭтаФорма);
	
	// Параметры отбора могут быть не установлены, если в ТЧ одна строка.
	Если НЕ ПараметрыПодбора.Отбор.Свойство("ПродукцияПродукция") 
		И ЗначениеЗаполнено(Отбор_Продукция) Тогда
		
		ПараметрыПодбора.Отбор.Вставить("ПродукцияПродукция", Отбор_Продукция);
		ПараметрыПодбора.Отбор.Вставить("НизкокачественнаяПродукция", Отбор_НизкокачественнаяПродукция);
		ПараметрыПодбора.Отбор.Вставить("СкоропортящаясяПродукция", Отбор_СкоропортящаясяПродукция);
		ПараметрыПодбора.Отбор.Вставить("СтранаПроизводства", Отбор_СтранаПроизводства);
		
	КонецЕсли; 
	
	ОткрытьФорму("Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ФормаВыбора", 
					ПараметрыПодбора, 
					Элементы.ОбъединяемыеЗаписиСкладскогоЖурнала,,,,, 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ОбъединениеЗаписейСкладскогоЖурналаВЕТИС.Форма.ФормаДокумента.Записать");
	
	ОчиститьСообщения();
	Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("Документ.ОбъединениеЗаписейСкладскогоЖурналаВЕТИС.Форма.ФормаДокумента.Провести");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("Документ.ОбъединениеЗаписейСкладскогоЖурналаВЕТИС.Форма.ФормаДокумента.ПровестиИЗакрыть");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормИСКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Статусы

&НаСервере
Процедура ОбновитьСтатусВЕТИС()
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	
	СтатусВЕТИС                = МенеджерОбъекта.СтатусПоУмолчанию();
	ДальнейшееДействие         = МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию();
	ОперацииДопустимыхДействий = МенеджерОбъекта.ОперацииДопустимыхДействий();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие1 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие1
		|	КОНЕЦ КАК ДальнейшееДействие1,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие2 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие2
		|	КОНЕЦ КАК ДальнейшееДействие2,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие3 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие3
		|	КОНЕЦ КАК ДальнейшееДействие3
		|ИЗ
		|	РегистрСведений.СтатусыДокументовВЕТИС КАК Статусы
		|ГДЕ
		|	Статусы.Документ = &Документ");
		
		Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияВЕТИС.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусВЕТИС = Выборка.Статус;
			
			ДальнейшееДействие = Новый Массив;
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие1);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие2);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие3);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДопустимыеДействия = Новый Массив;
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ПередайтеДанные);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ОтменитеОперацию);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ОтменитеПередачуДанных);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ПодтвердитеКорректностьДокументаСозданногоЧерезWeb);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ПроверьтеКорректностьДанных);
	
	НедоступныеДействия = ПользователиВЕТИС.НедоступныеДальнейшиеДействия(Объект.Ссылка, ДопустимыеДействия, ОперацииДопустимыхДействий, Объект.ХозяйствующийСубъект);
	
	СтатусВЕТИСПредставление = ИнтеграцияВЕТИС.ПредставлениеСтатусаВЕТИС(
		СтатусВЕТИС,
		ДальнейшееДействие,
		ДопустимыеДействия,
		НедоступныеДействия);
		
	#Область ОшибкиВетИС
	
	Для Каждого СтрокаЗаписей Из Объект.ОбъединяемыеЗаписиСкладскогоЖурнала Цикл
		СтрокаЗаписей.ЕстьОшибки = -1;
		СтрокаЗаписей.Ошибка     = "";
	КонецЦикла;
	
	ЕстьОшибкиПоСтрокам = Ложь;
	Если СтатусВЕТИС = Перечисления.СтатусыОбработкиОбъединенийЗаписейСкладскогоЖурналаВЕТИС.ОтклоненВЕТИС Тогда
		ТаблицаОшибок = ИнтеграцияВЕТИСВызовСервера.ПолучитьТаблицуОшибок(Объект.Ссылка);
		Если ТаблицаОшибок <> Неопределено Тогда
			Для Каждого Ошибка Из ТаблицаОшибок Цикл
				СтрокиЗаписейПоНомеру = Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.НайтиСтроки(Новый Структура("НомерСтроки", Ошибка.НомерСтрокиСОшибкой));
				Для Каждого СтрокаЗаписей Из СтрокиЗаписейПоНомеру Цикл
					СтрокаЗаписей.ЕстьОшибки = 0;
					СтрокаЗаписей.Ошибка     = Ошибка.КодОшибки+": "+Ошибка.ОписаниеОшибки;
					ЕстьОшибкиПоСтрокам = Истина;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ОбъединяемыеЗаписиСкладскогоЖурналаОшибка.Видимость = ЕстьОшибкиПоСтрокам;
	
	#КонецОбласти
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусВЕТИСОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли;
	
	ПроверитьЗаполнениеИЗаписатьДокумент();
	
	Если Не Модифицированность И Объект.Проведен Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Обмен

&НаКлиенте
Процедура ВыполнитьОбменОбработкаОжидания()
	
	ИнтеграцияВЕТИСКлиент.ПродолжитьВыполнениеОбмена(ЭтотОбъект, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область РедактированиеТабличнойЧасти

&НаКлиенте
Процедура ОчиститьСписокЗаписейЖурнала(ИмяРеквизита)

	Если Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() <> 0 
		И Объект[ИмяРеквизита] <> СохраненныеЗначенияРеквизитов[ИмяРеквизита] Тогда
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Продолжить'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена);
		
		ТекстВопроса = НСтр("ru = 'Список записей складского журнала будет очищен?
	                         |Продолжить?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьСписокЗаписейЖурналаЗавершение", ЭтотОбъект, ИмяРеквизита);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок);
		
	Иначе
		НастроитьЗависимыеЭлементыФормы(ИмяРеквизита);
	КонецЕсли; 

КонецПроцедуры
 
&НаКлиенте
Процедура ОчиститьСписокЗаписейЖурналаЗавершение(РезультатВопроса, ИмяРеквизита) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Объект[ИмяРеквизита] = СохраненныеЗначенияРеквизитов[ИмяРеквизита];
		Возврат;
	КонецЕсли;
	
	ОчиститьСписокЗаписейЖурналаНаСервере(ИмяРеквизита);
	
	ИзменитьДоступностьЭлементаПредприятиеКлиент();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСписокЗаписейЖурналаНаСервере(Знач ИмяРеквизита)

	ОбъединяемыеЗаписиСкладскогоЖурналаПриИзмененииНаСервере();
	
	Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Очистить();
	
	НастроитьЗависимыеЭлементыФормыНаСервере(ИмяРеквизита);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияОтбораПоЗаписиЖурнала()

	// Вызывается при изменении записей журнала в табличной части или в шапке
	
	ЗаписьСкладскогоЖурналаДляОтбора = Неопределено;
	Если Объект.СпособОбъединения = Перечисления.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Присоединить
		И ЗначениеЗаполнено(Объект.ЗаписьСкладскогоЖурнала) Тогда
		
		ЗаписьСкладскогоЖурналаДляОтбора = Объект.ЗаписьСкладскогоЖурнала;
		
	ИначеЕсли Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() > 0 Тогда
		
		ЗаписьСкладскогоЖурналаДляОтбора = Объект.ОбъединяемыеЗаписиСкладскогоЖурнала[0].ЗаписьСкладскогоЖурнала;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаписьСкладскогоЖурналаДляОтбора) Тогда
		
		// Отбор используется для выбора записей журнала в табличную часть
		СписокРеквизитов = Новый Структура;
		СписокРеквизитов.Вставить("Отбор_ВидПродукции", "Продукция.ВидПродукции");
		СписокРеквизитов.Вставить("Отбор_Продукция", "Продукция.Продукция");
		СписокРеквизитов.Вставить("Отбор_НизкокачественнаяПродукция", "НизкокачественнаяПродукция");
		СписокРеквизитов.Вставить("Отбор_СкоропортящаясяПродукция", "СкоропортящаясяПродукция");
		СписокРеквизитов.Вставить("Отбор_СтранаПроизводства", "СтранаПроизводства");
		
		ЗначенияРеквизитовОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗаписьСкладскогоЖурналаДляОтбора, СписокРеквизитов);
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ЗначенияРеквизитовОбъекта);
		
	Иначе	
		
		Отбор_ВидПродукции = Неопределено;
		Отбор_Продукция = Неопределено;
		Отбор_НизкокачественнаяПродукция = Ложь;
		Отбор_СкоропортящаясяПродукция = Ложь;
		Отбор_СтранаПроизводства = Неопределено;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораДоступныхЕдиницИзмерения(УстановитьНовоеЗначение = Ложь)
	
	ДоступныеЕдиницыИзмерения = Новый Массив;
	Если ЗначениеЗаполнено(Объект.ВидПродукции) Тогда
		ДоступныеЕдиницыИзмерения = Новый Массив(ИнтеграцияВЕТИСПовтИсп.ДоступныеЕдиницыИзменения(Объект.ВидПродукции));
	КонецЕсли;
	Элементы.ЕдиницаИзмерения.СписокВыбора.ЗагрузитьЗначения(ДоступныеЕдиницыИзмерения);
	
	Если ДоступныеЕдиницыИзмерения.Найти(Объект.ЕдиницаИзмерения) = Неопределено Тогда
		Объект.ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	Если УстановитьНовоеЗначение ИЛИ НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмерения) Тогда
		
		Если Элементы.ЕдиницаИзмерения.СписокВыбора.Количество() > 0 Тогда
			Объект.ЕдиницаИзмерения = Элементы.ЕдиницаИзмерения.СписокВыбора[0].Значение;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписьСкладскогоЖурналаПриИзмененииНаСервере()

	ПриИзмененииЗаписиЖурналаИлиСпособаОбъединения();
	
	НастроитьЗависимыеЭлементыФормыНаСервере("ЗаписьСкладскогоЖурнала");

КонецПроцедуры

&НаСервере
Процедура ОбъединяемыеЗаписиСкладскогоЖурналаПриИзмененииНаСервере()

	ПриИзмененииЗаписиЖурналаИлиСпособаОбъединения();
	
	НастроитьЗависимыеЭлементыФормыНаСервере("ОбъединяемыеЗаписиСкладскогоЖурнала");

КонецПроцедуры
 
&НаСервере
Функция ОбъединяемыеЗаписиСкладскогоЖурналаОбработкаВыбораНаСервере(Знач ВыбранноеЗначение)

	ТекстРезультатаДобавления = Неопределено;
	
	ТребуетсяЗаполнитьОтбор = 
		Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() = 0
			ИЛИ НЕ ЗначениеЗаполнено(Отбор_Продукция);
			
	ЭталонныеЗаписиЖурнала = Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Выгрузить().ВыгрузитьКолонку("ЗаписьСкладскогоЖурнала");
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ЭталонныеЗаписиЖурнала, Справочники.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка());
	ЭталонныеЗаписиЖурнала = ?(ЭталонныеЗаписиЖурнала.ВГраница() >= 0, ЭталонныеЗаписиЖурнала, Неопределено);
	
	Выборка = Документы.ОбъединениеЗаписейСкладскогоЖурналаВЕТИС.ЗаписиЖурналаКоторыеНельзяОбъединить(
					ВыбранноеЗначение, ЭталонныеЗаписиЖурнала);
	
	Если Выборка.Количество() <> 0 Тогда
		
		
		Если ВыбранноеЗначение.Количество() = 1 Тогда
			
			ЗаголовокПричин = НСтр("ru = 'Запись журнала не может быть добавлена в документ по причинам:'");
			
		ИначеЕсли Выборка.Количество() = ВыбранноеЗначение.Количество() Тогда
			
			ЗаголовокПричин = НСтр("ru = 'Записи журнала не могут быть добавлены в документ по причинам:'");
			
		Иначе
			
			ЗаголовокПричин = НСтр("ru = 'Некоторые записи журнала не были добавлены в документ по причинам:'");
			
		КонецЕсли; 
		
		ТекстРезультатаДобавления = Документы.ОбъединениеЗаписейСкладскогоЖурналаВЕТИС.ПричиныПоКоторымНельзяОбъединитьЗаписи(Выборка, ЗаголовокПричин);
		
	КонецЕсли; 
		
	Пока Выборка.Следующий() Цикл
		
		ВыбранноеЗначение.Удалить(ВыбранноеЗначение.Найти(Выборка.Ссылка));
		
	КонецЦикла;
	
	Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
		СтруктураПоиска = Новый Структура("ЗаписьСкладскогоЖурнала", ЭлементМассива);
		СписокСтрок = Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.НайтиСтроки(СтруктураПоиска);
		Если Объект.ЗаписьСкладскогоЖурнала = ЭлементМассива Тогда
		ИначеЕсли СписокСтрок.Количество() = 0 Тогда
			НоваяСтрока = Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Добавить();
			НоваяСтрока.ЗаписьСкладскогоЖурнала = ЭлементМассива;
		КонецЕсли;
	КонецЦикла;

	Если ТребуетсяЗаполнитьОтбор Тогда
		ПриИзмененииЗаписиЖурналаИлиСпособаОбъединения();
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормыНаСервере("ОбъединяемыеЗаписиСкладскогоЖурнала");
	
	Возврат ТекстРезультатаДобавления;
	
КонецФункции

&НаСервере
Процедура ПриИзмененииЗаписиЖурналаИлиСпособаОбъединения()

	ПереместитьЗаписьСкладскогоЖурнала();
	СохранитьЗначенияРеквизитов(ЭтаФорма);
	
	ЗаполнитьЗначенияОтбораПоЗаписиЖурнала();
	
	Если Объект.СпособОбъединения = Перечисления.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить
		И ЗначениеЗаполнено(Отбор_ВидПродукции)
		И (НЕ ЗначениеЗаполнено(Объект.ВидПродукции) 
			ИЛИ ГруппаВидаПродукцииОбъекта <> Отбор_Продукция) Тогда
			
		Объект.ВидПродукции = Отбор_ВидПродукции;
		ГруппаВидаПродукцииОбъекта = Отбор_Продукция;
		
		ЗаполнитьСписокВыбораВидаПродукции(Истина);
		ЗаполнитьСписокВыбораДоступныхЕдиницИзмерения(Истина);
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаписьСкладскогоЖурналаДанныхВыбора(Знач Текст, Знач ПараметрыПолученияДанных)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 51
	|	ЗаписиСкладскогоЖурналаВЕТИС.Ссылка КАК Ссылка,
	|	ЗаписиСкладскогоЖурналаВЕТИС.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
	|	ЗаписиСкладскогоЖурналаВЕТИС.Предприятие КАК Предприятие,
	|	ЗаписиСкладскогоЖурналаВЕТИС.Продукция КАК Продукция
	|ПОМЕСТИТЬ НайденныеСсылки
	|ИЗ
	|	Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписиСкладскогоЖурналаВЕТИС
	|ГДЕ
	|	ЗаписиСкладскогоЖурналаВЕТИС.ХозяйствующийСубъект = &ХозяйствующийСубъект
	|	И ЗаписиСкладскогоЖурналаВЕТИС.Предприятие = &Предприятие
	|	И НЕ ЗаписиСкладскогоЖурналаВЕТИС.ПометкаУдаления
	|	И (&БезОтбораПоКлючевымПолям
	|			ИЛИ ЗаписиСкладскогоЖурналаВЕТИС.Продукция.Продукция = &ПродукцияПродукция
	|				И ЗаписиСкладскогоЖурналаВЕТИС.НизкокачественнаяПродукция = &НизкокачественнаяПродукция
	|				И ЗаписиСкладскогоЖурналаВЕТИС.СкоропортящаясяПродукция = &СкоропортящаясяПродукция
	|				И ЗаписиСкладскогоЖурналаВЕТИС.СтранаПроизводства = &СтранаПроизводства)
	|	И (ЗаписиСкладскогоЖурналаВЕТИС.Наименование ПОДОБНО &СтрокаПоиска
	|			ИЛИ ЗаписиСкладскогоЖурналаВЕТИС.Продукция.Наименование ПОДОБНО &СтрокаПоиска)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозяйствующийСубъект,
	|	Предприятие,
	|	Продукция,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала КАК Ссылка,
	|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.Представление КАК Представление,
	|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.Продукция.Представление КАК ПродукцияПредставление
	|ИЗ
	|	РегистрСведений.ОстаткиПродукцииВЕТИС КАК ОстаткиПродукцииВЕТИС
	|ГДЕ
	|	ОстаткиПродукцииВЕТИС.КоличествоВЕТИС <> 0
	|	И (ОстаткиПродукцииВЕТИС.ХозяйствующийСубъект, ОстаткиПродукцииВЕТИС.Предприятие, ОстаткиПродукцииВЕТИС.Продукция, ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала) В
	|			(ВЫБРАТЬ
	|				НайденныеСсылки.ХозяйствующийСубъект,
	|				НайденныеСсылки.Предприятие,
	|				НайденныеСсылки.Продукция,
	|				НайденныеСсылки.Ссылка
	|			ИЗ
	|				НайденныеСсылки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.Продукция.Представление";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтрокаПоиска", Текст + "%");
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ПараметрыПолученияДанных.Отбор.ХозяйствующийСубъект);
	Запрос.УстановитьПараметр("Предприятие", ПараметрыПолученияДанных.Отбор.Предприятие);
	
	Если ПараметрыПолученияДанных.Отбор.Свойство("ПродукцияПродукция") Тогда
		Запрос.УстановитьПараметр("ПродукцияПродукция", ПараметрыПолученияДанных.Отбор.ПродукцияПродукция);
		Запрос.УстановитьПараметр("СтранаПроизводства", ПараметрыПолученияДанных.Отбор.СтранаПроизводства);
		Запрос.УстановитьПараметр("НизкокачественнаяПродукция", ПараметрыПолученияДанных.Отбор.НизкокачественнаяПродукция);
		Запрос.УстановитьПараметр("СкоропортящаясяПродукция", ПараметрыПолученияДанных.Отбор.СкоропортящаясяПродукция);
		Запрос.УстановитьПараметр("БезОтбораПоКлючевымПолям", Ложь);
	Иначе
		Запрос.УстановитьПараметр("БезОтбораПоКлючевымПолям", Истина);
		Запрос.УстановитьПараметр("ПродукцияПродукция", Неопределено);
		Запрос.УстановитьПараметр("СтранаПроизводства", Неопределено);
		Запрос.УстановитьПараметр("НизкокачественнаяПродукция", Ложь);
		Запрос.УстановитьПараметр("СкоропортящаясяПродукция", Ложь);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДанныеВыбора = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
	
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Представление + " (" + Выборка.ПродукцияПредставление + ")");
	
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

&НаКлиенте
Процедура ЗаписьСкладскогоЖурналаПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Объект.ЗаписьСкладскогоЖурнала = СохраненныеЗначенияРеквизитов.ЗаписьСкладскогоЖурнала;
		Возврат;
	КонецЕсли;
	
	ОчиститьСписокЗаписейЖурналаНаСервере("ЗаписьСкладскогоЖурнала");
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&наСервереБезКонтекста
Функция ЗапрещенаПродукцияТретьегоУровня(ИсключитьПродукциюТретьегоУровня, ЗаписьСкладскогоЖурнала)
	
	Если Не ИсключитьПродукциюТретьегоУровня Тогда
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(ЗаписьСкладскогоЖурнала) Тогда
		Возврат Истина;
	Иначе
		Возврат ПродукцияВЕТИСВызовСервера.ЗаписьЖурналаСодержитПродукциюЧетвертогоУровня(ЗаписьСкладскогоЖурнала);
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьПризнакИсключенияПродукцииТретьегоУровня()
	
	ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
	ИсключитьПродукциюТретьегоУровня = ИнтеграцияВЕТИСВызовСервера.ИспользуетсяОграничениеВыбораПродукцииТретьегоУровня(ДатаДокумента);
	Если ИсключитьПродукциюТретьегоУровня И Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.РучнойВводПродукции = Ложь;
	КонецЕсли;
	
	ПараметрыВыбораПродукции = Новый Массив(Элементы.Продукция.ПараметрыВыбора);
	
	ПараметрВыбораПроизвольнаяПродукция = Неопределено;
	Для Каждого ПараметрВыбора Из ПараметрыВыбораПродукции Цикл
		Если ПараметрВыбора.Имя = "Отбор.Произвольная" Тогда
			ПараметрВыбораПроизвольнаяПродукция = ПараметрВыбора;
		КонецЕсли;
	КонецЦикла;
	
	Если ИсключитьПродукциюТретьегоУровня Тогда
		Если ПараметрВыбораПроизвольнаяПродукция = Неопределено Тогда
			ПараметрВыбора = Новый ПараметрВыбора("Отбор.Произвольная", Ложь);
			ПараметрыВыбораПродукции.Добавить(ПараметрВыбора);
		КонецЕсли;
	ИначеЕсли Не ПараметрВыбораПроизвольнаяПродукция = Неопределено Тогда
		ПараметрыВыбораПродукции.Удалить(ПараметрыВыбораПродукции.Найти(ПараметрВыбораПроизвольнаяПродукция));
	КонецЕсли;
	
	Элементы.Продукция.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПродукции);
	
	НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтотОбъект, "РучнойВводПродукции");
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьЗаписьСкладскогоЖурнала()
	
	Если Объект.СпособОбъединения = Перечисления.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить Тогда
		Если ЗначениеЗаполнено(Объект.ЗаписьСкладскогоЖурнала) Тогда
			Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Вставить(0).ЗаписьСкладскогоЖурнала = Объект.ЗаписьСкладскогоЖурнала;
			Объект.ЗаписьСкладскогоЖурнала = Неопределено;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.ЗаписьСкладскогоЖурнала) Тогда
			Если Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() > 0 Тогда
				Объект.ЗаписьСкладскогоЖурнала = Объект.ОбъединяемыеЗаписиСкладскогоЖурнала[0].ЗаписьСкладскогоЖурнала;
				Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Удалить(0);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	ИнтеграцияВЕТИС.УстановитьДоступностьПоляСтатус(ЭтотОбъект);
	
	СохранитьЗначенияРеквизитов(ЭтаФорма);
	
	УстановитьПризнакИсключенияПродукцииТретьегоУровня();
	
	ГруппаВидаПродукцииОбъекта = ?(ЗначениеЗаполнено(Объект.ВидПродукции),
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПродукции, "Родитель"), 
		Неопределено);
		
	РучнойВводПродукции = Число(Объект.РучнойВводПродукции);
	
	ОбновитьСтатусВЕТИС();
	
	ЗаполнитьЗначенияОтбораПоЗаписиЖурнала();
	ЗаполнитьСписокВыбораВидаПродукции();
	ЗаполнитьСписокВыбораДоступныхЕдиницИзмерения();
	
	УстановитьПараметрыВыбораХозяйствующегоСубъекта();
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);
	
	НастроитьЗависимыеЭлементыФормыНаСервере();

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораХозяйствующегоСубъекта()

	ИспользуетсяКомиссияИлиПереработка = ИнтеграцияВЕТИС.ИспользуетсяКомиссияПриЗакупкахИлиПереработкаДавальческогоСырья();
	
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("НастроеноПодключение", Истина));
	
	Если Не ИспользуетсяКомиссияИлиПереработка Тогда
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Соответствует", "Организации"));
	КонецЕсли;
	
	Элементы.ХозяйствующийСубъект.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьЗависимыеЭлементыФормы(ИзмененныеРеквизитыИлиЭлемент = "")

	Если ТипЗнч(ИзмененныеРеквизитыИлиЭлемент) = Тип("Строка") Тогда
		СписокРеквизитов = ИзмененныеРеквизитыИлиЭлемент;
	Иначе
		СписокРеквизитов = ИзмененныеРеквизитыИлиЭлемент.Имя;
	КонецЕсли;
	
	Если ТребуетсяВызовСервераПриИзмененииРеквизитов(СписокРеквизитов) Тогда
		НастроитьЗависимыеЭлементыФормыНаСервере(СписокРеквизитов);
	Иначе
		НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтаФорма, СписокРеквизитов)
	КонецЕсли; 

	ИзменитьДоступностьЭлементаПредприятиеКлиент();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныеРеквизитыИлиЭлемент = "")

	Если ТипЗнч(ИзмененныеРеквизитыИлиЭлемент) = Тип("Строка") Тогда
		СписокРеквизитов = ИзмененныеРеквизитыИлиЭлемент;
	Иначе
		СписокРеквизитов = ИзмененныеРеквизитыИлиЭлемент.Имя;
	КонецЕсли;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("СпособОбъединения")
		Или СтруктураРеквизитов.Свойство("ЗаписьСкладскогоЖурнала")
		Или СтруктураРеквизитов.Свойство("ОбъединяемыеЗаписиСкладскогоЖурнала")
		Или Инициализация Тогда

		МассивСвязиПараметров = Новый Массив;
		МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.Предприятие", "Объект.Предприятие"));
		МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.ХозяйствующийСубъект", "Объект.ХозяйствующийСубъект"));
		
		Если Объект.СпособОбъединения = ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Присоединить")
			И (ЗначениеЗаполнено(Объект.ЗаписьСкладскогоЖурнала)
				ИЛИ Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() > 1
					И ЗначениеЗаполнено(Отбор_Продукция))
			
			// Отбор устанавливается только при количестве строк более 1,
			// чтобы можно было перевыбрать запись в первой строке.
			ИЛИ Объект.СпособОбъединения <> ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Присоединить")
				И Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() > 1
				И ЗначениеЗаполнено(Отбор_Продукция) Тогда
				
			МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.ПродукцияПродукция", "Отбор_Продукция"));
			МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.НизкокачественнаяПродукция", "Отбор_НизкокачественнаяПродукция"));
			МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.СкоропортящаясяПродукция", "Отбор_СкоропортящаясяПродукция"));
			МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.СтранаПроизводства", "Отбор_СтранаПроизводства"));
				
		КонецЕсли; 
		
		Элементы.ОбъединяемыеЗаписиСкладскогоЖурналаЗаписьСкладскогоЖурнала.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязиПараметров);

		//
		Если Объект.СпособОбъединения = Перечисления.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Присоединить Тогда

			МассивСвязиПараметров = Новый Массив;
			МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.Предприятие", "Объект.Предприятие"));
			МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.ХозяйствующийСубъект", "Объект.ХозяйствующийСубъект"));
			
			Если Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Количество() > 0
				И ЗначениеЗаполнено(Отбор_Продукция) Тогда
				
				МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.ПродукцияПродукция", "Отбор_Продукция"));
				МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.НизкокачественнаяПродукция", "Отбор_НизкокачественнаяПродукция"));
				МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.СкоропортящаясяПродукция", "Отбор_СкоропортящаясяПродукция"));
				МассивСвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.СтранаПроизводства", "Отбор_СтранаПроизводства"));
			
			КонецЕсли;
			
			Элементы.ЗаписьСкладскогоЖурнала.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязиПараметров);
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если СтруктураРеквизитов.Свойство("СпособОбъединения")
		Или СтруктураРеквизитов.Свойство("ОбъединяемыеЗаписиСкладскогоЖурнала")
		Или Инициализация Тогда
		
		Если Объект.СпособОбъединения = Перечисления.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить Тогда
			
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 5
			|	ЗаписиСкладскогоЖурналаВЕТИС.Продукция.Наименование КАК ПродукцияНаименование
			|ИЗ
			|	Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписиСкладскогоЖурналаВЕТИС
			|ГДЕ
			|	ЗаписиСкладскогоЖурналаВЕТИС.Ссылка В(&СписокЗаписей)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПродукцияНаименование";
			
			Запрос = Новый Запрос(ТекстЗапроса);
			
			СписокЗаписей = Объект.ОбъединяемыеЗаписиСкладскогоЖурнала.Выгрузить(, "ЗаписьСкладскогоЖурнала").ВыгрузитьКолонку("ЗаписьСкладскогоЖурнала");
			Запрос.УстановитьПараметр("СписокЗаписей", СписокЗаписей);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Элементы.НаименованиеПродукции.СписокВыбора.Очистить();
			Пока Выборка.Следующий() Цикл
				Элементы.НаименованиеПродукции.СписокВыбора.Добавить(Выборка.ПродукцияНаименование);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если СтруктураРеквизитов.Свойство("ЗаписьСкладскогоЖурнала")
		Или Инициализация Тогда
		
		Если ЗначениеЗаполнено(Объект.ЗаписьСкладскогоЖурнала) Тогда
			НаименованиеПродукции = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ЗаписьСкладскогоЖурнала, "Продукция.Наименование");
		Иначе
			НаименованиеПродукции = "";
		КонецЕсли;
		
		Элементы.ЗаписьСкладскогоЖурнала.РасширеннаяПодсказка.Заголовок = НаименованиеПродукции;
		
	КонецЕсли; 
	
	Если СтруктураРеквизитов.Свойство("СпособОбъединения")
		Или Инициализация Тогда
		
		Если Объект.СпособОбъединения = Перечисления.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Присоединить Тогда
			ЗаголовокСтраницы = НСтр("ru = 'Присоединяемые записи журнала'");
		Иначе
			ЗаголовокСтраницы = НСтр("ru = 'Объединяемые записи журнала'");
		КонецЕсли;
		
		Элементы.СтраницаЗаписиЖурнала.Заголовок = ЗаголовокСтраницы;
		
	КонецЕсли; 
	
	НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтаФорма, СписокРеквизитов);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(Форма, СписокРеквизитов)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если Инициализация 
		Или СтруктураРеквизитов.Свойство("РучнойВводПродукции") Тогда
		Если Форма.ИсключитьПродукциюТретьегоУровня Тогда
			Если ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
				Элементы.РучнойВводПродукции.Доступность = Ложь;
				Элементы.РучнойВводПродукции.Видимость = Объект.РучнойВводПродукции;
			Иначе
				Элементы.РучнойВводПродукции.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ХозяйствующийСубъект")
		Или СтруктураРеквизитов.Свойство("Предприятие")
		Или Инициализация Тогда
		
		ИнформацияГрузоотправителя = ИнтеграцияВЕТИСВызовСервера.ПредставленияСопоставлений(Объект.ХозяйствующийСубъект, Объект.Предприятие);
		
		Форма.ПредставлениеСопоставленияХозяйствующегоСубъекта = ИнформацияГрузоотправителя.КонтрагентХозяйствующегоСубъекта.Представление;
		Форма.ПредставлениеСопоставленияПредприятия = ИнформацияГрузоотправителя.ТорговыйОбъект.Представление;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("СпособОбъединения")
		Или СтруктураРеквизитов.Свойство("РучнойВводПродукции")
		Или Инициализация Тогда
		
		ЭлементДоступен = (Объект.СпособОбъединения = ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Присоединить"));
		Элементы.ЗаписьСкладскогоЖурнала.Видимость = ЭлементДоступен;
		
		//
		ЭлементДоступен = 
			Объект.СпособОбъединения = ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить");
		
		Если Не Форма.ИсключитьПродукциюТретьегоУровня Тогда
			Элементы.РучнойВводПродукции.Видимость = ЭлементДоступен;
		КонецЕсли;
		
		Элементы.ЕдиницаИзмерения.Видимость = ЭлементДоступен;
		
		//
		ЭлементДоступен = 
			Объект.РучнойВводПродукции 
			И Объект.СпособОбъединения = ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить");
		
		Элементы.ВидПродукции.Видимость = ЭлементДоступен;
		Элементы.НаименованиеПродукции.Видимость = ЭлементДоступен;
		Элементы.GTIN.Видимость = ЭлементДоступен;
		Элементы.Артикул.Видимость = ЭлементДоступен;
		Элементы.ФасовкаКоличествоУпаковок.Видимость = ЭлементДоступен;
		Элементы.ДекорацияФасовка.Видимость = ЭлементДоступен;
		Элементы.ФасовкаУпаковка.Видимость = ЭлементДоступен;
		Элементы.ФасовкаКоличествоЕдиницВУпаковке.Видимость = ЭлементДоступен;
		Элементы.ФасовкаЕдиницаИзмерения.Видимость = ЭлементДоступен;
		
		//
		ЭлементДоступен = 
			НЕ Объект.РучнойВводПродукции 
			И Объект.СпособОбъединения = ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить");
				
		Элементы.Продукция.Видимость = ЭлементДоступен;
				
	КонецЕсли;

	Если СтруктураРеквизитов.Свойство("СтатусВЕТИС")
		Или Инициализация Тогда
		
		ЭлементДоступен = 
			(Форма.СтатусВЕТИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиОбъединенийЗаписейСкладскогоЖурналаВЕТИС.Выполнен")
				ИЛИ Форма.СтатусВЕТИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиОбъединенийЗаписейСкладскогоЖурналаВЕТИС.ВыполненЧерезWeb"))
			И Объект.СпособОбъединения = ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить");
			
		Элементы.ЗаписьСкладскогоЖурнала_Объединение.Видимость = ЭлементДоступен;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ТребуетсяВызовСервераПриИзмененииРеквизитов(СписокРеквизитов)

	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("ЗаписьСкладскогоЖурнала") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораВидаПродукции(УстановитьНовоеЗначение = Ложь)

	Если НЕ ЗначениеЗаполнено(Отбор_Продукция) Тогда
		Элементы.ВидПродукции.СписокВыбора.Очистить();
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПродукцияВЕТИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПродукцияВЕТИС КАК ПродукцияВЕТИС
	|ГДЕ
	|	ПродукцияВЕТИС.Родитель = &Продукция
	|	И НЕ ПродукцияВЕТИС.ПометкаУдаления
	|	И ПродукцияВЕТИС.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПродукцияВЕТИС.Наименование";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Продукция", Отбор_Продукция);
	
	Элементы.ВидПродукции.СписокВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));

	Если УстановитьНовоеЗначение
		И НЕ ЗначениеЗаполнено(Объект.ВидПродукции)
		ИЛИ Элементы.ВидПродукции.СписокВыбора.НайтиПоЗначению(Объект.ВидПродукции) = Неопределено Тогда
		
		Если Элементы.ВидПродукции.СписокВыбора.Количество() <> 0 Тогда
			Объект.ВидПродукции = Элементы.ВидПродукции.СписокВыбора[0].Значение;
		Иначе
			Объект.ВидПродукции = Неопределено;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры
 
&НаСервере
Процедура ОбновитьПредставленияНаФорме(Прочитать = Ложь)
	
	Если Прочитать Тогда
		Прочитать();
	Иначе
		ОбновитьСтатусВЕТИС();
		УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнениеИЗаписатьДокумент()
	
	Если ПроверитьЗаполнение() Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		РазблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПередатьДанные" Тогда
		
		ПараметрыПередачи = ИнтеграцияВЕТИСКлиентСервер.СтруктураПараметрыПередачи();
		ПараметрыПередачи.ДальнейшееДействие = ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ПередайтеДанные");
		
		ИнтеграцияВЕТИСКлиент.ПодготовитьКПередаче(ЭтотОбъект, ПараметрыПередачи);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПроверитьКорректностьДанных" Тогда
		
		ПараметрыПередачи = ИнтеграцияВЕТИСКлиентСервер.СтруктураПараметрыПередачи();
		ПараметрыПередачи.ДальнейшееДействие = ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ПроверьтеКорректностьДанных");
		
		ИнтеграцияВЕТИСКлиент.ПодготовитьКПередаче(ЭтотОбъект, ПараметрыПередачи);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьОперацию" Тогда
		
		ИнтеграцияВЕТИСКлиент.ОтменитьПоследнююОперацию(Объект.Ссылка);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьПередачу" Тогда
		
		ИнтеграцияВЕТИСКлиент.ОтменитьПередачу(Объект.Ссылка);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьПричинуОшибки" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Документ", Объект.Ссылка);
		ОткрытьФорму("Справочник.ВЕТИСПрисоединенныеФайлы.Форма.ФормаОшибки", ПараметрыОткрытияФормы, ЭтотОбъект);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПодтвердитьКорректностьДокументаСозданногоЧерезWeb" Тогда
		
		ИнтеграцияВЕТИСКлиент.ПодтвердитьКорректностьДокументаСозданногоЧерезWeb(Объект.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "НетДоступа") Тогда
		
		УточнениеГиперссылки = СтрЗаменить(НавигационнаяСсылкаФорматированнойСтроки,"НетДоступа","");
		ИнтеграцияВЕТИСКлиент.ПредупредитьОбОтсутствииДоступа(УточнениеГиперссылки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СохранитьЗначенияРеквизитов(Форма)

	НовыеЗначения = Новый Структура;
	НовыеЗначения.Вставить("ХозяйствующийСубъект", Форма.Объект.ХозяйствующийСубъект);
	НовыеЗначения.Вставить("Предприятие", Форма.Объект.Предприятие);
	НовыеЗначения.Вставить("ЗаписьСкладскогоЖурнала", Форма.Объект.ЗаписьСкладскогоЖурнала);
	
	Форма.СохраненныеЗначенияРеквизитов = Новый ФиксированнаяСтруктура(НовыеЗначения);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностьюЭлементовФормы(Форма)

	Элементы = Форма.Элементы;
	
	ОграничениеПоСтатусу = (Форма.СтатусВЕТИС <> ПредопределенноеЗначение("Перечисление.СтатусыОбработкиОбъединенийЗаписейСкладскогоЖурналаВЕТИС.Черновик")
		И Форма.СтатусВЕТИС <> ПредопределенноеЗначение("Перечисление.СтатусыОбработкиОбъединенийЗаписейСкладскогоЖурналаВЕТИС.ОшибкаПередачи")
		И Форма.СтатусВЕТИС <> ПредопределенноеЗначение("Перечисление.СтатусыОбработкиОбъединенийЗаписейСкладскогоЖурналаВЕТИС.ОтклоненВЕТИС"));
	
	ЗависимыеОтСтатуса = Новый Массив;
	ЗависимыеОтСтатуса.Добавить(Элементы.Номер.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.Дата.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ХозяйствующийСубъект.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.Предприятие.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ЗаписьСкладскогоЖурнала.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.СпособОбъединения.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.Ответственный.Имя);
	Если Не Форма.ИсключитьПродукциюТретьегоУровня Тогда
		ЗависимыеОтСтатуса.Добавить(Элементы.РучнойВводПродукции.Имя);
	КонецЕсли;
	ЗависимыеОтСтатуса.Добавить(Элементы.ВидПродукции.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.Продукция.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.НаименованиеПродукции.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ЕдиницаИзмерения.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.GTIN.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.Артикул.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ФасовкаКоличествоУпаковок.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ФасовкаУпаковка.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ФасовкаКоличествоЕдиницВУпаковке.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ФасовкаЕдиницаИзмерения.Имя);
	
	ЗависимыеОтСтатуса.Добавить(Элементы.ОбъединяемыеЗаписиСкладскогоЖурнала.Имя);
	ЗависимыеОтСтатуса.Добавить(Элементы.ОбъединяемыеЗаписиСкладскогоЖурналаОткрытьПодбор.Имя);
	
	ИнтеграцияВЕТИСКлиентСервер.УправлениеДоступностьюЭлементовФормы(Форма, ЗависимыеОтСтатуса, Не ОграничениеПоСтатусу);
	
	Форма.РедактированиеФормыНеДоступно = ОграничениеПоСтатусу;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтличаютсяКлючевыеРеквизитыЗаписейЖурнала(Знач ЗаписьЖурнала1, Знач ЗаписьЖурнала2)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	1
	|ИЗ
	|	Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписьИсточник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписьПолучатель
	|		ПО (ЗаписьПолучатель.Ссылка = &ЗаписьЖурнала2)
	|ГДЕ
	|	ЗаписьИсточник.Ссылка = &ЗаписьЖурнала1
	|	И (ЕСТЬNULL(ЗаписьИсточник.Продукция.Продукция, НЕОПРЕДЕЛЕНО) <> ЕСТЬNULL(ЗаписьПолучатель.Продукция.Продукция, НЕОПРЕДЕЛЕНО)
	|			ИЛИ ЗаписьИсточник.СтранаПроизводства <> ЗаписьПолучатель.СтранаПроизводства
	|			ИЛИ ЗаписьИсточник.НизкокачественнаяПродукция <> ЗаписьПолучатель.НизкокачественнаяПродукция
	|			ИЛИ ЗаписьИсточник.СкоропортящаясяПродукция <> ЗаписьПолучатель.СкоропортящаясяПродукция)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЗаписьЖурнала1", ЗаписьЖурнала1);
	Запрос.УстановитьПараметр("ЗаписьЖурнала2", ЗаписьЖурнала2);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции

&НаСервере
Процедура СпособОбъединенияПриИзмененииНаСервере()

	Если НЕ ЗначениеЗаполнено(Объект.СпособОбъединения) Тогда
		Объект.СпособОбъединения = ПредопределенноеЗначение("Перечисление.СпособыОбъединенияЗаписейСкладскогоЖурналаВЕТИС.Объединить");
	КонецЕсли;
	
	ПриИзмененииЗаписиЖурналаИлиСпособаОбъединения();
	
	НастроитьЗависимыеЭлементыФормыНаСервере("СпособОбъединения, ЗаписьСкладскогоЖурнала");

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступностьЭлементаПредприятиеКлиент()
	
	Элементы.Предприятие.Доступность = ЗначениеЗаполнено(Объект.ХозяйствующийСубъект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
