#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 22, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
		+ ТекстЗапросаСоставДокумента(НомераТаблиц)
		+ ТекстЗапросаПоФормированиюРегламентнойОперации(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	Реквизиты = ПараметрыПроведения.ТаблицаРеквизиты[0];
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, Ссылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Реквизиты.УпрощенныйУчетНДС = УчетнаяПолитика.УпрощенныйУчетНДС(Реквизиты.Организация, Реквизиты.Период);
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВосстановлениеНДС.Дата КАК Период,
	|	ВосстановлениеНДС.Организация КАК Организация,
	|	ВосстановлениеНДС.Ссылка КАК Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК УпрощенныйУчетНДС,
	|	ВосстановлениеНДС.СчетСписанияНДС,
	|	ВосстановлениеНДС.СубконтоСписанияНДС1,
	|	ВосстановлениеНДС.СубконтоСписанияНДС2,
	|	ВосстановлениеНДС.СубконтоСписанияНДС3,
	|	ВосстановлениеНДС.ПодразделениеСписания,
	|	ВосстановлениеНДС.ОтразитьВКнигеПродаж,
	|	ВосстановлениеНДС.СписатьВосстановленныйНДСНаЗатраты КАК СписатьНДС
	|ИЗ
	|	Документ.ВосстановлениеНДС КАК ВосстановлениеНДС
	|ГДЕ
	|	ВосстановлениеНДС.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСоставДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаСостав", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВосстановлениеНДССостав.Ссылка.Организация КАК Организация,
	|	ВосстановлениеНДССостав.Поставщик КАК Покупатель,
	|	ВосстановлениеНДССостав.СчетФактура КАК СчетФактура,
	|	ВосстановлениеНДССостав.ВидЦенности КАК ВидЦенности,
	|	ВосстановлениеНДССостав.СтавкаНДС КАК СтавкаНДС,
	|	ВосстановлениеНДССостав.ДатаОплаты КАК ДатаОплаты,
	|	ВосстановлениеНДССостав.ДокументОплаты КАК ДокументОплаты,
	|	ВосстановлениеНДССостав.НетДанныхОСчетеФактуре,
	|	ВосстановлениеНДССостав.Ссылка.Дата КАК ДатаСобытия,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НДСсписанНаРасходы) КАК Событие,
	|	ВосстановлениеНДССостав.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ВосстановлениеНДССостав.ЗаписьДополнительногоЛиста = ИСТИНА
	|			ТОГДА ВосстановлениеНДССостав.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ВосстановлениеНДССостав.СчетФактура.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).УчетАгентскогоНДС, ЛОЖЬ)
	|			ТОГДА ВЫРАЗИТЬ(ВосстановлениеНДССостав.СчетФактура.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ВосстановлениеНДССостав.НДС КАК НДС,
	|	ВосстановлениеНДССостав.СуммаБезНДС КАК СуммаБезНДС,
	|	ВосстановлениеНДССостав.Ссылка.Дата КАК Период,
	|	ВосстановлениеНДССостав.Ссылка КАК Регистратор,
	|	ВосстановлениеНДССостав.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ВосстановлениеНДССостав.Поставщик КАК Поставщик,
	|	ВосстановлениеНДССостав.ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА ВосстановлениеНДССостав.Ссылка.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""21""
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВосстановлениеНДССостав.НомерДокументаОплаты,
	|	ВосстановлениеНДССостав.ДатаДокументаОплаты,
	|	ЛОЖЬ КАК СписатьНДСИзРегистра
	|ИЗ
	|	Документ.ВосстановлениеНДС.Состав КАК ВосстановлениеНДССостав
	|ГДЕ
	|	ВосстановлениеНДССостав.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВосстановлениеНДССостав.НомерСтроки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"ВЫРАЗИТЬ(ВосстановлениеНДССостав.СчетФактура.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).УчетАгентскогоНДС",
		БухгалтерскийУчетПереопределяемый.ТекстЗапросаУчетАгентскогоНДС("ВосстановлениеНДССостав.СчетФактура.ДоговорКонтрагента"));
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПоФормированиюРегламентнойОперации(НомераТаблиц)

	НомераТаблиц.Вставить("ДанныеРегламентнойОперации", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	НАЧАЛОПЕРИОДА(Реквизиты.Дата, КВАРТАЛ) КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ВосстановлениеНДС) КАК РегламентнаяОперация
	|ИЗ
	|	Документ.ВосстановлениеНДС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДГОТОВКИ ДАННЫХ

// Процедура заполнения табличной части по данным подсистемы НДС
//
Процедура ПодготовитьДанныеДляЗаполнения(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура;
	
	ТаблицаВосстановления = СтруктураПараметров.ТаблицаВосстановления;
	
	Дерево_НДСДляВосстановления = ЗаполнитьПоДаннымОперативныхРегистровНДС(СтруктураПараметров);
	Если Дерево_НДСДляВосстановления.Строки.Количество() = 0 Тогда
		// Не обнаружен НДС к восстановлению.
		ДанныеДляЗаполнения.Вставить("ТаблицаВосстановленияНДСПоРеализации", Неопределено);
	Иначе
		
		СписокСчетовФактур = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(
		Дерево_НДСДляВосстановления.Строки.ВыгрузитьКолонку("СчетФактура"), Истина);
		
		ЗаписиКнигиПокупок = ПолучитьЗаписиКнигиПокупокПоСпискуСФ(СписокСчетовФактур, СтруктураПараметров);
		
		ОпределитьДатуОплатыПоЗаписямКнигиПокупок(Дерево_НДСДляВосстановления, ТаблицаВосстановления,
		СписокСчетовФактур, ЗаписиКнигиПокупок, СтруктураПараметров);
		
		ДанныеДляЗаполнения.Вставить("ТаблицаВосстановленияНДСПоРеализации", ТаблицаВосстановления);
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

Функция ЗаполнитьПоДаннымОперативныхРегистровНДС(Объект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.Организация КАК Организация,
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДСОстаток,
	|	НДСПредъявленныйОстатки.НДСОстаток КАК НДСОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиНДСКВычету
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(&КонецПериода, Организация = &Организация) КАК НДСПредъявленныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.Организация,
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС,
	|	-НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
	|	-НДСПредъявленныйРеализация0Остатки.НДСОстаток
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(&КонецПериода, Организация = &Организация) КАК НДСПредъявленныйРеализация0Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНДСКВычету.Организация,
	|	ОстаткиНДСКВычету.СчетФактура КАК СчетФактура,
	|	ОстаткиНДСКВычету.ВидЦенности,
	|	ОстаткиНДСКВычету.СтавкаНДС,
	|	ОстаткиНДСКВычету.СчетУчетаНДС,
	|	СУММА(-ОстаткиНДСКВычету.СуммаБезНДСОстаток) КАК СуммаБезНДС,
	|	СУММА(-ОстаткиНДСКВычету.НДСОстаток) КАК НДС,
	|	СУММА(-ОстаткиНДСКВычету.СуммаБезНДСОстаток - ОстаткиНДСКВычету.НДСОстаток) КАК СуммаСНДС_КВычету,
	|	ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора КАК СчетФактураДата
	|ИЗ
	|	ВТ_ОстаткиНДСКВычету КАК ОстаткиНДСКВычету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактура
	|		ПО ОстаткиНДСКВычету.СчетФактура = ДанныеПервичныхДокументовСчетФактура.Документ
	|			И (ДанныеПервичныхДокументовСчетФактура.Организация = &Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНДСКВычету.СтавкаНДС,
	|	ОстаткиНДСКВычету.СчетУчетаНДС,
	|	ОстаткиНДСКВычету.СчетФактура,
	|	ОстаткиНДСКВычету.ВидЦенности,
	|	ОстаткиНДСКВычету.Организация,
	|	ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОстаткиНДСКВычету.СуммаБезНДСОстаток) + СУММА(ОстаткиНДСКВычету.НДСОстаток) < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураДата
	|ИТОГИ
	|	СУММА(СуммаБезНДС),
	|	СУММА(НДС),
	|	СУММА(СуммаСНДС_КВычету)
	|ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("КонецПериода", Новый	Граница(КонецДня(Объект.Дата), ВидГраницы.Включая));
	
	ДеревоРезультата = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Определение поставщика
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"		, Объект.Организация);
	Запрос.УстановитьПараметр("СчетаФактуры"	, ДеревоРезультата.Строки.ВыгрузитьКолонку("СчетФактура"));
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Поставщик <> &ПустойКонтрагент
	|	И НДСПредъявленный.СчетФактура В(&СчетаФактуры)
	|	И НДСПредъявленный.Организация = &Организация";
	
	КонтрагентПоСчетуФактуре = Запрос.Выполнить().Выгрузить();
	КонтрагентПоСчетуФактуре.Индексы.Добавить("СчетФактура");
	
	ДеревоРезультата.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	
	Для Каждого СтрокаОбрабатываемая  Из ДеревоРезультата.Строки Цикл
		СтрокаКонтрагента = КонтрагентПоСчетуФактуре.Найти(СтрокаОбрабатываемая.СчетФактура,"СчетФактура");
		Если СтрокаКонтрагента <> Неопределено Тогда
			СтрокаОбрабатываемая.Поставщик = СтрокаКонтрагента.Поставщик;
			Для Каждого СтрокаРасшифровки Из СтрокаОбрабатываемая.Строки Цикл
				СтрокаРасшифровки.Поставщик = СтрокаОбрабатываемая.Поставщик;
			КонецЦикла; 
		ИначеЕсли ОбщегоНазначенияБП.ЕстьРеквизитДокумента("Контрагент", СтрокаОбрабатываемая.СчетФактура.Метаданные()) Тогда
			СтрокаОбрабатываемая.Поставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				СтрокаОбрабатываемая.СчетФактура, "Контрагент");
			Для Каждого СтрокаРасшифровки Из СтрокаОбрабатываемая.Строки Цикл
				СтрокаРасшифровки.Поставщик = СтрокаОбрабатываемая.Поставщик;
			КонецЦикла; 
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ДеревоРезультата;
	
КонецФункции

// Процедура вызывается из ЗаполнитьСтрокиДокумента.
// По списку счетов-фактур определяет суммы не использованных ранее распределенных оплат.
Функция ПолучитьЗаписиКнигиПокупокПоСпискуСФ(СписокСчетовФактур, Объект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик КАК Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупокОбороты.ДокументОплаты КАК ДокументОплаты,
	|	СУММА(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот) КАК СуммаБезНДС,
	|	СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот) КАК НДС
	|ПОМЕСТИТЬ ВТ_НДСЗаписиКнигиПокупокОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В (&СписокСчетовФактур)) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.ДокументОплаты,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.ДатаОплаты,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик КАК Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупокОбороты.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДС КАК НДС
	|ИЗ
	|	ВТ_НДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупокОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактура
	|		ПО НДСЗаписиКнигиПокупокОбороты.СчетФактура = ДанныеПервичныхДокументовСчетФактура.Документ
	|			И (ДанныеПервичныхДокументовСчетФактура.Организация = &Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовДокументОплаты
	|		ПО НДСЗаписиКнигиПокупокОбороты.ДокументОплаты = ДанныеПервичныхДокументовДокументОплаты.Документ
	|			И (ДанныеПервичныхДокументовДокументОплаты.Организация = &Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора,
	|	ДатаОплаты,
	|	ДанныеПервичныхДокументовДокументОплаты.ДатаРегистратора
	|ИТОГИ
	|	СУММА(СуммаБезНДС),
	|	СУММА(НДС)
	|ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("КонецПериода", 		Новый Граница(КонецДня(Объект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", 		Объект.Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	
	ЗаписиКнигиПокупок = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат ЗаписиКнигиПокупок;	
	
КонецФункции

Процедура ОпределитьДатуОплатыПоЗаписямКнигиПокупок(Дерево_НДСДляВосстановления, ТаблицаРезультатов, 
		СписокСчетовФактур, ЗаписиКнигиПокупок, Объект)
	
	Для Каждого СтрокаСФ Из Дерево_НДСДляВосстановления.Строки Цикл
		НаборЗаписейКнигиПокупокПоСФ = ЗаписиКнигиПокупок.Строки.Найти(СтрокаСФ.СчетФактура,"СчетФактура");
		
		Если НаборЗаписейКнигиПокупокПоСФ = Неопределено Тогда
			// Сокращенный вариант - записи книги не обнаружены, отражаем по текущим данным,
			// без указания документа и даты оплаты.
			Для Каждого ЗаписьПОСФ Из СтрокаСФ.Строки Цикл
				СтрокаРезультата = ТаблицаРезультатов.Добавить();
				СтрокаРезультата.СчетФактура	= ЗаписьПОСФ.СчетФактура;
				СтрокаРезультата.Поставщик		= ЗаписьПОСФ.Поставщик;
				СтрокаРезультата.ВидЦенности	= ЗаписьПОСФ.ВидЦенности;
				СтрокаРезультата.СчетУчетаНДС	= ЗаписьПОСФ.СчетУчетаНДС;
				СтрокаРезультата.СтавкаНДС		= ЗаписьПОСФ.СтавкаНДС;
				
				СтрокаРезультата.СуммаБезНДС	= ЗаписьПОСФ.СуммаБезНДС;
				СтрокаРезультата.НДС			= ЗаписьПОСФ.НДС;
				Если НЕ Объект.ОтразитьВКнигеПродаж Тогда
					СтрокаРезультата.ЗаписьДополнительногоЛиста = Истина;
						СтрокаРезультата.КорректируемыйПериод = ЗаписьПОСФ.СчетФактураДата;
				КонецЕсли;
			КонецЦикла; 
			
			Продолжить;
		КонецЕсли;
		
		Для Каждого ЗаписьПОСФ Из СтрокаСФ.Строки Цикл
			Отбор = Новый Структура("Поставщик, ВидЦенности, СчетУчетаНДС, СтавкаНДС", ЗаписьПОСФ.Поставщик,
			ЗаписьПОСФ.ВидЦенности, ЗаписьПОСФ.СчетУчетаНДС, ЗаписьПОСФ.СтавкаНДС);
			
			ЗаписиКнигиПоОтбору = НаборЗаписейКнигиПокупокПоСФ.Строки.НайтиСтроки(Отбор);
			
			Для Каждого СторнируемаяЗаписьКнигиПокупок Из ЗаписиКнигиПоОтбору Цикл
				КВосстановлению_БезНДС = макс(0, мин(ЗаписьПОСФ.СуммаБезНДС, СторнируемаяЗаписьКнигиПокупок.СуммаБезНДС));
				КВосстановлению_НДС = макс(0, мин(ЗаписьПОСФ.НДС, СторнируемаяЗаписьКнигиПокупок.НДС));
				Если КВосстановлению_БезНДС = 0 И КВосстановлению_НДС = 0 Тогда
					Продолжить;
				КонецЕсли; 
				
				СтрокаРезультата = ТаблицаРезультатов.Добавить();
				СтрокаРезультата.СчетФактура	= ЗаписьПОСФ.СчетФактура;
				СтрокаРезультата.Поставщик		= ЗаписьПОСФ.Поставщик;
				СтрокаРезультата.ВидЦенности	= ЗаписьПОСФ.ВидЦенности;
				СтрокаРезультата.СчетУчетаНДС	= ЗаписьПОСФ.СчетУчетаНДС;
				СтрокаРезультата.СтавкаНДС		= ЗаписьПОСФ.СтавкаНДС;
				
				СтрокаРезультата.СуммаБезНДС	= КВосстановлению_БезНДС;
				СтрокаРезультата.НДС			= КВосстановлению_НДС;
				
				СтрокаРезультата.ДатаОплаты		= СторнируемаяЗаписьКнигиПокупок.ДатаОплаты;
				СтрокаРезультата.ДокументОплаты	= СторнируемаяЗаписьКнигиПокупок.ДокументОплаты;
				Если НЕ Объект.ОтразитьВКнигеПродаж Тогда
					СтрокаРезультата.ЗаписьДополнительногоЛиста = Истина;
					СтрокаРезультата.КорректируемыйПериод = ЗаписьПОСФ.СчетФактураДата;
					Если КонецКвартала(СтрокаРезультата.КорректируемыйПериод) = КонецКвартала(Объект.Дата) Тогда
						СтрокаРезультата.ЗаписьДополнительногоЛиста = Ложь;
						СтрокаРезультата.КорректируемыйПериод = '00010101';
					КонецЕсли;
				КонецЕсли;
				
				ЗаписьПОСФ.СуммаБезНДС						= ЗаписьПОСФ.СуммаБезНДС - КВосстановлению_БезНДС;
				ЗаписьПОСФ.НДС								= ЗаписьПОСФ.НДС - КВосстановлению_НДС;
				
				СторнируемаяЗаписьКнигиПокупок.СуммаБезНДС	= СторнируемаяЗаписьКнигиПокупок.СуммаБезНДС - КВосстановлению_БезНДС;
				СторнируемаяЗаписьКнигиПокупок.НДС 			= СторнируемаяЗаписьКнигиПокупок.НДС - КВосстановлению_НДС;
				
			КонецЦикла; 
			
			Если ЗаписьПОСФ.СуммаБезНДС > 0 ИЛИ ЗаписьПОСФ.НДС > 0 Тогда
				
				СтрокаРезультата = ТаблицаРезультатов.Добавить();
				СтрокаРезультата.СчетФактура	= ЗаписьПОСФ.СчетФактура;
				СтрокаРезультата.Поставщик		= ЗаписьПОСФ.Поставщик;
				СтрокаРезультата.ВидЦенности	= ЗаписьПОСФ.ВидЦенности;
				СтрокаРезультата.СчетУчетаНДС	= ЗаписьПОСФ.СчетУчетаНДС;
				СтрокаРезультата.СтавкаНДС		= ЗаписьПОСФ.СтавкаНДС;
				СтрокаРезультата.ЗаписьДополнительногоЛиста = Истина;
				СтрокаРезультата.КорректируемыйПериод = ЗаписьПОСФ.СчетФактураДата;
				
				СтрокаРезультата.СуммаБезНДС	= ЗаписьПОСФ.СуммаБезНДС;
				СтрокаРезультата.НДС			= ЗаписьПОСФ.НДС;
				
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедуры и функции заполнения табличной части по остаткам ценностей для перехода на УСН

Процедура ПодготовитьДанныеДляЗаполненияНДСПоОстаткам(СтруктураПараметров, АдресХранилища) Экспорт

	// формирование таблицы данных по восстановлению НДС вынесено в отдельную экспортную функцию,
	// для использования в механизме "Длительные операции" при заполнении документа "извне"
	
	ДанныеДляЗаполнения = Новый Структура("ТаблицаВосстановленияНДСПоОстаткам",
		ДанныеДляВосстановленияНДСПоОстаткам(СтруктураПараметров));
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

Функция ДанныеДляВосстановленияНДСПоОстаткам(Параметры) Экспорт
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("РаздельныйУчетНДС",
		УчетнаяПолитика.РаздельныйУчетНДС(Параметры.Организация, Параметры.Дата));
	Реквизиты.Вставить("РаздельныйУчетНДСНаСчете19",
		УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Параметры.Организация, Параметры.Дата));
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",         Параметры.Организация);
	Запрос.УстановитьПараметр("ДатаКон",             Новый Граница(КонецМесяца(Параметры.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетУчетаМатериалов", ПланыСчетов.Хозрасчетный.Материалы);
	Запрос.УстановитьПараметр("СчетУчетаРБП",        ПланыСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов);
	
	СтавкаНДСПоУмолчанию = УчетНДСКлиентСервер.СтавкаНДСПоУмолчанию(Параметры.Дата);
	Запрос.УстановитьПараметр("СтавкаНДСПоУмолчанию", СтавкаНДСПоУмолчанию);
	Запрос.УстановитьПараметр("ЗначениеСтавкиНДС", УчетНДСПереопределяемый.ПолучитьСтавкуНДС(СтавкаНДСПоУмолчанию));
	
	СчетаУчетаОС = Новый Массив;
	СчетаУчетаОС.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации);
	СчетаУчетаОС.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
	СчетаУчетаОС.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_01);
	СчетаУчетаОС.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_03);
	Запрос.УстановитьПараметр("СчетаУчетаОС", СчетаУчетаОС);
	Запрос.УстановитьПараметр("СубконтоОсновныеСредства",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	СчетаУчетаНМА = Новый Массив;
	СчетаУчетаНМА.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	СчетаУчетаНМА.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("СчетаУчетаНМА", СчетаУчетаНМА);
	Запрос.УстановитьПараметр("СубконтоНематериальныеАктивы",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	СчетаУчетаТоваров = Новый Массив;
	СчетаУчетаТоваров.Добавить(ПланыСчетов.Хозрасчетный.Товары);
	СчетаУчетаТоваров.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценка);
	СчетаУчетаТоваров.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные);
	Запрос.УстановитьПараметр("СчетаУчетаТоваров", СчетаУчетаТоваров);
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(ТекстЗапросаОтборСчетов(Реквизиты));
	ТекстыЗапроса.Добавить(ТекстЗапросаОСиНМА(Реквизиты));
	ТекстыЗапроса.Добавить(ТекстЗапросаРБП(Реквизиты));
	ТекстыЗапроса.Добавить(ТекстЗапросаТоварыМатериалы(Реквизиты));
	ТекстыЗапроса.Добавить(ТекстЗапросаДанныеДляВосстановленияНДС(Реквизиты));
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ТекстЗапросаОтборСчетов(Реквизиты)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаОС
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаУчетаОС)
	|	И НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаНМА
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаУчетаНМА)
	|	И НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаТоваров
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаУчетаТоваров)
	|	И НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаМатериалов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетУчетаМатериалов)
	|	И НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОСиНМА(Реквизиты)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма
	|ПОМЕСТИТЬ ОстаточнаяСтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаКон,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчетаОС.Счет
	|				ИЗ
	|					ВТ_СчетаУчетаОС),
	|			&СубконтоОсновныеСредства,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма
	|ПОМЕСТИТЬ ОстаточнаяСтоимостьНМА
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаКон,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчетаНМА.Счет
	|				ИЗ
	|					ВТ_СчетаУчетаНМА),
	|			&СубконтоНематериальныеАктивы,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС) КАК ВидЦенности,
	|	ИСТИНА КАК НетДанныхОСчетеФактуре,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактуры,
	|	&СтавкаНДСПоУмолчанию КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСприПриобретенииОсновныхСредств) КАК СчетУчетаНДС,
	|	ОстаточнаяСтоимостьОС.Сумма КАК СуммаБезНДС,
	|	ОстаточнаяСтоимостьОС.Сумма * &ЗначениеСтавкиНДС / 100 КАК СуммаНДС
	|ПОМЕСТИТЬ ДанныеПоОСиНМА
	|ИЗ
	|	ОстаточнаяСтоимостьОС КАК ОстаточнаяСтоимостьОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА),
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	&СтавкаНДСПоУмолчанию,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымНематериальнымАктивам),
	|	ОстаточнаяСтоимостьНМА.Сумма,
	|	ОстаточнаяСтоимостьНМА.Сумма * &ЗначениеСтавкиНДС / 100
	|ИЗ
	|	ОстаточнаяСтоимостьНМА КАК ОстаточнаяСтоимостьНМА"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРБП(Реквизиты)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	ИСТИНА КАК НетДанныхОСчетеФактуре,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактуры,
	|	&СтавкаНДСПоУмолчанию КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам) КАК СчетУчетаНДС,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаБезНДС,
	|	ХозрасчетныйОстатки.СуммаОстатокДт * &ЗначениеСтавкиНДС / 100 КАК СуммаНДС
	|ПОМЕСТИТЬ ДанныеПоРБП
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКон, Счет = &СчетУчетаРБП, , Организация = &Организация) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокДт > 0"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыМатериалы(Реквизиты)
	
	Если Реквизиты.РаздельныйУчетНДС И Реквизиты.РаздельныйУчетНДСНаСчете19 Тогда
		
		Возврат ТекстЗапросаТоварыИМатериалыУчетНДСПоСпособамУчета();
		
	ИначеЕсли Реквизиты.РаздельныйУчетНДС Тогда
		
		Возврат ТекстЗапросаТоварыИМатериалыПартионныйУчетНДС();
		
	Иначе
		
		Возврат ТекстЗапросаТоварыИМатериалыБухгалтерскийУчет();
		
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаТоварыИМатериалыУчетНДСПоСпособамУчета()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_СчетаУчетаТоваров.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаЦенностей
	|ИЗ
	|	ВТ_СчетаУчетаТоваров КАК ВТ_СчетаУчетаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СчетаУчетаМатериалов.Счет
	|ИЗ
	|	ВТ_СчетаУчетаМатериалов КАК ВТ_СчетаУчетаМатериалов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаЗатрат.КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаЗатрат
	|ИЗ
	|	РегистрСведений.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат
	|ГДЕ
	|	АналитикаУчетаЗатрат.СчетЗатрат В
	|			(ВЫБРАТЬ
	|				ВТ_СчетаУчетаЦенностей.Счет
	|			ИЗ
	|				ВТ_СчетаУчетаЦенностей)
	|	И АналитикаУчетаЗатрат.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РСАналитикаУчетаНДС.ВидЦенности,
	|	РСАналитикаУчетаНДС.СчетФактура,
	|	РСАналитикаУчетаНДС.СтавкаНДС,
	|	РСАналитикаУчетаНДС.СчетУчетаНДС,
	|	НДСРаздельныйУчетОстатки.СпособУчетаНДС,
	|	НДСРаздельныйУчетОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСРаздельныйУчетОстатки.НДСОстаток КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ОстаткиРаздельныйУчетНДС
	|ИЗ
	|	РегистрНакопления.НДСРаздельныйУчет.Остатки(
	|			&ДатаКон,
	|			Организация = &Организация
	|				И АналитикаУчетаЗатрат В
	|					(ВЫБРАТЬ
	|						ВТ_АналитикаУчетаЗатрат.КлючАналитики
	|					ИЗ
	|						ВТ_АналитикаУчетаЗатрат)
	|				И СпособУчетаНДС В (ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету), ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен))) КАК НДСРаздельныйУчетОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНДС КАК РСАналитикаУчетаНДС
	|		ПО НДСРаздельныйУчетОстатки.АналитикаУчетаНДС = РСАналитикаУчетаНДС.КлючАналитики
	|ГДЕ
	|	НДСРаздельныйУчетОстатки.НДСОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиРаздельныйУчетНДС.ВидЦенности,
	|	ЛОЖЬ КАК НетДанныхОСчетеФактуре,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.ВозвратТоваровОтПокупателя)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.ГТДИмпорт)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.ГТДИмпорт).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.КорректировкаПоступления)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.КорректировкаПоступления).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.ДокументРасчетовСКонтрагентом)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.ДокументРасчетовСКонтрагентом).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.ПоступлениеНМА)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.ПоступлениеНМА).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.ПоступлениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.ПоступлениеТоваровУслуг).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.СчетФактураПолученный)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.СчетФактураПолученный).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.ОтражениеНДСКВычету)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.ОтражениеНДСКВычету).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура) = ТИП(Документ.ПоступлениеДопРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура КАК Документ.ПоступлениеДопРасходов).Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Поставщик,
	|	ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСчетаФактуры,
	|	ВТ_ОстаткиРаздельныйУчетНДС.СтавкаНДС,
	|	ВТ_ОстаткиРаздельныйУчетНДС.СчетУчетаНДС,
	|	ВТ_ОстаткиРаздельныйУчетНДС.СпособУчетаНДС,
	|	ВТ_ОстаткиРаздельныйУчетНДС.СуммаБезНДС,
	|	ВТ_ОстаткиРаздельныйУчетНДС.СуммаНДС
	|ПОМЕСТИТЬ ВТ_ДанныеРаздельногоУчета
	|ИЗ
	|	ВТ_ОстаткиРаздельныйУчетНДС КАК ВТ_ОстаткиРаздельныйУчетНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Организация = &Организация)
	|			И ВТ_ОстаткиРаздельныйУчетНДС.СчетФактура = ДанныеПервичныхДокументов.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ВТ_ДанныеРаздельногоУчета.ДатаСчетаФактуры, КВАРТАЛ) КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыРаспределенияНДС
	|ИЗ
	|	ВТ_ДанныеРаздельногоУчета КАК ВТ_ДанныеРаздельногоУчета
	|ГДЕ
	|	ВТ_ДанныеРаздельногоУчета.СпособУчетаНДС = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БазаРаспределенияНДС.Период КАК Период,
	|	СУММА(БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаНДС0) КАК ВыручкаНДС,
	|	СУММА(БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаНДС0 + БазаРаспределенияНДС.ВыручкаБезНДС + БазаРаспределенияНДС.ВыручкаЕНВД) КАК ВыручкаВсего
	|ПОМЕСТИТЬ ВТ_БазаРаспределенияНДС
	|ИЗ
	|	РегистрСведений.БазаРаспределенияНДС КАК БазаРаспределенияНДС
	|ГДЕ
	|	БазаРаспределенияНДС.Организация = &Организация
	|	И БазаРаспределенияНДС.Период В
	|			(ВЫБРАТЬ
	|				ВТ_ПериодыРаспределенияНДС.Период
	|			ИЗ
	|				ВТ_ПериодыРаспределенияНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	БазаРаспределенияНДС.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеРаздельногоУчета.ВидЦенности,
	|	ВТ_ДанныеРаздельногоУчета.НетДанныхОСчетеФактуре,
	|	ВТ_ДанныеРаздельногоУчета.Поставщик,
	|	ВТ_ДанныеРаздельногоУчета.СчетФактура,
	|	ВТ_ДанныеРаздельногоУчета.ДатаСчетаФактуры,
	|	ВТ_ДанныеРаздельногоУчета.СтавкаНДС,
	|	ВТ_ДанныеРаздельногоУчета.СчетУчетаНДС,
	|	ВТ_ДанныеРаздельногоУчета.СуммаБезНДС * ВЫБОР
	|		КОГДА ВТ_БазаРаспределенияНДС.ВыручкаВсего ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА ВТ_БазаРаспределенияНДС.ВыручкаВсего = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВТ_БазаРаспределенияНДС.ВыручкаНДС / ВТ_БазаРаспределенияНДС.ВыручкаВсего
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВТ_ДанныеРаздельногоУчета.СуммаНДС * ВЫБОР
	|		КОГДА ВТ_БазаРаспределенияНДС.ВыручкаВсего ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА ВТ_БазаРаспределенияНДС.ВыручкаВсего = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВТ_БазаРаспределенияНДС.ВыручкаНДС / ВТ_БазаРаспределенияНДС.ВыручкаВсего
	|	КОНЕЦ КАК СуммаНДС
	|ПОМЕСТИТЬ ДанныеПоТоварамИМатериалам
	|ИЗ
	|	ВТ_ДанныеРаздельногоУчета КАК ВТ_ДанныеРаздельногоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаРаспределенияНДС КАК ВТ_БазаРаспределенияНДС
	|		ПО (ВТ_ДанныеРаздельногоУчета.СпособУчетаНДС = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен))
	|			И (НАЧАЛОПЕРИОДА(ВТ_ДанныеРаздельногоУчета.ДатаСчетаФактуры, КВАРТАЛ) = ВТ_БазаРаспределенияНДС.Период)"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыИМатериалыПартионныйУчетНДС()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НДСПоПриобретеннымЦенностямОстатки.ВидЦенности,
	|	ЛОЖЬ КАК НетДанныхОСчетеФактуре,
	|	ВЫБОР
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.ГТДИмпорт).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.КорректировкаПоступления
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.КорректировкаПоступления).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.ДокументРасчетовСКонтрагентом
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.ДокументРасчетовСКонтрагентом).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.ПоступлениеНМА
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.ПоступлениеНМА).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.ПоступлениеТоваровУслуг).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.СчетФактураПолученный).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.ОтражениеНДСКВычету
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.ОтражениеНДСКВычету).Контрагент
	|		КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ССЫЛКА Документ.ПоступлениеДопРасходов
	|			ТОГДА ВЫРАЗИТЬ(НДСПоПриобретеннымЦенностямОстатки.СчетФактура КАК Документ.ПоступлениеДопРасходов).Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Поставщик,
	|	НДСПоПриобретеннымЦенностямОстатки.СчетФактура,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСчетаФактуры,
	|	НДСПоПриобретеннымЦенностямОстатки.СтавкаНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.СчетУчетаНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.СтоимостьОстаток - НДСПоПриобретеннымЦенностямОстатки.НДСОстаток КАК СуммаБезНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.НДСОстаток КАК СуммаНДС
	|ПОМЕСТИТЬ ДанныеПоТоварамИМатериалам
	|ИЗ
	|	РегистрНакопления.НДСПоПриобретеннымЦенностям.Остатки(
	|			&ДатаКон,
	|			ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Материалы))
	|				И НЕ НДСВключенВСтоимость
	|				И Организация = &Организация) КАК НДСПоПриобретеннымЦенностямОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Организация = &Организация)
	|			И НДСПоПриобретеннымЦенностямОстатки.СчетФактура = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	НДСПоПриобретеннымЦенностямОстатки.НДСОстаток > 0"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыИМатериалыБухгалтерскийУчет()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	ИСТИНА КАК НетДанныхОСчетеФактуре,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактуры,
	|	&СтавкаНДСПоУмолчанию КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ) КАК СчетУчетаНДС,
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаБезНДС,
	|	(ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт) * &ЗначениеСтавкиНДС / 100 КАК СуммаНДС
	|ПОМЕСТИТЬ ДанныеПоТоварамИМатериалам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаКон,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчетаТоваров.Счет
	|				ИЗ
	|					ВТ_СчетаУчетаТоваров),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Материалы),
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	&СтавкаНДСПоУмолчанию,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ),
	|	ХозрасчетныйОстатки.СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокДт * &ЗначениеСтавкиНДС / 100
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаКон,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчетаМатериалов.Счет
	|				ИЗ
	|					ВТ_СчетаУчетаМатериалов),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокДт > 0"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеДляВосстановленияНДС(Реквизиты)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидЦенности КАК ВидЦенности,
	|	ВложенныйЗапрос.НетДанныхОСчетеФактуре,
	|	ВложенныйЗапрос.СчетФактура КАК СчетФактура,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Поставщик,
	|	ВложенныйЗапрос.СчетУчетаНДС,
	|	СУММА(ВложенныйЗапрос.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВложенныйЗапрос.НДС) КАК НДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеПоОСиНМА.ВидЦенности КАК ВидЦенности,
	|		ДанныеПоОСиНМА.НетДанныхОСчетеФактуре КАК НетДанныхОСчетеФактуре,
	|		ДанныеПоОСиНМА.СчетФактура КАК СчетФактура,
	|		ДанныеПоОСиНМА.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|		ДанныеПоОСиНМА.СтавкаНДС КАК СтавкаНДС,
	|		ДанныеПоОСиНМА.Поставщик КАК Поставщик,
	|		ДанныеПоОСиНМА.СчетУчетаНДС КАК СчетУчетаНДС,
	|		ДанныеПоОСиНМА.СуммаБезНДС КАК СуммаБезНДС,
	|		ДанныеПоОСиНМА.СуммаНДС КАК НДС
	|	ИЗ
	|		ДанныеПоОСиНМА КАК ДанныеПоОСиНМА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеПоРБП.ВидЦенности,
	|		ДанныеПоРБП.НетДанныхОСчетеФактуре,
	|		ДанныеПоРБП.СчетФактура,
	|		ДанныеПоРБП.ДатаСчетаФактуры,
	|		ДанныеПоРБП.СтавкаНДС,
	|		ДанныеПоРБП.Поставщик,
	|		ДанныеПоРБП.СчетУчетаНДС,
	|		ДанныеПоРБП.СуммаБезНДС,
	|		ДанныеПоРБП.СуммаНДС
	|	ИЗ
	|		ДанныеПоРБП КАК ДанныеПоРБП
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеПоТоварамИМатериалам.ВидЦенности,
	|		ДанныеПоТоварамИМатериалам.НетДанныхОСчетеФактуре,
	|		ДанныеПоТоварамИМатериалам.СчетФактура,
	|		ДанныеПоТоварамИМатериалам.ДатаСчетаФактуры,
	|		ДанныеПоТоварамИМатериалам.СтавкаНДС,
	|		ДанныеПоТоварамИМатериалам.Поставщик,
	|		ДанныеПоТоварамИМатериалам.СчетУчетаНДС,
	|		ДанныеПоТоварамИМатериалам.СуммаБезНДС,
	|		ДанныеПоТоварамИМатериалам.СуммаНДС
	|	ИЗ
	|		ДанныеПоТоварамИМатериалам КАК ДанныеПоТоварамИМатериалам) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.СчетФактура,
	|	ВложенныйЗапрос.ВидЦенности,
	|	ВложенныйЗапрос.НетДанныхОСчетеФактуре,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.СчетУчетаНДС,
	|	ВложенныйЗапрос.Поставщик,
	|	ВложенныйЗапрос.ДатаСчетаФактуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидЦенности,
	|	ВложенныйЗапрос.ДатаСчетаФактуры,
	|	СчетФактура,
	|	СтавкаНДС"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Восстановление НДС
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВосстановлениеНДС";
	КомандаПечати.Представление = НСтр("ru = 'Восстановление НДС'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
КонецПроцедуры

Функция ПечатьВосстановлениеНДС(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВосстановлениеНДС.СчетФактура КАК СчетФактура,
	|	ВосстановлениеНДС.ДокументОплаты КАК ДокументОплаты,
	|	ВосстановлениеНДС.Поставщик КАК КонтрагентПоСчетуФактуре,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСАванса,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКонтрагента,
	|	ЛОЖЬ КАК НаАванс,
	|	ЛОЖЬ КАК ВозвратЧерезКомиссионера,
	|	ВосстановлениеНДС.Ссылка.Организация КАК Организация,
	|	ВосстановлениеНДС.СчетФактура КАК ДокументОснованиеСчетаФактуры
	|ПОМЕСТИТЬ ЗаписиКнигиПокупок
	|ИЗ
	|	Документ.ВосстановлениеНДС.Состав КАК ВосстановлениеНДС
	|ГДЕ
	|	ВосстановлениеНДС.Ссылка В(&МассивОбъектов)
	|	И НЕ ВосстановлениеНДС.НетДанныхОСчетеФактуре
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДокументОплаты,
	|	КонтрагентПоСчетуФактуре,
	|	ДоговорКонтрагента,
	|	НаАванс,
	|	СтавкаНДСАванса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПокупок.Организация КАК Организация
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок";
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Запрос.УстановитьПараметр("Организация",             Выгрузка.ВыгрузитьКолонку("Организация"));
	Запрос.УстановитьПараметр("КонецПериода",            '00010101');
	Запрос.УстановитьПараметр("ПравилаПостановления735", Истина);
	
	Запрос.Текст = Отчеты.КнигаПокупок.ТекстЗапросаРеквизитыСчетовФактурПостановление735()
	+ "ВЫБРАТЬ
	|	ВосстановлениеНДС.Ссылка КАК Ссылка,
	|	ВосстановлениеНДС.Ссылка КАК Регистратор,
	|	ВосстановлениеНДС.Ссылка.Номер,
	|	ВосстановлениеНДС.Ссылка.Дата,
	|	ВосстановлениеНДС.Ссылка.Организация,
	|	ВосстановлениеНДС.НомерСтроки,
	|	ВосстановлениеНДС.НетДанныхОСчетеФактуре,
	|	ВосстановлениеНДС.Поставщик,
	|	ВосстановлениеНДС.СчетФактура,
	|	ВосстановлениеНДС.СтавкаНДС,
	|	ВосстановлениеНДС.СуммаБезНДС,
	|	ВосстановлениеНДС.НДС,
	|	ВосстановлениеНДС.ВидЦенности,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры, """") КАК НомерСчетаФактуры
	|ИЗ
	|	Документ.ВосстановлениеНДС.Состав КАК ВосстановлениеНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО ВосстановлениеНДС.СчетФактура = ТаблицаСчетаФактурыДокументы.ДокументОснованиеСчетаФактуры
	|		И ВосстановлениеНДС.Поставщик = ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре
	|ГДЕ
	|	ВосстановлениеНДС.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВосстановлениеНДС.Ссылка.Дата,
	|	ВосстановлениеНДС.Ссылка,
	|	ВосстановлениеНДС.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";

	Шапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб           = Истина;
	ТабличныйДокумент.ОриентацияСтраницы    = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати   = "ПАРАМЕТРЫ_ПЕЧАТИ_ВосстановлениеНДС";

	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВосстановлениеНДС.ПФ_MXL_ВосстановлениеНДС");

		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");

		СведенияОбОрганизации 	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ОтветственныеЛица 		= ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата);

		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, "Восстановление НДС");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ВсегоСумма 	= 0;
		ВсегоНДС 	= 0;
		
		ВыборкаСтрок = Шапка.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаСтрок.Следующий() Цикл
			
			ВсегоСумма 	= ВсегоСумма + ВыборкаСтрок.СуммаБезНДС;
			ВсегоНДС 	= ВсегоНДС + ВыборкаСтрок.НДС;
			
			ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
			
			Если ВыборкаСтрок.НетДанныхОСчетеФактуре Тогда
				ТекстСчетФактура = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, "Восстановление НДС");
			ИначеЕсли Не ЗначениеЗаполнено(ВыборкаСтрок.ДатаСчетаФактуры) Тогда
				ТекстСчетФактура = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(ВыборкаСтрок.СчетФактура);
			Иначе
				ТекстСчетФактура = "Счет-фактура № " + СокрЛП(ВыборкаСтрок.НомерСчетаФактуры)
					+ " от " + Формат(ВыборкаСтрок.ДатаСчетаФактуры, "ДФ='дд ММММ гггг'") + " г.";
			КонецЕсли;
			
			ОбластьМакетаСтрока.Параметры.СчетФактура = ТекстСчетФактура;
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
						
		КонецЦикла;
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.ВсегоСумма	 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ВсегоСумма);
		ОбластьМакета.Параметры.ВсегоНДС	 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ВсегоНДС);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ГлавныйБухгалтер      		= ОтветственныеЛица.ГлавныйБухгалтерПредставление;
		ОбластьМакета.Параметры.ДолжностьГлавногоБухгалтера = ОтветственныеЛица.ГлавныйБухгалтерДолжностьПредставление;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВосстановлениеНДС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВосстановлениеНДС", "Восстановление НДС",
			ПечатьВосстановлениеНДС(МассивОбъектов, ОбъектыПечати), , "Документ.ВосстановлениеНДС.ПФ_MXL_ВосстановлениеНДС");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

#КонецЕсли