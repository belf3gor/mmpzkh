
#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	УПЖКХ_ТиповыеМетодыСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОтборОрганизация = УПЖКХ_ТиповыеМетодыВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	ОбновитьИнформациюОбИспользованииГруппУслугДляОтраженияВРеглУчете();
	
	Если Не УПЖКХ_ПараметрыУчетаСервер.ИспользоватьНовыйМеханизмОтраженияНачисленийВРеглУчете(ТекущаяДата()) Тогда
		Элементы.Дата.Заголовок = "Дата";
		Элементы.СтатусОтражения.Видимость = Ложь;
		Элементы.ГруппаУслуг.Видимость     = Ложь;
		Элементы.ОбъектОтражения.Видимость = Ложь;
		Элементы.ИспользуетсяНовыйМеханизмОтраженияНачислений.Видимость = Ложь;
	КонецЕсли;
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаКоманднаяПанель);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьИнформациюОбИспользованииГруппУслугДляОтраженияНачислений" Тогда
		ОбновитьИнформациюОбИспользованииГруппУслугДляОтраженияВРеглУчете();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ОтборОрганизация".
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация",
																ОтборОрганизация, ЗначениеЗаполнено(ОтборОрганизация));
	
КонецПроцедуры

&НаСервереБезКонтекста
// Обработчик события "ПриПолученииДанныхНаСервере" динамического списка.
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	// Получаем документы отражения.
	МассивДокументовОтражения = Строки.ПолучитьКлючи();
	
	// Проверяем, есть ли в данных строк Статус отражения. Если нет - запрос не выполняем.
	// Для этого получаем первый ключ из массива документов отражения, по ключу находим строку с данными,
	// ищем в данных строки свойство "СтатусОтражения", если такового нет, значит колонка отключена
	// пользователем в свойствах формы.
	Если Строки.Количество() > 0 Тогда
		
		ДанныеСтроки = Строки[МассивДокументовОтражения.Получить(0)].Данные;
		
		Если ДанныеСтроки.Свойство("СтатусОтражения") Тогда
			ОбновитьДанныеОСтатусахОтражения(Строки, МассивДокументовОтражения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Обновляет в строках документов отражения статусы отражения по регистру данных для отражения в регл.учете.
//
Процедура ОбновитьДанныеОСтатусахОтражения(Строки, МассивДокументовОтражения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументовОтражения", МассивДокументовОтражения);
	
	// УЧЕСТЬ:
	// На данном этапе в запросе не учтено, что документ может быть не заполнен (ТЧ пустая).
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКВП_ОтражениеНачисленийВРеглУчете.Ссылка,
	|	ДокументКВП_ОтражениеНачисленийВРеглУчете.Ссылка.ИспользуетсяНовыйМеханизмОтраженияНачислений КАК ИспользуетсяНовыйМеханизм,
	|	ДокументКВП_ОтражениеНачисленийВРеглУчете.Ссылка.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ДокументКВП_ОтражениеНачисленийВРеглУчете.Ссылка.Дата, МЕСЯЦ) КАК МесяцОтражения,
	|	ДокументКВП_ОтражениеНачисленийВРеглУчете.Услуга
	|ПОМЕСТИТЬ ВрДокументыОтраженияСУслугами
	|ИЗ
	|	Документ.КВП_ОтражениеНачисленийВРеглУчете.НачисленияКОтражению КАК ДокументКВП_ОтражениеНачисленийВРеглУчете
	|ГДЕ
	|	ДокументКВП_ОтражениеНачисленийВРеглУчете.Ссылка В(&МассивДокументовОтражения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчетеОстатки.Организация,
	|	УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчетеОстатки.МесяцОтражения,
	|	УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчетеОстатки.Услуга,
	|	УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчетеОстатки.СуммаПриход,
	|	УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчетеОстатки.СуммаРасход,
	|	УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчетеОстатки.СуммаКонечныйОстаток
	|ПОМЕСТИТЬ ВрДанныеДляОтражения
	|ИЗ
	|	РегистрНакопления.УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчете.ОстаткиИОбороты(
	|			,
	|			,
	|			,
	|			,
	|			(Организация, МесяцОтражения, Услуга) В
	|				(ВЫБРАТЬ
	|					ВрДокументыОтраженияСУслугами.Организация,
	|					ВрДокументыОтраженияСУслугами.МесяцОтражения,
	|					ВрДокументыОтраженияСУслугами.Услуга
	|				ИЗ
	|					ВрДокументыОтраженияСУслугами КАК ВрДокументыОтраженияСУслугами)) КАК УПЖКХ_ДанныеДляОтраженияНачисленийВРеглУчетеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВрДокументыОтражения.Ссылка КАК Ссылка,
	|	ВрДокументыОтражения.ИспользуетсяНовыйМеханизм КАК ИспользуетсяНовыйМеханизм,
	|	ЕстьNULL(ВрДанныеДляОтражения.СуммаПриход, 0) КАК СуммаПриход,
	|	ЕстьNULL(ВрДанныеДляОтражения.СуммаРасход, 0) КАК СуммаРасход,
	|	ЕстьNULL(ВрДанныеДляОтражения.СуммаКонечныйОстаток, 0) КАК СуммаКонечныйОстаток
	|ИЗ
	|	ВрДокументыОтраженияСУслугами КАК ВрДокументыОтражения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВрДанныеДляОтражения КАК ВрДанныеДляОтражения
	|		ПО ВрДокументыОтражения.Организация = ВрДанныеДляОтражения.Организация
	|			И ВрДокументыОтражения.МесяцОтражения = ВрДанныеДляОтражения.МесяцОтражения
	|			И ВрДокументыОтражения.Услуга = ВрДанныеДляОтражения.Услуга
	|ИТОГИ
	|	МАКСИМУМ(ИспользуетсяНовыйМеханизм),
	|	СУММА(СуммаПриход),
	|	СУММА(СуммаРасход),
	|	СУММА(СуммаКонечныйОстаток)
	|ПО
	|	Ссылка";
	
	ВыборкаДокументов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокументов.Следующий() Цикл
		
		СтрокаДинамическогоСписка = Строки.Получить(ВыборкаДокументов.Ссылка);
		Если Не СтрокаДинамическогоСписка = Неопределено Тогда
			
			ДанныеСтатусаОтражения = ОпределитьСтатусПоДаннымОтражения(ВыборкаДокументов);
			СтрокаДинамическогоСписка.Данные["СтатусОтражения"] = ДанныеСтатусаОтражения;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ОбновитьДанныеОСтатусахОтражения()

&НаСервереБезКонтекста
// Обновляет в строках документов отражения статусы отражения по регистру данных для отражения в регл.учете.
//
Функция ОпределитьСтатусПоДаннымОтражения(ТекущийДокумент)
	
	// В статус записываем порядковый номер картинки из коллекции, 
	// заданной в свойстве "Картинка значений" для поля списка "Статус отражения".
	
	СтатусОтражения = 2; // Не отражено по умолчанию.
	
	Если ТекущийДокумент.ИспользуетсяНовыйМеханизм Тогда
		Если ТекущийДокумент.СуммаКонечныйОстаток = 0 Тогда
			Если ТекущийДокумент.СуммаПриход = 0 Тогда
				СтатусОтражения = 4 // Нет данных к отражению
			Иначе
				СтатусОтражения = 0 // Отражено полностью
			КонецЕсли;
		Иначе
			Если ТекущийДокумент.СуммаРасход = 0 Тогда
				СтатусОтражения = 2 // Не отражено
			Иначе 
				СтатусОтражения = 1 // Отражено частично
			КонецЕсли;
		КонецЕсли;
	Иначе
		
		// Для информации:
		// По сути по данной ветке механизм не сработает,
		// т.к. в регистре данных к отражению не будет записей при старом алгоритме.
		// Добавлено для полной картины определения всех статусов.
		
		СтатусОтражения = 0 // Для старого механизма всегда отражено полностью
	КонецЕсли;
	
	Возврат СтатусОтражения;
	
КонецФункции // ОпределитьСтатусПоДаннымОтражения()

#КонецОбласти

#Область ОбработчикиКомандФормы

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	УПЖКХ_ТиповыеМетодыСервер.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьИнформациюОбИспользованииГруппУслугДляОтраженияВРеглУчете()
	
	ИспользуютсяГруппыУслугДляОтражения = Документы.КВП_ОтражениеНачисленийВРеглУчете.ОбновитьИнформациюОбИспользованииГруппУслугДляОтраженияВРеглУчете();
	
КонецПроцедуры

#КонецОбласти
