
#Область СлужебныеПроцедурыИФункции

&НаСервере
// Возвращает массив документов.
Функция ПолучитьМассивДокументов(ПараметрКоманды)
	
	Возврат Документы.КВП_ОтражениеНачисленийВРеглУчете.ПолучитьМассивДокументовСчетФактураВыданный(ПараметрКоманды);
	
КонецФункции

&НаКлиенте
// Обработчик команды.
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	МассивДокументов = ПолучитьМассивДокументов(ПараметрКоманды);
	
	Если МассивДокументов.Количество() > 0 Тогда
		
		// Получение стандартных настроек печати счетов-фактур.
		НастройкиПечати = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьНастройкиПечатиСчетовФактур(МассивДокументов);
		
		СчетаФактуры             = НастройкиПечати.СчетаФактуры;
		ДокументыБезСчетовФактур = НастройкиПечати.ДокументыБезСчетовФактур;
		СписокМакетов            = НастройкиПечати.СписокМакетов;
		
		ПараметрыПечати = УПЖКХ_ТиповыеМетодыКлиент.ПолучитьЗаголовокПечатнойФормы(СчетаФактуры);
		
		// Команда печати счетов-фактур.
		УПЖКХ_ТиповыеМетодыКлиент.ВыполнитьКомандуПечати(
			"Документ.СчетФактураВыданный",
			СписокМакетов,
			СчетаФактуры,
			ПараметрыВыполненияКоманды,
			ПараметрыПечати);
		
		// По документам, которые не могут иметь счетов-фактур, сообщаем об ошибке.
		Для каждого ДокументБезСчетаФактуры Из ДокументыБезСчетовФактур Цикл
			
			ТекстСообщения = НСтр("ru='По документу %1 счет-фактура не выписан.'");
			ТекстСообщения = УПЖКХ_ТиповыеМетодыКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументБезСчетаФактуры);
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
