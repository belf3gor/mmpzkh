
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьРеквизитыИзПараметровФормы(ЭтаФорма);
		УстановитьСостояниеДокумента();
	КонецЕсли;
	
	ТекущаяДатаДокумента = Объект.Дата;
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	
	ОбновитьПодвал(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
	УстановитьУсловноеОформление();
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтаФорма,
		"БП.Документ.ПодтверждениеНулевойСтавкиНДС",
		"ФормаДокумента",
		НСтр("ru='Новости: Подтверждение нулевой ставки НДС'"),
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтаФорма);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("СостояниеРегламентнойОперации", 
		?(Объект.Проведен, ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено"), 
						   ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.НеВыполнено")));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьСостояниеДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеПодтверждениеНулевойСтавкиНДС";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		Если Объект.Состав.Количество() > 0 Тогда
			ТекстВопроса = НСтр("ru = 'Табличная часть будет очищена. Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ВопросОчиститьТабличнуюЧастьЗавершение", ЭтотОбъект, ТекущаяДатаДокумента);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ДатаПриИзмененииНаСервере();
		КонецЕсли;
	Иначе
		// Запомним новую дату документа.
		ТекущаяДатаДокумента = Объект.Дата;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СоставСобытиеПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ДанныеСтрокиТабличнойЧасти = Новый Структура(
		"Событие,СтавкаНДС,СуммаНДС,ПродажиСНДС0,СчетФактураВыданный,ДокументОтгрузки,Покупатель");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТабличнойЧасти, ТекущаяСтрока);
	
	ДанныеСтрокиТабличнойЧасти = СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ДанныеСтрокиТабличнойЧасти);

КонецПроцедуры

&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	
	ОбновитьПодвал(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ТекущаяСтрока.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.ПродажиСНДС0, 
								Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущаяСтрока.СтавкаНДС));

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.Проведен Тогда
		ТекстВопроса = НСтр("ru='Проведенный документ не может быть заполнен автоматически. 
			|Отменить проведение документа для заполнения?'"); 
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьДокумент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтаФорма,
		Команда
	);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект = Форма.Объект;
	
	ПараметрыОтбора = Новый Структура("Событие", ПредопределенноеЗначение("Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0"));
	МассивНеподтверждений = Объект.Состав.НайтиСтроки(ПараметрыОтбора);
	
	Форма.ЕстьНеподтверждениеСтавки = МассивНеподтверждений.Количество() <> 0;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыИзПараметровФормы(Форма)
	
	ПараметрыЗаполненияФормы = Неопределено;
	
	Если Форма.Параметры.Свойство("ПараметрыЗаполненияФормы",ПараметрыЗаполненияФормы) Тогда
		ЗаполнитьЗначенияСвойств(Форма.Объект,ПараметрыЗаполненияФормы);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодвал(Форма)
	
	Объект   			  = Форма.Объект;
	Форма.НадписьВсего 	  = Объект.Состав.Итог("ПродажиСНДС0");
	Форма.НадписьВсегоНДС = Объект.Состав.Итог("СуммаНДС");

КонецПроцедуры

&НаСервере
Функция СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти)
	
	Если ДанныеСтрокиТабличнойЧасти.Событие = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0 Тогда
		
		Если ВерсияПостановления1137 >= 3 Тогда
			CуммыДокумента = ПолучитьСуммыПоДокументуОтгрузки(
				ДанныеСтрокиТабличнойЧасти.ДокументОтгрузки, ДанныеСтрокиТабличнойЧасти.Покупатель);
			ДанныеСтрокиТабличнойЧасти.СуммаНДС     = CуммыДокумента.СуммаНДС;
			ДанныеСтрокиТабличнойЧасти.ПродажиСНДС0 = CуммыДокумента.ПродажиСНДС0;
		Иначе
			ДанныеСтрокиТабличнойЧасти.СтавкаНДС = УчетНДСКлиентСервер.СтавкаНДСПоУмолчанию(Объект.Дата);
			ДанныеСтрокиТабличнойЧасти.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ДанныеСтрокиТабличнойЧасти.ПродажиСНДС0, 
				Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ДанныеСтрокиТабличнойЧасти.СтавкаНДС))
		КонецЕсли;
			
	Иначе
		ДанныеСтрокиТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
		ДанныеСтрокиТабличнойЧасти.СчетФактураВыданный = Документы.СчетФактураВыданный.ПустаяСсылка();
		ДанныеСтрокиТабличнойЧасти.СуммаНДС  = 0;
	КонецЕсли;
	
	Возврат ДанныеСтрокиТабличнойЧасти;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДокумент(ОтменитьПроведение = Ложь)

	ЗаполнитьДокументНаСервере(ОтменитьПроведение);
	Если ОтменитьПроведение Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
	КонецЕсли;
	
	Если Объект.Состав.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Неподтвержденная реализация по ставке 0% не обнаружена.'");
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДокумент(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьТабличнуюЧастьЗавершение(Результат, ТекущаяДатаДокумента) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДатаПриИзмененииНаСервере();
		Объект.Состав.Очистить();
	Иначе
		Объект.Дата = ТекущаяДатаДокумента;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммыПоДокументуОтгрузки(ДокументОтгрузки, Контрагент)
	
	СуммыПоДокументу = Новый Структура("СуммаНДС, ПродажиСНДС0");
	СуммыПоДокументу.СуммаНДС     = 0;
	СуммыПоДокументу.ПродажиСНДС0 = 0;
	
	Если НЕ ЗначениеЗаполнено(ДокументОтгрузки) Тогда
		Возврат СуммыПоДокументу;
	КонецЕсли;
	
	ДанныеСчетаФактуры = Новый Структура(
		"СчетФактура,ВидСчетаФактуры,Контрагент,ДоговорКонтрагента,ИспользуетсяПостановлениеНДС1137,
		|НеподтверждениеНулевойСтавки,СводныйКомиссионный,НомерСтроки");
	
	ДанныеСчетаФактуры.Контрагент                       = Контрагент;
	ДанныеСчетаФактуры.ИспользуетсяПостановлениеНДС1137 = Истина;
	ДанныеСчетаФактуры.НеподтверждениеНулевойСтавки     = Истина;
	ДанныеСчетаФактуры.СводныйКомиссионный              = Ложь;
	ДанныеСчетаФактуры.НомерСтроки = 0;
	
	Если ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		// Реализация по ставке НДС 0% оформлена документами "Оказание услуг" или "Отчет комиссионера (агента) о продажах"
		ДокументОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОтгрузки, "ДокументОснование");
		
		Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
			Возврат 0;
		КонецЕсли;
		
		РеквизитыСчетаФактуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОтгрузки, "ДоговорКонтрагента,ВидСчетаФактуры");
		
		ДанныеСчетаФактуры.ДоговорКонтрагента = РеквизитыСчетаФактуры.ДоговорКонтрагента;
		ДанныеСчетаФактуры.ВидСчетаФактуры    = РеквизитыСчетаФактуры.ВидСчетаФактуры;
		ДанныеСчетаФактуры.СчетФактура        = ДокументОтгрузки;
		ПараметрыДокумента                    = УчетНДС.ПодготовитьДанныеДляПечатиСчетовФактур(ДокументОснование, ДанныеСчетаФактуры);
		
	Иначе
		
		ДанныеСчетаФактуры.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ДанныеСчетаФактуры.СчетФактура        = Документы.СчетФактураВыданный.ПустаяСсылка();
		ПараметрыДокумента                    = УчетНДС.ПодготовитьДанныеДляПечатиСчетовФактур(ДокументОтгрузки, ДанныеСчетаФактуры);
		
	КонецЕсли;
		
	Если ПараметрыДокумента.Реквизиты <> Неопределено 
		И ПараметрыДокумента.ТаблицаДокумента <> Неопределено Тогда
		СуммыПоДокументу.СуммаНДС     = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаНДС");;
		СуммыПоДокументу.ПродажиСНДС0 = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаБезНДС");;
	КонецЕсли;
	
	Возврат СуммыПоДокументу;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// СоставСтавкаНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСтавкаНДС");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);

	// СоставСчетФактураВыданный

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСчетФактураВыданный");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Меньше, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	// СоставСчетФактураВыданный

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСчетФактураВыданный");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗаголовкиСтрокЦветТекста);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Не требуется'"));

	// СоставСтавкаНДС, СоставВидЦенности

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСтавкаНДС");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставВидЦенности");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.БольшеИлиРавно, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	// СоставПродажиСНДС0

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставПродажиСНДС0");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	// СтатьяПрочихРасходов

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СтатьяПрочихРасходов");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЕстьНеподтверждениеСтавки", ВидСравненияКомпоновкиДанных.Равно, Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументНаСервере(ОтменитьПроведение)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ОтменитьПроведение Тогда
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	ДокументОбъект.ЗаполнитьДокумент();
	ЗначениеВДанныеФормы(ДокументОбъект, Объект);
	
	ОбновитьПодвал(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтаФорма, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

#КонецОбласти



