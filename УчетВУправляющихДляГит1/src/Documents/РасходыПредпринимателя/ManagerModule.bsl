#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 10, 0);
	
КонецФункции

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходыПредпринимателяРасходы.Номенклатура КАК Номенклатура,
	|	РасходыПредпринимателяРасходы.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.РасходыПредпринимателя.Расходы КАК РасходыПредпринимателяРасходы
	|ГДЕ
	|	РасходыПредпринимателяРасходы.Ссылка = &Ссылка
	|	И НЕ РасходыПредпринимателяРасходы.Номенклатура.Услуга
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Табличная часть Расходы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Расходы", "СчетУчета", "ЗапасыЗатраты");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "ПодразделениеЗатрат", "ПодразделениеЗатрат");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто1", "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто2", "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто3", "СубконтоЗатрат3");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаНДС", "ПредъявленныйНДС_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС", "СуммаНДС");
	
	// Данные заполнения
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Подразделение", "ПодразделениеОрганизации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "НДСВключенВСтоимость");
	
КонецПроцедуры


Процедура ДобавитьКолонкуСодержаниеТовары(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаЗначений.Колонки.Добавить("Содержание", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150)));
	
	ШаблонСодержания = "Поступление %1 по %2";
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		МПЗ = БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета);
		СтрокаТаблицы.Содержание = СтрШаблон(ШаблонСодержания, МПЗ, СтрокаТаблицы.ДокументРасхода);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьКолонкуСодержаниеУслуги(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонСодержания = "%1 по %2";
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = СтрШаблон(ШаблонСодержания, СтрокаТаблицы.Содержание, СтрокаТаблицы.ДокументРасхода);
	КонецЦикла;
	
КонецПроцедуры


Процедура СформироватьДвиженияЗаписьКУДиР(ПараметрыПроведения, Движения, Отказ) Экспорт

	ТаблицаДоходовИРасходов = ПараметрыПроведения.ТаблицаДоходовИРасходов;
	
	Если ТаблицаДоходовИРасходов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РегистрКниги = Движения.КнигаУчетаДоходовИРасходов;
	
	// Формирование записей книги доходов и расходов Раздел I
	Для каждого ДоходИРасход ИЗ ТаблицаДоходовИРасходов Цикл
		СтрокаДвижений = РегистрКниги.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, ДоходИРасход);
		РегистрКниги.Записывать = Истина;
	КонецЦикла;

КонецПроцедуры


// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	ПлательщикНДФЛ = УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период);
	ВестиУчетПоВидамДеятельностиИП   = УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период);
	ОсновнаяНоменклатурнаяГруппа     = УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период);
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период);
	МатериалыПоОплате = (УчетнаяПолитика.ПорядокПризнанияМатериальныхРасходов(Реквизиты.Организация, Реквизиты.Период) =
				Перечисления.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику);
	ИспользуетсяОтложенноеПроведение = ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период);
	
	Реквизиты.Вставить("ПлательщикНДФЛ",                   ПлательщикНДФЛ);
	Реквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", ПрименяетсяУСНДоходыМинусРасходы);
	Реквизиты.Вставить("ИспользуетсяОтложенноеПроведение", ИспользуетсяОтложенноеПроведение);
	
	Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП", ВестиУчетПоВидамДеятельностиИП);
	Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа", ОсновнаяНоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("Субсчета10", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	Запрос.УстановитьПараметр("МатериалыПоОплате", МатериалыПоОплате);
	Запрос.УстановитьПараметр("СинонимРасходы", НСтр("ru = 'Расходы'"));
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст =ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаПоступлениеТоваров(НомераТаблиц)
		+ ТекстЗапросаПоступлениеУслуг(НомераТаблиц)
		+ ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРасходовИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРасходовНДС(НомераТаблиц)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",                       НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВалютаДокумента КАК ВалютаВзаиморасчетов,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.РасходыПредпринимателя КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	1 КАК КурсВзаиморасчетов,
	|	1 КАК КратностьВзаиморасчетов,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ТипСклада КАК ТипСклада,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭлектронныеУслуги,
	|	ИСТИНА КАК РасходыПредпринимателя,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизЛицо,
	|	""ПоступлениеТоваровУслуг"" КАК ТипПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРасходы", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасходыПредпринимателяРасходы.Ссылка,
	|	РасходыПредпринимателяРасходы.НомерСтроки,
	|	РасходыПредпринимателяРасходы.Номенклатура,
	|	РасходыПредпринимателяРасходы.Номенклатура.НаименованиеПолное КАК Содержание,
	|	РасходыПредпринимателяРасходы.Количество,
	|	ВЫБОР
	|		КОГДА РасходыПредпринимателяРасходы.Ссылка.СуммаВключаетНДС
	|			ТОГДА РасходыПредпринимателяРасходы.Сумма
	|		ИНАЧЕ РасходыПредпринимателяРасходы.Сумма + РасходыПредпринимателяРасходы.СуммаНДС
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА НЕ РасходыПредпринимателяРасходы.Ссылка.СуммаВключаетНДС
	|			ТОГДА РасходыПредпринимателяРасходы.Сумма
	|		ИНАЧЕ РасходыПредпринимателяРасходы.Сумма - РасходыПредпринимателяРасходы.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	РасходыПредпринимателяРасходы.СтавкаНДС,
	|	РасходыПредпринимателяРасходы.СуммаНДС,
	|	РасходыПредпринимателяРасходы.СчетУчета,
	|	ВЫБОР
	|		КОГДА РасходыПредпринимателяРасходы.Номенклатура.Услуга
	|			ТОГДА РасходыПредпринимателяРасходы.ПодразделениеЗатрат
	|		ИНАЧЕ Реквизиты.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеЗатрат,
	|	ВЫБОР
	|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|			ТОГДА РасходыПредпринимателяРасходы.Номенклатура
	|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|			ТОГДА Реквизиты.Склад
	|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
	|			ТОГДА РасходыПредпринимателяРасходы.Ссылка
	|		ИНАЧЕ РасходыПредпринимателяРасходы.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|			ТОГДА РасходыПредпринимателяРасходы.Номенклатура
	|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|			ТОГДА Реквизиты.Склад
	|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
	|			ТОГДА РасходыПредпринимателяРасходы.Ссылка
	|		ИНАЧЕ РасходыПредпринимателяРасходы.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|			ТОГДА РасходыПредпринимателяРасходы.Номенклатура
	|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|			ТОГДА Реквизиты.Склад
	|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
	|			ТОГДА РасходыПредпринимателяРасходы.Ссылка
	|		ИНАЧЕ РасходыПредпринимателяРасходы.Субконто3
	|	КОНЕЦ КАК Субконто3,
	|	РасходыПредпринимателяРасходы.СчетУчетаНДС,
	|	РасходыПредпринимателяРасходы.ДокументРасхода,
	|	РасходыПредпринимателяРасходы.Номенклатура.Услуга КАК Услуга
	|ПОМЕСТИТЬ ТаблицаРасходы
	|ИЗ
	|	Документ.РасходыПредпринимателя.Расходы КАК РасходыПредпринимателяРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто1
	|		ПО РасходыПредпринимателяРасходы.СчетУчета = ВидыСубконто1.Ссылка
	|			И (ВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто2
	|		ПО РасходыПредпринимателяРасходы.СчетУчета = ВидыСубконто2.Ссылка
	|			И (ВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто3
	|		ПО РасходыПредпринимателяРасходы.СчетУчета = ВидыСубконто3.Ссылка
	|			И (ВидыСубконто3.НомерСтроки = 3)
	|ГДЕ
	|	РасходыПредпринимателяРасходы.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеТоваров(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПоступлениеТоваровТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Расходы"" КАК ИмяСписка,
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Номенклатура,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСВРознице,
	|	ВЫБОР
	|		КОГДА Реквизиты.НДСВключенВСтоимость
	|			ТОГДА ТаблицаРасходы.Сумма
	|		ИНАЧЕ ТаблицаРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.НДСВключенВСтоимость
	|			ТОГДА ТаблицаРасходы.Сумма
	|		ИНАЧЕ ТаблицаРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБУ,
	|	НЕОПРЕДЕЛЕНО КАК СуммаНУ,
	|	ТаблицаРасходы.СуммаНДС КАК СуммаНДСРуб,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ТаблицаРасходы.Количество,
	|	ТаблицаРасходы.СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению) КАК КорСчет,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	ТаблицаРасходы.ДокументРасхода
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ТаблицаРасходы.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеУслуг(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПоступлениеУслугТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Реквизиты.НДСВключенВСтоимость
	|			ТОГДА ТаблицаРасходы.Сумма
	|		ИНАЧЕ ТаблицаРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.НДСВключенВСтоимость
	|			ТОГДА ТаблицаРасходы.Сумма
	|		ИНАЧЕ ТаблицаРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБУ,
	|	НЕОПРЕДЕЛЕНО КАК СуммаНУ,
	|	ТаблицаРасходы.СчетУчета КАК СчетЗатрат,
	|	ТаблицаРасходы.Субконто1 КАК Субконто1,
	|	ТаблицаРасходы.Субконто2 КАК Субконто2,
	|	ТаблицаРасходы.Субконто3 КАК Субконто3,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению) КАК КорСчет,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК СчетЗатратНУ,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоНУ1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоНУ2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоНУ3,
	|	ТаблицаРасходы.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ТаблицаРасходы.Количество,
	|	ТаблицаРасходы.ДокументРасхода,
	|	ТаблицаРасходы.Содержание
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаРасходы.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРасходовНДС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТоварыНДС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УслугиНДС", НомераТаблиц.Количество());
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Номенклатура,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаВзаиморасчетов,
	|	ТаблицаРасходы.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаРасходы.Количество,
	|	ТаблицаРасходы.СчетУчета,
	|	ТаблицаРасходы.СчетУчетаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Списывается) КАК СпособУчетаНДС,
	|	ТаблицаРасходы.СуммаНДС КАК СуммаНДС,
	|	ТаблицаРасходы.СуммаНДС КАК СуммаНДСРуб,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаРуб,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ТаблицаРасходы.СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ЛОЖЬ КАК ПредъявленСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
	|	ТаблицаРасходы.ДокументРасхода,
	|	Реквизиты.НДСВключенВСтоимость
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ТаблицаРасходы.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаВзаиморасчетов,
	|	ТаблицаРасходы.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаРасходы.Количество,
	|	ТаблицаРасходы.СчетУчета КАК СчетЗатрат,
	|	ТаблицаРасходы.СчетУчетаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Списывается) КАК СпособУчетаНДС,
	|	ТаблицаРасходы.СуммаНДС КАК СуммаНДС,
	|	ТаблицаРасходы.СуммаНДС КАК СуммаНДСРуб,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаРуб,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ТаблицаРасходы.СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ЛОЖЬ КАК ПредъявленСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
	|	ТаблицаРасходы.Содержание,
	|	ТаблицаРасходы.Субконто1,
	|	ТаблицаРасходы.Субконто2,
	|	ТаблицаРасходы.Субконто3,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ТаблицаРасходы.Субконто1
	|		КОГДА ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ТаблицаРасходы.Субконто2
	|		КОГДА ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ТаблицаРасходы.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ТаблицаРасходы.ПодразделениеЗатрат,
	|	ТаблицаРасходы.ДокументРасхода,
	|	Реквизиты.НДСВключенВСтоимость
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаРасходы.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПрименяетсяУСНДоходыМинусРасходы Тогда
		ПараметрыПроведения.Вставить("ПоступлениеРасходовУСНРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ПоступлениеРасходовУСНТаблицаРасходов", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаДоходовИРасходов", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ПоступлениеРасходовУСНРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеРасходовУСНТаблицаРасходов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаДоходовИРасходов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА КАК РасходыПредпринимателя
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	ТаблицаРасходы.Номенклатура КАК ЭлементРасхода,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.СчетУчета В (&Субсчета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.СчетУчета В (&Субсчета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	ТаблицаРасходы.СчетУчета КАК СчетУчета,
	|	ТаблицаРасходы.Ссылка КАК Партия,
	|	ТаблицаРасходы.Количество КАК Количество,
	|	ТаблицаРасходы.Сумма КАК Сумма,
	|	ТаблицаРасходы.СуммаНДС КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	НЕ ТаблицаРасходы.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.ДокументРасхода КАК РеквизитыПервичногоДокумента,
	|	ТаблицаРасходы.Содержание,
	|	0 КАК Графа4,
	|	0 КАК Графа5,
	|	ТаблицаРасходы.Сумма КАК Графа6,
	|	ТаблицаРасходы.Сумма КАК Графа7,
	|	0 КАК ДоходЕНВД,
	|	ТаблицаРасходы.СуммаНДС КАК НДС,
	|	Реквизиты.Организация,
	|	Реквизиты.Дата КАК Период,
	|	0 КАК ДоходТорговыйСбор
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаРасходы.Услуга
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	ТаблицаРасходы.НомерСтроки,
	|	ТаблицаРасходы.ДокументРасхода,
	|	ТаблицаРасходы.Содержание,
	|	0,
	|	0,
	|	ТаблицаРасходы.Сумма,
	|	ТаблицаРасходы.Сумма,
	|	0,
	|	ТаблицаРасходы.СуммаНДС,
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	0
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ТаблицаРасходы.Услуга
	|	И ТаблицаРасходы.СчетУчета В(&Субсчета10)
	|	И &МатериалыПоОплате
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРасходовИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	Если НЕ Реквизиты.ПлательщикНДФЛ Тогда
		ПараметрыПроведения.Вставить("ПоступлениеМПЗИПТаблицаТоваров",        Неопределено);
		ПараметрыПроведения.Вставить("ПоступлениеМПЗИПТаблицаУслуги",         Неопределено);
		ПараметрыПроведения.Вставить("ПоступлениеМПЗИПТаблицаВзаиморасчетов", Неопределено);
		Возврат ТекстЗапроса;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	""Расходы"" КАК ИмяСписка,
	|	&СинонимРасходы КАК СинонимСписка,
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Номенклатура КАК Номенклатура,
	|	ТаблицаРасходы.Сумма КАК Сумма,
	|	ТаблицаРасходы.СуммаНДС КАК НДС,
	|	ТаблицаРасходы.Количество КАК Количество,
	|	ТаблицаРасходы.СчетУчета КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		ИНАЧЕ ТаблицаРасходы.Номенклатура.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК ВидРасходовНУ,
	|	ИСТИНА КАК ПринятиеКналоговомуУчету,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК Партия
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	НЕ ТаблицаРасходы.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаблицаТоваров", НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	""Расходы"" КАК ИмяСписка,
	|	&СинонимРасходы КАК СинонимСписка,
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Номенклатура КАК Номенклатура,
	|	ТаблицаРасходы.Сумма КАК Сумма,
	|	ТаблицаРасходы.СуммаНДС КАК НДС,
	|	0 КАК Количество,
	|	ТаблицаРасходы.СчетУчета КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		КОГДА ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.НоменклатурныеГруппы
	|			ТОГДА ТаблицаРасходы.Субконто1
	|		КОГДА ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.НоменклатурныеГруппы
	|			ТОГДА ТаблицаРасходы.Субконто2
	|		КОГДА ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.НоменклатурныеГруппы
	|			ТОГДА ТаблицаРасходы.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|				ИЛИ ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|				ИЛИ ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.РасходыБудущихПериодов
	|			ТОГДА ТаблицаРасходы.Субконто1
	|		КОГДА ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|				ИЛИ ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|				ИЛИ ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.РасходыБудущихПериодов
	|			ТОГДА ТаблицаРасходы.Субконто2
	|		КОГДА ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|				ИЛИ ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|				ИЛИ ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.РасходыБудущихПериодов
	|			ТОГДА ТаблицаРасходы.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		КОГДА ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		КОГДА ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		КОГДА ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		КОГДА ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаРасходы.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаРасходы.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаРасходы.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК Партия
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаблицаУслуги", НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаРасходы.Ссылка КАК ДокументРасчетов,
	|	СУММА(ТаблицаРасходы.Сумма) КАК СуммаРуб
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Ссылка"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаблицаВзаиморасчетов", НомераТаблиц.Количество());
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ИспользуетсяОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ТоварыРегистрацияВПоследовательности", Неопределено);
		ПараметрыПроведения.Вставить("УслугиРегистрацияВПоследовательности", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТоварыРегистрацияВПоследовательности", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УслугиРегистрацияВПоследовательности", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасходы.СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчетСписания
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	НЕ ТаблицаРасходы.Услуга";

	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасходы.СчетУчета КАК СчетЗатрат
	|ИЗ
	|	ТаблицаРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.Услуга";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ЗарегистрироватьОтложенныеРасчетыВПоследовательности(Объект, ПараметрыПроведения, Отказ) Экспорт

	ВключенВПоследовательность = РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		Объект,
		Отказ,
		Неопределено,
		ПараметрыПроведения.ТоварыРегистрацияВПоследовательности,
		Перечисления.ВидыРегламентныхОпераций.ПустаяСсылка()); // Сбрасываемый вид регламентной операции будет определен позже.
		
	Если ВключенВПоследовательность Тогда
		// Документ включен в общую последовательность, больше с ним ничего делать не требуется.
		Возврат;
	КонецЕсли;

	ОбязательноРегистрироватьВПоследовательности = Ложь;

	Параметры = ПодготовитьПараметрыЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ПараметрыПроведения.УслугиРегистрацияВПоследовательности);

	ТаблицаУслуги = Параметры.ТаблицаУслуги;
		
	// Регистрация в последовательности.
	Если ОбязательноРегистрироватьВПоследовательности Тогда
		РаботаСПоследовательностями.ЗарегистрироватьВПоследовательности(Объект, Отказ, Ложь);

	ИначеЕсли НЕ ВключенВПоследовательность Тогда
		// Если документ регистрирует поступление затрат и при этом не был включен в последовательность,
		// то сбросим актуальность для тех рег.операций, которые зависят от соответствующих счетов.
		РаботаСПоследовательностями.ЗарегистрироватьУстареваниеРегламентныхОперацийПриПоступленииЗатрат(
			Объект, ТаблицаУслуги.ВыгрузитьКолонку("СчетЗатрат"), "Расходы");

	КонецЕсли;
		
КонецПроцедуры

Функция ПодготовитьПараметрыЗарегистрироватьОтложенныеРасчетыВПоследовательности(ТаблицаУслуги)

	Параметры = Новый Структура;
	
	// Прочее
	СписокОбязательныхКолонок = ""
	+ "СчетЗатрат"                    // <ПланСчетовСсылка.Хозрасчетный> - Счет учета поступивших затрат.
	;

	Параметры.Вставить("ТаблицаУслуги",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаУслуги, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РасходыПредпринимателя";
	КомандаПечати.Представление = НСтр("ru = 'Реестр расходов'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	КомандаПечати.Порядок       = 40;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходыПредпринимателя") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасходыПредпринимателя", 
			"Реестр расходов", ПечатьРеестраРасходов(МассивОбъектов, ОбъектыПечати),,
			"Документ.РасходыПредпринимателя.ПФ_MXL_РеестрРасходов");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры 

Функция ПечатьРеестраРасходов(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.АвтоМасштаб             = Истина;
	ТабличныйДокумент.ПолеСверху              = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 10;
	ТабличныйДокумент.ПолеСлева               = 10;
	ТабличныйДокумент.ПолеСправа              = 10;
	ТабличныйДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати    = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходыПредпринимателя_РеестрРасходов";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РасходыПредпринимателя.ПФ_MXL_РеестрРасходов");
	
	// Получаем области макета для вывода в табличный документ
	Шапка      = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходыПредпринимателяРасходы.Ссылка КАК Ссылка,
	|	РасходыПредпринимателяРасходы.НомерСтроки КАК НомерСтроки,
	|	РасходыПредпринимателяРасходы.ДокументРасхода,
	|	РасходыПредпринимателяРасходы.Номенклатура.НаименованиеПолное КАК Содержание,
	|	РасходыПредпринимателяРасходы.Сумма КАК Сумма,
	|	РасходыПредпринимателяРасходы.СуммаНДС КАК СуммаНДС,
	|	РасходыПредпринимателяРасходы.Ссылка.Номер,
	|	РасходыПредпринимателяРасходы.Ссылка.Дата,
	|	РасходыПредпринимателяРасходы.Ссылка.СуммаВключаетНДС,
	|	РасходыПредпринимателяРасходы.Ссылка.Организация
	|ИЗ
	|	Документ.РасходыПредпринимателя.Расходы КАК РасходыПредпринимателяРасходы
	|ГДЕ
	|	РасходыПредпринимателяРасходы.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС)
	|ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	
	ПервыйДокумент = Истина;
	
	ВыборкаПоДокументам = Результат.Выбрать();
	Пока ВыборкаПоДокументам.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		СведенияОПредпринимателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
			ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата);
		
		Шапка.Параметры.ТекстЗаголовка = 
			ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(ВыборкаПоДокументам, "Реестр расходов");
		Шапка.Параметры.ПредставлениеИП = 
			ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПредпринимателе, "НаименованиеДляПечатныхФорм,");
			
		ТабличныйДокумент.Вывести(Шапка);
		
		Подвал.Параметры.Заполнить(ВыборкаПоДокументам);
		Подвал.Параметры.ФИОИП = 
			ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПредпринимателе, "ФамилияИнициалыФизлица,");
		
		Пока ВыборкаПоДокументам.Следующий() Цикл
			
			Если ПустаяСтрока(ВыборкаПоДокументам.Содержание) Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоДокументам);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(Подвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
