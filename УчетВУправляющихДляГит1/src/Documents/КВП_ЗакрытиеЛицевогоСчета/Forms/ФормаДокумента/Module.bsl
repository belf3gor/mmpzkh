
#Область ВспомогательныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция определяет сведения о лицевых счетах.
Функция ЕстьСведенияОЛицевыхСчетах(Дата, Помещение)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата",      Дата);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КВП_ЛицевыеСчета.ЛицевойСчет
	|ИЗ
	|	РегистрСведений.КВП_ЛицевыеСчета.СрезПоследних(&Дата,) КАК КВП_ЛицевыеСчета
	|ГДЕ
	|	КВП_ЛицевыеСчета.Действует
	|	И КВП_ЛицевыеСчета.Объект = &Помещение";
		
		
	Результат = Запрос.Выполнить().Выбрать();

	Возврат Результат.Следующий();
	
КонецФункции

&НаСервереБезКонтекста
// Выводит надпись-пояснение "Адрес лицевого счета".
Функция ВывестиАдресЛС(Дата, ЛицевойСчет)

	Если ЛицевойСчет = Справочники.КВП_ЛицевыеСчета.ПустаяСсылка() тогда
		Адрес = "";
	Иначе
		ТекАдрес = ЛицевойСчет.Адрес;
		ТекЗдание = ЛицевойСчет.Адрес.Владелец;
		
		СтруктАдрес = ПолучитьАдрес(ТекЗдание, Перечисления.КВП_ВидыАдресов.Здание);
		СтруктАдрес.Регион   = "";
		СтруктАдрес.Район    = "";
		СтруктАдрес.Город    = "";
		СтруктАдрес.Индекс   = "";
		АдресДома = СтруктАдрес.Представление;
		Адрес = ПолучитьАдресПомещения(АдресДома, ТекАдрес);
	КонецЕсли;
	
	Возврат Адрес;
	
КонецФункции // ВывестиАдресЛС()

&НаСервереБезКонтекста
Функция ПолучитьРеквизит(Объект, ИмяРеквизита)
	Возврат Объект[ИмяРеквизита];
КонецФункции

&НаСервереБезКонтекста
// Формирует список документов "Вступление в ТСЖ", "Выход из ТСЖ", в которых имеются собственники, по
// которым аннулируем права собственности.
Процедура ЗаполнитьСписокСоответствующихДокументовТСЖ(СписокДокументовТСЖ, Дата, ЛицевойСчет, АннулироватьДанныеОСобственности)
	
	СписокДокументовТСЖ.Очистить();
	
	Если Не АннулироватьДанныеОСобственности
	 Или Не Константы.УПЖКХ_ИспользоватьФункционалТСЖ.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_СобственникиПомещенийСрезПоследних.Собственник
	|ПОМЕСТИТЬ Собственники
	|ИЗ
	|	РегистрСведений.УПЖКХ_СобственникиПомещений.СрезПоследних(&Дата, Помещение = &Помещение) КАК УПЖКХ_СобственникиПомещенийСрезПоследних
	|ГДЕ
	|	УПЖКХ_СобственникиПомещенийСрезПоследних.Действует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_ЧленыТСЖ.Регистратор
	|ИЗ
	|	РегистрСведений.КВП_ЧленыТСЖ КАК КВП_ЧленыТСЖ
	|ГДЕ
	|	КВП_ЧленыТСЖ.ЧленТСЖ В
	|			(ВЫБРАТЬ
	|				Собственники.Собственник
	|			ИЗ
	|				Собственники КАК Собственники)
	|
	|СГРУППИРОВАТЬ ПО
	|	КВП_ЧленыТСЖ.Регистратор";
	Запрос.УстановитьПараметр("Дата",      Дата);
	Запрос.УстановитьПараметр("Помещение", ЛицевойСчет.Адрес);
	
	СписокДокументовТСЖ.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
// Устанавливает видимость элементов формы.
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.СсылкаПроверкаЧленовТСЖ.Видимость = (Не Форма.СписокДокументовТСЖ.Количество() = 0);
	
КонецПроцедуры // УстановитьВидимостьЭлементов()

#КонецОбласти 

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события "ПриЧтенииНаСервере" формы.
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УПЖКХ_ТиповыеМетодыСервер.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПриСозданииНаСервере" на сервере.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Основание = Параметры.Основание;
	Если НЕ Основание = Неопределено
	 И Не Основание.Пустая() Тогда
		Если Основание.ЭтоГруппа Тогда
			Отказ = Истина;
			Возврат;
		Иначе
			// Получаем статус лицевого счета:
			// 1 - Лицевой счет открыт или изменен.
			// 2 - Лицевой счет закрыт.
			// 3 - Лицевой счет не открыт.
			СтатусДокумента = УПЖКХ_РаботаСЛицевымиСчетами.СтатусЛицевогоСчета(Основание);
			
			Если СтатусДокумента = 2 ИЛИ СтатусДокумента = 3 Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	УПЖКХ_ТиповыеМетодыСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Заполним лицевой счет, если он переан в параметрах.
	Если Объект.Ссылка.Пустая() И Параметры.Свойство("ЛицевойСчет") Тогда
		Объект.ЛицевойСчет = Параметры.ЛицевойСчет;
	КонецЕсли;
	
	// Устанавливаем значение по умолчанию.
	Если Объект.Ссылка.Пустая() Тогда
		УПЖКХ_ЗаполнениеДокументовСервер.ЗаполнитьШапкуДокумента(Объект, 
																	УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());
		УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	КонецЕсли;
	
	АдресЛС = ВывестиАдресЛС(Объект.Дата, Объект.ЛицевойСчет);
	
	Если Константы.УПЖКХ_УпрощенныйВариантУчетаСобственников.Получить() Тогда
		// При упрощенном учете собственников аннулирование сведений о собственности на помещение и её собственниках
		// производим при помощи текущего документа.
		Элементы.АннулироватьДанныеОСобственности.Видимость = Истина;
		Элементы.ДекорацияСведенияОСобственности.Видимость  = Ложь;
	Иначе
		// Данную декорацию выводим только при полном учете собственников.
		// При переходе по гиперссылке откроется форма списка документа "Установка собственников помещений" с отбором по помещению,
		// в котором ранее был открыт выбранный лицевой счет.
		// Далее необходимо создать документ "Установка собственников помещения" для аннулирования (редактирования) сведений о собственности на помещение и её собственниках.
		Элементы.АннулироватьДанныеОСобственности.Видимость = Ложь;
		Элементы.ДекорацияСведенияОСобственности.Видимость  = Истина;
	КонецЕсли;
	
	ЗаполнитьСписокСоответствующихДокументовТСЖ(СписокДокументовТСЖ, Объект.Дата, Объект.ЛицевойСчет, Объект.АннулироватьДанныеОСобственности);
	
	УправлениеФормой(ЭтаФорма);
	
	// Установить доступность формы с учетом ключа СЛК.
	СЗК_МодульЗащитыКлиентСервер.УстановитьДоступностьФормыДляРедактирования(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПослеЗаписиНаСервере" формы.
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПослеЗаписи" формы.
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ТекАдрес = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.ЛицевойСчет, "Адрес");
	
	Если ЕстьСведенияОЛицевыхСчетах(Объект.Дата + 60*60*24, ТекАдрес) Тогда
		
		ТекЗдание = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ТекАдрес, "Владелец");
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Дата",        Объект.Дата + 60*60*24);
		СтруктураПараметров.Вставить("Здание",      ТекЗдание);
		СтруктураПараметров.Вставить("Помещение",   ТекАдрес);
		СтруктураПараметров.Вставить("ЛицевойСчет", Объект.ЛицевойСчет);
		
		Форма = ПолучитьФорму("Обработка.КВП_УстановкаДолей.Форма", СтруктураПараметров);
		Форма.Заголовок = "Проверьте доли собственности л/с";
		Форма.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "Дата".
Процедура ДатаПриИзменении(Элемент)
	
	УПЖКХ_РаботаСДиалогамиКлиентСервер.ПроверитьНомерДокумента(Объект, Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ЛицевойСчет".
Процедура ЛицевойСчетПриИзменении(Элемент)
	
	АдресЛС = ВывестиАдресЛС(Объект.Дата, Объект.ЛицевойСчет);
	
	ЗаполнитьСписокСоответствующихДокументовТСЖ(СписокДокументовТСЖ, Объект.Дата, Объект.ЛицевойСчет, Объект.АннулироватьДанныеОСобственности);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

// Обработчик события "ОбработкаНавигационнойСсылки" гиперссылки "ДекорацияСведенияОСобственности".
&НаКлиенте
Процедура ДекорацияСведенияОСобственностиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Объект.ЛицевойСчет = ПредопределенноеЗначение("Справочник.КВП_ЛицевыеСчета.ПустаяСсылка") Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Перед началом редактирования сведений о собственности на помещение необходимо выбрать лицевой счет!");
		Возврат;
	КонецЕсли;
	
	ФормаСписка = ПолучитьФорму("Документ.УПЖКХ_УстановкаСобственниковПомещений.ФормаСписка", , ЭтотОбъект);
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьЭлементОтбора(ФормаСписка.Список.КомпоновщикНастроек.Настройки.Отбор, "Помещение", ПолучитьРеквизит(Объект.ЛицевойСчет, "Адрес"),
															ВидСравненияКомпоновкиДанных.Равно, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
	ФормаСписка.Открыть();
	
КонецПроцедуры // ДекорацияСведенияОСобственностиОбработкаНавигационнойСсылки()

&НаКлиенте
// Обработчик события "ПриИзменении" флага "АннулироватьДанныеОСобственности".
Процедура АннулироватьДанныеОСобственностиПриИзменении(Элемент)
	
	ЗаполнитьСписокСоответствующихДокументовТСЖ(СписокДокументовТСЖ, Объект.Дата, Объект.ЛицевойСчет, Объект.АннулироватьДанныеОСобственности);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "Нажатие" надписи "СсылкаПроверкаЧленовТСЖ".
Процедура СсылкаПроверкаЧленовТСЖНажатие(Элемент)
	
	ФормаСписка = ПолучитьФорму("ЖурналДокументов.УПЖКХ_ВступлениеИВыходИзТСЖ.ФормаСписка", , ЭтотОбъект);
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьЭлементОтбора(ФормаСписка.Список.КомпоновщикНастроек.Настройки.Отбор, "Ссылка", СписокДокументовТСЖ,
															ВидСравненияКомпоновкиДанных.ВСписке, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
	ФормаСписка.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	УПЖКХ_ТиповыеМетодыСервер.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти
