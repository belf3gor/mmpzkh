
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		// создается новый документ
		ЗначенияДляЗаполнения = Новый Структура("ПредыдущийМесяц, Ответственный", 
			"Объект.ПериодРегистрации",
			"Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой");
	КонецЕсли;
	
	Элементы.ЗарплатаКомпенсацияЗаЗадержкуЗарплаты.Видимость = Объект.Зарплата.Итог("КомпенсацияЗаЗадержкуЗарплаты") <> 0;
	Элементы.ЗарплатаВыплаченностьЗарплаты.Видимость =
		Объект.Зарплата.НайтиСтроки(Новый Структура("ВыплаченностьЗарплаты", Перечисления.ВыплаченностьЗарплаты.НеВыплачено)).Количество() > 0
		ИЛИ Объект.Зарплата.НайтиСтроки(Новый Структура("ВыплаченностьЗарплаты", Перечисления.ВыплаченностьЗарплаты.Задепонировано)).Количество() > 0;
	
	СвязьПараметровВыбораБанковскийСчет = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Зарплата.ТекущиеДанные.ФизическоеЛицо", РежимИзмененияСвязанногоЗначения.Очищать);
	МассивСвязей = Новый Массив();
	МассивСвязей.Добавить(СвязьПараметровВыбораБанковскийСчет);
	ФиксированныйМассивСвязей = Новый ФиксированныйМассив(МассивСвязей);
	Элементы.ЗарплатаБанковскийСчет.СвязиПараметровВыбора = ФиксированныйМассивСвязей;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьПредставлениеОплаты();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой");
	
	УстановитьДоступностьЭлементов();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ВзаиморасчетыССотрудникамиКлиент.ИмяСобытияИзмененияОплатыВедомости() Тогда
		УстановитьДоступностьЭлементов();
		УстановитьПредставлениеОплаты();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ВедомостьНаВыплатуЗарплаты", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатыПредставлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ВедомостьНаВыплатуЗарплатыКлиент.ОплатаПоказать(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Оплатить(Команда)
	
	Если Объект.ПометкаУдаления Тогда
		ПоказатьПредупреждение( , НСтр("ru = 'Нельзя оформить выплату на основании документа, помеченного на удаление.'"));
		Возврат;
	Иначе
		Если Модифицированность Тогда
			Кнопки = Новый СписокЗначений;
			Кнопки.Вставить(0, КодВозвратаДиалога.Да,     "Записать");
			Кнопки.Вставить(1, КодВозвратаДиалога.Отмена, "Отмена");
			
			Оповещение = Новый ОписаниеОповещения("ВопросПередВыплатойСледуетЗаписатьЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, НСтр("ru = 'Перед выплатой документ следует записать'"), Кнопки,, КодВозвратаДиалога.Да);
		Иначе
			ОплатитьНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьДоступностьЭлементов() Экспорт
	
	ЕстьОплатаПоВедомости = ВзаиморасчетыССотрудниками.ЕстьОплатаПоВедомости(Объект.Ссылка);
	
	ТолькоПросмотр = 
		ДатыЗапретаИзменения.ИзменениеЗапрещено(Объект.Ссылка.Метаданные().ПолноеИмя(), Объект.Ссылка) 
		ИЛИ ВзаиморасчетыССотрудниками.ЕстьОплатаПоВедомости(Объект.Ссылка);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаОплатыКнопка",
		"Видимость",
		НЕ ЕстьОплатаПоВедомости);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаОплатыСсылка",
		"Видимость",
		ЕстьОплатаПоВедомости);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"Оплатить",
		"Доступность",
		НЕ ТолькоПросмотр);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеОплаты() Экспорт
	
	ВедомостьНаВыплатуЗарплатыФормы.УстановитьПредставлениеОплаты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередВыплатойСледуетЗаписатьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДокументЗаписан = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
	Если НЕ ДокументЗаписан Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не удалось записать документ'"));
		Возврат;
	КонецЕсли;
	
	ОплатитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОплатитьНаСервере()
	
	ВедомостьНаВыплатуЗарплатыФормыПереопределяемый.СформироватьДокументыОплаты(ЭтотОбъект);
	УстановитьПредставлениеОплаты();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти
