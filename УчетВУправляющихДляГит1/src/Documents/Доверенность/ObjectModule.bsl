#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСДоговорамиКонтрагентовБП.ЗаполнитьДоговорПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	ДатаДействия = Дата + 10 * (24 * 60 * 60);
		
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(БанковскийСчетОрганизации, Организация, 
		ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата          = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	ДатаДействия  = Дата + 10 * (24 * 60 * 60);
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Основание);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетНаОплатуПоставщика.Ссылка,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО (ДанныеПервичныхДокументов.Документ = СчетНаОплатуПоставщика.Ссылка)
		|ГДЕ
		|	СчетНаОплатуПоставщика.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетНаОплатуПоставщикаТовары.Номенклатура.НаименованиеПолное КАК НаименованиеТовара,
		|	СчетНаОплатуПоставщикаТовары.Количество КАК Количество,
		|	СчетНаОплатуПоставщикаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаПоКлассификатору
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика.Товары КАК СчетНаОплатуПоставщикаТовары
		|ГДЕ
		|	СчетНаОплатуПоставщикаТовары.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетНаОплатуПоставщикаТовары.НомерСтроки";
		
		МассивРезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ДанныеОснования = МассивРезультатЗапроса[0].Выбрать();
		ДанныеОснования.Следующий();
		
		Товары.Загрузить(МассивРезультатЗапроса[1].Выгрузить());
		
		НаПолучениеОт = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "НаименованиеПолное");
		
		Сделка = Основание;
		
		ПоДокументу = НСтр("ru = '%ВидДокумента% №%Номер% от %Дата% г.'");
		ПоДокументу = СтрЗаменить(ПоДокументу, "%ВидДокумента%", Сделка.Метаданные().Представление());
		
		Если ЗначениеЗаполнено(ДанныеОснования.Номер) И ЗначениеЗаполнено(ДанныеОснования.Дата) Тогда
			ПоДокументу = СтрЗаменить(ПоДокументу, "%Номер%", СокрЛП(ДанныеОснования.Номер));
			ПоДокументу = СтрЗаменить(ПоДокументу, "%Дата%", Формат(ДанныеОснования.Дата, "ДФ='дд ММММ гггг'"));
		Иначе
			ПоДокументу = СтрЗаменить(ПоДокументу, "%Номер%", СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(" ", 15));
			ПоДокументу = СтрЗаменить(ПоДокументу, "%Дата%", СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(" ", 20));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли

