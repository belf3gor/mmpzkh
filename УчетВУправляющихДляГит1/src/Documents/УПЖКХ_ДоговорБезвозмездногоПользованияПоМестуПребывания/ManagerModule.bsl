
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

// Функция возвращая табличный документ на основе макета.
//
Функция ПечатьДоговор(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	РезДокумент = Новый ТабличныйДокумент;
	
	Для Каждого Объект Из МассивОбъектов Цикл
	
		МестоРегистрации = ПолучитьСокрАдрес(Объект.Проживающий.Владелец.Адрес.Владелец, Перечисления.КВП_ВидыАдресов.Здание);
		
		Город = МестоРегистрации.Город;
		
		Город = ?(Город = "", МестоРегистрации.НаселенныйПункт, Город);
		
		Город = ?(Город = "", МестоРегистрации.Регион, Город);
		
		ТабДок = Новый ТабличныйДокумент;
		Макет = ПолучитьМакет(ИмяМакета);
		
		Область = Макет.ПолучитьОбласть("Область");
		
		Область.Параметры.Дата = Объект.Дата;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УПЖКХ_СобственникиПомещенийСрезПоследних.НомерДокумента,
		|	УПЖКХ_СобственникиПомещенийСрезПоследних.ДатаДокумента
		|ИЗ
		|	РегистрСведений.УПЖКХ_СобственникиПомещений.СрезПоследних(
		|			,
		|			Собственник = &Собственник
		|				И Помещение = &Помещение
		|				И Действует) КАК УПЖКХ_СобственникиПомещенийСрезПоследних";
		
		Запрос.УстановитьПараметр("Помещение", Объект.ЛицевойСчет.Адрес);
		ТекОтветственныйСобственник = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьОтветственногоСобственникаЛицевогоСчета(Объект.ЛицевойСчет, Объект.Дата);
		Если Не ТекОтветственныйСобственник = Неопределено Тогда
			ТекФизЛицо = ТекОтветственныйСобственник.ФизЛицо;
		Иначе
			ТекФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли;
		Запрос.УстановитьПараметр("Собственник", ТекФизЛицо);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Область.Параметры.РеквизитыДоговора = ПолучитьПредставлениеДокументаСобственности(Выборка.НомерДокумента, Выборка.ДатаДокумента);
		КонецЕсли;
		
		Ссудодатель = УПЖКХ_ТиповыеМетодыВызовСервера.ДанныеФизЛица(Объект.Организация, ТекФизЛицо, Объект.Дата, Ложь);
		Ссудополучатель = УПЖКХ_ТиповыеМетодыВызовСервера.ДанныеФизЛица(Объект.Организация, Объект.Проживающий.ФизЛицо, Объект.Дата, Ложь);
		
		АдресФиз = УПЖКХ_ТиповыеМетодыСервер.ПолучитьКонтактнуюИнформацияОбъекта(ТекФизЛицо, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
		Область.Параметры.АдресФиз = АдресФиз;
		
		Запрос = Новый Запрос;
		Запрос.Текст = Документы.УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.ПолучитьТекстЗапросаПоКонтактнойИнформацииСправочникаЖильцы();
		
		Запрос.УстановитьПараметр("Объект", Объект.Проживающий);
		Запрос.УстановитьПараметр("ТипКИ",  Перечисления.ТипыКонтактнойИнформации.Адрес);
		Запрос.УстановитьПараметр("ВидКИ",  Справочники.ВидыКонтактнойИнформации.УПЖКХ_АдресПрибытияЖильца);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		АдресП = "";
		Если Выборка.Следующий() Тогда
			АдресП = Выборка.Представление; 
			Область.Параметры.АдресП = АдресП; 
			
		Иначе
			АдресП = "____________________________________________";
			Область.Параметры.АдресП = АдресП;
			
		КонецЕсли;
		
		Область.Параметры.Город = Город;
		Область.Параметры.ФИО = Ссудодатель.Представление;
		Область.Параметры.ГодРождения = Год(ТекФизЛицо.ДатаРождения);
		Область.Параметры.Серия = Ссудодатель.Серия;
		Область.Параметры.Номер = Ссудодатель.Номер;
		Область.Параметры.КемВыдан = Ссудодатель.КемВыдан;
		Область.Параметры.КогдаВыдан = Формат(Ссудодатель.ДатаВыдачи,"ДФ=dd.MM.yyyy");
		
		Область.Параметры.ФИОП = Ссудополучатель.Представление;
		Область.Параметры.ГодРожденияП = Год(Объект.Проживающий.ФизЛицо.ДатаРождения);
		Область.Параметры.СерияП = Ссудополучатель.Серия;
		Область.Параметры.НомерП = Ссудополучатель.Номер;
		Область.Параметры.КемВыданП = Ссудополучатель.КемВыдан;
		Область.Параметры.КогдаВыданП = Формат(Ссудополучатель.ДатаВыдачи,"ДФ=dd.MM.yyyy");
		
		Область.Параметры.Адрес = ""+Объект.ЛицевойСчет.Адрес.Владелец+", "+Объект.ЛицевойСчет.Адрес;
		Область.Параметры.СрокПребывания = Объект.СрокПребывания;
		//Область.Параметры.ДатаНачала = "________________";
		//Область.Параметры.ДатаКонца =  "________________";
			
		
		ФИОПаспорт =  Ссудодатель.Фамилия +" "+Ссудодатель.Имя+" "+Ссудодатель.Отчество
		+". "+Ссудодатель.ВидДокумента+" Серия:"+Ссудодатель.Серия+" Номер:"+Ссудодатель.Номер
		+" выдан "+Ссудодатель.КемВыдан+" "+Формат(Ссудодатель.ДатаВыдачи,"ДФ=dd.MM.yyyy")
		+". Зарегистрирован по адресу:"+АдресФиз;
		
		Область.Параметры.ФИОПаспорт = ФИОПаспорт;
		
		
		ФИОПаспортП = Ссудополучатель.Фамилия +" "+Ссудополучатель.Имя+" "+Ссудополучатель.Отчество
		+". "+Ссудополучатель.ВидДокумента+" Серия:"+Ссудополучатель.Серия+" Номер:"+Ссудополучатель.Номер
		+" выдан "+Ссудополучатель.КемВыдан+" "+Формат(Ссудополучатель.ДатаВыдачи,"ДФ=dd.MM.yyyy")
		+". Зарегистрирован по адресу:"+АдресП;
		
		Область.Параметры.ФИОПаспортП = ФИОПаспортП;
		
		ТабДок.Вывести(Область);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		РезДокумент.Вывести(ТабДок);
		
	КонецЦикла;
	
	РезДокумент.ТолькоПросмотр = Ложь;
	РезДокумент.ОтображатьСетку = Ложь;
	РезДокумент.ОтображатьЗаголовки = Ложь;
	
	Возврат РезДокумент;
	
КонецФункции	

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "Договор") Тогда
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Договор", "Договор безвозмездного пользования", ПечатьДоговор(МассивОбъектов, ОбъектыПечати, "ДоговорБезвозмездногоПользования"));
	КонецЕсли
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли