#Область ОбработчикиСобытий

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	смсОбщегоНазначения.Заполнить(ЭтотОбъект);
	
КонецПроцедуры

// Обработчик события "ПередЗаписью" документа.
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Движения по регистру формируются вручную через подписку на событие.
	// Поэтому документ сам не должен записывать движения.
	Движения.смсСтатистикаОтправкиСообщений.Записывать = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет таблицу получателей по отбору.
//
// Параметры:
//  ОписаниеОшибки - Строка - описание ошибки при заполнении таблицы получателей.
//  КомпоновщикНастроек - КомпоновщикНастроекКомпоновкиДанных - связь настроек
//                        компоновки данных и схемы компоновки.
//
// Возвращаемое значение:
//   Булево - Истина, если удалось заполнить таблицу получателей.
//
Функция ЗаполнитьПолучателей(ОписаниеОшибки, КомпоновщикНастроек) Экспорт
	
	// Передадим дополнительные параметры
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДатаДокумента", ЭтотОбъект.Дата);
	
	ТаблицаПолучателей = смсПравилаОтбораПолучателей.ПолучитьСписокПолучателей(КомпоновщикНастроек.ПолучитьНастройки(), ДополнительныеПараметры);
	
	Если ТаблицаПолучателей = Неопределено Тогда
		ОписаниеОшибки = "Для формирования списка получателей необходимо очистить и повторно заполнить правила отбора";
		Возврат Ложь;
	КонецЕсли;
	
	ЭтотОбъект.Получатели.Очистить();
	
	Для Каждого Получатель Из ТаблицаПолучателей Цикл
		
		НовыйПолучатель = ЭтотОбъект.Получатели.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйПолучатель, Получатель);
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // ЗаполнитьПолучателей(ОписаниеОшибки)

// Заполняет сообщения получателям по отбору.
//
// Параметры:
//  ЕстьРучнаяКорректировка - Булево - истина, если в таблицу получателей
//                            были добавлены или отредактированы данные о получателях в ручную.
//  ЗаменятьРучнуюКорректировку - Булево - истина, если необходимо заменить
//                                отредактированные данные в ручную, данными по отбору.
//
Процедура ЗаполнитьСообщения(ЕстьРучнаяКорректировка, ЗаменятьРучнуюКорректировку) Экспорт
	
	// Указываем какие колонки необходимо выгрузить
	ВыгрузитьКолонки = "Получатель,ТекстовоеСообщение,КлючДополнительнойИдентификации";
	// Создаем список строк которые нужно заполнить
	Если ЕстьРучнаяКорректировка И (НЕ ЗаменятьРучнуюКорректировку) Тогда
		// Выбираем только те строки у которых не стоит флаг ручной корректировки
		МассивСтрок = Новый Массив;
		Для Каждого СтрокаПолучатель Из ЭтотОбъект.Получатели Цикл
			Если СтрокаПолучатель.РучнаяКорректировка Тогда
				Продолжить;
			КонецЕсли; 
			МассивСтрок.Добавить(СтрокаПолучатель);
		КонецЦикла; 
		ТаблицаПолучателей = ЭтотОбъект.Получатели.Выгрузить(МассивСтрок, ВыгрузитьКолонки);
	Иначе
		// Заполняем текст для всех получателей
		ТаблицаПолучателей = ЭтотОбъект.Получатели.Выгрузить(, ВыгрузитьКолонки);
	КонецЕсли; 
	
	// Передадим дополнительные параметры
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДатаДокумента", ЭтотОбъект.Дата);
	
	смсРаботаСШаблонами.ЗаполнитьЗначенияПараметровШаблона(ТаблицаПолучателей, ЭтотОбъект.Шаблон, ДополнительныеПараметры);
	
	Для Каждого СтрокаПолучатель Из ТаблицаПолучателей Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Получатель",                      СтрокаПолучатель.Получатель);
		СтруктураПоиска.Вставить("КлючДополнительнойИдентификации", СтрокаПолучатель.КлючДополнительнойИдентификации);
		
		НайденныеПолучатели = ЭтотОбъект.Получатели.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого НайденныйПолучатель Из НайденныеПолучатели Цикл
			НайденныйПолучатель.ТекстовоеСообщение = СтрокаПолучатель.ТекстовоеСообщение;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура очищает получателей с некорректными номерами.
//
Процедура ОчиститьПолучателейСНекорректнымиНомерами() Экспорт
	
	МассивСтрокДляУдаления = Новый Массив;
	
	Для Каждого СтрокаПолучатель Из ЭтотОбъект.Получатели Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаПолучатель.НомерТелефона) Или Не смсСервер.НомерТелефонаКорректен(СтрокаПолучатель.НомерТелефона) Тогда
			МассивСтрокДляУдаления.Добавить(СтрокаПолучатель);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекСтрокаУдаления Из МассивСтрокДляУдаления Цикл
		ЭтотОбъект.Получатели.Удалить(ЭтотОбъект.Получатели.Индекс(ТекСтрокаУдаления));
	КонецЦикла;
	
КонецПроцедуры

// Процедура очищает дубли получателей, оставляя только первые из них.
//
Процедура ОчиститьДублиПолучателей() Экспорт
	
	// В запросе получаем строки получателей, которые дублируются.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Получатели.НомерСтроки,
	|	Получатели.Получатель,
	|	Получатели.НомерТелефона
	|ПОМЕСТИТЬ врПолучатели
	|ИЗ
	|	&Получатели КАК Получатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	врПолучатели.НомерСтроки КАК НомерСтроки,
	|	врПолучатели.Получатель КАК Получатель,
	|	врПолучатели.НомерТелефона КАК НомерТелефона
	|ИЗ
	|	врПолучатели КАК врПолучатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ врПолучатели КАК врПолучатели1
	|		ПО врПолучатели.Получатель = врПолучатели1.Получатель
	|			И врПолучатели.НомерТелефона = врПолучатели1.НомерТелефона
	|			И врПолучатели.НомерСтроки <> врПолучатели1.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Получатель,
	|	НомерТелефона,
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Получатели", ЭтотОбъект.Получатели.Выгрузить(, "НомерСтроки,Получатель,НомерТелефона"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПредыдущийПолучатель    = Неопределено;
	ПредыдущийНомерТелефона = Неопределено;
	
	СписокИндексовСтрокДляУдаления = Новый СписокЗначений;
	
	// Обходим всех получателей с учетом сортировки и отмечаем те строки, которые нужно удалить.
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Получатель = ПредыдущийПолучатель
		   И Выборка.НомерТелефона = ПредыдущийНомерТелефона Тогда
			
			// Если это уже 2 и более строка по получателю и номеру телефона,
			// то ее надо удалить, так как это строка-дубль.
			СписокИндексовСтрокДляУдаления.Добавить(Выборка.НомерСтроки - 1);
			
		Иначе
			
			ПредыдущийПолучатель    = Выборка.Получатель;
			ПредыдущийНомерТелефона = Выборка.НомерТелефона;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Сортируем индексы удаляемых строк по убыванию, чтобы удаление произошло корректно.
	СписокИндексовСтрокДляУдаления.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	
	// Удаляем строки по индексу в обратном порядке.
	Для Каждого ТекИндексСтрокиДляУдаления Из СписокИндексовСтрокДляУдаления Цикл
		ЭтотОбъект.Получатели.Удалить(ТекИндексСтрокиДляУдаления.Значение);
	КонецЦикла;
	
КонецПроцедуры

// Проверяет документ на корректность заполнения.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//   Булево - Истина, если корректно заполнен.
//
Функция ПроверитьДокумент() Экспорт
	
	Если ЭтотОбъект.Получатели.Количество() = 0 Тогда
		Если НЕ ЭтотОбъект.СозданАвтоматическойРассылкой Тогда
			смсОбщегоНазначения.СообщитьПользователю("Не заполнены получатели сообщений!");
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	
	// Заполним индивидуальный текст для получателей, если он еще не был заполнен.
	
	ЕстьРучнаяКорректировка = Ложь;
	ЗаменятьРучнуюКорректировку = Ложь;
	
	// Проверка на наличие флага ручной корректировки
	Для Каждого СтрокаПолучатель Из ЭтотОбъект.Получатели Цикл
		Если СтрокаПолучатель.РучнаяКорректировка Тогда
			ЕстьРучнаяКорректировка = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьСообщения(ЕстьРучнаяКорректировка, ЗаменятьРучнуюКорректировку);
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти