#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 15, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Процедура ЗаполнитьСчетаУчетаРасчетов(СчетаУчета = Неопределено, Перезаполнять = Истина, Объект) Экспорт

	Если СчетаУчета = неопределено Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
	КонецЕсли;
	Объект.СчетУчетаРасчетовСКонтрагентом          = ?(Перезаполнять ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетУчетаРасчетовСКонтрагентом),
													СчетаУчета.СчетРасчетовПокупателя, Объект.СчетУчетаРасчетовСКонтрагентом);
	Объект.СчетУчетаРасчетовПоАвансамПолученным	= ?(Перезаполнять ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетУчетаРасчетовПоАвансамПолученным),
													СчетаУчета.СчетАвансовПокупателя, Объект.СчетУчетаРасчетовПоАвансамПолученным);
	Объект.СчетУчетаРасчетовЗаПосредническиеУслуги = ?(Перезаполнять ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетУчетаРасчетовЗаПосредническиеУслуги),
													СчетаУчета.СчетРасчетов, Объект.СчетУчетаРасчетовЗаПосредническиеУслуги);
	Объект.СчетУчетаРасчетовПоАвансамВыданным      = ?(Перезаполнять ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетУчетаРасчетовПоАвансамВыданным),
													СчетаУчета.СчетАвансов, Объект.СчетУчетаРасчетовПоАвансамВыданным);

	Объект.СчетУчетаНДС                            = ?(Перезаполнять ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетУчетаНДС),
													ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам, Объект.СчетУчетаНДС);

КонецПроцедуры

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Реализация, ДокументБезНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	ДанныеОбъекта.Реализация = Истина;
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчета") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "Товары" ИЛИ ИмяТабличнойЧасти = "ТоварыВозвращенные" Тогда
		Если ЗначениеЗаполнено(СчетаУчета.СчетПередачи) Тогда
			СтрокаТабличнойЧасти.СчетУчета = СчетаУчета.СчетПередачи;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "ТоварыВозвращенные" и ЗначениеЗаполнено(СчетаУчета.СпособУчетаНДС) Тогда
	
		СтрокаТабличнойЧасти.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
	
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетДоходов) Тогда
		СтрокаТабличнойЧасти.СчетДоходов = СчетаУчета.СчетДоходов;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("Субконто")
		И ЗначениеЗаполнено(СведенияОНоменклатуре.Субконто) Тогда
		
		СтрокаТабличнойЧасти.Субконто = СведенияОНоменклатуре.Субконто;
		
	ИначеЕсли СведенияОНоменклатуре.Свойство("ВидСубконтоТипЗначения")
		И ЗначениеЗаполнено(СведенияОНоменклатуре.ВидСубконтоТипЗначения) Тогда
		
		СтрокаТабличнойЧасти.Субконто =
			СведенияОНоменклатуре.ВидСубконтоТипЗначения.ПривестиЗначение(СтрокаТабличнойЧасти.Субконто);
		
	Иначе
		СтрокаТабличнойЧасти.Субконто = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСПродажи) Тогда
		СтрокаТабличнойЧасти.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетРасходов) Тогда
		СтрокаТабличнойЧасти.СчетРасходов = СчетаУчета.СчетРасходов;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьМаксимальныйКлючСтроки(Покупатели) Экспорт
	
	Если Покупатели.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	СписокКлючей = Новый СписокЗначений;
	СписокКлючей.ЗагрузитьЗначения(Покупатели.Выгрузить(, "КлючСтроки").ВыгрузитьКолонку("КлючСтроки"));
	СписокКлючей.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	
	Возврат СписокКлючей[0].Значение;
	
КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	МассивРеквизитов.Добавить("УдалитьПредъявленСчетФактура");
	МассивРеквизитов.Добавить("УдалитьНомерВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьДатаВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьНДСПредъявленКВычету");
	МассивРеквизитов.Добавить("УдалитьКодВидаОперации");
	МассивРеквизитов.Добавить("УдалитьКодСпособаПолучения");
	
	Возврат МассивРеквизитов;
	
КонецФункции

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетКомиссионераОПродажахТовары.Номенклатура КАК Номенклатура,
	|	ОтчетКомиссионераОПродажахТовары.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетКомиссионераОПродажахУслуги.Номенклатура,
	|	ОтчетКомиссионераОПродажахУслуги.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
	|ГДЕ
	|	ОтчетКомиссионераОПродажахУслуги.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьПодразделениеЗатрат() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажах.Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.ПодразделениеЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И ОтчетКомиссионераОПродажах.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли; 
	
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		ДокументОбъект.ПодразделениеЗатрат = ДокументОбъект.ПодразделениеОрганизации;
		
		НачатьТранзакцию();
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			ТекстОшибки = НСтр("ru = 'Не удалось записать документ.
                                |%1'");
			ОписаниеОшибки = СтрШаблон(ТекстОшибки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(),
				ДокументОбъект.Ссылка, 
				ОписаниеОшибки);
				
			ОтменитьТранзакцию();
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
	
	КонецЦикла; 

КонецПроцедуры

// Определяет в момент действия какого из постановлений по учету НДС создан документ
// Архитектура документа, после принятия постановления 1137 была существенно изменена
// Счета-фактуры выставляются на покупателей комиссионера
// При ведении учета НДС по постановлению 914 комиссионер и покупатель были одним лицом
//
// Параметры
//  ОтчетКомиссионера - ДокументСсылка.ОтчетКомиссионераОПродажах - документ, для которого 
//                     необходимо определить какое постановление действовало при его создании
// Возвращаемое значение:
//  Булево - Истина, если документ создан при ведении учета НДС по постановлению 914
//
Функция ДокументСозданПоПравиламПостановления914(ОтчетКомиссионера) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ОтчетКомиссионера);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка КАК Ссылка,
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент,
	|	ОтчетКомиссионераОПродажахПокупатели.Покупатель,
	|	ОтчетКомиссионераОПродажахПокупатели.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ОтчетКомиссионера
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|ГДЕ
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтчетКомиссионера.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(ВТ_ОтчетКомиссионера.НомерСтроки) КАК КолСтрок
	|ПОМЕСТИТЬ ВТ_КоличествоСтрокПокупатели
	|ИЗ
	|	ВТ_ОтчетКомиссионера КАК ВТ_ОтчетКомиссионера
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтчетКомиссионера.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ВТ_КоличествоСтрокПокупатели.КолСтрок = 1
	|					И ВТ_ОтчетКомиссионера.Контрагент = ВТ_ОтчетКомиссионера.Покупатель
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЗаполненПоСтарому,
	|	ВТ_ОтчетКомиссионера.Ссылка
	|ИЗ
	|	ВТ_ОтчетКомиссионера КАК ВТ_ОтчетКомиссионера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КоличествоСтрокПокупатели КАК ВТ_КоличествоСтрокПокупатели
	|		ПО ВТ_ОтчетКомиссионера.Ссылка = ВТ_КоличествоСтрокПокупатели.Ссылка
	|ГДЕ
	|	ВТ_ОтчетКомиссионера.Ссылка ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтчетКомиссионера.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполненПоСтарому = Выборка.ЗаполненПоСтарому;
	Иначе
		ЗаполненПоСтарому = Ложь;
	КонецЕсли;
	
	Возврат ЗаполненПоСтарому;
	
КонецФункции

// Заполняет реквизиты "Субкомиссионер" и "Счет-фактура субкомиссионера" регистра
// "Реализованные товары комитентов" на основании отчета субкомиссионера
Процедура ЗаполнитьСубкомиссионераИСчетФактуруСубкомиссионераВРегистреРеализованныеТоварыКомитентов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаОтчетыСубкомиссионеров();
	Результат = Запрос.ВыполнитьПакет();
	ОтчетыСубкомиссионеров = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОтчетСубкомиссионера");
	ТекущиеДвиженияОтчетов = Результат[3].Выгрузить();
	
	Пока ОтчетыСубкомиссионеров.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ОтчетыСубкомиссионеров.ОтчетСубкомиссионера) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтчетыСубкомиссионеров.РучнаяКорректировка Тогда
			
			Комментарий = НСтр("ru = 'Отредактированные вручную движения документа не могут быть актуализированы'");
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				ОтчетыСубкомиссионеров.ОтчетСубкомиссионера.Метаданные(),
				ОтчетыСубкомиссионеров.ОтчетСубкомиссионера,
				Комментарий);
			
			Продолжить;
			
		КонецЕсли;
		
		НаборРеализованныеТоварыКомитентов = РегистрыНакопления.РеализованныеТоварыКомитентов.СоздатьНаборЗаписей();
		НаборРеализованныеТоварыКомитентов.Отбор.Регистратор.Установить(ОтчетыСубкомиссионеров.ОтчетСубкомиссионера);
		НаборРеализованныеТоварыКомитентов.Прочитать();
		
		ОбновленныеДвиженияОтчета = НаборРеализованныеТоварыКомитентов.ВыгрузитьКолонки();
		ВыборкаДетальныхЗаписей = ОтчетыСубкомиссионеров.Выбрать();
		
		Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
			
			СтруктураПоиска = Новый Структура();
			СтруктураПоиска.Вставить("Покупатель",     ВыборкаДетальныхЗаписей.Покупатель);
			СтруктураПоиска.Вставить("ДатаРеализации", ВыборкаДетальныхЗаписей.ДатаРеализации);
			СтруктураПоиска.Вставить("Регистратор",    ВыборкаДетальныхЗаписей.ОтчетСубкомиссионера);
			
			ВыручкаПоТекущейСтроке = ВыборкаДетальныхЗаписей.Выручка;
			
			МассивСтрок = ТекущиеДвиженияОтчетов.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрок.Количество() > 0 Тогда
				
				Для Каждого СтрокаДвижений Из МассивСтрок Цикл
					
					Если ВыручкаПоТекущейСтроке = 0 Тогда
						Прервать;
					КонецЕсли;
					
					Если СтрокаДвижений.Выручка = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					СписатьВыручку = Мин(СтрокаДвижений.Выручка, ВыручкаПоТекущейСтроке);
					ВыручкаПоТекущейСтроке = ВыручкаПоТекущейСтроке - СписатьВыручку;
					СтрокаДвижений.Выручка = СтрокаДвижений.Выручка - СписатьВыручку;
					
					НоваяСтрокаДвижений = ОбновленныеДвиженияОтчета.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаДвижений, СтрокаДвижений);
					НоваяСтрокаДвижений.Выручка                    = СписатьВыручку;
					НоваяСтрокаДвижений.СчетФактураСубкомиссионера = ВыборкаДетальныхЗаписей.СчетФактура;
					НоваяСтрокаДвижений.Субкомиссионер             = ВыборкаДетальныхЗаписей.Субкомиссионер;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборРеализованныеТоварыКомитентов.Загрузить(ОбновленныеДвиженияОтчета);
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборРеализованныеТоварыКомитентов);
		
	КонецЦикла;
	
КонецПроцедуры

// Определяет предъявлена ли сумма НДС по документу
//
// Параметры:
// ТекущийДокумент - документ, сумму НДС которого нужно вычислить
//
// Возвращаемое значение:
// Булево - если сумма НДС в документе не нулевая
Функция НаличиеСуммыНДС(ТекущийДокумент) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахТовары.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ОтчетКомиссионераОПродажахТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаНДС
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка = &СсылкаНаДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахУслуги.СуммаНДСВознаграждения,
	|	ОтчетКомиссионераОПродажахУслуги.Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
	|ГДЕ
	|	ОтчетКомиссионераОПродажахУслуги.Ссылка = &СсылкаНаДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахТоварыВозвращенные.СуммаНДСВознаграждения,
	|	ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ОтчетКомиссионераОПродажахТоварыВозвращенные
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = &СсылкаНаДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТаблицаНДС.СуммаНДСВознаграждения) КАК СуммаНДСВознаграждения,
	|	ТаблицаНДС.Ссылка КАК Ссылка
	|ИЗ
	|	ТаблицаНДС КАК ТаблицаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДС.Ссылка";

	Запрос.УстановитьПараметр("СсылкаНаДокумент", ТекущийДокумент);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.СуммаНДСВознаграждения > 0;
	КонецЕсли;

	Возврат Ложь;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Функция ТекстЗапросаОтчетыСубкомиссионеров()
	
	Возврат
	"ВЫБРАТЬ
	|	ТоварыРеализованныеСубкомиссионером.Период,
	|	ТоварыРеализованныеСубкомиссионером.Регистратор,
	|	ТоварыРеализованныеСубкомиссионером.НомерСтроки,
	|	ТоварыРеализованныеСубкомиссионером.Активность,
	|	ТоварыРеализованныеСубкомиссионером.ВидДвижения,
	|	ТоварыРеализованныеСубкомиссионером.Организация,
	|	ТоварыРеализованныеСубкомиссионером.Контрагент,
	|	ТоварыРеализованныеСубкомиссионером.ДоговорКонтрагента,
	|	ТоварыРеализованныеСубкомиссионером.Номенклатура,
	|	ТоварыРеализованныеСубкомиссионером.Покупатель,
	|	ТоварыРеализованныеСубкомиссионером.ДатаРеализации,
	|	ТоварыРеализованныеСубкомиссионером.Количество,
	|	ТоварыРеализованныеСубкомиссионером.Выручка,
	|	ТоварыРеализованныеСубкомиссионером.СуммаПоступления,
	|	ТоварыРеализованныеСубкомиссионером.СуммаНДС,
	|	ТоварыРеализованныеСубкомиссионером.Субкомиссионер,
	|	ТоварыРеализованныеСубкомиссионером.СчетФактураСубкомиссионера
	|ПОМЕСТИТЬ ТоварыРеализованныеСубкомиссионером
	|ИЗ
	|	РегистрНакопления.РеализованныеТоварыКомитентов КАК ТоварыРеализованныеСубкомиссионером
	|ГДЕ
	|	ТоварыРеализованныеСубкомиссионером.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|	И ТоварыРеализованныеСубкомиссионером.Субкомиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ТоварыРеализованныеСубкомиссионером.СчетФактураСубкомиссионера = ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТоварыРеализованныеСубкомиссионером.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетыСубкомиссионеров.Регистратор КАК ОтчетСубкомиссионера,
	|	ОтчетКомиссионераОПродажах.Контрагент КАК Субкомиссионер,
	|	ОтчетКомиссионераОПродажах.РучнаяКорректировка
	|ПОМЕСТИТЬ ОтчетыСубкомиссионеров
	|ИЗ
	|	ТоварыРеализованныеСубкомиссионером КАК ОтчетыСубкомиссионеров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|		ПО ОтчетыСубкомиссионеров.Регистратор = ОтчетКомиссионераОПродажах.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОтчетСубкомиссионера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахПокупатели.Покупатель,
	|	ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ,
	|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ КАК ДатаРеализации,
	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура,
	|	СУММА(ОтчетКомиссионераОПродажахТовары.Сумма) КАК Выручка,
	|	ОтчетыСубкомиссионеров.ОтчетСубкомиссионера КАК ОтчетСубкомиссионера,
	|	ОтчетыСубкомиссионеров.Субкомиссионер,
	|	ОтчетКомиссионераОПродажахПокупатели.НомерСтроки,
	|	МАКСИМУМ(ОтчетыСубкомиссионеров.РучнаяКорректировка) КАК РучнаяКорректировка
	|ИЗ
	|	ОтчетыСубкомиссионеров КАК ОтчетыСубкомиссионеров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|			ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ОтчетКомиссионераОПродажахТовары.КлючСтроки
	|				И ОтчетКомиссионераОПродажахПокупатели.Ссылка = ОтчетКомиссионераОПродажахТовары.Ссылка
	|		ПО ОтчетыСубкомиссионеров.ОтчетСубкомиссионера = ОтчетКомиссионераОПродажахПокупатели.Ссылка
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТовары.СчетУчета.Забалансовый
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура,
	|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ,
	|	ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ,
	|	ОтчетКомиссионераОПродажахПокупатели.Покупатель,
	|	ОтчетыСубкомиссионеров.ОтчетСубкомиссионера,
	|	ОтчетыСубкомиссионеров.Субкомиссионер,
	|	ОтчетКомиссионераОПродажахПокупатели.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетКомиссионераОПродажахПокупатели.НомерСтроки
	|ИТОГИ ПО
	|	ОтчетСубкомиссионера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыРеализованныеСубкомиссионером.Период,
	|	ТоварыРеализованныеСубкомиссионером.Регистратор,
	|	ТоварыРеализованныеСубкомиссионером.НомерСтроки КАК НомерСтроки,
	|	ТоварыРеализованныеСубкомиссионером.Активность,
	|	ТоварыРеализованныеСубкомиссионером.ВидДвижения,
	|	ТоварыРеализованныеСубкомиссионером.Организация,
	|	ТоварыРеализованныеСубкомиссионером.Контрагент,
	|	ТоварыРеализованныеСубкомиссионером.ДоговорКонтрагента,
	|	ТоварыРеализованныеСубкомиссионером.Номенклатура,
	|	ТоварыРеализованныеСубкомиссионером.Покупатель,
	|	ТоварыРеализованныеСубкомиссионером.ДатаРеализации,
	|	ТоварыРеализованныеСубкомиссионером.Количество,
	|	ТоварыРеализованныеСубкомиссионером.Выручка,
	|	ТоварыРеализованныеСубкомиссионером.СуммаПоступления,
	|	ТоварыРеализованныеСубкомиссионером.СуммаНДС,
	|	ТоварыРеализованныеСубкомиссионером.Субкомиссионер,
	|	ТоварыРеализованныеСубкомиссионером.СчетФактураСубкомиссионера
	|ИЗ
	|	ТоварыРеализованныеСубкомиссионером КАК ТоварыРеализованныеСубкомиссионером
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
КонецФункции

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.УстановитьПараметр("СчетВыручка", ПланыСчетов.Хозрасчетный.Выручка);
	Запрос.УстановитьПараметр("СчетаТоваровКомитентов", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ТоварыПринятыеНаКомиссию));
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("РасчетыВВалюте",  Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета);
	
	Запрос.УстановитьПараметр("МассивСчетовДляГТД", УчетНДСВызовСервераПовтИсп.СчетаУчетаДляГТД());
	
	Запрос.УстановитьПараметр("СуммаВключаетНДС", Реквизиты.СуммаВключаетНДС);
	Запрос.УстановитьПараметр("СтавкаНДСВознаграждения", Реквизиты.СтавкаНДСВознаграждения);
	
	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
	Реквизиты.Вставить("ПрименяетсяУСН",
		УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПрименяетсяУСНПатент",
		УчетнаяПолитика.ПрименяетсяУСНПатент(Реквизиты.Организация, Реквизиты.Период));
		
	Запрос.УстановитьПараметр("ПрименяетсяУСН",        Реквизиты.ПрименяетсяУСН);
	Запрос.УстановитьПараметр("ПрименяетсяУСНПатент",  Реквизиты.ПрименяетсяУСНПатент);
	
	Запрос.УстановитьПараметр("Субсчета10",
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	
	Реквизиты.Вставить("ПлательщикНДС",  УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПлательщикНДФЛ", УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период));
	
	Если Реквизиты.ПлательщикНДФЛ Тогда
		Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП",
			УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период));
		Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа",
			УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("РасчетыВВалюте",         Реквизиты.РасчетыВВалюте);
	Запрос.УстановитьПараметр("УдержатьВознаграждение", Реквизиты.УдержатьВознаграждение);
	Запрос.УстановитьПараметр("СинонимТовары",          НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("СинонимУслуги",          НСтр("ru = 'Услуги'"));
	Запрос.УстановитьПараметр("Субсчета91",
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеРасходы));
	Запрос.УстановитьПараметр("МассивКодовРеализацийЗаРубеж",
		Справочники.КодыОперацийРаздела7ДекларацииПоНДС.КодыРеализацииУслугЗаРубежом());
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаСписаниеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВозвратыТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРасходыУСНВозвраты(НомераТаблиц, ПараметрыПроведения, Реквизиты) 
		+ ТекстЗапросаЗачетАвансовНаВозврат(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаНДСВозвраты(НомераТаблиц, ПараметрыПроведения, Реквизиты) 
		+ ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаЗачетАвансовКомитентов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаТоварыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаЗачетАвансовВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПогашениеЗадолженностиВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеализацияУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРасходовПоВознаграждениюУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаТаблицаДенежныеСредства(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Если Не ПустаяСтрока(Запрос.Текст) Тогда		
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого КлючИЗначение Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(КлючИЗначение.Ключ, Результат[КлючИЗначение.Значение].Выгрузить());
		КонецЦикла;		
	КонецЕсли;
	

	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаВозвратыТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВозвраты Тогда
		ПараметрыПроведения.Вставить("ВозвратыТоваровРеквизиты",			Неопределено);
		ПараметрыПроведения.Вставить("ВозвратыТоваровТаблицаТовары",		Неопределено);
		ПараметрыПроведения.Вставить("ВозвратыТоваровСчетаУчета",			Неопределено);
		ПараметрыПроведения.Вставить("ВозвратыТоваровНоменклатура",			Неопределено);
		ПараметрыПроведения.Вставить("ВозвратыТоваровТаблицаДокумента",		Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВозвратыТоваровРеквизиты", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаВозвратыСделки", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВозвратыТоваровТаблицаТовары", 	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВозвратыТоваровСчетаУчета", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВозвратыТоваровНоменклатура",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВозвратыТоваровТаблицаДокумента",НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	ТаблицаВозвраты.Сделка КАК Сделка,
	|	ТаблицаВозвраты.Сделка КАК Партия,
	|	ТаблицаВозвраты.Сделка.Дата КАК ПартияДата,
	|	""ОтчетКомиссионераОПродажах"" КАК ВидОперации,
	|	НЕОПРЕДЕЛЕНО КАК ТипСклада,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	ТаблицаВозвраты.УказанДокументОтгрузки КАК УказанДокументОтгрузки,
	|	ВЫБОР
	|		КОГДА ТаблицаВозвраты.УказанДокументОтгрузки
	|			ТОГДА ТаблицаВозвраты.ДатаРеализации
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаДокументаРеализации,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	""Возврат товаров от покупателя"" КАК Содержание,
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВозвраты.Сделка,
	|	ТаблицаВозвраты.ДатаРеализации
	|ПОМЕСТИТЬ ТаблицаВозвратыСделки
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|ГДЕ
	|	ТаблицаВозвраты.УказанДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ТоварыВозвращенные"" КАК ИмяСписка,
	|	""Товары возвращенные"" КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаВозвраты.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.Контрагент КАК Склад,
	|	ТаблицаВозвраты.СчетУчета КАК СчетУчета,
	|	ТаблицаВозвраты.СчетУчетаЗабалансовый,
	|	ТаблицаВозвраты.СчетУчетаЗабалансовый КАК Комиссионный,
	|	ТаблицаВозвраты.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаВозвраты.УказанДокументОтгрузки
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Реквизиты.Ссылка
	|	КОНЕЦ КАК Партия,
	|	ТаблицаВозвраты.Сделка,
	|	ТаблицаВозвраты.Себестоимость,
	|	ТаблицаВозвраты.Количество,
	|	ТаблицаВозвраты.СчетРасходов КАК КорСчетСписания,
	|	ТаблицаВозвраты.Субконто КАК КорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	1 КАК ВидКорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	ВЫБОР
	|		КОГДА ТаблицаВозвраты.КорПодразделение ЕСТЬ NULL 
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		КОГДА ТаблицаВозвраты.КорПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ ТаблицаВозвраты.КорПодразделение
	|	КОНЕЦ КАК КорПодразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицаВозвраты.Себестоимость КАК СуммаСписания,
	|	ТаблицаВозвраты.Себестоимость КАК СуммаСписанияНУ,
	|	0 КАК СуммаСписанияПР,
	|	0 КАК СуммаСписанияВР,
	|	ТаблицаВозвраты.Себестоимость КАК СуммаКорСписания,
	|	ТаблицаВозвраты.Себестоимость КАК СуммаКорСписанияНУ,
	|	0 КАК СуммаКорСписанияПР,
	|	0 КАК СуммаКорСписанияВР,
	|	ТаблицаВозвраты.УказанДокументОтгрузки КАК УказанДокументОтгрузки,
	|	ТаблицаПокупатели.СчетФактура,
	|	ТаблицаПокупатели.ВыставленСФ,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаПокупатели.ДатаСФ
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ДатаСФ
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПокупателиВозврат КАК ТаблицаПокупатели
	|		ПО ТаблицаВозвраты.КлючСтроки = ТаблицаПокупатели.КлючСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВозвраты.СчетУчета,
	|	ТаблицаВозвраты.Сделка КАК Сделка,
	|	ТаблицаВозвраты.СчетУчетаЗабалансовый КАК Комиссионный
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВозвраты.Номенклатура КАК Номенклатура,
	|	ТаблицаВозвраты.Сделка КАК Сделка
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСписка,
	|	""ТоварыВозвращенные"" КАК ИмяСписка,
	|	ТаблицаВозвраты.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВозвраты.Номенклатура КАК Номенклатура,
	|	ТаблицаВозвраты.Количество КАК Количество,
	|	ТаблицаВозвраты.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаВозвраты.СуммаРуб КАК СуммаРуб,
	|	ТаблицаВозвраты.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаВозвраты.СуммаРуб - ТаблицаВозвраты.СуммаНДСРуб КАК СуммаБезНДСРуб,
	|	ТаблицаВозвраты.СуммаРуб КАК СуммаБУ,
	|	ТаблицаВозвраты.СуммаРуб КАК СуммаНУ,
	|	ТаблицаВозвраты.СчетУчета КАК СчетУчета,
	|	ТаблицаВозвраты.СчетДоходов КАК СчетДоходов,
	|	ТаблицаВозвраты.Субконто КАК Субконто,
	|	ТаблицаВозвраты.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВозвраты.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаВозвраты.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаРасчетовСКомитентом,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	ТаблицаВозвраты.Сделка КАК КорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.Покупатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ТаблицаПокупатели.Покупатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Ссылка КАК ДокументРасчетовСКомитентом,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаПокупатели.ДатаСФ
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ДатаРеализации,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	ТаблицаПокупатели.СчетФактура,
	|	ТаблицаПокупатели.ВыставленСФ,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаПокупатели.ДатаСФ
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ДатаСФ,
	|	ТаблицаВозвраты.Сделка
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПокупателиВозврат КАК ТаблицаПокупатели
	|		ПО ТаблицаВозвраты.КлючСтроки = ТаблицаПокупатели.КлючСтроки";
	
	
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЗачетАвансовНаВозврат(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВозвраты  Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовНаВозвратРеквизиты",			Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовНаВозвратТаблицаДокумента",	Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовНаВозвратТаблицаАвансов",		Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСуммВзаиморасчетовВозврат",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовНаВозвратРеквизиты",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовНаВозвратТаблицаДокумента",	НомераТаблиц.Количество());
	// таблица документов по которым возвращается задолженность
	НомераТаблиц.Вставить("ЗачетАвансовНаВозвратТаблицаАвансов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ТаблицаВозвраты.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаВозвраты.СуммаРуб) КАК СуммаРуб,
	|	СУММА(0) КАК СуммаВзаиморасчетовПатент,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаВозвраты.ДоходЕНВД
	|					И НЕ ТаблицаВозвраты.ЭтоКомиссия
	|				ТОГДА ТаблицаВозвраты.СуммаВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВзаиморасчетовЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаВозвраты.ЭтоКомиссия
	|				ТОГДА ТаблицаВозвраты.СуммаВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВзаиморасчетовКомитента,
	|	СУММА(0) КАК СуммаВзаиморасчетовТорговыйСбор,
	|	ТаблицаВозвраты.Сделка
	|ПОМЕСТИТЬ ТаблицаСуммВзаиморасчетовПоВозвратам
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВозвраты.Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.ПоДокументу) КАК СпособЗачетаАвансов,
	|	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
	|	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ИСТИНА КАК ЭтоВозврат,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	ТаблицаВозвраты.Сделка,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамВыданным,
	|	""Возврат товаров от покупателя"" КАК Содержание
	|ИЗ
	|	ТаблицаВозвратыСделки КАК ТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСуммВзаиморасчетов.Сделка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетАвансов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамПолученным КАК СчетРасчетов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов,
	|	ТаблицаСуммВзаиморасчетов.СуммаРуб,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммВзаиморасчетовПоВозвратам КАК ТаблицаСуммВзаиморасчетов
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	ТаблицаВозвраты.Сделка КАК ДокументАванса,
	|	СУММА(ТаблицаВозвраты.СуммаВзаиморасчетов) КАК СуммаЗачета
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	ТаблицаВозвраты.Сделка" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаНДСВозвраты(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВозвраты Тогда
		ПараметрыПроведения.Вставить("ТоварыСГТД", Неопределено);
		ПараметрыПроведения.Вставить("ТоварыНДС",  Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТоварыСГТД", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ТоварыВозврат"" КАК ИмяСписка,
	|	""Товары"" КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.СтранаПроисхождения,
	|	""Возврат товаров от покупателя"" КАК Содержание
	|ИЗ
	|	ТаблицаВозвраты КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И ТаблицаТовары.СчетУчета В (&МассивСчетовДляГТД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если НЕ Реквизиты.ПлательщикНДС Тогда
		ПараметрыПроведения.Вставить("ТоварыНДС",  Неопределено);
		Возврат ТекстЗапроса;
	КонецЕсли;
	
	
	НомераТаблиц.Вставить("ТоварыНДС", НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапроса
		+ "ВЫБРАТЬ
		  |	""ТоварыВозвращенные"" КАК ИмяСписка,
		  |	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		  |	ВЫБОР 
		  |		КОГДА ТаблицаВозвраты.ВыставленСФ 
		  |			ТОГДА ТаблицаТовары.СпособУчетаНДС
		  |		ИНАЧЕ Значение(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету)
		  |	КОНЕЦ КАК СпособУчетаНДС,
		  |	ВЫБОР
		  |		КОГДА ТаблицаВозвраты.ВыставленСФ
		  |			ТОГДА ТаблицаВозвраты.СчетФактура
		  |		ИНАЧЕ Значение(Документ.СчетФактураПолученный.ПустаяСсылка)
		  |	КОНЕЦ КАК СчетФактура
		  |ИЗ
		  |	Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ТаблицаТовары
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ТаблицаВозвраты
		  |		ПО ТаблицаТовары.Ссылка = ТаблицаВозвраты.Ссылка
		  |			И ТаблицаТовары.КлючСтроки = ТаблицаВозвраты.КлючСтроки
		  |ГДЕ
		  |	ТаблицаТовары.Ссылка = &Ссылка
		  |
		  |УПОРЯДОЧИТЬ ПО
		  |	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаРасходыУСНВозвраты(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПрименяетсяУСНДоходыМинусРасходы
		ИЛИ НЕ Реквизиты.ЕстьВозвраты Тогда
		ПараметрыПроведения.Вставить("УСНРеквизиты",       Неопределено);
		ПараметрыПроведения.Вставить("УСНТаблицаРасходов", Неопределено);
		ПараметрыПроведения.Вставить("УСНРеквизитыСделки", Неопределено);
		Возврат "";
	КонецЕсли;
	
		// таблицы, когда партия не указана
		НомераТаблиц.Вставить("УСНРеквизиты",       НомераТаблиц.Количество());
		НомераТаблиц.Вставить("УСНТаблицаРасходов", НомераТаблиц.Количество());
		// таблица с указанными партиями возврата
		НомераТаблиц.Вставить("УСНРеквизитыСделки", НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ДоговорКонтрагента,
		|	Реквизиты.ВидДоговора,
		|	Реквизиты.ВалютаВзаиморасчетов КАК Валюта,
		|	Реквизиты.УчетАгентскогоНДС,
		|	ИСТИНА КАК ЭтоВозврат,
		|	ЛОЖЬ КАК РасходыПредпринимателя
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура) КАК ВидРасхода,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.НаРеализации) КАК СтатусыПартийУСН,
		|	ТаблицаВозвраты.Номенклатура КАК ЭлементРасхода,
		|	ВЫБОР
		|		КОГДА ТаблицаВозвраты.СчетУчета В (&Субсчета10)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоТовар,
		|	ВЫБОР
		|		КОГДА ТаблицаВозвраты.СчетУчета В (&Субсчета10)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоМатериал,
		|	ТаблицаВозвраты.СчетУчета КАК СчетУчета,
		|	ТаблицаВозвраты.Ссылка КАК Партия,
		|	ТаблицаВозвраты.Количество КАК Количество,
		|	ТаблицаВозвраты.Себестоимость КАК Себестоимость,
		|	ТаблицаВозвраты.Себестоимость КАК Сумма,
		|	0 КАК НДС,
		|	ТаблицаВозвраты.ОтражениеВУСН КАК ОтражениеВУСН
		|ИЗ
		|	ТаблицаВозвраты КАК ТаблицаВозвраты
		|ГДЕ
		|	НЕ ТаблицаВозвраты.УказанДокументОтгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаВозвраты.ДатаРеализации КАК Дата,
		|	ТаблицаВозвраты.ДатаРеализации КАК Период,
		|	ТаблицаВозвраты.Сделка КАК Ссылка,
		|	ТаблицаВозвраты.Сделка КАК Регистратор,
		|	Реквизиты.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки
		|ИЗ
		|	ТаблицаВозвратыСделки КАК ТаблицаВозвраты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьТовары) КАК ЕстьТовары,
	|	МАКСИМУМ(СоставДокумента.ЕстьТоварыКомитентов) КАК ЕстьТоварыКомитентов,
	|	МАКСИМУМ(СоставДокумента.ЕстьУслуги) КАК ЕстьУслуги,
	|	МАКСИМУМ(СоставДокумента.ЕстьВознаграждение) КАК ЕстьВознаграждение,
	|	МАКСИМУМ(СоставДокумента.ЕстьВозвраты) КАК ЕстьВозвраты
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьТовары,
	|		ЛОЖЬ КАК ЕстьТоварыКомитентов,
	|		ЛОЖЬ КАК ЕстьУслуги,
	|		ЛОЖЬ КАК ЕстьВознаграждение,
	|		ЛОЖЬ КАК ЕстьВозвраты
	|	ИЗ
	|		Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|		И ТаблицаДокумента.СчетУчета В(&СчетаТоваровКомитентов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ОтчетКомиссионераОПродажах.Услуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|		И ТаблицаДокумента.СуммаВознаграждения <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ОтчетКомиссионераОПродажах.Услуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|		И ТаблицаДокумента.СуммаВознаграждения <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.СтавкаНДСВознаграждения КАК СтавкаНДСВознаграждения,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.УдержатьВознаграждение КАК УдержатьВознаграждение,
	|	Реквизиты.СчетУчетаЗатрат КАК СчетУчетаЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.Субконто1 КАК Субконто1,
	|	Реквизиты.Субконто2 КАК Субконто2,
	|	Реквизиты.Субконто3 КАК Субконто3,
	|	Реквизиты.СпособУчетаНДС КАК СпособУчетаНДС,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамПолученным КАК СчетУчетаРасчетовПоАвансамПолученным,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамВыданным КАК СчетУчетаРасчетовПоАвансамВыданным,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги КАК СчетУчетаРасчетовЗаПосредническиеУслуги,
	|	Реквизиты.СчетУчетаНДС КАК СчетУчетаНДС,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС КАК КодОперацииПоСделке,
	|	ЛОЖЬ КАК НДСИсчисляетсяНалоговымАгентом,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодОперацииПоСделкеСоответствуетСт149НКРФ
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|		ПО Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.СтавкаНДСВознаграждения КАК СтавкаНДСВознаграждения,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.УдержатьВознаграждение КАК УдержатьВознаграждение,
	|	Реквизиты.СчетУчетаЗатрат КАК СчетУчетаЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.Субконто1 КАК Субконто1,
	|	Реквизиты.Субконто2 КАК Субконто2,
	|	Реквизиты.Субконто3 КАК Субконто3,
	|	Реквизиты.СпособУчетаНДС КАК СпособУчетаНДС,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамПолученным КАК СчетУчетаРасчетовПоАвансамПолученным,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамВыданным КАК СчетУчетаРасчетовПоАвансамВыданным,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги КАК СчетУчетаРасчетовЗаПосредническиеУслуги,
	|	Реквизиты.СчетУчетаНДС КАК СчетУчетаНДС,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТовары, ЛОЖЬ) КАК ЕстьТовары,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТоварыКомитентов, ЛОЖЬ) КАК ЕстьТоварыКомитентов,
	|	ЕСТЬNULL(СоставДокумента.ЕстьУслуги, ЛОЖЬ) КАК ЕстьУслуги,
	|	ЕСТЬNULL(СоставДокумента.ЕстьВозвраты, ЛОЖЬ) КАК ЕстьВозвраты,
	|	ЕСТЬNULL(СоставДокумента.ЕстьВознаграждение, ЛОЖЬ) КАК ЕстьВознаграждение,
	|	Реквизиты.КодОперацииПоСделке КАК КодОперацииПоСделке,
	|	Реквизиты.НДСИсчисляетсяНалоговымАгентом КАК НДСИсчисляетсяНалоговымАгентом
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)

	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьУслуги ИЛИ Реквизиты.ЕстьВозвраты Тогда	
		НомераТаблиц.Вставить("ВременнаяТаблицаСчетаЕНВД", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	СчетаДоходовИРасходовЕНВД.Счет
		|ПОМЕСТИТЬ СчетаЕНВД
		|ИЗ
		|	РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
		|ГДЕ
		|	СчетаДоходовИРасходовЕНВД.Счет В ИЕРАРХИИ(&СчетВыручка)
		|	И НЕ СчетаДоходовИРасходовЕНВД.Счет.ЗапретитьИспользоватьВПроводках"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьТовары Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаТовары.КлючСтроки КАК КлючСтроки,
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Количество,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.СтранаПроисхождения,
		|	ТаблицаТовары.СчетУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчета В (&СчетаТоваровКомитентов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомиссия,
		|	ТаблицаТовары.СчетУчетаНДСПоРеализации,
		|	ТаблицаТовары.СчетДоходов,
		|	ВЫБОР
		|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ТаблицаТовары.СчетРасходов,
		|	ТаблицаТовары.Субконто,
		|	ТаблицаТовары.ДокументОприходования,
		|	ТаблицаТовары.Себестоимость,
		|	ТаблицаТовары.СуммаВознаграждения,
		|	СправочникНоменклатура.КодРаздел7ДекларацииНДС,
		|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
		|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
		|		ПО ТаблицаТовары.СчетДоходов = СчетаЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
		|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьВозвраты Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаВозвраты", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаВозвращенныеТовары.КлючСтроки КАК КлючСтроки,
		|	ТаблицаВозвращенныеТовары.Ссылка,
		|	ТаблицаВозвращенныеТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаВозвращенныеТовары.Номенклатура,
		|	ТаблицаВозвращенныеТовары.Количество,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаВозвращенныеТовары.Сумма
		|		ИНАЧЕ ТаблицаВозвращенныеТовары.Сумма + ТаблицаВозвращенныеТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаВозвращенныеТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаВозвращенныеТовары.Сумма
		|		ИНАЧЕ ТаблицаВозвращенныеТовары.СуммаВознаграждения + ТаблицаВозвращенныеТовары.СуммаНДСВознаграждения
		|	КОНЕЦ КАК СуммаВознаграждения,
		|	ТаблицаВозвращенныеТовары.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаВозвращенныеТовары.Сумма
		|		ИНАЧЕ ТаблицаВозвращенныеТовары.Сумма + ТаблицаВозвращенныеТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ВЫРАЗИТЬ(ТаблицаВозвращенныеТовары.СуммаНДС КАК ЧИСЛО(15, 2)) КАК СуммаНДСРуб,
		|	ТаблицаВозвращенныеТовары.СтавкаНДС,
		|	ТаблицаВозвращенныеТовары.НомерГТД,
		|	ТаблицаВозвращенныеТовары.СтранаПроисхождения,
		|	ТаблицаВозвращенныеТовары.СчетУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаВозвращенныеТовары.СчетУчета В (&СчетаТоваровКомитентов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомиссия,
		|	ТаблицаВозвращенныеТовары.СчетУчетаНДСПоРеализации,
		|	ТаблицаВозвращенныеТовары.СчетДоходов,
		|	ВЫБОР
		|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ТаблицаВозвращенныеТовары.СчетРасходов,
		|	ТаблицаВозвращенныеТовары.Субконто,
		|	ТаблицаВозвращенныеТовары.Себестоимость,
		|	ТаблицаВозвраты.Сделка,
		|	ВЫБОР
		|		КОГДА ТаблицаВозвраты.Сделка = ЗНАЧЕНИЕ(Документ.ОтчетКомиссионераОПродажах.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК УказанДокументОтгрузки,
		|	ТаблицаВозвращенныеТовары.СчетУчета.Забалансовый КАК СчетУчетаЗабалансовый,
		|	ТаблицаВозвраты.Сделка.ПодразделениеОрганизации КАК КорПодразделение,
		|	ТаблицаВозвращенныеТовары.ОтражениеВУСН,
		|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаРеализации
		|ПОМЕСТИТЬ ТаблицаВозвраты
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ТаблицаВозвращенныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
		|		ПО ТаблицаВозвращенныеТовары.СчетДоходов = СчетаЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ТаблицаВозвраты
		|		ПО ТаблицаВозвращенныеТовары.Ссылка = ТаблицаВозвраты.Ссылка
		|			И ТаблицаВозвращенныеТовары.КлючСтроки = ТаблицаВозвраты.КлючСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО (ДанныеПервичныхДокументов.Документ = ТаблицаВозвраты.Сделка)
		|ГДЕ
		|	ТаблицаВозвращенныеТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаУслуги.КлючСтроки КАК КлючСтроки,
		|	ТаблицаУслуги.Ссылка,
		|	ТаблицаУслуги.НомерСтроки,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.Количество,
		|	ТаблицаУслуги.Содержание,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСРуб,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ТаблицаУслуги.СчетУчетаНДСПоРеализации,
		|	ТаблицаУслуги.СчетДоходов,
		|	ВЫБОР
		|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ТаблицаУслуги.СчетРасходов,
		|	ТаблицаУслуги.Субконто,
		|	ТаблицаУслуги.СуммаВознаграждения,
		|	СправочникНоменклатура.КодРаздел7ДекларацииНДС,
		|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
		|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр
		|ПОМЕСТИТЬ ТаблицаУслуги
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
		|		ПО ТаблицаУслуги.СчетДоходов = СчетаЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
		|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
		|		ПО ТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаУслуги.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьВознаграждение Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаВознаграждение", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаВознаграждение.НомерСтроки,
		|	ТаблицаВознаграждение.СчетУчета,
		|	ТаблицаВознаграждение.СчетДоходов,
		|	ТаблицаВознаграждение.Субконто,
		|	&СтавкаНДСВознаграждения КАК СтавкаНДС,
		|	ТаблицаВознаграждение.СуммаВознаграждения КАК СуммаВзаиморасчетов,
		|	ТаблицаВознаграждение.СуммаНДСВознаграждения КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаВознаграждение.СуммаВознаграждения КАК СуммаРуб,
		|	ТаблицаВознаграждение.СуммаНДСВознаграждения КАК СуммаНДСРуб
		|ПОМЕСТИТЬ ТаблицаВознаграждение
		|ИЗ
		|(ВЫБРАТЬ
		|	0 КАК НомерСтроки,
		|	NULL КАК СчетУчета,
		|	NULL КАК СчетДоходов,
		|	NULL КАК Субконто,
		|	0 КАК СуммаВознаграждения,
		|	0 КАК СуммаНДСВознаграждения
		|ГДЕ
		|	ЛОЖЬ"
		+ ?(Реквизиты.ЕстьТовары, "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.СчетУчета,
		|	ТаблицаТовары.СчетДоходов,
		|	ТаблицаТовары.Субконто,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаВознаграждения
		|		ИНАЧЕ ТаблицаТовары.СуммаВознаграждения + ТаблицаТовары.СуммаНДСВознаграждения
		|	КОНЕЦ КАК СуммаВознагражденияСНДС,
		|	ТаблицаТовары.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка", "")
		+ ?(Реквизиты.ЕстьВозвраты, "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыВозвращенные.НомерСтроки,
		|	ТоварыВозвращенные.СчетУчета,
		|	ТоварыВозвращенные.СчетДоходов,
		|	ТоварыВозвращенные.Субконто,
		|	-ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТоварыВозвращенные.СуммаВознаграждения
		|		ИНАЧЕ ТоварыВозвращенные.СуммаВознаграждения + ТоварыВозвращенные.СуммаНДСВознаграждения
		|	КОНЕЦ КАК СуммаВознагражденияСНДС,
		|	-ТоварыВозвращенные.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ТоварыВозвращенные
		|ГДЕ
		|	ТоварыВозвращенные.Ссылка = &Ссылка", "")
		+ ?(Реквизиты.ЕстьУслуги, "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаУслуги.НомерСтроки + 1000000 КАК НомерСтроки,
		|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
		|	ТаблицаУслуги.СчетДоходов,
		|	ТаблицаУслуги.Субконто,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаВознаграждения
		|		ИНАЧЕ ТаблицаУслуги.СуммаВознаграждения + ТаблицаУслуги.СуммаНДСВознаграждения
		|	КОНЕЦ КАК СуммаВознагражденияСНДС,
		|	ТаблицаУслуги.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ТаблицаУслуги
		|ГДЕ
		|	ТаблицаУслуги.Ссылка = &Ссылка", "") + ") КАК ТаблицаВознаграждение"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаПокупатели", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаПокупателиВозврат", 	НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаПокупатели.Ссылка КАК Ссылка,
	|	ТаблицаПокупатели.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПокупатели.Покупатель КАК Покупатель,
	|	ТаблицаПокупатели.ВыставленСФ КАК ВыставленСФ,
	|	ТаблицаПокупатели.ДатаСФ КАК ДатаСФ,
	|	ТаблицаПокупатели.СчетФактура КАК СчетФактура,
	|	ТаблицаПокупатели.КлючСтроки КАК КлючСтроки
	|ПОМЕСТИТЬ ТаблицаПокупатели
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ТаблицаПокупатели
	|ГДЕ
	|	ТаблицаПокупатели.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПокупатели.Ссылка КАК Ссылка,
	|	ТаблицаПокупатели.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПокупатели.Покупатель КАК Покупатель,
	|	ТаблицаПокупатели.ВыставленСФ КАК ВыставленСФ,
	|	ТаблицаПокупатели.ДатаСФ КАК ДатаСФ,
	|	ТаблицаПокупатели.СчетФактура КАК СчетФактура,
	|	ТаблицаПокупатели.КлючСтроки КАК КлючСтроки
	|ПОМЕСТИТЬ ТаблицаПокупателиВозврат
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ТаблицаПокупатели
	|ГДЕ
	|	ТаблицаПокупатели.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Результат    = Запрос.ВыполнитьПакет();
	
	Если НЕ Реквизиты.ЕстьТовары 
		И НЕ Реквизиты.ЕстьУслуги
		И НЕ Реквизиты.ЕстьВозвраты Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьТовары Тогда
		СуммыТаблицыТовары = Результат[НомераТаблиц["СуммыТаблицыТовары"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыТовары, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыТовары", СуммыТаблицыТовары);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеТовары();
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		СуммыТаблицыУслуги = Результат[НомераТаблиц["СуммыТаблицыУслуги"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыУслуги, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыУслуги", СуммыТаблицыУслуги);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеУслуги();
	КонецЕсли;
	Если Реквизиты.ЕстьВознаграждение Тогда
		СуммыТаблицыВознаграждение = Результат[НомераТаблиц["СуммыТаблицыВознаграждение"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыВознаграждение, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыВознаграждение", СуммыТаблицыВознаграждение);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеВознаграждение();
	КонецЕсли;
	Если Реквизиты.ЕстьВозвраты Тогда
		СуммыТаблицыВозвраты = Результат[НомераТаблиц["СуммыТаблицыВозвраты"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыВозвраты, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыВозвраты", СуммыТаблицыВозвраты);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеВозвраты();
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Результат    = Запрос.ВыполнитьПакет();
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты)

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
	
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаТовары", "ПОМЕСТИТЬ ВременнаяТаблицаТовары");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки",
		"ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки,
		|	ВременнаяТаблицаТовары.СтавкаНДС,
		|	ВременнаяТаблицаТовары.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаРуб,
		|	ВременнаяТаблицаТовары.СуммаНДСРуб,
		|	ВременнаяТаблицаТовары.СуммаВознаграждения,
		|	ВременнаяТаблицаТовары.КодРаздел7ДекларацииНДС,
		|	ВременнаяТаблицаТовары.КодСоответствуетСт149НКРФ,
		|	ВременнаяТаблицаТовары.КодВключаетсяВРеестр
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаУслуги", "ПОМЕСТИТЬ ВременнаяТаблицаУслуги");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки",
		"ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаУслуги.НомерСтроки,
		|	ВременнаяТаблицаУслуги.СтавкаНДС,
		|	ВременнаяТаблицаУслуги.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаУслуги.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаУслуги.СуммаРуб,
		|	ВременнаяТаблицаУслуги.СуммаНДСРуб,
		|	ВременнаяТаблицаУслуги.СуммаВознаграждения
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьВознаграждение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаВознаграждение", "ПОМЕСТИТЬ ВременнаяТаблицаВознаграждение");
		НомераТаблиц.Вставить("СуммыТаблицыВознаграждение", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаВознаграждение.НомерСтроки,
		|	ВременнаяТаблицаВознаграждение.СтавкаНДС,
		|	ВременнаяТаблицаВознаграждение.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаВознаграждение.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаВознаграждение.СуммаРуб,
		|	ВременнаяТаблицаВознаграждение.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаВознаграждение КАК ВременнаяТаблицаВознаграждение"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	Если Реквизиты.ЕстьВозвраты Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаВозвраты", "ПОМЕСТИТЬ ВременнаяТаблицаВозвраты");
		НомераТаблиц.Вставить("СуммыТаблицыВозвраты", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаВозвраты.НомерСтроки,
		|	ВременнаяТаблицаВозвраты.СтавкаНДС,
		|	ВременнаяТаблицаВозвраты.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаВозвраты.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаВозвраты.СуммаРуб,
		|	ВременнаяТаблицаВозвраты.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаВозвраты КАК ВременнаяТаблицаВозвраты"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРасчетыВВалютеТовары()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыТовары.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаРуб,
	|	СуммыТаблицыТовары.СуммаНДСРуб,
	|	СуммыТаблицыТовары.СуммаВознаграждения
	|ПОМЕСТИТЬ СуммыТаблицыТовары
	|ИЗ
	|	&СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.КлючСтроки КАК КлючСтроки,
	|	ВременнаяТаблицаТовары.Ссылка,
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВременнаяТаблицаТовары.Количество,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаРуб,
	|	СуммыТаблицыТовары.СуммаНДСРуб,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.НомерГТД,
	|	ВременнаяТаблицаТовары.СтранаПроисхождения,
	|	ВременнаяТаблицаТовары.СчетУчета,
	|	ВременнаяТаблицаТовары.ЭтоКомиссия,
	|	ВременнаяТаблицаТовары.СчетУчетаНДСПоРеализации,
	|	ВременнаяТаблицаТовары.СчетДоходов,
	|	ВременнаяТаблицаТовары.ДоходЕНВД,
	|	ВременнаяТаблицаТовары.СчетРасходов,
	|	ВременнаяТаблицаТовары.Субконто,
	|	ВременнаяТаблицаТовары.ДокументОприходования,
	|	ВременнаяТаблицаТовары.Себестоимость,
	|	ВременнаяТаблицаТовары.СуммаВознаграждения,
	|	ВременнаяТаблицаТовары.КодРаздел7ДекларацииНДС,
	|	ВременнаяТаблицаТовары.КодСоответствуетСт149НКРФ,
	|	ВременнаяТаблицаТовары.КодВключаетсяВРеестр
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|		ПО ВременнаяТаблицаТовары.НомерСтроки = СуммыТаблицыТовары.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеВозвраты()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыВозвраты.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыВозвраты.СуммаВзаиморасчетов,
	|	СуммыТаблицыВозвраты.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыВозвраты.СуммаРуб,
	|	СуммыТаблицыВозвраты.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыВозвраты
	|ИЗ
	|	&СуммыТаблицыВозвраты КАК СуммыТаблицыВозвраты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаВозвраты.КлючСтроки КАК КлючСтроки,
	|	ВременнаяТаблицаВозвраты.Ссылка,
	|	ВременнаяТаблицаВозвраты.НомерСтроки,
	|	ВременнаяТаблицаВозвраты.Номенклатура,
	|	ВременнаяТаблицаВозвраты.Количество,
	|	СуммыТаблицыВозвраты.СуммаВзаиморасчетов,
	|	СуммыТаблицыВозвраты.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыВозвраты.СуммаРуб,
	|	СуммыТаблицыВозвраты.СуммаНДСРуб,
	|	ВременнаяТаблицаВозвраты.СтавкаНДС,
	|	ВременнаяТаблицаВозвраты.НомерГТД,
	|	ВременнаяТаблицаВозвраты.СтранаПроисхождения,
	|	ВременнаяТаблицаВозвраты.СчетУчета,
	|	ВременнаяТаблицаВозвраты.ЭтоКомиссия,
	|	ВременнаяТаблицаВозвраты.СчетУчетаНДСПоРеализации,
	|	ВременнаяТаблицаВозвраты.СчетДоходов,
	|	ВременнаяТаблицаВозвраты.ДоходЕНВД,
	|	ВременнаяТаблицаВозвраты.СчетРасходов,
	|	ВременнаяТаблицаВозвраты.Субконто,
	|	ВременнаяТаблицаВозвраты.Сделка,
	|	ВременнаяТаблицаВозвраты.Себестоимость,
	|	ВременнаяТаблицаВозвраты.УказанДокументОтгрузки,
	|	ВременнаяТаблицаВозвраты.СчетУчетаЗабалансовый,
	|	ВременнаяТаблицаВозвраты.КорПодразделение,
	|	ВременнаяТаблицаВозвраты.ОтражениеВУСН,
	|	ВременнаяТаблицаВозвраты.ДатаРеализации
	|ПОМЕСТИТЬ ТаблицаВозвраты
	|ИЗ
	|	ВременнаяТаблицаВозвраты КАК ВременнаяТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыВозвраты КАК СуммыТаблицыВозвраты
	|		ПО ВременнаяТаблицаВозвраты.НомерСтроки = СуммыТаблицыВозвраты.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеУслуги()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыУслуги.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаРуб,
	|	СуммыТаблицыУслуги.СуммаНДСРуб,
	|	СуммыТаблицыУслуги.СуммаВознаграждения
	|ПОМЕСТИТЬ СуммыТаблицыУслуги
	|ИЗ
	|	&СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаУслуги.КлючСтроки КАК КлючСтроки,
	|	ВременнаяТаблицаУслуги.Ссылка,
	|	ВременнаяТаблицаУслуги.НомерСтроки,
	|	ВременнаяТаблицаУслуги.Номенклатура,
	|	ВременнаяТаблицаУслуги.Количество,
	|	ВременнаяТаблицаУслуги.Содержание,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаРуб,
	|	СуммыТаблицыУслуги.СуммаНДСРуб,
	|	ВременнаяТаблицаУслуги.СтавкаНДС,
	|	ВременнаяТаблицаУслуги.СчетУчетаНДСПоРеализации,
	|	ВременнаяТаблицаУслуги.СчетДоходов,
	|	ВременнаяТаблицаУслуги.ДоходЕНВД,
	|	ВременнаяТаблицаУслуги.СчетРасходов,
	|	ВременнаяТаблицаУслуги.Субконто,
	|	ВременнаяТаблицаУслуги.СуммаВознаграждения,
	|	ВременнаяТаблицаУслуги.КодРаздел7ДекларацииНДС,
	|	ВременнаяТаблицаУслуги.КодСоответствуетСт149НКРФ,
	|	ВременнаяТаблицаУслуги.КодВключаетсяВРеестр
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|		ПО ВременнаяТаблицаУслуги.НомерСтроки = СуммыТаблицыУслуги.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеВознаграждение()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыВознаграждение.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыВознаграждение.СуммаВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаРуб,
	|	СуммыТаблицыВознаграждение.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыВознаграждение
	|ИЗ
	|	&СуммыТаблицыВознаграждение КАК СуммыТаблицыВознаграждение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаВознаграждение.НомерСтроки,
	|	ВременнаяТаблицаВознаграждение.СчетУчета,
	|	ВременнаяТаблицаВознаграждение.СчетДоходов,
	|	ВременнаяТаблицаВознаграждение.Субконто,
	|	СуммыТаблицыВознаграждение.СуммаВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаРуб,
	|	СуммыТаблицыВознаграждение.СуммаНДСРуб,
	|	ВременнаяТаблицаВознаграждение.СтавкаНДС
	|ПОМЕСТИТЬ ТаблицаВознаграждение
	|ИЗ
	|	ВременнаяТаблицаВознаграждение КАК ВременнаяТаблицаВознаграждение
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыВознаграждение КАК СуммыТаблицыВознаграждение
	|		ПО ВременнаяТаблицаВознаграждение.НомерСтроки = СуммыТаблицыВознаграждение.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаСписаниеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("СписаниеТоваровРеквизиты",     Неопределено);
		ПараметрыПроведения.Вставить("СписаниеТоваровТаблицаТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СписаниеТоваровРеквизиты",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровТаблицаТовары", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК период,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент КАК Склад,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделениеОрганизации,
	|	""Реализация товаров"" КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Номенклатура,
	|	Реквизиты.Контрагент КАК Склад,
	|	ТаблицаТовары.ДокументОприходования,
	|	ТаблицаТовары.Себестоимость,
	|	ТаблицаТовары.Количество,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	ТаблицаТовары.СчетРасходов КАК КорСчетСписания,
	|	ТаблицаТовары.Субконто КАК КорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	1 КАК ВидКорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	ТаблицаТовары.КлючСтроки КАК КлючСтроки,
	|	ТаблицаПокупатели.Покупатель КАК Покупатель,
	|	ТаблицаПокупатели.ВыставленСФ КАК ВыставленСФ,
	|	ТаблицаПокупатели.ДатаСФ КАК ДатаСФ,
	|	ТаблицаПокупатели.СчетФактура КАК СчетФактура
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПокупатели КАК ТаблицаПокупатели
	|		ПО ТаблицаТовары.КлючСтроки = ТаблицаПокупатели.КлючСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары И НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовРеквизиты",        Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаДокумента", Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаАвансов",   Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСуммВзаиморасчетов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента) КАК СуммаВзаиморасчетовКомитента,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент) КАК СуммаВзаиморасчетовПатент,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД) КАК СуммаВзаиморасчетовЕНВД,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовВознаграждение) КАК СуммаВзаиморасчетовВознаграждение,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаРубВознаграждение) КАК СуммаРубВознаграждение
	|ПОМЕСТИТЬ ТаблицаСуммВзаиморасчетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		0 КАК СуммаВзаиморасчетов,
	|		0 КАК СуммаРуб,
	|		0 КАК СуммаВзаиморасчетовКомитента,
	|		0 КАК СуммаВзаиморасчетовПатент,
	|		0 КАК СуммаВзаиморасчетовЕНВД,
	|		0 КАК СуммаВзаиморасчетовВознаграждение,
	|		0 КАК СуммаРубВознаграждение"
	+ ?(Реквизиты.ЕстьТовары, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|		ВЫБРАТЬ
	|			ТаблицаТовары.СуммаВзаиморасчетов,
	|			ТаблицаТовары.СуммаРуб,
	|			ВЫБОР
	|				КОГДА ТаблицаТовары.ЭтоКомиссия
	|					ТОГДА ВЫБОР
	|						КОГДА &УдержатьВознаграждение ТОГДА
	|							ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВознаграждения 
	|						ИНАЧЕ ТаблицаТовары.СуммаВзаиморасчетов 
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	|			0,
	|			ВЫБОР
	|				КОГДА (НЕ ТаблицаТовары.ЭтоКомиссия)
	|						И ТаблицаТовары.ДоходЕНВД
	|					ТОГДА ВЫБОР
	|						КОГДА &УдержатьВознаграждение ТОГДА
	|							ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВознаграждения 
	|						ИНАЧЕ ТаблицаТовары.СуммаВзаиморасчетов 
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	|			0,
	|			0
	|		ИЗ
	|			ТаблицаТовары КАК ТаблицаТовары", "")
	+ ?(Реквизиты.ЕстьУслуги, "
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			ТаблицаУслуги.СуммаВзаиморасчетов,
	|			ТаблицаУслуги.СуммаРуб,
	|			0,
	|			0,
	|			ВЫБОР
	|				КОГДА ТаблицаУслуги.ДоходЕНВД
	|					ТОГДА ВЫБОР
	|						КОГДА &УдержатьВознаграждение ТОГДА
	|							ТаблицаУслуги.СуммаВзаиморасчетов - ТаблицаУслуги.СуммаВознаграждения 
	|						ИНАЧЕ ТаблицаУслуги.СуммаВзаиморасчетов 
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	|			0,
	|			0
	|		ИЗ
	|			ТаблицаУслуги КАК ТаблицаУслуги", "")
	+ ?(Реквизиты.ЕстьВознаграждение И Реквизиты.УдержатьВознаграждение, "
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			-ТаблицаВознаграждение.СуммаВзаиморасчетов,
	|			-ТаблицаВознаграждение.СуммаРуб,
	|			0,
	|			0,
	|			0,
	|			ТаблицаВознаграждение.СуммаВзаиморасчетов,
	|			ТаблицаВознаграждение.СуммаРуб
	|		ИЗ
	|			ТаблицаВознаграждение КАК ТаблицаВознаграждение", "") + ") КАК ТаблицаСуммВзаиморасчетов"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
	|	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамПолученным КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов,
	|	ТаблицаСуммВзаиморасчетов.СуммаРуб,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммВзаиморасчетов КАК ТаблицаСуммВзаиморасчетов
	|		ПО (ИСТИНА)"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если Реквизиты.СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаАвансов", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ЗачетАвансовТаблицаАвансов",   НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаЗачетАвансов.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СчетУчетаРасчетовПоАвансамПолученным КАК СчетАвансов,
		|	Реквизиты.Контрагент,
		|	Реквизиты.ДоговорКонтрагента,
		|	ТаблицаЗачетАвансов.ДокументАванса,
		|	ТаблицаЗачетАвансов.СуммаЗачета
		|ИЗ
		|	Документ.ОтчетКомиссионераОПродажах.ЗачетАвансов КАК ТаблицаЗачетАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаЗачетАвансов.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаЗачетАвансов.НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары И НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("РеализацияРеквизиты",        Неопределено);
		ПараметрыПроведения.Вставить("РеализацияТаблицаДокумента", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеализацияРеквизиты",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеализацияТаблицаДокумента", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""Реализация"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	""ОтчетКомиссионераОПродажах"" КАК ВидОперации,
	|	Реквизиты.Организация,
	|	НЕОПРЕДЕЛЕНО КАК ТипСклада,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.Контрагент,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.КодОперацииПоСделке,
	|	Реквизиты.НДСИсчисляетсяНалоговымАгентом КАК НДСИсчисляетсяНалоговымАгентом
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
	+ ?(Реквизиты.ЕстьТовары, 
	"ВЫБРАТЬ
	|	1 КАК НомерСписка,
	|	""Товары"" КАК ИмяСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаРуб КАК СуммаРуб,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб КАК СуммаБезНДСРуб,
	|	ТаблицаТовары.СуммаРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаРуб КАК СуммаНУ,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
	|	ТаблицаТовары.Субконто КАК Субконто,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаТовары.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА Реквизиты.Дата >= ДАТАВРЕМЯ(2016, 7, 1)
	|			ТОГДА НЕ ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоНесырьевойТовар,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаРасчетовСКомитентом,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.Покупатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ТаблицаПокупатели.Покупатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Ссылка КАК ДокументРасчетовСКомитентом,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаПокупатели.ДатаСФ
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ДатаРеализации,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	ТаблицаПокупатели.СчетФактура,
	|	ТаблицаПокупатели.ВыставленСФ,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаПокупатели.ДатаСФ
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ДатаСФ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДоходЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.КодРаздел7ДекларацииНДС
	|	КОНЕЦ КАК КодРаздел7ДекларацииНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаТовары.КодСоответствуетСт149НКРФ
	|	КОНЕЦ КАК КодСоответствуетСт149НКРФ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаТовары.КодВключаетсяВРеестр
	|	КОНЕЦ КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО СправочникНоменклатура.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПокупатели КАК ТаблицаПокупатели
	|		ПО ТаблицаТовары.КлючСтроки = ТаблицаПокупатели.КлючСтроки", "")
	+ ?(Реквизиты.ЕстьТовары И Реквизиты.ЕстьУслуги, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|", "") 
	+ ?(Реквизиты.ЕстьУслуги, 
	"ВЫБРАТЬ
	|	2 КАК НомерСписка,
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб КАК СуммаБезНДСРуб,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаБУ,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаНУ,
	|	NULL КАК СчетУчета,
	|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
	|	ТаблицаУслуги.Субконто КАК Субконто,
	|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ИСТИНА КАК ЭтоУслуга,
	|	ЛОЖЬ КАК ЭтоНесырьевойТовар,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаРасчетовСКомитентом,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.Покупатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ТаблицаПокупатели.Покупатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Ссылка КАК ДокументРасчетовСКомитентом,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаПокупатели.ДатаСФ
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ДатаРеализации,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	ТаблицаПокупатели.СчетФактура КАК СчетФактура,
	|	ТаблицаПокупатели.ВыставленСФ КАК ВыставленСФ,
	|	ВЫБОР
	|		КОГДА ТаблицаПокупатели.ДатаСФ <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаПокупатели.ДатаСФ
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ДатаСФ,
	|	СправочникНоменклатура.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2019, 7, 1)
	|			ТОГДА Реквизиты.КодОперацииПоСделке В (&МассивКодовРеализацийЗаРубеж)
	|						И НЕ ТаблицаУслуги.КодСоответствуетСт149НКРФ
	|					ИЛИ ТаблицаУслуги.КодРаздел7ДекларацииНДС В (&МассивКодовРеализацийЗаРубеж)
	|						И НЕ Реквизиты.КодОперацииПоСделкеСоответствуетСт149НКРФ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УслугиЗаРубежом
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПокупатели КАК ТаблицаПокупатели
	|		ПО ТаблицаУслуги.КлючСтроки = ТаблицаПокупатели.КлючСтроки", "")
	+ "
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСписка,
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗачетАвансовКомитентов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТоварыКомитентов Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовКомитентовРеквизиты", Неопределено);
		Возврат "";
	КонецЕсли;
	НомераТаблиц.Вставить("ЗачетАвансовКомитентовРеквизиты", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАвансов,
	|	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
	|	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТоварыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("НДСТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("НДСТовары", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.СтранаПроисхождения,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КлючСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.ЭтоКомиссия
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЗачетАвансовВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВознаграждение
		ИЛИ Реквизиты.УдержатьВознаграждение
		ИЛИ НЕ ЗначениеЗаполнено(Реквизиты.СчетУчетаРасчетовПоАвансамВыданным) Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовВознаграждениеРеквизиты",        Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовВознаграждениеТаблицаДокумента", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ЗачетАвансовВознаграждениеРеквизиты",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовВознаграждениеТаблицаДокумента", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАвансов,
	|	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
	|	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	Реквизиты.СчетУчетаЗатрат КАК СчетЗатрат,
	|	Реквизиты.Субконто1 КАК Субконто1,
	|	Реквизиты.Субконто2 КАК Субконто2,
	|	Реквизиты.Субконто3 КАК Субконто3,
	|	Реквизиты.СпособУчетаНДС КАК СпособУчетаНДС,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамВыданным КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетов,
	|	СУММА(ТаблицаВознаграждение.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаБУ,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаНУ,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВознаграждение КАК ТаблицаВознаграждение
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.СчетУчетаЗатрат,
	|	Реквизиты.Субконто1,
	|	Реквизиты.Субконто2,
	|	Реквизиты.Субконто3,
	|	Реквизиты.СпособУчетаНДС,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги,
	|	Реквизиты.СчетУчетаРасчетовПоАвансамВыданным,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ПодразделениеОрганизации";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВознаграждение Тогда
		ПараметрыПроведения.Вставить("ВознаграждениеРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ВознаграждениеТаблица",   Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ВознаграждениеРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВознаграждениеТаблица",   НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ТипСклада,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента,
	|	Реквизиты.НДСВключенВСтоимость,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	НЕОПРЕДЕЛЕНО КАК ВидАгентскогоДоговора
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	"""" КАК ИмяСписка,
	|	1 КАК НомерСтроки,
	|	""Комиссионное вознаграждение"" КАК Содержание,
	|	0 КАК Количество,
	|	СУММА(ТаблицаВознаграждение.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаВознаграждение.СуммаНДСВзаиморасчетов) КАК СуммаНДСВзаиморасчетов,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицаВознаграждение.СуммаНДСРуб) КАК СуммаНДСРуб,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб - ТаблицаВознаграждение.СуммаНДСРуб) КАК СуммаБезНДСРуб,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаБУ,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаНУ,
	|	Реквизиты.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	Реквизиты.СчетУчетаНДС,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.СчетУчетаЗатрат КАК СчетЗатрат,
	|	Реквизиты.Субконто1,
	|	Реквизиты.Субконто2,
	|	Реквизиты.Субконто3,
	|	ВЫБОР
	|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА Реквизиты.Субконто1
	|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА Реквизиты.Субконто2
	|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА Реквизиты.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	Реквизиты.СпособУчетаНДС,
	|	Реквизиты.СчетУчетаЗатрат КАК СчетЗатратНУ,
	|	Реквизиты.Субконто1 КАК СубконтоНУ1,
	|	Реквизиты.Субконто2 КАК СубконтоНУ2,
	|	Реквизиты.Субконто3 КАК СубконтоНУ3,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВознаграждение КАК ТаблицаВознаграждение
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.СтавкаНДСВознаграждения,
	|	Реквизиты.СчетУчетаНДС,
	|	Реквизиты.ПодразделениеЗатрат,
	|	Реквизиты.СчетУчетаЗатрат,
	|	Реквизиты.Субконто1,
	|	Реквизиты.Субконто2,
	|	Реквизиты.Субконто3,
	|	ВЫБОР
	|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА Реквизиты.Субконто1
	|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА Реквизиты.Субконто2
	|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА Реквизиты.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Реквизиты.СпособУчетаНДС,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.Ссылка,
	|	Реквизиты.СчетУчетаЗатрат,
	|	Реквизиты.Субконто1,
	|	Реквизиты.Субконто2,
	|	Реквизиты.Субконто3";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПогашениеЗадолженностиВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВознаграждение 
		ИЛИ НЕ Реквизиты.УдержатьВознаграждение Тогда
		ПараметрыПроведения.Вставить("ПогашениеЗадолженностиВознаграждениеРеквизиты",             Неопределено);
		ПараметрыПроведения.Вставить("ПогашениеЗадолженностиВознаграждениеТаблицаВзаиморасчетов", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ПогашениеЗадолженностиВознаграждениеРеквизиты",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПогашениеЗадолженностиВознаграждениеТаблицаВзаиморасчетов", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	0 КАК ПорядокОтраженияАванса,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги КАК СчетАвансов_ОтгрузкаВУЕ,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.Дата КАК ДатаДокументаРасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	СУММА(ТаблицаВознаграждение.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаБУ,
	|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК СуммаНУ,
	|	""Комиссионное вознаграждение удержано из выручки"" КАК Содержание,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаБУ_ЕНВД,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаБУ_Комитента,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаБУ_Патент,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор,
	|	0 КАК СуммаБУ_ТорговыйСбор,
	|	0 КАК СуммаБУ_ОтгрузкаВУЕ
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВознаграждение КАК ТаблицаВознаграждение
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.СчетУчетаРасчетовЗаПосредническиеУслуги,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.ПодразделениеОрганизации,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.Ссылка,
	|	Реквизиты.ПодразделениеОрганизации";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.РасчетыВВалюте
		И НЕ Реквизиты.ЕстьТоварыКомитентов Тогда
		ПараметрыПроведения.Вставить("ПереоценкаВалютныхОстатков", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатков", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРеализацияУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("ТаблицаРеализацияУслуг", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТаблицаРеализацияУслуг", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
	|	ТаблицаУслуги.Субконто КАК НоменклатурнаяГруппа,
	|	ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб КАК Сумма
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|ГДЕ
	|	НЕ ТаблицаУслуги.СчетРасходов В (&Субсчета91)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаПоступлениеРасходовПоВознаграждениюУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПрименяетсяУСН 
		ИЛИ НЕ Реквизиты.ЕстьВознаграждение 
		ИЛИ Реквизиты.УдержатьВознаграждение Тогда
		ПараметрыПроведения.Вставить("УСНВознаграждениеРеквизиты",       Неопределено);
		ПараметрыПроведения.Вставить("УСНВознаграждениеТаблицаРасходов", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("УСНВознаграждениеРеквизиты",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УСНВознаграждениеТаблицаРасходов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК Валюта,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК РасходыПредпринимателя
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасхода,
	|	ЛОЖЬ КАК ЭтоТовар,
	|	ЛОЖЬ КАК ЭтоМатериал,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	0 КАК Количество,
	|	СУММА(ТаблицаВознаграждение.СуммаВзаиморасчетов) КАК Сумма,
	|	СУММА(ТаблицаВознаграждение.СуммаНДСВзаиморасчетов) КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН
	|ИЗ
	|	ТаблицаВознаграждение КАК ТаблицаВознаграждение";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредства(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ПлательщикНДС Тогда
		ПараметрыПроведения.Вставить("ДенежныеСредства", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ДенежныеСредства", НомераТаблиц.Количество());	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДенежныеСредства.НомерСтроки КАК НомерСтроки,
	|	ДенежныеСредства.ВидОтчетаПоПлатежам КАК ВидОтчетаПоПлатежам,
	|	ДенежныеСредства.Сумма - ДенежныеСредства.СуммаНДС КАК СуммаБезНДС,
	|	ДенежныеСредства.СтавкаНДС КАК СтавкаНДС,
	|	ДенежныеСредства.СуммаНДС КАК НДС,
	|	ДенежныеСредства.Покупатель КАК Покупатель,
	|	ДенежныеСредства.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.ДенежныеСредства КАК ДенежныеСредства
	|ГДЕ
	|	ДенежныеСредства.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПлательщикНДФЛ Тогда
		ПараметрыПроведения.Вставить("ИПРеквизиты",             Неопределено);
		ПараметрыПроведения.Вставить("ИПТаблицаУслуг",          Неопределено);
		ПараметрыПроведения.Вставить("ИПТаблицаВознаграждения", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ИПРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ПоступлениеТоваровУслуг"" КАК ТипПоступления,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	НЕОПРЕДЕЛЕНО КАК ТипСклада,
	|	Реквизиты.НДСВключенВСтоимость,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	""ОтчетКомиссионераОПродажах"" КАК ВидОперации,
	|	Реквизиты.УдержатьВознаграждение
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если НЕ Реквизиты.ЕстьВознаграждение 
		ИЛИ Реквизиты.УдержатьВознаграждение Тогда
		ПараметрыПроведения.Вставить("ИПТаблицаУслуг", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ИПТаблицаУслуг", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	"""" КАК ИмяСписка,
		|	"""" КАК СинонимСписка,
		|	1 КАК НомерСтроки,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	СУММА(ТаблицаВознаграждение.СуммаРуб) КАК Сумма,
		|	СУММА(ТаблицаВознаграждение.СуммаНДСРуб) КАК НДС,
		|	1 КАК Количество,
		|	Реквизиты.СчетУчетаЗатрат КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА Реквизиты.Субконто1
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА Реквизиты.Субконто2
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА Реквизиты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто1
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто2
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
		|	Реквизиты.Ссылка КАК Партия
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВознаграждение КАК ТаблицаВознаграждение
		|		ПО (ИСТИНА)
		|
		|СГРУППИРОВАТЬ ПО
		|	Реквизиты.СчетУчетаЗатрат,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА Реквизиты.Субконто1
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА Реквизиты.Субконто2
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА Реквизиты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто1
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто2
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	Реквизиты.Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьВознаграждение 
		ИЛИ НЕ Реквизиты.УдержатьВознаграждение Тогда
		ПараметрыПроведения.Вставить("ИПТаблицаВознаграждения", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ИПТаблицаВознаграждения", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	"""" КАК ИмяСписка,
		|	"""" КАК СинонимСписка,
		|	1 КАК НомерСтроки,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	СУММА(ТаблицаВознаграждение.СуммаРуб - ТаблицаВознаграждение.СуммаНДСРуб) КАК Сумма,
		|	СУММА(ТаблицаВознаграждение.СуммаНДСРуб) КАК НДС,
		|	0 КАК Количество,
		|	ТаблицаВознаграждение.СчетУчета КАК СчетУчета,
		|	ТаблицаВознаграждение.СчетДоходов КАК СчетДоходов,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		КОГДА ТаблицаВознаграждение.Субконто ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ТаблицаВознаграждение.Субконто
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто1
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто2
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
		|	Реквизиты.Ссылка КАК Партия
		|ИЗ
		|	ТаблицаВознаграждение КАК ТаблицаВознаграждение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаВознаграждение.СчетУчета,
		|	ТаблицаВознаграждение.СчетДоходов,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		КОГДА ТаблицаВознаграждение.Субконто ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ТаблицаВознаграждение.Субконто
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто1 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто1
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто2 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто2
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|				ИЛИ Реквизиты.Субконто3 ССЫЛКА Справочник.РасходыБудущихПериодов
		|			ТОГДА Реквизиты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто2 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		КОГДА Реквизиты.Субконто3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто3 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	Реквизиты.Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПодготовитьТаблицуВознагражденияСУчетомКурсаАвансов(ТаблицаВознаграждение, ТаблицаВзаиморасчеты, ТаблицаРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаВознаграждение)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат ТаблицаВознаграждение;
	КонецЕсли;
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ТоварыУслуги",  ТаблицаВознаграждение);
	СтруктураТаблиц.Вставить("Взаиморасчеты", ТаблицаВзаиморасчеты);
	СтруктураТаблиц.Вставить("Реквизиты",     ТаблицаРеквизиты);
	ТаблицаВознаграждениеПоКурсуАвансов = УчетДоходовРасходов.ПолучитьТаблицуРеализацииПоКурсуАвансов(
		СтруктураТаблиц, Ложь);

	Реквизиты = ТаблицаРеквизиты[0];
	// Исключение НДС из сумм документа
	Если НЕ Реквизиты.НДСВключенВСтоимость Тогда

		Для каждого СтрокаТаблицы Из ТаблицаВознаграждениеПоКурсуАвансов Цикл
			СтрокаТаблицы.СуммаВзаиморасчетов = СтрокаТаблицы.СуммаВзаиморасчетов - СтрокаТаблицы.СуммаНДСВзаиморасчетов;
			СтрокаТаблицы.СуммаРуб            = СтрокаТаблицы.СуммаРуб - СтрокаТаблицы.СуммаНДСРуб;
			СтрокаТаблицы.СуммаБУ             = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНДСРуб;
			СтрокаТаблицы.СуммаНУ             = СтрокаТаблицы.СуммаНУ - СтрокаТаблицы.СуммаНДСРуб;
		КонецЦикла;

	КонецЕсли;

	Возврат ТаблицаВознаграждениеПоКурсуАвансов;

КонецФункции

// Подготавливаем таблицу партий на которые будет возвращен ранее реализованный товар
Функция ПодготовитьТаблицуСписанныеТоварыОтПокупателя(ТаблицаВозвращенныеСписанныеТовары, СписаниеТоваровСчетаУчета, СписаниеТоваровНоменклатура,ТаблицаРеквизиты, Отказ) Экспорт
	
	ТаблицаСписанныеТоварыОтПокупателя = УчетТоваров.ПолучитьПустуюТаблицуСписанныеТовары();
	ТаблицаСписанныеТоварыОтПокупателя.Колонки.Добавить("Сделка");
	
	Если ТаблицаРеквизиты <> Неопределено Тогда
		// таблица реквизиты содержит строки в разрезе документов списания
		Для каждого СтрокаРеквизиты Из ТаблицаРеквизиты Цикл
			// подбираем партии по каждому документу списания
			ОтборПоДокументуРеализации = Новый Структура("Сделка", СтрокаРеквизиты.Сделка);
			
			РеквизитыВозвраты 				= ТаблицаРеквизиты.Скопировать(ОтборПоДокументуРеализации);
			ТаблицаТоваровПоСделке 			= ТаблицаВозвращенныеСписанныеТовары.Скопировать(ОтборПоДокументуРеализации);
			ТаблицаСчетаУчетаПоСделке 		= СписаниеТоваровСчетаУчета.Скопировать(ОтборПоДокументуРеализации);
			ТаблицаНоменклатураПоСделке 	= СписаниеТоваровНоменклатура.Скопировать(ОтборПоДокументуРеализации);
			
			ТаблицаСписанныеТоварыОтПокупателяПоСделке = УчетТоваров.ПодготовитьТаблицуВозвращенныеСписанныеТовары(
				ТаблицаТоваровПоСделке, 
				ТаблицаСчетаУчетаПоСделке,
				ТаблицаНоменклатураПоСделке, 
				РеквизитыВозвраты, Отказ);
				
			// в результирующей таблице заполняем построчно сделку к которой относится возврат
			ТаблицаСписанныеТоварыОтПокупателяПоСделке.Колонки.Добавить("Сделка");
			ТаблицаСписанныеТоварыОтПокупателяПоСделке.ЗаполнитьЗначения(СтрокаРеквизиты.Сделка, "Сделка");
			
			// загружаем подобранные партии по сделке в результирующую таблицу
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаСписанныеТоварыОтПокупателяПоСделке, ТаблицаСписанныеТоварыОтПокупателя);
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Возврат ТаблицаСписанныеТоварыОтПокупателя;
	
КонецФункции 

Процедура ПроставитьСторноТаблиц(ТаблицаСписанныеТовары, ТаблицаСобственныеТоварыУслуги, ТаблицаТоварыУслугиКомитентов, ТаблицаРеализованныеТоварыКомитентов) Экспорт

	
	СтруктураПолейДляСторно = Новый Структура("Количество, Себестоимость, СуммаСписания, СуммаСписанияНУ,
		|СуммаСписанияВР, СуммаСписанияПР, СуммаКорСписанияНУ, СуммаКорСписанияВР, СуммаКорСписанияПР");
	
	Если ТаблицаСписанныеТовары <> Неопределено Тогда
		УчетТоваров.ПроставитьСторноТаблицы(ТаблицаСписанныеТовары, СтруктураПолейДляСторно, -1);
	КонецЕсли;
	
	СтруктураПолейДляСторно = Новый Структура("Количество, СуммаВзаиморасчетов, СуммаРуб, СуммаНДСРуб,
		|СуммаБУ, СуммаНУ, СуммаРасчетовСКомитентом, СуммаПоступленияОтКомитента");
		
	Если ТаблицаСобственныеТоварыУслуги <> Неопределено Тогда
		УчетТоваров.ПроставитьСторноТаблицы(ТаблицаСобственныеТоварыУслуги, СтруктураПолейДляСторно, -1);
	КонецЕсли;
	
	Если ТаблицаТоварыУслугиКомитентов <> Неопределено Тогда
		УчетТоваров.ПроставитьСторноТаблицы(ТаблицаТоварыУслугиКомитентов, СтруктураПолейДляСторно, -1);
	КонецЕсли;
	
	СтруктураПолейДляСторно = Новый Структура("Количество, Выручка, СуммаПоступления, СуммаНДС");
	
	Если ТаблицаРеализованныеТоварыКомитентов <> Неопределено Тогда
		УчетТоваров.ПроставитьСторноТаблицы(ТаблицаРеализованныеТоварыКомитентов, СтруктураПолейДляСторно, -1);
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт

	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;

	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл

		Если СтрокаТаблицы.ЭтоУслуга Тогда
			СтрокаТаблицы.Содержание = "Реализация услуг";
		Иначе
			СтрокаТаблицы.Содержание = "Реализация товаров";
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Возвраты УСН
Функция РасходыПоСделкамУСН(СписокСделок)

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокСделок", 	СписокСделок);
	Запрос.УстановитьПараметр("Субсчета10", 	БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыПриУСН.Период,
	|	РасходыПриУСН.Регистратор,
	|	РасходыПриУСН.НомерСтроки,
	|	РасходыПриУСН.Активность,
	|	РасходыПриУСН.ВидДвижения,
	|	РасходыПриУСН.Организация,
	|	РасходыПриУСН.СтатусыОплатыРасходовУСН,
	|	РасходыПриУСН.РасчетныйДокумент,
	|	РасходыПриУСН.Партия,
	|	РасходыПриУСН.ВидРасхода,
	|	РасходыПриУСН.ЭлементРасхода,
	|	РасходыПриУСН.СтатусыПартийУСН,
	|	РасходыПриУСН.СчетУчета,
	|	РасходыПриУСН.Валюта,
	|	РасходыПриУСН.ДоговорКонтрагента,
	|	РасходыПриУСН.ОтражениеВУСН,
	|	РасходыПриУСН.НомерСтрокиДокумента,
	|	РасходыПриУСН.РеквизитыДокументаОплаты,
	|	РасходыПриУСН.Количество,
	|	РасходыПриУСН.Сумма,
	|	РасходыПриУСН.НДС,
	|	0 КАК ЭтапПроведения,
	|	РасходыПриУСН.СтатусСписания,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.СчетУчета В (&Субсчета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.СчетУчета В (&Субсчета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	РасходыПриУСН.МоментВремени
	|ИЗ
	|	РегистрНакопления.РасходыПриУСН КАК РасходыПриУСН
	|ГДЕ
	|	РасходыПриУСН.Регистратор В (&СписокСделок)";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПартииПоСделкамУСН(Реквизиты, МассивСделок, МассивНоменклатуры)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("МассивСделок",		МассивСделок);
	Запрос.УстановитьПараметр("Организация", 		Реквизиты.Организация);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
 	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажах.Ссылка КАК Сделка,
	|	ОтчетКомиссионераОПродажах.Ссылка КАК ДокументСделки,
	|	ИСТИНА КАК НепосредственнаяСделка
	|ПОМЕСТИТЬ ВременнаяТаблицаСделки
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.Ссылка В(&МассивСделок)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахВозвраты.Сделка,
	|	ОтчетКомиссионераОПродажахВозвраты.Ссылка,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ОтчетКомиссионераОПродажахВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|		ПО ОтчетКомиссионераОПродажахВозвраты.Ссылка = ОтчетКомиссионераОПродажах.Ссылка
	|			И ОтчетКомиссионераОПродажахВозвраты.Сделка = ОтчетКомиссионераОПродажах.Ссылка
	|ГДЕ
	|	ОтчетКомиссионераОПродажахВозвраты.Сделка В(&МассивСделок)
	|	И ОтчетКомиссионераОПродажах.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументСделки,
	|	Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаСделки.Сделка,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.СубконтоКт1 КАК Номенклатура,
	|	Партии.СубконтоКт2 КАК ДокументОприходования,
	|	Партии.КоличествоОборотКт КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаПартии
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			,
	|			&Период,
	|			Регистратор,
	|			,
	|			,
	|			,
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И СубконтоКт1 В (&МассивНоменклатуры)) КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСделки КАК ВременнаяТаблицаСделки
	|		ПО Партии.Регистратор = ВременнаяТаблицаСделки.ДокументСделки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.Сделка,
	|	Партии.Номенклатура КАК Номенклатура,
	|	Партии.ДокументОприходования КАК ДокументОприходования,
	|	Партии.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаПартииСВозвратом
	|ИЗ
	|	ВременнаяТаблицаПартии КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСделки КАК Сделки
	|		ПО Партии.Регистратор = Сделки.ДокументСделки
	|			И (Сделки.НепосредственнаяСделка)
	|			И Партии.Сделка = Сделки.Сделка
	|ГДЕ
	|	Партии.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Партии.Сделка,
	|	Партии.Номенклатура,
	|	Партии.ДокументОприходования,
	|	Партии.Количество
	|ИЗ
	|	ВременнаяТаблицаПартии КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСделки КАК Сделки
	|		ПО Партии.Регистратор = Сделки.ДокументСделки
	|			И (НЕ Сделки.НепосредственнаяСделка)
	|			И Партии.Сделка = Сделки.Сделка
	|ГДЕ
	|	Партии.Количество < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаПартииСВозвратом.Сделка КАК Сделка,
	|	ВременнаяТаблицаПартииСВозвратом.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаПартииСВозвратом.ДокументОприходования КАК ДокументОприходования,
	|	СУММА(ВременнаяТаблицаПартииСВозвратом.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаПартииСВозвратом КАК ВременнаяТаблицаПартииСВозвратом
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаПартииСВозвратом.Номенклатура,
	|	ВременнаяТаблицаПартииСВозвратом.ДокументОприходования,
	|	ВременнаяТаблицаПартииСВозвратом.Сделка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Количество УБЫВ";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПодготовитьТаблицыДляУСН(
			ТаблицаТовары,
			ТаблицаРеквизитыСделки,
			ТаблицаРеквизиты,
			СуммаСторноРасходов, // Рассчитывается и возвращается
			СуммаСторноНДС, // Рассчитывается и возвращается
			СуммаПризнанияНДС, // Рассчитывается и возвращается
			Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаТовары)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если НЕ УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат Неопределено;
	КонецЕсли;

	ПорядокПризнанияРасходовПоНДС        = УчетнаяПолитика.ПорядокПризнанияРасходовПоНДС(Реквизиты.Организация, Реквизиты.Период);
	ПорядокПризнанияРасходовПоТоварам    = УчетнаяПолитика.ПорядокПризнанияРасходовПоТоварам(Реквизиты.Организация, Реквизиты.Период);
	ПорядокПризнанияМатериальныхРасходов = УчетнаяПолитика.ПорядокПризнанияМатериальныхРасходов(Реквизиты.Организация, Реквизиты.Период);

	СуммаСторноНДС    = 0;
	СуммаПризнанияНДС = 0;

	ВыделятьНДСУСН           = (ПорядокПризнанияРасходовПоНДС = Перечисления.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику);
	ВыделятьНДСУСНРеализация = (ПорядокПризнанияРасходовПоНДС = Перечисления.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику);
	
	ТоварыПоОплате    = (ПорядокПризнанияРасходовПоТоварам    = Перечисления.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику);
	ТоварыПоОтгрузке  = (ПорядокПризнанияРасходовПоТоварам    = Перечисления.ПорядокПризнанияРасходовПоТоварам.ПоФактуРеализации);
	МатериалыПоОплате = (ПорядокПризнанияМатериальныхРасходов = Перечисления.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику);
	
	МассивСделок = ТаблицаРеквизитыСделки.ВыгрузитьКолонку("Ссылка");
	
	// 1. Подготовить пустую таблицу для формирования движений
	НаборЗаписей = РегистрыНакопления.РасходыПриУСН.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Реквизиты.Регистратор);
	НаборЗаписей.Прочитать();
	ТаблицаДвиженийРасходов = НаборЗаписей.ВыгрузитьКолонки();
	// Добавить обязательные колонки
	ТаблицаДвиженийРасходов.Колонки.Добавить("ЭтоТовар", Новый ОписаниеТипов("Булево"));
	ТаблицаДвиженийРасходов.Колонки.Добавить("ЭтоМатериал", Новый ОписаниеТипов("Булево"));
	
	ТаблицаРасходыУСНПоСделкам = РасходыПоСделкамУСН(МассивСделок);
	
	// Формирование остатков расходов по возвращаемым партиям на текущий документ
	
	// Формирование таблицы фильтров
	ТаблицаФильтров = Новый ТаблицаЗначений;
	ТаблицаФильтров.Колонки.Добавить("ИмяПоля");
	ТаблицаФильтров.Колонки.Добавить("ЗначениеПоля");
	ТаблицаФильтров.Колонки.Добавить("Условие");
	
	Фильтр = ТаблицаФильтров.Добавить();
	Фильтр.ИмяПоля      = "ВидРасхода";
	Фильтр.ЗначениеПоля = Перечисления.ВидыРасходовУСН.Номенклатура;
	Фильтр.Условие      = "=";
	
	Фильтр = ТаблицаФильтров.Добавить();
	Фильтр.ИмяПоля      = "СтатусыПартийУСН";
	Фильтр.ЗначениеПоля = Перечисления.СтатусыПартийУСН.Списанные;
	Фильтр.Условие      = "=";
	
	МассивНоменклатуры = ТаблицаТовары.ВыгрузитьКолонку("Номенклатура");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивНоменклатуры);
	
	Фильтр = ТаблицаФильтров.Добавить();
	Фильтр.ИмяПоля      = "ЭлементРасхода";
	Фильтр.ЗначениеПоля = МассивНоменклатуры;
	Фильтр.Условие      = "В";
	
	Фильтр = ТаблицаФильтров.Добавить();
	Фильтр.ИмяПоля      = "Партия";
	Фильтр.ЗначениеПоля = МассивСделок;
	Фильтр.Условие      = "В";
	
	ТаблицаОстатковРасходовПоСделкам = НалоговыйУчетУСН.ВыполнитьЗапросПоРасходам(
	Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая),
	Реквизиты.Организация,
	ТаблицаФильтров);
	
	ТаблицаПартииСделок = ПартииПоСделкамУСН(Реквизиты, МассивСделок, МассивНоменклатуры);
	
	Для каждого РеквизитыСделки Из ТаблицаРеквизитыСделки Цикл 
		
		Если ЗначениеЗаполнено(РеквизитыСделки.Ссылка) Тогда
		
			ОтборПоСделке = Новый Структура("Сделка", РеквизитыСделки.Ссылка);
			
			ТаблицаДвиженийРасходовПоСделке = ТаблицаДвиженийРасходов.СкопироватьКолонки();
			ТаблицаТоварыПоСделке = ТаблицаТовары.Скопировать(ОтборПоСделке);
			
			МассивНоменклатуры 	= ТаблицаТоварыПоСделке.ВыгрузитьКолонку("Номенклатура");
			ТаблицаПартииСделки = ТаблицаПартииСделок.Скопировать(ОтборПоСделке);
			
			// 2. Добавим в партии информацию об изменении ОтражениеВУСН
			НалоговыйУчетУСН.ЗаполнитьОтражениеВНУпоСписанию(РеквизитыСделки, ТаблицаПартииСделки, "Реализация");
			
			// 3. Из движений по регистру РасходыПриУСН, выбираем расходы сделанные текущим документом сделки
			ТаблицаРасходыУСНПоСделке = ТаблицаРасходыУСНПоСделкам.Скопировать(Новый Структура("Регистратор, ВидДвижения", РеквизитыСделки.Ссылка, ВидДвиженияНакопления.Расход));
			
			// 4. Из таблицы расходов выбираем соответствующие партии и элементы расходов
			ОтборПоТекущейСделке 	= Новый Структура("Партия", РеквизитыСделки.Ссылка);
			ТаблицаОстатковРасходов = ТаблицаОстатковРасходовПоСделкам.Скопировать(ОтборПоТекущейСделке);
			
			ТаблицаПартииСделки.Индексы.Добавить("Номенклатура");
			ТаблицаРасходыУСНПоСделке.Индексы.Добавить("ЭлементРасхода,Партия");
			ТаблицаОстатковРасходов.Индексы.Добавить("ЭлементРасхода");
			
			// 5 .Цикл по товарам, ...
			Для Каждого Строка Из ТаблицаТоварыПоСделке Цикл
				
				СтруктураОтбора = Новый Структура;
				СтруктураОтбора.Вставить("Номенклатура", Строка.Номенклатура);
				
				НайденныеСтроки = ТаблицаПартииСделки.НайтиСтроки(СтруктураОтбора);
				
				СтатусСписания = Перечисления.ОтражениеВУСН.ПустаяСсылка();
				Если НайденныеСтроки.Количество() > 0 Тогда
					СтатусСписания = НайденныеСтроки[0].СтатусСписания;
				КонецЕсли;
				
				//Добавить строки поступления по партиям
				КоличествоОсталосьСписать = Строка.Количество;
				Для Каждого СтрокаПартии Из НайденныеСтроки Цикл
					Если НЕ КоличествоОсталосьСписать > 0 Тогда
						Прервать;
					КонецЕсли;
					Если НЕ СтрокаПартии.Количество > 0 Тогда
						Продолжить;
					КонецЕсли;
					
					КоличествоСписать         = Мин(КоличествоОсталосьСписать, СтрокаПартии.Количество);
					КоличествоОсталосьСписать = КоличествоОсталосьСписать - КоличествоСписать;
					СтрокаПартии.Количество   = СтрокаПартии.Количество - КоличествоСписать;
					
					СтруктураОтбора = Новый Структура;
					СтруктураОтбора.Вставить("ЭлементРасхода", Строка.Номенклатура);
					
					СтруктураОтбораПоПартиям = Новый Структура;
					СтруктураОтбораПоПартиям.Вставить("ЭлементРасхода", Строка.Номенклатура);
					СтруктураОтбораПоПартиям.Вставить("Партия",         СтрокаПартии.ДокументОприходования);
					
					НайденныеСтрокиСписано = ТаблицаРасходыУСНПоСделке.НайтиСтроки(СтруктураОтбораПоПартиям);
					НайденныеСтрокиОстаток = ТаблицаОстатковРасходов.НайтиСтроки(СтруктураОтбора);
					
					КоличествоОсталосьСписатьРасход = КоличествоСписать;
					Для Каждого СтрокаСписания Из НайденныеСтрокиСписано Цикл
						Если НЕ СтрокаСписания.Количество > 0 Тогда
							Продолжить;
						КонецЕсли;
						Для Каждого СтрокаОстатка Из НайденныеСтрокиОстаток Цикл
							Если НЕ СтрокаСписания.Количество > 0 Тогда
								Продолжить;
							КонецЕсли;
							Если НЕ КоличествоОсталосьСписатьРасход > 0 Тогда
								Прервать;
							КонецЕсли;
							Если НЕ СтрокаОстатка.Количество > 0 Тогда
								Продолжить;
							КонецЕсли;
							
							КоличествоСписатьРасход = Мин(КоличествоОсталосьСписатьРасход, СтрокаСписания.Количество, СтрокаОстатка.Количество);
							Коэфф = ?(СтрокаОстатка.Количество = 0, 0, КоличествоСписатьРасход/СтрокаОстатка.Количество);
							//Добавить строки поступления по расходам
							НоваяСтрокаРасход = ТаблицаДвиженийРасходовПоСделке.Добавить();
							НоваяСтрокаПриход = ТаблицаДвиженийРасходовПоСделке.Добавить();
							
							ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаОстатка);
							ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаОстатка);
							
							НоваяСтрокаРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
							НоваяСтрокаПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
							НоваяСтрокаПриход.СтатусыПартийУСН  = СтрокаСписания.СтатусыПартийУСН;
							НоваяСтрокаПриход.Партия            = СтрокаСписания.Партия;
							Если (НоваяСтрокаПриход.СтатусыОплатыРасходовУСН = Перечисления.СтатусыРасходовУСН.НеОплаченоПокупателем)
								ИЛИ (НоваяСтрокаПриход.СтатусыОплатыРасходовУСН  = Перечисления.СтатусыРасходовУСН.НеРаспределено) Тогда
								НоваяСтрокаПриход.СтатусыОплатыРасходовУСН   = Перечисления.СтатусыРасходовУСН.НеСписано;
							Иначе
								НоваяСтрокаПриход.СтатусыОплатыРасходовУСН = Перечисления.СтатусыРасходовУСН.НеСписаноНеОплачено;
							КонецЕсли;
							//Движение расход
							НоваяСтрокаРасход.Сумма      = Коэфф*СтрокаОстатка.Сумма;
							НоваяСтрокаРасход.НДС        = Коэфф*СтрокаОстатка.НДС;
							НоваяСтрокаРасход.Количество = КоличествоСписатьРасход;
							//Движение приход
							НоваяСтрокаПриход.Сумма      = Коэфф * СтрокаОстатка.Сумма;
							НоваяСтрокаПриход.НДС        = Коэфф * СтрокаОстатка.НДС;
							НоваяСтрокаПриход.Количество = КоличествоСписатьРасход;
							
							КоличествоОсталосьСписатьРасход = КоличествоОсталосьСписатьРасход - КоличествоСписатьРасход;
							СтрокаСписания.Количество       = СтрокаСписания.Количество - НоваяСтрокаПриход.Количество;
							СтрокаСписания.Сумма            = СтрокаСписания.Сумма - НоваяСтрокаПриход.Сумма;
							СтрокаСписания.НДС              = СтрокаСписания.НДС - НоваяСтрокаПриход.НДС;
							
							СтрокаОстатка.Количество = СтрокаОстатка.Количество - НоваяСтрокаПриход.Количество;
							СтрокаОстатка.Сумма      = СтрокаОстатка.Сумма - НоваяСтрокаПриход.Сумма;
							СтрокаОстатка.НДС        = СтрокаОстатка.НДС - НоваяСтрокаПриход.НДС;
							
							Если (Реквизиты.Период >= Дата("20060101"))
								И (ТоварыПоОтгрузке)
								И (НоваяСтрокаРасход.СтатусыОплатыРасходовУСН = Перечисления.СтатусыРасходовУСН.НеОплаченоПокупателем)
								И (НоваяСтрокаПриход.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются)
								И (СтатусСписания <> Перечисления.ОтражениеВУСН.НеПринимаются) Тогда
								
								КурсВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяСтрокаПриход.Валюта, Реквизиты.Период);
								
								КурсВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяСтрокаПриход.Валюта, Реквизиты.Период);
								СуммаСторноРасходов = СуммаСторноРасходов
									+ РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
										НоваяСтрокаПриход.Сумма,
										НоваяСтрокаПриход.Валюта,
										Константы.ВалютаРегламентированногоУчета.Получить(),
										КурсВалюты.Курс, 1,
										КурсВалюты.Кратность, 1);
								СуммаСторноНДС = СуммаСторноНДС
									+ РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
										НоваяСтрокаПриход.НДС,
										НоваяСтрокаПриход.Валюта,
										Константы.ВалютаРегламентированногоУчета.Получить(),
										КурсВалюты.Курс, 1,
										КурсВалюты.Кратность, 1);
								
							ИначеЕсли (ВыделятьНДСУСН)
								И (НоваяСтрокаПриход.СтатусыОплатыРасходовУСН = Перечисления.СтатусыРасходовУСН.НеСписано)
								И (НоваяСтрокаПриход.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются)
								И (СтатусСписания = Перечисления.ОтражениеВУСН.НеПринимаются) Тогда
								
								КурсВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяСтрокаПриход.Валюта, Реквизиты.Период);
								СуммаПризнанияНДС = СуммаПризнанияНДС
									+ РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
										НоваяСтрокаПриход.НДС,
										НоваяСтрокаПриход.Валюта,
										Константы.ВалютаРегламентированногоУчета.Получить(),
										КурсВалюты.Курс, 1,
										КурсВалюты.Кратность, 1);
								
							КонецЕсли;
							
						КонецЦикла;
					КонецЦикла;
					
					Если КоличествоОсталосьСписатьРасход > 0 Тогда
						Для Каждого СтрокаСписания Из НайденныеСтрокиСписано Цикл
							Если НЕ СтрокаСписания.Количество > 0 Тогда
								Продолжить;
							КонецЕсли;
							КоличествоСписатьРасход = Мин(КоличествоОсталосьСписатьРасход, СтрокаСписания.Количество);
							Коэфф = ?(СтрокаСписания.Количество = 0, 0, КоличествоСписатьРасход/СтрокаСписания.Количество);
							
							//Добавить строки поступления по расходам
							НоваяСтрокаПриход = ТаблицаДвиженийРасходовПоСделке.Добавить();
							Для Каждого Кол Из ТаблицаДвиженийРасходовПоСделке.Колонки Цикл
								Если ПустаяСтрока(Кол.Имя) ИЛИ Кол.Имя = "QuieryId" Тогда
									Продолжить;
								КонецЕсли;
								НоваяСтрокаПриход[Кол.Имя] = СтрокаСписания[Кол.Имя];
							КонецЦикла;
							НоваяСтрокаПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
							
							//Определим сумму сторнируемых расходов
							ЭтоТовар	= БухгалтерскийУчетПовтИсп.СчетВИерархии(Строка.СчетУчета, ПланыСчетов.Хозрасчетный.ТоварыОтгруженные)
								ИЛИ БухгалтерскийУчетПовтИсп.СчетВИерархии(Строка.СчетУчета, ПланыСчетов.Хозрасчетный.Товары);
							ЭтоМатериал	= БухгалтерскийУчетПовтИсп.СчетВИерархии(Строка.СчетУчета, ПланыСчетов.Хозрасчетный.Материалы);
							
							РасходыПоОплате = ((ТоварыПоОплате И ЭтоТовар) ИЛИ (МатериалыПоОплате И ЭтоМатериал));
							
							Если (РасходыПоОплате) И (НоваяСтрокаПриход.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются) Тогда
								НоваяСтрокаПриход.СтатусыОплатыРасходовУСН = Перечисления.СтатусыРасходовУСН.НеСписаноПринято;
							Иначе
								НоваяСтрокаПриход.СтатусыОплатыРасходовУСН = Перечисления.СтатусыРасходовУСН.НеСписано;
							КонецЕсли;
							
							//Движение приход
							НоваяСтрокаПриход.Сумма      = Коэфф*СтрокаСписания.Сумма;
							НоваяСтрокаПриход.НДС        = Коэфф*СтрокаСписания.НДС;
							НоваяСтрокаПриход.Количество = КоличествоСписатьРасход;
							
							КоличествоОсталосьСписатьРасход = КоличествоОсталосьСписатьРасход - КоличествоСписатьРасход;
							СтрокаСписания.Количество       = СтрокаСписания.Количество - НоваяСтрокаПриход.Количество;
							СтрокаСписания.Сумма            = СтрокаСписания.Сумма - НоваяСтрокаПриход.Сумма;
							СтрокаСписания.НДС              = СтрокаСписания.НДС - НоваяСтрокаПриход.НДС;
							
							Если (НЕ ВыделятьНДСУСНРеализация) И (ВыделятьНДСУСН) Тогда
								НоваяСтрокаПриход.Сумма = НоваяСтрокаПриход.Сумма - НоваяСтрокаПриход.НДС;
							КонецЕсли;
							
							Если (НЕ РасходыПоОплате) И (НоваяСтрокаПриход.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются)
								И (НЕ СтатусСписания = Перечисления.ОтражениеВУСН.НеПринимаются) Тогда
								
								КурсВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяСтрокаПриход.Валюта, Реквизиты.Период);
								СуммаСторноРасходов = СуммаСторноРасходов
									+ РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
										НоваяСтрокаПриход.Сумма,
										НоваяСтрокаПриход.Валюта,
										Константы.ВалютаРегламентированногоУчета.Получить(),
										КурсВалюты.Курс, 1,
										КурсВалюты.Кратность, 1);
								СуммаСторноНДС = СуммаСторноНДС
									+ РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
										НоваяСтрокаПриход.НДС,
										НоваяСтрокаПриход.Валюта,
										Константы.ВалютаРегламентированногоУчета.Получить(),
										КурсВалюты.Курс, 1,
										КурсВалюты.Кратность, 1);
								
							ИначеЕсли (ВыделятьНДСУСН)
								И (НоваяСтрокаПриход.СтатусыОплатыРасходовУСН = Перечисления.СтатусыРасходовУСН.НеСписано)
								И (НоваяСтрокаПриход.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются)
								И (СтатусСписания = Перечисления.ОтражениеВУСН.НеПринимаются) Тогда
								
								КурсВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяСтрокаПриход.Валюта, Реквизиты.Период);
								СуммаПризнанияНДС = СуммаПризнанияНДС
									+ РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
										НоваяСтрокаПриход.НДС,
										НоваяСтрокаПриход.Валюта,
										Константы.ВалютаРегламентированногоУчета.Получить(),
										КурсВалюты.Курс, 1,
										КурсВалюты.Кратность, 1);
								
							КонецЕсли;
							
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
				
				Если КоличествоОсталосьСписать > 0 Тогда
					//Оприходовать по документу возврата
				КонецЕсли;
				
			КонецЦикла;
			
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаДвиженийРасходовПоСделке, ТаблицаДвиженийРасходов);
		
		КонецЕсли; 
		
		
	КонецЦикла;
	
	//Недостающие поля.
	ТаблицаДвиженийРасходов.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	ТаблицаДвиженийРасходов.ЗаполнитьЗначения(Реквизиты.Период, "Период");
	ТаблицаДвиженийРасходов.ЗаполнитьЗначения(Реквизиты.Регистратор, "Регистратор");
	ТаблицаДвиженийРасходов.ЗаполнитьЗначения(Истина, "Активность");
	
	
	Возврат ТаблицаДвиженийРасходов;
	
КонецФункции

// Возвраты ИП
Функция ПодготовитьТаблицуВыручкиОтРеализацииИП(ТаблицаВыручки, ТаблицаРеквизиты) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаВыручки)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если НЕ УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаМПЗ	= ТаблицаВыручки.Скопировать();
	ТаблицаМПЗ.Колонки.Добавить("НоменклатурнаяГруппа",		Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ТаблицаМПЗ.Колонки.Добавить("Продукция",				Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаМПЗ.Колонки.Добавить("СчетЗатрат",				Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаМПЗ.Колонки.Добавить("ПринятиеКналоговомуУчету",	Новый ОписаниеТипов("Булево"));
	ТаблицаМПЗ.Колонки.Добавить("СтатьяЗатрат",				Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));
	ТаблицаМПЗ.Колонки.Добавить("ВидРасходовНУ",			Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРасходовНУ"));
	ТаблицаМПЗ.Колонки.Добавить("Партия",					Документы.ТипВсеСсылки());
	ТаблицаМПЗ.Колонки.Добавить("ВидДеятельностиДляНалоговогоУчетаЗатрат",
		Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"));
	
	ТаблицаМПЗ.Колонки.СуммаРуб.Имя		= "Сумма";
	ТаблицаМПЗ.Колонки.СуммаНДСРуб.Имя	= "НДС";
	
	ВестиУчетПоВидамДеятельностиИП	= УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период);
	Если ВестиУчетПоВидамДеятельностиИП Тогда
		ТаблицаМПЗ.ЗагрузитьКолонку(ТаблицаМПЗ.ВыгрузитьКолонку("Субконто"), "НоменклатурнаяГруппа");
	Иначе
		ОсновнаяНоменклатурнаяГруппа	= УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период);
		ТаблицаМПЗ.ЗаполнитьЗначения(ОсновнаяНоменклатурнаяГруппа, "НоменклатурнаяГруппа");
	КонецЕсли;
	
	ТаблицаМПЗ.ЗаполнитьЗначения(Истина, "ПринятиеКналоговомуУчету");
	
	Возврат ТаблицаМПЗ;

КонецФункции

// Возвраты авансов
// Подготавливаем таблицу документа по возврату аванса уменьшая сумму требуемого аванса 
// на сумму зачтенного аванса с документов возврата
Функция ПодготовитьТаблицуЗачетАвансовСУчетовВозврата(ТаблицаДокументаВзаиморасчеты, ТаблицаДокументаВзаиморасчетыВозвраты, ТаблицаРеквизиты, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаДокументаВзаиморасчеты)
	 Или Не ЗначениеЗаполнено(ТаблицаДокументаВзаиморасчетыВозвраты) Тогда
		Возврат ТаблицаДокументаВзаиморасчеты;
	КонецЕсли; 
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	// строка содержит общую сумму восстанавливаемого аванса
	СтрокаАвансыВосстановленные = ТаблицаДокументаВзаиморасчетыВозвраты.Найти(Реквизиты.Регистратор, "ДокументРасчетов");
	Если СтрокаАвансыВосстановленные <> Неопределено Тогда
		
		ОтборПоСтрокам = Новый Структура("Контрагент, ДоговорКонтрагента, СчетРасчетов");
		ЗаполнитьЗначенияСвойств(ОтборПоСтрокам, СтрокаАвансыВосстановленные);
		
		СтрокиТаблицыДокумента = ТаблицаДокументаВзаиморасчеты.НайтиСтроки(ОтборПоСтрокам);
		
		
		Если СтрокиТаблицыДокумента.Количество() > 0 Тогда
		
			СтрокаТаблицыДокумента = СтрокиТаблицыДокумента[0];
			СтрокаТаблицыДокумента.СуммаВзаиморасчетов 		 	= СтрокаТаблицыДокумента.СуммаВзаиморасчетов - СтрокаАвансыВосстановленные.СуммаВзаиморасчетов;
			СтрокаТаблицыДокумента.СуммаРуб 		 			= СтрокаТаблицыДокумента.СуммаРуб - СтрокаАвансыВосстановленные.СуммаРуб;
			СтрокаТаблицыДокумента.СуммаВзаиморасчетовПатент 	= СтрокаТаблицыДокумента.СуммаВзаиморасчетовПатент - СтрокаАвансыВосстановленные.СуммаВзаиморасчетовПатент;
			СтрокаТаблицыДокумента.СуммаВзаиморасчетовЕНВД 	 	= СтрокаТаблицыДокумента.СуммаВзаиморасчетовЕНВД - СтрокаАвансыВосстановленные.СуммаВзаиморасчетовЕНВД;
			СтрокаТаблицыДокумента.СуммаВзаиморасчетовКомитента = СтрокаТаблицыДокумента.СуммаВзаиморасчетовКомитента - СтрокаАвансыВосстановленные.СуммаВзаиморасчетовКомитента;
		
		КонецЕсли; 
	
	КонецЕсли; 
	
	Возврат ТаблицаДокументаВзаиморасчеты;

КонецФункции 

// Функция добавляет в таблицу взаиморасчетов реализации суммы выделяемого аванса по возвратам комиссионеру
//
// Параметры:
//  ТаблицаВзаиморасчетовРеализация  - ТаблицаЗначений - таблица содержащая сведения о взаиморасчетам по реализации
//  ТаблицаВзаиморасчетовВозвраты   - ТаблицаЗначений  - таблица содержащая сведения о остатках взаиморасчетов по расчетным документам
//  ТаблицаАвансовВозвраты          - ТаблицаЗначений  - таблица содержащая сведения о выделяемых авансах по расчетным документам
// Возвращаемое значение:
//   ТаблицаЗначений   - ТаблицаВзаиморасчетовРеализация дополненная сведениями по взаиморасчетам по возвратам
Функция ДобавитьАвансыВозвратыКомиссионеру(ТаблицаВзаиморасчетовРеализация, ТаблицаВзаиморасчетовВозвраты, ТаблицаАвансовВозвраты, ТаблицаРеквизиты, Отказ) Экспорт
	Реквизиты = ТаблицаРеквизиты[0];
	
	// Отбираем строки содержащие сумму взаиморасчетов по текущему документу на которые можно распределить выделяемый аванс.
	ТаблицаВозвратаВыделяемогоАванса = ТаблицаВзаиморасчетовВозвраты.Скопировать(Новый Структура("ДокументРасчетов", Реквизиты.Регистратор));
	ТаблицаВзаиморасчетовРеализацияСВозвратом = ТаблицаВзаиморасчетовРеализация.Скопировать();
	ТаблицаВзаиморасчетовРеализацияСВозвратом.Колонки.Добавить("ЭтоВозврат", Новый ОписаниеТипов("Булево"));
	
	Если ТаблицаВозвратаВыделяемогоАванса.Количество() = 0 Тогда
		Возврат ТаблицаВзаиморасчетовРеализацияСВозвратом;
	КонецЕсли;
	
	ВидыВзаиморасчетов = СтрРазделить("ЕНВД,Комитента,Патент,ТорговыйСбор", ",");
	
	Для каждого СтрокаВозврата Из ТаблицаАвансовВозвраты Цикл
		СуммаАванса = СтрокаВозврата.СуммаЗачета;
		ОтборПоСтрокеАванса = Новый Структура("Контрагент, ДоговорКонтрагента, ДокументРасчетов");
		ЗаполнитьЗначенияСвойств(ОтборПоСтрокеАванса, СтрокаВозврата);
		ОтборПоСтрокеАванса.ДокументРасчетов = СтрокаВозврата.ДокументАванса;
		
		СтрокиТаблицыВозврата = ТаблицаВзаиморасчетовВозвраты.НайтиСтроки(ОтборПоСтрокеАванса);
		
		// Из суммы выделяемого аванса вычитаем неоплаченную часть в остатках взаиморасчетов.
		Для каждого СтрокаТаблицыВозврата Из СтрокиТаблицыВозврата Цикл
			СуммаАванса = СуммаАванса - СтрокаТаблицыВозврата.СуммаВзаиморасчетов;
		КонецЦикла;
		
		// Сумма выделенного аванса по документу расчетов которую можно отнести на текущий документ.
		Если СуммаАванса > 0 Тогда 
			Для каждого СтрокаВозвратаВыделяемогоАванса Из ТаблицаВозвратаВыделяемогоАванса  Цикл
				СуммаВозврата = Мин(СуммаАванса, СтрокаВозвратаВыделяемогоАванса.СуммаВзаиморасчетов);
				
				Если СуммаВозврата = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				КоэффициентВозврата = СуммаВозврата / СтрокаВозвратаВыделяемогоАванса.СуммаВзаиморасчетов;
				
				НоваяСтрока = ТаблицаВзаиморасчетовРеализацияСВозвратом.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВозвратаВыделяемогоАванса);
				
				НоваяСтрока.СуммаВзаиморасчетов   = СуммаВозврата;
				НоваяСтрока.СуммаРуб              = СтрокаВозвратаВыделяемогоАванса.СуммаРуб * КоэффициентВозврата;
				НоваяСтрока.СуммаРубПоКурсуАванса = СтрокаВозвратаВыделяемогоАванса.СуммаРубПоКурсуАванса * КоэффициентВозврата;
				
				Для каждого ВидВзаиморасчетов Из ВидыВзаиморасчетов Цикл
					ИменаКолонок = Новый Массив;
					ИменаКолонок.Добавить("СуммаВзаиморасчетов" + ВидВзаиморасчетов);
					ИменаКолонок.Добавить("СуммаРуб_" + ВидВзаиморасчетов);
					
					Для каждого ИмяКолонки Из ИменаКолонок Цикл
						НоваяСтрока[ИмяКолонки]                     = СтрокаВозвратаВыделяемогоАванса[ИмяКолонки] * КоэффициентВозврата;
						СтрокаВозвратаВыделяемогоАванса[ИмяКолонки] = СтрокаВозвратаВыделяемогоАванса[ИмяКолонки] - НоваяСтрока[ИмяКолонки];
					КонецЦикла;
				КонецЦикла; 
				
				НоваяСтрока.ДокументРасчетов = СтрокаВозврата.ДокументАванса;
				НоваяСтрока.СчетРасчетов     = СтрокаВозврата.СчетАвансов;
				НоваяСтрока.СчетАвансов      = СтрокаВозвратаВыделяемогоАванса.СчетРасчетов;
				НоваяСтрока.ЭтоВозврат       = Истина;
				
				СтрокаВозвратаВыделяемогоАванса.СуммаВзаиморасчетов   = СтрокаВозвратаВыделяемогоАванса.СуммаВзаиморасчетов - СуммаВозврата;
				СтрокаВозвратаВыделяемогоАванса.СуммаРуб              = СтрокаВозвратаВыделяемогоАванса.СуммаРуб - НоваяСтрока.СуммаРуб;
				СтрокаВозвратаВыделяемогоАванса.СуммаРубПоКурсуАванса = СтрокаВозвратаВыделяемогоАванса.СуммаРубПоКурсуАванса - НоваяСтрока.СуммаРубПоКурсуАванса;
				
				СуммаАванса = СуммаАванса - СуммаВозврата;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаВзаиморасчетовРеализацияСВозвратом;
КонецФункции

// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Отчет комиссионера
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Отчет комиссионера'");
	КомандаПечати.Картинка = БиблиотекаКартинок.Печать;
	
	// Счет-фактура от поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураПолученный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактурПолученных";
	
	// Универсальный передаточный документ за поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД) за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Отчет комиссионера""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

	
КонецПроцедуры

Функция ПечатьОтчетаКомиссионера(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетКомиссионераОПродажах_Накладная";

	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
 	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажах.Ссылка,
	|	ОтчетКомиссионераОПродажах.Номер,
	|	ОтчетКомиссионераОПродажах.Дата,
	|	ОтчетКомиссионераОПродажах.ДоговорКонтрагента,
	|	ОтчетКомиссионераОПродажах.Контрагент,
	|	ОтчетКомиссионераОПродажах.Организация,
	|	ОтчетКомиссионераОПродажах.СуммаДокумента,
	|	ОтчетКомиссионераОПродажах.ВалютаДокумента,
	|	ОтчетКомиссионераОПродажах.СуммаВключаетНДС,
	|	ОтчетКомиссионераОПродажах.Товары.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		ВЫБОР
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|				ТОГДА ОтчетКомиссионераОПродажах.Товары.Номенклатура.Артикул
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|				ТОГДА ОтчетКомиссионераОПродажах.Товары.Номенклатура.Код
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|				ТОГДА """"
	|		КОНЕЦ КАК КодАртикул,
	|		КоличествоМест,
	|		Количество,
	|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|		Цена,
	|		Сумма,
	|		СуммаВознаграждения КАК Вознаграждение,
	|		СуммаНДС
	|	),
	|	ОтчетКомиссионераОПродажах.Услуги.(
	|		Номенклатура,
	|		ВЫБОР
	|			КОГДА ОтчетКомиссионераОПродажах.Услуги.Содержание = """"
	|				ТОГДА ОтчетКомиссионераОПродажах.Услуги.Номенклатура.НаименованиеПолное
	|			ИНАЧЕ ОтчетКомиссионераОПродажах.Услуги.Содержание
	|		КОНЕЦ КАК Товар,
	|		ВЫБОР
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|				ТОГДА ОтчетКомиссионераОПродажах.Услуги.Номенклатура.Артикул
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|				ТОГДА ОтчетКомиссионераОПродажах.Услуги.Номенклатура.Код
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|				ТОГДА """"
	|		КОНЕЦ КАК КодАртикул,
	|		Количество,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|		Цена,
	|		Сумма,
	|		СуммаВознаграждения КАК Вознаграждение,
	|		СуммаНДС
	|	)
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетКомиссионераОПродажах.Дата,
	|	ОтчетКомиссионераОПродажах.Ссылка,
	|	НомерСтроки";


	Шапка = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомиссионераОПродажах.ПФ_MXL_Накладная");

		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, "Отчет комиссионера");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");

		СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеКонтрагента;
		ОбластьМакета.Параметры.Поставщик = Шапка.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.Получатель = Шапка.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Артикул";
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Код";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьСтроки = ?(ВыводитьКоды,	"СтрокаСКодом", "Строка");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		
		Сумма       = 0;
		СуммаНДС    = 0;
		НомерСтроки = 0;

		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			НомерСтроки = НомерСтроки + 1;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьМакета);

			Сумма    = Сумма    + ВыборкаСтрокТовары.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаСтрокТовары.СуммаНДС;

		КонецЦикла;
		
		ВыборкаСтрокУслуги = Шапка.Услуги.Выбрать();
		Пока ВыборкаСтрокУслуги.Следующий() Цикл

			НомерСтроки = НомерСтроки + 1;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокУслуги);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьМакета);

			Сумма    = Сумма    + ВыборкаСтрокУслуги.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаСтрокУслуги.СуммаНДС;

		КонецЦикла;
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.СуммаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести ИтогоНДС
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС);
		ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, НСтр("ru = 'В том числе НДС:'"), НСтр("ru = 'Сумма НДС:'"));
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
		ИтоговаяСтрока = НСтр("ru = 'Всего наименований %Количество%, на сумму'") + " " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока,"%Количество%", ВыборкаСтрокТовары.Количество() + ВыборкаСтрокУслуги.Количество());
		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьОтчетаКомиссионера()

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("ВременнаяТаблицаПокупатели",                       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаНаличиеТоваров",                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаВозвратТоваров",                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыПредварительная",                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",                                        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаВознаграждениеНеСуммированная",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаВознаграждение",                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте",                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",                        НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА ВЫРАЗИТЬ(&ПредставлениеПокупателя КАК СТРОКА(1000))
	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ОбособленноеПодразделение
	|				И ОтчетКомиссионераОПродажахПокупатели.Покупатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ГоловнойКонтрагент
	|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
	|	КОНЕЦ КАК Покупатель,
	|	ОтчетКомиссионераОПродажахПокупатели.Покупатель.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель.ОбособленноеПодразделение
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент = ОтчетКомиссионераОПродажахПокупатели.Покупатель
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА ВЫРАЗИТЬ(&Грузополучатель КАК СТРОКА(1000))
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура КАК СчетФактура,
	|	ОтчетКомиссионераОПродажахПокупатели.КлючСтроки КАК КлючСтроки,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ОбособленноеПодразделение
	|				И ОтчетКомиссионераОПродажахПокупатели.Покупатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ГоловнойКонтрагент
	|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
	|	КОНЕЦ КАК ПокупательДляГруппировки
	|ПОМЕСТИТЬ ДанныеОПокупателях
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели,
	|	Документ.ОтчетКомиссионераОПродажах КАК Реквизиты
	|ГДЕ
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка = &ДокументОснование
	|	И ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &СчетФактура
	|	И Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НаличиеТоваров
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаТовары,
	|	ДанныеОПокупателях КАК ДанныеОПокупателях
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.КлючСтроки = ДанныеОПокупателях.КлючСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаВозвраты.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ВозвратТоваров
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ТаблицаВозвраты
	|ГДЕ
	|	ТаблицаВозвраты.Ссылка = &ДокументОснование
	|	И ТаблицаВозвраты.СчетФактура = &СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.ДатаОснования КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.Подразделение КАК Подразделение,
	|	Реквизиты.Поставщик КАК Поставщик,
	|	Реквизиты.ИННпоставщика КАК ИННпоставщика,
	|	Реквизиты.ОбособленноеПодразделениеПоставщика КАК ОбособленноеПодразделениеПоставщика,
	|	Реквизиты.Грузоотправитель КАК Грузоотправитель,
	|	Реквизиты.Покупатель КАК Покупатель,
	|	Реквизиты.ИННпокупателя КАК ИННпокупателя,
	|	Реквизиты.ОбособленноеПодразделениеПокупателя КАК ОбособленноеПодразделениеПокупателя,
	|	Реквизиты.Грузополучатель КАК Грузополучатель,
	|	Реквизиты.Валюта КАК Валюта,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Основание КАК Основание,
	|	Реквизиты.ОснованиеДата КАК ОснованиеДата,
	|	Реквизиты.ОснованиеНомер КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО КАК Исполнитель,
	|	НЕОПРЕДЕЛЕНО КАК ИсполнительНаОсновании,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА ВЫРАЗИТЬ(&АдресПокупателя КАК СТРОКА(1000))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресПокупателя,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА ВЫРАЗИТЬ(&ИННКПППокупателя КАК СТРОКА(1000))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИННКПППокупателя,
	|	&СводныйСФКомиссияПоПродаже КАК СводныйСФКомиссияПоПродаже,
	|	ВЫБОР
	|		КОГДА НаличиеТоваров.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьТовары,
	|	Реквизиты.ЦифровойИндексОбособленногоПодразделения КАК ЦифровойИндексОбособленногоПодразделения,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом
	|ПОМЕСТИТЬ РеквизитыПредварительная
	|ИЗ
	|	ДанныеОПокупателях КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеТоваров КАК НаличиеТоваров
	|		ПО Реквизиты.Ссылка = НаличиеТоваров.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|	И ТИПЗНАЧЕНИЯ(&СчетФактура) = ТИП(Документ.СчетФактураВыданный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	Реквизиты.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ,
	|	Реквизиты.Контрагент.ИНН,
	|	Реквизиты.Контрагент,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ,
	|	Реквизиты.Организация.ИНН,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление,
	|	Реквизиты.ДоговорКонтрагента.Дата,
	|	Реквизиты.ДоговорКонтрагента.Номер,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	"""",
	|	"""",
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	"""",
	|	НЕОПРЕДЕЛЕНО,
	|	"""",
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВозвратТоваров КАК ВозвратТоваров
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|	И ТИПЗНАЧЕНИЯ(&СчетФактура) = ТИП(Документ.СчетФактураПолученный)
	|	И ВозвратТоваров.СчетФактура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыПредварительная.ДатаОснования КАК ДатаОснования,
	|	РеквизитыПредварительная.Организация КАК Организация,
	|	РеквизитыПредварительная.Склад КАК Склад,
	|	РеквизитыПредварительная.Подразделение КАК Подразделение,
	|	РеквизитыПредварительная.Поставщик КАК Поставщик,
	|	РеквизитыПредварительная.ИННпоставщика КАК ИННпоставщика,
	|	РеквизитыПредварительная.ОбособленноеПодразделениеПоставщика КАК ОбособленноеПодразделениеПоставщика,
	|	РеквизитыПредварительная.Грузоотправитель КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА &ПредставлениеПокупателя
	|		ИНАЧЕ РеквизитыПредварительная.Покупатель
	|	КОНЕЦ КАК Покупатель,
	|	РеквизитыПредварительная.ИННпокупателя КАК ИННпокупателя,
	|	РеквизитыПредварительная.ОбособленноеПодразделениеПокупателя КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА &Грузополучатель
	|		ИНАЧЕ РеквизитыПредварительная.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	РеквизитыПредварительная.Валюта КАК Валюта,
	|	РеквизитыПредварительная.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	РеквизитыПредварительная.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	РеквизитыПредварительная.ВидДоговора КАК ВидДоговора,
	|	РеквизитыПредварительная.Основание КАК Основание,
	|	РеквизитыПредварительная.ОснованиеДата КАК ОснованиеДата,
	|	РеквизитыПредварительная.ОснованиеНомер КАК ОснованиеНомер,
	|	РеквизитыПредварительная.Исполнитель КАК Исполнитель,
	|	РеквизитыПредварительная.ИсполнительНаОсновании КАК ИсполнительНаОсновании,
	|	РеквизитыПредварительная.ОтпускПроизвел КАК ОтпускПроизвел,
	|	РеквизитыПредварительная.ДоверенностьНомер КАК ДоверенностьНомер,
	|	РеквизитыПредварительная.ДоверенностьДата КАК ДоверенностьДата,
	|	РеквизитыПредварительная.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	РеквизитыПредварительная.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	РеквизитыПредварительная.ЗаЗаказчикаНаОсновании КАК ЗаЗаказчикаНаОсновании,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА &АдресПокупателя
	|		ИНАЧЕ РеквизитыПредварительная.АдресПокупателя
	|	КОНЕЦ КАК АдресПокупателя,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА &ИННКПППокупателя
	|		ИНАЧЕ РеквизитыПредварительная.ИННКПППокупателя
	|	КОНЕЦ КАК ИННКПППокупателя,
	|	РеквизитыПредварительная.СводныйСФКомиссияПоПродаже КАК СводныйСФКомиссияПоПродаже,
	|	РеквизитыПредварительная.ЕстьТовары КАК ЕстьТовары,
	|	РеквизитыПредварительная.ЦифровойИндексОбособленногоПодразделения КАК ЦифровойИндексОбособленногоПодразделения,
	|	РеквизитыПредварительная.АдресДоставки КАК АдресДоставки,
	|	РеквизитыПредварительная.СведенияОТранспортировкеИГрузе КАК СведенияОТранспортировкеИГрузе,
	|	РеквизитыПредварительная.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	РеквизитыПредварительная.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	РеквизитыПредварительная.Перевозчик КАК Перевозчик,
	|	РеквизитыПредварительная.ПеревозкаАвтотранспортом КАК ПеревозкаАвтотранспортом
	|ИЗ
	|	РеквизитыПредварительная КАК РеквизитыПредварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Комиссионное вознаграждение"" КАК Товар,
	|	""Комиссионное вознаграждение"" КАК ТоварНаименование,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	"""" КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК РегистрационныйНомерТД,
	|	"""" КАК ЕдиницаИзмерения,
	|	1 КАК Количество,
	|	"""" КАК Цена,
	|	ТаблицаТовары.СуммаВознаграждения КАК Сумма,
	|	ТаблицаТовары.СуммаНДСВознаграждения КАК СуммаНДС,
	|	ТаблицаТовары.Ссылка.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ИСТИНА КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТВознаграждениеНеСуммированное
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВозвратТоваров КАК ВозвратТоваров
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ТИПЗНАЧЕНИЯ(&СчетФактура) = ТИП(Документ.СчетФактураПолученный)
	|	И ВозвратТоваров.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Комиссионное вознаграждение"",
	|	""Комиссионное вознаграждение"",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	1,
	|	"""",
	|	ТаблицаУслуги.СуммаВознаграждения,
	|	ТаблицаУслуги.СуммаНДСВознаграждения,
	|	ТаблицаУслуги.Ссылка.СтавкаНДСВознаграждения,
	|	ИСТИНА,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка.ВалютаДокумента,
	|	ТаблицаУслуги.Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВозвратТоваров КАК ВозвратТоваров
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОснование
	|	И ТИПЗНАЧЕНИЯ(&СчетФактура) = ТИП(Документ.СчетФактураПолученный)
	|	И ВозвратТоваров.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Комиссионное вознаграждение"",
	|	""Комиссионное вознаграждение"",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	1,
	|	"""",
	|	-ТоварыВозвращенные.СуммаВознаграждения,
	|	-ТоварыВозвращенные.СуммаНДСВознаграждения,
	|	ТоварыВозвращенные.Ссылка.СтавкаНДСВознаграждения,
	|	ИСТИНА,
	|	ТоварыВозвращенные.Ссылка.СуммаВключаетНДС,
	|	ТоварыВозвращенные.Ссылка.ВалютаДокумента,
	|	ТоварыВозвращенные.Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ТоварыВозвращенные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВозвратТоваров КАК ВозвратТоваров
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТоварыВозвращенные.Ссылка = &ДокументОснование
	|	И ТИПЗНАЧЕНИЯ(&СчетФактура) = ТИП(Документ.СчетФактураПолученный)
	|	И ВозвратТоваров.СчетФактура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВознаграждениеНеСуммированное.Товар КАК Товар,
	|	ВТВознаграждениеНеСуммированное.ТоварНаименование КАК ТоварНаименование,
	|	ВТВознаграждениеНеСуммированное.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТВознаграждениеНеСуммированное.ПредставлениеСтраны КАК ПредставлениеСтраны,
	|	ВТВознаграждениеНеСуммированное.НомерГТД КАК НомерГТД,
	|	ВТВознаграждениеНеСуммированное.ПредставлениеГТД КАК ПредставлениеГТД,
	|	ВТВознаграждениеНеСуммированное.РегистрационныйНомерТД КАК РегистрационныйНомерТД,
	|	ВТВознаграждениеНеСуммированное.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТВознаграждениеНеСуммированное.Количество КАК Количество,
	|	ВТВознаграждениеНеСуммированное.Цена КАК Цена,
	|	ВТВознаграждениеНеСуммированное.СтавкаНДС КАК СтавкаНДС,
	|	ВТВознаграждениеНеСуммированное.ЭтоУслуга КАК ЭтоУслуга,
	|	ВТВознаграждениеНеСуммированное.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВТВознаграждениеНеСуммированное.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТВознаграждениеНеСуммированное.Ссылка КАК Ссылка,
	|	СУММА(ВТВознаграждениеНеСуммированное.Сумма) КАК Сумма,
	|	СУММА(ВТВознаграждениеНеСуммированное.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТВознаграждение
	|ИЗ
	|	ВТВознаграждениеНеСуммированное КАК ВТВознаграждениеНеСуммированное
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВознаграждениеНеСуммированное.Товар,
	|	ВТВознаграждениеНеСуммированное.ТоварНаименование,
	|	ВТВознаграждениеНеСуммированное.СтранаПроисхождения,
	|	ВТВознаграждениеНеСуммированное.ПредставлениеСтраны,
	|	ВТВознаграждениеНеСуммированное.НомерГТД,
	|	ВТВознаграждениеНеСуммированное.ПредставлениеГТД,
	|	ВТВознаграждениеНеСуммированное.РегистрационныйНомерТД,
	|	ВТВознаграждениеНеСуммированное.ЕдиницаИзмерения,
	|	ВТВознаграждениеНеСуммированное.Количество,
	|	ВТВознаграждениеНеСуммированное.Цена,
	|	ВТВознаграждениеНеСуммированное.СтавкаНДС,
	|	ВТВознаграждениеНеСуммированное.ЭтоУслуга,
	|	ВТВознаграждениеНеСуммированное.СуммаВключаетНДС,
	|	ВТВознаграждениеНеСуммированное.ВалютаДокумента,
	|	ВТВознаграждениеНеСуммированное.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаТовары.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТовары.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА ДанныеОПокупателях.ПокупательДляГруппировки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТовары.КодТНВЭД
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОПокупателях КАК ДанныеОПокупателях
	|		ПО ТаблицаТовары.КлючСтроки = ДанныеОПокупателях.КлючСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (ТаблицаТовары.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ТИПЗНАЧЕНИЯ(&СчетФактура) = ТИП(Документ.СчетФактураВыданный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Номенклатура.Код,
	|	ТаблицаУслуги.Номенклатура.Артикул,
	|	ТаблицаУслуги.Содержание,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаУслуги.Количество,
	|	ТаблицаУслуги.Цена,
	|	ТаблицаУслуги.Сумма,
	|	ТаблицаУслуги.СуммаНДС,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ИСТИНА,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоПродаже
	|			ТОГДА ДанныеОПокупателях.ПокупательДляГруппировки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ТаблицаУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОПокупателях КАК ДанныеОПокупателях
	|		ПО ТаблицаУслуги.КлючСтроки = ДанныеОПокупателях.КлючСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ТаблицаУслуги.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОснование
	|	И ТИПЗНАЧЕНИЯ(&СчетФактура) = ТИП(Документ.СчетФактураВыданный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	1,
	|	Вознаграждение.Товар,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Вознаграждение.ТоварНаименование,
	|	Вознаграждение.СтранаПроисхождения,
	|	Вознаграждение.ПредставлениеСтраны,
	|	Вознаграждение.НомерГТД,
	|	Вознаграждение.ПредставлениеГТД,
	|	Вознаграждение.РегистрационныйНомерТД,
	|	Вознаграждение.ЕдиницаИзмерения,
	|	Вознаграждение.Количество,
	|	Вознаграждение.Цена,
	|	Вознаграждение.Сумма,
	|	Вознаграждение.СуммаНДС,
	|	Вознаграждение.СтавкаНДС,
	|	Вознаграждение.ЭтоУслуга,
	|	Вознаграждение.СуммаВключаетНДС,
	|	Вознаграждение.Ссылка,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	ВТВознаграждение КАК Вознаграждение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПустаяСсылка))
	|			И (Вознаграждение.ВалютаДокумента <> &ВалютаРеглУчета)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Вызывается документом СчетФактураВыданный на аванс при вводе на основании
//
Функция ТекстЗапросаСчетФактураВыданныйНаАвансРасшифровкаПлатежа(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	// Здесь в качестве счета авасов выступает СчетУчетаРасчетовСКонтрагентом,
	// а не СчетУчетаРасчетовПоАвансамПолученным, т.к. аванс получен комиссионером
	// от покупателя.
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	ТаблицаДокумента.Ссылка.ДоговорКонтрагента.НаименованиеДляСчетаФактурыНаАванс КАК Номенклатура,
	|	ТаблицаДокумента.Ссылка.СчетУчетаРасчетовСКонтрагентом КАК СчетАвансов,
	|	ЗНАЧЕНИЕ(Документ.СчетНаОплатуПокупателю.ПустаяСсылка) КАК СчетНаОплату,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаДокумента.Сумма) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.ПустаяСсылка) КАК СпособПогашенияЗадолженности
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.ДенежныеСредства КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументОснование
	|	И ТаблицаДокумента.ВидОтчетаПоПлатежам = ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Аванс)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Ссылка.Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.ДоговорКонтрагента,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.ДоговорКонтрагента.НаименованиеДляСчетаФактурыНаАванс,
	|	ТаблицаДокумента.Ссылка.СчетУчетаРасчетовСКонтрагентом";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета ОтчетККМ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Отчет комиссионера",
			ПечатьОтчетаКомиссионера(МассивОбъектов, ОбъектыПечати), , "Документ.ОтчетКомиссионераОПродажах.ПФ_MXL_Накладная");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",                             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПоТоварамИУслугамПроданнымПоКомиссии",                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте",                 НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ТаблицаПоТоварамИУслугамПроданнымПоКомиссии",                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами",   НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансамПолученным КАК СчетУчетаРасчетовПоАвансам,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетИсточникУдержанияВознаграждения,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДСВознаграждения,
	|	""Продажа"" КАК ВидОперацииДляОтчета
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовЗаПосредническиеУслуги,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансамВыданным,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов,
	|	"""",
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ),
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС,
	|	ДанныеОбрабатываемогоДокумента.СтавкаНДСВознаграждения,
	|	""ОтчетПоВознаграждению""
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал,
	|	ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета КАК ВидОперацииДляОтчета
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ВидОперацииДляОтчета
	|ИТОГИ
	|	МИНИМУМ(Проведен),
	|	МАКСИМУМ(ВалютаДокумента)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета = ""Продажа"")
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка КАК Ссылка,
	|	""Продажа"" КАК ВидОперацииДляОтчета,
	|	ОтчетКомиссионераОПродажахТовары.НомерСтроки,
	|	ОтчетКомиссионераОПродажахТовары.Номенклатура КАК Товар,
	|	ОтчетКомиссионераОПродажахТовары.Номенклатура.Наименование КАК ТоварНаименование,
	|	ОтчетКомиссионераОПродажахТовары.Сумма КАК ВсегоВал,
	|	ОтчетКомиссионераОПродажахТовары.СуммаНДС КАК НДСВал,
	|	ОтчетКомиссионераОПродажахТовары.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ПОМЕСТИТЬ ТаблицаПоТоварамИУслугамПроданнымПоКомиссии
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОтчетКомиссионераОПродажахТовары.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОтчетКомиссионераОПродажахТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТовары.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахУслуги.Ссылка,
	|	""Продажа"",
	|	ОтчетКомиссионераОПродажахУслуги.НомерСтроки,
	|	ОтчетКомиссионераОПродажахУслуги.Номенклатура,
	|	ОтчетКомиссионераОПродажахУслуги.Номенклатура.Наименование,
	|	ОтчетКомиссионераОПродажахУслуги.Сумма,
	|	ОтчетКомиссионераОПродажахУслуги.СуммаНДС,
	|	ОтчетКомиссионераОПродажахУслуги.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОтчетКомиссионераОПродажахУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОтчетКомиссионераОПродажахУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	""ОтчетПоВознаграждению"" КАК ВидОперацииДляОтчета,
	|	СУММА(ОтчетКомиссионераОПродажахТовары.СуммаВознаграждения) КАК ВсегоВал,
	|	СУММА(ОтчетКомиссионераОПродажахТовары.СуммаНДСВознаграждения) КАК НДСВал,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Товар,
	|	&КомиссионноеВознаграждение КАК ТоварНаименование
	|ПОМЕСТИТЬ ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО ОтчетКомиссионераОПродажахТовары.Ссылка = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета = ""ОтчетПоВознаграждению"")
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомиссионераОПродажахТовары.Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДСВознаграждения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахУслуги.Ссылка,
	|	1,
	|	""ОтчетПоВознаграждению"",
	|	СУММА(ОтчетКомиссионераОПродажахУслуги.СуммаВознаграждения),
	|	СУММА(ОтчетКомиссионераОПродажахУслуги.СуммаНДСВознаграждения),
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДСВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	&КомиссионноеВознаграждение
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО ОтчетКомиссионераОПродажахУслуги.Ссылка = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета = ""ОтчетПоВознаграждению"")
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомиссионераОПродажахУслуги.Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДСВознаграждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета КАК ВидОперацииДляОтчета,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета = ""Продажа"")
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.ВалютнаяСуммаДт,
	|	ХозрасчетныйСубконто.Значение,
	|	ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение),
	|	ВТ_ТаблицаПоШапкеДокумента.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|				ИЛИ Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетИсточникУдержанияВознаграждения)
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВидОперацииДляОтчета = ""ОтчетПоВознаграждению"")
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ВидОперацииДляОтчета КАК ВидОперацииДляОтчета,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ВидОперацииДляОтчета
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка,
	|	ВидОперацииДляОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.Ссылка КАК Ссылка,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.НомерСтроки,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.ВидОперацииДляОтчета КАК ВидОперацииДляОтчета,
	|	СУММА(ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.ВсегоВал) КАК ВсегоВал,
	|	СУММА(ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.НДСВал) КАК НДСВал,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.СтавкаНДС,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.Товар,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.ТоварНаименование
	|ПОМЕСТИТЬ ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами
	|ИЗ
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами КАК ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.Ссылка,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.НомерСтроки,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.ВидОперацииДляОтчета,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.СтавкаНДС,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.Товар,
	|	ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами.ТоварНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПоВознаграждениюНЕГотоваяКОбъединениюСРублевымиСуммами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.Ссылка КАК Ссылка,
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.ВидОперацииДляОтчета КАК ВидОперацииДляОтчета,
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.ВсегоВал КАК ВсегоВал,
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.НДСВал КАК НДСВал,
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.СтавкаНДС,
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.Товар,
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.ТоварНаименование,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами КАК ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.Ссылка,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.НомерСтроки,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.ВидОперацииДляОтчета,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.ВсегоВал,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.НДСВал,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.СтавкаНДС,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.Товар,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.ТоварНаименование,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.ВсегоРуб,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.НДСРуб,
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии.НалоговаяБазаНДСРуб
	|ИЗ
	|	ТаблицаПоТоварамИУслугамПроданнымПоКомиссии КАК ТаблицаПоТоварамИУслугамПроданнымПоКомиссии
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ВидОперацииДляОтчета,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка,
	|	ВидОперацииДляОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПоТоварамИУслугамПроданнымПоКомиссии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПоВознаграждениюГотоваяКОбъединениюСРублевымиСуммами";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

// Формирование движений по возвратам
Процедура СформироватьДвиженияЗачетАвансаПоВозвратуОтПокупателя(ТаблицаВзаиморасчеты, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = ТаблицаРеквизиты[0];

	Проводки = Движения.Хозрасчетный;
	
	ТаблицаВзаиморасчетыВозврат = ТаблицаВзаиморасчеты.Скопировать(Новый Структура("ЭтоВозврат", Истина));

	Для каждого СтрокаВзаиморасчетов Из ТаблицаВзаиморасчетыВозврат Цикл

		Проводка = Проводки.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = Реквизиты.Содержание;
		Проводка.Сумма       = - СтрокаВзаиморасчетов.СуммаРуб;


		Проводка.СчетДт = СтрокаВзаиморасчетов.СчетАвансов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Реквизиты.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", Реквизиты.ДоговорКонтрагента);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);

		Проводка.СчетКт = Реквизиты.СчетУчетаРасчетовСКонтрагентом;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", Реквизиты.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры", Реквизиты.ДоговорКонтрагента);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыРасчетовСКонтрагентами", СтрокаВзаиморасчетов.ДокументРасчетов);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		Если СвойстваСчетаДт.Валютный Тогда
			Проводка.ВалютаДт        = Реквизиты.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаДт = - СтрокаВзаиморасчетов.СуммаВзаиморасчетов;
		КонецЕсли;
		Если СвойстваСчетаКт.Валютный Тогда
			Проводка.ВалютаКт        = Реквизиты.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаКт = - СтрокаВзаиморасчетов.СуммаВзаиморасчетов;
		КонецЕсли;

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = Реквизиты.КорПодразделение;
		КонецЕсли;
		
		СформироватьПроводкуВыделениеАвансаПоСпециальнымРежимам(СтрокаВзаиморасчетов, Реквизиты, Движения);
		
	КонецЦикла;

КонецПроцедуры

// Формируется проводка по специальным счетам УСН для сохранения сведений о налоговом режиме выделяемого аванса.
// Сведения потребуются при зачете аванса для переквалификации доходов (если зачитывающая реализация будет по иному режиму, чем возврат).
//
// При реализации через комиссионера возможны только следующие спец. режимы:
//    - ЕНВД;
//    - комиссия.
//
// Поддержка продаж через комиссионера по деятельности на патенте и на торговом сборе не требуется -
// такая деятельность не предусмотрена законодательством РФ.
//
Процедура СформироватьПроводкуВыделениеАвансаПоСпециальнымРежимам(СтрокаВзаиморасчетов, Реквизиты, Движения)

	Если Не Реквизиты.УчитыватьЗадолженностьУСН Тогда
		Возврат;
	КонецЕсли;
	
	// Выделение аванса по возврату с реализации на ЕНВД.
	
	Если СтрокаВзаиморасчетов.СуммаВзаиморасчетовЕНВД <> 0 Тогда
		
		Проводка = Движения.Хозрасчетный.Добавить();
		
		Проводка.Период       = Реквизиты.Период;
		Проводка.Организация  = Реквизиты.Организация;
		Проводка.Содержание   = "Расчеты по деятельности ЕНВД";
		
		Если СтрокаВзаиморасчетов.РасчетыВВалюте Тогда
			Проводка.СчетДт          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиВалЕНВД;
			Проводка.ВалютаДт        = Реквизиты.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаДт = - СтрокаВзаиморасчетов.СуммаВзаиморасчетовЕНВД;
		Иначе
			Проводка.СчетДт          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиЕНВД;
		Конецесли;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Реквизиты.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", Реквизиты.ДоговорКонтрагента);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);
		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Если СвойстваСчета.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;
		
		Проводка.Сумма = - СтрокаВзаиморасчетов.СуммаРуб_ЕНВД;
		
	КонецЕсли;
	
	// Выделение аванса по возврату товаров комитента.
	
	Если СтрокаВзаиморасчетов.СуммаВзаиморасчетовКомитента <> 0 Тогда
		
		Проводка = Движения.Хозрасчетный.Добавить();
		
		Проводка.Период       = Реквизиты.Период;
		Проводка.Организация  = Реквизиты.Организация;
		Проводка.Содержание   = "Расчеты за товары и услуги комитента";
		
		Если СтрокаВзаиморасчетов.РасчетыВВалюте Тогда
			Проводка.СчетДт          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиВалКомитент;
			Проводка.ВалютаДт        = Реквизиты.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаДт = - СтрокаВзаиморасчетов.СуммаВзаиморасчетовКомитента;
		Иначе
			Проводка.СчетДт          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиКомитент;
		Конецесли;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Реквизиты.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры",    Реквизиты.ДоговорКонтрагента);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);
		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Если СвойстваСчета.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;
		
		Проводка.Сумма = - СтрокаВзаиморасчетов.СуммаРуб_Комитента;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияВозвратПоРегистрамУСН(
				ТаблицаРасходовДляУСН,
				ТаблицаРеквизиты,
				СуммаСторноРасходов,
				СуммаСторноНДС,
				СуммаПризнанияНДС,
				Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = ТаблицаРеквизиты[0];

	Если НЕ УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат;
	КонецЕсли;

	Если ТаблицаРасходовДляУСН <> Неопределено и ТаблицаРасходовДляУСН.Количество() > 0 Тогда
		// По регистру РасходыПриУСН
		СформироватьДвиженияВозвратПоДокументуСоСделкойУСН(ТаблицаРасходовДляУСН, Движения, Отказ);
		// По регистру КУДиР
		СформироватьДвиженияКУДиР(ТаблицаРеквизиты, СуммаСторноРасходов, СуммаПризнанияНДС, СуммаСторноНДС, Движения, Отказ);
	Иначе
		СформироватьДвиженияКУДиР(ТаблицаРеквизиты, СуммаСторноРасходов, 0, 0, Движения, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура СформироватьДвиженияВозвратПоДокументуСоСделкойУСН(ТаблицаРасходовДляУСН, Движения, Отказ)

	Если Не ЗначениеЗаполнено(ТаблицаРасходовДляУСН) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ТекущаяЗапись Из ТаблицаРасходовДляУСН Цикл
		НоваяЗапись = Движения.РасходыПриУСН.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущаяЗапись);
	КонецЦикла;
	
	Движения.РасходыПриУСН.Записывать = Истина;

КонецПроцедуры

Процедура СформироватьДвиженияКУДиР(ТаблицаРеквизиты, СуммаСторноРасходов, СуммаПризнанияНДС = 0, СуммаСторноНДС = 0, Движения, Отказ)

	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];

	ДвиженияКУДиР = Движения.КнигаУчетаДоходовИРасходов;

	ДвиженияКУДиР.Очистить();

	Если СуммаПризнанияНДС <> 0 Тогда
		СтрокаКниги  = ДвиженияКУДиР.Добавить();
		СтрокаКниги.Организация     = Реквизиты.Организация;
		СтрокаКниги.СтрокаДокумента = 0;
		СтрокаКниги.Период          = Реквизиты.Период;
		СтрокаКниги.Содержание      = "При возврате от покупателя признаны расходы, сторнированные не основании реализации (признаны расходы на уплату НДС).";
		СтрокаКниги.Графа7          = СуммаПризнанияНДС;
		СтрокаКниги.НДС             = 0;
		СтрокаКниги.РеквизитыПервичногоДокумента = НалоговыйУчетУСН.РеквизитыПервичногоДокумента(
			Реквизиты.Регистратор, Реквизиты.Организация);
	КонецЕсли;

	Если СуммаСторноРасходов <> 0 Тогда
		СтрокаКниги  = ДвиженияКУДиР.Добавить();
		СтрокаКниги.Организация     = Реквизиты.Организация;
		СтрокаКниги.СтрокаДокумента = 0;
		СтрокаКниги.Период          = Реквизиты.Период;
		СтрокаКниги.Содержание      = "Расходы уменьшены на стоимость товаров, возвращенных покупателем.";
		СтрокаКниги.Графа7          = - СуммаСторноРасходов;
		СтрокаКниги.НДС             = - СуммаСторноНДС;
		СтрокаКниги.РеквизитыПервичногоДокумента = НалоговыйУчетУСН.РеквизитыПервичногоДокумента(
			Реквизиты.Регистратор, Реквизиты.Организация);
	КонецЕсли;

	ДвиженияКУДиР.Записывать = Истина;

КонецПроцедуры

#Область ОбработчикиОбновления

Процедура ЗаполнитьКодТНВЭДОтложено(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", '20160701'); // учет НДС по ФЗ-150
	Запрос.УстановитьПараметр("Россия", Справочники.СтраныМира.Россия);
	Запрос.УстановитьПараметр("СтраныЕАЭС", УправлениеКонтактнойИнформацией.СтраныУчастникиЕАЭС().ВыгрузитьКолонку("Ссылка"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураТоваров
	|			ПО ОтчетКомиссионераОПродажахТовары.Номенклатура = НоменклатураТоваров.Ссылка
	|		ПО ОтчетКомиссионераОПродажахПокупатели.Ссылка = ОтчетКомиссионераОПродажахТовары.Ссылка
	|			И ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ОтчетКомиссионераОПродажахТовары.КлючСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ОтчетКомиссионераОПродажахПокупатели.Покупатель = Контрагенты.Ссылка
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка.Дата >= &Дата
	|	И Контрагенты.СтранаРегистрации <> &Россия
	|	И Контрагенты.СтранаРегистрации В(&СтраныЕАЭС)
	|	И Контрагенты.СтранаРегистрации <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И ОтчетКомиссионераОПродажахТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|	И ОтчетКомиссионераОПродажахТовары.КодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	И НоменклатураТоваров.КодТНВЭД <> ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	И ОтчетКомиссионераОПродажахТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомиссионераОПродажахТовары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетКомиссионераОПродажахТовары.Ссылка.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		НачатьТранзакцию();
		Попытка
			
			// Блокируем объект от изменения другими сеансами.
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ОтчетКомиссионераОПродажах");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СтрокаРезультата.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = СтрокаРезультата.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
			
			КонтрагентыИзЕАЭС = УчетНДС.КонтрагентыРезидентыЕАЭС(ДокументОбъект.Покупатели.ВыгрузитьКолонку("Покупатель"));
			Для каждого СтрокаТаблицы Из ДокументОбъект.Покупатели Цикл
				Если КонтрагентыИзЕАЭС.Найти(СтрокаТаблицы.Покупатель) <> Неопределено Тогда 
					ОтборПоКлючу = Новый Структура("КлючСтроки", СтрокаТаблицы.КлючСтроки);
					СтрокиПоКонтрагенту = ДокументОбъект.Товары.НайтиСтроки(ОтборПоКлючу);
					Для Каждого СтрокаТаблицыТовары Из СтрокиПоКонтрагенту Цикл
						Если НЕ ЗначениеЗаполнено(СтрокаТаблицыТовары.КодТНВЭД) Тогда
							СтрокаТаблицыТовары.КодТНВЭД = СтрокаТаблицыТовары.Номенклатура.КодТНВЭД;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		
			// Запись обработанного объекта.
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			// Если не удалось обработать какой-либо элемент справочника, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					|%2'"),
					СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ОтчетКомиссионераОПродажах, СтрокаРезультата.Ссылка, ТекстСообщения);
				
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ЗаполнитьКодТНВЭДОтложено
				|не удалось обработать некоторые документы ""Отчет комиссионера (агента) о продажах"" (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ОтчетКомиссионераОПродажах,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ЗаполнитьКодТНВЭДОтложено
					|обработала очередную порцию документов ""Отчет комиссионера (агента) о продажах"": %1'"), ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#Область ПечатьУПД

// Определяет какие из переданных документов, на основании которых формируется печатная форма
// универсального передаточного документа на печать, можно распечатать без выписки счета-фактуры.
// В конфигурации не поддерживается печать универсального передаточного документа в статусе "2" 
// (только первичный документ), если в документе выделена сумма НДС и сумма налога не относится
// к посреднической деятельности.
//
// Параметры:
//   МассивДокументов - Массив - массив документов, по которым формируется печатная форма.
//
// Возвращаемое значение:
//   ДокументыСчетФактураНеТребуются - Массив - документы, для печати которых не требуется выписка счета-фактуры.
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.СуммаНДСВознаграждения > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Услуги.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК Услуги
	|ГДЕ
	|	Услуги.Ссылка В(&МассивДокументов)
	|	И Услуги.СуммаНДСВознаграждения > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажах.Ссылка КАК Ссылка,
	|	ОтчетКомиссионераОПродажах.Дата КАК Дата,
	|	ОтчетКомиссионераОПродажах.Организация КАК Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ОтчетКомиссионераОПродажах.Ссылка)
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.ЕстьНДС Тогда
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращает текст запроса для формирования печатной формы универсального передаточного документа
// Параметры:
//   ИспользуетсяПостановлениеНДС981 - Булево - признак применения постановления Правительства РФ №981
//
// Возвращаемое значение:
//   ТекстЗапроса - Строка - текст запроса для формирования печатной формы универсального передаточного документа.
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ИспользуетсяПостановлениеНДС981 = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка) КАК СчетФактура,
	|	ОтчетКомиссионераОПродажах.ДатаВходящегоДокумента КАК Дата,
	|	ОтчетКомиссионераОПродажах.НомерВходящегоДокумента КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	"""" КАК Руководитель,
	|	"""" КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ОтчетКомиссионераОПродажах.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ОтчетКомиссионераОПродажах.Контрагент КАК Контрагент,
	|	ОтчетКомиссионераОПродажах.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	ОтчетКомиссионераОПродажах.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате";
	
	Если ИспользуетсяПостановлениеНДС981 = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате", "ИСТИНА");
	ИначеЕсли ИспользуетсяПостановлениеНДС981 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ОтчетКомиссионераОПродажах.Дата >= ДАТАВРЕМЯ(2017,10,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ОтчетКомиссионераОПродажах.Дата < ДАТАВРЕМЯ(2017,10,1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли