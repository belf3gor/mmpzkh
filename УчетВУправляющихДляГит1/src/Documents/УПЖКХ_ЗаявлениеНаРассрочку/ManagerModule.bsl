
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Формирует таблицу со сведениями о еще неначисленных суммах рассрочки.
//
// Параметры:
//  Организация - организация, предоставившая рассрочку.
//  СписокЛС - список лицевых счетов / лицевой счет.
//  СписокУслуг - список услуг.
//  Период - дата, на которую будут собраны сведения.
//  МесяцРассрочки - месяц, в котором была предоставлена рассрочка.
//
// Возвращаемые значения:
//  ТаблицаЗначений - таблица со сведениями о рассрочке.
//
Функция ПолучитьТаблицуОстатковПоРассрочке(Организация, ЛицевыеСчета, СписокУслуг = Неопределено, Период, МесяцРассрочки = Неопределено, СтруктураНастроекКапРемонта = Неопределено) Экспорт
	
	Если ТипЗнч(ЛицевыеСчета) = Тип("СправочникСсылка.КВП_ЛицевыеСчета") Тогда
		СписокЛС = Новый СписокЗначений;
		СписокЛС.Добавить(ЛицевыеСчета);
	Иначе
		СписокЛС = ЛицевыеСчета;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_СведенияОРассрочке.Регистратор,
	|	УПЖКХ_СведенияОРассрочке.ЛицевойСчет,
	|	УПЖКХ_СведенияОРассрочке.Услуга,
	|	УПЖКХ_СведенияОРассрочке.Договор,
	|	УПЖКХ_СведенияОРассрочке.НачислениеВМесяц,
	|	УПЖКХ_СведенияОРассрочке.ГодоваяПроцентнаяСтавка
	|ПОМЕСТИТЬ втСведенияоРассрочках
	|ИЗ
	|	РегистрСведений.УПЖКХ_СведенияОРассрочке.СрезПоследних(&Период, ) КАК УПЖКХ_СведенияОРассрочке
	|;
	|//////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УПЖКХ_НачисленияПоРассрочкеОстатки.ЗаявлениеНаРассрочку,
	|	УПЖКХ_НачисленияПоРассрочкеОстатки.ЛицевойСчет,
	|	УПЖКХ_НачисленияПоРассрочкеОстатки.Услуга,
	|	УПЖКХ_НачисленияПоРассрочкеОстатки.Услуга.ВидУслуги КАК ВидУслуги,
	|	УПЖКХ_НачисленияПоРассрочкеОстатки.МесяцРассрочки,
	|	втСведенияоРассрочках.Договор,
	|	втСведенияоРассрочках.НачислениеВМесяц,
	|	втСведенияоРассрочках.ГодоваяПроцентнаяСтавка,
	|	УПЖКХ_НачисленияПоРассрочкеОстатки.СуммаНачисленияОстаток КАК ОстатокРассрочки
	|ИЗ
	|	РегистрНакопления.УПЖКХ_НачисленияПоРассрочке.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И ЛицевойСчет В (&СписокЛС)
	|				И &УсловиеНаУслуги";
	
	Если Не СписокУслуг = Неопределено И Не СписокУслуг.Количество() = 0 Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|				И Услуга В (&СписокУслуг)";
		
		Запрос.УстановитьПараметр("СписокУслуг", СписокУслуг);
	КонецЕсли;
	
	Если Не МесяцРассрочки = Неопределено Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|				И МесяцРассрочки = &МесяцРассрочки";
		
		Запрос.УстановитьПараметр("МесяцРассрочки", КонецМесяца(МесяцРассрочки));
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + ") КАК УПЖКХ_НачисленияПоРассрочкеОстатки";
	
	Запрос.Текст = Запрос.Текст + 
	"
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияоРассрочках КАК втСведенияоРассрочках
	|		ПО УПЖКХ_НачисленияПоРассрочкеОстатки.ЗаявлениеНаРассрочку = втСведенияоРассрочках.Регистратор
	|			И УПЖКХ_НачисленияПоРассрочкеОстатки.ЛицевойСчет = втСведенияоРассрочках.ЛицевойСчет
	|			И УПЖКХ_НачисленияПоРассрочкеОстатки.Услуга = втСведенияоРассрочках.Услуга";
	
	УсловиеНаУслуги = "ИСТИНА";
	Если НЕ СтруктураНастроекКапРемонта = Неопределено Тогда
		Если СтруктураНастроекКапРемонта.ВедетсяРаздельныйУчет Тогда
			Если СтруктураНастроекКапРемонта.ВариантРаспределенияОплатКапРемонт = Перечисления.УПЖКХ_ВариантыРаспределенияОплатыПриРаздельномУчетеКР.УслугиНеКапРемонт Тогда
				УсловиеНаУслуги = "НЕ Услуга В (&УслугиКапРемонта)";
			ИначеЕсли СтруктураНастроекКапРемонта.ВариантРаспределенияОплатКапРемонт = Перечисления.УПЖКХ_ВариантыРаспределенияОплатыПриРаздельномУчетеКР.УслугиКапРемонт Тогда
				УсловиеНаУслуги = "Услуга В (&УслугиКапРемонта)";
			КонецЕсли;
		Запрос.УстановитьПараметр("УслугиКапРемонта", СтруктураНастроекКапРемонта.СписокУслуг);
		КонецЕсли;
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеНаУслуги", УсловиеНаУслуги);
	
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокЛС",    СписокЛС);
		
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Возврат Таблица;
	
КонецФункции // ПолучитьТаблицуОстатковПоРассрочке()

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли