#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КПП");
	КонецЕсли;
	
	РегламентированнаяОтчетность.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбъектЗафиксирован() Экспорт
	Возврат НЕ ПрямыеВыплатыПособийСоциальногоСтрахования.СтатусПозволяетРедактироватьДокумент(СтатусДокумента);
КонецФункции

Функция ОбновитьВторичныеДанныеДокумента(ДанныеОрганизации = Истина, ДанныеОплат = Истина, МассивОплат = Неопределено) Экспорт
	Модифицирован = Ложь;
	
	Если ОбъектЗафиксирован() Тогда
		Возврат Модифицирован;
	КонецЕсли;
	
	ПараметрыФиксации = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Метаданные().ПолноеИмя()).ПараметрыФиксацииВторичныхДанных();
	
	Если ДанныеОрганизации И ОбновитьДанныеОрганизации(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ДанныеОплат И ОбновитьДанныеОплат(ПараметрыФиксации, МассивОплат) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован
КонецФункции

Функция ОбновитьДанныеОрганизации(ПараметрыФиксации)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура(
		"РегистрационныйНомерФСС,ДополнительныйКодФСС,КодПодчиненностиФСС,НаименованиеТерриториальногоОрганаФСС,ИНН,КПП,
		|Руководитель,ДолжностьРуководителя,ОснованиеПодписиРуководителя,ТелефонСоставителя,АдресОрганизации,АдресЭлектроннойПочтыОрганизации,
		|НаименованиеБанка,НомерЛицевогоСчета,НомерСчета,БИКБанка");
	
	ИменаРеквизитовОрганизации = "РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС, НаименованиеТерриториальногоОрганаФСС";
	ЗначенияРеквизитовОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, ИменаРеквизитовОрганизации);
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ЗначенияРеквизитовОрганизации, ИменаРеквизитовОрганизации);
	
	СведенияОПодписях = ПодписиДокументов.СведенияОПодписяхПоУмолчаниюДляОбъектаМетаданных(Метаданные(), Организация);
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, СведенияОПодписях);
	
	ДатаПолученияСведений = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПолученияСведений, "ИННЮЛ,КППЮЛ,БанкСчетНомер,БанкСчетНаимБанка,БанкСчетБИКБанка");
	СведенияОбОрганизации.Свойство("ИННЮЛ", РеквизитыДокумента.ИНН);
	СведенияОбОрганизации.Свойство("КППЮЛ", РеквизитыДокумента.КПП);
	СведенияОбОрганизации.Свойство("БанкСчетНомер", РеквизитыДокумента.НомерСчета);
	СведенияОбОрганизации.Свойство("БанкСчетНаимБанка", РеквизитыДокумента.НаименованиеБанка);
	СведенияОбОрганизации.Свойство("БанкСчетБИКБанка", РеквизитыДокумента.БИКБанка);
	
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Организация,
		Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации,
		ДатаПолученияСведений,
		Ложь);
	Если ТаблицаКонтактнойИнформации.Количество() > 0 Тогда
		РеквизитыДокумента.АдресОрганизации = ТаблицаКонтактнойИнформации[0].Значение;
	Иначе
		РеквизитыДокумента.АдресОрганизации = "";
	КонецЕсли;
	
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Организация,
		Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации,
		ДатаПолученияСведений,
		Ложь);
	Если ТаблицаКонтактнойИнформации.Количество() > 0 Тогда
		РеквизитыДокумента.ТелефонСоставителя = ТаблицаКонтактнойИнформации[0].Значение;
	Иначе
		РеквизитыДокумента.ТелефонСоставителя = "";
	КонецЕсли;
	
	ПредставлениеКонтактнойИнформации = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
		Организация,
		Справочники.ВидыКонтактнойИнформации.EmailОрганизации,
		,
		ДатаПолученияСведений,
		Новый Структура("ТолькоПервая", Истина));
	Если ЗначениеЗаполнено(ПредставлениеКонтактнойИнформации) Тогда
		РеквизитыДокумента.АдресЭлектроннойПочтыОрганизации = ПредставлениеКонтактнойИнформации;
	Иначе
		РеквизитыДокумента.АдресЭлектроннойПочтыОрганизации = "";
	КонецЕсли;
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ОбновитьДанныеОплат(ПараметрыФиксации, МассивОплат)
	ДанныеОплат = ПрямыеВыплатыПособийСоциальногоСтрахования.ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ЭтотОбъект);
	Если ДанныеОплат = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДанныеОплат", ДанныеОплат.Выгрузить());
	Запрос.УстановитьПараметр("МассивОплат", ?(МассивОплат = Неопределено, Оплаты.Выгрузить().ВыгрузитьКолонку("ДокументОснование"), МассивОплат));
	
	ОписаниеФиксацииРеквизитов = ПараметрыФиксации.ОписаниеФиксацииРеквизитов;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеСтрок.ДокументОснование КАК ДокументОснование,";
	Для каждого ОписаниеРеквизита Из ОписаниеФиксацииРеквизитов Цикл
		Если ОписаниеРеквизита.Значение.ИмяГруппы <> "Оплаты" Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|	ДанныеСтрок." + ОписаниеРеквизита.Значение.ИмяРеквизита + " КАК " + ОписаниеРеквизита.Значение.ИмяРеквизита + ",";
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Запрос.Текст, 1);
	
	Запрос.Текст = Запрос.Текст + "
	|ПОМЕСТИТЬ ВТВторичныеДанные
	|ИЗ
	|	&ДанныеОплат КАК ДанныеСтрок
	|ГДЕ
	|	ДанныеСтрок.ДокументОснование В(&МассивОплат)";
	
	Запрос.Выполнить();
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект, "Оплаты");
КонецФункции

Процедура ЗаполнитьДокумент() Экспорт
	Оплаты.Очистить();
	
	ДанныеОплат = ПрямыеВыплатыПособийСоциальногоСтрахования.ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ЭтотОбъект);
	
	Если ДанныеОплат <> Неопределено Тогда
		Оплаты.Загрузить(ДанныеОплат.Выгрузить());
	КонецЕсли;
КонецПроцедуры

Функция ДанныеСтроки(ДокументОснование = Неопределено) Экспорт
	Данные = ПрямыеВыплатыПособийСоциальногоСтрахования.ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ЭтотОбъект, ДокументОснование);
	
	ДанныеСтроки = Данные.Выбрать();
	Если ДанныеСтроки.Следующий() Тогда
		Возврат ДанныеСтроки
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

#КонецОбласти

#КонецЕсли
