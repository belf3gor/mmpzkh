#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;		
	
	РасчетЗарплатыДляНебольшихОрганизацийСобытия.ДокументыПередЗаписью(ЭтотОбъект, Отказ);
	
	Если СпособРасчета <> Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой Тогда
		Сумма = Неопределено;
	КонецЕсли;
	
	Если СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой Тогда
		ВидБазы = Неопределено;
	КонецЕсли;
	
	Если СпособРасчета <> Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом Тогда
		Процент = Неопределено;
	КонецЕсли;
	
	Если СпособРасчета <> Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей Тогда
		Числитель = Неопределено;
		Знаменатель = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 					= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода					= ДатаДействия;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода				= ДатаОкончания;
	
	КадровыйУчет.ПроверитьРаботающихФизическихЛиц(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо),
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "ФизическоеЛицо", "Объект"));
	
	Если СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидБазы");
	КонецЕсли;
	
	Если СпособРасчета <> Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Сумма");
	КонецЕсли;
	
	Если СпособРасчета <> Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Процент");
	КонецЕсли;
	
	Если СпособРасчета <> Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Числитель");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Знаменатель");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	РасчетЗарплаты.СформироватьДвиженияПлановыхУдержаний(Движения, ДанныеДляПроведения);
	
	ЗарегистрироватьУсловияИсполнительногоЛиста(
		Движения, ДатаДействия, Ссылка, ДанныеДляПроведения.УсловияИсполнительногоЛиста);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	Удержания = РасчетЗарплаты.УдержанияПоКатегории(Перечисления.КатегорииУдержаний.ИсполнительныйЛист);
	Если Удержания.Количество() = 0 Тогда
		Удержание = Неопределено;
	Иначе
		Удержание = Удержания[0];
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Удержание", Удержание);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсполнительныйЛист.ДатаДействия КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ИсполнительныйЛист.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(ИсполнительныйЛист.ДатаОкончания, ДЕНЬ, 1)
		|		ИНАЧЕ ИсполнительныйЛист.ДатаОкончания
		|	КОНЕЦ КАК ДействуетДо,
		|	ИсполнительныйЛист.ФизическоеЛицо,
		|	ИсполнительныйЛист.Организация.ГоловнаяОрганизация КАК Организация,
		|	ИсполнительныйЛист.Ссылка КАК ДокументОснование,
		|	&Удержание КАК Удержание,
		|	0 КАК Размер,
		|	ИСТИНА КАК Используется
		|ИЗ
		|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
		|ГДЕ
		|	ИсполнительныйЛист.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсполнительныйЛист.СпособРасчета,
		|	ИсполнительныйЛист.Процент,
		|	ИсполнительныйЛист.Сумма,
		|	ИсполнительныйЛист.Числитель,
		|	ИсполнительныйЛист.Знаменатель,
		|	ИсполнительныйЛист.Получатель
		|ИЗ
		|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
		|ГДЕ
		|	ИсполнительныйЛист.Ссылка = &ДокументСсылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура("ДанныеПлановыхУдержаний, УсловияИсполнительногоЛиста", 
		РезультатыЗапроса[0].Выгрузить(), ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатыЗапроса[1].Выгрузить()[0]));
	
КонецФункции

// Заполняет движения условиями удержания по исполнительному документу.
//
// Параметры:
//	Движения
//	ДатаДействия
//	ИсполнительныйДокумент
//	УсловияИсполнительногоЛиста - структура с полями
//		СпособРасчета
//		ВидБазы.
//		Процент
//		Сумма
//		Числитель
//		Знаменатель
//		ПрожиточныйМинимум
//		Предел
//		УчитыватьБольничныеЛисты
//		ПлатежныйАгент
//		ТарифПлатежногоАгента
//
Процедура ЗарегистрироватьУсловияИсполнительногоЛиста(Движения, ДатаДействия, ИсполнительныйДокумент, УсловияИсполнительногоЛиста) Экспорт
	
	ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсполнительныйДокумент, "ФизическоеЛицо,Организация");
	
	// Условия удержания
	НоваяСтрока = Движения.УсловияУдержанияПоИсполнительномуДокументу.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, УсловияИсполнительногоЛиста);
	НоваяСтрока.Период = ДатаДействия;
	НоваяСтрока.ИсполнительныйДокумент = ИсполнительныйДокумент;
	НоваяСтрока.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо;
	НоваяСтрока.Организация = ДанныеДокумента.Организация;
	
	Движения.УсловияУдержанияПоИсполнительномуДокументу.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
