#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 12, 0);
	
КонецФункции

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчета") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчета) Тогда
		СтрокаТабличнойЧасти.СчетУчета = СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "Спецодежда" ИЛИ ИмяТабличнойЧасти = "Спецоснастка" Тогда
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетПередачи) Тогда
			СтрокаТабличнойЧасти.СчетПередачи = СчетаУчета.СчетПередачи;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СинонимСпецодежда",   НСтр("ru = 'Спецодежда'"));
	Запрос.УстановитьПараметр("СинонимСпецоснастка", НСтр("ru = 'Спецоснастка'"));
	Запрос.УстановитьПараметр("СинонимИнвентарь",    НСтр("ru = 'Инвентарь и хозяйственные принадлежности'"));
	Запрос.УстановитьПараметр("СодержаниеПроводкиПередачаВЭксплуатациюСпецодежды",   "Передача спецодежды в эксплуатацию");
	Запрос.УстановитьПараметр("СодержаниеПроводкиПередачаВЭксплуатациюСпецоснастки", "Передача спецоснастки в эксплуатацию");
	Запрос.УстановитьПараметр("СодержаниеПроводкиПередачаВЭксплуатациюИнвентаря",    "Передача инвентаря в эксплуатацию");
	
	СпособПогашенияСтоимостиНУ = УчетнаяПолитика.СпособПогашенияСтоимостиСпецодеждыНУ(Выборка.Организация, Выборка.Период);
	Запрос.УстановитьПараметр("СпособПогашенияСтоимостиНУ", СпособПогашенияСтоимостиНУ);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаСписаниеСпецодежды(НомераТаблиц)
		+ ТекстЗапросаСписаниеСпецоснастки(НомераТаблиц)
		+ ТекстЗапросаСписаниеИнвентаря(НомераТаблиц)
		+ ТекстЗапросаПередачаСпецодежды(НомераТаблиц)
		+ ТекстЗапросаПередачаСпецоснастки(НомераТаблиц)
		+ ТекстЗапросаПередачаИнвентаря(НомераТаблиц)
		+ ТекстЗапросаНДС(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Ведомость учета выдачи (МБ-7)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МБ7";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость учета выдачи (МБ-7)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Передача материалов в эксплуатацию""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Проверяем, нужно ли для макета ОтчетККМ формировать табличный документ.
	// Формируем табличный документ и добавляем его в коллекцию печатных форм.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ7") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МБ7", "Форма МБ7", 
			ПечатьМБ7(МассивОбъектов, ОбъектыПечати),,"Документ.ПередачаМатериаловВЭксплуатацию.ПФ_MXL_МБ7");
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11", "Форма М11", 
			ПечатьМ11(МассивОбъектов, ОбъектыПечати),,"ОбщийМакет.ПФ_MXL_М11");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Склад");
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаСписаниеСпецодежды(НомераТаблиц)
	
	НомераТаблиц.Вставить("СписаниеСпецодеждыРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеСпецодеждыТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	""ПередачаМатериаловВЭксплуатацию"" КАК ВидОперации,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	&СодержаниеПроводкиПередачаВЭксплуатациюСпецодежды КАК Содержание
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Спецодежда"" КАК ИмяСписка,
	|	&СинонимСпецодежда КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаСпецодежда.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСпецодежда.СчетУчета,
	|	ТаблицаСпецодежда.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	0 КАК Себестоимость,
	|	ТаблицаСпецодежда.Количество,
	|	Реквизиты.Местонахождение КАК КорПодразделение,
	|	ТаблицаСпецодежда.СчетПередачи КАК КорСчетСписания,
	|	ТаблицаСпецодежда.Номенклатура КАК КорСубконто1,
	|	Реквизиты.Ссылка КАК КорСубконто2,
	|	ТаблицаСпецодежда.ФизЛицо КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций) КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК ТаблицаСпецодежда
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|		ПО ТаблицаСпецодежда.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСписаниеСпецоснастки(НомераТаблиц)
	
	НомераТаблиц.Вставить("СписаниеСпецоснасткиРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеСпецоснасткиТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	""ПередачаМатериаловВЭксплуатацию"" КАК ВидОперации,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	&СодержаниеПроводкиПередачаВЭксплуатациюСпецоснастки КАК Содержание
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Спецоснастка"" КАК ИмяСписка,
	|	&СинонимСпецоснастка КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаСпецоснастка.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСпецоснастка.СчетУчета,
	|	ТаблицаСпецоснастка.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	0 КАК Себестоимость,
	|	ТаблицаСпецоснастка.Количество,
	|	Реквизиты.Местонахождение КАК КорПодразделение,
	|	ТаблицаСпецоснастка.СчетПередачи КАК КорСчетСписания,
	|	ТаблицаСпецоснастка.Номенклатура КАК КорСубконто1,
	|	Реквизиты.Ссылка КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации) КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.Спецоснастка КАК ТаблицаСпецоснастка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|		ПО ТаблицаСпецоснастка.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСписаниеИнвентаря(НомераТаблиц)
	
	НомераТаблиц.Вставить("СписаниеИнвентаряРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеИнвентаряТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	""ПередачаМатериаловВЭксплуатацию"" КАК ВидОперации,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	&СодержаниеПроводкиПередачаВЭксплуатациюИнвентаря КАК Содержание
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ИнвентарьИХозяйственныеПринадлежности"" КАК ИмяСписка,
	|	&СинонимИнвентарь КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаИнвентарь.НомерСтроки КАК НомерСтроки,
	|	ТаблицаИнвентарь.СчетУчета,
	|	ТаблицаИнвентарь.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	0 КАК Себестоимость,
	|	ТаблицаИнвентарь.Количество,
	|	СпособыОтраженияРасходов.ПодразделениеОрганизации КАК КорПодразделение,
	|	СпособыОтраженияРасходов.СчетЗатрат КАК КорСчетСписания,
	|	СпособыОтраженияРасходов.Субконто1 КАК КорСубконто1,
	|	СпособыОтраженияРасходов.Субконто2 КАК КорСубконто2,
	|	СпособыОтраженияРасходов.Субконто3 КАК КорСубконто3,
	|	1 КАК ВидКорСубконто1,
	|	2 КАК ВидКорСубконто2,
	|	3 КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.ИнвентарьИХозяйственныеПринадлежности КАК ТаблицаИнвентарь
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|		ПО ТаблицаИнвентарь.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходов
	|		ПО ТаблицаИнвентарь.СпособОтраженияРасходов = СпособыОтраженияРасходов.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПередачаСпецодежды(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПередачаСпецодеждыРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПередачаСпецодеждыТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Спецодежда"" КАК ИмяСписка,
	|	ТаблицаСпецодежда.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСпецодежда.Номенклатура,
	|	ТаблицаСпецодежда.СчетПередачи,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный) КАК СчетМЦ,
	|	Реквизиты.Ссылка КАК ПартияМатериаловВЭксплуатации,
	|	ТаблицаСпецодежда.ФизЛицо КАК ФизЛицо,
	|	Реквизиты.Местонахождение КАК Подразделение,
	|	ТаблицаСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости КАК СпособПогашенияСтоимости,
	|	ВЫБОР
	|		КОГДА &СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиНУ.ПриПередачеВЭксплуатацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию)
	|		ИНАЧЕ ТаблицаСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости
	|	КОНЕЦ КАК СпособПогашенияСтоимостиНУ,
	|	ТаблицаСпецодежда.НазначениеИспользования.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию)
	|			ТОГДА ТаблицаСпецодежда.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество,
	|	ТаблицаСпецодежда.Количество КАК КоличествоМЦ
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК ТаблицаСпецодежда
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|		ПО ТаблицаСпецодежда.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПередачаСпецоснастки(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПередачаСпецоснасткиРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПередачаСпецоснасткиТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Спецоснастка"" КАК ИмяСписка,
	|	ТаблицаСпецоснастка.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСпецоснастка.Номенклатура,
	|	ТаблицаСпецоснастка.СчетПередачи,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный) КАК СчетМЦ,
	|	Реквизиты.Ссылка КАК ПартияМатериаловВЭксплуатации,
	|	НЕОПРЕДЕЛЕНО КАК ФизЛицо,
	|	Реквизиты.Местонахождение КАК Подразделение,
	|	ТаблицаСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости КАК СпособПогашенияСтоимости,
	|	ВЫБОР
	|		КОГДА &СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиНУ.ПриПередачеВЭксплуатацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию)
	|		ИНАЧЕ ТаблицаСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости
	|	КОНЕЦ КАК СпособПогашенияСтоимостиНУ,
	|	ТаблицаСпецоснастка.НазначениеИспользования.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию)
	|			ТОГДА ТаблицаСпецоснастка.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество,
	|	ТаблицаСпецоснастка.Количество КАК КоличествоМЦ
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.Спецоснастка КАК ТаблицаСпецоснастка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|		ПО ТаблицаСпецоснастка.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПередачаИнвентаря(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПередачаИнвентаряРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПередачаИнвентаряТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ИнвентарьИХозяйственныеПринадлежности"" КАК ИмяСписка,
	|	ТаблицаИнвентарь.НомерСтроки КАК НомерСтроки,
	|	ТаблицаИнвентарь.Номенклатура,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации) КАК СчетМЦ,
	|	Реквизиты.Ссылка КАК ПартияМатериаловВЭксплуатации,
	|	ТаблицаИнвентарь.ФизЛицо КАК ФизЛицо,
	|	Реквизиты.Местонахождение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СпособПогашенияСтоимости,
	|	ТаблицаИнвентарь.СпособОтраженияРасходов,
	|	ТаблицаИнвентарь.Количество КАК КоличествоМЦ
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.ИнвентарьИХозяйственныеПринадлежности КАК ТаблицаИнвентарь
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|		ПО ТаблицаИнвентарь.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНДС(НомераТаблиц)
	
	НомераТаблиц.Вставить("РеквизитыНДС",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СпецодеждаНДС",   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СпецоснасткаНДС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ИнвентарьНДС",    НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Спецодежда"" КАК ИмяСписка,
	|	ТаблицаСпецодежда.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаСпецодежда.Номенклатура КАК Номенклатура,
	|	ТаблицаСпецодежда.СчетУчета КАК СчетУчета,
	|	ТаблицаСпецодежда.НазначениеИспользования.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ТаблицаСпецодежда.Количество КАК Количество
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК ТаблицаСпецодежда
	|ГДЕ
	|	ТаблицаСпецодежда.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Спецоснастка"" КАК ИмяСписка,
	|	ТаблицаСпецоснастка.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаСпецоснастка.Номенклатура КАК Номенклатура,
	|	ТаблицаСпецоснастка.СчетУчета КАК СчетУчета,
	|	ТаблицаСпецоснастка.НазначениеИспользования.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ТаблицаСпецоснастка.Количество КАК Количество
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.Спецоснастка КАК ТаблицаСпецоснастка
	|ГДЕ
	|	ТаблицаСпецоснастка.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ИнвентарьИХозяйственныеПринадлежности"" КАК ИмяСписка,
	|	ТаблицаИнвентарь.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаИнвентарь.Номенклатура КАК Номенклатура,
	|	ТаблицаИнвентарь.СчетУчета КАК СчетУчета,
	|	ТаблицаИнвентарь.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ТаблицаИнвентарь.Количество КАК Количество
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.ИнвентарьИХозяйственныеПринадлежности КАК ТаблицаИнвентарь
	|ГДЕ
	|	ТаблицаИнвентарь.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПодготовитьТаблицыМатериаловПродукцииИП(ТаблицаСписанныеМПЗ, ТаблицаПереданныеМПЗ, ТаблицаРеквизиты) Экспорт
	Перем СтруктураТаблиц;
	
	СтруктураТаблиц = Новый Структура("ТаблицаМатериалов, ПолученоПродукции");
	
	Если ТаблицаРеквизиты = Неопределено
		ИЛИ ТаблицаРеквизиты.Количество() = 0
		ИЛИ ТаблицаСписанныеМПЗ = Неопределено
		ИЛИ ТаблицаСписанныеМПЗ.Количество() = 0 Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если НЕ УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	МассивТиповЗатрат = Новый Массив;
	МассивТиповЗатрат.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	МассивТиповЗатрат.Добавить(Тип("СправочникСсылка.ПрочиеДоходыИРасходы"));
	МассивТиповЗатрат.Добавить(Тип("СправочникСсылка.РасходыБудущихПериодов"));
	ОписаниеТиповЗатрат = Новый ОписаниеТипов(МассивТиповЗатрат);
	
	ТаблицаМатериалов = ТаблицаСписанныеМПЗ.СкопироватьКолонки();
	ТаблицаМатериалов.Колонки.КорСчетСписания.Имя = "СчетЗатрат";
	ТаблицаМатериалов.Колонки.Добавить("Продукция",            ОписаниеТиповЗатрат);
	ТаблицаМатериалов.Колонки.Добавить("НоменклатурнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ТаблицаМатериалов.Колонки.Добавить("СтатьяЗатрат",         ОписаниеТиповЗатрат);
	ТаблицаМатериалов.Колонки.Добавить("СчетДоходов",          Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаМатериалов.Колонки.Добавить("КоличествоПродукции",  ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	ТаблицаПереданныеМПЗ.Индексы.Добавить("ИмяСписка, НомерСтроки");
	Отбор = Новый Структура("ИмяСписка, НомерСтроки");
	
	Для Каждого СписанныйМатериал Из ТаблицаСписанныеМПЗ Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СписанныйМатериал);
		НайденныеСтроки = ТаблицаПереданныеМПЗ.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СпособОтраженияРасходов = НайденныеСтроки[0].СпособОтраженияРасходов;
		
		МассивКоэффициентов = Новый Массив;
		Для Каждого Способ Из СпособОтраженияРасходов.Способы Цикл
			МассивКоэффициентов.Добавить(Способ.Коэффициент);
		КонецЦикла;
		
		МассивКоличества = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СписанныйМатериал.Количество, МассивКоэффициентов, 3);
		Если МассивКоличества = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Индекс = 0;
		
		Для Каждого Способ Из СпособОтраженияРасходов.Способы Цикл
			
			НоваяСтрока = ТаблицаМатериалов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СписанныйМатериал, , "Количество");
			НоваяСтрока.Количество = МассивКоличества[Индекс];
			
			НоваяСтрока.СчетЗатрат = Способ.СчетЗатрат;
			
			Для НомерСубконто = 1 По 3 Цикл
				
				ЗначениеСубконто = Способ["Субконто" + НомерСубконто];
				
				Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
					ТипСубконто = ТипЗнч(ЗначениеСубконто);
					Если ОписаниеТиповЗатрат.СодержитТип(ТипСубконто) Тогда
						НоваяСтрока.СтатьяЗатрат = ЗначениеСубконто;
					ИначеЕсли ТипСубконто = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
						НоваяСтрока.НоменклатурнаяГруппа = ЗначениеСубконто;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			НоваяСтрока.Продукция = НоваяСтрока.СтатьяЗатрат;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	СтруктураТаблиц.ТаблицаМатериалов =
		УчетДоходовИРасходовПредпринимателя.ДополнитьТаблицуСписанияМатериалов(ТаблицаМатериалов, ТаблицаРеквизиты);
	
	Если СтруктураТаблиц.ТаблицаМатериалов <> Неопределено Тогда
		СтруктураТаблиц.ПолученоПродукции = СтруктураТаблиц.ТаблицаМатериалов.Скопировать();
		СтруктураТаблиц.ПолученоПродукции.Колонки.СчетЗатрат.Имя = "СчетУчетаПродукции";
		СтруктураТаблиц.ПолученоПродукции.Свернуть("СчетУчетаПродукции, Продукция, НоменклатурнаяГруппа", "КоличествоПродукции");
	КонецЕсли;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати	= "ПараметрыПечатиПередачаМатериаловВЭксплуатацию_М11";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М11");

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Документ КАК Документ,
	|	ВложенныйЗапрос.Документ.Номер КАК Номер,
	|	ВложенныйЗапрос.Документ.Дата КАК ДатаДокумента,
	|	ВложенныйЗапрос.Документ.Дата КАК ДатаСоставления,
	|	ВложенныйЗапрос.Документ.Организация КАК Организация,
	|	ВложенныйЗапрос.Документ.ПодразделениеОрганизации КАК Склад,
	|	ВложенныйЗапрос.Документ.Склад КАК СкладХранения,
	|	ВложенныйЗапрос.Документ.Местонахождение КАК Подразделение,
	|	ВложенныйЗапрос.ID КАК ID,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК МатериалНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Артикул
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.СчетУчета КАК Счет,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК Количество,
	|	СУММА(ЕСТЬNULL(БУ.Сумма, 0)) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		Спецодежда.Ссылка КАК Документ,
	|		1 КАК ID,
	|		МИНИМУМ(Спецодежда.НомерСтроки) КАК НомерСтроки,
	|		Спецодежда.Номенклатура КАК Номенклатура,
	|		Спецодежда.СчетУчета КАК СчетУчета,
	|		СУММА(Спецодежда.Количество) КАК Количество
	|	ИЗ
	|		Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК Спецодежда
	|	ГДЕ
	|		Спецодежда.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Спецодежда.Номенклатура,
	|		Спецодежда.СчетУчета,
	|		Спецодежда.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Спецоснастка.Ссылка,
	|		2,
	|		МИНИМУМ(Спецоснастка.НомерСтроки),
	|		Спецоснастка.Номенклатура,
	|		Спецоснастка.СчетУчета,
	|		СУММА(Спецоснастка.Количество)
	|	ИЗ
	|		Документ.ПередачаМатериаловВЭксплуатацию.Спецоснастка КАК Спецоснастка
	|	ГДЕ
	|		Спецоснастка.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Спецоснастка.Ссылка,
	|		Спецоснастка.Номенклатура,
	|		Спецоснастка.СчетУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнвентарьИХозяйственныеПринадлежности.Ссылка,
	|		3,
	|		МИНИМУМ(ИнвентарьИХозяйственныеПринадлежности.НомерСтроки),
	|		ИнвентарьИХозяйственныеПринадлежности.Номенклатура,
	|		ИнвентарьИХозяйственныеПринадлежности.СчетУчета,
	|		СУММА(ИнвентарьИХозяйственныеПринадлежности.Количество)
	|	ИЗ
	|		Документ.ПередачаМатериаловВЭксплуатацию.ИнвентарьИХозяйственныеПринадлежности КАК ИнвентарьИХозяйственныеПринадлежности
	|	ГДЕ
	|		ИнвентарьИХозяйственныеПринадлежности.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИнвентарьИХозяйственныеПринадлежности.Ссылка,
	|		ИнвентарьИХозяйственныеПринадлежности.Номенклатура,
	|		ИнвентарьИХозяйственныеПринадлежности.СчетУчета) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|				,
	|				,
	|				Регистратор В (&МассивОбъектов)
	|					И СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный)
	|					И СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный)
	|					И СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации),
	|				,
	|				) КАК БУ
	|		ПО ВложенныйЗапрос.Документ = БУ.Регистратор
	|			И ВложенныйЗапрос.Номенклатура = БУ.СубконтоКт1
	|			И ВложенныйЗапрос.СчетУчета = БУ.СчетКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Документ,
	|	ВложенныйЗапрос.Документ.Номер,
	|	ВложенныйЗапрос.Документ.Дата,
	|	ВложенныйЗапрос.Документ.Организация,
	|	ВложенныйЗапрос.Документ.ПодразделениеОрганизации,
	|	ВложенныйЗапрос.Документ.Местонахождение,
	|	ВложенныйЗапрос.ID,
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Код,
	|	ВложенныйЗапрос.СчетУчета,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Артикул
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.Код
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Документ.Дата,
	|	ВложенныйЗапрос.Документ.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	ID,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма)
	|ПО
	|	Документ";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		ПервыйДокумент = Истина;

		ВыборкаПоДокументам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
		Пока ВыборкаПоДокументам.Следующий() Цикл

			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйДокумент = Ложь;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

			// Шапка
			Область = Макет.ПолучитьОбласть("Шапка");
			Область.Параметры.Заголовок = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.Номер, Истина, Ложь);
			Область.Параметры.Заполнить(ВыборкаПоДокументам);
			Область.Параметры.Склад = ВыборкаПоДокументам.СкладХранения;
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
			Область.Параметры.ПредставлениеОрганизации   = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
			Область.Параметры.ПредставлениеПодразделения = ВыборкаПоДокументам.Подразделение;
			Область.Параметры.КодОКПО                    = СведенияОбОрганизации.КодПоОКПО;
			ТабДокумент.Вывести(Область);

			// Строки
			ВыборкаПоСтрокам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаПоСтрокам.Следующий() Цикл
				Область = Макет.ПолучитьОбласть("Строка");
				Область.Параметры.Заполнить(ВыборкаПоСтрокам);
				Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование);
				Область.Параметры.Цена                 = ?(ВыборкаПоСтрокам.Количество = 0, 0, ВыборкаПоСтрокам.Сумма / ВыборкаПоСтрокам.Количество);
				ТабДокумент.Вывести(Область);
			КонецЦикла;

			// Подвал
			Область = Макет.ПолучитьОбласть("Подвал");
			
			Если ВыборкаПоДокументам.СкладХранения <> Справочники.Склады.ПустаяСсылка() Тогда 
				МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(ВыборкаПоДокументам.СкладХранения,ВыборкаПоДокументам.ДатаДокумента);
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоДокументам.Организация,МОЛ,ВыборкаПоДокументам.ДатаДокумента);
				Область.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
				Область.Параметры.МОЛФИО = ДанныеФизЛица.Представление;
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Документ);

		КонецЦикла;

	КонецЕсли;

	Возврат ТабДокумент;

КонецФункции

Функция ПечатьМБ7(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаМатериаловВЭксплуатацию_МБ7";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаМатериаловВЭксплуатацию.ПФ_MXL_МБ7");

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокИсх.Дата КАК Дата,
	|	ДокИсх.Ссылка КАК ДокументСсылка,
	|	ДокИсх.Организация КАК Организация,
	|	Док.ФизЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК ДокИсх
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК Док
	|		ПО ДокИсх.Ссылка = Док.Ссылка
	|ГДЕ
	|	ДокИсх.Ссылка В(&МассивОбъектов)";
	
	ТаблицаРаботников = Запрос.Выполнить().Выгрузить();
	
	Если ПривилегированныйРежим() Тогда
		// Отключение привилегированного режима при переходе в другую подсистему
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	УчетЗарплаты.ПолучитьТаблицуСотрудников(ТаблицаРаботников);
	Запрос.УстановитьПараметр("Сотрудники", ТаблицаРаботников);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабСотрудники.Сотрудник КАК Сотрудник,
	|	ТабСотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТабСотрудники.СотрудникКод КАК СотрудникКод,
	|	ТабСотрудники.ДокументСсылка КАК ДокументСсылка
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&Сотрудники КАК ТабСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокИсх.Ссылка КАК Документ,
	|	ДокИсх.Номер КАК НомерДокумента,
	|	ДокИсх.Дата КАК ДатаДокумента,
	|	ДокИсх.Дата КАК ДатаСоставления,
	|	ДокИсх.Организация КАК Организация,
	|	ДокИсх.Склад КАК Склад,
	|	ДокИсх.Местонахождение КАК Подразделение,
	|	Док.НомерСтроки КАК НомерПП,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА Док.Номенклатура.Артикул
	|		ИНАЧЕ Док.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Док.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	Док.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Док.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Док.Количество КАК Количество,
	|	Док.ФизЛицо КАК Сотрудник,
	|	Док.НазначениеИспользования.СрокПолезногоИспользования КАК СрокСлужбы,
	|	Сотрудники.СотрудникКод КАК ТабельныйНомер
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию КАК ДокИсх
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК Док
	|		ПО ДокИсх.Ссылка = Док.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
	|		ПО (Док.Ссылка = Сотрудники.ДокументСсылка)
	|			И (Док.ФизЛицо = Сотрудники.ФизическоеЛицо)
	|ГДЕ
	|	ДокИсх.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокИсх.Ссылка,
	|	НомерПП
	|ИТОГИ ПО
	|	Документ";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		ПервыйДокумент = Истина;

		ВыборкаПоДокументам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
		Пока ВыборкаПоДокументам.Следующий() Цикл

			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйДокумент = Ложь;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

			// Шапка
			Область = Макет.ПолучитьОбласть("Заголовок");
			Область.Параметры.Заполнить(ВыборкаПоДокументам);
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
			Область.Параметры.ПредставлениеОрганизации   = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
			Область.Параметры.ПредставлениеПодразделения = ВыборкаПоДокументам.Подразделение;
			Область.Параметры.ОрганизацияПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
			ТабДокумент.Вывести(Область);

			// Строки
			ВыборкаПоСтрокам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаПоСтрокам.Следующий() Цикл
				Область = Макет.ПолучитьОбласть("Строка");
				Область.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Вывести(Область);
			КонецЦикла;

			// Подвал
			Область = Макет.ПолучитьОбласть("Подписи");
			
			Если ВыборкаПоДокументам.Склад <> Справочники.Склады.ПустаяСсылка() Тогда 
				МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(ВыборкаПоДокументам.Склад,ВыборкаПоДокументам.ДатаДокумента);
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоДокументам.Организация,МОЛ,ВыборкаПоДокументам.ДатаДокумента);
				Область.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
				Область.Параметры.МОЛФИО = ДанныеФизЛица.Представление;
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Документ);

		КонецЦикла;

	КонецЕсли;

	Возврат ТабДокумент;

КонецФункции

#КонецОбласти

#КонецЕсли