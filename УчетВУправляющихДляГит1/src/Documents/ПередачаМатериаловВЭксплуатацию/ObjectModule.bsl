#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ПередачаМатериаловВЭксплуатацию.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	ТаблицаСписаннаяСпецодежда   = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.СписаниеСпецодеждыТаблица, ПараметрыПроведения.СписаниеСпецодеждыРеквизиты, Отказ);
	ТаблицаСписаннаяСпецоснастка = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.СписаниеСпецоснасткиТаблица, ПараметрыПроведения.СписаниеСпецоснасткиРеквизиты, Отказ);
	ТаблицаСписанныйИнвентарь    = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.СписаниеИнвентаряТаблица, ПараметрыПроведения.СписаниеИнвентаряРеквизиты, Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	ТаблицаСписанныеМатериалы = ТаблицаСписаннаяСпецодежда.Скопировать();
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаСписаннаяСпецоснастка, ТаблицаСписанныеМатериалы);
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаСписанныйИнвентарь, ТаблицаСписанныеМатериалы);
	СтруктураТаблицУСН = Новый Структура("ТаблицаТМЦ", ТаблицаСписанныеМатериалы);
	
	// Учет доходов и расходов ИП
	ТаблицыМатериаловПродукцииИП_Спецодежда = Документы.ПередачаМатериаловВЭксплуатацию.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаСписаннаяСпецодежда, ПараметрыПроведения.ПередачаСпецодеждыТаблица, ПараметрыПроведения.СписаниеСпецодеждыРеквизиты);
	ТаблицыМатериаловПродукцииИП_Спецоснастка = Документы.ПередачаМатериаловВЭксплуатацию.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаСписаннаяСпецоснастка, ПараметрыПроведения.ПередачаСпецоснасткиТаблица, ПараметрыПроведения.СписаниеСпецоснасткиРеквизиты);
	ТаблицыМатериаловПродукцииИП_Инвентарь = Документы.ПередачаМатериаловВЭксплуатацию.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаСписанныйИнвентарь, ПараметрыПроведения.ПередачаИнвентаряТаблица, ПараметрыПроведения.СписаниеИнвентаряРеквизиты);
	
	ТаблицыСписанияМПЗИП_Спецодежда = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИП_Спецодежда.ТаблицаМатериалов, ПараметрыПроведения.СписаниеСпецодеждыРеквизиты, Отказ);
	ТаблицыСписанияМПЗИП_Спецоснастка = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИП_Спецоснастка.ТаблицаМатериалов, ПараметрыПроведения.СписаниеСпецоснасткиРеквизиты, Отказ);
	ТаблицыСписанияМПЗИП_Инвентарь = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИП_Инвентарь.ТаблицаМатериалов, ПараметрыПроведения.СписаниеИнвентаряРеквизиты, Отказ);
	
	ТаблицаПоступлениеПродукцииИП_Спецодежда = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИП_Спецодежда.ПолученоПродукции, ПараметрыПроведения.СписаниеСпецодеждыРеквизиты);
	ТаблицаПоступлениеПродукцииИП_Спецоснастка = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИП_Спецоснастка.ПолученоПродукции, ПараметрыПроведения.СписаниеСпецоснасткиРеквизиты);
	ТаблицаПоступлениеПродукцииИП_Инвентарь = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИП_Инвентарь.ПолученоПродукции, ПараметрыПроведения.СписаниеИнвентаряРеквизиты);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);

	// Спецодежда
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписаннаяСпецодежда,
		ПараметрыПроведения.СписаниеСпецодеждыРеквизиты,
		Движения, Отказ);
	УчетМатериаловВЭксплуатации.СформироватьДвиженияПередачаСпецодеждыСпецоснасткиВЭксплуатацию(
		ПараметрыПроведения.ПередачаСпецодеждыТаблица,
		ТаблицаСписаннаяСпецодежда,
		ПараметрыПроведения.ПередачаСпецодеждыРеквизиты,
		Движения, Отказ);

	// Спецоснастка
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписаннаяСпецоснастка,
		ПараметрыПроведения.СписаниеСпецоснасткиРеквизиты,
		Движения, Отказ);
	УчетМатериаловВЭксплуатации.СформироватьДвиженияПередачаСпецодеждыСпецоснасткиВЭксплуатацию(
		ПараметрыПроведения.ПередачаСпецоснасткиТаблица,
		ТаблицаСписаннаяСпецоснастка,
		ПараметрыПроведения.ПередачаСпецоснасткиРеквизиты,
		Движения, Отказ);

	// Инвентарь и хозяйственные принадлежности
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписанныйИнвентарь,
		ПараметрыПроведения.СписаниеИнвентаряРеквизиты,
		Движения, Отказ);
	УчетМатериаловВЭксплуатации.СформироватьДвиженияПередачаИнвентаряВЭксплуатацию(
		ПараметрыПроведения.ПередачаИнвентаряТаблица,
		ТаблицаСписанныйИнвентарь,
		ПараметрыПроведения.ПередачаИнвентаряРеквизиты,
		Движения, Отказ);

	// Учет НДС
	// Списание спецодежды
	УчетНДСБП.СформироватьДвиженияПередачаМатериаловВЭксплуатацию(
		ПараметрыПроведения.СпецодеждаНДС,
		ТаблицаСписаннаяСпецодежда,
		ПараметрыПроведения.РеквизитыНДС,
		Движения, Отказ);
	// Списание спецоснастки
	УчетНДСБП.СформироватьДвиженияПередачаМатериаловВЭксплуатацию(
		ПараметрыПроведения.СпецоснасткаНДС,
		ТаблицаСписаннаяСпецоснастка,
		ПараметрыПроведения.РеквизитыНДС,
		Движения, Отказ);
	// Списание инвентаря
	УчетНДСБП.СформироватьДвиженияПередачаМатериаловВЭксплуатацию(
		ПараметрыПроведения.ИнвентарьНДС,
		ТаблицаСписанныйИнвентарь,
		ПараметрыПроведения.РеквизитыНДС,
		Движения, Отказ);
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);
	
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИП_Спецодежда, ПараметрыПроведения.СписаниеСпецодеждыРеквизиты, Движения, Отказ);
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИП_Спецоснастка, ПараметрыПроведения.СписаниеСпецоснасткиРеквизиты, Движения, Отказ);
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИП_Инвентарь, ПараметрыПроведения.СписаниеИнвентаряРеквизиты, Движения, Отказ);
	
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступлениеПродукцииИП_Спецодежда, ТаблицыСписанияМПЗИП_Спецодежда.СтоимостьПродукции, 
		ПараметрыПроведения.СписаниеСпецодеждыРеквизиты, Движения, Отказ);
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступлениеПродукцииИП_Спецоснастка, ТаблицыСписанияМПЗИП_Спецоснастка.СтоимостьПродукции, 
		ПараметрыПроведения.СписаниеСпецоснасткиРеквизиты, Движения, Отказ);
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступлениеПродукцииИП_Инвентарь, ТаблицыСписанияМПЗИП_Инвентарь.СтоимостьПродукции, 
		ПараметрыПроведения.СписаниеИнвентаряРеквизиты, Движения, Отказ);
		
	// Регистрация в последовательности
	ТаблицаРегистрации = РаботаСПоследовательностями.ПодготовитьТаблицуСчетовТоваровДляАнализа(
		ТаблицаСписаннаяСпецодежда, ТаблицаСписаннаяСпецоснастка);
	РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ЭтотОбъект, Отказ, ,
		РаботаСПоследовательностями.ПодготовитьТаблицуСчетовТоваровДляАнализа(ТаблицаРегистрации, ТаблицаСписанныйИнвентарь));
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ПроверяемыеРеквизиты.Найти("Склад") = Неопределено Тогда
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;

	Если Спецоснастка.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Местонахождение");
	КонецЕсли;

	РезультатыЗапроса = ВыполнитьЗпросПроверкиТабличныхЧастей();
	ТабСпецодежда   = РезультатыЗапроса[5].Выгрузить();
	ТабСпецоснастка = РезультатыЗапроса[6].Выгрузить();
	ТабИнвентарь    = РезультатыЗапроса[7].Выгрузить();

	ПроверитьНаСовпадающиеСтроки(РезультатыЗапроса[3].Выгрузить(), "Спецодежда", "Номенклатура, ФизЛицо", Отказ);
	ПроверитьНаСовпадающиеСтроки(РезультатыЗапроса[4].Выгрузить(), "Спецоснастка", "Номенклатура", Отказ);

	Для каждого Строка Из ТабСпецодежда Цикл
		Если НЕ Строка.НазначениеИспользования.Пустая() Тогда
			Если Строка.СпособПогашенияСтоимости.Пустая() Тогда
				ТекстСообщения = НСтр("ru='В назначении использования, выбранном в строке %Строка.НомерСтроки% табличной части Спецодежда, не указан способ погашения стоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Строка.НомерСтроки%", Строка.НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Спецодежда[" + (Формат(Строка.НомерСтроки, "ЧН=; ЧГ=") - 1) + "].НазначениеИспользования", "Объект", Отказ);
			КонецЕсли;
			Если Строка.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПропорциональноОбъемуПродукцииРабот Тогда
				ТекстСообщения = НСтр("ru='Назначение использования, выбранное в строке %Строка.НомерСтроки% табличной части Спецодежда, имеет недопустимый для спецодежды способ погашения стоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Строка.НомерСтроки%", Строка.НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Спецодежда[" + (Формат(Строка.НомерСтроки, "ЧН=; ЧГ=") - 1) + "].НазначениеИспользования", "Объект", Отказ);
			КонецЕсли;
			Если Строка.СпособОтраженияРасходов.Пустая() Тогда
				ТекстСообщения = НСтр("ru='В назначении использования, выбранном в строке %Строка.НомерСтроки% табличной части Спецодежда, не указан способ отражения расходов.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Строка.НомерСтроки%", Строка.НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Спецодежда[" + (Формат(Строка.НомерСтроки, "ЧН=; ЧГ=") - 1) + "].НазначениеИспользования", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Для каждого Строка Из ТабСпецоснастка Цикл
		Если НЕ Строка.НазначениеИспользования.Пустая() Тогда
			Если Строка.СпособПогашенияСтоимости.Пустая() Тогда
				ТекстСообщения = НСтр("ru='В назначении использования, выбранном в строке %Строка.НомерСтроки% табличной части Спецоснастка, не указан способ погашения стоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Строка.НомерСтроки%", Строка.НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Спецоснастка[" + (Формат(Строка.НомерСтроки, "ЧН=; ЧГ=") - 1) + "].СпособПогашенияСтоимости", "Объект", Отказ);
			КонецЕсли;
			Если Строка.СпособОтраженияРасходов.Пустая() Тогда
				ТекстСообщения = НСтр("ru='В назначении использования, выбранном в строке %Строка.НомерСтроки% табличной части Спецоснастка, не указан способ отражения расходов.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Строка.НомерСтроки%", Строка.НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Спецоснастка[" + (Формат(Строка.НомерСтроки, "ЧН=; ЧГ=") - 1) + "].НазначениеИспользования", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Для каждого Строка Из ТабИнвентарь Цикл
		Если НЕ Строка.СпособОтраженияРасходов.Пустая() Тогда
			Если Строка.СпособОтраженияРасходовКоличествоСтрок > 1 Тогда
				ТекстСообщения = НСтр("ru='В строке %Строка.НомерСтроки% табличной части Инвентарь и хозяйственные принадлежности, способ отражения расходов %Строка.СпособОтраженияРасходов% содержит более одной строки.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Строка.НомерСтроки%", Строка.НомерСтроки);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Строка.СпособОтраженияРасходов%", Строка.СпособОтраженияРасходов);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ИнвентарьИХозяйственныеПринадлежности[" + (Формат(Строка.НомерСтроки, "ЧН=; ЧГ=") - 1) + "].СпособОтраженияРасходов", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если Спецоснастка.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат = Ложь;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Счет10_09   = ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности;
		Счет10_11_2 = ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации;
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		
		СоответствиеСчетовУчетаНоменклатуры = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
			Организация,
			ОбщегоНазначения.ВыгрузитьКолонку(Основание.Товары, "Номенклатура", Истина),
			Склад,
			Дата);
		
		Для Каждого ТекСтрокаТовары Из Основание.Товары Цикл
			
			СчетаУчета = СоответствиеСчетовУчетаНоменклатуры.Получить(ТекСтрокаТовары.Номенклатура);
			
			Если ЗначениеЗаполнено(ТекСтрокаТовары.СчетУчета)
				И (ТекСтрокаТовары.СчетУчета = Счет10_09 
					ИЛИ БухгалтерскийУчетПовтИсп.СчетВИерархии(ТекСтрокаТовары.СчетУчета, Счет10_09)) Тогда
				
				НоваяСтрока = ИнвентарьИХозяйственныеПринадлежности.Добавить();
				
			ИначеЕсли СчетаУчета<> Неопределено
				И ЗначениеЗаполнено(СчетаУчета.СчетПередачи)
				И БухгалтерскийУчетПовтИсп.СчетВИерархии(СчетаУчета.СчетПередачи, Счет10_11_2) Тогда
				
				НоваяСтрока = Спецоснастка.Добавить();
				НоваяСтрока.СчетПередачи = СчетаУчета.СчетПередачи;
				
			Иначе
				
				НоваяСтрока = Спецодежда.Добавить();
				НоваяСтрока.СчетПередачи = СчетаУчета.СчетПередачи;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаТовары, "Количество, Номенклатура, ОтражениеВУСН, СчетУчета");
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Проверяет табличную часть на наличие совпадающих строк.
// Проверка проводится по заданным колонкам. Используется, когда необходимо
// контролировать отсутствие повторов определенных данных в табличных частях
// документов.
//
// Параметры:
//  Документ          - ДокументОбъект, в котором проводится проверка.
//  ИмяТабличнойЧасти - Имя табличной части документа для проверки.
//  СтруктураКолонок  - Структура, содержащая колонки, по которым проверяются
//                      совпадения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ПроверитьНаСовпадающиеСтроки(ТаблицаСовпадений, ИмяТабличнойЧасти, СписокКолонок, Отказ)

	Для Каждого Строка Из ТаблицаСовпадений Цикл
		Если Строка.КоличествоСовпадений > 1 Тогда
			СтруктураОтбора = Новый Структура();
			ТекстСообщения = НСтр("ru='Существуют повторяющиеся элементы по колонкам %СписокКолонок% в строках табличной части.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СписокКолонок%", СписокКолонок);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, ИмяТабличнойЧасти + "[" + (Формат(Строка.НомерСтроки - 1, "ЧН=; ЧГ=") ) + "].Номенклатура", "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ВыполнитьЗпросПроверкиТабличныхЧастей()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСпецодежда", Спецодежда.Выгрузить(, "НомерСтроки, Номенклатура, ФизЛицо, НазначениеИспользования"));
	Запрос.УстановитьПараметр("ТаблицаСпецоснастка", Спецоснастка.Выгрузить(, "НомерСтроки, Номенклатура, НазначениеИспользования"));
	Запрос.УстановитьПараметр("ТаблицаИнвентарьИХозяйственныеПринадлежности", ИнвентарьИХозяйственныеПринадлежности.Выгрузить(, "НомерСтроки, Номенклатура, СпособОтраженияРасходов"));

	Запрос.Текст =
	"ВЫБРАТЬ //0
	|	Спецодежда.НомерСтроки,
	|	Спецодежда.Номенклатура,
	|	Спецодежда.ФизЛицо,
	|	Спецодежда.НазначениеИспользования
	|ПОМЕСТИТЬ Спецодежда
	|ИЗ
	|	&ТаблицаСпецодежда КАК Спецодежда
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ //1
	|	Спецоснастка.НомерСтроки,
	|	Спецоснастка.Номенклатура,
	|	Спецоснастка.НазначениеИспользования
	|ПОМЕСТИТЬ Спецоснастка
	|ИЗ
	|	&ТаблицаСпецоснастка КАК Спецоснастка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ //2
	|	ИнвентарьИХозяйственныеПринадлежности.НомерСтроки,
	|	ИнвентарьИХозяйственныеПринадлежности.Номенклатура,
	|	ИнвентарьИХозяйственныеПринадлежности.СпособОтраженияРасходов
	|ПОМЕСТИТЬ Инвентарь
	|ИЗ
	|	&ТаблицаИнвентарьИХозяйственныеПринадлежности КАК ИнвентарьИХозяйственныеПринадлежности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ //3
	|	МАКСИМУМ(Спецодежда.НомерСтроки) КАК НомерСтроки,
	|	Спецодежда.Номенклатура,
	|	Спецодежда.ФизЛицо,
	|	СУММА(1) КАК КоличествоСовпадений
	|ИЗ
	|	Спецодежда КАК Спецодежда
	|
	|СГРУППИРОВАТЬ ПО
	|	Спецодежда.Номенклатура,
	|	Спецодежда.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ //4
	|	МАКСИМУМ(Спецоснастка.НомерСтроки) КАК НомерСтроки,
	|	Спецоснастка.Номенклатура,
	|	СУММА(1) КАК КоличествоСовпадений
	|ИЗ
	|	Спецоснастка КАК Спецоснастка
	|
	|СГРУППИРОВАТЬ ПО
	|	Спецоснастка.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ //5
	|	Спецодежда.НомерСтроки,
	|	Спецодежда.Номенклатура,
	|	Спецодежда.НазначениеИспользования,
	|	Спецодежда.НазначениеИспользования.СпособПогашенияСтоимости КАК СпособПогашенияСтоимости,
	|	Спецодежда.НазначениеИспользования.СпособОтраженияРасходов КАК СпособОтраженияРасходов
	|ИЗ
	|	Спецодежда КАК Спецодежда
	|ГДЕ
	|	Спецодежда.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И Спецодежда.НазначениеИспользования <> ЗНАЧЕНИЕ(Справочник.НазначенияИспользования.ПустаяСсылка)
	|	И ( Спецодежда.НазначениеИспользования.СпособОтраженияРасходов = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
	|		ИЛИ Спецодежда.НазначениеИспользования.СпособПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимости.ПропорциональноОбъемуПродукцииРабот)
	|			ИЛИ Спецодежда.НазначениеИспользования.СпособПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимости.ПустаяСсылка) )
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ //6
	|	Спецоснастка.НомерСтроки,
	|	Спецоснастка.Номенклатура,
	|	Спецоснастка.НазначениеИспользования,
	|	Спецоснастка.НазначениеИспользования.СпособПогашенияСтоимости КАК СпособПогашенияСтоимости,
	|	Спецоснастка.НазначениеИспользования.СпособОтраженияРасходов КАК СпособОтраженияРасходов
	|ИЗ
	|	Спецоснастка КАК Спецоснастка
	|ГДЕ
	|	Спецоснастка.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И Спецоснастка.НазначениеИспользования <> ЗНАЧЕНИЕ(Справочник.НазначенияИспользования.ПустаяСсылка)
	|	И (
	|		Спецоснастка.НазначениеИспользования.СпособОтраженияРасходов = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
	|		ИЛИ Спецоснастка.НазначениеИспользования.СпособПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимости.ПустаяСсылка) )
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ //7
	|	Инвентарь.НомерСтроки,
	|	Инвентарь.Номенклатура,
	|	Инвентарь.СпособОтраженияРасходов,
	|	КОЛИЧЕСТВО(СтрокиСпособа.Ссылка) КАК СпособОтраженияРасходовКоличествоСтрок
	|ИЗ
	|	Инвентарь КАК Инвентарь
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СтрокиСпособа
	|		ПО Инвентарь.СпособОтраженияРасходов = СтрокиСпособа.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Инвентарь.НомерСтроки,
	|	Инвентарь.Номенклатура,
	|	Инвентарь.СпособОтраженияРасходов
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(СтрокиСпособа.Ссылка) <> 1
	|
	|";

	Возврат Запрос.ВыполнитьПакет();

КонецФункции

#КонецОбласти

#КонецЕсли