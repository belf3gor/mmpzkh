#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мКэшВидовСубконтоПоСчетам;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.СписаниеНДС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	УчетНДС.СформироватьДвиженияСписаниеНДС(
		ПараметрыПроведения.ТаблицаРеквизиты,
		ПараметрыПроведения.ТаблицаСоставДокумента,
		Движения,
		Отказ);
		
	УчетНДС.СформироватьДвиженияСписаниеНДС(
		ПараметрыПроведения.ТаблицаРеквизиты,
		ПараметрыПроведения.ТаблицаАвансыПолученные,
		Движения,
		Отказ);
		
	ПомощникРасчетаНДС.СброситьАктуальностьРасчета(Ссылка);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

КонецПроцедуры // ОбработкаПроведения(

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПомощникРасчетаНДС.СброситьАктуальностьРасчета(Ссылка);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());	
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ЗаполнениеДокументов.Заполнить(ЭтотОбъект);
		
		Отказ = Ложь;
		ЗаполнитьПоПоступлению(Основание, Отказ);
		
		ТекстСообщения = НСтр("ru='Нет данных для списания НДС.'");
		Если Отказ Тогда
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоПоступлению(Поступление, Отказ) Экспорт

	Если НЕ ЗначениеЗаполнено(Поступление) Тогда
		Возврат;
	КонецЕсли;
	
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Поступление, "Организация");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Поступление", Поступление);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.СчетУчетаНДС,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ДатаОплаты,
	|	НДСПредъявленный.ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДСПредъявленный.СуммаБезНДС
	|			ИНАЧЕ -НДСПредъявленный.СуммаБезНДС
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР
	|			КОГДА НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НДСПредъявленный.НДС
	|			ИНАЧЕ -НДСПредъявленный.НДС
	|		КОНЕЦ) КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Организация = &Организация
	|	И НДСПредъявленный.Регистратор = &Поступление
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.СчетУчетаНДС,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ДатаОплаты,
	|	НДСПредъявленный.ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура";

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НДСВДокументе = РезультатЗапроса.Выбрать();
	
	Пока НДСВДокументе.Следующий() Цикл
		СтрокаТабличнойЧасти = Состав.Добавить();	
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, НДСВДокументе);
	КонецЦикла;
	
	СчетСписанияНДС 		= ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("ПланСчетов.Хозрасчетный.ПрочиеРасходы");
	СубконтоСписанияНДС1 	= ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.СписаниеВыделенногоНДСНаПрочиеРасходы");
	
КонецПроцедуры

#КонецЕсли