#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
	КонецЕсли;
	
	ИнтеграцияВЕТИСПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	Если ЗначениеЗаполнено(ГрузоотправительПредприятие) И Маршрут.Количество() = 0 Тогда
		НоваяСтрока = Маршрут.Добавить();
		НоваяСтрока.Предприятие  = ГрузоотправительПредприятие;
		НоваяСтрока.СПерегрузкой = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ИсходящаяТранспортнаяОперацияВЕТИС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияВЕТИС.ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, Движения, "ДвиженияСерийТоваров");
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияВЕТИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ЭтотОбъект.ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ТТНУказан Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТипТТН");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаТТН");
		МассивНепроверяемыхРеквизитов.Добавить("НомерТТН");
	КонецЕсли;
	
	Если ГрузоотправительПредприятие = ГрузополучательПредприятие Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособХранения");
		МассивНепроверяемыхРеквизитов.Добавить("Маршрут");
	ИначеЕсли Маршрут.Количество() > 0 Тогда
		Если НЕ ЗначениеЗаполнено(Маршрут[0].НомерТранспортногоСредства)Тогда
			Если Не Маршрут[0].ТипТранспорта = Перечисления.ТипыТранспортаВЕТИС.ПерегонСкота Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Укажите номер транспортного средства!'"),
					Ссылка,,
					"ПредставлениеТранспортногоСредства",
					Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	КоличествоМаршрутов = Маршрут.Количество();
	Если КоличествоМаршрутов Тогда
		
		ОтборПерегонов = Новый Структура("ТипТранспорта", ПредопределенноеЗначение("Перечисление.ТипыТранспортаВЕТИС.ПерегонСкота"));
		Если Маршрут.НайтиСтроки(ОтборПерегонов).Количество() = КоличествоМаршрутов Тогда
			МассивНепроверяемыхРеквизитов.Добавить("СпособХранения")
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если СтрокаТовары.ПериодНахожденияЖивотныхНаТерриторииТС = Перечисления.ПериодыНахожденияЖивотныхНаТерриторииТСВЕТИС.ЗначениеВМесяцах
			И СтрокаТовары.КоличествоПериодовНахожденияЖивотныхНаТерриторииТС = 0 Тогда
			
			ШаблонСообщения = НСтр("ru = 'В строке №%1 заполнено количество периодов нахождения животных на территории Т.С.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Товары.Индекс(СтрокаТовары) + 1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка,, "Объект", Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИнтеграцияВЕТИСВызовСервера.ИспользуетсяОграничениеВыбораПродукцииТретьегоУровня(Дата) Тогда
		
		НомераСтрокСПродукциейТретьегоУровня = ПродукцияВЕТИСВызовСервера.СтрокиТоваровСПродукциейТретьегоУровня(Товары.Выгрузить(, "НомерСтроки, Продукция, ЗаписьСкладскогоЖурнала"));
		
		Для Каждого НомерСтроки Из НомераСтрокСПродукциейТретьегоУровня Цикл
			
			ШаблонСообщения = НСтр("ru = 'В строке №%1 требуется указание четвертого уровня продукции в соответствии с письмом РСХН
			|""О переходе на четвертый уровень справочника подконтрольных товаров с 01 февраля 2019""'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, "Продукция"),,
				Отказ);
				
		КонецЦикла;
		
	КонецЕсли;
	
	
	
	ИнтеграцияВЕТИС.ПроверитьЗаполнениеТипаПроисхождения(ЭтотОбъект, Отказ, МассивНепроверяемыхРеквизитов);
	
	ДопустимыеЦелиВЕТИС.ПроконтролироватьКорректностьУказанияЦелей(ЭтотОбъект, Отказ);
	
	ИнтеграцияВЕТИСПереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Идентификатор) Тогда
		Идентификатор = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Если ГрузоотправительПредприятие = ГрузополучательПредприятие Тогда
		Маршрут.Очистить();
		Регионализация.Очистить();
		Для каждого СтрокаТЧ Из Товары Цикл
			СтрокаТЧ.РезультатПроверкиПравилРегионализации = Перечисления.РезультатыПроверкиПравилРегионализации.ПустаяСсылка();
			СтрокаТЧ.УсловияРегионализацииВыполнены = Ложь;
		КонецЦикла;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Не ТТНУказан Тогда
		СерияТТН = Неопределено;
		ДатаТТН = Неопределено;
		НомерТТН = Неопределено;
		ТипТТН = Неопределено;
	КонецЕсли;
	
	ИнтеграцияВЕТИС.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект);
	
	ИнтеграцияВЕТИС.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияВЕТИС.ЗаписатьСтатусДокументаВЕТИСПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование = Неопределено;
	Идентификатор     = "";
	
	Если Товары.Количество() > 0 Тогда
		Товары.ЗагрузитьКолонку(Новый Массив(Товары.Количество()), "ЗаписьСкладскогоЖурнала");
		Товары.ЗагрузитьКолонку(Новый Массив(Товары.Количество()), "ВетеринарноСопроводительныйДокумент");
		Товары.ЗагрузитьКолонку(Новый Массив(Товары.Количество()), "РезультатПроверкиПравилРегионализации");
		Товары.ЗагрузитьКолонку(Новый Массив(Товары.Количество()), "УсловияРегионализацииВыполнены");
		Товары.ЗагрузитьКолонку(Новый Массив(Товары.Количество()), "Цель");
	КонецЕсли;
	
	Если Маршрут.Количество() > 0 Тогда
		Маршрут.ЗагрузитьКолонку(Новый Массив(Маршрут.Количество()), "РезультатПроверкиПравилРегионализации");
		Маршрут.ЗагрузитьКолонку(Новый Массив(Маршрут.Количество()), "УсловияРегионализацииВыполнены");
	КонецЕсли;
	
	Регионализация.Очистить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
