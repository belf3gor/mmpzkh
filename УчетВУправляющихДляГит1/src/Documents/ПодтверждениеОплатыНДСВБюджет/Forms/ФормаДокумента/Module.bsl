
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	ТекущаяДатаДокумента = Объект.Дата;
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);

	УстановитьУсловноеОформление();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("СостояниеРегламентнойОперации",
		?(Объект.Проведен,
		ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено"),
		ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.НеВыполнено")));

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьСостояниеДокумента();

	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СоставПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ЗаполнитьЗаголовкиСтрок(Элементы.Состав.ТекущиеДанные);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоставЗаявлениеОВвозеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	ПараметрыСтроки = Новый Структура(
		"ЗаявлениеОВвозе,НомерСтроки,НомерОтметкиОРегистрации,ДатаОтметкиОРегистрации,
		|НомерДокументаОплаты,ДатаДокументаОплаты,НетАналогичныхДокументов");
	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, ТекущиеДанные, "ЗаявлениеОВвозе,НомерСтроки");
	
	РеквизитыОтметкиОРегистрации = ПолучитьРеквизитыОтметкиОРегистрации(Объект, ПараметрыСтроки);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, РеквизитыОтметкиОРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставНомерОтметкиОРегистрацииПриИзменении(Элемент)
	
	ПриИзмененииРеквизитовОтметкиОРегистрации();
	
КонецПроцедуры

&НаКлиенте
Процедура СоставДатаОтметкиОРегистрацииПриИзменении(Элемент)
	
	 ПриИзмененииРеквизитовОтметкиОРегистрации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЕстьДанные = Объект.Состав.Количество() > 0;
	
	Если ЕстьДанные Тогда
		Если Объект.Проведен Тогда
			ТекстВопроса = НСтр("ru='Перед заполнением проведение документа будет отменено, а табличная часть будет очищена. Заполнить?'");
		Иначе
			ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Заполнить?'");
		КонецЕсли;
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьДокументЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьДокументНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ЗаполнитьРеквизитыИзПараметровФормы();

	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// СоставНомерДокументаОплаты

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставНомерДокументаОплаты");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Меньше, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

	// СоставНомерОтметкиОРегистрации, СоставДатаОтметкиОРегистрации

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставНомерОтметкиОРегистрации");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставДатаОтметкиОРегистрации");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Дата", ВидСравненияКомпоновкиДанных.Меньше, '20160101');

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыИзПараметровФормы()
	
	ПараметрыЗаполненияФормы = Неопределено;
	
	Если Параметры.Свойство("ПараметрыЗаполненияФормы",ПараметрыЗаполненияФормы) Тогда
	
		ЗаполнитьЗначенияСвойств(Объект,ПараметрыЗаполненияФормы);
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументНаКлиенте()
	
	ЗаполнитьДокументНаСервере();
	
	Если Объект.Состав.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Заявления о ввозе с неподтвержденной оплатой не обнаружены.'");
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументНаСервере()

	Если Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
	Объект.Состав.Очистить();
	
	СтруктураПараметров = Новый Структура("Дата,Организация,Основание");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, Объект);
	
	ДанныеДляЗаполнения = Документы.ПодтверждениеОплатыНДСВБюджет.ПодготовитьДанныеДляЗаполнения(СтруктураПараметров);
	Объект.Состав.Загрузить(ДанныеДляЗаполнения);
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьДокументЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДокументНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()

	Для Каждого СтрокаТаблицы Из Объект.Состав Цикл
		ЗаполнитьДобавленныеКолонкиСтрокиТаблицыСостав(СтрокаТаблицы);
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтрокиТаблицыСостав(СтрокаТаблицы)
	
	ЗаполнитьЗаголовкиСтрок(СтрокаТаблицы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьЗаголовкиСтрок(СтрокаТаблицы)
	
	СтрокаТаблицы.НадписьНомер = НСтр("ru = 'Номер:'");
	СтрокаТаблицы.НадписьДата  = НСтр("ru = 'Дата:'");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизитовОтметкиОРегистрации()
	
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	ПараметрыСтроки = Новый Структура(
		"ЗаявлениеОВвозе,НомерСтроки,НомерОтметкиОРегистрации,ДатаОтметкиОРегистрации,НетАналогичныхДокументов");
	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, ТекущиеДанные);
	
	РеквизитыОтметкиОРегистрации = ПолучитьРеквизитыОтметкиОРегистрации(Объект, ПараметрыСтроки);
	
	Если РеквизитыОтметкиОРегистрации.НетАналогичныхДокументов Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.НомерОтметкиОРегистрации <> РеквизитыОтметкиОРегистрации.НомерОтметкиОРегистрации
		ИЛИ ТекущиеДанные.ДатаОтметкиОРегистрации <> РеквизитыОтметкиОРегистрации.ДатаОтметкиОРегистрации Тогда
		
		ИзменитьРеквизитыОтметкиОРегистрацииВТаблице(Объект, Элементы.Состав.ТекущиеДанные)
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьРеквизитыОтметкиОРегистрации(Объект, ПараметрыСтроки)

	ПараметрыСтроки.НетАналогичныхДокументов = Истина;
	СтруктураОтбора = Новый Структура("ЗаявлениеОВвозе", ПараметрыСтроки.ЗаявлениеОВвозе);
	МассивНайденныхСтрок = Объект.Состав.НайтиСтроки(СтруктураОтбора);
	
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
	
		Для Каждого СтрокаТаблицы Из МассивНайденныхСтрок Цикл
			
			Если СтрокаТаблицы.НомерСтроки <> ПараметрыСтроки.НомерСтроки Тогда
				ПараметрыСтроки.НетАналогичныхДокументов = Ложь;
				ЗаполнитьЗначенияСвойств(ПараметрыСтроки, СтрокаТаблицы, "НомерОтметкиОРегистрации,ДатаОтметкиОРегистрации");
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;

	Возврат ПараметрыСтроки;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьРеквизитыОтметкиОРегистрацииВТаблице(Объект, ТекущиеДанные)

	СтруктураОтбора = Новый Структура("ЗаявлениеОВвозе", ТекущиеДанные.ЗаявлениеОВвозе);
	МассивНайденныхСтрок = Объект.Состав.НайтиСтроки(СтруктураОтбора);

	Если МассивНайденныхСтрок.Количество() > 0 Тогда
	
		Для Каждого СтрокаТаблицы Из МассивНайденныхСтрок Цикл
			
			Если СтрокаТаблицы.НомерСтроки <> ТекущиеДанные.НомерСтроки Тогда
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ТекущиеДанные, "НомерОтметкиОРегистрации,ДатаОтметкиОРегистрации");
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти


