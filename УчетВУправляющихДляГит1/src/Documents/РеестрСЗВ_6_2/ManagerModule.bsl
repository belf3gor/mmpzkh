
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.РеестрСЗВ_6_2;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт 
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт
	Возврат ПерсонифицированныйУчет.ДокументыСЗВПолучитьСтруктуруПроверяемыхДанных();
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьПредставленияПроверяемыхРеквизитов();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	Возврат ПерсонифицированныйУчет.ДокументыСЗВПолучитьСоответствиеРеквизитовФормеОбъекта();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	
	СоответствиеРеквизитовПутиВФормеОбъекта = Новый Структура;
	
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СтраховойНомерПФР", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Фамилия", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Имя", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("АдресДляИнформирования", "");
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
	
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	Возврат Новый Структура;
КонецФункции

#Область ПроцедурыПолученияДанныхДляЗаполненияИПроведенияДокумента

Функция СформироватьЗапросПоЗаписямСтажаДляПечати(МассивСсылок) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформированияПредставление
	|ПОМЕСТИТЬ ВТСотрудникДокумента
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерСтроки КАК НомерСтрокиСтаж,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформированияПредставление
	|ИЗ
	|	ВТСотрудникДокумента КАК РеестрСЗВ_6_2Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО РеестрСЗВ_6_2Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И РеестрСЗВ_6_2Сотрудники.Ссылка = ЗаписиОСтаже.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтрокиСотрудник,
	|	НомерСтрокиСтаж";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(МассивСсылок)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки КАК НомерСтроки,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоШапкеДляПечати(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.РеестрСЗВ_6_2";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = МассивСсылок;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2.Организация КАК Организация,
	|	СведенияОбОрганизациях.ИНН КАК ИНН,
	|	СведенияОбОрганизациях.КПП КАК КПП,
	|	СведенияОбОрганизациях.КодПоОКПО КАК КодПоОКПО,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ОкончаниеОтчетногоПериода,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	РеестрСЗВ_6_2.КорректируемыйПериод,
	|	РеестрСЗВ_6_2.Руководитель КАК Руководитель,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя.Наименование КАК ДолжностьРуководителя,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.НомерПачки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеестрСЗВ_6_2Сотрудники.Сотрудник) КАК КоличествоЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|		ПО РеестрСЗВ_6_2Сотрудники.Ссылка = РеестрСЗВ_6_2.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО (РеестрСЗВ_6_2.Организация = СведенияОбОрганизациях.Организация)
	|			И (РеестрСЗВ_6_2.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период)
	|ГДЕ
	|	РеестрСЗВ_6_2.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеестрСЗВ_6_2.Ссылка,
	|	РеестрСЗВ_6_2.Организация,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	РеестрСЗВ_6_2.КорректируемыйПериод,
	|	РеестрСЗВ_6_2.Руководитель,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя.Наименование,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.НомерПачки,
	|	РеестрСЗВ_6_2.ОкончаниеОтчетногоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Руководитель";
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка КАК Ссылка,
	|	РеестрСЗВ_6_2.РегистрационныйНомерПФР КАК РегНомерПФР,
	|	РеестрСЗВ_6_2.ИНН КАК ИНН,
	|	РеестрСЗВ_6_2.КПП КАК КПП,
	|	РеестрСЗВ_6_2.КодПоОКПО КАК ОКПО,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	РеестрСЗВ_6_2.КорректируемыйПериод,
	|	ЕСТЬNULL(ВТФИОПоследние.РасшифровкаПодписи, """") КАК Руководитель,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.НомерПачки,
	|	Организации.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	РеестрСЗВ_6_2.КоличествоЗастрахованныхЛиц
	|ИЗ
	|	ВТДанныеДокументов КАК РеестрСЗВ_6_2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОПоследние
	|		ПО РеестрСЗВ_6_2.Ссылка = ВТФИОПоследние.Ссылка
	|			И РеестрСЗВ_6_2.Руководитель = ВТФИОПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО РеестрСЗВ_6_2.Организация = Организации.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
КонецФункции

#КонецОбласти

#Область ДляОбеспеченияФормированияВыходногоФайла

Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа, КоличествоДокументов)
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ДатаЗаполнения 			= ВыборкаПоШапкеДокумента.Дата;
	ТипФормДокументов		= ВыборкаПоШапкеДокумента.ТипФормДокументов;
	НомерПачки				= ВыборкаПоШапкеДокумента.НомерПачки;

	// Список стран
	СписокСтран = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтраныМира.Наименование,
	|	СтраныМира.Код
	|ИЗ
	|	Справочник.СтраныМира КАК СтраныМира";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСтран.Вставить(СокрЛП(Выборка.Наименование), Строка(Выборка.Код));
	КонецЦикла;
	
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СТРАХОВЫХ_ВЗНОСАХ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись.
	НаборЗаписейВходящаяОпись = "";
	УзелПачкаВходящихДокументов = ПерсонифицированныйУчет.ЗаполнитьНаборЗаписейВходящаяОписьСЗВ6(УзелПФР, ДеревоФормата, ТипДокументовПачки, ВыборкаПоШапкеДокумента, КоличествоДокументов, 1, ,НаборЗаписейВходящаяОпись);
	
	ДанныеВходящейОписи = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейВходящаяОпись);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ",""), НаборЗаписейВходящаяОпись);
	
	ФорматСЗВ6 = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_6");
	
	Если ТипФормДокументов = "СЗВ-6-2" Тогда
		ФорматСЗВ6.СтажевыйПериод.Значение.Удалить("КоличествоЛьготныхСоставляющих");
		ФорматСЗВ6.СтажевыйПериод.Значение.Удалить("ЛьготныйСтаж");
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ФорматСЗВ6.Удалить("КорректируемыйОтчетныйПериод");
	ИначеЕсли ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
		ФорматСЗВ6.Удалить("СтажевыйПериод");
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	ФорматИностранныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 3);
	ФорматНеструктурированныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 2);
	
	НомерДокументаВПачке = 1;
	ВыборкаПоСотрудникам	= РезультатЗапросаПоЗаписямСтажа.Выбрать();
	Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерСтрокиСотрудник")	Цикл
		
		НаборЗаписейСЗВ6 = ФорматСЗВ6;
		
		// Общие данные пачки - берем их из описи.
		НаборЗаписейСЗВ6.ВидФормы.Значение = ВыборкаПоШапкеДокумента.ТипФормДокументов;
		НаборЗаписейСЗВ6.ТипСведений.Значение = ДанныеВходящейОписи.ТипСведений.Значение;
		НаборЗаписейСЗВ6.РегистрационныйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		НаборЗаписейСЗВ6.НаименованиеКраткое.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.НалоговыйНомер.Значение, ДанныеВходящейОписи.СоставительПачки.Значение.НалоговыйНомер.Значение);
		НаборЗаписейСЗВ6.КодКатегории.Значение = ДанныеВходящейОписи.КодКатегории.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.ОтчетныйПериод.Значение,ДанныеВходящейОписи.ОтчетныйПериод.Значение);
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.КорректируемыйОтчетныйПериод.Значение,ДанныеВходящейОписи.КорректируемыйОтчетныйПериод.Значение);
		КонецЕсли;
		НаборЗаписейСЗВ6.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоСотрудникам.Фамилия);
		Имя = СокрЛП(ВыборкаПоСотрудникам.Имя);
		Отчество = СокрЛП(ВыборкаПоСотрудникам.Отчество);
		
		НаборЗаписейСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейСЗВ6.СтраховойНомер.Значение = ВыборкаПоСотрудникам.СтраховойНомерПФР;
		НаборЗаписейФИО = НаборЗаписейСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
		
		// Заполняем адрес застрахованного лица, если он есть.
		Если СокрЛП(СтрЗаменить(ВыборкаПоСотрудникам.АдресДляИнформирования, ",","")) <> "" Тогда
			АдресДляИнформирования = ВыборкаПоСотрудникам.АдресДляИнформирования;
		Иначе	
			АдресДляИнформирования = "";
		КонецЕсли; 
		Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.АдресДляИнформирования) И Не ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			НаборЗаписейАдресЗЛ = НаборЗаписейСЗВ6.АдресЗЛ.Значение;
			ПерсонифицированныйУчет.ЗаполнитьАдрес(НаборЗаписейАдресЗЛ, ВыборкаПоСотрудникам.АдресДляИнформирования, СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес);
		Иначе
			НаборЗаписейСЗВ6.АдресЗЛ.НеВыводитьВФайл = Истина;
		КонецЕсли;
		
		// Заполнение отменяющей формы завершено.
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			УзелСЗВ61 = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ61, НаборЗаписейСЗВ6);
			Продолжить;
		КонецЕсли;
		
		ПерсонифицированныйУчет.ВписатьВзносыВНаборДанных(НаборЗаписейСЗВ6, ВыборкаПоСотрудникам.НачисленоСтраховая, ВыборкаПоСотрудникам.УплаченоСтраховая, ВыборкаПоСотрудникам.НачисленоНакопительная, ВыборкаПоСотрудникам.УплаченоНакопительная);
		
		// Выводим стаж
		
		ФорматСтажевыйПериод = НаборЗаписейСЗВ6.СтажевыйПериод.Значение;
		НаборЗаписейСЗВ6.СтажевыйПериод.НеВыводитьВФайл = Истина; 
		
		УзелСЗВ61 = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ61, НаборЗаписейСЗВ6);
		
		ЧислоОсновныхЗаписейОСтаже = 0;
		СотрудникОрганизацииИмеетЛьготныйСтаж = Ложь;
		
		НомерСтроки = 0;
		Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерСтрокиСтаж") Цикл
			
			Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.ДатаНачалаПериода) И ЗначениеЗаполнено(ВыборкаПоСотрудникам.ДатаОкончанияПериода) Тогда
				НомерСтроки = НомерСтроки + 1;
				
				ФорматСтажевыйПериод.НомерСтроки.Значение = НомерСтроки;
				ФорматСтажевыйПериод.ДатаНачалаПериода.Значение = ВыборкаПоСотрудникам.ДатаНачалаПериода;
				ФорматСтажевыйПериод.ДатаКонцаПериода.Значение = ВыборкаПоСотрудникам.ДатаОкончанияПериода;
				
				УзелСтажевыйПериод = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСЗВ61, "СтажевыйПериод","");
				ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСтажевыйПериод, ФорматСтажевыйПериод);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
		
	// Преобразуем дерево в строковое описание XML.
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	Возврат ТекстФайла;
	
КонецФункции

// Формирует запрос по шапке документа.
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.РеестрСЗВ_6_2";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка,
	|	РеестрСЗВ_6_2.Номер,
	|	РеестрСЗВ_6_2.Дата,
	|	РеестрСЗВ_6_2.Проведен,
	|	РеестрСЗВ_6_2.Организация,
	|	РеестрСЗВ_6_2.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2.ОтчетныйПериод,
	|	РеестрСЗВ_6_2.ТипСведенийСЗВ,
	|	ВЫБОР
	|		КОГДА РеестрСЗВ_6_2.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ РеестрСЗВ_6_2.КорректируемыйПериод
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	РеестрСЗВ_6_2.НомерПачки,
	|	РеестрСЗВ_6_2.ДокументПринятВПФР,
	|	РеестрСЗВ_6_2.Ответственный,
	|	РеестрСЗВ_6_2.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОбОрганизациях.Наименование,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	СведенияОбОрганизациях.ОГРН,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	СведенияОбОрганизациях.НаименованиеПолное,
	|	СведенияОбОрганизациях.НаименованиеСокращенное,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	СведенияОбОрганизациях.РайонныйКоэффициент,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ГОД(РеестрСЗВ_6_2.ОтчетныйПериод) КАК Год,
	|	СведенияОбОрганизациях.КодПоОКПО КАК ОКПО,
	|	""СЗВ-6-2"" КАК ТипФормДокументов,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	РеестрСЗВ_6_2.ИмяФайлаДляПФР
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО РеестрСЗВ_6_2.Организация = СведенияОбОрганизациях.Организация
	|			И РеестрСЗВ_6_2.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО (ИСТИНА)
	|ГДЕ
	|	РеестрСЗВ_6_2.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоЗаписямСтажа(Ссылка) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.НомерСтроки КАК НомерСтрокиСотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.НомерСтроки КАК НомерСтрокиСтаж,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	РеестрСЗВ_6_2Сотрудники.НомерСтрокиСотрудник,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования,
	|	РеестрСЗВ_6_2Сотрудники.СтраховойНомерПФР,
	|	РеестрСЗВ_6_2Сотрудники.Фамилия,
	|	РеестрСЗВ_6_2Сотрудники.Имя,
	|	РеестрСЗВ_6_2Сотрудники.Отчество,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.ДоначисленоНакопительная
	|ИЗ
	|	ВТСотрудникиДокумента КАК РеестрСЗВ_6_2Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.ЗаписиОСтаже КАК ЗаписиОСтаже
	|		ПО РеестрСЗВ_6_2Сотрудники.Сотрудник = ЗаписиОСтаже.Сотрудник
	|			И (ЗаписиОСтаже.Ссылка = &Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеестрСЗВ_6_2Сотрудники.НомерСтрокиСотрудник,
	|	НомерСтрокиСтаж";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Объект.Ссылка).Выбрать();
	РезультатЗапросаПоЗаписямСтажа = СформироватьЗапросПоЗаписямСтажа(Объект.Ссылка);
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа, ВыборкаПоШапкеДокумента.Количество);
	
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// СЗВ-6-2
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_6_2";
	КомандаПечати.Представление = НСтр("ru = 'СЗВ-6-2'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Список застрахованных лиц
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "СписокЗастрахованныхЛиц";
	КомандаПечати.Представление = НСтр("ru = 'Список застрахованных лиц'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Все формы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_6_2,СписокЗастрахованныхЛиц";
	КомандаПечати.Представление = НСтр("ru = 'Все формы'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСЗВ_6_2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаСЗВ_6_2", "Форма СЗВ-6-2", СформироватьПечатнуюФормуСЗВ_6_2(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокЗастрахованныхЛиц") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписокЗастрахованныхЛиц", "Список застрахованных лиц", СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ТабличныеДокументыФормСЗВ_6_2(МассивОбъектов, ОбъектыПечати = Неопределено, ДатаПодписи = Неопределено) Экспорт
	Результаты = Новый Массив;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеестрСЗВ_6_2.ПФ_MXL_ФормаСЗВ_6_2");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаЗаписейСтажа = СформироватьЗапросПоЗаписямСтажаДляПечати(МассивОбъектов).Выбрать();
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ТабличныйДокумент = Новый ТабличныйДокумент;
	
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСЗВ_6_2_Форма_СЗВ_6_2";
		
		Справочники.КомплектыОтчетностиПерсучета.ДобавитьТабличныйДокументВКоллекциюПечатаемыхОбъектов(Результаты, ТабличныйДокумент, ВыборкаДокументов);
		
		ИтогУплаченоНакопительная = 0;
		ИтогУплаченоСтраховая = 0;
		ИтогНачисленоНакопительная = 0;
		ИтогНачисленоСтраховая = 0;
		
		ВыборкаЗаписейСтажа.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		Если ВыборкаЗаписейСтажа.НайтиСледующий(СтруктураПоиска) Тогда 
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ВыборкаДокументов, "РегНомерПФР, ИНН, КПП, ОКПО");
			
			ОбластьШапка.Параметры.НаименованиеОрганизации = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганизации);
			
			ОбластьШапка.Параметры.КодКатегории = ПерсонифицированныйУчет.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаДокументов.КатегорияЗастрахованныхЛиц);
			
			ОтчетныйПериод = ВыборкаДокументов.ОтчетныйПериод;
			КорректируемыйПериод = ВыборкаДокументов.КорректируемыйПериод;
			
			Если Год(ОтчетныйПериод) >= 2011 Тогда
				ОбластьШапка.Параметры.ЭтоКварталОтчетногоГода   = Месяц(ОтчетныйПериод) = 1;
				ОбластьШапка.Параметры.ЭтоПолугодиеОтчетногоГода = Месяц(ОтчетныйПериод) = 4;
				ОбластьШапка.Параметры.Это9МесяцевОтчетногоГода  = Месяц(ОтчетныйПериод) = 7;
				ОбластьШапка.Параметры.ЭтоВесьОтчетныйГод        = Месяц(ОтчетныйПериод) = 10;
			Иначе
				ОбластьШапка.Параметры.ЭтоПолугодие2010 = Месяц(ОтчетныйПериод) = 1;
				ОбластьШапка.Параметры.Это2010год = Месяц(ОтчетныйПериод) = 7;
			КонецЕсли;
			
			ОбластьШапка.Параметры.ОтчетныйГод = Формат(Год(ОтчетныйПериод), "ЧГ=");
			
			Если ВыборкаДокументов.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда 
				Если Год(КорректируемыйПериод) >= 2011 Тогда 
					ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода   = Месяц(КорректируемыйПериод) = 1;
					ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 4;
					ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода  = Месяц(КорректируемыйПериод) = 7;
					ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 10;
				Иначе
					ОбластьШапка.Параметры.ЭтоПолугодиеКорректируемогоГода = Месяц(КорректируемыйПериод) = 1;	
					ОбластьШапка.Параметры.ЭтоВесьКорректируемыйГод        = Месяц(КорректируемыйПериод) = 7;
					
					ОбластьШапка.Параметры.ЭтоКварталКорректируемогоГода = Ложь;
					ОбластьШапка.Параметры.Это9МесяцевКорректируемогоГода = Ложь
				КонецЕсли;	
				
				ОбластьШапка.Параметры.ЭтоКорректирующийДокумент = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
				ОбластьШапка.Параметры.ЭтоОтменяющийДокумент     = ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ;
				
				ОбластьШапка.Параметры.КорректируемыйГод = Формат(Год(КорректируемыйПериод), "ЧГ=");
			Иначе
				ОбластьШапка.Параметры.ЭтоИсходныйДокумент = Истина;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ОбластьШапка.Параметры.Количество = Формат(ВыборкаДокументов.КоличествоЗастрахованныхЛиц, "ЧГ=0");
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			Если ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("Ссылка") Тогда 
				
				КоличествоЗастрахованыхЛиц = 0;
				Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтрокиСотрудник") Цикл
					ИтогНачисленоНакопительная = ИтогНачисленоНакопительная + ВыборкаЗаписейСтажа.НачисленоНакопительная;
					ИтогНачисленоСтраховая = ИтогНачисленоСтраховая + ВыборкаЗаписейСтажа.НачисленоСтраховая;
					ИтогУплаченоНакопительная = ИтогУплаченоНакопительная + ВыборкаЗаписейСтажа.УплаченоНакопительная;
					ИтогУплаченоСтраховая = ИтогУплаченоСтраховая + ВыборкаЗаписейСтажа.УплаченоСтраховая;
					
					КоличествоЗастрахованыхЛиц = КоличествоЗастрахованыхЛиц + 1;
					Если ЗначениеЗаполнено(ВыборкаЗаписейСтажа.НомерСтрокиСтаж) Тогда
					
						НомерСтроки = 0;
						Пока ВыборкаЗаписейСтажа.СледующийПоЗначениюПоля("НомерСтрокиСтаж") Цикл
							НомерСтроки = НомерСтроки + 1;
							
							Если НомерСтроки = 1 Тогда
								ОбластьСтрока.Параметры.НомерСтроки = ВыборкаЗаписейСтажа.НомерСтрокиСотрудник;
								ОбластьСтрока.Параметры.ФИО = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия + " " + ВыборкаЗаписейСтажа.Имя + " " + ВыборкаЗаписейСтажа.Отчество);
								ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
								ОбластьСтрока.Параметры.Адрес             = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаЗаписейСтажа.АдресДляИнформированияПредставление);
								
								ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
								ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
								ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
								ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;	
							Иначе 
								ОбластьСтрока.Параметры.НомерСтроки = "";
								ОбластьСтрока.Параметры.ФИО = "";
								ОбластьСтрока.Параметры.СтраховойНомерПФР = "";
								ОбластьСтрока.Параметры.Адрес             = "";
								
								ОбластьСтрока.Параметры.НачисленоНакопительная = 0;
								ОбластьСтрока.Параметры.УплаченоНакопительная  = 0;
								ОбластьСтрока.Параметры.НачисленоСтраховая     = 0;
								ОбластьСтрока.Параметры.УплаченоСтраховая      = 0;
							КонецЕсли;
							
							Если ВыборкаДокументов.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
								ОбластьСтрока.Параметры.ДатаНачалаПериода = '00010101';
								ОбластьСтрока.Параметры.ДатаОкончанияПериода = '00010101';
							Иначе	
								ОбластьСтрока.Параметры.ДатаНачалаПериода = ВыборкаЗаписейСтажа.ДатаНачалаПериода;
								ОбластьСтрока.Параметры.ДатаОкончанияПериода = ВыборкаЗаписейСтажа.ДатаОкончанияПериода;
							КонецЕсли;
							
							Если НомерСтроки = 1 
								Или ВыборкаДокументов.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
								
								ТабличныйДокумент.Вывести(ОбластьСтрока);
							КонецЕсли;
						КонецЦикла;
					Иначе
						ОбластьСтрока.Параметры.НомерСтроки = ВыборкаЗаписейСтажа.НомерСтрокиСотрудник;
						ОбластьСтрока.Параметры.ФИО = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаЗаписейСтажа.Фамилия + " " + ВыборкаЗаписейСтажа.Имя + " " + ВыборкаЗаписейСтажа.Отчество);
						ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаЗаписейСтажа.СтраховойНомерПФР;
						ОбластьСтрока.Параметры.Адрес             = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаЗаписейСтажа.АдресДляИнформированияПредставление);
						
						ОбластьСтрока.Параметры.НачисленоНакопительная = ВыборкаЗаписейСтажа.НачисленоНакопительная;
						ОбластьСтрока.Параметры.УплаченоНакопительная  = ВыборкаЗаписейСтажа.УплаченоНакопительная;
						ОбластьСтрока.Параметры.НачисленоСтраховая     = ВыборкаЗаписейСтажа.НачисленоСтраховая;
						ОбластьСтрока.Параметры.УплаченоСтраховая      = ВыборкаЗаписейСтажа.УплаченоСтраховая;
						ОбластьСтрока.Параметры.ДатаНачалаПериода = "";
						ОбластьСтрока.Параметры.ДатаОкончанияПериода = "";
						
						ТабличныйДокумент.Вывести(ОбластьСтрока);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ОбластьПодвал.Параметры.НачисленоСтраховая = ИтогНачисленоСтраховая;
			ОбластьПодвал.Параметры.УплаченоСтраховая = ИтогУплаченоСтраховая;
			ОбластьПодвал.Параметры.НачисленоНакопительная = ИтогНачисленоНакопительная;
			ОбластьПодвал.Параметры.УплаченоНакопительная = ИтогУплаченоНакопительная;
			ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
			ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
			
			Если ЗначениеЗаполнено(ДатаПодписи) Тогда
				ОбластьПодвал.Параметры.ДатаСоставленияОписи = 	ПерсонифицированныйУчет.ДатаВОтчет(ДатаПодписи);	
			Иначе							
				ОбластьПодвал.Параметры.ДатаСоставленияОписи  = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаДокументов.Дата);
			КонецЕсли;	
			
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			Если ОбъектыПечати <> Неопределено Тогда
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
			КонецЕсли;	

		КонецЕсли;
	КонецЦикла;
		
	Возврат Результаты;
	
КонецФункции	

Функция СформироватьПечатнуюФормуСЗВ_6_2(МассивОбъектов, ОбъектыПечати) Экспорт
	ТабличныеДокументы = ТабличныеДокументыФормСЗВ_6_2(МассивОбъектов, ОбъектыПечати);	
	
	ТабличныйДокумент = Справочники.КомплектыОтчетностиПерсучета.ОбъединитьТабличныеДокументы(ТабличныеДокументы);	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабличныйДокумент;

КонецФункции

Функция СформироватьПечатнуюФормуСписокЗастрахованныхЛиц(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСЗВ_6_2_СписокЗастрахованныхЛиц";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеестрСЗВ_6_2.ПФ_MXL_СписокЗастрахованныхЛиц");
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьПовторятьПриПечати   = Макет.ПолучитьОбласть("ПовторятьПриПечати");
	
	ВыборкаДокументов = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаПоЗЛ = СформироватьЗапросПоСпискуЗастрахованныхЛицДляПечати(МассивОбъектов).Выбрать();
	
	Пока ВыборкаДокументов.СледующийПоЗначениюПоля("Ссылка") Цикл
		ВыборкаПоЗЛ.Сбросить();
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		
		ОбластьШапка.Параметры.РегистрационныйНомерПФР = ВыборкаДокументов.РегНомерПФР;
		ОбластьШапка.Параметры.НаименованиеСокращенное = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаДокументов.НаименованиеОрганизации);
		ОбластьШапка.Параметры.РасчетныйПериод = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ВыборкаДокументов.ОтчетныйПериод);
		ОбластьШапка.Параметры.НомерПачкиРаботодателя = ВыборкаДокументов.НомерПачки;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Если ВыборкаПоЗЛ.НайтиСледующий(СтруктураПоиска) Тогда
			 Если ВыборкаПоЗЛ.СледующийПоЗначениюПоля("Ссылка") Тогда
				Пока ВыборкаПоЗЛ.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					ОбластьСтрока.Параметры.НомерСтроки = ВыборкаПоЗЛ.НомерСтроки;
					ОбластьСтрока.Параметры.СтраховойНомерПФР = ВыборкаПоЗЛ.СтраховойНомерПФР;
					ОбластьСтрока.Параметры.ФИО = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаПоЗЛ.Фамилия + " " + ВыборкаПоЗЛ.Имя + " " + ВыборкаПоЗЛ.Отчество);
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		ОбластьПодвал.Параметры.Руководитель = ВыборкаДокументов.Руководитель;
		ОбластьПодвал.Параметры.РуководительДолжность = ВыборкаДокументов.ДолжностьРуководителя;
		ОбластьПодвал.Параметры.ДатаСоставленияОписи  = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаДокументов.Дата);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли