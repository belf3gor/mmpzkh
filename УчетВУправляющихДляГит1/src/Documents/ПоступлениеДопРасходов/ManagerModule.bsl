#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 8, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет предъявлена ли сумма НДС по документу
//
// Параметры:
// ТекущийДокумент - документ, сумму НДС которого нужно вычислить
//
// Возвращаемое значение:
// Булево - если сумма НДС в документе не нулевая
Функция НаличиеСуммыНДС(ТекущийДокумент) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ПоступлениеДопРасходов.СуммаНДС) КАК СуммаНДС,
	|	ПоступлениеДопРасходов.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка = &СсылкаНаДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходов.Ссылка";

	Запрос.УстановитьПараметр("СсылкаНаДокумент", ТекущийДокумент);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.СуммаНДС > 0;
	КонецЕсли;

	Возврат Ложь;
	
КонецФункции


#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "РасчетыСПоставщиком");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаРасчетовПоАвансам", "АвансыПоставщику");
	
	// Табличная часть Товары
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",      "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура",      "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДокументОснование", "ДокументПартии");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаНУ",    "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание",         "СчетУчета");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура",      "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДокументОснование", "ДокументПартии");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "ПлательщикНалогаНаПрибыль");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СтатьяЗатратНУ", "СтатьяЗатрат");
	
	// Правила про НДС дублируются, так как необходимость проверки заполнения зависит от двух реквизитов
	// - суммы НДС в шапке документа
	// - суммы НДС в табличной части.
	// Если хотя бы одна сумма есть, то проверять заполнение надо.
	// Поэтому
	// - первый набор правил работает тогда, когда сумма НДС задана в шапке.
	//   Этот набор правил не проверяет сумму в табличной части.
	// - второй работает тогда, когда сумма НДС не задана в шапке.
	//   Он проверяет сумму в табличной части.
	// Счет учета НДС с поступления доп.расходов не определяется номенклатурой на которую услуи распределяются
	// В этом случае Номенклатура не будет являться источником заполнения для счета учета НДС
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаНДС",   "ПредъявленныйНДС_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВШапкеУказанаСуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВШапкеУказанаСуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаНДС",   "ПредъявленныйНДС_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ВШапкеУказанаСуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",     "СуммаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ВШапкеУказанаСуммаНДС");
	
	// Общие реквизиты документа
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "СпособЗачетаАвансов");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "НДСВключенВСтоимость");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ВШапкеУказанаСуммаНДС", "СуммаНДС");
	
КонецПроцедуры

Процедура ДополнитьДанныеЗаполненияСчетовУчета(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("ВШапкеУказанаСуммаНДС") Тогда
		ДанныеЗаполнения.ВШапкеУказанаСуммаНДС = ЗначениеЗаполнено(ДанныеЗаполнения.СуммаНДС);
	КонецЕсли;
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьРеквизитыПриИзменении(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
// Параметры:
//  Объект		- ДокументОбъект
//  СчетаУчета	- оставлен для совместимости; не используется
Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, СчетаУчета = Неопределено) Экспорт
	
	ИменаРеквизитов = Новый Соответствие;
	ИменаРеквизитов.Вставить("СчетУчетаРасчетовСКонтрагентом", Истина);
	ИменаРеквизитов.Вставить("СчетУчетаРасчетовПоАвансам",     Истина);
	
	СчетаУчетаВДокументах.ЗаполнитьРеквизиты(Объект, ИменаРеквизитов);
	
КонецПроцедуры

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВТабличнойЧасти(
		Объект,
		ИмяТабличнойЧасти);

КонецПроцедуры

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  Объект                - ДокументОбъект или соответствующие данные формы
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - оставлен для совместимости; не используется
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре = Неопределено) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
		Объект,
		СтрокаТабличнойЧасти,
		ИмяТабличнойЧасти);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Функция РеквизитыЗаСсылками() Экспорт
	
	РеквизитыЗаСсылками = Новый Соответствие;
	
	// Прячутся за "ПорядокУчетаРасчетов"
	Для Каждого ОписаниеРеквизита Из УчетВзаиморасчетовФормы.РеквизитыДокументаПорядокУчетаРасчетов() Цикл
		РеквизитыЗаСсылками.Вставить(ОписаниеРеквизита.Ключ, "ПорядокУчетаРасчетов");
	КонецЦикла;
	
	Возврат РеквизитыЗаСсылками;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты",	       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",					       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СуммаДопРасходовТабЧастиТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",	       НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяПостановлениеНДС1137
	|				И Реквизиты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку)
	|			ТОГДА ВЫРАЗИТЬ(&СчетФактура КАК Документ.СчетФактураПолученный).Продавец
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ВременнаяТаблицаРеквизиты
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реквизиты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	&ПустоеПодразделение КАК Подразделение,
	|	"""" КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Поставщик,
	|	Реквизиты.Контрагент.ИНН КАК ИННпоставщика,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Организация.ИНН КАК ИННпокупателя,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом,
	|	"""" КАК Исполнитель,
	|	"""" КАК ИсполнительНаОсновании,
	|	"""" КАК ОтпускПроизвел,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК ЗаЗаказчикаНаОсновании
	|ИЗ
	|	ВременнаяТаблицаРеквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТаблицаТовары.Сумма) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего) КАК Всего,
	|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС) КАК НДС,
	|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС) КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|	И РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	1 КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Содержание ПОДОБНО """"
	|			ТОГДА ""Доп. расходы""
	|		ИНАЧЕ ТаблицаДокумента.Содержание
	|	КОНЕЦ КАК Товар,
	|	НЕОПРЕДЕЛЕНО КАК ТоварКод,
	|	НЕОПРЕДЕЛЕНО КАК ТоварАртикул,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Содержание ПОДОБНО """"
	|			ТОГДА ""Доп. расходы""
	|		ИНАЧЕ ТаблицаДокумента.Содержание
	|	КОНЕЦ КАК ТоварНаименование,
	|	NULL КАК СтранаПроисхождения,
	|	NULL КАК ПредставлениеСтраны,
	|	NULL КАК НомерГТД,
	|	NULL КАК ПредставлениеГТД,
	|	NULL КАК РегистрационныйНомерТД,
	|	NULL КАК ЕдиницаИзмерения,
	|	1 КАК Количество,
	|	ТаблицаДокумента.Сумма + ЕСТЬNULL(ТаблицаТовары.Сумма, 0) КАК Цена,
	|	ТаблицаДокумента.Сумма + ЕСТЬNULL(ТаблицаТовары.Сумма, 0) КАК Сумма,
	|	ТаблицаДокумента.СуммаНДС + ЕСТЬNULL(ТаблицаТовары.СуммаНДС, 0) КАК СуммаНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ТаблицаДокумента,
	|	ТаблицаТовары КАК ТаблицаТовары,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументОснование";
		
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СвойстваСчетаНУ(СчетУчетаНУ) Экспорт

	Результат = Новый Структура;
	Результат.Вставить("СтатьяЗатратНУДоступность", Ложь);
	Результат.Вставить("СтатьяЗатратНУТипЗначения", Неопределено);
	
	Если ЗначениеЗаполнено(СчетУчетаНУ) Тогда
		
		ЕстьСтатьяЗатрат = Ложь;
		
		ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетУчетаНУ);
		Для НомерСубконто = 1 По ДанныеСчета.КоличествоСубконто Цикл
			Если ДанныеСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"].Типы()[0] = Тип("СправочникСсылка.СтатьиЗатрат")
				Или ДанныеСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"].Типы()[0] = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
				ЕстьСтатьяЗатрат = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьСтатьяЗатрат Тогда
			
			Результат.Вставить("СтатьяЗатратНУДоступность", Истина);
			Результат.Вставить("СтатьяЗатратНУТипЗначения", ДанныеСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"]);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	МассивРеквизитов.Добавить("УдалитьСделка");
	МассивРеквизитов.Добавить("УдалитьПредъявленСчетФактура");
	МассивРеквизитов.Добавить("УдалитьНомерВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьДатаВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьНДСПредъявленКВычету");
	МассивРеквизитов.Добавить("УдалитьКодВидаОперации");
	МассивРеквизитов.Добавить("УдалитьКодСпособаПолучения");
	
	Возврат МассивРеквизитов;
	
КонецФункции

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ, ДоговорДляОтложенногоПроведения = Неопределено) Экспорт

	ПараметрыПроведения = Новый Структура;

	ЭтоОтложенноеПроведение = ЗначениеЗаполнено(ДоговорДляОтложенногоПроведения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);

	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;

	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("РасчетыВВалюте",  Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета);
	Реквизиты.Вставить("ЭтоОтложенноеПроведение", ЭтоОтложенноеПроведение);

	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц);
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;    

	Запрос.УстановитьПараметр("СинонимТовары",	 НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("РасчетыВВалюте",	 Реквизиты.РасчетыВВалюте);
	
	Реквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы",	
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПлательщикНДФЛ", 
		УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходыМинусРасходы", 	Реквизиты.ПрименяетсяУСНДоходыМинусРасходы);
	Запрос.УстановитьПараметр("ПлательщикНДФЛ",					  	Реквизиты.ПлательщикНДФЛ);
	
	Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП",		
		УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа",		
		УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("Субсчета10",	
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));

	Если ЗначениеЗаполнено(Реквизиты.Содержание) Тогда
		Запрос.УстановитьПараметр("СодержаниеДопРасходы",	Реквизиты.Содержание);
	Иначе
		Запрос.УстановитьПараметр("СодержаниеДопРасходы",	"Доп. расходы");
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаТаблицаДопРасходы(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	// Для целей зачета авансов распределяем доп.расходы из шапки по таблице 
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		ПараметрыПроведения.ЗачетАвансовРеквизиты.Итог("СуммаВзаиморасчетов"),
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		"СуммаВзаиморасчетов", 
		"СуммаТовара");
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		ПараметрыПроведения.ЗачетАвансовРеквизиты.Итог("СуммаРуб"),
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		"СуммаРуб", 
		"СуммаТовара");
	Для каждого СтрокаТаблицы Из ПараметрыПроведения.ЗачетАвансовТаблицаДокумента Цикл
		СтрокаТаблицы.СуммаВзаиморасчетов = СтрокаТаблицы.СуммаВзаиморасчетов + СтрокаТаблицы.СуммаВзаиморасчетовСтроки;
		СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаРуб + СтрокаТаблицы.СуммаРубСтроки;
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

// Подготоваливает необходимые таблицы для счет фактуры полученный.
// Данные таблиц необходимы для формирования движений по регистру НДС Предъявленный.
//
// Параметры:
// ТекущийДокумент - документ по которому нужно получить движения
// Отказ - флаг отказа.
//
// Возвращаемое значение:
// Структура - содержатся таблицы по документу.
Функция ПодготовитьПараметрыПроведенияДляСчетФактуры(ТекущийДокумент, Отказ = Ложь) Экспорт

	ПараметрыПроведения = Документы.ПоступлениеДопРасходов.ПодготовитьПараметрыПроведения(ТекущийДокумент, Отказ);
	
	// Таблица взаиморасчетов
	ТаблицаВзаиморасчетов = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ЗачетАвансовТаблицаАвансов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты, Отказ);

	// Распределение суммы доп.расхода:
	ДопРасходыТаблица = Документы.ПоступлениеДопРасходов.РаспределениеСуммыДопРасходов(
		ПараметрыПроведения.ДопРасходыРеквизиты,
		ПараметрыПроведения.ДопРасходыТаблица);
	ТаблицаРасходовУСН = Документы.ПоступлениеДопРасходов.РаспределениеСуммыДопРасходовУСН(
		ПараметрыПроведения.ДопРасходыРеквизиты,
		ПараметрыПроведения.ПоступлениеРасходовУСНТаблицаРасходов);

	СтруктураТаблицДокумента = Новый Структура;
	СтруктураТаблицДокумента.Вставить("ТаблицаТовары", ДопРасходыТаблица);
	
	// Таблицы документа с корректировкой сумм по курсу авансов
	СтруктураТаблицДокумента = УчетДоходовРасходов.ПодготовитьТаблицыПоступленияПоКурсуАвансов(
		СтруктураТаблицДокумента,
		ТаблицаВзаиморасчетов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты);

	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);
	ПараметрыПроведения.Вставить("ТаблицаВзаиморасчетов",    ТаблицаВзаиморасчетов);
	ПараметрыПроведения.Вставить("ТаблицаРасходовУСН",       ТаблицаРасходовУСН);
	
	Возврат ПараметрыПроведения;
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", 		 НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", 		 				 НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Номер,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭлектронныеУслуги,
	|	Реквизиты.ДоговорКонтрагента.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.Содержание,
	|	Реквизиты.Сумма,
	|	Реквизиты.СуммаНДС,
	|	Реквизиты.СтавкаНДС,
	|	Реквизиты.СпособРаспределения,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СпособЗачетаАвансов
	|ПОМЕСТИТЬ ТаблицаРеквизиты
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.Содержание КАК Содержание,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты"     , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ДокументыОстатковПоПартиям"     			, НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НомерСтрокиДокументаОстаткиПоПартиям"    , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ДополнительныеРеквизитыПартии"     		, НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаТовары"        , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Номер,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ЭлектронныеУслуги,
	|	Реквизиты.ВидАгентскогоДоговора,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.Сумма КАК СуммаВзаиморасчетовШапки,
	|	Реквизиты.СуммаНДС КАК СуммаНДСВзаиморасчетовШапки,
	|	Реквизиты.Сумма КАК СуммаРубШапки,
	|	Реквизиты.СуммаНДС КАК СуммаНДСРубШапки,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА Реквизиты.Сумма
	|		ИНАЧЕ Реквизиты.Сумма + Реквизиты.СуммаНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	Реквизиты.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА Реквизиты.Сумма
	|		ИНАЧЕ Реквизиты.Сумма + Реквизиты.СуммаНДС
	|	КОНЕЦ КАК СуммаРуб,
	|	Реквизиты.СуммаНДС КАК СуммаНДСРуб,
	|	Реквизиты.СтавкаНДС,
	|	Реквизиты.СпособРаспределения,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СпособЗачетаАвансов
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВводНачальныхОстатковНоменклатураНаСкладе.Номенклатура,
	|	ВводНачальныхОстатковНоменклатураНаСкладе.Партия,
	|	МИНИМУМ(ВводНачальныхОстатковНоменклатураНаСкладе.Ссылка) КАК ДокументНачальныхОстатков
	|ПОМЕСТИТЬ ДокументыОстатковПоПартиям
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатков.НоменклатураНаСкладе КАК ВводНачальныхОстатковНоменклатураНаСкладе
	|		ПО ПоступлениеДопРасходовТовары.ДокументПартии = ВводНачальныхОстатковНоменклатураНаСкладе.Партия
	|			И ПоступлениеДопРасходовТовары.Номенклатура = ВводНачальныхОстатковНоменклатураНаСкладе.Номенклатура
	|ГДЕ
	|	ПоступлениеДопРасходовТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВводНачальныхОстатковНоменклатураНаСкладе.Номенклатура,
	|	ВводНачальныхОстатковНоменклатураНаСкладе.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОстатковПоПартиям.Номенклатура,
	|	ДокументыОстатковПоПартиям.Партия,
	|	МИНИМУМ(ВводНачальныхОстатковНоменклатураНаСкладе.НомерСтроки) КАК НомерСтроки,
	|	ДокументыОстатковПоПартиям.ДокументНачальныхОстатков
	|ПОМЕСТИТЬ НомерСтрокиДокументаОстаткиПоПартиям
	|ИЗ
	|	ДокументыОстатковПоПартиям КАК ДокументыОстатковПоПартиям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатков.НоменклатураНаСкладе КАК ВводНачальныхОстатковНоменклатураНаСкладе
	|		ПО ДокументыОстатковПоПартиям.Номенклатура = ВводНачальныхОстатковНоменклатураНаСкладе.Номенклатура
	|			И ДокументыОстатковПоПартиям.Партия = ВводНачальныхОстатковНоменклатураНаСкладе.Партия
	|			И ДокументыОстатковПоПартиям.ДокументНачальныхОстатков = ВводНачальныхОстатковНоменклатураНаСкладе.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОстатковПоПартиям.Партия,
	|	ДокументыОстатковПоПартиям.Номенклатура,
	|	ДокументыОстатковПоПартиям.ДокументНачальныхОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомерСтрокиДокументаОстаткиПоПартиям.Номенклатура,
	|	НомерСтрокиДокументаОстаткиПоПартиям.Партия,
	|	ВводНачальныхОстатковНоменклатураНаСкладе.Склад,
	|	ВводНачальныхОстатковНоменклатураНаСкладе.Ссылка.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ДополнительныеРеквизитыПартии
	|ИЗ
	|	НомерСтрокиДокументаОстаткиПоПартиям КАК НомерСтрокиДокументаОстаткиПоПартиям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатков.НоменклатураНаСкладе КАК ВводНачальныхОстатковНоменклатураНаСкладе
	|		ПО НомерСтрокиДокументаОстаткиПоПартиям.НомерСтроки = ВводНачальныхОстатковНоменклатураНаСкладе.НомерСтроки
	|			И НомерСтрокиДокументаОстаткиПоПартиям.ДокументНачальныхОстатков = ВводНачальныхОстатковНоменклатураНаСкладе.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.СуммаТовара,
	|	ТаблицаТовары.ДокументПартии,
	|	ЕСТЬNULL(ТаблицаТовары.ДокументПартии.Склад, ЕСТЬNULL(ДополнительныеРеквизитыПартии.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))) КАК Склад,
	|	ЕСТЬNULL(ТаблицаТовары.ДокументПартии.ПодразделениеОрганизации, ЕСТЬNULL(ДополнительныеРеквизитыПартии.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))) КАК Подразделение,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.СчетУчета.Забалансовый КАК СчетУчетаЗабалансовый,
	|	ТаблицаТовары.СчетУчетаНДС,
	|	ТаблицаТовары.СпособУчетаНДС,
	|	ТаблицаТовары.СчетУчетаНУ,
	|	ТаблицаТовары.СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗатратыПринимаютсяКНУ,
	|	ТаблицаТовары.ОтражениеВУСН,
	|	Реквизиты.СтавкаНДС КАК СтавкаНДС,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаРуб,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДСРуб
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДополнительныеРеквизитыПартии КАК ДополнительныеРеквизитыПартии
	|		ПО ТаблицаТовары.ДокументПартии = ДополнительныеРеквизитыПартии.Партия
	|			И ТаблицаТовары.Номенклатура = ДополнительныеРеквизитыПартии.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";	
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Результат    = Запрос.ВыполнитьПакет();
	
	ТекстЗапроса = "";
	СуммыРеквизиты = Результат[НомераТаблиц["СуммыРеквизиты"]].Выгрузить();
	УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыРеквизиты, Реквизиты);
	Запрос.УстановитьПараметр("СуммыРеквизиты", СуммыРеквизиты);
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеРеквизиты();
	
	СуммыТаблицыТовары = Результат[НомераТаблиц["СуммыТаблицыТовары"]].Выгрузить();
	УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыТовары, Реквизиты);
	Запрос.УстановитьПараметр("СуммыТаблицыТовары", СуммыТаблицыТовары);
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеТовары();
	
	Запрос.Текст = ТекстЗапроса;
	Результат    = Запрос.ВыполнитьПакет();
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ Реквизиты", "ПОМЕСТИТЬ ВременнаяТаблицаРеквизиты");
	НомераТаблиц.Вставить("СуммыРеквизиты", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРеквизиты.СтавкаНДС,
	|	ВременнаяТаблицаРеквизиты.СуммаВзаиморасчетов,
	|	ВременнаяТаблицаРеквизиты.СуммаНДСВзаиморасчетов,
	|	ВременнаяТаблицаРеквизиты.СуммаРуб,
	|	ВременнаяТаблицаРеквизиты.СуммаНДСРуб
	|ИЗ
	|	ВременнаяТаблицаРеквизиты КАК ВременнаяТаблицаРеквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
	"ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДополнительныеРеквизитыПартии КАК ДополнительныеРеквизитыПартии
	|		ПО ТаблицаТовары.ДокументПартии = ДополнительныеРеквизитыПартии.Партия
	|			И ТаблицаТовары.Номенклатура = ДополнительныеРеквизитыПартии.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка",
	"ПОМЕСТИТЬ ВременнаяТаблицаТовары
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДополнительныеРеквизитыПартии КАК ДополнительныеРеквизитыПартии
	|		ПО ТаблицаТовары.ДокументПартии = ДополнительныеРеквизитыПартии.Партия
	|			И ТаблицаТовары.Номенклатура = ДополнительныеРеквизитыПартии.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|НомерСтроки");
	НомераТаблиц.Вставить("СуммыТаблицыТовары", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.СуммаВзаиморасчетов,
	|	ВременнаяТаблицаТовары.СуммаНДСВзаиморасчетов,
	|	ВременнаяТаблицаТовары.СуммаРуб,
	|	ВременнаяТаблицаТовары.СуммаНДСРуб
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетыВВалютеРеквизиты()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыРеквизиты.СуммаВзаиморасчетов,
	|	СуммыРеквизиты.СуммаНДСВзаиморасчетов,
	|	СуммыРеквизиты.СуммаРуб,
	|	СуммыРеквизиты.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыРеквизиты
	|ИЗ
	|	&СуммыРеквизиты КАК СуммыРеквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Номер,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ЭлектронныеУслуги,
	|	Реквизиты.ВидАгентскогоДоговора,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА СуммыРеквизиты.СуммаВзаиморасчетов
	|		ИНАЧЕ СуммыРеквизиты.СуммаВзаиморасчетов - СуммыРеквизиты.СуммаНДСВзаиморасчетов
	|	КОНЕЦ КАК СуммаВзаиморасчетовШапки,
	|	СуммыРеквизиты.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетовШапки,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА СуммыРеквизиты.СуммаРуб
	|		ИНАЧЕ СуммыРеквизиты.СуммаРуб - СуммыРеквизиты.СуммаНДСРуб
	|	КОНЕЦ КАК СуммаРубШапки,
	|	СуммыРеквизиты.СуммаНДСРуб КАК СуммаНДСРубШапки,
	|	СуммыРеквизиты.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	СуммыРеквизиты.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	СуммыРеквизиты.СуммаРуб КАК СуммаРуб,
	|	СуммыРеквизиты.СуммаНДСРуб КАК СуммаНДСРуб,
	|	Реквизиты.СтавкаНДС,
	|	Реквизиты.СпособРаспределения,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СпособЗачетаАвансов
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	ВременнаяТаблицаРеквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыРеквизиты КАК СуммыРеквизиты
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеТовары()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыТовары.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаРуб,
	|	СуммыТаблицыТовары.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыТовары
	|ИЗ
	|	&СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.Ссылка,
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВременнаяТаблицаТовары.НоменклатурнаяГруппа,
	|	ВременнаяТаблицаТовары.Количество,
	|	ВременнаяТаблицаТовары.СуммаТовара,
	|	ВременнаяТаблицаТовары.ДокументПартии,
	|	ВременнаяТаблицаТовары.Склад,
	|	ВременнаяТаблицаТовары.Подразделение,
	|	ВременнаяТаблицаТовары.СчетУчета,
	|	ВременнаяТаблицаТовары.СчетУчетаЗабалансовый,
	|	ВременнаяТаблицаТовары.СчетУчетаНДС,
	|	ВременнаяТаблицаТовары.СпособУчетаНДС,
	|	ВременнаяТаблицаТовары.СчетУчетаНУ,
	|	ВременнаяТаблицаТовары.СтатьяЗатратНУ,
	|	ВременнаяТаблицаТовары.ЗатратыПринимаютсяКНУ,
	|	ВременнаяТаблицаТовары.ОтражениеВУСН,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.КорСчет,
	|	ЕСТЬNULL(СуммыТаблицыТовары.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	ЕСТЬNULL(СуммыТаблицыТовары.СуммаНДСВзаиморасчетов, 0) КАК СуммаНДСВзаиморасчетов,
	|	ЕСТЬNULL(СуммыТаблицыТовары.СуммаРуб, 0) КАК СуммаРуб,
	|	ЕСТЬNULL(СуммыТаблицыТовары.СуммаНДСРуб, 0) КАК СуммаНДСРуб
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|		ПО ВременнаяТаблицаТовары.НомерСтроки = СуммыТаблицыТовары.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаТаблицаДопРасходы(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	НомераТаблиц.Вставить("ДопРасходыРеквизиты"  , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ДопРасходыТаблица"    , НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ЭлектронныеУслуги,
	|	Реквизиты.ВидАгентскогоДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СуммаВзаиморасчетовШапки,
	|	Реквизиты.СуммаНДСВзаиморасчетовШапки,
	|	Реквизиты.СуммаРубШапки,
	|	Реквизиты.СуммаНДСРубШапки,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.СпособРаспределения
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	ТаблицаТовары.Ссылка КАК Регистратор,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.ДокументПартии КАК ДокументПартии,
	|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаТовары.СпособУчетаНДС КАК СпособУчетаНДС,
	|	Реквизиты.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.ДокументПартии КАК ДокументОприходования,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСубконтоСтатьиНУ,
	|	ТаблицаТовары.КорСчет КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СуммаТовара КАК СуммаТовара,
	|	ТаблицаТовары.СуммаРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаРуб КАК СуммаРуб,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СуммаРуб КАК СуммаНУ,
	|	ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов,
	|	ТаблицаТовары.ЗатратыПринимаютсяКНУ,
	|	&СодержаниеДопРасходы КАК Содержание,
	|	"""" КАК КодВидаОперации
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	НомераТаблиц.Вставить("ВременнаяТаблицаСуммВзаиморасчетов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты", 				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", 		НомераТаблиц.Количество());

	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Подразделение,
	|	СУММА(ТаблицаТовары.СуммаТовара) КАК СуммаТовара,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаНДСВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицаТовары.СуммаНДСРуб) КАК СуммаНДСРуб
	|ПОМЕСТИТЬ ТаблицаСуммВзаиморасчетов
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	ВЫБОР
	|		КОГДА Реквизиты.УчетАгентскогоНДС
	|			ТОГДА Реквизиты.СуммаВзаиморасчетов - Реквизиты.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ Реквизиты.СуммаВзаиморасчетов
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.УчетАгентскогоНДС
	|			ТОГДА Реквизиты.СуммаРуб - Реквизиты.СуммаНДСРуб
	|		ИНАЧЕ Реквизиты.СуммаРуб
	|	КОНЕЦ КАК СуммаРуб
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	ТаблицаСуммВзаиморасчетов.Подразделение КАК Подразделение,
	|	ТаблицаСуммВзаиморасчетов.СуммаТовара КАК СуммаТовара,
	|	ВЫБОР
	|		КОГДА Реквизиты.УчетАгентскогоНДС
	|			ТОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов - ТаблицаСуммВзаиморасчетов.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов
	|	КОНЕЦ КАК СуммаВзаиморасчетовСтроки,
	|	ВЫБОР
	|		КОГДА Реквизиты.УчетАгентскогоНДС
	|			ТОГДА ТаблицаСуммВзаиморасчетов.СуммаРуб - ТаблицаСуммВзаиморасчетов.СуммаНДСРуб
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаРуб
	|	КОНЕЦ КАК СуммаРубСтроки,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаРуб,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	ТаблицаСуммВзаиморасчетов КАК ТаблицаСуммВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если Реквизиты.СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаАвансов", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ЗачетАвансовТаблицаАвансов",   НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса 
		+ "ВЫБРАТЬ
		|	ТаблицаЗачетАвансов.НомерСтроки,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
		|	Реквизиты.Контрагент,
		|	Реквизиты.ДоговорКонтрагента,
		|	ТаблицаЗачетАвансов.ДокументАванса,
		|	ТаблицаЗачетАвансов.СуммаЗачета
		|ИЗ
		|	Документ.ПоступлениеДопРасходов.ЗачетАвансов КАК ТаблицаЗачетАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаЗачетАвансов.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаЗачетАвансов.НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПрименяетсяУСНДоходыМинусРасходы Тогда
		ПараметрыПроведения.Вставить("ПоступлениеРасходовУСНРеквизиты", 		Неопределено);
		ПараметрыПроведения.Вставить("ПоступлениеРасходовУСНТаблицаРасходов", 	Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПоступлениеРасходовУСНРеквизиты",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеРасходовУСНТаблицаРасходов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК Валюта,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ВидАгентскогоДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СуммаВзаиморасчетовШапки,
	|	Реквизиты.СуммаНДСВзаиморасчетовШапки,
	|	Реквизиты.СуммаРубШапки,
	|	Реквизиты.СуммаНДСРубШапки,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.СпособРаспределения,
	|	ЛОЖЬ КАК РасходыПредпринимателя
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходы) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	ТаблицаТовары.Номенклатура КАК ЭлементРасхода,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Субсчета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Субсчета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СуммаТовара КАК СуммаТовара,
	|	ТаблицаТовары.ДокументПартии КАК Партия,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.СуммаВзаиморасчетов КАК Сумма,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК НДС,
	|	ТаблицаТовары.ОтражениеВУСН КАК ОтражениеВУСН
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.СчетУчетаЗабалансовый";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПлательщикНДФЛ Тогда
		ПараметрыПроведения.Вставить("ПоступлениеМПЗИПРеквизиты", 		Неопределено);
		ПараметрыПроведения.Вставить("ПоступлениеМПЗИПТаблицаТоваров", 	Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПоступлениеМПЗИПРеквизиты",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаблицаТоваров",	НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ПоступлениеДопРасходов"" КАК ТипПоступления,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ТипСклада,
	|	Реквизиты.СпособРаспределения,
	|	Реквизиты.СуммаВзаиморасчетовШапки,
	|	Реквизиты.СуммаНДСВзаиморасчетовШапки,
	|	Реквизиты.СуммаРубШапки,
	|	Реквизиты.СуммаНДСРубШапки,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СуммаТовара КАК СуммаТовара,
	|	ТаблицаТовары.СуммаРуб КАК Сумма,
	|	ТаблицаТовары.СуммаНДСРуб КАК НДС,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		ИНАЧЕ ТаблицаТовары.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ТаблицаТовары.ДокументПартии КАК Партия,
	|	"""" КАК КодВидаОперации
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция РаспределениеСуммыДопРасходов(Знач ДопРасходыРеквизиты, Знач ДопРасходыТаблица, ТолькоВзаиморасчеты = Ложь) Экспорт

	Если ДопРасходыТаблица = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ВремДопРасходыРеквизиты = ДопРасходыРеквизиты[0];
	ВремДопРасходыТаблица   = ДопРасходыТаблица;

	ЕстьСуммаКРаспределению = ВремДопРасходыРеквизиты.СуммаВзаиморасчетовШапки > 0
		И ЗначениеЗаполнено(ВремДопРасходыРеквизиты.СпособРаспределения);
		
	Если ЕстьСуммаКРаспределению Тогда
		ВремДопРасходыТаблица.Колонки.Добавить("СуммаРаспределеннаяИзШапки");
		ВремДопРасходыТаблица.Колонки.Добавить("СуммаРаспределеннаяРубИзШапки");
		ВремДопРасходыТаблица.Колонки.Добавить("СуммаНДСРаспределеннаяИзШапки");
		ВремДопРасходыТаблица.Колонки.Добавить("СуммаНДСРаспределеннаяРубИзШапки");
		Если ВремДопРасходыРеквизиты.СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоКоличеству Тогда
			ИмяКолонкиПропорции = "Количество";
		Иначе
			ИмяКолонкиПропорции = "СуммаТовара";
		КонецЕсли;
		СуммаКРаспределению = ВремДопРасходыРеквизиты.СуммаВзаиморасчетовШапки
				+ ?(ВремДопРасходыРеквизиты.СуммаВключаетНДС, 0, ВремДопРасходыРеквизиты.СуммаНДСВзаиморасчетовШапки);
		СуммаРубКРаспределению = ВремДопРасходыРеквизиты.СуммаРубШапки
				+ ?(ВремДопРасходыРеквизиты.СуммаВключаетНДС, 0, ВремДопРасходыРеквизиты.СуммаНДСРубШапки);
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(СуммаКРаспределению, ВремДопРасходыТаблица,
											"СуммаРаспределеннаяИзШапки", ИмяКолонкиПропорции);
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(СуммаРубКРаспределению, ВремДопРасходыТаблица,
											"СуммаРаспределеннаяРубИзШапки", ИмяКолонкиПропорции);
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(ВремДопРасходыРеквизиты.СуммаНДСВзаиморасчетовШапки, ВремДопРасходыТаблица,
											"СуммаНДСРаспределеннаяИзШапки", ИмяКолонкиПропорции);
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(ВремДопРасходыРеквизиты.СуммаНДСРубШапки, ВремДопРасходыТаблица,
											"СуммаНДСРаспределеннаяРубИзШапки", ИмяКолонкиПропорции);

		Для каждого СтрокаТаблицы Из ВремДопРасходыТаблица Цикл
			
			Если ТолькоВзаиморасчеты Тогда
				СтрокаТаблицы.Сумма    = СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаРаспределеннаяРубИзШапки;
				СтрокаТаблицы.НДС      = СтрокаТаблицы.НДС   + СтрокаТаблицы.СуммаНДСРаспределеннаяРубИзШапки; 
			Иначе
				СтрокаТаблицы.СуммаВзаиморасчетов    = СтрокаТаблицы.СуммаВзаиморасчетов + СтрокаТаблицы.СуммаРаспределеннаяИзШапки;
				СтрокаТаблицы.СуммаНДСВзаиморасчетов = СтрокаТаблицы.СуммаНДСВзаиморасчетов + СтрокаТаблицы.СуммаНДСРаспределеннаяИзШапки; 
				СтрокаТаблицы.СуммаРуб               = СтрокаТаблицы.СуммаРуб + СтрокаТаблицы.СуммаРаспределеннаяРубИзШапки;
				СтрокаТаблицы.СуммаБУ                = СтрокаТаблицы.СуммаРуб;
				СтрокаТаблицы.СуммаНУ                = СтрокаТаблицы.СуммаРуб;
				СтрокаТаблицы.СуммаНДСРуб            = СтрокаТаблицы.СуммаНДСРуб + СтрокаТаблицы.СуммаНДСРаспределеннаяРубИзШапки; 
			КонецЕсли; 
			
		КонецЦикла;

	КонецЕсли;

	Возврат ВремДопРасходыТаблица;

КонецФункции

Функция РаспределениеСуммыДопРасходовУСН(Знач ДопРасходыРеквизиты, Знач ДопРасходыТаблица) Экспорт

	Если ДопРасходыТаблица = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	ТаблицаРасходовУСН = РаспределениеСуммыДопРасходов(ДопРасходыРеквизиты, ДопРасходыТаблица, Истина);
	
	КоличествоСтрок = ТаблицаРасходовУСН.Количество();
		
	Для Индекс = 1 По КоличествоСтрок Цикл
		
		СтрокаТаблицы = ТаблицаРасходовУСН[КоличествоСтрок - Индекс];
		
		Если СтрокаТаблицы.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются Тогда
			ТаблицаРасходовУСН.Удалить(СтрокаТаблицы);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаРасходовУСН;

КонецФункции

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Дата КАК Дата
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("ТаблицаОприходованныеТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТаблицаОприходованныеТовары", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчетСписания
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ОбработкаОтложенногоПроведения(Параметры, Отказ) Экспорт
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведения(
		Параметры.Регистратор,
		Отказ,
		Параметры.ДоговорКонтрагента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	

	ТаблицаВзаиморасчетов = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ЗачетАвансовТаблицаАвансов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияЗачетАвансов(
		Параметры,
		ТаблицаВзаиморасчетов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Доп. расходы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Доп. расходы'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Счет-фактура от поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураПолученный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактурПолученных";
	КомандаПечати.Порядок       = 70;
	
	// Универсальный передаточный документ за поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД) за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	КомандаПечати.Порядок       = 80;
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
	// Акт об оказании услуг за поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг за поставщика'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок       = 90;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Поступление доп. расходов""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Доп. расходы",
			ПечатьПоступлениеДопРасходов(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), , "Документ.ПоступлениеДопРасходов.ПФ_MXL_Накладная");
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаРасчетВал") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаРасчетВал", "Справка-расчет ""Рублевая сумма документа в валюте""",
			ПечатьСправкаРасчетВал(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов);
		ПараметрыПечати.Вставить("ВидДокументаПечати", "ПоступлениеДопРасходов");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеДопРасходов_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати", "Документ.ПоступлениеДопРасходов.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Акт об оказании услуг за поставщика", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),,
					"Документ.ПоступлениеДопРасходов.ПФ_MXL_Акт");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПечатьПоступлениеДопРасходов(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеДопРасходов_Накладная";

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка,
	|	ПоступлениеДопРасходов.Ссылка КАК Регистратор,
	|	ПоступлениеДопРасходов.Номер,
	|	ПоступлениеДопРасходов.Дата,
	|	ПоступлениеДопРасходов.НомерВходящегоДокумента,
	|	ПоступлениеДопРасходов.ДатаВходящегоДокумента,
	|	ПоступлениеДопРасходов.ДоговорКонтрагента,
	|	ПоступлениеДопРасходов.Контрагент,
	|	ПоступлениеДопРасходов.Организация,
	|	ПоступлениеДопРасходов.Содержание,
	|	ПоступлениеДопРасходов.Сумма КАК СуммаДокумента,
	|	ПоступлениеДопРасходов.ВалютаДокумента,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.СуммаНДС, 0) КАК СуммаНДС,
	|	ПоступлениеДопРасходов.Товары.(
	|		НомерСтроки,
	|		СуммаНДС,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеДопРасходов.Дата,
	|	ПоступлениеДопРасходов.Ссылка,
	|	ПоступлениеДопРасходов.Товары.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеДопРасходов.ПФ_MXL_Накладная");

		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");

		Если ЗначениеЗаполнено(Шапка.НомерВходящегоДокумента) Тогда
			ОбластьМакета.Параметры.ТекстЗаголовка = "Доп. расходы № " + СокрЛП(Шапка.НомерВходящегоДокумента) + " от " + Формат(Шапка.ДатаВходящегоДокумента, "ДФ='дд ММММ гггг'")+ " г.";
		Иначе
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, "Доп. расходы");
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");

		СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеКонтрагента;
		ОбластьМакета.Параметры.Поставщик = Шапка.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.Получатель = Шапка.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ТаблицаСтрок = Шапка.Товары.Выгрузить();
		ТаблицаСтрок.Добавить();
		ТаблицаСтрок.Свернуть(, "Сумма, СуммаНДС");
		СуммаВсего = Шапка.СуммаДокумента + ТаблицаСтрок[0].Сумма;

		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.НомерСтроки = 1;
		ОбластьМакета.Параметры.Товар       = Шапка.Содержание;
		ОбластьМакета.Параметры.Цена        = СуммаВсего;
		ОбластьМакета.Параметры.Количество  = 1;
		ОбластьМакета.Параметры.Сумма       = СуммаВсего;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВсего);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести ИтогоНДС
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.СуммаНДС + ТаблицаСтрок[0].СуммаНДС);
		ОбластьМакета.Параметры.НДС      = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = СуммаВсего + ?(Шапка.СуммаВключаетНДС, 0, Шапка.СуммаНДС + ТаблицаСтрок[0].СуммаНДС);
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + 1 + ", на сумму " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);

		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Функция ПечатьСправкаРасчетВал(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	// Справка-расчет формирования рублевой суммы документа в валюте
	//УчетВзаиморасчетов.НапечататьСправкуРасчетРублеваяСуммаДокументаВВалюте(Ссылка);

	Возврат Неопределено;

КонецФункции

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ДопРасходыПоТабличнойЧасти",                             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДанныеОбрабатываемогоДокумента.Сумма КАК ВсегоВал,
	|	ДанныеОбрабатываемогоДокумента.СуммаНДС КАК НДСВал,
	|	ДанныеОбрабатываемогоДокумента.СтавкаНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.ВсегоВал,
	|	ВТ_ТаблицаПоШапкеДокумента.НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	1 КАК НомерСтрокиДокумента,
	|	СУММА(РублевыеСуммыДокументовВВалюте.Всего) КАК Всего,
	|	СУММА(РублевыеСуммыДокументовВВалюте.НДС) КАК НДС,
	|	СУММА(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС) КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|
	|СГРУППИРОВАТЬ ПО
	|	РублевыеСуммыДокументовВВалюте.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Товар,
	|	""Доп. расходы"" КАК ТоварНаименование,
	|	СУММА(ПоступлениеДопРасходовТовары.Сумма) КАК ВсегоВал,
	|	СУММА(ПоступлениеДопРасходовТовары.СуммаНДС) КАК НДСВал,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДС
	|ПОМЕСТИТЬ ВТ_ДопРасходыПоТабличнойЧасти
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО ПоступлениеДопРасходовТовары.Ссылка = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходовТовары.Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДопРасходыПоТабличнойЧасти.Ссылка КАК Ссылка,
	|	ВТ_ДопРасходыПоТабличнойЧасти.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДопРасходыПоТабличнойЧасти.Товар,
	|	ВТ_ДопРасходыПоТабличнойЧасти.ТоварНаименование,
	|	ВТ_ДопРасходыПоТабличнойЧасти.ВсегоВал КАК ВсегоВал,
	|	ВТ_ДопРасходыПоТабличнойЧасти.НДСВал КАК НДСВал,
	|	ВТ_ДопРасходыПоТабличнойЧасти.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	ВТ_ДопРасходыПоТабличнойЧасти КАК ВТ_ДопРасходыПоТабличнойЧасти
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ВТ_ДопРасходыПоТабличнойЧасти.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ДопРасходыПоТабличнойЧасти
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего) КАК Всего,
	|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС) КАК НДС,
	|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС) КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка КАК Ссылка,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеДопРасходов.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
	|	СУММА(ПоступлениеДопРасходовТовары.Сумма) КАК Сумма,
	|	СУММА(ПоступлениеДопРасходовТовары.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ПоступлениеДопРасходовТовары
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|ГДЕ
	|	ПоступлениеДопРасходовТовары.Ссылка В(&МассивОбъектов)
	|	И ПоступлениеДопРасходовТовары.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходовТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка КАК Документ,
	|	ПоступлениеДопРасходов.Дата КАК ДатаДляПолученияСведений,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	ПоступлениеДопРасходов.Контрагент КАК Поставщик,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеДопРасходов.ДоговорКонтрагента) КАК ПредставлениеДоговора,
	|	ПоступлениеДопРасходов.Организация КАК Получатель,
	|	ПоступлениеДопРасходов.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	"""" КАК БанковскийСчетПродавца,
	|	ПоступлениеДопРасходов.ВалютаДокумента КАК Валюта,
	|	ПоступлениеДопРасходов.КурсВзаиморасчетов КАК Курс,
	|	ПоступлениеДопРасходов.КратностьВзаиморасчетов КАК Кратность,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ВалютаДокумента.Код, """") КАК ВалютаКод,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ВалютаДокумента.Наименование, """") КАК ВалютаНаименование,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС,
	|	"""" КАК Руководитель,
	|	"""" КАК ЗаРуководителяНаОсновании
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеДопРасходов.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоступлениеДопРасходов.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Поле1,
	|	ПоступлениеДопРасходов.Содержание КАК НоменклатураНаименование,
	|	"""" КАК НоменклатураКод,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	"""" КАК ЕдиницаИзмеренияКод,
	|	"""" КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеДопРасходов.Сумма + ЕСТЬNULL(ПоступлениеДопРасходовТовары.Сумма, 0) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА ПоступлениеДопРасходов.Сумма + ЕСТЬNULL(ПоступлениеДопРасходовТовары.Сумма, 0) - ПоступлениеДопРасходов.СуммаНДС - ЕСТЬNULL(ПоступлениеДопРасходовТовары.СуммаНДС, 0)
	|		ИНАЧЕ ПоступлениеДопРасходов.Сумма + ЕСТЬNULL(ПоступлениеДопРасходовТовары.Сумма, 0)
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ПоступлениеДопРасходов.СуммаНДС + ЕСТЬNULL(ПоступлениеДопРасходовТовары.СуммаНДС, 0) КАК СуммаНДС,
	|	ПоступлениеДопРасходов.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеДопРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеДопРасходов.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоступлениеДопРасходовТовары КАК ПоступлениеДопРасходовТовары
	|		ПО ДокументыДляПечати.Ссылка = ПоступлениеДопРасходовТовары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуСведенийАктаОбОказанииУслуг(Знач МассивОбъектов) Экспорт
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеАктаОбОказанииУслуг();
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг();
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[3].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[4].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		Если Выборка.РасчетыВУсловныхЕдиницах Тогда
			СведенияОДокументе.Валюта             = ВалютаРегУчета;
			СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
			СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		КонецЕсли;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыАктаОбОказанииУслуг();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.Валюта <> ВалютаРегУчета
			И Выборка.РасчетыВУсловныхЕдиницах Тогда
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность = 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
				СтрокаТаблицыДокумента.Сумма = СтрокаТаблицыДокумента.СуммаБезНДС + ?(Выборка.СуммаВключаетНДС, СтрокаТаблицыДокумента.СуммаНДС, 0);
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
			СтрокаТаблицыДокумента.Количество = "";
			СтрокаТаблицыДокумента.Цена = "";
						
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, Новый Структура("ЗаполнятьРуководителя"));
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ПечатьУПД

// Определяет какие из переданных документов, на основании которых формируется печатная форма
// универсального передаточного документа на печать, можно распечатать без выписки счета-фактуры.
// В конфигурации не поддерживается печать универсального передаточного документа в статусе "2" 
// (только первичный документ), если в документе выделена сумма НДС и сумма налога не относится
// к посреднической деятельности.
//
// Параметры:
//   МассивДокументов - Массив - массив документов, по которым формируется печатная форма.
//
// Возвращаемое значение:
//   ДокументыСчетФактураНеТребуются - Массив - документы, для печати которых не требуется выписка счета-фактуры.
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.СуммаНДС > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновнаяТаблица.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ОсновнаяТаблица
	|ГДЕ
	|	ОсновнаяТаблица.Ссылка В(&МассивДокументов)
	|	И ОсновнаяТаблица.СуммаНДС > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка КАК Ссылка,
	|	ПоступлениеДопРасходов.Дата КАК Дата,
	|	ПоступлениеДопРасходов.Организация КАК Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ПоступлениеДопРасходов.Ссылка)
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.ЕстьНДС Тогда
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращает текст запроса для формирования печатной формы универсального передаточного документа
// Параметры:
//   ИспользуетсяПостановлениеНДС981 - Булево - признак применения постановления Правительства РФ №981
//
// Возвращаемое значение:
//   ТекстЗапроса - Строка - текст запроса для формирования печатной формы универсального передаточного документа.
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ИспользуетсяПостановлениеНДС981 = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка) КАК СчетФактура,
	|	ПоступлениеДопРасходов.ДатаВходящегоДокумента КАК Дата,
	|	ПоступлениеДопРасходов.НомерВходящегоДокумента КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	"""" КАК Руководитель,
	|	"""" КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ПоступлениеДопРасходов.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ПоступлениеДопРасходов.Контрагент КАК Контрагент,
	|	ПоступлениеДопРасходов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	ПоступлениеДопРасходов.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате";
	
	Если ИспользуетсяПостановлениеНДС981 = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате", "ИСТИНА");
	ИначеЕсли ИспользуетсяПостановлениеНДС981 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ПоступлениеДопРасходов.Дата >= ДАТАВРЕМЯ(2017,10,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ПоступлениеДопРасходов.Дата < ДАТАВРЕМЯ(2017,10,1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

Функция ОсобенностиУчетаРасчетов() Экспорт
	
	ОсобенностиДокумента = УчетВзаиморасчетовФормы.НовыйОсобенностиУчетаРасчетовДокумента();
	
	ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПлатежейПоставщикам");
	
	Возврат ОсобенностиДокумента;
	
КонецФункции

#КонецЕсли