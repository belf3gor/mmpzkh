#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ВозвратМатериаловИзЭксплуатации.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	Документы.ВозвратМатериаловИзЭксплуатации.ДобавитьКолонкуСодержание(
		ПараметрыПроведения.ВозвратСпецодеждыСпецоснасткиТаблица);

	ТаблицыОстатков = УчетМатериаловВЭксплуатации.ПодготовитьТаблицыОстатковВозвратСпецодеждыСпецоснасткиИзЭксплуатации(
		ПараметрыПроведения.ВозвратСпецодеждыСпецоснасткиТаблица,
		ПараметрыПроведения.ВозвратСпецодеждыСпецоснасткиРеквизиты,
		Отказ);
	
	// Учет доходов и расходов ИП
	ТаблицаОприходованияТоваровИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуОприходованияТоваров(
		ПараметрыПроведения.ОприходованиеТоваровИПТаблица,
		ПараметрыПроведения.ОприходованиеТоваровИПРеквизиты);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);

	УчетМатериаловВЭксплуатации.СформироватьДвиженияВозвратСпецодеждыСпецоснасткиИзЭксплуатации(
		ТаблицыОстатков.ТаблицаНачислениеПогашенияСтоимостиМатериалов,
		ТаблицыОстатков.ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.ВозвратСпецодеждыСпецоснасткиРеквизиты,
		Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияОприходованиеТоваров(
		ПараметрыПроведения.СпецодеждаСпецоснасткаНДС, Неопределено,
		ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);

	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияОприходованиеТоваров(
		ТаблицаОприходованияТоваровИП,
		ПараметрыПроведения.ОприходованиеТоваровИПРеквизиты,
		Движения, Отказ);
	
	// УСН
	УчетУСН.ПоступлениеРасходовУСН(ТаблицыОстатков.ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.ПоступлениеРасходовУСНРеквизиты, 0, Движения, Отказ);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ПроверяемыеРеквизиты.Найти("Склад") = Неопределено Тогда
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;

	Если Спецоснастка.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения)

	ТипОснования = ТипЗнч(ДанныеЗаполнения);

	Если ДанныеЗаполнения <> Неопределено Тогда
		Если ТипОснования = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
			// Заполнение шапки
			ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);

			Комментарий   = ДанныеЗаполнения.Комментарий;
			Ответственный = ДанныеЗаполнения.Ответственный;
			ПодразделениеОрганизации = ДанныеЗаполнения.Местонахождение;

			Для Каждого ТекСтрокаСпецодежда Из ДанныеЗаполнения.Спецодежда Цикл
				Если ЗначениеЗаполнено(ТекСтрокаСпецодежда.НазначениеИспользования)
					И ТекСтрокаСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию Тогда
					Продолжить;
				КонецЕсли;
				НоваяСтрока = Спецодежда.Добавить();
				НоваяСтрока.Номенклатура                  = ТекСтрокаСпецодежда.Номенклатура;
				НоваяСтрока.ФизЛицо                       = ТекСтрокаСпецодежда.ФизЛицо;
				НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
				НоваяСтрока.Количество                    = ТекСтрокаСпецодежда.Количество;
				НоваяСтрока.СчетУчета                     = ТекСтрокаСпецодежда.СчетУчета;
				НоваяСтрока.СчетПередачи                  = ТекСтрокаСпецодежда.СчетПередачи;
			КонецЦикла;

			Для Каждого ТекСтрокаСпецоснастка Из ДанныеЗаполнения.Спецоснастка Цикл
				Если ЗначениеЗаполнено(ТекСтрокаСпецоснастка.НазначениеИспользования)
					И ТекСтрокаСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию Тогда
					Продолжить;
				КонецЕсли;
				НоваяСтрока = Спецоснастка.Добавить();
				НоваяСтрока.Номенклатура                  = ТекСтрокаСпецоснастка.Номенклатура;
				НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
				НоваяСтрока.Количество                    = ТекСтрокаСпецоснастка.Количество;
				НоваяСтрока.СчетУчета                     = ТекСтрокаСпецоснастка.СчетУчета;
				НоваяСтрока.СчетПередачи                  = ТекСтрокаСпецоснастка.СчетПередачи;
			КонецЦикла;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли