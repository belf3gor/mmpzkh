#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 7, 0);
	
КонецФункции

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчета") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчета) Тогда
		СтрокаТабличнойЧасти.СчетУчета = СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетПередачи) Тогда
		СтрокаТабличнойЧасти.СчетПередачи = СчетаУчета.СчетПередачи;
	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("ВозвратСпецодеждыСпецоснасткиРеквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Реквизиты.Вставить("ПлательщикНДС",                    УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПлательщикНДФЛ",                   УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период));
	
	Запрос.УстановитьПараметр("Организация",   Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад",         Реквизиты.Склад);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	
	Запрос.УстановитьПараметр("СинонимСпецодежда",   НСтр("ru = 'Спецодежда'"));
	Запрос.УстановитьПараметр("СинонимСпецоснастка", НСтр("ru = 'Спецоснастка'"));
	
	Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП", УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа",   УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период));
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)
		+ ТекстЗапросаВозвратСпецодеждыСпецоснастки(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВозвратСпецодеждыСпецоснасткиИП(НомераТаблиц, ПараметрыПроведения, Реквизиты);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт

	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;

	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = "Возврат " + БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетПередачи) + " из эксплуатации";
	КонецЦикла;

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Возврат материалов из эксплуатации""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Склад");
	
	Возврат Результат;
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьСпецодежда) КАК ЕстьСпецодежда,
	|	МАКСИМУМ(СоставДокумента.ЕстьСпецоснастка) КАК ЕстьСпецоснастка
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьСпецодежда,
	|		ЛОЖЬ КАК ЕстьСпецоснастка
	|	ИЗ
	|		Документ.ВозвратМатериаловИзЭксплуатации.Спецодежда КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.ВозвратМатериаловИзЭксплуатации.Спецоснастка КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад,
	|	Реквизиты.ПодразделениеОрганизации
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ВозвратМатериаловИзЭксплуатации КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЕСТЬNULL(СоставДокумента.ЕстьСпецодежда, ЛОЖЬ) КАК ЕстьСпецодежда,
	|	ЕСТЬNULL(СоставДокумента.ЕстьСпецоснастка, ЛОЖЬ) КАК ЕстьСпецоснастка
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьСпецодежда Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаСпецодежда", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	МИНИМУМ(ТаблицаСпецодежда.НомерСтроки) КАК НомерСтроки,
		|	ТаблицаСпецодежда.Номенклатура,
		|	ТаблицаСпецодежда.ПартияМатериаловВЭксплуатации,
		|	ТаблицаСпецодежда.ФизЛицо,
		|	СУММА(ТаблицаСпецодежда.Количество) КАК Количество,
		|	ТаблицаСпецодежда.СчетУчета,
		|	ТаблицаСпецодежда.СчетПередачи
		|ПОМЕСТИТЬ ТаблицаСпецодежда
		|ИЗ
		|	Документ.ВозвратМатериаловИзЭксплуатации.Спецодежда КАК ТаблицаСпецодежда
		|ГДЕ
		|	ТаблицаСпецодежда.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСпецодежда.Номенклатура,
		|	ТаблицаСпецодежда.ПартияМатериаловВЭксплуатации,
		|	ТаблицаСпецодежда.ФизЛицо,
		|	ТаблицаСпецодежда.СчетУчета,
		|	ТаблицаСпецодежда.СчетПередачи"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьСпецоснастка Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаСпецоснастка", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	МИНИМУМ(ТаблицаСпецоснастка.НомерСтроки) КАК НомерСтроки,
		|	ТаблицаСпецоснастка.Номенклатура,
		|	ТаблицаСпецоснастка.ПартияМатериаловВЭксплуатации,
		|	СУММА(ТаблицаСпецоснастка.Количество) КАК Количество,
		|	ТаблицаСпецоснастка.СчетУчета,
		|	ТаблицаСпецоснастка.СчетПередачи
		|ПОМЕСТИТЬ ТаблицаСпецоснастка
		|ИЗ
		|	Документ.ВозвратМатериаловИзЭксплуатации.Спецоснастка КАК ТаблицаСпецоснастка
		|ГДЕ
		|	ТаблицаСпецоснастка.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСпецоснастка.Номенклатура,
		|	ТаблицаСпецоснастка.ПартияМатериаловВЭксплуатации,
		|	ТаблицаСпецоснастка.СчетУчета,
		|	ТаблицаСпецоснастка.СчетПередачи"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВозвратСпецодеждыСпецоснастки(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ЕстьСпецодежда И Не Реквизиты.ЕстьСпецоснастка Тогда
		ПараметрыПроведения.Вставить("ВозвратСпецодеждыСпецоснасткиТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВозвратСпецодеждыСпецоснасткиТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьСпецодежда Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""Спецодежда"" КАК ИмяСписка,
		|	&СинонимСпецодежда КАК СинонимСписка,
		|	ТаблицаСпецодежда.НомерСтроки,
		|	ТаблицаСпецодежда.Номенклатура,
		|	ТаблицаСпецодежда.ПартияМатериаловВЭксплуатации,
		|	ТаблицаСпецодежда.ФизЛицо,
		|	&Подразделение КАК Подразделение,
		|	ТаблицаСпецодежда.СчетУчета,
		|	ТаблицаСпецодежда.СчетПередачи,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный) КАК СчетМЦ,
		|	ТаблицаСпецодежда.СчетУчета КАК СчетРасходов,
		|	ТаблицаСпецодежда.Номенклатура КАК СубконтоРасходов1,
		|	&Склад КАК СубконтоРасходов2,
		|	"""" КАК СубконтоРасходов3,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидСубконтоРасходов1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады) КАК ВидСубконтоРасходов2,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК ВидСубконтоРасходов3,
		|	ТаблицаСпецодежда.Количество
		|ИЗ
		|	ТаблицаСпецодежда КАК ТаблицаСпецодежда";
	КонецЕсли;
	
	Если Реквизиты.ЕстьСпецодежда И Реквизиты.ЕстьСпецоснастка Тогда 
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	КонецЕсли;
	
	Если Реквизиты.ЕстьСпецоснастка Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""Спецоснастка"" КАК ИмяСписка,
		|	&СинонимСпецоснастка КАК СинонимСписка,
		|	ТаблицаСпецоснастка.НомерСтроки,
		|	ТаблицаСпецоснастка.Номенклатура,
		|	ТаблицаСпецоснастка.ПартияМатериаловВЭксплуатации,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизЛицо,
		|	&Подразделение КАК Подразделение,
		|	ТаблицаСпецоснастка.СчетУчета,
		|	ТаблицаСпецоснастка.СчетПередачи,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный) КАК СчетМЦ,
		|	ТаблицаСпецоснастка.СчетУчета КАК СчетРасходов,
		|	ТаблицаСпецоснастка.Номенклатура КАК СубконтоРасходов1,
		|	&Склад КАК СубконтоРасходов2,
		|	"""" КАК СубконтоРасходов3,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидСубконтоРасходов1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады) КАК ВидСубконтоРасходов2,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК ВидСубконтоРасходов3,
		|	ТаблицаСпецоснастка.Количество
		|ИЗ
		|	ТаблицаСпецоснастка КАК ТаблицаСпецоснастка";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ПлательщикНДС 
		Или (Не Реквизиты.ЕстьСпецодежда И Не Реквизиты.ЕстьСпецоснастка) Тогда
		ПараметрыПроведения.Вставить("РеквизитыНДС", Неопределено);
		ПараметрыПроведения.Вставить("СпецодеждаСпецоснасткаНДС", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыНДС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СпецодеждаСпецоснасткаНДС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение
	|ИЗ
	|	Реквизиты КАК Реквизиты" +  ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если Реквизиты.ЕстьСпецодежда Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	1 КАК НомерТабЧасти,
		|	ТаблицаСпецодежда.НомерСтроки,
		|	ТаблицаСпецодежда.Номенклатура,
		|	ТаблицаСпецодежда.СчетУчета,
		|	ТаблицаСпецодежда.Количество
		|ИЗ
		|	ТаблицаСпецодежда КАК ТаблицаСпецодежда";
	КонецЕсли;
	
	Если Реквизиты.ЕстьСпецодежда И Реквизиты.ЕстьСпецоснастка Тогда 
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	КонецЕсли;
	
	Если Реквизиты.ЕстьСпецоснастка Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	2 КАК НомерТабЧасти,
		|	ТаблицаСпецоснастка.НомерСтроки,
		|	ТаблицаСпецоснастка.Номенклатура,
		|	ТаблицаСпецоснастка.СчетУчета,
		|	ТаблицаСпецоснастка.Количество
		|ИЗ
		|	ТаблицаСпецоснастка КАК ТаблицаСпецоснастка";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|УПОРЯДОЧИТЬ ПО
	|	НомерТабЧасти,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ПрименяетсяУСНДоходыМинусРасходы
		Или (Не Реквизиты.ЕстьСпецодежда И Не Реквизиты.ЕстьСпецоснастка) Тогда
		ПараметрыПроведения.Вставить("ПоступлениеРасходовУСНРеквизиты", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПоступлениеРасходовУСНРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК РасходыПредпринимателя
	|ИЗ
	|	Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВозвратСпецодеждыСпецоснасткиИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ПлательщикНДФЛ
		Или (Не Реквизиты.ЕстьСпецодежда И Не Реквизиты.ЕстьСпецоснастка) Тогда
		ПараметрыПроведения.Вставить("ОприходованиеТоваровИПРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ОприходованиеТоваровИПТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ОприходованиеТоваровИПРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОприходованиеТоваровИПТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ИСТИНА КАК ПринятиеКналоговомуУчету
	|ИЗ
	|	Реквизиты КАК Реквизиты" +  ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если Реквизиты.ЕстьСпецодежда Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""Спецодежда"" КАК ИмяСписка,
		|	&СинонимСпецодежда КАК СинонимСписка,
		|	ТаблицаСпецодежда.НомерСтроки,
		|	ТаблицаСпецодежда.Номенклатура,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		ИНАЧЕ ТаблицаСпецодежда.Номенклатура.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	&Ссылка КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
		|	ТаблицаСпецодежда.Количество КАК Количество,
		|	0 КАК Сумма,
		|	ТаблицаСпецодежда.СчетУчета
		|ИЗ
		|	ТаблицаСпецодежда КАК ТаблицаСпецодежда";
	КонецЕсли;
	
	Если Реквизиты.ЕстьСпецодежда И Реквизиты.ЕстьСпецоснастка Тогда 
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	КонецЕсли;
	
	Если Реквизиты.ЕстьСпецоснастка Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""Спецодежда"" КАК ИмяСписка,
		|	&СинонимСпецодежда КАК СинонимСписка,
		|	ТаблицаСпецоснастка.НомерСтроки,
		|	ТаблицаСпецоснастка.Номенклатура,
		|	ВЫБОР
		|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
		|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
		|		ИНАЧЕ ТаблицаСпецоснастка.Номенклатура.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	&Ссылка КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
		|	ТаблицаСпецоснастка.Количество КАК Количество,
		|	0 КАК Сумма,
		|	ТаблицаСпецоснастка.СчетУчета
		|ИЗ
		|	ТаблицаСпецоснастка КАК ТаблицаСпецоснастка";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#КонецЕсли