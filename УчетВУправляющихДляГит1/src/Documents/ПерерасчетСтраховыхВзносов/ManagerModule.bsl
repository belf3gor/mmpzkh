#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПерерасчетСтраховыхВзносов;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииДляЗаполненияДанныхДокумента

Функция ДанныеДляЗаполнения(ДокументСсылка, Организация, ПериодРегистрации, РасчетныйПериод, ДополнительныеДанныеОДоходах = Неопределено) Экспорт 	
	
	ОкончаниеПериодаРасчета = ?(Год(ПериодРегистрации) = РасчетныйПериод, ПериодРегистрации, Дата(РасчетныйПериод, 12, 1));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходахСтраховыеВзносы
	|ГДЕ
	|	СведенияОДоходахСтраховыеВзносы.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И СведенияОДоходахСтраховыеВзносы.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И СведенияОДоходахСтраховыеВзносы.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&Ссылки)";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ОкончаниеПериодаРасчета));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ОкончаниеПериодаРасчета));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Ссылки", ДополнительныеДанныеОДоходах.ВыгрузитьКолонку("ФизическоеЛицо"));
	Запрос.Выполнить();
	
	НаборыЗаписей = ЗарплатаКадры.НаборыЗаписейРегистратора(Метаданные.Документы.ПерерасчетСтраховыхВзносов);
	
	НачатьТранзакцию();
	
	УстановитьПривилегированныйРежим(Истина);
	УчетСтраховыхВзносов.СформироватьДоходыСтраховыеВзносы(НаборыЗаписей, Неопределено, Организация, ПериодРегистрации, ДополнительныеДанныеОДоходах, Истина);
	Взносы = УчетСтраховыхВзносов.РассчитатьВзносы(ДокументСсылка, Организация, ОкончаниеПериодаРасчета, Запрос.МенеджерВременныхТаблиц, Истина, КонецМесяца(ПериодРегистрации));
	УстановитьПривилегированныйРежим(Ложь);
	
	ОтменитьТранзакцию();
	
	ДанныеДляЗаполнения = Новый Структура;
	ДанныеДляЗаполнения.Вставить("СведенияОДоходах");
	ДанныеДляЗаполнения.Вставить("Взносы", Взносы);
	
	Возврат ДанныеДляЗаполнения;
		
КонецФункции	

Процедура ПоместитьДанныеДляЗаполненияВДанныеДокумента(ДанныеДокумента, ДанныеДляЗаполнения) Экспорт
	
	Для Каждого СтрокаДанныхЗаполнения Из ДанныеДляЗаполнения.Взносы Цикл
		СтрокаТаблицыДокумента = ДанныеДокумента.Взносы.Добавить();	
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, СтрокаДанныхЗаполнения);
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ДанныеДляЗаполнения.СведенияОДоходах) Тогда
		Для Каждого СтрокаДанныхЗаполнения Из ДанныеДляЗаполнения.СведенияОДоходах Цикл
			СтрокаТаблицыДокумента = ДанныеДокумента.СведенияОДоходах.Добавить();	
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, СтрокаДанныхЗаполнения);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область ПроцедурыИФункцииДляЗаполненияДанныхДокументаСПомощьюМеханизмаДлительныхОпераций

Функция ПараметрыДляПолученияДанныхЗаполнения() Экспорт
	Возврат Новый Структура("Ссылка, Организация, ПериодРегистрации, РасчетныйПериод, ДополнительныеДанныеОДоходах");	
КонецФункции	

Процедура ПодготовитьДанныеДляЗаполнения(ПараметрыПолученияДанных, АдресХранилища) Экспорт
	
	РезультатЗаполнения = Новый Структура;
	
	ДанныеЗаполнения = ДанныеДляЗаполнения(
							ПараметрыПолученияДанных.Ссылка, 
							ПараметрыПолученияДанных.Организация, 
							ПараметрыПолученияДанных.ПериодРегистрации, 
							ПараметрыПолученияДанных.РасчетныйПериод,
							ПараметрыПолученияДанных.ДополнительныеДанныеОДоходах); 
	
	РезультатЗаполнения.Вставить("ДанныеДляЗаполненияТаблицДокумента", ДанныеЗаполнения);
	
	ПоместитьВоВременноеХранилище(РезультатЗаполнения, АдресХранилища);
	
КонецПроцедуры	

Процедура ДанныеДляЗаполненияИзВременногоХранилищаВДанныеДокумента(ДанныеДокумента, АдресХранилища) Экспорт
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	ПоместитьДанныеДляЗаполненияВДанныеДокумента(ДанныеДокумента, Результат.ДанныеДляЗаполненияТаблицДокумента);
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецЕсли