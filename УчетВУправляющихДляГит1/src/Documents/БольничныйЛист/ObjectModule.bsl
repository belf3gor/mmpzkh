#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.СведенияОбЭЛН.ПередЗаписьюБольничного(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ПрямыеВыплатыПособийСоциальногоСтрахования.ПередЗаписьюБольничного(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	РасчетЗарплатыДляНебольшихОрганизацийСобытия.ДокументыПередЗаписью(ЭтотОбъект, Отказ);
	
	ПособиеВыплачиваетсяФСС = ПрямыеВыплатыПособийСоциальногоСтрахования.ПособиеПлатитУчастникПилотногоПроекта(Организация, ПериодРегистрации)
		И ПрямыеВыплатыПособийСоциальногоСтрахования.КоллекцияСодержитПособияЗаСчетФСС(Начисления.ВыгрузитьКолонку("Начисление"));
	
	Начислено = Начисления.Итог("Результат");
	Удержано = Удержано + НДФЛ.Итог("Налог");
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	РегистрыСведений.СведенияОбЭЛН.ПриЗаписиБольничного(ЭтотОбъект);
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	РегистрыСведений.СведенияОбЭЛН.ПередУдалениемБольничного(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	// Заполним описание данных для проведения в учете начисленной зарплаты.
	ДанныеДляПроведенияУчетЗарплаты = ОтражениеЗарплатыВУчете.ОписаниеДанныеДляПроведения();
	ДанныеДляПроведенияУчетЗарплаты.Движения 				= Движения;
	ДанныеДляПроведенияУчетЗарплаты.Организация 			= Организация;
	ДанныеДляПроведенияУчетЗарплаты.ПериодРегистрации 		= ПериодРегистрации;
	ДанныеДляПроведенияУчетЗарплаты.ПорядокВыплаты 			= Перечисления.ХарактерВыплатыЗарплаты.Зарплата;
	ДанныеДляПроведенияУчетЗарплаты.МенеджерВременныхТаблиц = ДанныеДляПроведения.МенеджерВременныхТаблиц;
	
	УчетНачисленнойЗарплаты.ЗарегистрироватьНачисления(ДанныеДляПроведенияУчетЗарплаты, Отказ, ДанныеДляПроведения.НачисленияПоСотрудникам, Неопределено);
	УчетНачисленнойЗарплаты.ЗарегистрироватьОтработанноеВремя(ДанныеДляПроведенияУчетЗарплаты, Отказ, ДанныеДляПроведения.ОтработанноеВремяПоСотрудникам, Истина);
	
	// НДФЛ
	СформироватьДоходыНДФЛ(Отказ, ДанныеДляПроведения);
	
	ДатаОперации = ДатаОперацииПоНалогомИВзносам();
	УчетНДФЛ.СформироватьНалогиВычеты(Движения, Отказ, Организация, ДатаОперации, ДанныеДляПроведения.НДФЛ, , Ложь);
	УчетНДФЛ.СформироватьДокументыУчтенныеПриРасчетеДляМежрасчетногоДокумента(Движения, Отказ, Организация, ФизическоеЛицо, Ссылка);
	
	УчетНачисленнойЗарплаты.ПодготовитьДанныеНДФЛКРегистрации(ДанныеДляПроведения.НДФЛ, Организация, ДатаОперации);
	УчетНачисленнойЗарплаты.ЗарегистрироватьНДФЛИКорректировкиВыплаты(ДанныеДляПроведенияУчетЗарплаты, Отказ, ДанныеДляПроведения.НДФЛ, ДанныеДляПроведения.КорректировкиВыплаты);
	
	// Страховые взносы
	ОтражениеЗарплатыВБухучете.СоздатьВТНачисленияСДаннымиЕНВД(Организация, ПериодРегистрации, ДанныеДляПроведения.МенеджерВременныхТаблиц, ДанныеДляПроведения.НачисленияПоСотрудникам);
	УчетСтраховыхВзносов.СформироватьСведенияОДоходахСтраховыеВзносы(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.МенеджерВременныхТаблиц, , Истина);
	
	// - регистрация пособий
	УчетСтраховыхВзносов.СформироватьПособия(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.Пособия, Неопределено);
	
	УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрацииВУчетаСтажаПФР());

	Если Не Отказ Тогда
		
		// формирование проводок
		ДанныеДляПроведения = ОтражениеЗарплатыВУчете.НоваяСтруктураРезультатыРасчетаЗарплаты();
		ДанныеДляПроведения.НачисленияУдержания = Движения.НачисленияУдержанияПоСотрудникам.Выгрузить();
		СтрокаСписокТаблиц = "НачисленнаяЗарплатаИВзносы, НачисленныйНДФЛ";
		ОтражениеЗарплатыВБухучете.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

// В качестве данных заполнения может принимать структуру с полями.
//		Ссылка
//		Действие
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.БольничныйЛист") Тогда
		ЭтотОбъект.ЯвляетсяПродолжениемБолезни = Истина;
		ЭтотОбъект.ПервичныйБольничныйЛист = ДанныеЗаполнения;
		ЗаполнитьПоПервичномуБольничномуЛисту(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьДатуВыплаты(ЭтотОбъект, Отказ);
	ПроверитьВыплатуПособийУчастникомПроектаПоПрямымВыплатамФСС(Отказ);
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачала, "Объект.ДатаНачала", Отказ,
		НСтр("ru='Начало периода болезни'"));
	
	Если ДатаОкончания < ДатаНачала Тогда
		
		ТекстСообщения = НСтр("ru  = 'Окончание периода болезни не может быть ранее ее начала'"); 
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.ДатаОкончания", , Отказ);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
		
		ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНарушенияРежима, "Объект.ДатаНарушенияРежима", Отказ,
			НСтр("ru='Дата нарушения режима'"), ДатаНачала, НСтр("ru='даты начала болезни'"));
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерЛисткаНетрудоспособности");
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = РасчетЗарплаты.СоздатьДанныеДляПроведенияНачисленияЗарплаты();
	
	РасчетЗарплаты.ЗаполнитьНачисления(ДанныеДляПроведения, Ссылка, , "ДатаНачала");
	РасчетЗарплаты.ЗаполнитьДанныеНДФЛ(ДанныеДляПроведения, Ссылка);
	РасчетЗарплаты.ЗаполнитьДанныеКорректировкиВыплаты(ДанныеДляПроведения, Ссылка);
	ЗаполнитьСведенияОПособиях(ДанныеДляПроведения);
	
	// Заполнение отработанного времени
	Для каждого СтрокаРабочегоВремени Из ДанныеДляПроведения.ОтработанноеВремяПоСотрудникам Цикл
		СтрокаРабочегоВремени.ОтработаноДней = СтрокаРабочегоВремени.ОплаченоДней;
		СтрокаРабочегоВремени.ОтработаноЧасов = СтрокаРабочегоВремени.ОплаченоЧасов;
	КонецЦикла;
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура ЗаполнитьСведенияОПособиях(ДанныеДляПроведения)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеДляПроведения.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНачислений.Ссылка КАК Ссылка,
		|	ТаблицаНачислений.Начисление КАК Начисление,
		|	ТаблицаНачислений.Сотрудник КАК Сотрудник,
		|	ТаблицаНачислений.ОплаченоДней КАК ОплаченоДней,
		|	ТаблицаНачислений.Результат КАК Результат,
		|	ТаблицаНачислений.РезультатВТомЧислеЗаСчетФБ КАК РезультатВТомЧислеЗаСчетФБ,
		|	ТаблицаНачислений.Ссылка.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТНачисленияДляУчетаПособий
		|ИЗ
		|	Документ.БольничныйЛист.Начисления КАК ТаблицаНачислений
		|ГДЕ
		|	ТаблицаНачислений.Ссылка = &Ссылка
		|	И ТаблицаНачислений.Начисление.КатегорияНачисленияИлиНеоплаченногоВремени В(&КатегорииПособий)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БольничныйЛистНачисления.Сотрудник КАК Сотрудник,
		|	БольничныйЛистНачисления.ДатаНачалаСобытия КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТНачисленияДляУчетаПособий КАК БольничныйЛистНачисления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ПособиеПлатитУчастникПилотногоПроекта = ПрямыеВыплатыПособийСоциальногоСтрахования.ПособиеПлатитУчастникПилотногоПроекта(Организация, ПериодРегистрации);
	
	КатегорииПособий = Новый Массив;
	
	Если Не ПособиеПлатитУчастникПилотногоПроекта Тогда
		КатегорииПособий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
		КатегорииПособий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
		КатегорииПособий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
		КатегорииПособий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	КонецЕсли;
	
	КатегорииПособий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя);
	
	Запрос.УстановитьПараметр("КатегорииПособий", КатегорииПособий);
	
	Запрос.Выполнить();
	
	ОписательТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	ОписательТаблиц.ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковПособий";
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательТаблиц, Истина, "ВидЗанятости");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаВзрослым)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Карантин)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Протезирование)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПособиеПриДолечивании)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.БеременностьРоды)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Профзаболевание)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаРебенком)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПустаяСсылка)
		|	КОНЕЦ КАК ВидПособияСоциальногоСтрахования,
		|	ТаблицаНачислений.Ссылка КАК Ссылка,
		|	ТаблицаНачислений.Сотрудник КАК Сотрудник,
		|	СУММА(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
		|				ТОГДА 0
		|			ИНАЧЕ ТаблицаНачислений.ОплаченоДней
		|		КОНЕЦ) КАК ОплаченныеДни,
		|	СУММА(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
		|				ТОГДА 0
		|			ИНАЧЕ ТаблицаНачислений.Результат
		|		КОНЕЦ) КАК СуммаВсего,
		|	СУММА(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
		|				ТОГДА 0
		|			ИНАЧЕ ТаблицаНачислений.РезультатВТомЧислеЗаСчетФБ
		|		КОНЕЦ) КАК СуммаСверхНорм,
		|	СУММА(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
		|				ТОГДА ТаблицаНачислений.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаФинансируемаяРаботодателем,
		|	ТаблицаНачислений.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТСвернутыеНачисленияДляУчетаПособий
		|ИЗ
		|	ВТНачисленияДляУчетаПособий КАК ТаблицаНачислений
		|ГДЕ
		|	НЕ ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.БеременностьРоды)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Профзаболевание)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
		|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПустаяСсылка)
		|	КОНЕЦ,
		|	ТаблицаНачислений.Ссылка,
		|	ТаблицаНачислений.Сотрудник,
		|	ТаблицаНачислений.ДатаНачалаСобытия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНачислений.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования,
		|	ТаблицаНачислений.Сотрудник КАК Сотрудник,
		|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеДанныеСотрудников.ВидЗанятости КАК ВидЗанятости,
		|	БольничныйЛист.ФинансированиеФедеральнымБюджетом КАК ФинансированиеФедеральнымБюджетом,
		|	БольничныйЛист.ДатаНачалаСобытия КАК ДатаСтраховогоСлучая,
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаНачислений.ОплаченныеДни = 0
		|				ТОГДА 0
		|			КОГДА БольничныйЛист.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
		|					И ДОБАВИТЬКДАТЕ(БольничныйЛист.ДатаНачалаСобытия, ДЕНЬ, 3) >= БольничныйЛист.ДатаНачалаОплаты
		|					И ДОБАВИТЬКДАТЕ(БольничныйЛист.ДатаНачалаСобытия, ДЕНЬ, 3) <= БольничныйЛист.ДатаОкончанияОплаты
		|				ТОГДА 1
		|			КОГДА БольничныйЛист.ПричинаНетрудоспособности <> ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
		|					И БольничныйЛист.ДатаНачалаСобытия = БольничныйЛист.ДатаНачалаОплаты
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтраховыеСлучаи,
		|	СУММА(ТаблицаНачислений.ОплаченныеДни) КАК ОплаченныеДни,
		|	СУММА(ТаблицаНачислений.СуммаВсего) КАК СуммаВсего,
		|	СУММА(ТаблицаНачислений.СуммаСверхНорм) КАК СуммаСверхНорм,
		|	СУММА(ТаблицаНачислений.СуммаФинансируемаяРаботодателем) КАК СуммаФинансируемаяРаботодателем
		|ИЗ
		|	ВТСвернутыеНачисленияДляУчетаПособий КАК ТаблицаНачислений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
		|		ПО ТаблицаНачислений.Ссылка = БольничныйЛист.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудниковПособий КАК КадровыеДанныеСотрудников
		|		ПО ТаблицаНачислений.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
		|			И ТаблицаНачислений.ДатаНачалаСобытия = КадровыеДанныеСотрудников.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНачислений.ВидПособияСоциальногоСтрахования,
		|	БольничныйЛист.ФинансированиеФедеральнымБюджетом,
		|	ТаблицаНачислений.Сотрудник,
		|	БольничныйЛист.ДатаНачалаСобытия,
		|	КадровыеДанныеСотрудников.ФизическоеЛицо,
		|	КадровыеДанныеСотрудников.ВидЗанятости";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеДляПроведения.МенеджерВременныхТаблиц;
	
	ДанныеДляПроведения.Вставить("Пособия", Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура ЗаполнитьПоПервичномуБольничномуЛисту(ДокументСсылка) Экспорт 
	
	ДанныеПервичногоБольничногоЛиста = Документы.БольничныйЛист.ДанныеПервичногоБольничногоЛиста(ДокументСсылка, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЭтотОбъект.Ссылка));
	
	ЗаполняемыеДанные = "Организация";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "Сотрудник";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПричинаНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачала";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНарушенияРежима";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "НазначитьПособие";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПрименятьЛьготыПриНачисленииПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ФинансированиеФедеральнымБюджетом";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплатыБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособияБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаСобытия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СлучайУходаЗаБольнымРебенком";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "НомерПервичногоЛисткаНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаПоловиннойОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РайонныйКоэффициентРФНаНачалоСобытия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаПервыйГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаВторойГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СреднийДневнойЗаработок";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "КодНарушенияРежима";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажЛет";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажМесяцев";
	
	Если ДанныеПервичногоБольничногоЛиста <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПервичногоБольничногоЛиста, ЗаполняемыеДанные);
		Если НазначитьПособие Тогда
			ДатаНачалаОплаты = ДатаНачала;
			Если ДатаОкончанияОплаты < ДатаНачалаОплаты Тогда
				ДатаОкончанияОплаты = Макс(ДатаОкончания, ДатаНачалаОплаты);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	СреднийЗаработокФСС.Очистить();
	ОтработанноеВремяДляСреднегоФСС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	БольничныйЛистСреднийЗаработокФСС.ФизическоеЛицо,
		|	БольничныйЛистСреднийЗаработокФСС.Период,
		|	БольничныйЛистСреднийЗаработокФСС.Сумма
		|ИЗ
		|	Документ.БольничныйЛист.СреднийЗаработокФСС КАК БольничныйЛистСреднийЗаработокФСС
		|ГДЕ
		|	БольничныйЛистСреднийЗаработокФСС.Ссылка = &Ссылка";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СреднийЗаработокФСС.Добавить(), Выборка);
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ФизическоеЛицо,
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.Период,
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ДнейБолезниУходаЗаДетьми
		|ИЗ
		|	Документ.БольничныйЛист.ОтработанноеВремяДляСреднегоФСС КАК БольничныйЛистОтработанноеВремяДляСреднегоФСС
		|ГДЕ
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОтработанноеВремяДляСреднегоФСС.Добавить(), Выборка);
	КонецЦикла;
	
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетАмбулаторно 
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетВСтационаре	Тогда
		
		ДлинаСуток = 24 * 60 * 60;
		
		Если ДатаНачалаСобытия <> ДатаНачалаОплаты Тогда
			ОплаченоРанее = (ДатаНачалаОплаты - ДатаНачалаСобытия) / ДлинаСуток;
		Иначе
			ОплаченоРанее = 0;
		КонецЕсли;
		
		МаксимальноеКоличествоОплачиваемыхДней = Документы.БольничныйЛист.МаксимальноеКоличествоОплачиваемыхДнейПоПричинеНетрудоспособности(ПричинаНетрудоспособности, СлучайУходаЗаБольнымРебенком);
		Если Не МаксимальноеКоличествоОплачиваемыхДней = Неопределено Тогда
			
			ДнейОплаты = Макс(МаксимальноеКоличествоОплачиваемыхДней - ОплаченоРанее,0);
			
			Если ДнейОплаты > 0 И ЗначениеЗаполнено(ДатаНачалаОплаты) Тогда
				НазначитьПособие    = Истина;
				ДатаОкончанияОплаты = ДатаНачалаОплаты + (ДнейОплаты - 1) * ДлинаСуток;
			Иначе
				НазначитьПособие    = Ложь;
				ДатаНачалаОплаты    = Неопределено;
				ДатаОкончанияОплаты = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеДляРегистрацииВУчетаСтажаПФР()
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ДанныеДляРегистрацииВУчете = Документы.БольничныйЛист.ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок);
		
	Возврат ДанныеДляРегистрацииВУчете[Ссылка];
														
КонецФункции	

Процедура ПроверитьВыплатуПособийУчастникомПроектаПоПрямымВыплатамФСС(Отказ)
	
	ЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект = ПрямыеВыплатыПособийСоциальногоСтрахования.ЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект(Организация, ПериодРегистрации);
	Если ЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект Тогда
		ТекстСообщения = ПрямыеВыплатыПособийСоциальногоСтрахования.ТекстСообщенияЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект(Организация);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.Организация" , , Отказ);
	Иначе
		
		ВыплачиваемыеПособия = Начисления.Выгрузить(, "Начисление, Результат");
		ВыплачиваемыеПособия.Свернуть("Начисление", "Результат");
		
		ВыплачиваемыеПособияДляПроверки = ПрямыеВыплатыПособийСоциальногоСтрахования.ПустаяТаблицаДляПроверкиОплатыПособийУчастникомПилотногоПроектаФСС();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВыплачиваемыеПособия, ВыплачиваемыеПособияДляПроверки);
		
		Ошибка = ПрямыеВыплатыПособийСоциальногоСтрахования.ПроверитьОплатуПособийУчастникомПилотногоПроектаФСС(Организация, ПериодРегистрации, ВыплачиваемыеПособияДляПроверки);
		Если ЗначениеЗаполнено(Ошибка) Тогда
			ОбщегоНазначения.СообщитьПользователю(Ошибка, , "МесяцНачисленияСтрокой", , Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДоходыНДФЛ(Отказ = Ложь, ДанныеДляПроведения = Неопределено) Экспорт
	
	Если ДанныеДляПроведения = Неопределено Тогда
		ДанныеДляПроведения = ДанныеДляПроведения();
	КонецЕсли; 
	
	ДатаОперации = ДатаОперацииПоНалогомИВзносам();
	УчетНДФЛ.СформироватьДоходыНДФЛПоНачислениям(
		Движения, Отказ, Организация, ДатаОперации, ПланируемаяДатаВыплаты, ДанныеДляПроведения.МенеджерВременныхТаблиц, ПериодРегистрации, Ложь, Ложь, , Ссылка);
	
КонецПроцедуры

Функция ДатаОперацииПоНалогомИВзносам()
	Возврат УчетНДФЛ.ДатаОперацииПоДокументу(Дата, ПериодРегистрации);
КонецФункции

#КонецОбласти

#КонецЕсли
