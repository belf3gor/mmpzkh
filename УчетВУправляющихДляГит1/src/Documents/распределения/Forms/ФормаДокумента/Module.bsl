#Область заполнение	
Функция ЗаполнитьПоЛифтам()
	
	лифт = Справочники.КВП_ВидыБлагоустройстваОбъектов.Лифт;
	Запрос = Новый запрос;
	запрос.Текст="ВЫБРАТЬ
	|	КВП_БлагоустройствоОбъектов.Объект КАК Объект,
	|	КВП_БлагоустройствоОбъектов.ВидБлагоустройства КАК ВидБлагоустройства,
	|	КВП_БлагоустройствоОбъектов.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.КВП_БлагоустройствоОбъектов КАК КВП_БлагоустройствоОбъектов
	|ГДЕ
	|	КВП_БлагоустройствоОбъектов.ВидБлагоустройства = &ВидБлагоустройства";
	
	Запрос.УстановитьПараметр("ВидБлагоустройства", лифт);
	
	результат = Запрос.Выполнить();
	
	Выборка = результат.Выбрать();
	КолПрМат = Выборка.Количество();
	стЗатраты = новый Массив();
	стЗатраты.Добавить("ОбщеПроизводственные");
	стЗатраты.Добавить("Общехозяйственные");
	стЗатраты.Добавить("Прочие");
	стЗатраты.Добавить("Прочие Материалы");
	Пока Выборка.Следующий() Цикл
		Для каждого стр из стЗатраты Цикл 
			НоваяСтрока = ВременнаяТаблица.Добавить();
			НоваяСтрока.ОбъектУчета = Выборка.Объект;
			НоваяСтрока.ЗатратыНа = Выборка.ВидБлагоустройства;
			НоваяСтрока.СтЗатрат = стр;
			НоваяСтрока.Сумма = Выборка.Значение;
			НоваяСтрока.ЕдИзмерения = "шт";
		КонецЦикла;
	КонецЦикла;
	
	ТЗ = заполнитьТЗ();
	
	//ТаблЗнач = Объект.НаборЗаписей.Выгрузить();
	
	Для Каждого Стр из ВременнаяТаблица Цикл
		Если Стр.СтЗатрат =  "Оплата труда" тогда
			Стр.ПослеРаспределения = Стр.Сумма / ТЗ[1].Сумма * СуммаОплатаТруда;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "ОбщеПроизводственные" тогда
			Стр.ПослеРаспределения =Стр.Сумма / ТЗ[3].Сумма * СуммаОбщепроизводственные;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "Общехозяйственные" тогда
			Стр.ПослеРаспределения =Стр.Сумма / ТЗ[4].Сумма * СуммаОбщехозяйственные;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "Прочие" тогда
			Стр.ПослеРаспределения  = Стр.Сумма / ТЗ[5].Сумма * СуммаПрочие;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "Транспортные Расходы" тогда
			Если ТЗ[2].Сумма <> 0 тогда 
				
				Стр.ПослеРаспределения  = Стр.Сумма / ТЗ[2].Сумма * СуммаТрРасходы;
				Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
			КонецЕсли;	
		ИначеЕсли  Стр.СтЗатрат =  "Материальные расходы" тогда
			Стр.ПослеРаспределения  = Стр.Сумма;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения;
		ИначеЕсли  Стр.СтЗатрат =  "Прочие Материалы" тогда
			Стр.ПослеРаспределения  =  (СуммаМат - ТЗ[0].Сумма) / КолПрМат ;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения;
		Иначе

			сообщить(Стр.СтЗатрат);
			
		КонецЕсли
	КонецЦикла;
	ТЗвОснТаб();
	//Для каждого стр из Объект.Основное цикл
	//	стр.Разница = стр.Итого - стр.Сумма;
	//КонецЦикла
	
	
КонецФункции

Функция ЗаполнитьПоЭлек()
	
	лифт = Справочники.КВП_ВидыБлагоустройстваОбъектов.Лифт;
	Запрос = Новый запрос;
	запрос.Текст="ВЫБРАТЬ
	             |	КВП_Здания.Ссылка,
	             |	КВП_Здания.ОбщаяПлощадьЗданияПоПаспорту,
	             |	КВП_Здания.ПлощадьЗданияОбщая
	             |ИЗ
	             |	Справочник.КВП_Здания КАК КВП_Здания
	             |ГДЕ
	             |	(КВП_Здания.ПолеВупр = &ПолеВупр
	             |			ИЛИ КВП_Здания.ПолеВупр = &ПолеВупр1)";
	
	Запрос.УстановитьПараметр("ПолеВупр", Перечисления.ЗданияВУпр.ВУправлении);
	Запрос.УстановитьПараметр("ПолеВупр1", Перечисления.ЗданияВУпр.ВОбслуживание);
	
	результат = Запрос.Выполнить();
	
	Выборка = результат.Выбрать();
	КолПрМат = Выборка.Количество();
	стЗатраты = новый Массив();
	стЗатраты.Добавить("ОбщеПроизводственные");
	стЗатраты.Добавить("Общехозяйственные");
	стЗатраты.Добавить("Прочие");
	стЗатраты.Добавить("Прочие Материалы");
	Пока Выборка.Следующий() Цикл
		Для каждого стр из стЗатраты Цикл 
			НоваяСтрока = ВременнаяТаблица.Добавить();
			НоваяСтрока.ОбъектУчета = Выборка.ссылка;
			НоваяСтрока.ЗатратыНа = "управление";
			НоваяСтрока.СтЗатрат = стр;
			НоваяСтрока.Сумма = Выборка.ПлощадьЗданияОбщая;
			НоваяСтрока.ЕдИзмерения = "м*2";
		КонецЦикла;
	КонецЦикла;
	
	ТЗ = заполнитьТЗ();
	
	//ТаблЗнач = Объект.НаборЗаписей.Выгрузить();
	
	Для Каждого Стр из ВременнаяТаблица Цикл
		Если Стр.СтЗатрат =  "Оплата труда" тогда
			Стр.ПослеРаспределения = Стр.Сумма / ТЗ[1].Сумма * СуммаОплатаТруда;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "ОбщеПроизводственные" тогда
			Стр.ПослеРаспределения =Стр.Сумма / ТЗ[3].Сумма * СуммаОбщепроизводственные;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "Общехозяйственные" тогда
			Стр.ПослеРаспределения =Стр.Сумма / ТЗ[4].Сумма * СуммаОбщехозяйственные;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "Прочие" тогда
			Стр.ПослеРаспределения  = Стр.Сумма / ТЗ[5].Сумма * СуммаПрочие;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
		ИначеЕсли Стр.СтЗатрат =  "Транспортные Расходы" тогда
			Если ТЗ[2].Сумма <> 0 тогда 
				
				Стр.ПослеРаспределения  = Стр.Сумма / ТЗ[2].Сумма * СуммаТрРасходы;
				Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
			КонецЕсли;	
		ИначеЕсли  Стр.СтЗатрат =  "Материальные расходы" тогда
			Стр.ПослеРаспределения  = Стр.Сумма;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения;
		ИначеЕсли  Стр.СтЗатрат =  "Прочие Материалы" тогда
			Стр.ПослеРаспределения  =  (СуммаМат - ТЗ[0].Сумма) / КолПрМат ;
			Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения;
		Иначе

			сообщить(Стр.СтЗатрат);
			
		КонецЕсли
	КонецЦикла;
	ТЗвОснТаб();
	//Для каждого стр из Объект.Основное цикл
	//	стр.Разница = стр.Итого - стр.Сумма;
	//КонецЦикла
	
	
КонецФункции

&НаКлиенте
Процедура заполнитьТЗПоТипамЗатрат(Команда) 
    заполнитьТЗ();
	 
	КонецПроцедуры

&НаСервере
Процедура заполнитьНаСервере()
	

		заполнитьВрмТаб();
	Если объект.Подразделение.Наименование = "АРС участок лифтового хозяйства Кондопога " Тогда
		ЗаполнитьПоЛифтам();
	ИначеЕсли объект.Подразделение.Наименование ="АРС электро-эксплуатационный участок" тогда
		ЗаполнитьПоЭлек();
	КонецЕсли;
		ТЗвОснТаб();



КонецПроцедуры

&НаСервере
Процедура заполнитьВрмТаб()
	
	
	НомГр = объект.НоменклатурнаяГруппа;
	подразделение = объект.Подразделение;
	Запрос = Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	|	ВыполнениеРабот.ОбъектУчета КАК ОбъектУчета,
	|	ВыполнениеРабот.СтЗатрат КАК СтЗатрат,
	|	СУММА(ВыполнениеРабот.Сумма) КАК Сумма,
	|	ВыполнениеРабот.ВидРабот КАК ВидРабот,
	|	ВыполнениеРабот.КатегорияРабот КАК КатегорияРабот,
	|	ВыполнениеРабот.дата КАК дата,
	|	ВыполнениеРабот.Организация КАК Организация,
	|	ВыполнениеРабот.НомерНаряда КАК НомерНаряда,
	|	ВыполнениеРабот.Количество КАК Количество,
	|	ВыполнениеРабот.МестоПроведенияРабот КАК МестоПроведенияРабот,
	|	ВыполнениеРабот.Цена КАК Цена,
	|	ВыполнениеРабот.ЗатратыНа КАК ЗатратыНа,
	|	ВыполнениеРабот.ФИО КАК ФИО,
	|	ВыполнениеРабот.ЕдИзмерения КАК ЕдИзмерения,
	|	ВыполнениеРабот.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение1,
	|	ВложенныйЗапрос.КатегорияРабот КАК КатегорияРабот1,
	|	ВложенныйЗапрос.НомГруппа КАК НомГруппа
	|ИЗ
	|	РегистрНакопления.ВыполнениеРабот КАК ВыполнениеРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СоответствиеПодразделений.Подразделение КАК Подразделение,
	|			СоответствиеПодразделений.КатегорияРабот КАК КатегорияРабот,
	|			СоответствиеПодразделений.НомГруппа КАК НомГруппа
	|		ИЗ
	|			Справочник.СоответствиеПодразделений КАК СоответствиеПодразделений) КАК ВложенныйЗапрос
	|		ПО (ВыполнениеРабот.Подразделение = ВложенныйЗапрос.Подразделение)
	|			И (ВыполнениеРабот.КатегорияРабот = ВложенныйЗапрос.КатегорияРабот)
	|ГДЕ
	|	ВыполнениеРабот.Подразделение = &Подразделение
	|	И ВыполнениеРабот.дата МЕЖДУ НАЧАЛОПЕРИОДА(&дата1, ДЕНЬ) И КОНЕЦПЕРИОДА(&дата2, ДЕНЬ)
	|	И ВложенныйЗапрос.НомГруппа = &НомГруппа
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыполнениеРабот.ОбъектУчета,
	|	ВыполнениеРабот.ВидРабот,
	|	ВыполнениеРабот.КатегорияРабот,
	|	ВыполнениеРабот.СтЗатрат,
	|	ВыполнениеРабот.дата,
	|	ВыполнениеРабот.Организация,
	|	ВыполнениеРабот.НомерНаряда,
	|	ВыполнениеРабот.Количество,
	|	ВыполнениеРабот.МестоПроведенияРабот,
	|	ВыполнениеРабот.Цена,
	|	ВыполнениеРабот.ЗатратыНа,
	|	ВыполнениеРабот.ФИО,
	|	ВыполнениеРабот.ЕдИзмерения,
	|	ВыполнениеРабот.Подразделение,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.КатегорияРабот,
	|	ВложенныйЗапрос.НомГруппа";
	
	
	
		
		Дата1 = Объект.НачДата;	
		Дата2 = Объект.КонцДата;
		КатегорияРабот = Объект.КатРабот;
		Группа = Объект.ВидРабот;
		Запрос.УстановитьПараметр("Дата1", Дата1);
		Запрос.УстановитьПараметр("Дата2", Дата2);
		Запрос.УстановитьПараметр("НомГруппа",НомГр);
		Запрос.УстановитьПараметр("Подразделение", подразделение);


		результат = запрос.Выполнить().Выгрузить();
		ВременнаяТаблица.Загрузить(результат);
		
		
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТабБух(Команда)
	элм= ТабБухг.ПолучитьЭлементы();
	элм.Очистить();
	Если ВременнаяТаблица.Количество()< 1 Тогда
		 заполнитьНаСервере();
		 ЗаполнитьТабБухНаСервере();
	Иначе
		ЗаполнитьТабБухНаСервере();
	КонецЕсли;
	
	Для каждого Стр из ВременнаяТаблица Цикл
		КлючУникальности = Новый УникальныйИдентификатор;
		Стр.ID = КлючУникальности;
	КонецЦикла;

	КонецПроцедуры


&НаСервере
Процедура ЗаполнитьТабБухНаСервере()
//объект.ЛогиОшибок.Очистить();	


Запрос = Новый Запрос;
Если объект.Подразделение.Наименование = "АРС участок лифтового хозяйства Кондопога " Тогда
Запрос.Текст ="ВЫБРАТЬ
              |	ВложенныйЗапрос.ТипЗатрат КАК ТипЗатрат,
              |	ХозрасчетныйОбороты.Счет КАК Счет,
              |	ХозрасчетныйОбороты.Субконто2 КАК Субконто2,
              |	ХозрасчетныйОбороты.КорСубконто1,
              |	ХозрасчетныйОбороты.Субконто1 КАК статьяЗатрат,
              |	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
              |	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
              |	ХозрасчетныйОбороты.Субконто3,
              |	ХозрасчетныйОбороты.КорСубконто2,
              |	ХозрасчетныйОбороты.КорСубконто3,
              |	ХозрасчетныйОбороты.КорСчет,
              |	ХозрасчетныйОбороты.КоличествоКорОборот как количество
              |ИЗ
              |	РегистрБухгалтерии.Хозрасчетный.Обороты(НАЧАЛОПЕРИОДА(&Дата1, ДЕНЬ), КОНЕЦПЕРИОДА(&Дата2, ДЕНЬ), Запись, Счет = &Счет, , , , ) КАК ХозрасчетныйОбороты
              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
              |			СоответствиеСтатейЗатратИТиповЗАтрат.ТипЗатрат КАК ТипЗатрат,
              |			СоответствиеСтатейЗатратИТиповЗАтрат.статьяЗатрат КАК статьяЗатрат
              |		ИЗ
              |			Справочник.СоответствиеСтатейЗатратИТиповЗАтрат КАК СоответствиеСтатейЗатратИТиповЗАтрат) КАК ВложенныйЗапрос
              |		ПО (ВложенныйЗапрос.статьяЗатрат = ХозрасчетныйОбороты.Субконто2)
              |ГДЕ
              |	ХозрасчетныйОбороты.Подразделение = &Подразделение
              |
              |СГРУППИРОВАТЬ ПО
              |	ВложенныйЗапрос.ТипЗатрат,
              |	ХозрасчетныйОбороты.Счет,
              |	ХозрасчетныйОбороты.Субконто1,
              |	ХозрасчетныйОбороты.Субконто2,
              |	ХозрасчетныйОбороты.Подразделение,
              |	ХозрасчетныйОбороты.Субконто3,
              |	ХозрасчетныйОбороты.КорСубконто2,
              |	ХозрасчетныйОбороты.КорСубконто1,
              |	ХозрасчетныйОбороты.КорСубконто3,
              |	ХозрасчетныйОбороты.КорСчет,
              |	ХозрасчетныйОбороты.КоличествоКорОборот
              |
              |УПОРЯДОЧИТЬ ПО
              |	ТипЗатрат,
              |	Субконто2";

ИначеЕсли объект.Подразделение.Наименование ="АРС электро-эксплуатационный участок" тогда
	     Запрос.Текст ="ВЫБРАТЬ
              |	ВложенныйЗапрос.ТипЗатрат КАК ТипЗатрат,
              |	ХозрасчетныйОбороты.Счет КАК Счет,
              |	ХозрасчетныйОбороты.Субконто2 КАК Субконто2,
              |	ХозрасчетныйОбороты.КорСубконто1,
              |	ХозрасчетныйОбороты.Субконто1 КАК статьяЗатрат,
              |	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
              |	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
              |	ХозрасчетныйОбороты.Субконто3,
              |	ХозрасчетныйОбороты.КорСубконто2,
              |	ХозрасчетныйОбороты.КорСубконто3,
              |	ХозрасчетныйОбороты.КорСчет,
              |	ХозрасчетныйОбороты.КоличествоКорОборот как количество
              |ИЗ
              |	РегистрБухгалтерии.Хозрасчетный.Обороты(НАЧАЛОПЕРИОДА(&Дата1, ДЕНЬ), КОНЕЦПЕРИОДА(&Дата2, ДЕНЬ), Запись, Счет = &Счет, , , , ) КАК ХозрасчетныйОбороты
              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
              |			СоответствиеСтатейЗатратИТиповЗАтратЭлектрики.ТипЗатрат КАК ТипЗатрат,
              |			СоответствиеСтатейЗатратИТиповЗАтратЭлектрики.статьяЗатрат КАК статьяЗатрат
              |		ИЗ
              |			Справочник.СоответствиеСтатейЗатратИТиповЗАтратЭлектрики КАК СоответствиеСтатейЗатратИТиповЗАтратЭлектрики) КАК ВложенныйЗапрос
              |		ПО (ВложенныйЗапрос.статьяЗатрат = ХозрасчетныйОбороты.Субконто2)
              |ГДЕ
              |	ХозрасчетныйОбороты.Подразделение = &Подразделение
              |
              |СГРУППИРОВАТЬ ПО
              |	ВложенныйЗапрос.ТипЗатрат,
              |	ХозрасчетныйОбороты.Счет,
              |	ХозрасчетныйОбороты.Субконто1,
              |	ХозрасчетныйОбороты.Субконто2,
              |	ХозрасчетныйОбороты.Подразделение,
              |	ХозрасчетныйОбороты.Субконто3,
              |	ХозрасчетныйОбороты.КорСубконто2,
              |	ХозрасчетныйОбороты.КорСубконто1,
              |	ХозрасчетныйОбороты.КорСубконто3,
              |	ХозрасчетныйОбороты.КорСчет,
              |	ХозрасчетныйОбороты.КоличествоКорОборот
              |
              |УПОРЯДОЧИТЬ ПО
              |	ТипЗатрат,
              |	Субконто2";

КонецЕсли;



		Дата1 = Объект.НачДата;	
		Дата2 = Объект.КонцДата;
		НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
		Подразделение = Объект.Подразделение;
		Счет = Объект.Счет;
		Запрос.УстановитьПараметр("Дата1", Дата1);
        Запрос.УстановитьПараметр("Дата2", Дата2);
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		Запрос.УстановитьПараметр("Счет", Счет);
        Запрос.УстановитьПараметр("Субконто2", НоменклатурнаяГруппа);

	РезультатЗапроса = Запрос.Выполнить();
	
	тДерево = РеквизитФормыВЗначение("ТабБухг");
	Выборка = запрос.Выполнить().Выбрать();
	//Выгрузка = запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//СуммаПрочие	= 0;
	//СуммаТрРасходы =0;
	//СуммаОплатаТруда =0;
	//СуммаОбщепроизводственные =0;
	//СуммаОбщехозяйственные =0;
	//Материалы.СуммаОборотДт =0;
	
	Материалы = тДерево.Строки.Добавить();
	Материалы.ТипЗатрат = "Материалы";
	Материалы.Тип = "МатериалыВУр";
	ОплатаТруда = тДерево.Строки.Добавить();
	ОплатаТруда.ТипЗатрат = "Оплата Труда";
	ОплатаТруда.Тип = "ОплатаТрудаВУр";
	Общехозяйственные = тДерево.Строки.Добавить();
	Общехозяйственные.ТипЗатрат = "Общехозяйственные";
	Общехозяйственные.Тип = "ОбщехозяйственныеВУр";
	ОбщеПроизводственные = тДерево.Строки.Добавить();
	ОбщеПроизводственные.ТипЗатрат ="ОбщеПроизводственные";
	ОбщеПроизводственные.Тип ="ОбщеПроизводственныеВУр";
	Прочие = тДерево.Строки.Добавить();
	Прочие.ТипЗатрат = "Прочие";
	Прочие.Тип = "ПрочиеВУр";
	ТранспортныеРасходы = тДерево.Строки.Добавить();
	ТранспортныеРасходы.ТипЗатрат = "Транспортные Расходы";
	ТранспортныеРасходы.Тип = "ТранспортныеРасходыВУр";
	Итого = тДерево.Строки.Добавить();
	Итого.ТипЗатрат = "Итого";
	Итого.Тип = "ИтогоВУр";
	кол = 0;
  
	Пока выборка.Следующий() Цикл
		
		
		
		Если НЕ ЗначениеЗаполнено(выборка.ТипЗатрат)  тогда
			Если выборка.КорСчет.код = "10.01" или выборка.КорСчет.код = "10.03" или выборка.КорСчет.код = "10.09"    тогда
				нСтр2 = Материалы.Строки.Добавить();
				нСтр2.ТипЗатрат = выборка.КорСчет;
				нСтр2.СтатьяЗатрат =  Выборка.Субконто2;
				нСтр2.СуммаОборотДт = Выборка.СуммаОборотДт;
				нСтр2.КорСубконто1  = выборка.КорСубконто1;
				кол = 0;
				Для каждого Стр из ВременнаяТаблица цикл
					Если стр.ЗатратыНа = выборка.КорСубконто1.наименование Тогда
						нСтр2.Субконто2 = нСтр2.Субконто2 + " номер наряда " + стр.НомерНаряда + ", кол: " + Стр.количество + "/" + выборка.количество;
						Стр.ПослеРаспределения = Выборка.СуммаОборотДт / выборка.количество * Стр.количество; 
						кол = кол + Стр.количество;
					иначе
						нСтр2.булево = истина;
					КонецЕсли;
				КонецЦикла;
				Материалы.СуммаОборотДт = Материалы.СуммаОборотДт + Выборка.СуммаОборотДт;
				СуммаМат = Материалы.СуммаОборотДт;
				НоваяСтрока = Объект.ЛогиОшибок.Добавить();
				НоваяСтрока.тип = "Материал: " + нСтр2.КорСубконто1 + ", количество: " + кол + "/" + выборка.количество;
				
				нСтр2.Булево = истина;
				нСтр2.Тип    = "Материалы" ;
				      
			КонецЕсли; 
			
		ИначеЕсли выборка.ТипЗатрат.Наименование = "Материалы"   тогда
			нСтр2 = Материалы.Строки.Добавить();
			нСтр2.ТипЗатрат = выборка.КорСчет;
			нСтр2.СтатьяЗатрат =  Выборка.Субконто2;
			нСтр2.СуммаОборотДт = Выборка.СуммаОборотДт;
			нСтр2.КорСубконто1  = выборка.КорСубконто1;
			кол = 0;
			Для каждого Стр из ВременнаяТаблица цикл
				Если стр.ЗатратыНа = выборка.КорСубконто1.наименование Тогда
					нСтр2.Субконто2 = нСтр2.Субконто2 + " номер наряда " + стр.НомерНаряда + ", кол: " + Стр.количество + "/" + выборка.количество;
					//Стр.ПослеРаспределения = Выборка.СуммаОборотДт / выборка.количество * Стр.количество; 
					кол = кол + Стр.количество;
				иначе
					нСтр2.булево = истина;
				КонецЕсли;
			КонецЦикла;
			Материалы.СуммаОборотДт = Материалы.СуммаОборотДт + Выборка.СуммаОборотДт;
			СуммаМат = Материалы.СуммаОборотДт;
			НоваяСтрока = Объект.ЛогиОшибок.Добавить();
			НоваяСтрока.тип = "Материал: " + нСтр2.КорСубконто1 + ", количество: " + кол + "/" + выборка.количество;
			
			нСтр2.Булево = истина;
			нСтр2.Тип    = "Материалы" ;

		
	ИначеЕсли выборка.ТипЗатрат.Наименование = "Общехозяйственные" Тогда
		нСтр2 = Общехозяйственные.Строки.Добавить();
		нСтр2.ТипЗатрат = выборка.КорСчет;
		нСтр2.СтатьяЗатрат =  Выборка.Субконто2;
		нСтр2.СуммаОборотДт = Выборка.СуммаОборотДт;
		Общехозяйственные.СуммаОборотДт = Общехозяйственные.СуммаОборотДт + Выборка.СуммаОборотДт;
		СуммаОбщехозяйственные = Общехозяйственные.СуммаОборотДт;
		нСтр2.Булево = истина;
		нСтр2.Тип    = "Общехозяйственные" ;

	ИначеЕсли выборка.ТипЗатрат.Наименование = "Общепроизводственные" Тогда
		нСтр2 = ОбщеПроизводственные.Строки.Добавить();
		нСтр2.ТипЗатрат = выборка.КорСчет;
		нСтр2.СтатьяЗатрат =  Выборка.Субконто2;
		нСтр2.СуммаОборотДт = Выборка.СуммаОборотДт;
		ОбщеПроизводственные.СуммаОборотДт = ОбщеПроизводственные.СуммаОборотДт + Выборка.СуммаОборотДт;
		СуммаОбщепроизводственные = общеПроизводственные.СуммаОборотДт;
		нСтр2.Булево = истина;
		нСтр2.Тип    = "Общепроизводственные" ;

	ИначеЕсли выборка.ТипЗатрат.Наименование = "Оплата труда" Тогда
		нСтр2 = ОплатаТруда.Строки.Добавить();
		нСтр2.ТипЗатрат = выборка.КорСчет;
		нСтр2.СтатьяЗатрат =  Выборка.Субконто2;
		нСтр2.СуммаОборотДт = Выборка.СуммаОборотДт;
		ОплатаТруда.СуммаОборотДт = ОплатаТруда.СуммаОборотДт + Выборка.СуммаОборотДт;
		СуммаОплатаТруда = ОплатаТруда.СуммаОборотДт;
		нСтр2.Булево = истина;
		нСтр2.Тип    = "Оплата труда" ;

	ИначеЕсли выборка.ТипЗатрат.Наименование = "транспортные расходы" Тогда
		нСтр2 = ТранспортныеРасходы.Строки.Добавить();
		нСтр2.ТипЗатрат = выборка.КорСчет;
		нСтр2.СтатьяЗатрат =  Выборка.Субконто2;
		нСтр2.СуммаОборотДт = Выборка.СуммаОборотДт;
		ТранспортныеРасходы.СуммаОборотДт = ТранспортныеРасходы.СуммаОборотДт + Выборка.СуммаОборотДт;
		СуммаТрРасходы=ТранспортныеРасходы.СуммаОборотДт;
		нСтр2.Булево = истина;
		нСтр2.Тип    = "транспортные расходы" ;
	
	Иначе 
		нСтр2 = Прочие.Строки.Добавить();
		нСтр2.ТипЗатрат = выборка.КорСчет;
		нСтр2.СтатьяЗатрат =  Выборка.Субконто2;
		нСтр2.СуммаОборотДт = Выборка.СуммаОборотДт;
		нСтр2.КорСубконто1  = выборка.КорСубконто1;
		Прочие.СуммаОборотДт = Прочие.СуммаОборотДт + Выборка.СуммаОборотДт;
		СуммаПрочие = Прочие.СуммаОборотДт;
		нСтр2.Булево = истина;
		нСтр2.Тип    = "Прочие" ;

	КонецЕсли;
	
	
КонецЦикла;
Итого.СуммаОборотДт = СуммаПрочие + СуммаТрРасходы + СуммаОплатаТруда + СуммаОбщепроизводственные + СуммаОбщехозяйственные + Материалы.СуммаОборотДт;
//тДерево = Выгрузка;		  
ЗначениеВРеквизитФормы(тДерево,"ТабБухг");	
//
//ОбойтиУровеньДерева(тДерево.Строки);

	 
КонецПроцедуры


#КонецОбласти

Функция ПолучитьТЗ()
	ТабЗнч = новый ТаблицаЗначений;
	табЗнч.Колонки.Добавить("ОбъектУчета");
	табЗнч.Колонки.Добавить("СтЗатрат");
	табЗнч.Колонки.Добавить("Сумма");
	табЗнч.Колонки.Добавить("НомерНаряда");
	табЗнч.Колонки.Добавить("ВидРаботы");
	табЗнч.Колонки.Добавить("МестоПроведенияРабот");
	табЗнч.Колонки.Добавить("Организация");
	табЗнч.Колонки.Добавить("зтр");
	табЗнч.Колонки.Добавить("Количество");
	табЗнч.Колонки.Добавить("ID");
	табЗнч.Колонки.Добавить("ПослеРаспределения");
	табЗнч.Колонки.Добавить("разница");


	
	
	

	Для каждого Стр из ВременнаяТаблица цикл
		ТЗдобавить 				= ТабЗнч.Добавить();
		ТЗдобавить.ОбъектУчета  = Стр.ОбъектУчета;
		ТЗдобавить.СтЗатрат 	= Стр.СтЗатрат;
		ТЗдобавить.Сумма 		= Стр.Сумма;
		ТЗдобавить.ID 			= Стр.ID;
		ТЗдобавить.НомерНаряда  = Стр.НомерНаряда;
		ТЗдобавить.ВидРаботы    = Стр.ВидРабот;
		ТЗдобавить.МестоПроведенияРабот = Стр.МестоПроведенияРабот;
		ТЗдобавить.Организация  = Стр.Организация;
		ТЗдобавить.зтр          = Стр.ЗатратыНа;
		ТЗдобавить.Количество   = Стр.Количество;
		ТЗдобавить.ПослеРаспределения = Стр.ПослеРаспределения;
		ТЗдобавить.разница   = Стр.разница;
	КонецЦикла;
	
	возврат табЗнч;	
КонецФункции

&НаСервере
Функция заполнитьТЗ()
	
	ТЗ = новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ТипЗатрат");
	ТЗ.Колонки.Добавить("Сумма");
	ТЗ.Колонки.Добавить("Количество");
	

	Н = ТЗ.Добавить();
	Н.ТипЗатрат = "Материальные расходы";
	Н.Сумма = 0;
	Н.Количество =0;
	
	Н = ТЗ.Добавить();
	Н.ТипЗатрат = "Оплата труда";
	Н.Сумма = 0;
	Н.Количество = 0;

	Н = ТЗ.Добавить();
	Н.ТипЗатрат = "Транспортные Расходы";
	Н.Сумма = 0;
	Н.Количество = 0;
	
	Н = ТЗ.Добавить();
	Н.ТипЗатрат = "ОбщеПроизводственные";
	Н.Сумма = 0;
	Н.Количество = 0;
	
	Н = ТЗ.Добавить();
	Н.ТипЗатрат = "Общехозяйственные";
	Н.Сумма = 0;
	Н.Количество = 0;
	
	Н = ТЗ.Добавить();
	Н.ТипЗатрат = "Прочие";
	Н.Сумма = 0;
	Н.Количество = 0;
	
	Для Каждого Стр из ТЗ Цикл
		Для Каждого Стч из ВременнаяТаблица Цикл
			Если Стч.СтЗатрат = Стр.ТипЗатрат Тогда
				Стр.Сумма = Стр.Сумма + Стч.Сумма;
				Стр.Количество = Стр.Количество + Стч.Количество;
		    конецЕсли;
		КонецЦикла;
	КонецЦикла;
	    возврат ТЗ;
	КонецФункции

Процедура ТЗвОснТаб()
	ТабЗнч = новый ТаблицаЗначений;
	
	ОписаниеТ = Новый ОписаниеТипов("Число",
        Новый КвалификаторыЧисла(12, 3));
		
	табЗнч.Колонки.Добавить("ОбъектУчета");
	табЗнч.Колонки.Добавить("СтЗатрат");
	табЗнч.Колонки.Добавить("НомерНаряда");
	табЗнч.Колонки.Добавить("Сумма",ОписаниеТ);
	табЗнч.Колонки.Добавить("Итого",ОписаниеТ);
	табЗнч.Колонки.Добавить("Разница",ОписаниеТ);
	Для каждого Стр из ВременнаяТаблица цикл
		ТЗдобавить = ТабЗнч.Добавить();
		ТЗдобавить.ОбъектУчета = Стр.ОбъектУчета;
		ТЗдобавить.СтЗатрат = Стр.СтЗатрат;
		ТЗдобавить.Сумма = Стр.Сумма;
		ТЗдобавить.НомерНаряда = Стр.НомерНаряда;
		ТЗдобавить.Итого = Стр.ПослеРаспределения;
		ТЗдобавить.Разница = Стр.Разница;
	КонецЦикла;
	
	тДерево = РеквизитФормыВЗначение("ОсновноеДерево");
	
	ПЗ             = Новый ПостроительЗапроса;
   ПЗ.ИсточникДанных          = Новый ОписаниеИсточникаДанных(табЗнч);//передаем ТЗ
   ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
   ПЗ.ИсточникДанных.Колонки.ОбъектУчета.Измерение = Истина;
   ПЗ.ИсточникДанных.Колонки.СтЗатрат.Измерение = Истина;//по этой колонке идет группировка

    СтрукСуммирования = Новый Структура("Сумма, Итого, Разница");

        Для каждого Эл Из СтрукСуммирования Цикл
            ИмяКолонки=Эл.Ключ;
			ПЗ.ИсточникДанных.Колонки[Эл.Ключ].Итог = "Сумма("+Эл.Ключ+")";

		КонецЦикла;
		
   //ПЗ.ИсточникДанных.Колонки.Сумма.Итог = "Сумма";
   ПЗ.ЗаполнитьНастройки();
   ПЗ.Выполнить();
   тДерево = ПЗ.Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией); 
   //тДерево.Итог("сумма");	
	//Для каждого Стр из ВременнаяТаблица цикл
	//	ОбУч = тДерево.Строки.Добавить();
	//	ОбУч.ОбъектУчета = Стр.ОбъектУчета;

	//КонецЦикла;
	  

	 //тДерево = ТаблицаЗначенийВДеревоЗначений(ТабЗнч, "ОбъектУчета", "СтЗатрат" );
	
	ЗначениеВРеквизитФормы(тДерево,"ОсновноеДерево");
	
	      
  		
	
	//Объект.Основное.Загрузить(ТабЗнч);

КонецПроцедуры
	
&НаКлиенте
Процедура заполнить(Команда)
	
	элм= ТабБухг.ПолучитьЭлементы();
	элм.Очистить();

ЗаполнитьТабБухНаСервере();
заполнитьНаСервере();
Для каждого Стр из ВременнаяТаблица Цикл
		КлючУникальности = Новый УникальныйИдентификатор;
		Стр.ID = КлючУникальности;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура РаспределитьНаСервере()
	НаборЗаписей = РегистрыНакопления.КВП_ЗатратыПодомовогоУчета.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Отбор.Организация.Установить();
	НаборЗаписей.Записать(); 	
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	
	    
	
	Если Объект.ВидРаспределения = "Пропорционально трудоЗатратам" Тогда
		//ЗаполнитьПропорционально();
	ИначеЕсли Объект.ВидРаспределения = "По лифтам" Тогда
		ЗаполнитьПоЛифтам();	
	КонецЕсли;
	//РаспределитьНаСервере();
КонецПроцедуры

#Область ОбработкаПериода

&НаКлиенте
Процедура ВидПериодаПриИзменении(Элемент)
	
	//УПЖКХ_ТиповыеМетодыВызовСервера.ПриСозданииНаСервере(ЭтаФорма);
	
	//УправлениеФормой(ЭтаФорма);

	
	
	Период =  Объект.Период;
	//а = Объект.ВидПериода;
	УПЖКХ_ТиповыеМетодыКлиент.ВидПериодаПриИзменении(Элемент, Объект.ВидПериода, Объект.НачДата, Объект.КонцДата, Период);
	УПЖКХ_ТиповыеМетодыКлиентСервер.ПереключитьТекущуюСтраницуВыбораПериода(Объект.ВидПериода, Элементы.ГруппаПоляВводаПериода);
	
	
КонецПроцедуры

&НаКлиенте
Процедура НачДатаПриИзменении(Элемент)
	Дата1 = Объект.НачДата;	
	Дата2 = КонецДня(Объект.НачДата);
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Период = Объект.Период;
	УПЖКХ_ТиповыеМетодыКлиент.ПериодПриИзменении(Элемент, Период, Объект.НачДата, Объект.КонцДата);
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодНачалоВыбораЗавершение", ЭтотОбъект);
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодНачалоВыбора(ЭтаФорма, Элемент, СтандартнаяОбработка, 
		Объект.ВидПериода, Объект.НачДата, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
// Процедура окончания асинхроного выбора периода.
Процедура ПериодНачалоВыбораЗавершение(СтруктураПериода, ДополнительныеПараметры) Экспорт
	
	// Установим полученный период
	Если СтруктураПериода <> Неопределено Тогда
		Объект.ВидПериода = СтруктураПериода.ВидПериода;
		Объект.Период = СтруктураПериода.Период;
		Объект.НачДата = СтруктураПериода.НачалоПериода;
		Объект.КонцДата = СтруктураПериода.КонецПериода;
	КонецЕсли;
	

	
	
КонецПроцедуры



&НаКлиенте
// Обработчик события "ОбработкаВыбора" поля "Период".
Процедура ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка,
		Объект.ВидПериода, Объект.Период, Объект.НачДата, Объект.КонцДата);
		
	
КонецПроцедуры


&НаКлиенте
// Обработчик события "АвтоПодбор" поля "Период".
Процедура ПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
		УПЖКХ_ТиповыеМетодыКлиент.ПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка,
		Объект.ВидПериода, Объект.Период, Объект.НачДата, Объект.КонцДата);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОкончаниеВводаТекста" поля "Период".
Процедура ПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыКлиент.ПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка,
		Объект.ВидПериода, Объект.Период, Объект.НачДата, Объект.КонцДата);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидРаботОбработкаВыбора(Элемент, ВыбранноеЗначение,СтандартнаяОбработка = Ложь)
		   //  ГГГ = Новый СписокЗначений;
		   //  
		   //   Для Каждого Элемента Из ВыбранноеЗначение Цикл
		   // ГГГ.Добавить(Элемента);
		   //КонецЦикла;
           
               
КонецПроцедуры



Функция ПолучитьЗапрещенныеПоля(Режим = "") Экспорт
	
	СписокПолей = Новый Массив;
	
	СписокПолей.Добавить("UserFields");
	СписокПолей.Добавить("DataParameters");
	СписокПолей.Добавить("SystemFields");
	СписокПолей.Добавить("Показатели");
	СписокПолей.Добавить("Период");
	

		
	Возврат Новый ФиксированныйМассив(СписокПолей);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
// Управляет видимостью элементов формы.
Процедура УправлениеФормой(Форма)
	
	//Отчет    = Форма.Отчет;
	Элементы = Форма.Элементы;
	
	Форма.Период = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьПредставлениеПериодаОтчета(
		Форма.ВидПериода);
		
	УПЖКХ_ТиповыеМетодыКлиентСервер.ПереключитьТекущуюСтраницуВыбораПериода(Форма.ВидПериода,
																			Элементы.ГруппаПоляВводаПериода);
	
КонецПроцедуры

#КонецОбласти



Функция зфВыбратьПоГруппировкам(Выборка, Группировки, СИерархией = Ложь)

       МетаВыборка = Новый Соответствие;

       врОбходРезультата = ОбходРезультатаЗапроса.ПоГруппировкам;
       Если СИерархией Тогда
               врОбходРезультата = ОбходРезультатаЗапроса.ПоГруппировкамСИерархией;
       КонецЕсли;
       МетаВыборка.Вставить("ОбходРезультата", врОбходРезультата);

       МассивГруппировок = Новый Массив;
       врСтрГруппировки = Группировки;
       Пока Истина Цикл
               Поз = Найти( врСтрГруппировки, "," );
               Если Поз = 0 Тогда
                       МассивГруппировок.Добавить(СокрЛП(врСтрГруппировки));
                       Прервать;
               КонецЕсли;
               МассивГруппировок.Добавить( СокрЛП( Лев(врСтрГруппировки,Поз-1) ) );
               врСтрГруппировки = Сред( врСтрГруппировки, Поз+1 );
       КонецЦикла;

       МетаВыборка.Вставить("Группировки", МассивГруппировок);

       врВыборка = Выборка;
       Для пц=0 По МассивГруппировок.Количество()-2 Цикл
               врВыборкаУровня = врВыборка.Выбрать(врОбходРезультата, МассивГруппировок[пц]);
               МетаВыборка.Вставить("_Выборка"+Строка(пц), врВыборкаУровня);
               Если не врВыборкаУровня.Следующий() Тогда
                       Прервать;
               КонецЕсли;
               врВыборка = врВыборкаУровня;
       КонецЦикла;
       врВыборкаУровня = врВыборка.Выбрать(врОбходРезультата, МассивГруппировок[пц]);
       МетаВыборка.Вставить("Выборка", врВыборкаУровня);
       МетаВыборка.Вставить("_Выборка"+Строка(пц), врВыборкаУровня);

       Возврат МетаВыборка;

КонецФункции // зфВыбратьПоГруппировкам

Функция зфСледующийПоГруппировкам(МетаВыборка, Уровень = Неопределено)

       Если Уровень = Неопределено Тогда
               Уровень = МетаВыборка["Группировки"].Количество()-1;
       КонецЕсли;

       Если Уровень < 0 Тогда
               Возврат Ложь;
       КонецЕсли;

       врВыборка = МетаВыборка["_Выборка"+Строка(Уровень)];

       Если врВыборка.Следующий() Тогда
               Возврат Истина;
       КонецЕсли;

       Если зфСледующийПоГруппировкам(МетаВыборка, Уровень-1) Тогда
               МассивГруппировок = МетаВыборка["Группировки"];
               врВыборкаРодитель = МетаВыборка["_Выборка"+Строка(Уровень-1)];
               врВыборка = врВыборкаРодитель.Выбрать(МетаВыборка["ОбходРезультата"],МассивГруппировок[Уровень]);
               МетаВыборка["_Выборка"+Строка(Уровень)] = врВыборка;
               Если Уровень = МассивГруппировок.Количество()-1 Тогда
                       МетаВыборка["Выборка"] = врВыборка;
               КонецЕсли;
               Возврат зфСледующийПоГруппировкам(МетаВыборка, Уровень);
       Иначе
               Возврат Ложь;
       КонецЕсли;

   КонецФункции // зфСледующийПоГруппировкам
   
 Процедура ОбойтиУровеньДерева(Строки)
	 Для каждого Строка из Строки Цикл
		 Если Строка.Родитель = Неопределено тогда
			 сообщить("фыва");
		ИначеЕсли Строка.Субконто2.Наименование	= "Основные производственные материалы (ПР)" тогда
               сообщить(Строка.КорСубконто1);
			 
	 
	 	КонецЕсли;
     ОбойтиУровеньДерева(Строка.Строки);
  КонецЦикла; 
КонецПроцедуры






&НаСервере
Процедура ОсновноеПриАктивизацииПоляНаСервере(об,ТипЗатрат,НомерНаряда)
	Объект.НаборЗаписей.Очистить();
	ТаблицаПодробно = ПолучитьТЗ();
	//сообщить(об);
	Отбор = Новый Структура;
	Если ТипЗатрат = "" тогда
		Отбор.Вставить("ОбъектУчета", об);
	ИначеЕсли НомерНаряда = "" тогда
		Отбор.Вставить("ОбъектУчета", об);
		Отбор.Вставить("СтЗатрат", ТипЗатрат);
	Иначе
		Отбор.Вставить("ОбъектУчета", об);
		Отбор.Вставить("СтЗатрат", ТипЗатрат);
		Отбор.Вставить("НомерНаряда", НомерНаряда);
	КонецЕсли;
	
		Строки = ТаблицаПодробно.НайтиСтроки(Отбор);
	Для Каждого Стр Из Строки Цикл
		
		НоваяСтрока = Объект.НаборЗаписей.Добавить();
		НоваяСтрока.ОбъектУчета            = Стр.ОбъектУчета;
		НоваяСтрока.НомерНаряда            = Стр.НомерНаряда;
		//НоваяСтрока.дата                   = Стр.
		//НоваяСтрока.КатегорияРабот         = Стр.
		НоваяСтрока.ВидРаботы              = Стр.ВидРаботы;
		НоваяСтрока.МестоПроведенияРабот   = Стр.МестоПроведенияРабот;
		НоваяСтрока.Организация            = Стр.Организация;
		//НоваяСтрока.ТипЗатрат              = Стр.
		НоваяСтрока.зтр                    = Стр.зтр;
		НоваяСтрока.Количество             = Стр.Количество;
		//НоваяСтрока.                     = Стр.ЕдИзмерения;
		//НоваяСтрока.Цена                   = Стр.
		//НоваяСтрока.ФИО                    = Стр.
		НоваяСтрока.ТипЗатрат              = Стр.СтЗатрат;    
		НоваяСтрока.ID                     = Стр.ID;                  
		НоваяСтрока.Сумма                  = Стр.Сумма;
		НоваяСтрока.СуммаПослеРаспределения = Стр.ПослеРаспределения;  
		НоваяСтрока.разница = Стр.разница; 
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ОсновноеПриАктивизацииЯчейки(Элемент)
//Наименование = элементы.Основное.ТекущиеДанные;
//	Об = Наименование.ОбъектУчета;
//	ТипЗатрат = наименование.СтЗатрат;
//	ОсновноеПриАктивизацииПоляНаСервере(об,ТипЗатрат);


КонецПроцедуры


&НаСервере
Процедура ПерерасчетМатериаловНаСервере()
		Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КВП_ЗаявкаНаВыполнениеРабот.Ссылка КАК Ссылка,
	|	КВП_ЗаявкаНаВыполнениеРабот.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.КВП_ЗаявкаНаВыполнениеРабот КАК КВП_ЗаявкаНаВыполнениеРабот
	|ГДЕ
	|	КВП_ЗаявкаНаВыполнениеРабот.Подразделение = &Подразделение
	|	И КВП_ЗаявкаНаВыполнениеРабот.Дата МЕЖДУ &Дата1 И &Дата2";
	
	

	Дата1 = Объект.НачДата;	
	Дата2 = Объект.КонцДата;
	подразделение = объект.Подразделение;

	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("Подразделение", подразделение);

	Выборка = Запрос.Выполнить().Выбрать();
			//прогрессБар = Элементы.индикатор; 
			//прогрессБар.МаксимальноеЗначение = Выборка.Количество();
			// 
			//прогрессБар.Видимость = Истина;
			
			 
			
			Пока Выборка.Следующий() Цикл
		
			ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);

			Если НЕ ДокОбъект.ПометкаУдаления	Тогда
				
				Если ДокОбъект.ОтветственныйЗаВыполнение.наименование ="Калистратов Дмитрий Геннадьевич." тогда
					 ДокОбъект.Склад= Справочники.Склады.НайтиПоНаименованию("ЖЭУ  лифты");
				КонецЕсли;
			
	//Для Каждого ТекСтрокаРаботы Из ДокОбъект.Работы Цикл
	//	ТекВидРабот = ТекСтрокаРаботы.ВидРабот;
	Для Каждого ТекСтрокаСоставаРабот Из ДокОбъект.НарядЗаказ Цикл
		ИзнЦена = ТекСтрокаСоставаРабот.Цена; 
	Если ТекСтрокаСоставаРабот.Склад.наименование = "" тогда
			ТекСтрокаСоставаРабот.Склад = ДокОбъект.Склад;
		КонецЕсли;
		ТекСтрокаСоставаРабот.Цена = ТЗЦеныНоменклатуры(ТекСтрокаСоставаРабот.Номенклатура,ТекСтрокаСоставаРабот.Склад);
		Если ТекСтрокаСоставаРабот.Цена = 0 Тогда
			НоваяСтрока = Объект.ЛогиОшибок.Добавить();
			НоваяСтрока.тип = "Цена на материал не установлена! Документ " + ДокОбъект.ссылка + " Материал: " + ТекСтрокаСоставаРабот.Номенклатура + ", склад: " + ТекСтрокаСоставаРабот.Склад + ", Мастер:" + ДокОбъект.ОтветственныйЗаВыполнение;
		ИначеЕсли ИзнЦена <> ТекСтрокаСоставаРабот.Цена  Тогда
			НоваяСтрока = Объект.ЛогиОшибок.Добавить();
			НоваяСтрока.тип = "Изменилась Цена на материал! было: " +ИзнЦена + " Стало: " + ТекСтрокаСоставаРабот.Цена + " Документ № " + ДокОбъект.ссылка + " Материал: " + ТекСтрокаСоставаРабот.Номенклатура + ", склад: " + ТекСтрокаСоставаРабот.Склад + ", Мастер:" + ДокОбъект.ОтветственныйЗаВыполнение;
 
		КонецЕсли;
	КонецЦикла;
		
	
	//Если НЕ значениеЗаполнено(ДокОбъект.подразделение) тогда
	//	ДокОбъект.подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("АРС участок лифтового хозяйства Кондопога");
	//КОнецЕсли;
	//


		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);		
			Иначе
				НоваяСтрока = Объект.ЛогиОшибок.Добавить();
			НоваяСтрока.тип = "объект помечен на удаление " + ДокОбъект.ссылка ;
	КонецЕсли;     						
	КонецЦикла;
	
		//прогрессБар.Видимость = ложь;
			

	 КонецПроцедуры

Функция ТЗЦеныНоменклатуры(Товар,Склад)
	 
	 Запрос = Новый Запрос;
	 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОбороты.Субконто2 КАК Субконто2,
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК СуммаОборот,
	|	СУММА(ХозрасчетныйОбороты.КоличествоОборот) КАК КоличествоОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, &дата,,, ,Субконто1 = &Товар и Субконто2 = &Склад, )  КАК ХозрасчетныйОбороты	 
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	ХозрасчетныйОбороты.Счет"; 
	
	Дата = КонецМесяца(Объект.КонцДата)-(19*60*60-1); 

	 

	
	 Запрос.УстановитьПараметр("Дата", Дата);
	 Запрос.УстановитьПараметр("Товар", Товар);
	 Запрос.УстановитьПараметр("Склад", Склад);
	 //Запрос.УстановитьПараметр("Счет", 10.01);
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 Если Запрос.Выполнить().Пустой() Тогда
		 цена = 0;
	 КонецЕсли;
	 
	 Пока Выборка.Следующий() Цикл
		 Если Выборка.Субконто1 = Товар тогда
			 цена = Выборка.СуммаОборот / Выборка.КоличествоОборот ;
		 КонецЕсли;
	 КонецЦикла;
	 возврат Цена;
 КонецФункции

&НаКлиенте
Процедура ПерерасчетМатериалов(Команда)
	Состояние("выполняеться обработка",,,);	
	объект.ЛогиОшибок.Очистить();	
	ПерерасчетМатериаловНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура НаборЗаписейСуммаПриИзменении(Элемент)
	ТекСтр = элементы.НаборЗаписей.ТекущиеДанные;
	ID = ТекСтр.ID;
	//ТипЗатрат = ТекСтр.СтЗатрат;
	НовЦена = ТекСтр.сумма;
	НайтиПоИд(ID,НовЦена);
	НаборЗаписейСуммаПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура НаборЗаписейСуммаПриИзмененииНаСервере()
	ТаблицаПодробно = ПолучитьТЗ();
	ВременнаяТаблица.Загрузить(ТаблицаПодробно);
	ТЗвОснТаб();
КонецПроцедуры

Функция НайтиПоИд(ИД,сумма)
	ТаблицаПодробно = ПолучитьТЗ();
	тз = ТаблицаПодробно.Найти(ИД,"ID");
	тз.ПослеРаспределения = Сумма;
	ВременнаяТаблица.Очистить();
	ВременнаяТаблица.Загрузить(ТаблицаПодробно);
	ТЗвОснТаб();
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДанныйОбъект = РеквизитФормыВЗначение("Объект"); 
	 Если ТипЗнч(ДанныйОбъект.ХранилищеТЗ.Получить())=тип("ТаблицаЗначений") Тогда
        ТЗ=ДанныйОбъект.ХранилищеТЗ.Получить();
        ВременнаяТаблица.Загрузить(ТЗ);
		ТЗвОснТаб();
	КонецЕсли;
	Если ТипЗнч(ДанныйОбъект.ХранилищеДЗ.Получить())=тип("ДеревоЗначений") Тогда
	ДЗ=ДанныйОбъект.ХранилищеДЗ.Получить();
	ЗначениеВРеквизитФормы(ДЗ,"ТабБухг");
КонецЕсли;


		//ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	//ЭлементУсловногоОформления.Использование = Истина;
	//ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(0, 255, 127));
	
	//ЭлементУсловия                = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементУсловия.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТабБухг.КорСубконто1");
	//ЭлементУсловия.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	//ЭлементУсловия.ПравоеЗначение = Истина;
	//ЭлементУсловия.Использование  = Истина;
	
	//ОформляемоеПоле      = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТабБухгТипЗатрат");
	

КонецПроцедуры

&НаСервере
Процедура распределитьПропрорциональноНаСервере()
	//ТЗ = заполнитьТЗ();
	//
	////ТаблЗнач = Объект.НаборЗаписей.Выгрузить();
	//
	//Для Каждого Стр из ВременнаяТаблица Цикл
	//	Если Стр.СтЗатрат =  "Оплата труда" тогда
	//		Стр.ПослеРаспределения = Стр.Сумма / ТЗ[1].Сумма * СуммаОплатаТруда;
	//		Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;
	//		
	//	Иначе
	//		Стр.ПослеРаспределения = Стр.Сумма;
	//		Стр.Разница =  Стр.Сумма - Стр.ПослеРаспределения  ;

	//	КонецЕсли
	//КонецЦикла;
	// ТЗвОснТаб();
	//Для каждого стр из Объект.Основное цикл
	//	стр.Разница = стр.Итого - стр.Сумма;
	//КонецЦикла


	
КонецПроцедуры

&НаКлиенте
Процедура распределитьПропрорционально(Команда)
	распределитьПропрорциональноНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеПриАктивизацииСтроки(Элемент)
	Наименование = элементы.Основное.ТекущиеДанные;
	Об = Наименование.ОбъектУчета;
	ТипЗатрат = наименование.СтЗатрат;
	//ОсновноеПриАктивизацииПоляНаСервере(об,ТипЗатрат);

КонецПроцедуры

&НаКлиенте
Процедура ОсновноеДеревоПриАктивизацииСтроки(Элемент)
	Наименование = элементы.ОсновноеДерево.ТекущиеДанные;
	Об = Наименование.ОбъектУчета;
	ТипЗатрат = наименование.СтЗатрат;
	НомерНаряда = наименование.НомерНаряда;
	ОсновноеПриАктивизацииПоляНаСервере(об,ТипЗатрат,НомерНаряда);
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	
	тДерево = РеквизитФормыВЗначение("ТабБухг");
	
	ДанныйОбъект = РеквизитФормыВЗначение("Объект");
	ТЗ = ВременнаяТаблица.Выгрузить();
	
	ДанныйОбъект.ХранилищеДЗ = Новый ХранилищеЗначения(тДерево);
	ДанныйОбъект.ХранилищеТЗ = Новый ХранилищеЗначения(ТЗ);
	
	ДанныйОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБухгБулевоПриИзменении(Элемент)
	Наименование = элементы.ТабБухг.ТекущиеДанные;	
	Родитель =элементы.ТабБухг.ТекущиеДанные.ПолучитьРодителя();
	Если СуммаОплатаТруда = 0 тогда
		заполнитьсуммы();
		//заполнитьВрмТаб();
		СуммаОплатаТруда = Родитель.СуммаОборотДт;
	Иначе
		
	КонецЕсли;
	Если Родитель.ТипЗатрат = "Оплата Труда" тогда
		Если  Наименование.Булево = ложь тогда 
		СуммаОплатаТруда = СуммаОплатаТруда - Наименование.СуммаОборотДт;
	Иначе 
		СуммаОплатаТруда = СуммаОплатаТруда + Наименование.СуммаОборотДт;
		КонецЕсли;
	КонецЕсли;
	
	Если Родитель.ТипЗатрат = "Общехозяйственные" тогда
		Если  Наименование.Булево = ложь тогда 
		СуммаОбщехозяйственные = СуммаОбщехозяйственные - Наименование.СуммаОборотДт;
	Иначе 
		СуммаОбщехозяйственные = СуммаОбщехозяйственные + Наименование.СуммаОборотДт;
		КонецЕсли;
	КонецЕсли;

	Если Родитель.ТипЗатрат = "ОбщеПроизводственные" тогда
		Если  Наименование.Булево = ложь тогда 
		СуммаОбщепроизводственные = СуммаОбщепроизводственные - Наименование.СуммаОборотДт;
	Иначе 
		СуммаОбщепроизводственные = СуммаОбщепроизводственные + Наименование.СуммаОборотДт;
		КонецЕсли;
	КонецЕсли;

	Если Родитель.ТипЗатрат = "Прочие" тогда
		Если  Наименование.Булево = ложь тогда 
		СуммаПрочие = СуммаПрочие - Наименование.СуммаОборотДт;
	Иначе 
		СуммаПрочие = СуммаПрочие + Наименование.СуммаОборотДт;
		КонецЕсли;
	КонецЕсли;
	
		Если Родитель.ТипЗатрат = "Транспортные Расходы" тогда
		Если  Наименование.Булево = ложь тогда 
		СуммаТрРасходы = СуммаТрРасходы - Наименование.СуммаОборотДт;
	Иначе 
		СуммаТрРасходы = СуммаТрРасходы + Наименование.СуммаОборотДт;
		КонецЕсли;
	КонецЕсли;


	
	заполнитьВрмТаб();
	ТабБухгБулевоПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТабБухгБулевоПриИзмененииНаСервере()
	ЗаполнитьПоЛифтам();
КонецПроцедуры

функция заполнитьсуммы()
	тДерево = РеквизитФормыВЗначение("ТабБухг");
	
	Для каждого стр из тДерево.строки цикл
		Если стр.ТипЗатрат = "Оплата Труда" тогда
			СуммаОплатаТруда = стр.СуммаОборотДт;	
		ИначеЕсли стр.ТипЗатрат = "Материалы" тогда
			СуммаМат = стр.СуммаОборотДт;
		ИначеЕсли стр.ТипЗатрат = "Общехозяйственные" тогда
			СуммаОбщехозяйственные = стр.СуммаОборотДт;
		ИначеЕсли стр.ТипЗатрат = "ОбщеПроизводственные" тогда
			СуммаОбщепроизводственные = стр.СуммаОборотДт;
		ИначеЕсли стр.ТипЗатрат = "Прочие" тогда
			СуммаПрочие = стр.СуммаОборотДт;
		ИначеЕсли стр.ТипЗатрат = "транспортные расходы" тогда
			СуммаТрРасходы = стр.СуммаОборотДт;
		КонецЕсли;
	КонецЦикла;

КонецФункции

&НаКлиенте
Процедура НаборЗаписейСуммаПослеРаспределенияПриИзменении(Элемент)
	ТекСтр = элементы.НаборЗаписей.ТекущиеДанные;
	ID = ТекСтр.ID;
	//ТипЗатрат = ТекСтр.СтЗатрат;
	НовЦена = ТекСтр.СуммаПослеРаспределения;
	НайтиПоИд(ID,НовЦена);
	НаборЗаписейСуммаПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура НаборЗаписейСуммаПослеРаспределенияПриИзмененииНаСервере()
	
КонецПроцедуры





