#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	// Квартплата +
	// Ввод требования-накладной на основании заявки АДС. Стандартный механизм ввода
	// на основании не используется, вместо него происходит программное открытие
	// формы требования-накладной с передачей значения заполнения в виде ссылки на заявку.
	//
	// Примечание:
	// Заполнение необходимо провести до типового заполнения, чтобы в таблице материалов
	// автоматически заполнились счета учета.
	
	ЗаполнитьНаОснованииЗаявкиАДС = (ТипДанныхЗаполнения = Тип("Структура")
								   И ДанныеЗаполнения.Свойство("ОснованиеЗаполнения")
								   И ТипЗнч(ДанныеЗаполнения.ОснованиеЗаполнения) = Тип("ДокументСсылка.КВП_ЗаявкаНаВыполнениеРабот"));
	
	Если ЗаполнитьНаОснованииЗаявкиАДС Тогда
		
		// Получение данных для заполнения реквизитов документа.
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.ОснованиеЗаполнения);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КВП_ЗаявкаНаВыполнениеРабот.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(КВП_ЗаявкаНаВыполнениеРабот.Ссылка) КАК ПредставлениеСсылки,
		|	КВП_ЗаявкаНаВыполнениеРабот.Дата КАК Дата,
		|	КВП_ЗаявкаНаВыполнениеРабот.Организация КАК Организация,
		|	КВП_ЗаявкаНаВыполнениеРабот.ОтветственныйЗаВыполнение КАК ОтветственныйЗаВыполнение,
		|	КВП_ЗаявкаНаВыполнениеРабот.ВремяФактическогоОкончанияРабот КАК ВремяФактическогоОкончанияРабот
		|ИЗ
		|	Документ.КВП_ЗаявкаНаВыполнениеРабот КАК КВП_ЗаявкаНаВыполнениеРабот
		|ГДЕ
		|	КВП_ЗаявкаНаВыполнениеРабот.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА НЕ КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.ВидРабот.НоменклатураРабот.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		|			ТОГДА КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.ВидРабот.НоменклатураРабот.НоменклатурнаяГруппа
		|		ИНАЧЕ КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.Номенклатура.НоменклатурнаяГруппа
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.Количество КАК Количество,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет,
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН
		|ИЗ
		|	Документ.КВП_ЗаявкаНаВыполнениеРабот.НарядЗаказ КАК КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ
		|ГДЕ
		|	КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.Ссылка = &Ссылка
		|	И КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.Количество > 0
		|	И НЕ КВП_ЗаявкаНаВыполнениеРаботНарядЗаказ.Номенклатура.Услуга";
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Реквизиты шапки заявки.
		РеквизитыЗаявкиАДС = МассивРезультатов[0].Выбрать();
		РеквизитыЗаявкиАДС.Следующий();
		
		// Таблица материалов заявки.
		ТаблицаМатериалов = МассивРезультатов[1].Выгрузить();
		
		// Заполнение реквизитов шапки требования-накладной.
		Дата        = РеквизитыЗаявкиАДС.ВремяФактическогоОкончанияРабот;
		Организация = РеквизитыЗаявкиАДС.Организация;
		Комментарий = "Введен на основании документа " + РеквизитыЗаявкиАДС.ПредставлениеСсылки;
		
		// Заполнение счетов учета материалов в таблице материалов.
		Для Каждого ТекСтрокаМатериала Из ТаблицаМатериалов Цикл
			СчетаУчета = УПЖКХ_ТиповыеМетодыСервер.ПолучитьСчетаУчетаНоменклатуры(РеквизитыЗаявкиАДС.Организация, ТекСтрокаМатериала.Номенклатура);
			ТекСтрокаМатериала.Счет = СчетаУчета.СчетУчета;
		КонецЦикла;
		
		// Получение списка различных номенклатурных групп списываемых материалов.
		врТаблицаМатериалов = ТаблицаМатериалов.Скопировать(, "НоменклатурнаяГруппа");
		врТаблицаМатериалов.Свернуть("НоменклатурнаяГруппа");
		врТаблицаМатериалов.Сортировать("НоменклатурнаяГруппа Убыв");
		
		// Если у материалов есть хотя бы одна не пустая номенклатурная группа,
		// то счета учета должны заполняться в табличной части.
		Если врТаблицаМатериалов.Количество() > 0
		   И Не врТаблицаМатериалов[0].НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка() Тогда
			СчетаУчетаЗатратВТаблице = Истина;
		КонецЕсли;
		
		// Заполнение подразделения затрат подразделением организации, в котором ответственный мастер
		// является сотрудником по виду занятости "Основное место работы".
		ОтветственныйМастер = УПЖКХ_ТиповыеМетодыВызовСервера.ДанныеФизЛица(РеквизитыЗаявкиАДС.Организация, РеквизитыЗаявкиАДС.ОтветственныйЗаВыполнение, РеквизитыЗаявкиАДС.Дата);
		
		Если Не ОтветственныйМастер.ПодразделениеОрганизации = Неопределено Тогда
			ПодразделениеЗатрат = ОтветственныйМастер.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Загрузка таблицы материалов в табличную часть требования-накладной.
		Материалы.Загрузить(ТаблицаМатериалов);
		
		// Зафиксируем соответствие строк документа и номенклатурных групп,
		// так как после стандартного заполнения документа они могут быть очищены,
		// тогда придется заполнить номенклатурные группы заново.
		СоответствиеНоменклатурныхГрупп = Новый Соответствие;
		Для Каждого ТекСтрокаМатериала Из Материалы Цикл
			
			Если Не ТекСтрокаМатериала.НоменклатурнаяГруппа.Пустая() Тогда
				СоответствиеНоменклатурныхГрупп.Вставить(ТекСтрокаМатериала.НомерСтроки, ТекСтрокаМатериала.НоменклатурнаяГруппа);
			КонецЕсли;
			
			// Заполним подразделение затрат, если счета учета затрат заполняются в табличной части.
			Если СчетаУчетаЗатратВТаблице И Не ОтветственныйМастер.ПодразделениеОрганизации = Неопределено Тогда
				ТекСтрокаМатериала.ПодразделениеЗатрат = ОтветственныйМастер.ПодразделениеОрганизации;
			КонецЕсли;
			
		КонецЦикла;
		
		// Заполнение склада, закрепленного за ответственным мастером по заявке АДС.
		Склад = Документы.КВП_ЗаявкаНаВыполнениеРабот.ПолучитьСкладПоОтветственномуМастеру(РеквизитыЗаявкиАДС.Дата, РеквизитыЗаявкиАДС.ОтветственныйЗаВыполнение);
		
	КонецЕсли;
	// Квартплата -
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения, Истина);
	
	Документы.ТребованиеНакладная.ЗаполнитьСоставКомиссии(СоставКомиссии, Организация);
	
	// Квартплата +
	// После типового заполнения реквизитов документа необходимо вновь заполнить данные
	// по номенклатурным группам, так как номенклатурные группы во всех строках табличной части
	// очищаются при типовом заполнении реквизитов, когда хотя бы в одной строке материалов
	// есть пустая номенклатурная группа. Это связано с типовыми правилами заполнения счетов учета.
	Если ЗаполнитьНаОснованииЗаявкиАДС Тогда
		
		Для Каждого ТекСтрокаМатериала Из Материалы Цикл
			
			// Получим ранее полученную номенклатурную группу.
			ИсходнаяНоменклатурнаяГруппа = СоответствиеНоменклатурныхГрупп.Получить(ТекСтрокаМатериала.НомерСтроки);
			
			// Если требуется, заполним номенклатурную группу в строке табличной части.
			Если ТекСтрокаМатериала.НоменклатурнаяГруппа.Пустая()
			   И Не ИсходнаяНоменклатурнаяГруппа = Неопределено Тогда
				ТекСтрокаМатериала.НоменклатурнаяГруппа = ИсходнаяНоменклатурнаяГруппа;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	// Квартплата -
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат = Ложь;
	
	Если Материалы.Количество() > 0 Тогда
		МассивМатериалы = Новый Массив(Материалы.Количество());
		
		Материалы.ЗагрузитьКолонку(МассивМатериалы, "Себестоимость");
		Материалы.ЗагрузитьКолонку(МассивМатериалы, "ДокументОприходования");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Документ без данных о движении материалов не считаем заполненным корректно.
	// Следует заполнить данные в любой из табличных частей.
	ОбщегоНазначенияБП.ИсключитьИзПроверкиОсновныеТабличныеЧасти(
		ЭтотОбъект, 
		"Материалы,МатериалыЗаказчика",
		ПроверяемыеРеквизиты);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ПроверяемыеРеквизиты.Найти("Склад") = Неопределено Тогда
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;

	Если МатериалыЗаказчика.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли;
	
	РаздельныйУчетНДСДо2014Года = УчетнаяПолитика.РаздельныйУчетНДСДо2014Года(Организация, Дата);
	
	Если НЕ РаздельныйУчетНДСДо2014Года Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НДСвСтоимостиТоваров");
	КонецЕсли; 

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	СчетаУчетаВДокументах.ПроверитьЗаполнение(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ТребованиеНакладная.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// Таблица списанных материалов
	ТаблицаСписанныеМатериалы = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.ТаблицаМатериалы, ПараметрыПроведения.МатериалыРеквизиты, Отказ);

	// Таблица списанных материалов заказчика
	ТаблицаСписанныеМатериалыЗаказчика = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.ТаблицаМатериалыЗаказчика, ПараметрыПроведения.МатериалыЗаказчикаРеквизиты, Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура("ТаблицаТМЦ", ТаблицаСписанныеМатериалы);
	
	// Учет доходов и расходов ИП
	ТаблицыМатериаловПродукцииИП = Документы.ТребованиеНакладная.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаСписанныеМатериалы, ПараметрыПроведения.ИПРеквизиты);
	
	ТаблицыСписанияМПЗИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИП.ТаблицаМатериалов, ПараметрыПроведения.ИПРеквизиты, Отказ);
	
	ТаблицаПоступлениеПродукцииИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИП.ПолученоПродукции, ПараметрыПроведения.ИПРеквизиты);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Списание материалов
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписанныеМатериалы, ПараметрыПроведения.МатериалыРеквизиты, Движения, Отказ);
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписанныеМатериалыЗаказчика, ПараметрыПроведения.МатериалыЗаказчикаРеквизиты, Движения, Отказ);
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);
		
	// Учет НДС
	УчетНДСБП.СформироватьДвиженияСписаниеТоваровНаРасходы(
		ПараметрыПроведения.НДСМатериалы, ТаблицаСписанныеМатериалы, ПараметрыПроведения.НДСРеквизиты, Движения, Отказ);
		
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИП, ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступлениеПродукцииИП, ТаблицыСписанияМПЗИП.СтоимостьПродукции, 
		ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
		
	// Регистрация в последовательности
	РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ЭтотОбъект, Отказ, , ТаблицаСписанныеМатериалы);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если УчетнаяПолитика.СпособОценкиМПЗ(Организация, Дата) <> Перечисления.СпособыОценки.ФИФО 
		И НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов")
		И Материалы.Количество() > 0 Тогда
		
		Материалы.ЗагрузитьКолонку(Новый Массив(Материалы.Количество()), "ДокументОприходования");
		
	КонецЕсли;
	
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли; 
	
	СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(ЭтотОбъект, РежимЗаписи);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проверка заполнения

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		мДокументОснование 		 = Основание;
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		Если Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
			Контрагент = Основание.Контрагент;
			ИмяТаблицы	= "МатериалыЗаказчика";
		Иначе
			ИмяТаблицы	= "Материалы";
		КонецЕсли;
		
		ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		
		Для Каждого ТекСтрокаТовары Из Основание.Товары Цикл
			
			СтрокаТабличнойЧасти                  = ЭтотОбъект[ИмяТаблицы].Добавить();
			СтрокаТабличнойЧасти.Номенклатура     = ТекСтрокаТовары.Номенклатура;
			СтрокаТабличнойЧасти.Количество       = ТекСтрокаТовары.Количество;
			СтрокаТабличнойЧасти.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			СтрокаТабличнойЧасти.КоличествоМест   = ТекСтрокаТовары.КоличествоМест;
			СтрокаТабличнойЧасти.Коэффициент      = ТекСтрокаТовары.Коэффициент;
			
			Если ИмяТаблицы	= "Материалы" Тогда
				СтрокаТабличнойЧасти.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
			КонецЕсли;
			
		КонецЦикла;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		
		СписокНоменклатуры = Основание.Товары.ВыгрузитьКолонку("Номенклатура");
		ЕдиницыИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокНоменклатуры, "ЕдиницаИзмерения");
		Для Каждого СтрокаОснования Из Основание.Товары Цикл
			
			НоваяСтрока                     = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОснования, "Номенклатура, Количество, НомерГТД, СтранаПроисхождения");
			НоваяСтрока.ЕдиницаИзмерения    = ЕдиницыИзмерения[СтрокаОснования.Номенклатура];
			НоваяСтрока.Коэффициент         = 1;
			НоваяСтрока.ОтражениеВУСН       = Перечисления.ОтражениеВУСН.Принимаются;
			
		КонецЦикла;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		СчетаУчетаЗатратВТаблице = Истина;
		
		// Подготовим исходные данные для заполнения табличной части
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Параметры.Вставить("Основание", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ СчетаПроизводствоИзДавальческогоСырья
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СчетаПроизводствоИзДавальческогоСырья.Счет ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПроизводствоИзМатериаловЗаказчика,
		|	ОтчетПроизводстваЗаСменуПродукция.НомерСтроки КАК НомерСтрокиВыпуск,
		|	ОтчетПроизводстваЗаСменуПродукция.Спецификация КАК Спецификация,
		|	ОтчетПроизводстваЗаСменуПродукция.Количество КАК КоличествоПродукции,
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ОтчетПроизводстваЗаСменуПродукция.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка.СчетЗатрат КАК СчетЗатрат
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСменуПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаПроизводствоИзДавальческогоСырья КАК СчетаПроизводствоИзДавальческогоСырья
		|		ПО ОтчетПроизводстваЗаСменуПродукция.Счет = СчетаПроизводствоИзДавальческогоСырья.Счет
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка = &Основание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	ОтчетПроизводстваЗаСменуУслуги.НомерСтроки,
		|	ОтчетПроизводстваЗаСменуУслуги.Спецификация,
		|	ОтчетПроизводстваЗаСменуУслуги.Количество,
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка.ПодразделениеЗатрат,
		|	ОтчетПроизводстваЗаСменуУслуги.НоменклатурнаяГруппа,
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка.СчетЗатрат
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ОтчетПроизводстваЗаСменуУслуги
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка = &Основание
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СчетаПроизводствоИзДавальческогоСырья";
		
		Запрос.Выполнить();
		
		ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		СчетаУчетаЗатратВТаблице = Истина;
		
		// Подготовим исходные данные для заполнения табличной части
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Параметры.Вставить("Основание", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛОЖЬ КАК ПроизводствоИзМатериаловЗаказчика,
		|	АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки КАК НомерСтрокиВыпуск,
		|	АктОбОказанииПроизводственныхУслугУслуги.Спецификация КАК Спецификация,
		|	АктОбОказанииПроизводственныхУслугУслуги.Количество КАК КоличествоПродукции,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.СчетЗатрат КАК СчетЗатрат
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
		|ГДЕ
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка = &Основание
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация";
		Запрос.Выполнить();
		
		ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
		// Заполнение шапки
		Комментарий        = Основание.Комментарий;
		Контрагент         = Основание.Контрагент;
		Организация        = Основание.Организация;
		мДокументОснование = Основание;
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		Для Каждого ТекСтрокаМатериалыЗаказчика ИЗ Основание.МатериалыЗаказчика Цикл
			НоваяСтрока              = МатериалыЗаказчика.Добавить();
			НоваяСтрока.Количество   = ТекСтрокаМатериалыЗаказчика.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаМатериалыЗаказчика.Номенклатура;
			НоваяСтрока.СчетПередачи = ТекСтрокаМатериалыЗаказчика.СчетУчета;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		Склад                    = Основание.СкладПолучатель;
		ПодразделениеОрганизации = Основание.ПодразделениеПолучатель;
		
		Для Каждого СтрокаОснования Из Основание.Товары Цикл
			
			НоваяСтрока = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОснования, "Номенклатура, КоличествоМест, ЕдиницаИзмерения, Коэффициент, Количество");
			НоваяСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
			
		КонецЦикла;
		
		// Не поддерживается перемещение материалов, принятых в переработку
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;

	НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат = Ложь;
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц)
	
	// Получим данные о сырье для заполнения табличной части
	// Исходные данные (таблица Выпуск) должны быть помещены в МенеджерВременныхТаблиц до выполнения процедуры
	ЭлементыТекстаЗапроса = Новый Массив;
	// Получаем данные о расходе сырья
	ЭлементыТекстаЗапроса.Добавить(УправлениеПроизводством.ТекстЗапросаВременнаяТаблицаЗатратыСырья());
	
	// Преобразуем в формат получателя
	ЭлементыТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ЗатратыСырья.ПроизводствоИзМатериаловЗаказчика КАК ПроизводствоИзМатериаловЗаказчика,
		|	МИНИМУМ(ЗатратыСырья.НомерСтрокиВыпуск) КАК НомерСтрокиВыпуск,
		|	МАКСИМУМ(ЗатратыСырья.НомерСтрокиСпецификации) КАК НомерСтрокиСпецификации,
		|	ЗатратыСырья.СчетЗатрат КАК СчетЗатрат,
		|	ЗатратыСырья.СчетЗатрат.Код КАК СчетЗатратПредставление,
		|	ЗатратыСырья.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ЗатратыСырья.ПодразделениеЗатрат.Наименование КАК ПодразделениеЗатратПредставление,
		|	ЗатратыСырья.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ЗатратыСырья.НоменклатурнаяГруппа.Наименование КАК НоменклатурнаяГруппаПредставление,
		|	ЗатратыСырья.Номенклатура КАК Номенклатура,
		|	ЗатратыСырья.Номенклатура.Наименование КАК НоменклатураПредставление,
		|	СУММА(ЗатратыСырья.Количество) КАК Количество,
		|	ЗатратыСырья.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	1 КАК Коэффициент,
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН,
		|	ЗатратыСырья.СтатьяЗатрат КАК СтатьяЗатрат
		|ИЗ
		|	ЗатратыСырья КАК ЗатратыСырья
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗатратыСырья.ПроизводствоИзМатериаловЗаказчика,
		|	ЗатратыСырья.Номенклатура,
		|	ЗатратыСырья.Номенклатура.Наименование,
		|	ЗатратыСырья.НоменклатурнаяГруппа,
		|	ЗатратыСырья.НоменклатурнаяГруппа.Наименование,
		|	ЗатратыСырья.СчетЗатрат,
		|	ЗатратыСырья.СчетЗатрат.Код,
		|	ЗатратыСырья.ПодразделениеЗатрат,
		|	ЗатратыСырья.ПодразделениеЗатрат.Наименование,
		|	ЗатратыСырья.ЕдиницаИзмерения,
		|	ЗатратыСырья.СтатьяЗатрат
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетЗатратПредставление,
		|	ПодразделениеЗатратПредставление,
		|	НоменклатурнаяГруппаПредставление,
		|	НомерСтрокиСпецификации,
		|	НоменклатураПредставление");
	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = СтрСоединить(ЭлементыТекстаЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПроизводствоИзМатериаловЗаказчика Тогда
			НоваяСтрока = МатериалыЗаказчика.Добавить();
		Иначе
			НоваяСтрока = Материалы.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
