#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Заявление";
	КомандаПечати.Представление = НСтр("ru = 'Заявление'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.НеВыполнятьЗаписьВФорме = Ложь;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - Массив - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати - СписокЗначений - значение - ссылка на объект;
//                                            представление - имя области, в которой был выведен объект (выходной параметр);
//  ПараметрыВывода - Структура - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявление") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Заявление", "Заявление", ПечатнаяФормаЗаявления(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.Сотрудник, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыборкаПоШапкеДокумента(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Ссылка,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Номер,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Дата,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.НалоговыйПериод,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.ИдентификаторФайла,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.КодИФНС,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Ответственный,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Комментарий,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Руководитель,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.КоличествоПодтверждающихДокументов,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация.ИндивидуальныйПредприниматель КАК ИндивидуальныйПредприниматель,
	|	ВЫБОР
	|		КОГДА ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоЮрЛцо,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация.НаименованиеПолное,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация.ИНН,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация.Наименование,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Телефон
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ КАК ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ
	|ГДЕ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.ИндивидуальныйПредприниматель КАК ФизическоеЛицо,
	|	ДанныеДокументов.Дата КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаОрганизации
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|ГДЕ
	|	НЕ ДанныеДокументов.ЭтоЮрЛцо
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДанныеДокументов.Руководитель,
	|	ВТДанныеДокументов.Дата
	|ИЗ
	|	ВТДанныеДокументов КАК ВТДанныеДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Ссылка,
	|	КОЛИЧЕСТВО(ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Сотрудник) КАК ВсегоСотрудников
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Сотрудники КАК ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники
	|ГДЕ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Ссылка";
	
	Запрос.Выполнить();
	
	ОписательВТ = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
						Запрос.МенеджерВременныхТаблиц,
						"ВТФизическиеЛицаОрганизации");
	
	МассивНеобходимыхКадровыхДанных = Новый Массив();
	МассивНеобходимыхКадровыхДанных.Добавить("Наименование");
	МассивНеобходимыхКадровыхДанных.Добавить("Фамилия");
	МассивНеобходимыхКадровыхДанных.Добавить("Имя");
	МассивНеобходимыхКадровыхДанных.Добавить("Отчество"); 
	МассивНеобходимыхКадровыхДанных.Добавить("ИНН");
	
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВТ, Истина, МассивНеобходимыхКадровыхДанных);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "Дата";
	ОписаниеИсточникаДанных.СписокСсылок = МассивСсылок;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.Номер,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокументов.ЭтоЮрЛцо
	|				И ФИОИП.Фамилия ЕСТЬ НЕ NULL 
	|			ТОГДА ФИОИП.Фамилия + "" "" + ФИОИП.Имя + "" "" + ФИОИП.Отчество
	|		ИНАЧЕ ДанныеДокументов.ОрганизацияНаименованиеПолное
	|	КОНЕЦ КАК ОрганизацияНаименованиеПолное,
	|	ДанныеДокументов.ОрганизацияИНН,
	|	ЕСТЬNULL(СведенияОбОрганизациях.КПП, """") КАК ОрганизацияКПП,
	|	ДанныеДокументов.ЭтоЮрЛцо,
	|	ДанныеДокументов.ОрганизацияНаименование,
	|	ДанныеДокументов.Ответственный,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ДанныеРуководителя.ИНН, """") КАК ИННРуководителя,
	|	ЕСТЬNULL(ДанныеРуководителя.Фамилия, """") КАК ФамилияРуководителя,
	|	ЕСТЬNULL(ДанныеРуководителя.Имя, """") КАК ИмяРуководителя,
	|	ЕСТЬNULL(ДанныеРуководителя.Отчество, """") КАК ОтчествоРуководителя,
	|	ДанныеДокументов.КодИФНС,
	|	ДанныеДокументов.НалоговыйПериод,
	|	ДанныеДокументов.КоличествоПодтверждающихДокументов,
	|	ДанныеДокументов.Телефон,
	|	ЕСТЬNULL(Итоги.ВсегоСотрудников, 0) КАК ВсегоСотрудников
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ФИОИП
	|		ПО (ДанныеДокументов.ЭтоЮрЛцо)
	|			И ДанныеДокументов.ИндивидуальныйПредприниматель = ФИОИП.ФизическоеЛицо
	|			И ДанныеДокументов.Дата = ФИОИП.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ДанныеРуководителя
	|		ПО ДанныеДокументов.Руководитель = ДанныеРуководителя.ФизическоеЛицо
	|			И ДанныеДокументов.Дата = ДанныеРуководителя.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ДанныеДокументов.Организация = СведенияОбОрганизациях.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИТОГИ
	|		ПО (ДанныеДокументов.Ссылка = Итоги.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыборкаПоСтрокамДокумента(МассивСсылок) Экспорт 
	Запрос = Новый Запрос;                    
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Ссылка КАК Ссылка,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.НомерСтроки КАК НомерСтроки,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Сотрудник,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.ИНН,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Фамилия,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Имя,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Отчество,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.ВидДокумента,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.СерияДокумента,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.НомерДокумента,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.КемВыданДокумент,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.ДатаВыдачиДокумента,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.ДатаРождения,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.ВидДокумента.КодМВД
	|ИЗ
	|	Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ КАК ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Сотрудники КАК ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники
	|		ПО (ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Ссылка = ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Ссылка)
	|ГДЕ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛСотрудники.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выбрать();		
КонецФункции	

Функция ПечатнаяФормаЗаявления(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ";
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.АвтоМасштаб = Истина;
	
	ВыборкаПоШапкеДокумента = ВыборкаПоШапкеДокумента(МассивОбъектов);
	ВыборкаПоСтрокамДокумента = ВыборкаПоСтрокамДокумента(МассивОбъектов);
	
	Пока ВыборкаПоШапкеДокумента.Следующий() Цикл
		ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Ссылка");
	
		ВсегоСотрудников = ВыборкаПоШапкеДокумента.ВсегоСотрудников;
		ОрганизацияЭтоЮрЛицо = ЗарплатаКадры.ЭтоЮридическоеЛицо(ВыборкаПоШапкеДокумента.Организация);
		
		// Титульная страница заявления.
		МакетСтраницы = ПолучитьМакет("Страница1");

		НезаполненнаяСтрока = "--------------------------------------------------";
	
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.ОрганизацияИНН, МакетСтраницы, "ИНН", 12);
		Если ОрганизацияЭтоЮрЛицо Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.ОрганизацияКПП, МакетСтраницы, "КПП", 9);
		КонецЕсли;
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Прав("0000000000" + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоШапкеДокумента.Номер, Истина, Истина), 10), МакетСтраницы, "Номер", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.КодИФНС, МакетСтраницы, "КодИФНС", 4);
		ДлиныСтрок = Новый Массив();
		ДлиныСтрок.Добавить(40);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеПолное, ДлиныСтрок), МакетСтраницы, "Наименование", 160);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(ВыборкаПоШапкеДокумента.НалоговыйПериод, "ЧГ=0"), МакетСтраницы, "НалоговыйПериод", 4);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Цел(ВсегоСотрудников / 3) + ?(ВсегоСотрудников % 3 = 0, 0, 1) + 1, "ЧЦ=3; ЧВН="), МакетСтраницы, "ЛистовЗаявления", 3);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КоличествоПодтверждающихДокументов), Формат(ВыборкаПоШапкеДокумента.КоличествоПодтверждающихДокументов, "ЧЦ=3; ЧН=-; ЧВН="), НезаполненнаяСтрока), МакетСтраницы, "КоличествоПодтверждающихДокументов", 3);
		МакетСтраницы.Параметры.ВидПодписанта = ОрганизацияЭтоЮрЛицо;
		Если ОрганизацияЭтоЮрЛицо Тогда
			ФИОРуководителя = ВыборкаПоШапкеДокумента.ФамилияРуководителя + ?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ФамилияРуководителя)," ","") + ВыборкаПоШапкеДокумента.ИмяРуководителя + ?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИмяРуководителя)," ","") + ВыборкаПоШапкеДокумента.ОтчествоРуководителя;
			ДлиныСтрок = Новый Массив();
			ДлиныСтрок.Добавить(20);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ФИОРуководителя, ДлиныСтрок), МакетСтраницы, "ФИОРуководителя", 60);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИННРуководителя), ВыборкаПоШапкеДокумента.ИННРуководителя, НезаполненнаяСтрока), МакетСтраницы, "ИННРуководителя", 12);
		КонецЕсли;
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Телефон), ВыборкаПоШапкеДокумента.Телефон, НезаполненнаяСтрока), МакетСтраницы, "Телефон", 20);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(ВыборкаПоШапкеДокумента.Дата, "ДФ=dd.MM.yyyy"),".",""), МакетСтраницы, "Дата", 8);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "НаимДок", 40);
		
		ТабДокумент.Вывести(МакетСтраницы);
		
		// Страницы с данными физлиц.
		ВыведеноНаСтранице = 0;
		НомерВыводимойСтраницы = 2;
		ВыборкаПоСтрокамДокумента.Сбросить();
		Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
			Если ВыборкаПоСтрокамДокумента.НомерСтроки = Null Тогда
				Продолжить;
			КонецЕсли;	
			
			Если ВыведеноНаСтранице = 0 Тогда // подготовим новую страницу
				МакетСтраницы = ПолучитьМакет("Страница2");
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.ОрганизацияИНН, МакетСтраницы, "ИНН", 12);
				Если ОрганизацияЭтоЮрЛицо Тогда
					ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.ОрганизацияКПП, МакетСтраницы, "КПП", 9);
				КонецЕсли;
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(НомерВыводимойСтраницы,"ЧЦ=3; ЧВН="), МакетСтраницы, "НомерВыводимойСтраницы", 3);
			КонецЕсли;
			
			ВыведеноНаСтранице = ВыведеноНаСтранице + 1;
			Постфикс = "" + ВыведеноНаСтранице + "_";
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоСтрокамДокумента.Фамилия, МакетСтраницы, "Фамилия" + Постфикс, 35);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоСтрокамДокумента.Имя, МакетСтраницы, "Имя" + Постфикс, 35);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоСтрокамДокумента.Отчество, МакетСтраницы, "Отчество" + Постфикс, 35);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоСтрокамДокумента.ИНН, МакетСтраницы, "ИНН" + Постфикс, 12);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(ВыборкаПоСтрокамДокумента.ДатаРождения, "ДФ=dd.MM.yyyy"),".",""), МакетСтраницы, "ДатаРождения" + Постфикс, 8);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоСтрокамДокумента.ВидДокументаКодМВД, МакетСтраницы, "ВидДокумента" + Постфикс, 2);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоСтрокамДокумента.СерияДокумента + ?(ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СерияДокумента + ВыборкаПоСтрокамДокумента.НомерДокумента)," ","") + ВыборкаПоСтрокамДокумента.НомерДокумента, МакетСтраницы, "СерияНомерДокумента" + Постфикс, 20);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(ВыборкаПоСтрокамДокумента.ДатаВыдачиДокумента, "ДФ=dd.MM.yyyy"),".",""), МакетСтраницы, "ДатаВыдачиДокумента" + Постфикс, 8);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВыборкаПоСтрокамДокумента.КемВыданДокумент, МакетСтраницы, "КемВыданДокумент" + Постфикс, 35);
			
			Если ВыведеноНаСтранице = 3 Тогда // выведем заполненную страницу
				ВыведеноНаСтранице = 0;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(МакетСтраницы);
				НомерВыводимойСтраницы = НомерВыводимойСтраницы + 1;
			КонецЕсли;
			
		КонецЦикла;
		Если ВыведеноНаСтранице > 0 Тогда
			Для Сч = ВыведеноНаСтранице + 1 По 3 Цикл
				Постфикс = "" + Сч + "_";
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "Фамилия" + Постфикс, 35);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "Имя" + Постфикс, 35);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "Отчество" + Постфикс, 35);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "ИНН" + Постфикс, 12);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "ДатаРождения" + Постфикс, 8);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "ВидДокумента" + Постфикс, 2);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "СерияНомерДокумента" + Постфикс, 20);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "ДатаВыдачиДокумента" + Постфикс, 8);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(НезаполненнаяСтрока, МакетСтраницы, "КемВыданДокумент" + Постфикс, 35);
			КонецЦикла;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(МакетСтраницы);
		КонецЕсли;
	
	КонецЦикла;	
	Возврат ТабДокумент

КонецФункции // ПечатьЗаявления()

#КонецОбласти

#КонецЕсли