#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Справочники.КомплектыОтчетностиПерсучета.ДокументыСЗВПередЗаписью(ЭтотОбъект, РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Если ПерсонифицированныйУчет.СведенияДокументаРазнесеныПоЛицевымСчетам(Ссылка) Тогда
		ДанныеДляПроведения = ДанныеДляПроведения();
		
		ПериодРасчетов = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
		ПерсонифицированныйУчет.ЗарегистрироватьПереданныеВПФРВзносы(Движения, Организация, ПериодРасчетов, ДанныеДляПроведения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьЗапросДляПроверкиЗаполнения()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаЗаписиОСтаже", ЗаписиОСтаже);
	Запрос.УстановитьПараметр("ТаблицаСотрудники", Сотрудники);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСотрудники.НомерСтроки,
	|	ТаблицаСотрудники.Сотрудник,
	|	ТаблицаСотрудники.Фамилия,
	|	ТаблицаСотрудники.Имя,
	|	ТаблицаСотрудники.Отчество,
	|	ТаблицаСотрудники.АдресДляИнформирования,
	|	ТаблицаСотрудники.СтраховойНомерПФР,
	|	ТаблицаСотрудники.НачисленоСтраховая,
	|	ТаблицаСотрудники.УплаченоСтраховая,
	|	ТаблицаСотрудники.НачисленоНакопительная,
	|	ТаблицаСотрудники.УплаченоНакопительная
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудники КАК ТаблицаСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудники.Сотрудник,
	|	МИНИМУМ(ВТСотрудники.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТСотрудникиНомераСтрок
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.Сотрудник";
	
	Запрос.Выполнить();
	
	КадровыйУчет.СоздатьВТФизическиеЛицаРаботавшиеВОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, Организация, ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод), ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	МИНИМУМ(ДублиСтрок.НомерСтроки) КАК НомерСтрокиДубль
	|ПОМЕСТИТЬ ВТДублиСтрокСотрудник
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ДублиСтрок
	|		ПО СотрудникиДокумента.НомерСтроки > ДублиСтрок.НомерСтроки
	|			И СотрудникиДокумента.Сотрудник = ДублиСтрок.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиДокумента.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	МИНИМУМ(ДублиСтрок.НомерСтроки) КАК НомерСтрокиДубль
	|ПОМЕСТИТЬ ВТДублиСтрокСтраховойНомерПФР
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ДублиСтрок
	|		ПО СотрудникиДокумента.НомерСтроки > ДублиСтрок.НомерСтроки
	|			И СотрудникиДокумента.СтраховойНомерПФР = ДублиСтрок.СтраховойНомерПФР
	|			И СотрудникиДокумента.Сотрудник <> ДублиСтрок.Сотрудник
	|			И (СотрудникиДокумента.СтраховойНомерПФР <> """")
	|			И (СотрудникиДокумента.СтраховойНомерПФР <> ""   -   -      "")
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиДокумента.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки,
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.Отчество,
	|	СотрудникиДокумента.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СотрудникиДокумента.АдресДляИнформирования,
	|	СотрудникиДокумента.СтраховойНомерПФР,
	|	ДублиСтрок.НомерСтрокиДубль КАК КонфликтующаяСтрока,
	|	ВЫБОР
	|		КОГДА АктуальныеСотрудники.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СотрудникРаботаетВОрганизации,
	|	ДублиСтрокСтраховойНомерПФР.НомерСтрокиДубль КАК КонфликтующаяСтрокаСтраховойНомер,
	|	СотрудникиДокумента.НачисленоСтраховая,
	|	СотрудникиДокумента.УплаченоСтраховая,
	|	СотрудникиДокумента.НачисленоНакопительная,
	|	СотрудникиДокумента.УплаченоНакопительная,
	|	СотрудникиДокумента.Сотрудник.ДатаРождения КАК ДатаРождения
	|ПОМЕСТИТЬ ВТСотрудникиДокумента
	|ИЗ
	|	ВТСотрудники КАК СотрудникиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДублиСтрокСотрудник КАК ДублиСтрок
	|		ПО СотрудникиДокумента.НомерСтроки = ДублиСтрок.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДублиСтрокСтраховойНомерПФР КАК ДублиСтрокСтраховойНомерПФР
	|		ПО СотрудникиДокумента.НомерСтроки = ДублиСтрокСтраховойНомерПФР.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаРаботавшиеВОрганизации КАК АктуальныеСотрудники
	|		ПО СотрудникиДокумента.Сотрудник = АктуальныеСотрудники.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаписиОСтаже.Сотрудник,
	|	ТаблицаЗаписиОСтаже.НомерСтроки,
	|	ТаблицаЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ТаблицаЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ТаблицаЗаписиОСтаже.ДатаНачалаПериода,
	|	ТаблицаЗаписиОСтаже.ДатаОкончанияПериода,
	|	ТаблицаЗаписиОСтаже.ТерриториальныеУсловия,
	|	ТаблицаЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ТаблицаЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ТаблицаЗаписиОСтаже.КодПозицииСписка,
	|	ТаблицаЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ТаблицаЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ТаблицаЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ТаблицаЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ТаблицаЗаписиОСтаже.ТретийПараметрВыслугиЛет
	|ПОМЕСТИТЬ ВТТаблицаСтажа
	|ИЗ
	|	&ТаблицаЗаписиОСтаже КАК ТаблицаЗаписиОСтаже
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.Сотрудник,
	|	ЗаписиОСтаже.НомерСтроки,
	|	ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ЗаписиОСтаже.НомерДополнительнойЗаписи,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	СотрудникиНомераСтрок.НомерСтроки КАК НомерСтрокиСотрудник
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	ВТТаблицаСтажа КАК ЗаписиОСтаже
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиНомераСтрок КАК СотрудникиНомераСтрок
	|		ПО ЗаписиОСтаже.Сотрудник = СотрудникиНомераСтрок.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДокумента.НомерСтроки КАК НомерСтрокиСотрудник,
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.СотрудникНаименование,
	|	СотрудникиДокумента.АдресДляИнформирования,
	|	СотрудникиДокумента.СтраховойНомерПФР,
	|	СотрудникиДокумента.СотрудникРаботаетВОрганизации,
	|	СотрудникиДокумента.КонфликтующаяСтрока,
	|	СотрудникиДокумента.Фамилия,
	|	СотрудникиДокумента.Имя,
	|	СотрудникиДокумента.КонфликтующаяСтрокаСтраховойНомер,
	|	СотрудникиДокумента.НачисленоСтраховая,
	|	СотрудникиДокумента.УплаченоСтраховая,
	|	СотрудникиДокумента.НачисленоНакопительная,
	|	СотрудникиДокумента.УплаченоНакопительная,
	|	СотрудникиДокумента.ДатаРождения КАК ДатаРождения
	|ИЗ
	|	ВТСотрудникиДокумента КАК СотрудникиДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСотрудник";
	
	Возврат Запрос;
	
КонецФункции

Функция ПолныйПутьКИсточникуОшибки(СообщениеПользователю) Экспорт
	
	Поле = СообщениеПользователю.Поле;
	
	СтруктураПути = ПерсонифицированныйУчетКлиентСервер.СтруктураПутиКИсточникуОшибки(СообщениеПользователю.Поле);
	
	Если СтруктураПути.ИндексСтроки <> Неопределено
		И СтруктураПути.ПутьКРеквизиту = "ЗаписиОСтаже" Тогда
		
		Сотрудник = ЭтотОбъект[СтруктураПути.ПутьКРеквизиту][СтруктураПути.ИндексСтроки].Сотрудник;
		
		СтрокаТаблицыСотрудник = Сотрудники.Найти(Сотрудник, "Сотрудник");
		
		СтруктураПути.Родитель = ПерсонифицированныйУчетКлиентСервер.СтруктураПутиКОшибке();
		СтруктураПути.Родитель.ПутьКРеквизиту = "Сотрудники";
		СтруктураПути.Родитель.ИндексСтроки = СтрокаТаблицыСотрудник.НомерСтроки - 1;
		СтруктураПути.Родитель.ИмяРеквизитаТабличнойЧасти = "";
	КонецЕсли;
	
	Возврат СтруктураПути;
	
КонецФункции

Процедура ПроверитьДанныеДокумента(Отказ = Ложь, НеПроверяемыеРеквизиты = Неопределено) Экспорт 
	Ошибки = Новый Массив;
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;	
	
	Если Не ДополнительныеСвойства.Свойство("НеПроверятьДанныеОрганизации") Тогда
		ПерсонифицированныйУчет.ПроверитьДанныеОрганизации(ЭтотОбъект, Организация, Отказ);
	КонецЕсли;	
	
	ТекстОшибки = НСтр("ru = 'Форма СЗВ-6-1 подается за периоды до 2013 г.'");

	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если ОтчетныйПериод >= '20130101' Тогда
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "ОтчетныйПериод", Отказ);
		КонецЕсли;
	Иначе
		Если КорректируемыйПериод >= '20130101' Тогда
			ПерсонифицированныйУчетКлиентСервер.ДобавитьОшибкуЗаполненияЭлементаДокумента(Ошибки, Ссылка, ТекстОшибки, "КорректируемыйПериод", Отказ);
		КонецЕсли;
	КонецЕсли;	
	
	ЗапросПоСтрокамДокумента = СформироватьЗапросДляПроверкиЗаполнения();
	ПерсонифицированныйУчет.ПроверитьЗаполнениеДанныхВзносахИСтаже(ЭтотОбъект, ЗапросПоСтрокамДокумента, Ошибки, Отказ, Истина, НеПроверяемыеРеквизиты);
	
	Если ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		Период = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
		ПерсонифицированныйУчет.ПроверитьЗаписиОСтаже(ЗапросПоСтрокамДокумента.МенеджерВременныхТаблиц, Ссылка, Период, Отказ);		
	КонецЕсли;	
	
КонецПроцедуры

Функция ДанныеДляПроведения()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоСтраховая,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоСтраховая,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.НачисленоНакопительная,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.УплаченоНакопительная,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка) КАК ТипДоговора
		|ИЗ
		|	Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
		|ГДЕ
		|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка = &Ссылка";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоНачисленоСтраховая КАК НачисленоСтраховая,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоУплаченоСтраховая КАК УплаченоСтраховая,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоНачисленоНакопительная КАК НачисленоНакопительная,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.ДоУплаченоНакопительная КАК УплаченоНакопительная,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
		|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка) КАК ТипДоговора
		|ИЗ
		|	Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
		|ГДЕ
		|	ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка = &Ссылка";
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ОкончаниеОтчетногоПериода() Экспорт
	
	Возврат ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
КонецФункции

#КонецОбласти

#КонецЕсли
