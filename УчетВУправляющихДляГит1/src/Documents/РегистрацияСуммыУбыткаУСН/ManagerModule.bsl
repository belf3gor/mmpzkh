#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 20, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Процедура ОбработатьИзменениеГодаНаСервере(Объект) Экспорт
	
	Если Объект.Убытки.Количество() <> 10 Тогда
		Объект.Убытки.Очистить();
		Для СтрокаГод = 1 По 10 Цикл
			Строка = Объект.Убытки.Вставить(0);
			
			ГодСтроки 		= ДобавитьМесяц(Объект.Дата, - 12 * СтрокаГод);
			НачалоПериода 	= ВыборПериодаКлиентСервер.НачалоПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, ГодСтроки);
			КонецПериода  	= ВыборПериодаКлиентСервер.КонецПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, ГодСтроки);
	        Строка.Год 		= ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, НачалоПериода, КонецПериода);
			
		КонецЦикла;
	ИначеЕсли НачалоГода(Объект.Дата) <= Дата(Число(Объект.Убытки[9].Год),01,01) Тогда
		//год документа сдвинут назад
		Пока НачалоГода(Объект.Дата) <= Дата(Число(Объект.Убытки[9].Год),01,01) Цикл
			Объект.Убытки.Удалить(9);
			Строка = Объект.Убытки.Вставить(0);
			
			ГодСтроки 		= ДобавитьМесяц(Дата(Число(Объект.Убытки[1].Год),01,01), -12);
			НачалоПериода 	= ВыборПериодаКлиентСервер.НачалоПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, ГодСтроки);
			КонецПериода  	= ВыборПериодаКлиентСервер.КонецПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, ГодСтроки);
	        Строка.Год 		= ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, НачалоПериода, КонецПериода);
			
		КонецЦикла;
	ИначеЕсли ДобавитьМесяц(НачалоГода(Объект.Дата), - 12 * 10) > Дата(Число(Объект.Убытки[0].Год),01,01) Тогда
		//год документа сдвинут вперед
		Пока ДобавитьМесяц(НачалоГода(Объект.Дата), - 12 * 10) > Дата(Число(Объект.Убытки[0].Год),01,01) Цикл
			Объект.Убытки.Удалить(0);
			Строка = Объект.Убытки.Добавить();
			
			ГодСтроки 		= ДобавитьМесяц(Дата(Число(Объект.Убытки[8].Год),01,01), 12);
			НачалоПериода 	= ВыборПериодаКлиентСервер.НачалоПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, ГодСтроки);
			КонецПериода  	= ВыборПериодаКлиентСервер.КонецПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, ГодСтроки);
	        Строка.Год 		= ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, НачалоПериода, КонецПериода);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецЕсли
