#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если Комплектующие.Количество() > 0 Тогда
		МассивТовары = Новый Массив(Комплектующие.Количество());
		
		Комплектующие.ЗагрузитьКолонку(МассивТовары, "Себестоимость");
		Комплектующие.ЗагрузитьКолонку(МассивТовары, "ДокументОприходования");
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ПроверяемыеРеквизиты.Найти("Склад") = Неопределено Тогда
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;

	Если ВидОперации <> Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Комплектующие.ДоляСтоимости");
	КонецЕсли;
	
	РаздельныйУчетНДСНаСчете19  = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата);
	РаздельныйУчетНДСДо2014Года = УчетнаяПолитика.РаздельныйУчетНДСДо2014Года(Организация, Дата);
	
	Если НЕ РаздельныйУчетНДСДо2014Года Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НДСвСтоимостиТоваров");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	СчетаУчетаВДокументах.ПроверитьЗаполнение(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если УчетнаяПолитика.СпособОценкиМПЗ(Организация, Дата) <> Перечисления.СпособыОценки.ФИФО 
		И НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов")
		И Комплектующие.Количество() > 0 Тогда
		
		Комплектующие.ЗагрузитьКолонку(Новый Массив(Комплектующие.Количество()), "ДокументОприходования");
		
	КонецЕсли; 

	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Комплектующие.Итог("Сумма");
	
	СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(ЭтотОбъект, РежимЗаписи);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.КомплектацияНоменклатуры.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// Таблица списанных товаров - комплектация
	ТаблицаСписанныеТоварыКомплектация = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.СписаниеТоваровКомплектацияТаблица, ПараметрыПроведения.СписаниеТоваровКомплектация, Отказ);
	
	ТаблицаКомплектующиеКомплектация = УчетТоваров.ПодготовитьТаблицуКомплектующихКомплектация(
		ТаблицаСписанныеТоварыКомплектация, ПараметрыПроведения.СписаниеТоваровКомплектация, Отказ);

	// Таблица списанных товаров - разукомплектация
	СписаниеТоваровРазукомплектацияТаблица	=
		Документы.КомплектацияНоменклатуры.ПодготовитьТаблицуСписаниеТоваровРазукомплектация(
			ПараметрыПроведения.СписаниеТоваровРазукомплектацияТаблица, ПараметрыПроведения.СписаниеТоваровРазукомплектация);
	
	ТаблицаСписанныеТоварыРазукомплектация = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		СписаниеТоваровРазукомплектацияТаблица, ПараметрыПроведения.СписаниеТоваровРазукомплектация, Отказ);

	ТаблицаКомплектующиеРазукомплектация = УчетТоваров.ПодготовитьТаблицуКомплектующихРазукомплектация(
		СписаниеТоваровРазукомплектацияТаблица, ТаблицаСписанныеТоварыРазукомплектация, Отказ);

	Документы.КомплектацияНоменклатуры.ДобавитьКолонкуСодержание(ПараметрыПроведения.ПоступлениеГТДТаблица);

	// Структура таблиц для отражения в налоговом учете УСН
	ТаблицаСписанныеТовары = ТаблицаКомплектующиеКомплектация.Скопировать();
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКомплектующиеРазукомплектация, ТаблицаСписанныеТовары);
	СтруктураТаблицУСН = Новый Структура("ТаблицаТМЦ", ТаблицаСписанныеТовары);
	
	// Учет доходов и расходов ИП
	ТаблицыМатериаловПродукцииИПКомплектация = Документы.КомплектацияНоменклатуры.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаКомплектующиеКомплектация, ПараметрыПроведения.СписаниеТоваровКомплектация);
	
	ТаблицыМатериаловПродукцииИПРазукомплектация = Документы.КомплектацияНоменклатуры.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаКомплектующиеРазукомплектация, ПараметрыПроведения.СписаниеТоваровРазукомплектация);
	
	ТаблицыСписанияМПЗИПКомплектация = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИПКомплектация.ТаблицаМатериалов, ПараметрыПроведения.СписаниеТоваровКомплектация, Отказ);
	
	ТаблицыСписанияМПЗИПРазукомплектация = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИПРазукомплектация.ТаблицаМатериалов, ПараметрыПроведения.СписаниеТоваровРазукомплектация, Отказ);
	
	ТаблицаПоступленияПродукцииИПКомплектация = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИПКомплектация.ПолученоПродукции, ПараметрыПроведения.СписаниеТоваровКомплектация);
	
	ТаблицаПоступленияПродукцииИПРазукомплектация = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИПРазукомплектация.ПолученоПродукции, ПараметрыПроведения.СписаниеТоваровРазукомплектация);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	УчетТоваров.СформироватьДвиженияКомплектация(ТаблицаКомплектующиеКомплектация,
		ПараметрыПроведения.СписаниеТоваровКомплектация, Движения, Отказ);
	УчетТоваров.СформироватьДвиженияКомплектация(ТаблицаКомплектующиеРазукомплектация,
		ПараметрыПроведения.СписаниеТоваровРазукомплектация, Движения, Отказ);

	// Учет НДС
	УчетНДСБП.СформироватьДвиженияКомплектацияТоваров(
		ПараметрыПроведения.ТоварыКомплектацияНДС, ТаблицаСписанныеТоварыКомплектация, 
		ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКомплектацияТоваров(
		ПараметрыПроведения.ТоварыКомплектацияНДС, ТаблицаСписанныеТоварыКомплектация, 
		ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);
		
	УчетНДСБП.СформироватьДвиженияРазукомплектацияТоваров(
		ПараметрыПроведения.ТоварыРазукомплектацияНДС, ТаблицаСписанныеТоварыРазукомплектация, 
		ПараметрыПроведения.ПоступлениеГТДТаблица, ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияРазукомплектацияТоваров(
		ПараметрыПроведения.ТоварыРазукомплектацияНДС, ТаблицаСписанныеТоварыРазукомплектация, 
		ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);
	
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИПКомплектация,
		ПараметрыПроведения.СписаниеТоваровКомплектация, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИПРазукомплектация,
		ПараметрыПроведения.СписаниеТоваровРазукомплектация, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступленияПродукцииИПКомплектация,
		ТаблицыСписанияМПЗИПКомплектация.СтоимостьПродукции,
		ПараметрыПроведения.СписаниеТоваровКомплектация, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступленияПродукцииИПРазукомплектация,
		ТаблицыСписанияМПЗИПРазукомплектация.СтоимостьПродукции,
		ПараметрыПроведения.СписаниеТоваровРазукомплектация, Движения, Отказ);
		
	// Регистрация в последовательности
	РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ЭтотОбъект, Отказ, , ПараметрыПроведения.ТаблицаРегистрации);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);

КонецПроцедуры

#КонецЕсли