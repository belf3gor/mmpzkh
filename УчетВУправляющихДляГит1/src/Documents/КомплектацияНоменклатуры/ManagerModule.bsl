#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 13, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчета",    "ЗапасыКромеЗабалансовых");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "Комплектация");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетСписанияНДС",    "ЗатратыНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "СписатьНДС");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоСписанияНДС1", "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоСписанияНДС2", "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоСписанияНДС3", "СубконтоЗатрат3");
	
	// Табличная часть Комплектующие
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Комплектующие", "СчетУчета",    "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Комплектующие", "СпособУчетаНДС", "СпособУчетаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "Разукомплектация");
	
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "Комплектация",     "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "Разукомплектация", "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "СписатьНДС",       "НДСвСтоимостиТоваров");
	
КонецПроцедуры

Процедура ДополнитьДанныеЗаполненияСчетовУчета(ДанныеЗаполнения) Экспорт
	
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить("Комплектация");
	ВидыОпераций.Добавить("Разукомплектация");
	
	Для Каждого ИмяВидаОперации Из ВидыОпераций Цикл
		
		Если ДанныеЗаполнения.Свойство(ИмяВидаОперации) Тогда
			ДанныеЗаполнения[ИмяВидаОперации] = (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры[ИмяВидаОперации]);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеЗаполнения.Свойство("СписатьНДС") Тогда
		ДанныеЗаполнения.СписатьНДС = (ДанныеЗаполнения.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.ВключитьВСтоимость);
	КонецЕсли;
	
КонецПроцедуры


#Область УстаревшиеПроцедурыИФункции

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВТабличнойЧасти(
		Объект,
		ИмяТабличнойЧасти);

КонецПроцедуры

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  Объект                - ДокументОбъект или соответствующие данные формы
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - оставлен для совместимости; не используется
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре = Неопределено) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
		Объект,
		СтрокаТабличнойЧасти,
		ИмяТабличнойЧасти);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.СпособУчетаНДС КАК СпособУчетаНДС,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.Номенклатура КАК Номенклатура,
	|	Реквизиты.Количество КАК Количество,
	|	Реквизиты.СчетУчета КАК СчетУчета,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Реквизиты.НДСвСтоимостиТоваров КАК НДСвСтоимостиТоваров,
	|	Реквизиты.СчетСписанияНДС КАК СчетСписанияНДС,
	|	Реквизиты.СубконтоСписанияНДС1 КАК СубконтоСписанияНДС1,
	|	Реквизиты.СубконтоСписанияНДС2 КАК СубконтоСписанияНДС2,
	|	Реквизиты.СубконтоСписанияНДС3 КАК СубконтоСписанияНДС3,
	|	Реквизиты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("ПлательщикНДС",			ПлательщикНДС);
	Запрос.УстановитьПараметр("ВидОперации",			Реквизиты.ВидОперации);
	Запрос.УстановитьПараметр("СинонимКомплектующие",	НСтр("ru = 'Комплектующие'"));
	Запрос.УстановитьПараметр("МассивСчетовДляГТД",		УчетНДСВызовСервераПовтИсп.СчетаУчетаДляГТД());
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
				 + ТекстЗапросаСписаниеТоваровКомплектация(НомераТаблиц)
				 + ТекстЗапросаСписаниеТоваровРазукомплектация(НомераТаблиц)
				 + ТекстЗапросаНДС(НомераТаблиц)
				 + ТекстЗапросаПоступлениеГТД(НомераТаблиц)
				 + ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	// Временная таблица
	НомераТаблиц.Вставить("ВременнаяТаблицаКомплектующие",     НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Комплектующие.Ссылка,
	|	Комплектующие.НомерСтроки,
	|	Комплектующие.ДоляСтоимости,
	|	Комплектующие.Количество,
	|	Комплектующие.Номенклатура,
	|	Комплектующие.Сумма,
	|	Комплектующие.СчетУчета,
	|	Комплектующие.НомерГТД,
	|	Комплектующие.СтранаПроисхождения,
	|	Комплектующие.ДокументОприходования,
	|	Комплектующие.Себестоимость,
	|	Комплектующие.СпособУчетаНДС КАК СпособУчетаНДСКомплектующей,
	|	Комплектующие.Ссылка.СпособУчетаНДС КАК СпособУчетаНДСКомплекта
	|ПОМЕСТИТЬ ТаблицаКомплектующие
	|ИЗ
	|	Документ.КомплектацияНоменклатуры.Комплектующие КАК Комплектующие
	|ГДЕ
	|	Комплектующие.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСписаниеТоваровКомплектация(НомераТаблиц)

	НомераТаблиц.Вставить("СписаниеТоваровКомплектация",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровКомплектацияТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ТипСклада КАК ТипСклада,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	Реквизиты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаКомплекта,
	|	Реквизиты.Количество КАК КоличествоКомплектов,
	|	""Комплектация"" КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Комплектующие"" КАК ИмяСписка,
	|	&СинонимКомплектующие КАК СинонимСписка,
	|	Реквизиты.Период КАК Период,
	|	ТаблицаКомплектующие.НомерСтроки КАК НомерСтроки,
	|	ТаблицаКомплектующие.СчетУчета КАК СчетУчета,
	|	ТаблицаКомплектующие.Номенклатура КАК Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	ТаблицаКомплектующие.ДокументОприходования КАК ДокументОприходования,
	|	ТаблицаКомплектующие.Себестоимость КАК Себестоимость,
	|	ТаблицаКомплектующие.Количество КАК Количество,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	Реквизиты.СчетУчета КАК КорСчетСписания,
	|	Реквизиты.Номенклатура КАК КорСубконто1,
	|	Реквизиты.Склад КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии) КАК ВидКорСубконто3
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО ИСТИНА
	|ГДЕ
	|	&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСписаниеТоваровРазукомплектация(НомераТаблиц)

	НомераТаблиц.Вставить("СписаниеТоваровРазукомплектация",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровРазукомплектацияТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ТипСклада КАК ТипСклада,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	Реквизиты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаКомплекта,
	|	Реквизиты.Количество КАК Количество,
	|	""Комплектация"" КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Комплектующие"" КАК ИмяСписка,
	|	&СинонимКомплектующие КАК СинонимСписка,
	|	ТаблицаКомплектующие.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.СчетУчета КАК СчетУчета,
	|	Реквизиты.Номенклатура КАК Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Период КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	0 КАК Себестоимость,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	ТаблицаКомплектующие.СчетУчета КАК КорСчетСписания,
	|	ТаблицаКомплектующие.Номенклатура КАК КорСубконто1,
	|	Реквизиты.Склад КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии) КАК ВидКорСубконто3,
	|	ТаблицаКомплектующие.Количество КАК КоличествоКомплектующих,
	|	ТаблицаКомплектующие.ДоляСтоимости КАК ДоляСтоимости
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО ИСТИНА
	|ГДЕ
	|	&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНДС(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыНДС",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыКомплектацияНДС",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыРазукомплектацияНДС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.НДСвСтоимостиТоваров КАК НДСвСтоимостиТоваров,
	|	Реквизиты.СчетСписанияНДС КАК СчетСписанияНДС,
	|	Реквизиты.СубконтоСписанияНДС1 КАК СубконтоСписанияНДС1,
	|	Реквизиты.СубконтоСписанияНДС2 КАК СубконтоСписанияНДС2,
	|	Реквизиты.СубконтоСписанияНДС3 КАК СубконтоСписанияНДС3,
	|	Реквизиты.Номенклатура КАК Комплект,
	|	Реквизиты.Количество КАК КоличествоКомплектов,
	|	Реквизиты.СчетУчета КАК СчетУчетаКомплектов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Комплектующие"" КАК ИмяСписка,
	|	&СинонимКомплектующие КАК СинонимСписка,
	|	ТаблицаКомплектующие.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаКомплектующие.Номенклатура КАК Номенклатура,
	|	ТаблицаКомплектующие.Количество КАК Количество,
	|	ТаблицаКомплектующие.СчетУчета КАК СчетУчета,
	|	ТаблицаКомплектующие.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаКомплектующие.НомерГТД КАК НомерГТД,
	|	ТаблицаКомплектующие.СпособУчетаНДСКомплекта КАК НовыйСпособУчетаНДС
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|ГДЕ
	|	&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|	И НЕ ТаблицаКомплектующие.СчетУчета.Забалансовый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Комплектующие"" КАК ИмяСписка,
	|	&СинонимКомплектующие КАК СинонимСписка,
	|	ТаблицаКомплектующие.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаКомплектующие.Номенклатура КАК Номенклатура,
	|	ТаблицаКомплектующие.Количество КАК Количество,
	|	ТаблицаКомплектующие.ДоляСтоимости КАК ДоляСтоимости,
	|	ТаблицаКомплектующие.СчетУчета КАК СчетУчета,
	|	ТаблицаКомплектующие.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаКомплектующие.НомерГТД КАК НомерГТД,
	|	ТаблицаКомплектующие.СпособУчетаНДСКомплектующей КАК НовыйСпособУчетаНДС
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|ГДЕ
	|	&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПоступлениеГТД(НомераТаблиц)

	НомераТаблиц.Вставить("ПоступлениеГТД",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеГТДТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСписка,
	|	ТаблицаКомплектующие.НомерСтроки КАК НомерСтроки,
	|	ТаблицаКомплектующие.Номенклатура КАК Номенклатура,
	|	ТаблицаКомплектующие.СчетУчета КАК СчетУчета,
	|	ТаблицаКомплектующие.НомерГТД КАК НомерГТД,
	|	ТаблицаКомплектующие.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаКомплектующие.Количество КАК Количество
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|ГДЕ
	|	&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|	И ТаблицаКомплектующие.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И ТаблицаКомплектующие.СчетУчета В(&МассивСчетовДляГТД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт

	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;

	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		ШаблонСодержание = "Оприходование %1";
		Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСодержание,
			БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета));
		СтрокаТаблицы.Содержание = Содержание;
	КонецЦикла;

КонецПроцедуры

// Распределяет количество номенклатуры по комплектующим в зависимости от доли списания
Функция ПодготовитьТаблицуСписаниеТоваровРазукомплектация(СписаниеТоваровРазукомплектацияТаблица, ТаблицаРеквизиты) Экспорт

	Реквизиты	= ТаблицаРеквизиты[0];
	
	ТаблицаСписания	= СписаниеТоваровРазукомплектацияТаблица.Скопировать();
	ТаблицаСписания.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	Если ТаблицаСписания.Количество() = 0
		ИЛИ Реквизиты.Количество = 0
		ИЛИ Реквизиты.ВидОперации <> Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
		Возврат ТаблицаСписания;
	КонецЕсли;
	
	МассивКоэффициентов	= ТаблицаСписания.ВыгрузитьКолонку("ДоляСтоимости");
	
	МассивРезультата = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(Реквизиты.Количество, МассивКоэффициентов, 3);
	Если МассивРезультата <> Неопределено Тогда
		ТаблицаСписания.ЗагрузитьКолонку(МассивРезультата, "Количество");
	КонецЕсли;
	
	Возврат ТаблицаСписания;

КонецФункции

Функция ПодготовитьТаблицыМатериаловПродукцииИП(ТаблицаСписанныеМПЗ, ТаблицаРеквизиты) Экспорт
	
	Перем СтруктураТаблиц;
	
	СтруктураТаблиц = Новый Структура("ТаблицаМатериалов, ПолученоПродукции");
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если НЕ УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	МассивТиповЗатрат = Новый Массив;
	МассивТиповЗатрат.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	МассивТиповЗатрат.Добавить(Тип("СправочникСсылка.ПрочиеДоходыИРасходы"));
	МассивТиповЗатрат.Добавить(Тип("СправочникСсылка.РасходыБудущихПериодов"));
	ОписаниеТиповЗатрат = Новый ОписаниеТипов(МассивТиповЗатрат);
	
	ТаблицаМатериалов = ТаблицаСписанныеМПЗ.Скопировать();
	ТаблицаМатериалов.Колонки.Добавить("Продукция",            Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаМатериалов.Колонки.Добавить("НоменклатурнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ТаблицаМатериалов.Колонки.Добавить("СтатьяЗатрат",         ОписаниеТиповЗатрат);
	ТаблицаМатериалов.Колонки.Добавить("СчетДоходов",          Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	ТаблицаМатериалов.Колонки.КорСчетСписания.Имя = "СчетЗатрат";
	ТаблицаМатериалов.Колонки.КоличествоДт.Имя    = "КоличествоПродукции";
	
	ТаблицаМатериалов.ЗагрузитьКолонку(ТаблицаМатериалов.ВыгрузитьКолонку("КорСубконто1"), "Продукция");
	ТаблицаМатериалов.ЗаполнитьЗначения(Реквизиты.НоменклатурнаяГруппаКомплекта, "НоменклатурнаяГруппа");
	
	СтруктураТаблиц.ТаблицаМатериалов =
		УчетДоходовИРасходовПредпринимателя.ДополнитьТаблицуСписанияМатериалов(ТаблицаМатериалов, ТаблицаРеквизиты);
	
	Если СтруктураТаблиц.ТаблицаМатериалов <> Неопределено Тогда
		СтруктураТаблиц.ПолученоПродукции = СтруктураТаблиц.ТаблицаМатериалов.Скопировать();
		СтруктураТаблиц.ПолученоПродукции.Колонки.СчетЗатрат.Имя = "СчетУчетаПродукции";
		СтруктураТаблиц.ПолученоПродукции.Свернуть("СчетУчетаПродукции, Продукция, НоменклатурнаяГруппа", "КоличествоПродукции");
	КонецЕсли;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Комплектация
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Комплектация";
	КомандаПечати.Представление = НСтр("ru = 'Комплектация номенклатуры'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Комплектация номенклатуры""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

КонецПроцедуры

// Функция формирует табличный документ
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьКомплектацияНоменклатуры(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КомплектацияНоменклатуры_Комплектация";

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КомплектацияНоменклатуры.Ссылка,
	|	КомплектацияНоменклатуры.Номер,
	|	КомплектацияНоменклатуры.Дата,
	|	КомплектацияНоменклатуры.ВидОперации,
	|	""Код:"" КАК ИмяКодАртикул,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КомплектацияНоменклатуры.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КомплектацияНоменклатуры.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК КодАртикул,
	|	КомплектацияНоменклатуры.Номенклатура.НаименованиеПолное КАК Комплект,
	|	КомплектацияНоменклатуры.Номенклатура,
	|	КомплектацияНоменклатуры.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	КомплектацияНоменклатуры.Количество,
	|	ПРЕДСТАВЛЕНИЕ(КомплектацияНоменклатуры.Ответственный) КАК ОтветственныйПредставление,
	|	КомплектацияНоменклатуры.Организация,
	|	КомплектацияНоменклатуры.Комплектующие.(
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура,
	|		ВЫБОР
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|				ТОГДА КомплектацияНоменклатуры.Комплектующие.Номенклатура.Артикул
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|				ТОГДА КомплектацияНоменклатуры.Комплектующие.Номенклатура.Код
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|				ТОГДА """"
	|		КОНЕЦ КАК КодАртикул,
	|		Количество,
	|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|		НомерСтроки
	|	)
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК КомплектацияНоменклатуры
	|ГДЕ
	|	КомплектацияНоменклатуры.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КомплектацияНоменклатуры.Дата,
	|	КомплектацияНоменклатуры.Ссылка,
	|	КомплектацияНоменклатуры.Комплектующие.НомерСтроки";

	Шапка = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КомплектацияНоменклатуры.ПФ_MXL_Комплектация");

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ?(Шапка.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация, "Комплектация", "Разукомплектация")+" номенклатуры" 
			+ " № " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Ложь)
			+ " от " + Формат(Шапка.Дата, "ДЛФ=Д") + " г.";
		ТабличныйДокумент.Вывести(ОбластьМакета);

		Если ВыводитьКоды Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("КомплектКод");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;

		ОбластьМакета = Макет.ПолучитьОбласть("Комплект");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Комплект           = СокрЛП(Шапка.Комплект);
		ОбластьМакета.Параметры.КоличествоНаПечать = "" + Шапка.Количество + " ("+Шапка.ЕдиницаИзмерения+")";
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Артикул";
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Код";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ЗапросКомплектующие = Шапка.Комплектующие.Выгрузить();
		Для каждого ВыборкаСтрокКомплектующие Из ЗапросКомплектующие Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокКомплектующие.Номенклатура) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В одной из строк не заполнено значение комплектующей - строка при печати пропущена.'"));
				Продолжить;
			КонецЕсли;

			ОбластьСтроки = ?(ВыводитьКоды, "СтрокаСКодом", "Строка");
			ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокКомплектующие);
			ОбластьМакета.Параметры.НомерСтроки = ЗапросКомплектующие.Индекс(ВыборкаСтрокКомплектующие) + 1;
			ОбластьМакета.Параметры.Товар       = СокрЛП(ВыборкаСтрокКомплектующие.Товар);
			ТабличныйДокумент.Вывести(ОбластьМакета);

		КонецЦикла;

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ОтветственныйПредставление = "/"+ Шапка.ОтветственныйПредставление + "/";
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета Комплектация формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Комплектация") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Комплектация", "Комплектация номенклатуры",
			ПечатьКомплектацияНоменклатуры(МассивОбъектов, ОбъектыПечати), , "Документ.КомплектацияНоменклатуры.ПФ_MXL_Комплектация");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Номенклатура");
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("ТаблицаРегистрации", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТаблицаРегистрации", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаКомплектующие.СчетУчета КАК СчетУчета,
	|	Реквизиты.СчетУчета КАК КорСчетСписания
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

#КонецЕсли
