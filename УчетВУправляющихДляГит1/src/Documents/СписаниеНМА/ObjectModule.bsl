#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.СписаниеНМА.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	ПараметрыВыбытия = УчетНМА.ПодготовитьТаблицыСведенийПоВыбытиюНМА(
		ПараметрыПроведения.ТаблицаНематериальныеАктивы, 
		ПараметрыПроведения.СписаниеНематериальныхАктивовРеквизиты, Отказ);
		
	// Учет доходов и расходов ИП
	ТаблицыСписанияНМАИП	= УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияОСиНМА(
		ПараметрыПроведения.СписаниеОСиНМАИПТаблица,
		ПараметрыПроведения.СписаниеОСиНМАИПРеквизиты, Движения, Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);
	
	УчетНМА.СформироватьДвиженияСостоянияНМАОрганизаций(ПараметрыПроведения.ТаблицаНематериальныеАктивы,
		ПараметрыПроведения.СписаниеНематериальныхАктивовРеквизиты, Движения, Отказ);
	
	УчетНМА.СформироватьДвиженияВыбытиеНМА(ПараметрыПроведения.СписаниеНематериальныхАктивовРеквизиты, 
		ПараметрыВыбытия, Движения, Отказ);
		
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеОСиНМА(
		ТаблицыСписанияНМАИП,
		ПараметрыПроведения.СписаниеОСиНМАИПРеквизиты, Движения, Отказ);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

#КонецОбласти

#КонецЕсли