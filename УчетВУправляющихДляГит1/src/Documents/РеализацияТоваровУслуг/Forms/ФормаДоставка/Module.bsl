#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполним реквизиты формы из параметров.
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,
		"Организация, Контрагент, Грузоотправитель, Грузополучатель,
		|АдресДоставки, ДатаДокумента,СведенияОТранспортировкеИГрузе,
		|ПеревозкаАвтотранспортом,
		|Перевозчик, МаркаАвтомобиля, РегистрационныйЗнакАвтомобиля,
		|Водитель, ВодительскоеУдостоверение, КраткоеНаименованиеГруза, СопроводительныеДокументы
		|");
	
	ПолноеНаименованиеКонтрагента = "";
	СсылкаДляПереходаНаКарту = УправлениеКонтактнойИнформациейБП.СтрокаСсылкиПоказатьНаКарте();
	
	// Отобразим грузоотправителя и грузополучателя
	Если НЕ ЗначениеЗаполнено(Грузоотправитель) Тогда
		ГрузоотправительОнЖе = 1;
	Иначе
		ГрузоотправительОнЖе = 0;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Грузополучатель) Тогда
		ГрузополучательОнЖе = 1;
	Иначе
		ГрузополучательОнЖе = 0;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Перевозчик) Тогда
		ПеревозчикОнЖе = 1;
	Иначе
		ПеревозчикОнЖе = 0;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстГрузоотправительОнЖе = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Наименование");
	Иначе
		ТекстГрузоотправительОнЖе = НСтр("ru = 'Организация'");
	КонецЕсли;
	Элементы.ГрузоотправительОнЖе1.СписокВыбора[0].Представление = ТекстГрузоотправительОнЖе;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстПеревозчикОнЖе = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Наименование");
	Иначе
		ТекстПеревозчикОнЖе = НСтр("ru = 'Организация'");
	КонецЕсли;
	Элементы.ПеревозчикОнЖе1.СписокВыбора[0].Представление = ТекстПеревозчикОнЖе;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		РеквизитыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Контрагент, "Наименование, НаименованиеПолное");
	
		ТекстГрузополучательОнЖе = РеквизитыКонтрагента.Наименование;
		
		Если ЗначениеЗаполнено(РеквизитыКонтрагента.НаименованиеПолное) Тогда
			ПолноеНаименованиеКонтрагента = РеквизитыКонтрагента.НаименованиеПолное;
		Иначе
			НаименованиеКонтрагента = РеквизитыКонтрагента.Наименование;
		КонецЕсли;
	Иначе
		ТекстГрузополучательОнЖе = НСтр("ru = 'Контрагент'");
	КонецЕсли;
	Элементы.ГрузополучательОнЖе1.СписокВыбора[0].Представление = ТекстГрузополучательОнЖе;
	
	// Заполним списки выбора адреса доставки и доверенности значениями по умолчанию
	РеализацияТоваровУслугФормы.ЗаполнитьСписокАдресовДоставки(ЭтаФорма, Контрагент, Грузополучатель, ДатаДокумента);
	
	ИспользоватьДоставкуАвтотранспортом = ПолучитьФункциональнуюОпцию("ИспользоватьДоставкуАвтотранспортом");
	Элементы.ГруппаПеревозкаАвтотранспортомШапка.Видимость = ИспользоватьДоставкуАвтотранспортом;
	Элементы.ГруппаПеревозкаАвтотранспортомПодвал.Видимость = ИспользоватьДоставкуАвтотранспортом;
	
	УправлениеФормой(ЭтаФорма);
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтаФорма,
		"БП.Документ.РеализацияТоваровУслуг",
		"ФормаРеквизитыОрганизацииКонтрагентаТовары",
		НСтр("ru='Новости: Реализация (акт, накладная)'"),
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтаФорма);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	ИначеЕсли Модифицированность И НЕ ПеренестиВДокумент Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;

	Если ПеренестиВДокумент И НЕ Отказ Тогда
		ОбработкаПроверкиЗаполненияНаКлиенте(Отказ);
	КонецЕсли;

	Если Отказ Тогда
		ПеренестиВДокумент = Ложь;
	КонецЕсли;

КонецПроцедуры
	

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	Если ПеренестиВДокумент И Модифицированность Тогда
		СтруктураРезультат = Новый Структура("
			|Грузоотправитель,Грузополучатель, ПеревозкаАвтотранспортом,
			|АдресДоставки, Перевозчик, МаркаАвтомобиля, РегистрационныйЗнакАвтомобиля,
			|СведенияОТранспортировкеИГрузе,
			|Водитель, ВодительскоеУдостоверение, КраткоеНаименованиеГруза, СопроводительныеДокументы");
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, ЭтаФорма);
		
		Если ГрузоотправительОнЖе = 1 Тогда
			СтруктураРезультат.Грузоотправитель = Неопределено;
		КонецЕсли;

		Если ГрузополучательОнЖе = 1 Тогда
			СтруктураРезультат.Грузополучатель = Неопределено;
		КонецЕсли;
		
		Если ПеревозчикОнЖе = 1 Тогда
			СтруктураРезультат.Перевозчик = Неопределено;
		КонецЕсли;
		
		ОповеститьОВыборе(СтруктураРезультат);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчкиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГрузоотправительОнЖеПриИзменении(Элемент)
	
	ОбновитьСписокАдресовДоставки();
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	
	ОбновитьСписокАдресовДоставки();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентАвтоПодбор(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОкончаниеВводаТекста(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательОнЖеПриИзменении(Элемент)
	
	ГрузополучательОнЖеПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	ОбновитьСписокАдресовДоставки();

КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентАвтоПодбор(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОкончаниеВводаТекста(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикОнЖеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентАвтоПодбор(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОкончаниеВводаТекста(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ОткрытьФорму("Справочник.ФизическиеЛица.ФормаСписка",
			Новый Структура("РежимВыбора", Истина), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Водитель = ФИОВодителя(ВыбранноеЗначение);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревозкаАвтотранспортомПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиПереходНаКартуНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформациейКлиентБП.ПоказатьНаКартеНажатие(ЭтотОбъект, Элемент, АдресДоставки);
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтаФорма,
		Команда
	);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтаФорма, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;

	Элементы.Грузоотправитель.Доступность                    = (Форма.ГрузоотправительОнЖе = 0);
	Элементы.Грузополучатель.Доступность                     = (Форма.ГрузополучательОнЖе = 0);
	Элементы.Перевозчик.Доступность                          = (Форма.ПеревозчикОнЖе = 0);
	Элементы.ГруппаПеревозкаАвтотранспортомШапка.Доступность = Форма.ПеревозкаАвтотранспортом;
	Элементы.АдресДоставкиПереходНаКарту.Доступность         = ЗначениеЗаполнено(Форма.АдресДоставки);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокАдресовДоставки()

	Если ГрузополучательОнЖе = 1 Тогда
		ВыбранныйГрузополучатель = Контрагент;
	Иначе
		ВыбранныйГрузополучатель = Грузополучатель;
	КонецЕсли;

	РеализацияТоваровУслугФормы.ЗаполнитьСписокАдресовДоставки(ЭтаФорма, Контрагент, ВыбранныйГрузополучатель, ДатаДокумента);
	Если Элементы.АдресДоставки.СписокВыбора.Количество() > 0 Тогда
		АдресДоставки = Элементы.АдресДоставки.СписокВыбора[0].Значение;
	Иначе
		АдресДоставки = "";
	КонецЕсли;
	
	
	Если ГрузоотправительОнЖе = 1 Тогда
		ВыбранныйГрузоотправитель = Организация;
	Иначе
		ВыбранныйГрузоотправитель = Грузоотправитель;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПроверкиЗаполненияНаКлиенте(Отказ)
	
	Если ГрузоотправительОнЖе = 0 Тогда
		Если НЕ ЗначениеЗаполнено(Грузоотправитель) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Грузоотправитель'"));
			Поле = "Грузоотправитель";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, "", Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ГрузополучательОнЖе = 0 Тогда
		Если НЕ ЗначениеЗаполнено(Грузополучатель) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Грузополучатель'"));
			Поле = "Грузополучатель";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, "", Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ПеревозчикОнЖе = 0 Тогда
		Если НЕ ЗначениеЗаполнено(Перевозчик) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Перевозчик'"));
			Поле = "Перевозчик";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, "", Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ГрузополучательОнЖеПриИзмененииНаСервере()

	ОбновитьСписокАдресовДоставки();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФИОВодителя(ФизическоеЛицо)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизическоеЛицо, "Наименование")
КонецФункции

#КонецОбласти
