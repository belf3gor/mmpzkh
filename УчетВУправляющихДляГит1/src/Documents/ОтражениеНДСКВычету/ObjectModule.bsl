#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

// Заполняет ТЧ Товары и Услуги по расчетному документу
//
Процедура ЗаполнитьПоРасчетномуДокументу(РежимДобавления) Экспорт

	Перем ВидыЦенностейПоСчетамУчета;

	Если НЕ ЗначениеЗаполнено(РасчетныйДокумент) тогда
		Возврат;
	КонецЕсли;

	ТаблицаДокумента = УчетНДСПереопределяемый.ПолучитьТаблицуДокументаНДС(РасчетныйДокумент, , Ложь);
	Если ТаблицаДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТаблицаДокумента.Колонки.Найти("СуммаБезНДСВал") <> Неопределено Тогда
		Если ТаблицаДокумента.Колонки.Найти("Сумма") <> Неопределено Тогда
			ТаблицаДокумента.Колонки.Удалить("Сумма");
		КонецЕсли;
		ТаблицаДокумента.Колонки.СуммаБезНДСВал.Имя = "Сумма";
		Если ТаблицаДокумента.Колонки.Найти("НДСВал") <> Неопределено Тогда
			ТаблицаДокумента.Колонки.НДСВал.Имя = "СуммаНДС";
		Иначе
			ТаблицаДокумента.Колонки.НДС.Имя = "СуммаНДС";
		КонецЕсли;
	ИначеЕсли ТаблицаДокумента.Колонки.Найти("СуммаБезНДС") <> Неопределено Тогда
		Если ТаблицаДокумента.Колонки.Найти("Сумма") <> Неопределено Тогда
			ТаблицаДокумента.Колонки.Удалить("Сумма");
		КонецЕсли;
		ТаблицаДокумента.Колонки.СуммаБезНДС.Имя = "Сумма";
		Если (ТаблицаДокумента.Колонки.Найти("НДС") <> Неопределено)
				И (ТаблицаДокумента.Колонки.Найти("СуммаНДС") = Неопределено) Тогда
			ТаблицаДокумента.Колонки.НДС.Имя = "СуммаНДС";
		КонецЕсли;
	ИначеЕсли (ТаблицаДокумента.Колонки.Найти("НДС") <> Неопределено)
			И (ТаблицаДокумента.Колонки.Найти("СуммаНДС") = Неопределено) Тогда
		ТаблицаДокумента.Колонки.НДС.Имя = "СуммаНДС";
	КонецЕсли;
	
	Если ТаблицаДокумента.Колонки.Найти("Цена") = Неопределено Тогда
		ТаблицаДокумента.Колонки.Добавить("Цена", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	КонецЕсли;
	
	Если ТаблицаДокумента.Колонки.Найти("Количество") = Неопределено Тогда
		ТаблицаДокумента.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	КонецЕсли;
	
	ПересчитыватьЗаполненнуюЦену = НЕ (ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", РасчетныйДокумент.Метаданные())
		И РасчетныйДокумент.СуммаВключаетНДС = СуммаВключаетНДС);
	
	Если ТаблицаДокумента.Колонки.Найти("СчетЗатрат") = Неопределено Тогда
		Если ТаблицаДокумента.Колонки.Найти("СчетУчета") <> Неопределено Тогда
			ТаблицаДокумента.Колонки.СчетУчета.Имя = "СчетЗатрат";
		Иначе
			ТаблицаДокумента.Колонки.Добавить("СчетЗатрат");
		КонецЕсли;
	КонецЕсли;
	
	Если ТаблицаДокумента.Колонки.Найти("Событие") = Неопределено Тогда
		ТаблицаДокумента.Колонки.Добавить("Событие",		Новый ОписаниеТипов("ПеречислениеСсылка.СобытияПоНДСПокупки"));
	КонецЕсли;
	
	Если ТаблицаДокумента.Колонки.Найти("ВидЦенности") = Неопределено Тогда
		ТаблицаДокумента.Колонки.Добавить("ВидЦенности",	Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЦенностей"));
	КонецЕсли;
	
	Если ТаблицаДокумента.Колонки.Найти("Номенклатура") = Неопределено Тогда
		ТаблицаДокумента.Колонки.Добавить("Номенклатура",	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КонецЕсли;
	
	Если ТипЗнч(РасчетныйДокумент) = Тип("ДокументСсылка.ГТДИмпорт") Тогда
		ДоговорКонтрагента = РасчетныйДокумент.ДоговорКонтрагентаРегл;
	КонецЕсли;
	
	РеквизитыДоговора = БухгалтерскийУчетПереопределяемый.ПолучитьРеквизитыДоговораКонтрагента(ДоговорКонтрагента);

	ПересчитатьИзВалютыВвалюту = Ложь;
	Если ЗначениеЗаполнено(ДоговорКонтрагента)
		И РасчетныйДокумент.ВалютаДокумента <> РеквизитыДоговора.ВалютаВзаиморасчетов Тогда
		СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(РеквизитыДоговора.ВалютаВзаиморасчетов, РасчетныйДокумент.Дата);
		КурсВзаиморасчетов      = СтруктураКурсаДокумента.Курс;
		КратностьВзаиморасчетов = СтруктураКурсаДокумента.Кратность;
		СтруктураКурсаОснования = РаботаСКурсамиВалют.ПолучитьКурсВалюты(РасчетныйДокумент.ВалютаДокумента, РасчетныйДокумент.Дата);
		ПересчитатьИзВалютыВвалюту = Истина;
	КонецЕсли;
	
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл

		Если СтрокаДокумента.Количество = 0 Тогда
			СтрокаДокумента.Количество = 1;
		КонецЕсли;
		
		Если ПересчитатьИзВалютыВвалюту Тогда 
			Если (СтрокаДокумента.Цена = 0 ИЛИ ПересчитыватьЗаполненнуюЦену) И СтрокаДокумента.Сумма <> 0 Тогда
				СтрокаДокумента.Сумма = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
					СтрокаДокумента.Сумма, РасчетныйДокумент.ВалютаДокумента, РеквизитыДоговора.ВалютаВзаиморасчетов, СтруктураКурсаОснования.Курс,
					КурсВзаиморасчетов,СтруктураКурсаОснования.Кратность, КратностьВзаиморасчетов);
				СтрокаДокумента.Цена = СтрокаДокумента.Сумма / СтрокаДокумента.Количество;
			Иначе
				СтрокаДокумента.Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
					СтрокаДокумента.Цена, РасчетныйДокумент.ВалютаДокумента, РеквизитыДоговора.ВалютаВзаиморасчетов, СтруктураКурсаОснования.Курс,
					КурсВзаиморасчетов,СтруктураКурсаОснования.Кратность, КратностьВзаиморасчетов);
				СтрокаДокумента.Сумма = СтрокаДокумента.Цена * СтрокаДокумента.Количество;
			КонецЕсли;
			СтрокаДокумента.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаДокумента.Сумма,
				Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаДокумента.СтавкаНДС));	
		КонецЕсли;
			
		Если СуммаВключаетНДС Тогда
			// В поле Сумма из запроса должно передаваться всегда значение без НДС
			СтрокаДокумента.Сумма = СтрокаДокумента.Сумма + СтрокаДокумента.СуммаНДС;
		КонецЕсли;

		Если (СтрокаДокумента.Цена = 0 ИЛИ ПересчитыватьЗаполненнуюЦену) И СтрокаДокумента.Сумма <> 0 Тогда
			СтрокаДокумента.Цена = СтрокаДокумента.Сумма / СтрокаДокумента.Количество;
		КонецЕсли;
		
		Если ПрямаяЗаписьВКнигу Тогда
			Если СтрокаДокумента.Событие <> Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету 
				И СтрокаДокумента.Событие <> Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету0 Тогда
				СтрокаДокумента.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету;
			КонецЕсли;
		Иначе
			Если СтрокаДокумента.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету 
				ИЛИ СтрокаДокумента.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету0 Тогда
				СтрокаДокумента.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаДокумента.ВидЦенности) Тогда
					
			СтрокаДокумента.ВидЦенности = УчетНДС.ОпределитьВидЦенностиПоОперации(СтрокаДокумента.Номенклатура,
				СтрокаДокумента.СчетЗатрат, Ложь, РеквизитыДоговора.УчетАгентскогоНДС, РеквизитыДоговора.ВидАгентскогоДоговора,
				ВидыЦенностейПоСчетамУчета);
				
			КонецЕсли; 
			
	КонецЦикла;

	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаДокумента, ТоварыИУслуги);
	
	ТоварыИУслуги.Свернуть("ВидЦенности, Номенклатура, Цена, СчетЗатрат, Субконто1, Субконто2, Субконто3, СчетУчетаНДС,
		|СтавкаНДС, НомерГТД, СтранаПроисхождения, Событие", "Количество, Сумма, СуммаНДС");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ
//

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		РасчетныйДокумент = ДанныеЗаполнения;
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		ЗаполнитьПоРасчетномуДокументу(Ложь);
	Иначе
		СуммаВключаетНДС = Истина;
	КонецЕсли;

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	УпрощенныйУчетНДС = УчетнаяПолитика.УпрощенныйУчетНДС(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
	ЭтотОбъект.ПрямаяЗаписьВКнигу = УпрощенныйУчетНДС;
	Если УпрощенныйУчетНДС Тогда
		Для каждого СтрокаТаблицы Из ТоварыИУслуги Цикл
			СтрокаТаблицы.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата          = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
	СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
	ВалютаДокумента, Дата);
	
	КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
	КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = ТоварыИУслуги.Итог("Сумма") + ?(НЕ СуммаВключаетНДС, ТоварыИУслуги.Итог("СуммаНДС"), 0);
	
	ПараметрыДействия = УчетНДСПереопределяемый.НовыеПараметрыСостоянияСчетаФактуры("ПометкаУдаления", ЭтотОбъект, "СчетФактураПолученный");
	Если ИспользоватьДокументРасчетовКакСчетФактуру Тогда
		ПараметрыДействия.СостояниеФлага = Истина;
	КонецЕсли;
	УчетНДСПереопределяемый.УстановитьСостояниеСчетаФактуры(ПараметрыДействия, Отказ);
	
	Если НЕ ПрямаяЗаписьВКнигу И ФормироватьПроводки Тогда
		ФормироватьПроводки = Ложь;
	КонецЕсли;
	
	Документы.КорректировкаПоступления.ОбновитьРеквизитыСвязанныхДокументовКорректировки(ЭтотОбъект, Отказ);
	Документы.КорректировкаРеализации.ОбновитьРеквизитыСвязанныхДокументовКорректировки(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись
		И НЕ ИспользоватьДокументРасчетовКакСчетФактуру Тогда
		УчетНДСПереопределяемый.СинхронизироватьРеквизитыСчетаФактурыПолученного(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ТипЗнч(РасчетныйДокумент) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		ВидСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "ВидСчетаФактуры");
		Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс
			ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
		КонецЕсли;
	ИначеЕсли ТипЗнч(РасчетныйДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		ВидСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "ВидСчетаФактуры");
		Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента
			ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗаписьДополнительногоЛиста Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КорректируемыйПериод");
	КонецЕсли;
	Если НЕ ИспользоватьДокументРасчетовКакСчетФактуру Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РасчетныйДокумент");
	КонецЕсли;
	
	Если ПрямаяЗаписьВКнигу Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.СчетЗатрат");
	КонецЕсли;
	
	Если НЕ ПрямаяЗаписьВКнигу Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.ВидЦенности");
	КонецЕсли;
	
	Если (НЕ ФормироватьПроводки) ИЛИ (НЕ ПрямаяЗаписьВКнигу) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.СчетУчетаНДС");
	КонецЕсли;
	
	Если Не УчетНДСКлиентСервер.ФорматныйКонтрольКодаВидаОперацииПройден(КодВидаОперации) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Корректность", НСтр("ru = 'Код вида операции'"), , ,
			НСтр("ru='Код вида операции может содержать только цифры и символ "";""'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "КодВидаОперации", , Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ОтражениеНДСКВычету.ПодготовитьПараметрыПроведения(Ссылка, Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	
	ВерсияУчетаНДС	= УчетНДСКлиентСервер.Версия(Реквизиты.Период);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	Если Реквизиты.ФормироватьПроводки Тогда

		Документы.ОтражениеНДСКВычету.СформироватьДвиженияОтраженияНДСХозрасчетный(
			ПараметрыПроведения.ОтражениеНДСХозрасчетный,
			ПараметрыПроведения.Реквизиты,
			Движения,
			Отказ);

	КонецЕсли;

	Если ВерсияУчетаНДС = 1 Тогда
	
		Если Реквизиты.ПрямаяЗаписьВКнигу Тогда

			Документы.ОтражениеНДСКВычету.СформироватьДвиженияКнигиПокупок(
				ПараметрыПроведения.ПрямаяЗаписьВКнигуПокупок,
				ПараметрыПроведения.ТаблицаДокументыОплаты,
				ПараметрыПроведения.Реквизиты,
				Движения,
				Отказ);
				
		Иначе

			СуммаНДС = ПараметрыПроведения.ОтражениеНДСПредъявленный.Итог("СуммаНДС");
			
			Если (СуммаНДС <> 0) ИЛИ (СуммаНДС = 0 И Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру) Тогда
				
				Документы.ОтражениеНДСКВычету.СформироватьДвиженияПоРегиструНДСПредъявленный(
					ПараметрыПроведения.ТаблицаДокументыОплаты,
					ПараметрыПроведения.ОтражениеНДСПредъявленный,
					ПараметрыПроведения.Реквизиты,
					Движения,
					Отказ);
			КонецЕсли;
		
		КонецЕсли;
			
	Иначе
		
		СуммаНДС = ПараметрыПроведения.ОтражениеНДСПредъявленный.Итог("СуммаНДС");
		
		Если (СуммаНДС <> 0)ИЛИ (СуммаНДС = 0 И Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру) Тогда

				Документы.ОтражениеНДСКВычету.СформироватьДвиженияПоРегиструНДСПредъявленный(
					ПараметрыПроведения.ТаблицаДокументыОплаты,
					ПараметрыПроведения.ОтражениеНДСПредъявленный,
					ПараметрыПроведения.Реквизиты,
					Движения,
					Отказ);
		
		КонецЕсли;
			
		Документы.ОтражениеНДСКВычету.СформироватьДвиженияКнигиПокупок(
			ПараметрыПроведения.ПрямаяЗаписьВКнигуПокупок,
			ПараметрыПроведения.ТаблицаДокументыОплаты,
			ПараметрыПроведения.Реквизиты,
			Движения,
			Отказ);
		
	КонецЕсли;
		
	//Движения регистра "Рублевые суммы документов в валюте"
	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалюте(ПараметрыПроведения.РублевыеСуммыДокументовВВалюте, 
		ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
	Движения.Записать();
	
	Если НЕ ИспользоватьДокументРасчетовКакСчетФактуру Тогда
		ПараметрыДействия = УчетНДСПереопределяемый.НовыеПараметрыСостоянияСчетаФактуры("Проведен", ЭтотОбъект, "СчетФактураПолученный");	
		УчетНДСПереопределяемый.УстановитьСостояниеСчетаФактуры(ПараметрыДействия, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	
	Движения.Записать();
	
	ПараметрыДействия = УчетНДСПереопределяемый.НовыеПараметрыСостоянияСчетаФактуры("Проведен", ЭтотОбъект, "СчетФактураПолученный");
	ПараметрыДействия.СостояниеФлага = Ложь;
	УчетНДСПереопределяемый.УстановитьСостояниеСчетаФактуры(ПараметрыДействия, Отказ);

КонецПроцедуры

#КонецЕсли