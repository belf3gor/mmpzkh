#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Удаление полей с условной проверкой заполнения.
	Если Не (ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НомерЛисткаНетрудоспособности");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаВыдачиЛисткаНетрудоспособности");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.КодПричиныНетрудоспособности");
	КонецЕсли;
	
	// Удаление полей, проверка которых выполняется в функции ПроверитьЗаполнениеПоРегламентуФСС.
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КодПодчиненностиФСС");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОГРН");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КПП");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ИНН");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Руководитель");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ГлавныйБухгалтер");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДолжностьРуководителя");
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.МедицинскаяОрганизация");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НаименованиеМедицинскойОрганизации");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ОГРНМедицинскойОрганизации");
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ФамилияРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ИмяРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаРожденияРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ОчередностьРожденияРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ВидПодтверждающегоДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НаименованиеПодтверждающегоДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.СерияДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НомерДокумента");
	
	// Проверка значений.
	ПроверитьПовторноВыбранныеИНепроведенныеЗаявления(Отказ);
	ПроверитьТребованияФормата(Отказ);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ОбъектЗафиксирован() Тогда
		ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьВторичныеДанныеДокумента(ЭтотОбъект);
	КонецЕсли;
	
	ЗаполнитьФизическихЛицИзЗаявлений();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПередЗаписью

Процедура ЗаполнитьФизическихЛицИзЗаявлений()
	ФизическиеЛица.Очистить();
	
	Если СведенияНеобходимыеДляНазначенияПособий.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявлениеСотрудникаНаВыплатуПособия.ФизическоеЛицо
		|ИЗ
		|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
		|ГДЕ
		|	ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка В(&МассивСсылок)";
		Запрос.УстановитьПараметр("МассивСсылок", СведенияНеобходимыеДляНазначенияПособий.ВыгрузитьКолонку("Заявление"));
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(ФизическиеЛица, Результат.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), "ФизическоеЛицо");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработкаПроверкиЗаполнения

Процедура ПроверитьПовторноВыбранныеИНепроведенныеЗаявления(Отказ)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Заявления", СведенияНеобходимыеДляНазначенияПособий.Выгрузить(,"НомерСтроки, Заявление, ПервичныйДокумент, ИзвещениеИзФССИспользование"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заявления.НомерСтроки КАК НомерСтроки,
	|	Заявления.Заявление КАК Заявление,
	|	Заявления.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Заявления.ИзвещениеИзФССИспользование КАК ИзвещениеИзФССИспользование
	|ПОМЕСТИТЬ ВТЗаявления
	|ИЗ
	|	&Заявления КАК Заявления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТЗаявления.НомерСтроки) КАК НомерСтроки,
	|	ЗаявленияПовторы.НомерСтроки КАК НомерСтрокиПовтора,
	|	ВТЗаявления.Заявление КАК Заявление
	|ИЗ
	|	ВТЗаявления КАК ВТЗаявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаявления КАК ЗаявленияПовторы
	|		ПО ВТЗаявления.Заявление = ЗаявленияПовторы.Заявление
	|			И ВТЗаявления.ПервичныйДокумент = ЗаявленияПовторы.ПервичныйДокумент
	|			И ВТЗаявления.НомерСтроки < ЗаявленияПовторы.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗаявления.Заявление,
	|	ВТЗаявления.ПервичныйДокумент,
	|	ЗаявленияПовторы.НомерСтроки
	|ИТОГИ ПО
	|	Заявление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗаявления.НомерСтроки КАК НомерСтроки,
	|	ВТЗаявления.Заявление КАК Заявление
	|ИЗ
	|	ВТЗаявления КАК ВТЗаявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|		ПО ВТЗаявления.Заявление = ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка
	|ГДЕ
	|	НЕ ЗаявлениеСотрудникаНаВыплатуПособия.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗаявления.Заявление КАК Заявление,
	|	ВТЗаявления.НомерСтроки КАК НомерСтроки,
	|	ДругиеРеестрыСЭтимиЗаявлениями.Ссылка КАК Ссылка
	|ИЗ
	|	ВТЗаявления КАК ВТЗаявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий.СведенияНеобходимыеДляНазначенияПособий КАК ДругиеРеестрыСЭтимиЗаявлениями
	|		ПО ВТЗаявления.Заявление = ДругиеРеестрыСЭтимиЗаявлениями.Заявление
	|			И ВТЗаявления.ПервичныйДокумент = ДругиеРеестрыСЭтимиЗаявлениями.ПервичныйДокумент
	|ГДЕ
	|	ДругиеРеестрыСЭтимиЗаявлениями.Ссылка <> &Ссылка
	|	И НЕ ДругиеРеестрыСЭтимиЗаявлениями.Ссылка.ПометкаУдаления
	|	И НЕ ВТЗаявления.ИзвещениеИзФССИспользование";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ПовторяющиесяЗаявления = МассивРезультатов[1];
	НепроведенныеЗаявления = МассивРезультатов[2];
	УжеИспользованныеЗаявления = МассивРезультатов[3];
	
	ИмяТаблицы = "СведенияНеобходимыеДляНазначенияПособий";
	
	Если Не ПовторяющиесяЗаявления.Пустой() Тогда
		Выборка = ПовторяющиесяЗаявления.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			ВыборкаПоЗаявлению = Выборка.Выбрать();
			Если ВыборкаПоЗаявлению.Следующий() Тогда
				ТекстПовторныеСтроки = "" + ВыборкаПоЗаявлению.НомерСтроки + ", " + ВыборкаПоЗаявлению.НомерСтрокиПовтора;
				Пока ВыборкаПоЗаявлению.Следующий() Цикл
					ТекстПовторныеСтроки = ТекстПовторныеСтроки + ", " + ВыборкаПоЗаявлению.НомерСтрокиПовтора;
				КонецЦикла;
				Текст = СтрШаблон(НСтр("ru = '%1 использовано в нескольких строках: %2.'"), Выборка.Заявление, ТекстПовторныеСтроки);
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "Заявление", ИмяТаблицы, Выборка.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не НепроведенныеЗаявления.Пустой() Тогда
		Выборка = НепроведенныеЗаявления.Выбрать();
		Пока Выборка.Следующий() Цикл
			Текст = СтрШаблон(НСтр("ru = '%1 не проведено.'"), Выборка.Заявление);
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "Заявление", ИмяТаблицы, Выборка.НомерСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Если Не УжеИспользованныеЗаявления.Пустой() Тогда
		Выборка = УжеИспользованныеЗаявления.Выбрать();
		Пока Выборка.Следующий() Цикл
			Текст = СтрШаблон(НСтр("ru = '%1 уже использовано в документе %2.'"), Выборка.Заявление, Выборка.Ссылка);
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "Заявление", ИмяТаблицы, Выборка.НомерСтроки);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьТребованияФормата(Отказ)
	ИмяТаблицы = "СведенияНеобходимыеДляНазначенияПособий";
	
	МассивЗаявлений = СведенияНеобходимыеДляНазначенияПособий.ВыгрузитьКолонку("Заявление");
	ИменаРеквизитов = Новый Массив;
	ИменаРеквизитов.Добавить("ВидПособия");
	ИменаРеквизитов.Добавить("СпособВыплатыПособия");
	ИменаРеквизитов.Добавить("АдресПолучателяФактический");
	ИменаРеквизитов.Добавить("АдресПолучателяФактическийИдентификаторФИАС");
	ИменаРеквизитов.Добавить("АдресПолучателяФактическийКодКЛАДР");
	ИменаРеквизитов.Добавить("АдресПолучателяРегистрации");
	ИменаРеквизитов.Добавить("АдресПолучателяРегистрацииИдентификаторФИАС");
	ИменаРеквизитов.Добавить("АдресПолучателяРегистрацииКодКЛАДР");
	ИменаРеквизитов.Добавить("СтатусНалогоплательщикаПолучателя");
	УстановитьПривилегированныйРежим(Истина);
	ЗначенияРеквизитовЗаявлений = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивЗаявлений, ИменаРеквизитов);
	УстановитьПривилегированныйРежим(Ложь);
	
	ТипАдресаФакт = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица");
	ПредставлениеАдресаФакт = Метаданные.Документы.ЗаявлениеСотрудникаНаВыплатуПособия.Реквизиты.АдресПолучателяФактический.Представление();
	
	ТипАдресаРегистрации = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица");
	ПредставлениеАдресаРегистрации = Метаданные.Документы.ЗаявлениеСотрудникаНаВыплатуПособия.Реквизиты.АдресПолучателяРегистрации.Представление();
	
	СтатусРезидент = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент");
	
	Для Каждого Строка Из СведенияНеобходимыеДляНазначенияПособий Цикл
		
		Если Строка.ИзвещениеИзФССИспользование Тогда
			Если Не ЗначениеЗаполнено(Строка.ИзвещениеИзФССНомер) Тогда
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ИзвещениеИзФССНомер", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ИзвещениеИзФССДата) Тогда
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ИзвещениеИзФССДата", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		РеквизитыЗаявления = ЗначенияРеквизитовЗаявлений.Получить(Строка.Заявление);
		Если РеквизитыЗаявления = Неопределено Тогда
			Продолжить; // Заполненность заявление проверяется стандартным образом.
		КонецЕсли;
		
		Если РеквизитыЗаявления.СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ПочтовымПереводом Тогда
			ТекстОшибки = ПроверитьАдрес(
				РеквизитыЗаявления.АдресПолучателяФактический,
				РеквизитыЗаявления.АдресПолучателяФактическийИдентификаторФИАС,
				РеквизитыЗаявления.АдресПолучателяФактическийКодКЛАДР,
				ПредставлениеАдресаФакт);
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, ТекстОшибки, "АдресПолучателяФактический", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если РеквизитыЗаявления.СтатусНалогоплательщикаПолучателя = СтатусРезидент Тогда
			ТекстОшибки = ПроверитьАдрес(
				РеквизитыЗаявления.АдресПолучателяРегистрации,
				РеквизитыЗаявления.АдресПолучателяРегистрацииИдентификаторФИАС,
				РеквизитыЗаявления.АдресПолучателяРегистрацииКодКЛАДР,
				ПредставлениеАдресаРегистрации);
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, ТекстОшибки, "АдресПолучателяРегистрации", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьАдрес(ЗначениеАдреса, ИдентификаторФИАС, КодКЛАДР, ЗаголовокПоля)
	Если Не ЗначениеЗаполнено(ЗначениеАдреса) Тогда
		Возврат СтрШаблон(НСтр("ru = 'Не заполнен %1'"), НРег(ЗаголовокПоля));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИдентификаторФИАС) И Не ЗначениеЗаполнено(КодКЛАДР) Тогда
		Если Дата > ДатаПереходаАдресовНаGUID() Тогда
			Возврат СтрШаблон(НСтр("ru = '%1: не заполнен идентификатор ФИАС. Возможно, адрес введен некорректно, либо не обновлен классификатор адресов.'"), ЗаголовокПоля);
		Иначе
			Возврат СтрШаблон(НСтр("ru = '%1: не заполнен код КЛАДР. Возможно, адрес введен некорректно, либо не обновлен классификатор адресов.'"), ЗаголовокПоля);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

Функция ДатаПереходаАдресовНаGUID()
	Возврат '20180101'; // 1 января - дата из регламента, '20180219' - фактическая дата начала приема.
КонецФункции

#КонецОбласти

#Область ПроверкиЗаполненияПоРегламентуФСС

Функция ПроверитьЗаполнениеПоРегламентуФСС() Экспорт
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(КодПодчиненностиФСС) Тогда
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "КодПодчиненностиФСС");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ОГРН) Тогда
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ОГРН");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ИНН) Тогда
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ИНН");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Руководитель) Тогда
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "Руководитель");
	КонецЕсли;
	
	Если ЗарплатаКадры.ЭтоЮридическоеЛицо(Организация) Тогда
		Если Не ЗначениеЗаполнено(КПП) Тогда
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "КПП");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ГлавныйБухгалтер) Тогда
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ГлавныйБухгалтер");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДолжностьРуководителя) Тогда
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ДолжностьРуководителя");
		КонецЕсли;
	КонецЕсли;
	
	Если ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности Тогда
		ПроверитьЗаполнениеСтрокСведенийПоВременнойНетрудоспособности(Отказ);
	ИначеЕсли ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком Тогда
		ПроверитьЗаполнениеСтрокСведенийПоУходуЗаРебенком(Отказ);
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

Процедура ПроверитьЗаполнениеСтрокСведенийПоВременнойНетрудоспособности(Отказ)
	ИмяТаблицы = "СведенияНеобходимыеДляНазначенияПособий";
	
	МассивЗаявлений = СведенияНеобходимыеДляНазначенияПособий.ВыгрузитьКолонку("Заявление");
	УстановитьПривилегированныйРежим(Истина);
	РеквизитыЗаявлений = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивЗаявлений, "ВидПособия,ТипЗанятостиРаботника,ДатаНачалаТрудовогоДоговораПолучателя,ДатаОкончанияТрудовогоДоговораПолучателя,ПорядокРасчетаСреднегоЗаработка");
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого Строка Из СведенияНеобходимыеДляНазначенияПособий Цикл
		
		Если Не ЗначениеЗаполнено(Строка.МедицинскаяОрганизация) Тогда
			Текст = НСтр("ru = 'Не выбрана медицинская организация, выдавшая листок нетрудоспособности.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "МедицинскаяОрганизация", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.НаименованиеМедицинскойОрганизации) Тогда
			Текст = НСтр("ru = 'Не заполнено наименование медицинской организации.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НаименованиеМедицинскойОрганизации", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ОГРНМедицинскойОрганизации) Тогда
			Текст = НСтр("ru = 'Не заполнен ОГРН медицинской организации.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ОГРНМедицинскойОрганизации", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.Заявление) Тогда
			РеквизитыЗаявления = РеквизитыЗаявлений.Получить(Строка.Заявление);
			
			Если РеквизитыЗаявления.ТипЗанятостиРаботника = Перечисления.ВидыЗанятости.Совместительство
				И Не ЗначениеЗаполнено(Строка.НомерЛисткаПоОсновномуМестуРаботы) Тогда
				Текст = НСтр("ru = 'Для совместителя должен быть указан номер листка нетрудоспособности, предъявляемого на основном месте работы.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерЛисткаПоОсновномуМестуРаботы", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			
			Если (РеквизитыЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
				Или РеквизитыЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки) Тогда
				
				Если Строка.КодПричиныНетрудоспособности <> "05" Тогда
					Текст = НСтр("ru = 'Для пособия по беременности и родам должен быть указан код причины нетрудоспособности 05.'");
					ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "КодПричиныНетрудоспособности", ИмяТаблицы, Строка.НомерСтроки);
				КонецЕсли;
				
				Если РеквизитыЗаявления.ПорядокРасчетаСреднегоЗаработка <> Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок Тогда
					ДатаПроверки = УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаОтдельногоРасчетаПособийПоМатеринству();
					Если Строка.ОсвобождениеДатаНачала1 >= ДатаПроверки Тогда
						Текст = НСтр("ru = 'Для отпуска по беременности и родам, начинающегося 1 января 2013 года или позже, указан недопустимый порядок расчета среднего заработка: из оклада или МРОТ.'");
						ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПорядокРасчетаСреднегоЗаработка", ИмяТаблицы, Строка.НомерСтроки);
					КонецЕсли;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Строка.ДатаИзмененияКодаПричиныНетрудоспособности)
					И Строка.ЯвляетсяПервичнымЛисткомНетрудоспособности
					И Не ЗначениеЗаполнено(Строка.ДополнительныйКодПричиныНетрудоспособности) Тогда
					Текст = НСтр("ru = 'Для пособия по беременности и родам в поле ""Дата 1"" должна быть указана предполагаемая дата родов.'");
					ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаИзмененияКодаПричиныНетрудоспособности", ИмяТаблицы, Строка.НомерСтроки);
				КонецЕсли;
				
			КонецЕсли;
			
			Если (Строка.УсловияИсчисленияКод1 = "46" Или Строка.УсловияИсчисленияКод2 = "46" Или Строка.УсловияИсчисленияКод3 = "46")
				И (Не ЗначениеЗаполнено(РеквизитыЗаявления.ДатаНачалаТрудовогоДоговораПолучателя)
					Или Не ЗначениеЗаполнено(РеквизитыЗаявления.ДатаОкончанияТрудовогоДоговораПолучателя)) Тогда
				Текст = НСтр("ru = 'Для принятого по срочному трудовому договору сроком менее 6 месяцев должен быть указан период этого договора.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаНачалаТрудовогоДоговораПолучателя", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если (Строка.УсловияИсчисленияКод1 = "43" Или Строка.УсловияИсчисленияКод2 = "43" Или Строка.УсловияИсчисленияКод3 = "43")
			И Не ЗначениеЗаполнено(Строка.ФинансированиеФедеральнымБюджетом) Тогда
			Текст = НСтр("ru = 'Для лица, подвергшегося воздействию радиации, не указана причина этого воздействия'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ФинансированиеФедеральнымБюджетом", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ВторойКодПричиныНетрудоспособности)
			И Не ЗначениеЗаполнено(Строка.ДатаИзмененияКодаПричиныНетрудоспособности) Тогда
			Текст = НСтр("ru = 'В поле ""Дата 1"" не указана дата изменения кода причины нетрудоспособности.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаИзмененияКодаПричиныНетрудоспособности", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если ЭтоСанаторнаяПутевка(Строка) Тогда
			Если Не ЗначениеЗаполнено(Строка.ДатаИзмененияКодаПричиныНетрудоспособности) Тогда
				Текст = НСтр("ru = 'В поле ""Дата 1"" не указана дата начала санаторной путевки.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаИзмененияКодаПричиныНетрудоспособности", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ДатаОкончанияПутевки) Тогда
				Текст = НСтр("ru = 'В поле ""Дата 2"" не указана дата окончания санаторной путевки.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаОкончанияПутевки", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ОГРН_Санатория) Тогда
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ОГРН_Санатория", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоУходЗаРодственниками(Строка) Тогда
			Если Не ЗначениеЗаполнено(Строка.ПоУходуФИО1) Тогда
				Текст = НСтр("ru = 'Не заполнено ФИО первого родственника, за которым осуществлялся уход.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПоУходуФИО1", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ПоУходуВозрастЛет1 + Строка.ПоУходуВозрастМесяцев1) Тогда
				Текст = НСтр("ru = 'Не заполнен возраст первого родственника, за которым осуществлялся уход.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПоУходуВозрастЛет1", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ПоУходуРодственнаяСвязь1) Тогда
				Текст = НСтр("ru = 'Не заполнена родственная связь первого родственника, за которым осуществлялся уход.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПоУходуРодственнаяСвязь1", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.ПоУходуФИО2) Тогда
				Если Не ЗначениеЗаполнено(Строка.ПоУходуВозрастЛет2 + Строка.ПоУходуВозрастМесяцев2) Тогда
					Текст = НСтр("ru = 'Не заполнен возраст второго родственника, за которым осуществлялся уход.'");
					ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПоУходуВозрастЛет2", ИмяТаблицы, Строка.НомерСтроки);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Строка.ПоУходуРодственнаяСвязь2) Тогда
					Текст = НСтр("ru = 'Не заполнена родственная связь второго родственника, за которым осуществлялся уход.'");
					ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ПоУходуРодственнаяСвязь2", ИмяТаблицы, Строка.НомерСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоНарушениеРежима(Строка) Тогда
			Если Не ЗначениеЗаполнено(Строка.ДатаНарушенияРежима) Тогда
				Текст = НСтр("ru = 'Не заполнена дата нарушения режима.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаНарушенияРежима", ИмяТаблицы, Строка.НомерСтроки);
			ИначеЕсли Не ЗначениеЗаполнено(Строка.КодНарушенияРежима) Тогда
				Текст = НСтр("ru = 'Не заполнен код нарушения режима.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "КодНарушенияРежима", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		ПериодыНетрудоспособностиЗаполнены = ПроверитьПериодНетрудоспособности(
			Отказ,
			Строка,
			1,
			ИмяТаблицы,
			НСтр("ru = 'первого периода освобождения от работы'"));
		
		Если ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала2) Тогда
			ПериодЗаполнен = ПроверитьПериодНетрудоспособности(
				Отказ,
				Строка,
				2,
				ИмяТаблицы,
				НСтр("ru = 'второго периода освобождения от работы'"));
			Если ПериодЗаполнен И Строка.ОсвобождениеДатаОкончания1 + 86400 <> Строка.ОсвобождениеДатаНачала2 Тогда
				Текст = НСтр("ru = 'Начало второго периода освобождения от работы должно непосредственно следовать за окончанием первого периода.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ОсвобождениеДатаНачала2", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			ПериодыНетрудоспособностиЗаполнены = ПериодыНетрудоспособностиЗаполнены И ПериодЗаполнен;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала3) Тогда
			ПериодЗаполнен = ПроверитьПериодНетрудоспособности(
				Отказ,
				Строка,
				3,
				ИмяТаблицы,
				НСтр("ru = 'третьего периода освобождения от работы'"));
			Если ПериодЗаполнен И Строка.ОсвобождениеДатаОкончания2 + 86400 <> Строка.ОсвобождениеДатаНачала3 Тогда
				Текст = НСтр("ru = 'Начало третьего периода освобождения от работы должно непосредственно следовать за окончанием второго периода.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ОсвобождениеДатаНачала3", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
			ПериодыНетрудоспособностиЗаполнены = ПериодыНетрудоспособностиЗаполнены И ПериодЗаполнен;
		КонецЕсли;
		
		Если Строка.ДатаВыдачиЛисткаНетрудоспособности > Строка.ОсвобождениеДатаНачала1
			И Не ЭтоНахождениеВСтационареСРебенком(Строка)
			И Не ЭтоПродолжение(Строка) Тогда
			Текст = НСтр("ru = 'Листок нетрудоспособности выдан после начала освобождения от работы.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаВыдачиЛисткаНетрудоспособности", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если ЕстьОплатаЗаСчетФСС(Строка) Тогда
			ПериодОплатыЗаполнен = ПроверитьПериод(
				Отказ,
				Строка,
				"ДатаНачалаОплаты",
				"ДатаОкончанияОплаты",
				ИмяТаблицы,
				Строка.НомерСтроки,
				НСтр("ru = 'выплаты пособия за счет ФСС'"));
			Если ПериодОплатыЗаполнен И ПериодыНетрудоспособностиЗаполнены Тогда
				Если Строка.ДатаНачалаОплаты < Строка.ОсвобождениеДатаНачала1 Тогда
					Текст = НСтр("ru = 'Период оплаты за счет ФСС начинается до начала периода освобождения от работы.'");
					ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаОкончанияОплаты", ИмяТаблицы, Строка.НомерСтроки);
				КонецЕсли;
				Если Строка.ДатаОкончанияОплаты > Макс(Строка.ОсвобождениеДатаОкончания1, Строка.ОсвобождениеДатаОкончания2, Строка.ОсвобождениеДатаОкончания3) Тогда
					Текст = НСтр("ru = 'Период оплаты за счет ФСС заканичается после окончания периода освобождения от работы.'");
					ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаОкончанияОплаты", ИмяТаблицы, Строка.НомерСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоНахождениеВСтационареСРебенком(Строка) Тогда
			ПроверитьПериод(
				Отказ,
				Строка,
				"ПериодНахожденияВСтационареСРебенкомС",
				"ПериодНахожденияВСтационареСРебенкомПо",
				ИмяТаблицы,
				Строка.НомерСтроки,
				НСтр("ru = 'нахождения в стационаре'"));
		КонецЕсли;
		
		Если ЕстьИзменениеСостоянияНетрудоспособного(Строка) Тогда
			Если Не ЗначениеЗаполнено(Строка.НовыйСтатусНетрудоспособного) Тогда
				Текст = НСтр("ru = 'В поле ""Иное"" не заполнен код изменения состояния нетрудоспособного.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НовыйСтатусНетрудоспособного", ИмяТаблицы, Строка.НомерСтроки);
			ИначеЕсли Не ЗначениеЗаполнено(Строка.ДатаНовыйСтатусНетрудоспособного)
				И (Строка.НовыйСтатусНетрудоспособного = "32"
					Или Строка.НовыйСтатусНетрудоспособного = "33"
					Или Строка.НовыйСтатусНетрудоспособного = "34"
					Или Строка.НовыйСтатусНетрудоспособного = "36") Тогда
				Текст = НСтр("ru = 'В поле ""Иное"" не заполнена дата изменения состояния нетрудоспособного.'");
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаНовыйСтатусНетрудоспособного", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		Иначе
			Если Не ЗначениеЗаполнено(Строка.ПриступитьКРаботеС) Тогда
				ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "ПриступитьКРаботеС", ИмяТаблицы, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоПродолжение(Строка) И Не ЗначениеЗаполнено(Строка.НомерЛисткаПродолжения) Тогда
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Метаданные(), "НомерЛисткаПродолжения", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеСтрокСведенийПоУходуЗаРебенком(Отказ)
	ИмяТаблицы = "СведенияНеобходимыеДляНазначенияПособий";
	
	Для Каждого Строка Из СведенияНеобходимыеДляНазначенияПособий Цикл
		
		Если Не ЗначениеЗаполнено(Строка.ФамилияРебенка) Тогда
			Текст = НСтр("ru = 'Не заполнена фамилия ребенка.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ФамилияРебенка", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ИмяРебенка) Тогда
			Текст = НСтр("ru = 'Не заполнено имя ребенка.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ИмяРебенка", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ДатаРожденияРебенка) Тогда
			Текст = НСтр("ru = 'Не заполнена дата рождения ребенка.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаРожденияРебенка", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ОчередностьРожденияРебенка) Тогда
			Текст = НСтр("ru = 'Не заполнена очередность рождения ребенка.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ОчередностьРожденияРебенка", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ВидПодтверждающегоДокумента) Тогда
			Текст = НСтр("ru = 'Не заполнен вид подтверждающего документа.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ВидПодтверждающегоДокумента", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.НаименованиеПодтверждающегоДокумента) Тогда
			Текст = НСтр("ru = 'Не заполнено наименование подтверждающего документа.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НаименованиеПодтверждающегоДокумента", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ДатаДокумента) Тогда
			Текст = НСтр("ru = 'Не заполнена дата подтверждающего документа.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ДатаДокумента", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Строка.ВидПодтверждающегоДокумента = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении
			И Не ЗначениеЗаполнено(Строка.СерияДокумента) Тогда
			Текст = НСтр("ru = 'Не заполнена серия подтверждающего документа.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "СерияДокумента", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.НомерДокумента) Тогда
			Текст = НСтр("ru = 'Не заполнен номер подтверждающего документа.'");
			ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "НомерДокумента", ИмяТаблицы, Строка.НомерСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьПериодНетрудоспособности(Отказ, Строка, НомерПериода, ИмяТаблицы, Представление)
	ПериодЗаполнен = ПроверитьПериод(
		Отказ,
		Строка,
		"ОсвобождениеДатаНачала" + НомерПериода,
		"ОсвобождениеДатаОкончания" + НомерПериода,
		ИмяТаблицы,
		Строка.НомерСтроки,
		Представление);
	Если Не ЗначениеЗаполнено(Строка["ОсвобождениеФИОВрача" + НомерПериода]) Тогда
		Текст = НСтр("ru = 'Не заполнено ФИО врача %1.'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Представление);
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ОсвобождениеФИОВрача1", ИмяТаблицы, Строка.НомерСтроки);
		ПериодЗаполнен = Ложь;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Строка["ОсвобождениеДолжностьВрача" + НомерПериода]) Тогда
		Текст = НСтр("ru = 'Не заполнена должность врача %1.'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Представление);
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, "ОсвобождениеДолжностьВрача1", ИмяТаблицы, Строка.НомерСтроки);
		ПериодЗаполнен = Ложь;
	КонецЕсли;
	
	Возврат ПериодЗаполнен;
КонецФункции

Функция ЭтоСанаторнаяПутевка(Строка)
	Возврат Строка.КодПричиныНетрудоспособности = "08"
		Или Строка.ВторойКодПричиныНетрудоспособности = "08"
		Или Строка.ДополнительныйКодПричиныНетрудоспособности = "017"
		Или Строка.ДополнительныйКодПричиныНетрудоспособности = "018"
		Или Строка.ДополнительныйКодПричиныНетрудоспособности = "019"
		Или ЗначениеЗаполнено(Строка.ДатаОкончанияПутевки);
КонецФункции

Функция ЭтоУходЗаРодственниками(Строка)
	Возврат Строка.КодПричиныНетрудоспособности = "09"
		Или Строка.КодПричиныНетрудоспособности = "12"
		Или Строка.КодПричиныНетрудоспособности = "13"
		Или Строка.КодПричиныНетрудоспособности = "14"
		Или Строка.КодПричиныНетрудоспособности = "15"
		Или Строка.ВторойКодПричиныНетрудоспособности = "09"
		Или Строка.ВторойКодПричиныНетрудоспособности = "12"
		Или Строка.ВторойКодПричиныНетрудоспособности = "13"
		Или Строка.ВторойКодПричиныНетрудоспособности = "14"
		Или Строка.ВторойКодПричиныНетрудоспособности = "15";
КонецФункции

Функция ЭтоНарушениеРежима(Строка)
	Возврат ЗначениеЗаполнено(Строка.ДатаНарушенияРежима)
		Или ЗначениеЗаполнено(Строка.КодНарушенияРежима);
КонецФункции

Функция ЭтоНахождениеВСтационареСРебенком(Строка)
	Возврат ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомС)
		Или ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомПо);
КонецФункции

Функция ЭтоПродолжение(Строка)
	Возврат Строка.НовыйСтатусНетрудоспособного = "31"
		Или ЗначениеЗаполнено(Строка.НомерЛисткаПродолжения);
КонецФункции

Функция ЕстьОплатаЗаСчетФСС(Строка)
	Возврат ЗначениеЗаполнено(Строка.ДатаНачалаОплаты)
		Или ЗначениеЗаполнено(Строка.ДатаОкончанияОплаты);
КонецФункции

Функция ЕстьИзменениеСостоянияНетрудоспособного(Строка)
	Возврат ЗначениеЗаполнено(Строка.НовыйСтатусНетрудоспособного)
		Или ЗначениеЗаполнено(Строка.ДатаНовыйСтатусНетрудоспособного);
КонецФункции

#КонецОбласти

#Область БазоваяФункциональностьПроверокЗаполнения

Функция ПроверитьПериод(Отказ, Коллекция, ПолеДаты1, ПолеДаты2, ИмяТаблицы, НомерСтроки, ПредставлениеПериодаВРодительномПадеже)
	Дата1 = Коллекция[ПолеДаты1];
	Дата2 = Коллекция[ПолеДаты2];
	Если Не ЗначениеЗаполнено(Дата1) Тогда
		Текст = СтрШаблон(НСтр("ru = 'Не заполнена дата начала %1.'"), ПредставлениеПериодаВРодительномПадеже);
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, ПолеДаты1, ИмяТаблицы, НомерСтроки);
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(Дата2) Тогда
		Текст = СтрШаблон(НСтр("ru = 'Не заполнена дата окончания %1.'"), ПредставлениеПериодаВРодительномПадеже);
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, ПолеДаты2, ИмяТаблицы, НомерСтроки);
		Возврат Ложь;
	ИначеЕсли Дата1 > Дата2 Тогда
		Текст = СтрШаблон(НСтр("ru = 'Дата начала %1 больше даты окончания.'"), ПредставлениеПериодаВРодительномПадеже);
		ЗарплатаКадрыОтображениеОшибок.СообщитьОбОшибке(Отказ, Текст, ПолеДаты1, ИмяТаблицы, НомерСтроки);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область МеханизмФиксацииИзменений

Функция ОбъектЗафиксирован() Экспорт
	Возврат Не ПрямыеВыплатыПособийСоциальногоСтрахования.СтатусПозволяетРедактироватьДокумент(СтатусДокумента);
КонецФункции

Функция ОбновитьВторичныеДанныеДокумента() Экспорт
	Модифицирован = Ложь;
	
	Если ОбъектЗафиксирован() Тогда
		Возврат Модифицирован;
	КонецЕсли;
	
	ПараметрыФиксации = Документы.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПараметрыФиксацииВторичныхДанных();
	
	Если ОбновитьДанныеОрганизации(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ОбновитьСведенияОПособиях(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ОбновитьСеденияОМедицинскихОрганизациях(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован;
КонецФункции

Функция ОбновитьДанныеОрганизации(ПараметрыФиксации)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура;
	Для Каждого ОписаниеРеквизита Из ПараметрыФиксации.ОписаниеФиксацииРеквизитов Цикл
		Если Не ОписаниеРеквизита.Значение.РеквизитСтроки Тогда
			РеквизитыДокумента.Вставить(ОписаниеРеквизита.Значение.ИмяРеквизита);
		КонецЕсли;
	КонецЦикла;
	
	ИменаРеквизитовОрганизации = "РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС, ОГРН";
	ЗначенияРеквизитовОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, ИменаРеквизитовОрганизации);
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ЗначенияРеквизитовОрганизации, ИменаРеквизитовОрганизации);
	
	СведенияОПодписях = ПодписиДокументов.СведенияОПодписяхПоУмолчаниюДляОбъектаМетаданных(Метаданные(), Организация);
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, СведенияОПодписях);
	
	ДатаПолученияСведений = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПолученияСведений, "ТелОрганизации,АдресЭлектроннойПочтыОрганизации,ИННЮЛ,КППЮЛ");
	ОргСведения.Свойство("ТелОрганизации",                   РеквизитыДокумента.ТелефонСоставителя);
	ОргСведения.Свойство("АдресЭлектроннойПочтыОрганизации", РеквизитыДокумента.АдресЭлектроннойПочтыСоставителя);
	ОргСведения.Свойство("ИННЮЛ",                            РеквизитыДокумента.ИНН);
	ОргСведения.Свойство("КППЮЛ",                            РеквизитыДокумента.КПП);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ОбновитьСведенияОПособиях(ПараметрыФиксации)
	Если СведенияНеобходимыеДляНазначенияПособий.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	ТаблицаОснований = СведенияНеобходимыеДляНазначенияПособий.Выгрузить(, "Заявление, ПервичныйДокумент");
	Запрос = ПрямыеВыплатыПособийСоциальногоСтрахования.ЗапросРеестраПрямыхВыплатПоПервичнымДокументам(ЭтотОбъект, ТаблицаОснований, "ВТВторичныеДанные");
	Если Запрос = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	Запрос.Выполнить();
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект, "СведенияНеобходимыеДляНазначенияПособий", "ВТВторичныеДанные", ПараметрыФиксации);
КонецФункции

Функция ОбновитьСеденияОМедицинскихОрганизациях(ПараметрыФиксации)
	Если СведенияНеобходимыеДляНазначенияПособий.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	ТаблицаОснований = СведенияНеобходимыеДляНазначенияПособий.Выгрузить(, "Заявление, ПервичныйДокумент, МедицинскаяОрганизация");
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОснований.Заявление КАК Заявление,
	|	ТаблицаОснований.ПервичныйДокумент КАК ПервичныйДокумент,
	|	ТаблицаОснований.МедицинскаяОрганизация КАК МедицинскаяОрганизация
	|ПОМЕСТИТЬ ТаблицаОснований
	|ИЗ
	|	&ТаблицаОснований КАК ТаблицаОснований
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОснований.Заявление КАК Заявление,
	|	ТаблицаОснований.ПервичныйДокумент КАК ПервичныйДокумент,
	|	ТаблицаОснований.МедицинскаяОрганизация КАК МедицинскаяОрганизация,
	|	МедицинскиеОрганизации.Наименование КАК НаименованиеМедицинскойОрганизации,
	|	МедицинскиеОрганизации.ОГРН КАК ОГРНМедицинскойОрганизации,
	|	МедицинскиеОрганизации.Адрес КАК АдресМедицинскойОрганизации
	|ПОМЕСТИТЬ ВТВторичныеДанные
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МедицинскиеОрганизации КАК МедицинскиеОрганизации
	|		ПО ТаблицаОснований.МедицинскаяОрганизация = МедицинскиеОрганизации.Ссылка";
	Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
	Запрос.Выполнить();
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект, "СведенияНеобходимыеДляНазначенияПособий", "ВТВторичныеДанные", ПараметрыФиксации);
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
