////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента, "ВидДоговора");
	
	ЭтоДоговорСКомитентом = (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
		ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку);
		
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСостояниеДокумента();
	КонецЕсли;
		
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьСостояниеДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		УстановитьДоговорКонтрагента();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)

	УстановитьДоговорКонтрагента();

КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)

	ДанныеОбъекта = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, ВалютаДокумента,
		|СчетУчетаРасчетовСКомитентом, ЭтоДоговорСКомитентом");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	ДоговорКонтрагентаПриИзмененииНаСервере(ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);
	
	ЭтоДоговорСКомитентом = ДанныеОбъекта.ЭтоДоговорСКомитентом;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	
	Элементы.ГруппаСчетаУчетаРасчетовСКомитентом.Видимость = Форма.ЭтоДоговорСКомитентом;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоговорКонтрагента()

	ДанныеОбъекта = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, ВалютаДокумента,
		|СчетУчетаРасчетовСКомитентом, ЭтоДоговорСКомитентом");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	УстановитьДоговорКонтрагентаНаСервере(ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);
	
	ЭтоДоговорСКомитентом = ДанныеОбъекта.ЭтоДоговорСКомитентом;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьДоговорКонтрагентаНаСервере(ДанныеОбъекта)

	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(ДанныеОбъекта.ДоговорКонтрагента, ДанныеОбъекта.Контрагент, ДанныеОбъекта.Организация);
	
	ДоговорКонтрагентаПриИзмененииНаСервере(ДанныеОбъекта);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДоговорКонтрагентаПриИзмененииНаСервере(ДанныеОбъекта)

	Если ЗначениеЗаполнено(ДанныеОбъекта.ДоговорКонтрагента) Тогда
		
		Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
			
			// Если не ведется учет по договорам и заполнен договор, 
			// то по реквизитам этого договора ищем основной договор
			// Если находим, то заменяем выбранный договор на основной. Учет ведется только по основным договорам.
			// В случае если не находим, то ничего не делаем, при записи документа этот договор установится как основной. 
			
			// Проверим является ли выбранный договор основным
			СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеОбъекта.ДоговорКонтрагента, "Организация, Владелец, ВидДоговора");
			
			ОсновнойДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(
				ОсновнойДоговор, 
				СтруктураРеквизитов.Владелец,
				СтруктураРеквизитов.Организация,
				СтруктураРеквизитов.ВидДоговора);
			
			Если ЗначениеЗаполнено(ОсновнойДоговор) И ОсновнойДоговор <> ДанныеОбъекта.ДоговорКонтрагента Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Для расчетов с контрагентом %1 используется %2.'"), СтруктураРеквизитов.Владелец, ОсновнойДоговор);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "ДоговорКонтрагента");
				ДанныеОбъекта.ДоговорКонтрагента = ОсновнойДоговор;
			КонецЕсли;
			
		КонецЕсли;
		
		СвойстваДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеОбъекта.ДоговорКонтрагента, "ВидДоговора, ВалютаВзаиморасчетов");
		
		ДанныеОбъекта.ЭтоДоговорСКомитентом = (СвойстваДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
			ИЛИ СвойстваДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку);
		ДанныеОбъекта.ВалютаДокумента = СвойстваДоговора.ВалютаВзаиморасчетов;
		
	Иначе
		ДанныеОбъекта.ЭтоДоговорСКомитентом = Ложь;
		ДанныеОбъекта.ВалютаДокумента       = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	Если ДанныеОбъекта.ЭтоДоговорСКомитентом Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(ДанныеОбъекта.Организация, ДанныеОбъекта.Контрагент, ДанныеОбъекта.ДоговорКонтрагента);
		ДанныеОбъекта.СчетУчетаРасчетовСКомитентом = СчетаУчета.СчетРасчетовСКомитентом;
	Иначе
		ДанныеОбъекта.СчетУчетаРасчетовСКомитентом = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти
