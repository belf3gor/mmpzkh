
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем ОткрытыеСмены;
	
	Если Параметры.Свойство("ОткрытыеСмены", ОткрытыеСмены) Тогда
		Для каждого ЭлементМассива Из ОткрытыеСмены Цикл
			ЗаполнитьЗначенияСвойств(Соответствие.Добавить(), ЭлементМассива);
		КонецЦикла;
		
		МассивОрганизаций = ОбщегоНазначения.ВыгрузитьКолонку(ОткрытыеСмены, "Организация", Истина);
		Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(МассивОрганизаций);
	КонецЕсли;
	
	Организация = Параметры.Организация;
	
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьСмену(Команда)
	СтруктураВозврата = Новый Структура("Организация, ИдентификаторУстройства", Организация, ИдентификаторУстройства);
	Закрыть(СтруктураВозврата);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	УстройстваПоОрганизации = Соответствие.НайтиСтроки(Новый Структура("Организация", Организация));
	
	СписокУстройств = ОбщегоНазначения.ВыгрузитьКолонку(УстройстваПоОрганизации, "ИдентификаторУстройства", Истина);
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СписокУстройств, Справочники.ПодключаемоеОборудование.ПустаяСсылка());
	Элементы.ИдентификаторУстройства.СписокВыбора.ЗагрузитьЗначения(СписокУстройств);
	
	Элементы.ИдентификаторУстройства.Доступность = (СписокУстройств.Количество() > 0);
	ИдентификаторУстройства = ?(СписокУстройств.Количество() > 0, СписокУстройств[0], Неопределено);
КонецПроцедуры

#КонецОбласти

