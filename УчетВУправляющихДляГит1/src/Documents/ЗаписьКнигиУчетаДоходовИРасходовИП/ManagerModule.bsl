#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 20, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодготовкаПроведения

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация
		|ИЗ
		|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка
		|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.УстановитьПараметр("Период",      Выборка.Период);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);
	Запрос.УстановитьПараметр("ИМР",         Перечисления.ВидыМПЗ.ИныеМатериальныеРасходы);
	
	Запрос.Текст = ТекстЗапросаЗаписьЗаписьКнигиУчетаДоходовИРасходовИПРеквизиты(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела1(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела1_5(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела1_2(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела2(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела4(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела5(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела61(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела6(НомераТаблиц)
		+ ТекстЗапросаТаблицыРаздела63(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаЗаписьЗаписьКнигиУчетаДоходовИРасходовИПРеквизиты(НомераТаблиц)
	
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела1(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТ_ТаблицаРаздела1",  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРаздела1_МПЗ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРаздела1_ИМР", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидДвижения = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Количество,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС
	|ПОМЕСТИТЬ ВТ_ТаблицаРаздела1
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица1 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидМПЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРаздела1.ВидДвижения,
	|	ВТ_ТаблицаРаздела1.ВидМПЗ,
	|	ВТ_ТаблицаРаздела1.Номенклатура,
	|	ВТ_ТаблицаРаздела1.НоменклатурнаяГруппа,
	|	ВТ_ТаблицаРаздела1.ХарактерДеятельности,
	|	ВТ_ТаблицаРаздела1.Партия,
	|	ВТ_ТаблицаРаздела1.ДокументОплаты,
	|	ВТ_ТаблицаРаздела1.Количество,
	|	ВТ_ТаблицаРаздела1.Сумма,
	|	ВТ_ТаблицаРаздела1.НДС
	|ИЗ
	|	ВТ_ТаблицаРаздела1
	|ГДЕ
	|	ВТ_ТаблицаРаздела1.ВидМПЗ <> &ИМР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРаздела1.ВидДвижения,
	|	ВТ_ТаблицаРаздела1.НоменклатурнаяГруппа,
	|	ВТ_ТаблицаРаздела1.ХарактерДеятельности,
	|	ВТ_ТаблицаРаздела1.Номенклатура КАК СтатьяЗатрат,
	|	ВТ_ТаблицаРаздела1.Партия,
	|	ВТ_ТаблицаРаздела1.ДокументОплаты,
	|	ВТ_ТаблицаРаздела1.Количество,
	|	ВТ_ТаблицаРаздела1.Сумма,
	|	ВТ_ТаблицаРаздела1.НДС
	|ИЗ
	|	ВТ_ТаблицаРаздела1
	|ГДЕ
	|	ВТ_ТаблицаРаздела1.ВидМПЗ = &ИМР";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела1_2(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела1_2", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОтгрузки,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Количество,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Выручка,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДСНачисленный,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.КоличествоОплаченоПоставщику
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица12 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела1_5(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела1_5", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидСписанногоМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатураСписанная,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ПартияСписаннойНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыМПЗ.Продукция) КАК ВидПоступившегоМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатураПоступившая,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ПартияПоступившейНоменклатуры,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Количество,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица15 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела2(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела2_ВНА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРаздела2_Амортизация", НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапросаТаблицыРаздела2и4_Стоимость(2)
				 + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
				 + ТекстЗапросаТаблицыРаздела2и4_Амортизация(2);
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела4(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела4_ВНА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРаздела4_Амортизация", НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапросаТаблицыРаздела2и4_Стоимость(4)
				 + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
				 + ТекстЗапросаТаблицыРаздела2и4_Амортизация(4);
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Функция возвращает одинаковый текст запроса для Таблиц 2 и 4
// 
// Параметры:
//		НомерТЧ - номер таблицы (2 и 4, соответственно)
//
Функция ТекстЗапросаТаблицыРаздела2и4_Стоимость(НомерТЧ)
	
	Если НомерТЧ = 2 Тогда
		ТекстВидМПЗ = "ОС"
	Иначе
		ТекстВидМПЗ = "НМА"
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидДвижения = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыМПЗ." + ТекстВидМПЗ + ") КАК ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура КАК Номенклатура,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности КАК ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия КАК Партия,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты КАК ДокументОплаты,
	|	0 КАК Количество,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма КАК Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС КАК НДС
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица" + НомерТЧ + " КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	(ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма <> 0
	|			ИЛИ ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС <> 0)
	|	И ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает одинаковый текст запроса для Таблиц 2 и 4
// 
// Параметры:
//		НомерТЧ - номер таблицы (2 и 4, соответственно)
//
Функция  ТекстЗапросаТаблицыРаздела2и4_Амортизация(НомерТЧ)
	
	Если НомерТЧ = 2 Тогда
		ТекстВидМПЗ = "ОС"
	Иначе
		ТекстВидМПЗ = "НМА"
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыМПЗ." + ТекстВидМПЗ + ") КАК ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности КАК ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура КАК СтатьяЗатрат,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия КАК РасчетныйДокумент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СуммаАмортизации КАК Сумма,
	|	0 КАК НДС
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица" + НомерТЧ + " КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СуммаАмортизации <> 0
	|	И ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела5(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела5", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Период,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СтатьяЗатрат,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидНачисленияУдержания,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ФизЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.РасчетныйДокумент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица5 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела6(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела6", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СтатьяЗатрат,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.РасчетныйДокумент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица6 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела63(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела63", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидДвижения = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидРасхода,
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица63 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыРаздела61(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРаздела61", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности КАК ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СтатьяДоходов,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма КАК Сумма
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица61 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#Область ФормированиеДвижений

Процедура СформироватьДвиженияПоИПМПЗ(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИПМПЗ(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИПМПЗ", Параметры.ИПМПЗ, Параметры.Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПоИПМПЗ(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИПМПЗ
	
	СписокОбязательныхКолонок = ""
		+ "ВидДвижения,"				// Вид движения регистра накопления
		+ "ВидМПЗ,"						// <ПеречислениеСсылка.ВидыМПЗ>
		+ "Номенклатура,"				// <СправочникСсылка.*> - номенклатура МПЗ
		+ "НоменклатурнаяГруппа,"		// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"		// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "Партия,"						// <ДокументСсылка.*> - документ поступления МПЗ
		+ "ДокументОплаты,"				// <ДокументСсылка.*> - документ оплаты
		+ "Количество,"					// <Число,15,3>
		+ "Сумма,"						// <Число,15,2>
		+ "НДС";						// <Число,15,2>
	
	Параметры.Вставить("ИПМПЗ", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"						// <Дата> - период движений - дата документа
		+ "Организация";				// <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияПоИПИныеМатериальныеРасходы(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИПИныеМатериальныеРасходы(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИПИныеМатериальныеРасходы", Параметры.ИПИныеМатериальныеРасходы, Параметры.Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПоИПИныеМатериальныеРасходы(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИПИныеМатериальныеРасходы
	
	СписокОбязательныхКолонок = ""
		+ "ВидДвижения,"				// Вид движения регистра накопления
		+ "НоменклатурнаяГруппа,"		// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"		// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "СтатьяЗатрат,"				// <СправочникСсылка.*> - статья затрат
		+ "Партия,"						// <ДокументСсылка.*> - документ поступления 
		+ "ДокументОплаты,"				// <ДокументСсылка.*> - документ оплаты
		+ "Количество,"					// <Число,15,3>
		+ "Сумма,"						// <Число,15,2>
		+ "НДС";						// <Число,15,2>
		
	Параметры.Вставить("ИПИныеМатериальныеРасходы", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"						// <Дата> - период движений - дата документа
		+ "Организация";				// <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияПоИПДоходы(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИПДоходы(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИПДоходы",  Параметры.ИПДоходы, Параметры.Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПоИПДоходы(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИПДоходы
	
	СписокОбязательныхКолонок = ""
		+ "НоменклатурнаяГруппа,"			// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"			// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "ВидМПЗ,"							// <ПеречислениеСсылка.ВидыМПЗ>
		+ "Номенклатура,"					// <СправочникСсылка.*>
		+ "ДокументОтгрузки,"				// <ДокументСсылка.*> - документ отгрузки
		+ "Партия,"							// <ДокументСсылка.*> - документ поступления 
		+ "ДокументОплаты,"					// <ДокументСсылка.*> - документ оплаты
		+ "Количество,"						// <Число,15,3>
		+ "Выручка,"						// <Число,15,2>
		+ "НДСНачисленный,"					// <Число,15,2>
		+ "Сумма,"							// <Число,15,2>
		+ "НДС,"							// <Число,15,2>
		+ "КоличествоОплаченоПоставщику";	// <Число,15,3>
	
	Параметры.Вставить("ИПДоходы", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"							// <Дата> - период движений - дата документа
		+ "Организация";					// <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияПоИПМПЗОбороты(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИПМПЗОбороты(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИПМПЗОбороты", Параметры.ИПМПЗОбороты, Параметры.Реквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыПоИПМПЗОбороты(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИПМПЗОбороты
	
	СписокОбязательныхКолонок = ""
		+ "НоменклатурнаяГруппа,"			// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"			// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "ДокументОплаты,"					// <ДокументСсылка.*> - документ оплаты
		+ "ВидСписанногоМПЗ,"				// <ПеречислениеСсылка.ВидыМПЗ>
		+ "НоменклатураСписанная,"			// <СправочникСсылка.*>
		+ "ПартияСписаннойНоменклатуры,"	// <ДокументСсылка.*>
		+ "ВидПоступившегоМПЗ,"				// <ПеречислениеСсылка.ВидыМПЗ>
		+ "НоменклатураПоступившая,"		// <СправочникСсылка.*>
		+ "ПартияПоступившейНоменклатуры,"	// <ДокументСсылка.*>
		+ "Количество,"						// <Число,15,3>
		+ "Сумма,"							// <Число,15,2>
		+ "НДС"; 							// <Число,15,2>
	
	Параметры.Вставить("ИПМПЗОбороты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"							// <Дата> - период движений - дата документа
		+ "Организация";					// <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияПоИПРасходыНаОплатуТруда(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИПРасходыНаОплатуТруда(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИПРасходыНаОплатуТруда", Параметры.ИПРасходыНаОплатуТруда, Параметры.Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПоИПРасходыНаОплатуТруда(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИПРасходыНаОплатуТруда
	
	СписокОбязательныхКолонок = ""
		+ "Период,"						// <Дата> - период движений
		+ "НоменклатурнаяГруппа,"		// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"		// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "СтатьяЗатрат,"				// <СправочникСсылка.*> - статья затрат
		+ "ВидНачисленияУдержания,"		// <ПеречислениеСсылка.ИПВидыНачисленийУдержаний> - вид начисления/удержания
		+ "ФизЛицо,"					// <СправочникСсылка.ФизическиеЛица>
		+ "Контрагент,"					// <СправочникСсылка.Контрагенты>
		+ "РасчетныйДокумент,"			// <ДокументСсылка.*> - расчетный документ
		+ "ДокументОплаты,"				// <ДокументСсылка.*> - документ оплаты
		+ "Сумма";						// <Число,15,2>
		
	Параметры.Вставить("ИПРасходыНаОплатуТруда", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"						// <Дата> - период движений - дата документа
		+ "Организация";				// <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияПоИППрочиеРасходы(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИППрочиеРасходы(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИППрочиеРасходы", Параметры.ИППрочиеРасходы, Параметры.Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПоИППрочиеРасходы(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИППрочиеРасходы
	
	СписокОбязательныхКолонок = ""
		+ "НоменклатурнаяГруппа,"		// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"		// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "СтатьяЗатрат,"				// <СправочникСсылка.*>
		+ "РасчетныйДокумент,"			// <ДокументСсылка.*> - расчетный документ
		+ "ДокументОплаты,"				// <ДокументСсылка.*> - документ оплаты
		+ "СчетУчета,"					// <ПланСчетовСсылка.Хозрасчетный>
		+ "Сумма,"						// <Число,15,2>
		+ "НДС";						// <Число,15,2>
	
	Параметры.Вставить("ИППрочиеРасходы", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"						// <Дата> - период движений - дата документа
		+ "Организация";				// <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПоИПРБП(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИПРБП(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИПРБП", Параметры.ИПРБП, Параметры.Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПоИПРБП(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИПРБП
	
	СписокОбязательныхКолонок = ""
		+ "ВидДвижения,"				// Вид движения регистра накопления
		+ "НоменклатурнаяГруппа,"		// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"		// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "ВидРасхода,"					// <СправочникСсылка.*> - вид расхода,
		+ "Партия,"						// <ДокументСсылка.*> - документ поступления
		+ "ДокументОплаты,"				// <ДокументСсылка.*> - документоплаты
		+ "Сумма,"						// <Число,15,2>
		+ "НДС";						// <Число,15,2>
	
	Параметры.Вставить("ИПРБП", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"						// <Дата> - период движений - дата документа
		+ "Организация";				// <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПоИППрочиеДоходы(ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыПоИППрочиеДоходы(ТаблицаРаздела, ТаблицаРеквизиты);
	
	СформироватьДвиженияПоРазделу("ИППрочиеДоходы", Параметры.ИППрочиеДоходы, Параметры.Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПоИППрочиеДоходы(ТаблицаРаздела, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ИППрочиеДоходы
	
	СписокОбязательныхКолонок = ""
		+ "НоменклатурнаяГруппа,"	// <СправочникСсылка.НоменклатурныеГруппы>
		+ "ХарактерДеятельности,"	// <ПеречислениеСсылка.ХарактерДеятельности>
		+ "СтатьяДоходов,"			// <СправочникСсылка.ПрочиеДоходыИРасходы>
		+ "Сумма";					// <Число,15,2>
		
	Параметры.Вставить("ИППрочиеДоходы", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРаздела, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"					// <Дата> - период движений - дата документа
		+ "Организация";			// <СправочникСсылка.Организации>
		
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияПоРазделу(ИмяРаздела, ТаблицаРаздела, ТаблицаРеквизиты, Движения, Отказ)
	Перем ОсновнойХарактерДеятельности, ОсновнаяНоменклатурнаяГруппа;
	
	Если ТаблицаРеквизиты.Количество() = 0
		ИЛИ ТаблицаРаздела.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если НЕ УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат;
	КонецЕсли;
	
	ВестиУчетПоВидамДеятельностиИП	= УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период);
	Если НЕ ВестиУчетПоВидамДеятельностиИП Тогда
		ОсновнойХарактерДеятельности	= УчетнаяПолитика.ОсновнойХарактерДеятельности(Реквизиты.Организация, Реквизиты.Период);
		ОсновнаяНоменклатурнаяГруппа	= УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период);
	КонецЕсли;
	
	НаборЗаписей	= Движения[ИмяРаздела];
	НаборЗаписей.Записывать	= Истина;
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРаздела Цикл
		
		Движение = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
		ЗаполнитьЗначенияСвойств(Движение, Реквизиты);
		
		Если НЕ ВестиУчетПоВидамДеятельностиИП Тогда
			Движение.НоменклатурнаяГруппа = ОсновнаяНоменклатурнаяГруппа;
			Движение.ХарактерДеятельности = ОсновнойХарактерДеятельности;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

// Процедура заполняет табличную часть "ПрочиеДоходы" авансами полученными
//
Процедура ЗаполнитьТабличнуюЧастьПрочиеДоходыПоАвансам(Объект) Экспорт
	
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("Период",      ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРеквизитов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаРеквизитов.Колонки.Добавить("Регистратор", Документы.ТипВсеСсылки());
	
	Реквизиты = ТаблицаРеквизитов.Добавить();
	Реквизиты.Период      = Объект.Дата;
	Реквизиты.Организация = Объект.Организация;
	
	ТаблицаАвансов = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуВключенияАвансовВПрочиеДоходы(ТаблицаРеквизитов,);
	
	Объект.Таблица61.Очистить();
	Если ТаблицаАвансов <> Неопределено Тогда
		Для каждого Аванс Из ТаблицаАвансов Цикл
			НоваяСтрока = Объект.Таблица61.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Аванс);
			НоваяСтрока.РеквизитыДокументаОплаты = Аванс.НомерДокументаОплаты
				+ ?(НЕ ПустаяСтрока(Аванс.НомерДокументаОплаты), ", ", "") + Формат(Аванс.ДатаДокументаОплаты, "ДЛФ=D");
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли