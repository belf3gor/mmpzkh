#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 20, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" И ОбщегоНазначенияБП.ЭтоИнтерфейсИнтеграцииСБанком() Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаДокументаОднострочная";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияБП.ЭтоИнтерфейсИнтеграцииСБанком() Тогда
		СтандартнаяОбработка = Ложь;
		Представление = СтрШаблон(НСтр("ru = 'Изменение дохода от %1'"), Формат(Данные.Дата, "ДЛФ=D"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВидыОперацийОднострочнойФормы() Экспорт
	
	ВидыОпераций = Новый Структура;
	ВидыОпераций.Вставить("ПолучениеДохода", НСтр("ru = 'Получение дохода'"));
	ВидыОпераций.Вставить("ВозвратПокупателю", НСтр("ru = 'Возврат покупателю'"));
	
	Возврат ВидыОпераций;
	
КонецФункции

#Область ПодготовкаПараметровПроведения

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента();
	
	ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("Период",          Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",     Реквизиты.Организация);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРегламентированногоУчета);

	Запрос.Текст = ТекстЗапросаТаблицаСтроки(НомераТаблиц)
		+ ТекстЗапросаТаблицаОС(НомераТаблиц)
		+ ТекстЗапросаТаблицаНМА(НомераТаблиц)
		+ ТекстЗапросаТаблицаУменьшениеНалога(НомераТаблиц, Реквизиты)
		+ ТекстЗапросаУплаченныйТорговыйСбор(НомераТаблиц, Реквизиты);

	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументЗаписьКУДиР.Ссылка КАК Регистратор,
	|	ДокументЗаписьКУДиР.Дата КАК Период,
	|	ДокументЗаписьКУДиР.Организация,
	|	ДокументЗаписьКУДиР.ДеятельностьНаПатенте,
	|	ДокументЗаписьКУДиР.Патент
	|ИЗ
	|	Документ.ЗаписьКУДиР КАК ДокументЗаписьКУДиР
	|ГДЕ
	|	ДокументЗаписьКУДиР.Ссылка = &Ссылка"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСтроки(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицаСтроки", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаДоходовИРасходов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРасходыПриУСН", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКУДиРСтроки.Ссылка КАК Ссылка,
	|	ЗаписьКУДиРСтроки.НомерСтроки КАК НомерСтроки,
	|	ЗаписьКУДиРСтроки.ДатаНомер КАК ДатаНомер,
	|	ЗаписьКУДиРСтроки.Содержание КАК Содержание,
	|	ЗаписьКУДиРСтроки.Графа4 КАК Графа4,
	|	ЗаписьКУДиРСтроки.Графа5 КАК Графа5,
	|	ЗаписьКУДиРСтроки.Графа6 КАК Графа6,
	|	ЗаписьКУДиРСтроки.Графа7 КАК Графа7,
	|	ЗаписьКУДиРСтроки.ДоходыЕНВД КАК ДоходыЕНВД,
	|	ЗаписьКУДиРСтроки.РасходыЕНВД КАК РасходыЕНВД,
	|	ЗаписьКУДиРСтроки.НДС КАК НДС,
	|	ЗаписьКУДиРСтроки.ДоходТорговыйСбор,
	|	ЗаписьКУДиРСтроки.Ссылка.Организация КАК Организация,
	|	ЗаписьКУДиРСтроки.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_ТаблицаСтроки
	|ИЗ
	|	Документ.ЗаписьКУДиР.Строки КАК ЗаписьКУДиРСтроки
	|ГДЕ
	|	ЗаписьКУДиРСтроки.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаСтроки.Ссылка,
	|	ВТ_ТаблицаСтроки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТаблицаСтроки.ДатаНомер КАК РеквизитыПервичногоДокумента,
	|	ВТ_ТаблицаСтроки.Содержание,
	|	ВТ_ТаблицаСтроки.Графа4,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСтроки.ДоходыЕНВД
	|			ТОГДА 0
	|		ИНАЧЕ ВТ_ТаблицаСтроки.Графа5
	|	КОНЕЦ КАК Графа5,
	|	ВТ_ТаблицаСтроки.Графа6,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСтроки.РасходыЕНВД
	|			ТОГДА 0
	|		ИНАЧЕ ВТ_ТаблицаСтроки.Графа7
	|	КОНЕЦ КАК Графа7,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСтроки.ДоходыЕНВД
	|			ТОГДА ВТ_ТаблицаСтроки.Графа5
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоходЕНВД,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСтроки.РасходыЕНВД
	|			ТОГДА 0
	|		ИНАЧЕ ВТ_ТаблицаСтроки.НДС
	|	КОНЕЦ КАК НДС,
	|	ВТ_ТаблицаСтроки.Организация,
	|	ВТ_ТаблицаСтроки.Дата КАК Период,
	|	ВТ_ТаблицаСтроки.ДоходТорговыйСбор
	|ИЗ
	|	ВТ_ТаблицаСтроки КАК ВТ_ТаблицаСтроки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВТ_ТаблицаСтроки.РасходыЕНВД
	|				ТОГДА ВТ_ТаблицаСтроки.Графа4 <> 0
	|						ИЛИ ВТ_ТаблицаСтроки.Графа5 <> 0
	|						ИЛИ ВТ_ТаблицаСтроки.Графа6 <> 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаСтроки.Ссылка КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Распределяются) КАК ОтражениеВУСН,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыРасходовУСН.НеРаспределено) КАК СтатусыОплатыРасходовУСН,
	|	&ВалютаРеглУчета КАК Валюта,
	|	ВТ_ТаблицаСтроки.Графа7 КАК Сумма,
	|	ВТ_ТаблицаСтроки.НДС,
	|	ВТ_ТаблицаСтроки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТаблицаСтроки.Организация,
	|	ВТ_ТаблицаСтроки.Дата КАК Период
	|ИЗ
	|	ВТ_ТаблицаСтроки КАК ВТ_ТаблицаСтроки
	|ГДЕ
	|	ВТ_ТаблицаСтроки.РасходыЕНВД = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицаОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПервоначальныеСведенияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СостоянияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКУДиРОС.Ссылка           КАК Ссылка,
	|	ЗаписьКУДиРОС.НомерСтроки      КАК НомерСтроки,
	|	ЗаписьКУДиРОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаписьКУДиРОС.ДатаОплаты       КАК ДатаОплаты,
	|	ЗаписьКУДиРОС.Графа5_ПервоначальнаяСтоимость,
	|	ЗаписьКУДиРОС.Графа4_ГосударственнаяРегистрация,
	|	ЗаписьКУДиРОС.Графа6_ОстаточнаяСтоимость,
	|	ЗаписьКУДиРОС.Графа8_КолКварталовВОтчетномПериоде,
	|	ЗаписьКУДиРОС.Графа9_КолКварталовВНалПериоде,
	|	ЗаписьКУДиРОС.Графа10_ДоляРасходовЗаНалПериод,
	|	ЗаписьКУДиРОС.Графа11_ДоляРасходовЗаКвартал,
	|	ЗаписьКУДиРОС.Графа12_СуммаРасходовЗаОтчетнПериод,
	|	ЗаписьКУДиРОС.Графа13_СуммаРасходовЗаКвартал,
	|	ЗаписьКУДиРОС.Графа14_РасходыПрошлыхПериодов,
	|	ЗаписьКУДиРОС.Графа15_ОстатокРасходов,
	|	ЗаписьКУДиРОС.Ссылка.Организация КАК Организация,
	|	ЗаписьКУДиРОС.Ссылка.Дата        КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаОС
	|ИЗ
	|	Документ.ЗаписьКУДиР.ОС КАК ЗаписьКУДиРОС
	|ГДЕ
	|	ЗаписьКУДиРОС.Ссылка = &Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.ОсновноеСредство,
	|	Рег.Организация,
	|	Рег.СрокПолезногоИспользования,
	|	Рег.ДатаПриобретения
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(
	|		&Период,
	|		Организация = &Организация
	|			И ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаОС.ОсновноеСредство
	|				ИЗ
	|					ВТ_ТаблицаОС)
	|	) КАК Рег
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.ОсновноеСредство,
	|	Рег.Организация,
	|	Рег.Регистратор,
	|	Рег.ДатаСостояния
	|ПОМЕСТИТЬ ВТ_СостоянияОС
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|		&Период,
	|		Организация = &Организация
	|			И ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаОС.ОсновноеСредство
	|				ИЗ
	|					ВТ_ТаблицаОС)
	|			И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	) КАК Рег
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОС.Ссылка,
	|	ВТ_ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТаблицаОС.ОсновноеСредство,
	|	ВТ_ТаблицаОС.ДатаОплаты,
	|	ВТ_ТаблицаОС.Графа5_ПервоначальнаяСтоимость,
	|	ВТ_ТаблицаОС.Графа4_ГосударственнаяРегистрация,
	|	ВТ_ТаблицаОС.Графа6_ОстаточнаяСтоимость,
	|	ВТ_ТаблицаОС.Графа8_КолКварталовВОтчетномПериоде,
	|	ВТ_ТаблицаОС.Графа9_КолКварталовВНалПериоде,
	|	ВТ_ТаблицаОС.Графа10_ДоляРасходовЗаНалПериод,
	|	ВТ_ТаблицаОС.Графа11_ДоляРасходовЗаКвартал,
	|	ВТ_ТаблицаОС.Графа12_СуммаРасходовЗаОтчетнПериод,
	|	ВТ_ТаблицаОС.Графа13_СуммаРасходовЗаКвартал,
	|	ВТ_ТаблицаОС.Графа14_РасходыПрошлыхПериодов,
	|	ВТ_ТаблицаОС.Графа15_ОстатокРасходов,
	|	ВТ_ТаблицаОС.Организация,
	|	ВТ_ТаблицаОС.Период,
	|	ЕСТЬNULL(ВТ_ПервоначальныеСведенияОС.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА ВТ_ПервоначальныеСведенияОС.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятКУчетуПоУСН,
	|	ВТ_ПервоначальныеСведенияОС.ДатаПриобретения,
	|	ЕСТЬNULL(ВТ_СостоянияОС.Регистратор, НЕОПРЕДЕЛЕНО) КАК ДокументВвода,
	|	ВТ_СостоянияОС.ДатаСостояния КАК Графа3_ДатаВводаВЭксплуатацию
	|ИЗ
	|	ВТ_ТаблицаОС КАК ВТ_ТаблицаОС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_ПервоначальныеСведенияОС
	|	ПО
	|		ВТ_ТаблицаОС.ОсновноеСредство = ВТ_ПервоначальныеСведенияОС.ОсновноеСредство
	|		И ВТ_ТаблицаОС.Организация = ВТ_ПервоначальныеСведенияОС.Организация
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_СостоянияОС
	|	ПО
	|		ВТ_ПервоначальныеСведенияОС.ОсновноеСредство = ВТ_СостоянияОС.ОсновноеСредство
	|		И ВТ_ПервоначальныеСведенияОС.Организация = ВТ_СостоянияОС.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаНМА(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицаНМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПервоначальныеСведенияНМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СостоянияНМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаНМА", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКУДиРНМА.Ссылка,
	|	ЗаписьКУДиРНМА.НомерСтроки КАК НомерСтроки,
	|	ЗаписьКУДиРНМА.НематериальныйАктив,
	|	ЗаписьКУДиРНМА.ДатаОплаты,
	|	ЗаписьКУДиРНМА.Графа5_ПервоначальнаяСтоимость,
	|	ЗаписьКУДиРНМА.Графа6_ОстаточнаяСтоимость,
	|	ЗаписьКУДиРНМА.Графа8_КолКварталовВОтчетномПериоде,
	|	ЗаписьКУДиРНМА.Графа9_КолКварталовВНалПериоде,
	|	ЗаписьКУДиРНМА.Графа10_ДоляРасходовЗаНалПериод,
	|	ЗаписьКУДиРНМА.Графа11_ДоляРасходовЗаКвартал,
	|	ЗаписьКУДиРНМА.Графа12_СуммаРасходовЗаОтчетнПериод,
	|	ЗаписьКУДиРНМА.Графа13_СуммаРасходовЗаКвартал,
	|	ЗаписьКУДиРНМА.Графа14_РасходыПрошлыхПериодов,
	|	ЗаписьКУДиРНМА.Графа15_ОстатокРасходов,
	|	ЗаписьКУДиРНМА.Ссылка.Организация КАК Организация,
	|	ЗаписьКУДиРНМА.Ссылка.Дата        КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаНМА
	|ИЗ
	|	Документ.ЗаписьКУДиР.НМА КАК ЗаписьКУДиРНМА
	|ГДЕ
	|	ЗаписьКУДиРНМА.Ссылка = &Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.НематериальныйАктив,
	|	Рег.Организация,
	|	Рег.СрокПолезногоИспользования,
	|	Рег.ДатаПриобретения
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчетУСН.СрезПоследних(
	|		&Период,
	|		Организация = &Организация
	|			И НематериальныйАктив В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаНМА.НематериальныйАктив
	|				ИЗ
	|					ВТ_ТаблицаНМА)
	|	) КАК Рег
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.Регистратор,
	|	Рег.НематериальныйАктив,
	|	Рег.Организация,
	|	Рег.Период КАК РегистраторДата
	|ПОМЕСТИТЬ ВТ_СостоянияНМА
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
	|		&Период,
	|		Организация = &Организация
	|			И НематериальныйАктив В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаНМА.НематериальныйАктив
	|				ИЗ
	|					ВТ_ТаблицаНМА)
	|			И Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|	) КАК Рег
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНМА.Ссылка,
	|	ВТ_ТаблицаНМА.НомерСтроки,
	|	ВТ_ТаблицаНМА.НематериальныйАктив,
	|	ВТ_ТаблицаНМА.ДатаОплаты,
	|	ВТ_ТаблицаНМА.Графа5_ПервоначальнаяСтоимость,
	|	ВТ_ТаблицаНМА.Графа6_ОстаточнаяСтоимость,
	|	ВТ_ТаблицаНМА.Графа8_КолКварталовВОтчетномПериоде,
	|	ВТ_ТаблицаНМА.Графа9_КолКварталовВНалПериоде,
	|	ВТ_ТаблицаНМА.Графа10_ДоляРасходовЗаНалПериод,
	|	ВТ_ТаблицаНМА.Графа11_ДоляРасходовЗаКвартал,
	|	ВТ_ТаблицаНМА.Графа12_СуммаРасходовЗаОтчетнПериод,
	|	ВТ_ТаблицаНМА.Графа13_СуммаРасходовЗаКвартал,
	|	ВТ_ТаблицаНМА.Графа14_РасходыПрошлыхПериодов,
	|	ВТ_ТаблицаНМА.Графа15_ОстатокРасходов,
	|	ВТ_ТаблицаНМА.Организация,
	|	ВТ_ТаблицаНМА.Период,
	|	ЕСТЬNULL(ВТ_ПервоначальныеСведенияНМА.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ВТ_ПервоначальныеСведенияНМА.ДатаПриобретения,
	|	ВЫБОР
	|		КОГДА ВТ_ПервоначальныеСведенияНМА.НематериальныйАктив ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятКУчетуПоУСН,
	|	ВТ_СостоянияНМА.Регистратор КАК ДокументВвода,
	|	ВТ_СостоянияНМА.РегистраторДата КАК Графа3_ДатаПринятияКУчету
	|ИЗ
	|	ВТ_ТаблицаНМА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_ПервоначальныеСведенияНМА
	|	ПО
	|		ВТ_ТаблицаНМА.НематериальныйАктив = ВТ_ПервоначальныеСведенияНМА.НематериальныйАктив
	|		И ВТ_ТаблицаНМА.Организация = ВТ_ПервоначальныеСведенияНМА.Организация
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_СостоянияНМА
	|	ПО
	|		ВТ_ПервоначальныеСведенияНМА.НематериальныйАктив = ВТ_СостоянияНМА.НематериальныйАктив
	|		И ВТ_ПервоначальныеСведенияНМА.Организация = ВТ_СостоянияНМА.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаУменьшениеНалога(НомераТаблиц, Реквизиты)
	
	НомераТаблиц.Вставить("ТаблицаУменьшениеНалога", НомераТаблиц.Количество());
	
	Если УчетнаяПолитика.ПлательщикТорговогоСбораЗаПериод(Реквизиты.Организация, НачалоГода(Реквизиты.Период), КонецГода(Реквизиты.Период)) Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка КАК Ссылка,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка КАК ДокументРасхода,
		|	ЗаписьКУДиРУменьшениеНалога.НомерСтроки КАК НомерСтроки,
		|	ЗаписьКУДиРУменьшениеНалога.ДатаНомер КАК РеквизитыПервичногоДокумента,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Организация КАК Организация,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Дата КАК Дата,
		|	ЗаписьКУДиРУменьшениеНалога.ПериодНачисления КАК ПериодНачисления,
		|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
		|	ЗаписьКУДиРУменьшениеНалога.ПФР - ЗаписьКУДиРУменьшениеНалога.ПФРТорговыйСбор КАК ПФР,
		|	ЗаписьКУДиРУменьшениеНалога.ФСС - ЗаписьКУДиРУменьшениеНалога.ФССТорговыйСбор КАК ФСС,
		|	ЗаписьКУДиРУменьшениеНалога.ФОМС - ЗаписьКУДиРУменьшениеНалога.ФОМСТорговыйСбор КАК ФОМС,
		|	ЗаписьКУДиРУменьшениеНалога.ФСС_НС - ЗаписьКУДиРУменьшениеНалога.ФСС_НСТорговыйСбор КАК ФСС_НС,
		|	ЗаписьКУДиРУменьшениеНалога.Больничные - ЗаписьКУДиРУменьшениеНалога.БольничныеТорговыйСбор КАК Больничные,
		|	ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахование - ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахованиеТорговыйСбор КАК ДобровольноеСтрахование
		|ИЗ
		|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК ЗаписьКУДиРУменьшениеНалога
		|ГДЕ
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка = &Ссылка
		|	И (ЗаписьКУДиРУменьшениеНалога.ПФР - ЗаписьКУДиРУменьшениеНалога.ПФРТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ФСС - ЗаписьКУДиРУменьшениеНалога.ФССТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ФОМС - ЗаписьКУДиРУменьшениеНалога.ФОМСТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ФСС_НС - ЗаписьКУДиРУменьшениеНалога.ФСС_НСТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.Больничные - ЗаписьКУДиРУменьшениеНалога.БольничныеТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахование - ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахованиеТорговыйСбор <> 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка,
		|	ЗаписьКУДиРУменьшениеНалога.НомерСтроки,
		|	ЗаписьКУДиРУменьшениеНалога.ДатаНомер,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Организация,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Дата,
		|	ЗаписьКУДиРУменьшениеНалога.ПериодНачисления,
		|	ИСТИНА,
		|	ЗаписьКУДиРУменьшениеНалога.ПФРТорговыйСбор,
		|	ЗаписьКУДиРУменьшениеНалога.ФССТорговыйСбор,
		|	ЗаписьКУДиРУменьшениеНалога.ФОМСТорговыйСбор,
		|	ЗаписьКУДиРУменьшениеНалога.ФСС_НСТорговыйСбор,
		|	ЗаписьКУДиРУменьшениеНалога.БольничныеТорговыйСбор,
		|	ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахованиеТорговыйСбор
		|ИЗ
		|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК ЗаписьКУДиРУменьшениеНалога
		|ГДЕ
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка = &Ссылка
		|	И (ЗаписьКУДиРУменьшениеНалога.ПФРТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ФССТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ФОМСТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ФСС_НСТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.БольничныеТорговыйСбор <> 0
		|			ИЛИ ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахованиеТорговыйСбор <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ПериодНачисления";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка КАК Ссылка,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка КАК ДокументРасхода,
		|	ЗаписьКУДиРУменьшениеНалога.НомерСтроки КАК НомерСтроки,
		|	ЗаписьКУДиРУменьшениеНалога.ДатаНомер КАК РеквизитыПервичногоДокумента,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Организация КАК Организация,
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Дата КАК Дата,
		|	ЗаписьКУДиРУменьшениеНалога.ПериодНачисления КАК ПериодНачисления,
		|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
		|	ЗаписьКУДиРУменьшениеНалога.ПФР КАК ПФР,
		|	ЗаписьКУДиРУменьшениеНалога.ФСС КАК ФСС,
		|	ЗаписьКУДиРУменьшениеНалога.ФОМС КАК ФОМС,
		|	ЗаписьКУДиРУменьшениеНалога.ФСС_НС КАК ФСС_НС,
		|	ЗаписьКУДиРУменьшениеНалога.Больничные КАК Больничные,
		|	ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахование КАК ДобровольноеСтрахование
		|ИЗ
		|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК ЗаписьКУДиРУменьшениеНалога
		|ГДЕ
		|	ЗаписьКУДиРУменьшениеНалога.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ПериодНачисления"
		;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаУплаченныйТорговыйСбор(НомераТаблиц, Реквизиты)
	
	НомераТаблиц.Вставить("ТаблицаУплаченныйТорговыйСбор", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.НомерСтроки КАК НомерСтроки,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.ДатаНомер КАК РеквизитыПервичногоДокумента,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.ПериодНачисления КАК ПериодНачисления,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.СуммаТорговогоСбора
	|ИЗ
	|	Документ.ЗаписьКУДиР.УплаченныйТорговыйСбор КАК ЗаписьКУДиРУплаченныйТорговыйСбор
	|ГДЕ
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#Область ФормированиеДвижений

Процедура СформироватьДвиженияЗаписьКУДиР(ПараметрыПроведения, Движения, Отказ) Экспорт

	Реквизиты = ПараметрыПроведения.Реквизиты[0];

	ДатаПереходаНаУСН = УчетнаяПолитика.ДатаПереходаНаУСН(Реквизиты.Организация, Реквизиты.Период);
	Дата2006          = Дата("20060101");

	ДатаПереходаНаУСН = УчетнаяПолитика.ДатаПереходаНаУСН(Реквизиты.Организация, Реквизиты.Период);

	ТаблицаДоходовИРасходов       = ПараметрыПроведения.ТаблицаДоходовИРасходов;
	ТаблицаРасходыПриУСН          = ПараметрыПроведения.ТаблицаРасходыПриУСН;
	ТаблицаОС                     = ПараметрыПроведения.ТаблицаОС;
	ТаблицаНМА                    = ПараметрыПроведения.ТаблицаНМА;
	ТаблицаУменьшениеНалога       = ПараметрыПроведения.ТаблицаУменьшениеНалога;
	ТаблицаУплаченныйТорговыйСбор = ПараметрыПроведения.ТаблицаУплаченныйТорговыйСбор;

	РегистрКниги = ?(Реквизиты.ДеятельностьНаПатенте, Движения.КнигаУчетаДоходовПатент, Движения.КнигаУчетаДоходовИРасходов);
	
	// Формирование записей книги доходов и расходов Раздел I
	Для каждого ДоходИРасход ИЗ ТаблицаДоходовИРасходов Цикл
		СтрокаДвижений = РегистрКниги.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, ДоходИРасход);
		Если Реквизиты.ДеятельностьНаПатенте Тогда
			СтрокаДвижений.Патент = Реквизиты.Патент;
		КонецЕсли;
		РегистрКниги.Записывать = Истина;
	КонецЦикла;

	// Формирование записей по регистру "Расходы при УСН"
	Для каждого Расход ИЗ ТаблицаРасходыПриУСН Цикл
		СтрокаДвижений = Движения.РасходыПриУСН.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, Расход);
		Движения.РасходыПриУСН.Записывать = Истина;
	КонецЦикла;

	// Формирование записей книги доходов и расходов Раздел II - по ОС
	Для каждого РасходПоОС ИЗ ТаблицаОС Цикл
		Если Не ЗначениеЗаполнено(РасходПоОС.Графа3_ДатаВводаВЭксплуатацию) ИЛИ РасходПоОС.СрокПолезногоИспользования = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаДвижений = Движения.КнигаУчетаДоходовИРасходовОС.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, РасходПоОС);
		Если Реквизиты.Период < Дата2006 ИЛИ РасходПоОС.ДатаПриобретения < ДатаПереходаНаУСН Тогда
			СтрокаДвижений.Графа7_СрокПолезногоИспользования = Цел(РасходПоОС.СрокПолезногоИспользования/12) + ?(РасходПоОС.СрокПолезногоИспользования%12 <> 0, 1, 0);
		КонецЕсли;
		Движения.КнигаУчетаДоходовИРасходовОС.Записывать = Истина;
	КонецЦикла;

	// Формирование записей книги доходов и расходов Раздел II - по НМА
	Для каждого РасходПоНМА ИЗ ТаблицаНМА Цикл
		Если Не ЗначениеЗаполнено(РасходПоНМА.Графа3_ДатаПринятияКУчету) ИЛИ РасходПоНМА.СрокПолезногоИспользования = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаДвижений = Движения.КнигаУчетаДоходовИРасходовНМА.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, РасходПоНМА);
		Если Реквизиты.Период < Дата2006 ИЛИ РасходПоНМА.ДатаПриобретения < ДатаПереходаНаУСН Тогда
			СтрокаДвижений.Графа7_СрокПолезногоИспользования = Цел(РасходПоНМА.СрокПолезногоИспользования/12) + ?(РасходПоНМА.СрокПолезногоИспользования%12 <> 0, 1, 0);
		КонецЕсли;
		Движения.КнигаУчетаДоходовИРасходовНМА.Записывать = Истина;
	КонецЦикла;

	Для каждого ЗаписьУменьшениеНалога Из ТаблицаУменьшениеНалога Цикл
		
		СтрокаДвижений = Движения.КнигаУчетаДоходовИРасходовРаздел4.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, Реквизиты);
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, ЗаписьУменьшениеНалога);
		
		СтрокаДвижений.ПериодНачисленияПредставление = Формат(СтрокаДвижений.ПериодНачисления, "ДФ='MMMM yyyy'");
		Движения.КнигаУчетаДоходовИРасходовРаздел4.Записывать = Истина;
		
	КонецЦикла;

	Для каждого ЗаписьУплаченныйТорговыйСбор Из ТаблицаУплаченныйТорговыйСбор Цикл
		
		СтрокаДвижений = Движения.КнигаУчетаДоходовИРасходовРаздел5.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, Реквизиты);
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, ЗаписьУплаченныйТорговыйСбор);
		
		Движения.КнигаУчетаДоходовИРасходовРаздел5.Записывать = Истина;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОбновления

// Обработчик обновления на версию 3.0.35.9
// Заполняет данные по существующим документам в регистре сведений "ДанныеПервичныхДокументов"
Процедура ЗарегистрироватьДанныеПервичныхДокументов() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКУДиР.Организация,
	|	ЗаписьКУДиР.Ссылка КАК Документ,
	|	ЗаписьКУДиР.Номер,
	|	ЗаписьКУДиР.Дата,
	|	ЗаписьКУДиР.Дата КАК ДатаРегистратора,
	|	ЗаписьКУДиР.Номер КАК НомерРегистратора
	|ИЗ
	|	Документ.ЗаписьКУДиР КАК ЗаписьКУДиР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ЗаписьКУДиР.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ЗаписьКУДиР.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ДанныеПервичныхДокументов.Дата ЕСТЬ NULL 
	|	И НЕ ЗаписьКУДиР.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)"
	;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Набор = РегистрыСведений.ДанныеПервичныхДокументов.СоздатьНаборЗаписей();
		
		Набор.Отбор.Организация.Установить(Выборка.Организация, Истина);
		Набор.Отбор.Документ.Установить(Выборка.Документ, Истина);
		
		НоваяЗапись = Набор.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		НоваяЗапись.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Ложь);
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
		Исключение
			ШаблонСообщения	= НСтр("ru = 'Не удалось зарегистрировать данные документа
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ЗаписьКУДиР,
				Выборка.Документ,
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

// Обработчик обновления: добавление движений по регистру "КнигаУчетаДоходовИРасходовРаздел4"
//
Процедура ДобавитьДвиженияПоРасходамУменьшающимНалогУСН() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиСистемыНалогообложения.Организация
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|ГДЕ
	|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда // нет организаций на УСН с объектом "доходы"
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Дата КАК Период,
	|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Организация,
	|	ЗаписьКУДиРУменьшениеНалога.Ссылка КАК Регистратор,
	|	ИСТИНА КАК Активность,
	|	ЗаписьКУДиРУменьшениеНалога.Ссылка КАК ДокументРасхода,
	|	ЗаписьКУДиРУменьшениеНалога.НомерСтроки КАК НомерСтроки,
	|	ЗаписьКУДиРУменьшениеНалога.ДатаНомер КАК РеквизитыПервичногоДокумента,
	|	ЗаписьКУДиРУменьшениеНалога.ПериодНачисления,
	|	ЗаписьКУДиРУменьшениеНалога.ПФР,
	|	ЗаписьКУДиРУменьшениеНалога.ФСС,
	|	ЗаписьКУДиРУменьшениеНалога.ФОМС,
	|	ЗаписьКУДиРУменьшениеНалога.ФСС_НС,
	|	ЗаписьКУДиРУменьшениеНалога.Больничные,
	|	ЗаписьКУДиРУменьшениеНалога.ДобровольноеСтрахование
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК ЗаписьКУДиРУменьшениеНалога
	|ГДЕ
	|	ЗаписьКУДиРУменьшениеНалога.Ссылка.Проведен
	|	И НЕ ЗаписьКУДиРУменьшениеНалога.Ссылка.ПометкаУдаления
	|	И НЕ ЗаписьКУДиРУменьшениеНалога.Ссылка.ДеятельностьНаПатенте
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Регистратор"
	;
	
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДвиженияРаздел4 = РегистрыНакопления.КнигаУчетаДоходовИРасходовРаздел4.СоздатьНаборЗаписей();
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если НЕ УчетнаяПолитика.ПрименяетсяУСНДоходы(ВыборкаДокументы.Организация, ВыборкаДокументы.Период) Тогда
			Продолжить;
		КонецЕсли;
		
		ДвиженияРаздел4.Отбор.Регистратор.Установить(ВыборкаДокументы.Регистратор, Истина);
		ДвиженияРаздел4.Прочитать();
		
		Если ДвиженияРаздел4.Количество() > 0 Тогда // движения уже сформированы
			Продолжить;
		КонецЕсли;
		
		ВыборкаСтроки = ВыборкаДокументы.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			Движение = ДвиженияРаздел4.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаСтроки);
			ДвиженияРаздел4.Записывать = Истина;
		КонецЦикла;
		
		// записываем движения
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДвиженияРаздел4);
		Исключение
			ШаблонСообщения = НСтр("ru = 'Не удалось сформировать движения документа ""Запись книги доходов и расходов УСН"" по регистру ""Книга учета доходов и расходов (раздел IV)""
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ЗаписьКУДиР,
				ВыборкаДокументы.Регистратор,
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

// Обработчик обновления: добавление движений по регистру "КнигаУчетаДоходовИРасходовРаздел5"
//
Процедура ДобавитьДвиженияПоУплаченномуТорговомуСбору() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиСистемыНалогообложения.Организация
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|ГДЕ
	|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда // нет организаций на УСН с объектом "доходы"
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаВедения5Раздела", УчетУСНКлиентСервер.ДатаНачалаФормирования5РазделаКУДиР());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Дата КАК Период,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Организация,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка КАК Регистратор,
	|	ИСТИНА КАК Активность,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.НомерСтроки КАК НомерСтроки,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.ДатаНомер КАК РеквизитыПервичногоДокумента,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.ПериодНачисления,
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.СуммаТорговогоСбора
	|ИЗ
	|	Документ.ЗаписьКУДиР.УплаченныйТорговыйСбор КАК ЗаписьКУДиРУплаченныйТорговыйСбор
	|ГДЕ
	|	ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Дата >= &ДатаНачалаВедения5Раздела
	|	И ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Проведен
	|	И НЕ ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.ПометкаУдаления
	|	И НЕ ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.ДеятельностьНаПатенте
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Регистратор"
	;
	
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДвиженияРаздел5 = РегистрыНакопления.КнигаУчетаДоходовИРасходовРаздел5.СоздатьНаборЗаписей();
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если НЕ УчетнаяПолитика.ПрименяетсяУСНДоходы(ВыборкаДокументы.Организация, ВыборкаДокументы.Период) Тогда
			Продолжить;
		КонецЕсли;
		
		ДвиженияРаздел5.Отбор.Регистратор.Установить(ВыборкаДокументы.Регистратор, Истина);
		ДвиженияРаздел5.Прочитать();
		
		Если ДвиженияРаздел5.Количество() > 0 Тогда // движения уже сформированы
			Продолжить;
		КонецЕсли;
		
		ВыборкаСтроки = ВыборкаДокументы.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			Движение = ДвиженияРаздел5.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаСтроки);
			ДвиженияРаздел5.Записывать = Истина;
		КонецЦикла;
		
		// записываем движения
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДвиженияРаздел5);
		Исключение
			ШаблонСообщения = НСтр("ru = 'Не удалось сформировать движения документа ""Запись книги доходов и расходов УСН"" по регистру ""Книга учета доходов и расходов (раздел V)""
									|%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ЗаписьКУДиР,
				ВыборкаДокументы.Регистратор,
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли