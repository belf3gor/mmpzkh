#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДеятельностьНаПатенте Тогда
		ОС.Очистить();
		НМА.Очистить();
	КонецЕсли;
	
	Если Дата < УчетУСНКлиентСервер.ДатаНачалаФормирования4РазделаКУДиР()
		ИЛИ ДеятельностьНаПатенте
		ИЛИ НЕ УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, Дата) Тогда
		УменьшениеНалога.Очистить();
	КонецЕсли;
	
	Если Дата < УчетУСНКлиентСервер.ДатаНачалаФормирования5РазделаКУДиР()
		ИЛИ ДеятельностьНаПатенте
		ИЛИ НЕ УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, Дата) Тогда
		УплаченныйТорговыйСбор.Очистить();
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата          = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);

	ПараметрыПроведения = Документы.ЗаписьКУДиР.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	Документы.ЗаписьКУДиР.СформироватьДвиженияЗаписьКУДиР(ПараметрыПроведения, Движения, Отказ);
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если НЕ ДеятельностьНаПатенте Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Патент");
	КонецЕсли;
	
	Если ДеятельностьНаПатенте Тогда
		Если НЕ УчетнаяПолитика.ПрименяетсяУСНПатент(Организация, Дата) Тогда
			
			Если Дата < УчетУСН.ДатаНачалаДействияПатентнойСистемы() Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Организация %1 не применяет упрощенную систему налогообложения на основе патента'"),
					Организация);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Организация %1 не применяет патентную систему налогообложения'"),
					Организация);
			КонецЕсли;
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Организация", "Объект", Отказ);
			
		КонецЕсли;
	Иначе
		Если НЕ УчетнаяПолитика.ПрименяетсяУСН(Организация, Дата) Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Организация %1 не применяет упрощенную систему налогообложения'"),
				Организация);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Организация", "Объект", Отказ);
			
		КонецЕсли;
	КонецЕсли;
	
	Если Дата < Дата(2006,1,1) Тогда
		Если НМА.Количество() > 0 Тогда
			ТекстСообщения = НСтр("ru = 'До 01.01.2006 г. НМА не должны заполняться.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НМА", "Объект", Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Для каждого Строка Из Строки Цикл
		Если Строка.Графа7 >=0 И Строка.НДС > Строка.Графа7 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сумма входящего НДС, указанная в составе принимаемых расходов в строке %1, превышает сумму расходов'"), 
				Строка.НомерСтроки);
			Поле = "Строки[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].НДС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		ИначеЕсли Строка.Графа7 < 0 И Строка.НДС < Строка.Графа7 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сумма сторно входящего НДС, указанная в составе принимаемых расходов в строке %1, превышает сумму сторно расходов'"), 
				Строка.НомерСтроки);
			Поле = "Строки[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].НДС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;

	ПараметрыПроверки = Новый Структура;
	НомераТаблиц = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("ТаблицаОС",   ОС.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаНМА",  НМА.Выгрузить());

	Запрос.Текст =
		ТекстЗапросаТаблицаОС(НомераТаблиц)
		+ ТекстЗапросаТаблицаНМА(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроверки.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	ТаблицаОС = ПараметрыПроверки.ТаблицаОС;
	Для каждого РасходПоОС Из ТаблицаОС Цикл
		Если НЕ РасходПоОС.ПринятКУчетуПоУСН Тогда
			ТекстСообщения = НСтр("ru='Не удалось провести документ %1.
				|Отсутствует информация о первоначальных сведениях по объекту %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Ссылка, РасходПоОС.ОсновноеСредство);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				"ОС[" + Формат(РасходПоОС.НомерСтроки - 1, "ЧН=; ЧГ=") + "].ОсновноеСредство",
				"Объект",
				Отказ);
		КонецЕсли;
	КонецЦикла;

	ТаблицаНМА = ПараметрыПроверки.ТаблицаНМА;
	// Формирование записей книги доходов и расходов Раздел II - по НМА
	Для каждого РасходПоНМА Из ТаблицаНМА Цикл
		Если НЕ РасходПоНМА.ПринятКУчетуПоУСН Тогда
			ТекстСообщения = НСтр("ru='Не удалось провести документ %1.
				|Отсутствует информация о первоначальных сведениях по объекту %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Ссылка, РасходПоНМА.НематериальныйАктив);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				"НМА[" + Формат(РасходПоНМА.НомерСтроки - 1, "ЧН=; ЧГ=") + "].НематериальныйАктив",
				"Объект",
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицаОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПервоначальныеСведенияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаписьКУДиРОС.НомерСтроки      КАК НомерСтроки,
	|	ЗаписьКУДиРОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&Организация                   КАК Организация,
	|	&Период                        КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ЗаписьКУДиРОС
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.ОсновноеСредство,
	|	Рег.Организация
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(
	|		&Период,
	|		Организация = &Организация
	|			И ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаОС.ОсновноеСредство
	|				ИЗ
	|					ВТ_ТаблицаОС)
	|	) КАК Рег
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОС.НомерСтроки,
	|	ВТ_ТаблицаОС.ОсновноеСредство,
	|	ВТ_ТаблицаОС.Организация,
	|	ВТ_ТаблицаОС.Период,
	|	ВЫБОР
	|		КОГДА ВТ_ПервоначальныеСведенияОС.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятКУчетуПоУСН
	|ИЗ
	|	ВТ_ТаблицаОС КАК ВТ_ТаблицаОС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_ПервоначальныеСведенияОС
	|	ПО
	|		ВТ_ТаблицаОС.ОсновноеСредство = ВТ_ПервоначальныеСведенияОС.ОсновноеСредство
	|		И ВТ_ТаблицаОС.Организация = ВТ_ПервоначальныеСведенияОС.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаНМА(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицаНМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПервоначальныеСведенияНМА", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаНМА", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКУДиРНМА.НомерСтроки         КАК НомерСтроки,
	|	ЗаписьКУДиРНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	&Организация                       КАК Организация,
	|	&Период                            КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаНМА
	|ИЗ
	|	&ТаблицаНМА КАК ЗаписьКУДиРНМА
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.НематериальныйАктив,
	|	Рег.Организация
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчетУСН.СрезПоследних(
	|		&Период,
	|		Организация = &Организация
	|			И НематериальныйАктив В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаНМА.НематериальныйАктив
	|				ИЗ
	|					ВТ_ТаблицаНМА)
	|	) КАК Рег
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНМА.НомерСтроки,
	|	ВТ_ТаблицаНМА.НематериальныйАктив,
	|	ВТ_ТаблицаНМА.Организация,
	|	ВТ_ТаблицаНМА.Период,
	|	ВЫБОР
	|		КОГДА ВТ_ПервоначальныеСведенияНМА.НематериальныйАктив ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятКУчетуПоУСН
	|ИЗ
	|	ВТ_ТаблицаНМА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_ПервоначальныеСведенияНМА
	|	ПО
	|		ВТ_ТаблицаНМА.НематериальныйАктив = ВТ_ПервоначальныеСведенияНМА.НематериальныйАктив
	|		И ВТ_ТаблицаНМА.Организация = ВТ_ПервоначальныеСведенияНМА.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

#КонецОбласти

#КонецЕсли