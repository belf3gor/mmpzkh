
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ЗначенияЗаполнения.Свойство("СписокДокументовОснований") Тогда 
		
		ТаблицаТекущихОснований = Параметры.ЗначенияЗаполнения.СписокДокументовОснований;
		
		Для Каждого СтрокаТаблицы Из ТаблицаТекущихОснований Цикл
			СтрокаДокументОснование = ДокументыОснования.Добавить();
			СтрокаДокументОснование.ДокументОснование   = СтрокаТаблицы.Значение;
			СтрокаДокументОснование.Договор             = Параметры.Отбор.Договор;
			СтрокаДокументОснование.Валюта              = Параметры.Отбор.Валюта;
		КонецЦикла;
	
	КонецЕсли;
	
	Организация = Параметры.Отбор.Организация;
	Контрагент  = Параметры.Отбор.Контрагент;
	СчетФактура = Параметры.ЗначенияЗаполнения.СчетФактура;
	Исправление = Параметры.ЗначенияЗаполнения.Исправление;
	ИсправлениеСобственнойОшибки = Параметры.ЗначенияЗаполнения.ИсправлениеСобственнойОшибки;
	ВидСчетаФактуры = Параметры.ЗначенияЗаполнения.ВидСчетаФактуры;
	ЭтоКорректировочный = ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПеренестиДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПеренестиДанные(Отказ = Ложь)
	
	ОчиститьСообщения();
	
	СписокДокументовОснований = Новый СписокЗначений;
	ПерваяСтрока = Истина;
	
	РазныеВалюты 		= Ложь;
	
	Для Индекс = 0 По ДокументыОснования.Количество() - 1 Цикл
		
		СтрокаТаблицы = ДокументыОснования[Индекс];
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументОснование) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 не выбран документ.'"),
				Индекс + 1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ДокументыОснования["+Индекс+"].ДокументОснование",
				,
				Отказ);
		КонецЕсли;
		
		Если НЕ ЭтоКорректировочный Тогда
			Если СписокДокументовОснований.НайтиПоЗначению(СтрокаТаблицы.ДокументОснование) <> Неопределено
			 И ЗначениеЗаполнено(СтрокаТаблицы.ДокументОснование) Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В строке %1 повторно указан документ %2.'"),
					Индекс + 1,
					СтрокаТаблицы.ДокументОснование);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					,
					"ДокументыОснования["+Индекс+"].ДокументОснование",
					,
					Отказ);
			КонецЕсли;
		КонецЕсли;
			
		Если ЗначениеЗаполнено(ДокументыОснования[Индекс].ДокументОснование) Тогда 
			Если ПерваяСтрока Тогда
				
				Валюта  = ДокументыОснования[Индекс].Валюта;
				ПерваяСтрока = Ложь;
				
			Иначе
				// Валюту имеет смысл сравнивать только для заполненных значений.
				Если ЗначениеЗаполнено(Валюта)
					И ЗначениеЗаполнено(ДокументыОснования[Индекс].Валюта) Тогда 
					РазныеВалюты = РазныеВалюты ИЛИ Валюта <> ДокументыОснования[Индекс].Валюта;
				ИначеЕсли ЗначениеЗаполнено(ДокументыОснования[Индекс].Валюта) Тогда
					Валюта = ДокументыОснования[Индекс].Валюта;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СписокДокументовОснований.Добавить(СтрокаТаблицы.ДокументОснование);
		
	КонецЦикла;
	
	Если РазныеВалюты Тогда
		
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='В список документов-оснований можно выбирать документы с одинаковой валютой'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ДокументыОснования"); 
		
	КонецЕсли;
				
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		ОповеститьОВыборе(СписокДокументовОснований);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура();
		
	СтруктураПараметров.Вставить("ПодобранныеОснования", Новый СписокЗначений);
	Для Каждого СтрокаТаблицы Из ДокументыОснования Цикл
		СтруктураПараметров.ПодобранныеОснования.Добавить(СтрокаТаблицы.ДокументОснование)
	КонецЦикла;
	
	СтруктураПараметров.Вставить("СчетФактура", СчетФактура);
	СтруктураПараметров.Вставить("ВидСчетаФактуры", ВидСчетаФактуры);
	СтруктураПараметров.Вставить("Исправление", Исправление);
	СтруктураПараметров.Вставить("ТипСчетаФактуры", "Полученный");
	СтруктураПараметров.Вставить("Исправление", Исправление);
	СтруктураПараметров.Вставить("ИсправлениеСобственнойОшибки", ИсправлениеСобственнойОшибки);
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("Контрагент", Контрагент);
	СтрокаДокумента = Элементы.ДокументыОснования.ТекущиеДанные;
	ТекущийДокумент = Неопределено;
	Если СтрокаДокумента <> Неопределено Тогда 
		ТекущийДокумент = СтрокаДокумента.ДокументОснование;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ТекущийДокумент", ТекущийДокумент);
	
	ОткрытьФорму("Обработка.ПодборОснованийСчетаФактуры.Форма.ФормаПодбораОснованийСчетаФактуры", СтруктураПараметров, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ДокументыОснования.ТекущиеДанные;
	ТекСтрока.ДокументОснование = ВыбранноеЗначение.Документ;
	ЭлементКоллекции = ДокументыОснования.НайтиПоИдентификатору(ТекСтрока.ПолучитьИдентификатор());
	
	Если ЭлементКоллекции <> Неопределено Тогда 
		ЭлементКоллекции.Договор 		= ВыбранноеЗначение.Договор;
		ЭлементКоллекции.Валюта 		= ВыбранноеЗначение.Валюта;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиДанные();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
