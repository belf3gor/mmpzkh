
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СписокСчетовФактур") Тогда 
		
		ТаблицаТекущихСчетоФактур = Параметры.СписокСчетовФактур;
		
		Для Каждого СтрокаТаблицы Из ТаблицаТекущихСчетоФактур Цикл
			СтрокаДокументОснование = ДокументыСчетовФактур.Добавить();
			СтрокаДокументОснование.СчетФактура = СтрокаТаблицы.Значение;
			СтрокаДокументОснование.Договор     = Параметры.ДоговорКонтрагента;
			СтрокаДокументОснование.Валюта      = Параметры.Валюта;
		КонецЦикла;
	
	КонецЕсли;
	
	Организация = Параметры.Организация;
	Контрагент  = Параметры.Контрагент;
	ДоговорКонтрагента  = Параметры.ДоговорКонтрагента;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПеренестиДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПеренестиДанные(Отказ = Ложь)
	
	ОчиститьСообщения();
	
	СписокДокументовСчетовФактура = Новый СписокЗначений;
	ПерваяСтрока = Истина;
	
	РазныеВалюты 		= Ложь;
	
	Для Индекс = 0 По ДокументыСчетовФактур.Количество() - 1 Цикл
		
		СтрокаТаблицы = ДокументыСчетовФактур[Индекс];
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.СчетФактура) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 не выбран документ.'"),
				Индекс + 1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ДокументыОснования["+Индекс+"].ДокументОснование",
				,
				Отказ);
		КонецЕсли;
		
		Если СписокДокументовСчетовФактура.НайтиПоЗначению(СтрокаТаблицы.СчетФактура) <> Неопределено
		 И ЗначениеЗаполнено(СтрокаТаблицы.СчетФактура) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 повторно указан документ %2.'"),
				Индекс + 1,
				СтрокаТаблицы.СчетФактура);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ДокументыОснования["+Индекс+"].ДокументОснование",
				,
				Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДокументыСчетовФактур[Индекс].СчетФактура) Тогда 
			Если ПерваяСтрока Тогда
				
				Валюта  = ДокументыСчетовФактур[Индекс].Валюта;
				ПерваяСтрока = Ложь;
				
			Иначе
				// Валюту имеет смысл сравнивать только для заполненных значений.
				Если ЗначениеЗаполнено(Валюта)
					И ЗначениеЗаполнено(ДокументыСчетовФактур[Индекс].Валюта) Тогда 
					РазныеВалюты = РазныеВалюты ИЛИ Валюта <> ДокументыСчетовФактур[Индекс].Валюта;
				ИначеЕсли ЗначениеЗаполнено(ДокументыСчетовФактур[Индекс].Валюта) Тогда
					Валюта = ДокументыСчетовФактур[Индекс].Валюта;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СписокДокументовСчетовФактура.Добавить(СтрокаТаблицы.СчетФактура);
		
	КонецЦикла;
	
	Если РазныеВалюты Тогда
		
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='В список документов-оснований можно выбирать документы с одинаковой валютой'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ДокументыОснования"); 
		
	КонецЕсли;
				
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		ОповеститьОВыборе(СписокДокументовСчетовФактура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура();
		
	СтруктураПараметров.Вставить("ПодобранныеСчетаФактуры", Новый СписокЗначений);
	Для Каждого СтрокаТаблицы Из ДокументыСчетовФактур Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.СчетФактура) Тогда
			СтруктураПараметров.ПодобранныеСчетаФактуры.Добавить(СтрокаТаблицы.СчетФактура)
		КонецЕсли;
	КонецЦикла;
	
	
	СтруктураПараметров.Вставить("Отбор", Новый Структура("ДоговорКонтрагента", ЭтотОбъект.ДоговорКонтрагента));
	
	СтрокаДокумента = Элементы.ДокументыСчетовФактур.ТекущиеДанные;
	ТекущийДокумент = Неопределено;
	Если СтрокаДокумента <> Неопределено Тогда 
		ТекущийДокумент = СтрокаДокумента.СчетФактура;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ТекущийДокумент", ТекущийДокумент);
	
	ОткрытьФорму("Документ.СчетФактураПолученный.ФормаВыбора", СтруктураПараметров, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ДокументыСчетовФактур.ТекущиеДанные;
	ТекСтрока.СчетФактура = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиДанные();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
