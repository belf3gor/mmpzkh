
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаДокументыОснования" Тогда
		Модифицированность = Истина;
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаСчетаФактурыВыданныеПокупателям" Тогда
		ОбработкаВыбораСчетаФактурыВыданныеПокупателямНаСервере(ВыбранноеЗначение);
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаПродавцы" Тогда
		ОбработкаВыбораПродавцовНаСервере(ВыбранноеЗначение);
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаРасшифровкаАвансов" Тогда
		ОбработкаВыбораАвансовНаСервере(ВыбранноеЗначение);
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаПлатежныеДокументы" Тогда
		ОбработкаВыбораПлатежныхДокументовНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьСостояниеДокумента();
	ПредставлениеДокумента = Документы.СчетФактураПолученный.ПолучитьПредставлениеДокумента(Объект.Ссылка, Объект.ВидСчетаФактуры);
	УстановитьЗаголовокФормы(ЭтотОбъект, ПредставлениеДокумента);
	
	УчетНДСКлиентСервер.ДополнитьПараметрыСобытияЗаписьСчетаФактуры(ПараметрыЗаписи);
	ПараметрыЗаписи.ДокументыОснования = ОбщегоНазначения.ВыгрузитьКолонку(ТекущийОбъект.ДокументыОснования, "ДокументОснование", Истина);
	ПараметрыЗаписи.РеквизитыСФ        = УчетНДСВызовСервера.РеквизитыДляНадписиОСчетеФактуреПолученном(ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УчетНДСКлиентСервер.ДополнитьПараметрыСобытияЗаписьСчетаФактуры(ПараметрыЗаписи); // На 8.2 в web-клиенте ПараметрыЗаписи могут быть не инициализированы
	
	Оповестить("Запись_СчетФактураПолученныйИсправлениеСобственнойОшибки", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Отказ = НЕ СчетФактураФормы.ФорматныйКонтрольИННКППИсправлениеСобственнойОшибкиПройден(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеИсправляемогоСчетаФактурыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	БухгалтерскийУчетКлиентПереопределяемый.ОткрытьСчетФактуру(ЭтотОбъект,
		Объект.ИсправляемыйСчетФактура,
		"СчетФактураПолученный");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСчетФактураВыборНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьСчетаФактурыВыданныеПокупателям();
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Уменьшение", Ложь);
	ТекущийКод = Элемент.СписокВыбора.НайтиПоЗначению(Объект.КодВидаОперации);
	ОповещениеВыбора = Новый ОписаниеОповещения("ВыборИзСпискаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВыборИзСписка(ОповещениеВыбора, Элемент.СписокВыбора, Элемент, ТекущийКод);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаОперацииНаУменьшениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Уменьшение", Истина);
	ТекущийКод = Элемент.СписокВыбора.НайтиПоЗначению(Объект.КодВидаОперацииНаУменьшение);
	ОповещениеВыбора = Новый ОписаниеОповещения("ВыборИзСпискаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВыборИзСписка(ОповещениеВыбора, Элемент.СписокВыбора, Элемент, ТекущийКод);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьИзменитьСчетаФактурыНажатие(Элемент)
	
	ВыбратьСчетаФактурыВыданныеПокупателям();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСчетаФактурыВыданныеПокупателюНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьСчетаФактурыВыданныеПокупателям();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВыборНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьОснование();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНесколькоПродавцовВыборНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьПродавцов();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьИзменитьПродавцовНажатие(Элемент)
	
	ВыбратьПродавцов();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНесколькоПродавцовСсылкаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьПродавцов();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументыОснованияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьОснование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПолеВводаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьОснование();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПлатежныеДокументыНажатие(Элемент)
	
	ВыбратьПлатежныеДокументы();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьИтогиГиперссылкойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РедактироватьАвансы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	РежимЗаписи = РежимЗаписи(Объект.ДокументыОснования);
	Если Записать(Новый Структура("РежимЗаписи", РежимЗаписи)) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УсловноеОформление

Процедура УстановитьУсловноеОформление()
	
	СчетФактураФормы.УстановитьУсловноеОформлениеИсправлениеСобственнойОшибки(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	УстановитьСостояниеДокумента();
	
	УстановитьПредставлениеИсправляемогоСчетаФактуры();
	УстановитьПредставлениеСсылкиИтоги(ЭтотОбъект);
	
	ПредставлениеДокумента = Документы.СчетФактураПолученный.ПолучитьПредставлениеДокумента(Объект.Ссылка, Объект.ВидСчетаФактуры);
	УстановитьЗаголовокФормы(ЭтотОбъект, ПредставлениеДокумента);
	
	ЗаполнитьСписокКодовОпераций();
	
	ИСОНаАванс =
		(ЭтотОбъект.Объект.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыПолученного.НаАванс")
		ИЛИ ЭтотОбъект.Объект.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента"))
		И НЕ ЭтотОбъект.ВидДоговораКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом");
	
	УправлениеФормой(ЭтотОбъект);
	
	НадписьСтароеЗначение = НСтр("ru='Старое значение'");
	НадписьНовоеЗначение  = НСтр("ru='Новое значение'");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеИсправляемогоСчетаФактуры()
	
	РеквизитыСФ = УчетНДСВызовСервера.РеквизитыДляНадписиОСчетеФактуреПолученном(Объект.ИсправляемыйСчетФактура);
	
	ПредставлениеИсправляемогоСчетаФактуры = НСтр("ru='Счет-фактура'") + " " + РеквизитыСФ.КраткоеПредставление;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтотОбъект);
	
	ОтражатьСуммыВЖурнале = Объект.Дата >= '20150101' 
		И (ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугДляКомитентов")
		ИЛИ ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов"));
		
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ВидДоговораКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента, "ВидДоговора");
	Иначе
		ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	ВерсияКодовВидовОпераций   = УчетНДСКлиентСервер.ВерсияКодовВидовОпераций(Объект.Дата);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормы(ЭтотОбъект, ПредставлениеДокумента)
	
	ЭтотОбъект.Заголовок = ПредставлениеДокумента.СчетФактураПредставление;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокКодовОпераций()
	
	УчетНДС.ЗаполнитьСписокКодовВидовОпераций(
		Перечисления.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры,
		Элементы.КодВидаОперации.СписокВыбора,
		Объект.Дата);
		
	Если ВерсияКодовВидовОпераций > 1 Тогда 
		УчетНДС.ЗаполнитьСписокКодовВидовОпераций(
			Перечисления.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры,
			Элементы.КодВидаОперацииНаУменьшение.СписокВыбора,
			Объект.Дата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(ЭтотОбъект)
	
	Элементы = ЭтотОбъект.Элементы;
	Объект   = ЭтотОбъект.Объект;
	
	// Представление ссылки "Документы-основания"
	КоличествоОснований = Объект.ДокументыОснования.Количество();
	
	НадписьВыбор = НСтр("ru = 'Выбор'");
	
	Если КоличествоОснований = 0 Тогда
		ЭтотОбъект.НадписьВыбор = НадписьВыбор;
	ИначеЕсли КоличествоОснований > 1 Тогда
		
		Предмет = "документ,документа,документов,м,,,,0";
		ЭтотОбъект.НадписьДокументыОснования = ОбщегоНазначенияБПКлиентСервер.ПредставлениеСсылкиПредмета(
			Предмет, "док", Объект.ДокументыОснования[0].ДокументОснование, КоличествоОснований);
		
	КонецЕсли;
	
	Элементы.ДокументОснованиеПолеВвода.Видимость = ЭтотОбъект.ИСОНаАванс;
	Элементы.НадписьВыбор.Видимость               = Не ЭтотОбъект.ИСОНаАванс И КоличествоОснований = 0;
	Элементы.ДокументОснование.Видимость          = Не ЭтотОбъект.ИСОНаАванс И КоличествоОснований = 1;
	Элементы.НадписьДокументыОснования.Видимость  = Не ЭтотОбъект.ИСОНаАванс И КоличествоОснований > 1;
	
	// Счет-фактура полученный комиссионером от комитента-продавца
	КоличествоСчетовФактурВыданныхПокупателям = Объект.СчетаФактурыВыданныеПокупателям.Количество();
	
	Если КоличествоСчетовФактурВыданныхПокупателям = 0 Тогда
		ЭтотОбъект.НадписьСчетФактураВыбор = НадписьВыбор;
	ИначеЕсли КоличествоСчетовФактурВыданныхПокупателям > 1 Тогда
		
		Предмет = "документ,документа,документов,м,,,,0";
		ЭтотОбъект.НадписьСчетаФактурыВыданныеПокупателю = ОбщегоНазначенияБПКлиентСервер.ПредставлениеСсылкиПредмета(
			Предмет, "док", Объект.СчетаФактурыВыданныеПокупателям[0].СчетФактура, КоличествоСчетовФактурВыданныхПокупателям);
		
	КонецЕсли;
	
	Элементы.НадписьСчетФактураВыбор.Видимость                 = КоличествоСчетовФактурВыданныхПокупателям = 0;
	Элементы.ГруппаОдинСчетФактураВыданныйПокупателю.Видимость = КоличествоСчетовФактурВыданныхПокупателям = 1;
	Элементы.НадписьСчетаФактурыВыданныеПокупателю.Видимость   = КоличествоСчетовФактурВыданныхПокупателям > 1;
	
	// Счет-фактура полученный покупателем-комитентом от комиссионера
	КоличествоПродавцов = Объект.Продавцы.Количество();
	
	Если КоличествоПродавцов = 0 Тогда
		ЭтотОбъект.НадписьНесколькоПродавцовВыбор = НадписьВыбор;
	ИначеЕсли КоличествоПродавцов > 1 Тогда
		
		Предмет = "продавец,продавца,продавцов,м,,,,0";
		ЭтотОбъект.НадписьНесколькоПродавцовСсылка = ОбщегоНазначенияБПКлиентСервер.ПредставлениеСсылкиПредмета(
			Предмет, "прод", Объект.Продавцы[0].Продавец, КоличествоПродавцов);
		
	КонецЕсли;
	
	Элементы.НадписьНесколькоПродавцовВыбор.Видимость  = КоличествоПродавцов = 0;
	Элементы.ГруппаОдинПродавец.Видимость              = КоличествоПродавцов = 1;
	Элементы.НадписьНесколькоПродавцовСсылка.Видимость = КоличествоПродавцов > 1;
	
	УстановитьВидимостьРеквизитовСчетаФактуры(ЭтотОбъект);
	
	Элементы.СтраницаСтандартныеИтоги.Видимость = Не ЭтотОбъект.ИСОНаАванс;
	Элементы.НадписьИтогиГиперссылкой.Видимость = ЭтотОбъект.ИСОНаАванс;
	Элементы.ГруппаЕстьКомиссия.Видимость       = ЭтотОбъект.ОтражатьСуммыВЖурнале;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьРеквизитовСчетаФактуры(ЭтотОбъект)
	
	Элементы = ЭтотОбъект.Элементы;
	ИсправлениеСчетФактуры = ЭтотОбъект.Объект.Исправление;
	ЭтоЮрЛицо = СтрДлина(СокрЛП(ЭтотОбъект.Объект.ИННКонтрагентаДоИзменения)) = 10;
	
	Элементы.ГруппаНомерИсправления.Видимость = ИсправлениеСчетФактуры;
	Элементы.ГруппаДатаИсправления.Видимость  = ИсправлениеСчетФактуры;
	
	Элементы.ГруппаВходящийНомер.Видимость = Не ИсправлениеСчетФактуры;
	Элементы.ГруппаДата.Видимость          = Не ИсправлениеСчетФактуры;
	
	Элементы.ГруппаКППКонтрагента.Видимость = ЭтоЮрЛицо;
	
	Элементы.ГруппаКодВидаОперацииНаУменьшение.Видимость =
		ЭтотОбъект.Объект.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыПолученного.Корректировочный");
		
	ВидДоговораКонтрагента = ЭтотОбъект.ВидДоговораКонтрагента;
	
	ЭтоДоговорСКомитентом =
		ВидДоговораКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом");
	Элементы.ГруппаСчетаФактурыВыданныеПокупателям.Видимость = ЭтоДоговорСКомитентом;
	
	ЭтоДоговорСКомиссионеромНаЗакупку =
		ВидДоговораКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку");
	Элементы.ГруппаНесколькоПродавцов.Видимость = ЭтоДоговорСКомиссионеромНаЗакупку;
	Элементы.НадписьПлатежныеДокументы.Видимость = ЭтоДоговорСКомиссионеромНаЗакупку И ЭтотОбъект.ИСОНаАванс;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеСсылкиИтоги(ЭтотОбъект)
	
	Объект = ЭтотОбъект.Объект;
	
	Если ЭтотОбъект.ОтражатьСуммыВЖурнале Тогда
		ТекстСсылки = НСтр("ru='%1 %2, НДС (в т. ч.): %3, из них в журнале: %4 %5, НДС (в т. ч.): %6'");
		ТекстСсылки = СтрШаблон(ТекстСсылки,
			Формат(Объект.СуммаДокумента, "ЧДЦ=2; ЧН=0,00"),
			Объект.ВалютаДокумента,
			Формат(Объект.СуммаНДСДокумента, "ЧДЦ=2; ЧН=0,00"),
			Формат(Объект.СуммаДокументаКомиссия, "ЧДЦ=2; ЧН=0,00"),
			Объект.ВалютаДокумента,
			Формат(Объект.СуммаНДСДокументаКомиссия, "ЧДЦ=2; ЧН=0,00"));
	Иначе
		ТекстСсылки = НСтр("ru='%1 %2, НДС (в т. ч.): %3'");
		ТекстСсылки = СтрШаблон(ТекстСсылки,
			Формат(Объект.СуммаДокумента, "ЧДЦ=2; ЧН=0,00"),
			Объект.ВалютаДокумента,
			Формат(Объект.СуммаНДСДокумента, "ЧДЦ=2; ЧН=0,00"));
		
	КонецЕсли;
	
	ЭтотОбъект.НадписьИтогиГиперссылкой = ТекстСсылки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзСпискаЗавершение(ВыбранныйКод, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйКод <> Неопределено Тогда
		Модифицированность = Истина;
		Если ДополнительныеПараметры.Уменьшение Тогда
			Объект.КодВидаОперацииНаУменьшение = ВыбранныйКод.Значение;
		Иначе
			Объект.КодВидаОперации = ВыбранныйКод.Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ВыборПродавцов

&НаКлиенте
Процедура ВыбратьПродавцов()
	
	АдресХранилищаПродавцов = ПоместитьТаблицуВоВременноеХранилище(Объект.Продавцы, УникальныйИдентификатор);
	
	Если НЕ ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоПросмотр"                 , ТолькоПросмотр);
	ПараметрыФормы.Вставить("АдресХранилищаПродавцов"        , АдресХранилищаПродавцов);
	ПараметрыФормы.Вставить("ЭтоИсправлениеСобственнойОшибки", Истина);
	
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма.ФормаПродавцы",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПродавцовНаСервере(ВыбранноеЗначение)
	
	ТаблицаПродавцов = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресХранилищаПродавцов);
	
	Объект.Продавцы.Загрузить(ТаблицаПродавцов);
	
	КоличествоПродавцов = Объект.Продавцы.Количество();
	Если КоличествоПродавцов > 0 Тогда
		Объект.Продавец = Объект.Продавцы[0].Продавец;
	Иначе
		Объект.Продавец = Документы.СчетФактураВыданный.ПустаяСсылка();
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоместитьТаблицуВоВременноеХранилище(Знач Таблица, УИДФормы)
	
	Возврат ПоместитьВоВременноеХранилище(Таблица.Выгрузить(), УИДФормы);
	
КонецФункции

#КонецОбласти

#Область ВыборДокументаОснования

&НаКлиенте
Процедура ВыбратьОснование()
	
	ЕстьОшибкиЗаполнения = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда 
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Организация'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Организация", "Объект" , ЕстьОшибкиЗаполнения);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда 
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Контрагент'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Контрагент", "Объект" , ЕстьОшибкиЗаполнения);
	КонецЕсли;
	
	Если ЕстьОшибкиЗаполнения Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = ПараметровФормыДляПодбораОснования();
	
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма.ФормаДокументыОснования",
		ПараметрыФормы,
		ЭтотОбъект,
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Функция ПараметровФормыДляПодбораОснования()
	
	СтруктураПараметров = Новый Структура();
	ЗначенияЗаполнения  = Новый Структура();
	ЗначениеОтбора      = Новый Структура();
	
	Если Объект.ДокументыОснования.Количество() > 0 Тогда 
		ЗначенияЗаполнения.Вставить("СписокДокументовОснований", Новый СписокЗначений);
		Для Каждого СтрокаТаблицы Из Объект.ДокументыОснования Цикл
			ЗначенияЗаполнения.СписокДокументовОснований.Добавить(СтрокаТаблицы.ДокументОснование)
		КонецЦикла;
	КонецЕсли;
	
	ЗначенияЗаполнения.Вставить("ТипСчетаФактуры",              "Полученный");
	ЗначенияЗаполнения.Вставить("ВидСчетаФактуры",              Объект.ВидСчетаФактуры);
	ЗначенияЗаполнения.Вставить("Исправление",                  Истина);
	ЗначенияЗаполнения.Вставить("ИсправлениеСобственнойОшибки", Истина);
	ЗначенияЗаполнения.Вставить("СчетФактура",                  Объект.Ссылка);
	
	ЗначениеОтбора.Вставить("Организация", Объект.Организация);
	ЗначениеОтбора.Вставить("Контрагент",  Объект.Контрагент);
	ЗначениеОтбора.Вставить("Договор",     Объект.ДоговорКонтрагента);
	ЗначениеОтбора.Вставить("Валюта",      Объект.ВалютаДокумента);
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения); 
	СтруктураПараметров.Вставить("Отбор", ЗначениеОтбора);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	Объект.ДокументыОснования.Очистить();
	Для Каждого СтрокаСписка Из ВыбранноеЗначение Цикл
		Если СтрокаСписка.Значение.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы = Объект.ДокументыОснования.Добавить();
		СтрокаТаблицы.ДокументОснование = СтрокаСписка.Значение;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВыборСчетовФактурВыданных

&НаКлиенте
Процедура ВыбратьСчетаФактурыВыданныеПокупателям()
	
	ЕстьОшибкиЗаполнения = Ложь;
	
	Если Не Объект.Исправление Тогда 
		Если НЕ ЗначениеЗаполнено(Объект.ДатаВходящегоДокумента) Тогда 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Дата счета-фактуры'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаВходящегоДокумента", "Объект" , ЕстьОшибкиЗаполнения);
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.ДатаИсправления) Тогда 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Дата исправления счета-фактуры'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаИсправления", "Объект" , ЕстьОшибкиЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьОшибкиЗаполнения Тогда
		Возврат;
	КонецЕсли;
	
	АдресХранилищаСчетаФактурыВыданныеПокупателям = ПоместитьТаблицуВоВременноеХранилище(
		Объект.СчетаФактурыВыданныеПокупателям,
		УникальныйИдентификатор);
	
	Если НЕ ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоПросмотр"                               , ТолькоПросмотр);
	ПараметрыФормы.Вставить("АдресХранилищаСчетаФактурыВыданныеПокупателям", АдресХранилищаСчетаФактурыВыданныеПокупателям);
	
	ПараметрыФормы.Вставить("Организация"                 , Объект.Организация);
	ПараметрыФормы.Вставить("ДокументОснование"           , Объект.ДокументОснование);
	ПараметрыФормы.Вставить("ДатаВходящегоДокумента"      , ?(Объект.Исправление, Объект.ДатаИсправления, Объект.ДатаВходящегоДокумента));
	ПараметрыФормы.Вставить("ВидСчетаФактуры"             , Объект.ВидСчетаФактуры);
	ПараметрыФормы.Вставить("Комитент"                    , Объект.Контрагент);
	ПараметрыФормы.Вставить("Исправление"                 , Объект.Исправление);
	ПараметрыФормы.Вставить("ИсправлениеСобственнойОшибки", Объект.ИсправлениеСобственнойОшибки);
	ПараметрыФормы.Вставить("ИсправляемыйСчетФактура"     , Объект.ИсправляемыйСчетФактура);
	ПараметрыФормы.Вставить("Дата"                        , Объект.Дата);
	
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма.ФормаСчетаФактурыВыданныеПокупателям",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораСчетаФактурыВыданныеПокупателямНаСервере(ВыбранноеЗначение)
	
	ТаблицаСчетаФактурыВыданныеПокупателям = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресХранилищаСчетаФактурыВыданныеПокупателям);
	
	Объект.СчетаФактурыВыданныеПокупателям.Загрузить(ТаблицаСчетаФактурыВыданныеПокупателям);
	
	КоличествоСФВыданныхПокупателю = Объект.СчетаФактурыВыданныеПокупателям.Количество();
	Если КоличествоСФВыданныхПокупателю > 0 Тогда
		Объект.СчетФактураВыданныйПокупателю = Объект.СчетаФактурыВыданныеПокупателям[0].СчетФактура;
	Иначе
		Объект.СчетФактураВыданныйПокупателю = Документы.СчетФактураВыданный.ПустаяСсылка();
	КонецЕсли;
	
	Объект.СуммаДокумента            = Объект.СчетаФактурыВыданныеПокупателям.Итог("Сумма");
	Объект.СуммаДокументаКомиссия    = Объект.СчетаФактурыВыданныеПокупателям.Итог("Сумма");
	Объект.СуммаНДСДокумента         = Объект.СчетаФактурыВыданныеПокупателям.Итог("НДС");
	Объект.СуммаНДСДокументаКомиссия = Объект.СчетаФактурыВыданныеПокупателям.Итог("НДС");
	
	Если Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный
		И Объект.ДокументыОснования.Количество()> 0 Тогда 
		
		Объект.ДокументыОснования[0].СуммаУвеличение = Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаУвеличение");
		Объект.ДокументыОснования[0].СуммаНДСУвеличение= Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаНДСУвеличение");
		Объект.ДокументыОснования[0].СуммаУменьшение = Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаУменьшение");
		Объект.ДокументыОснования[0].СуммаНДСУменьшение= Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаНДСУменьшение");
		
		Объект.СуммаУвеличениеКомиссия = Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаУвеличение");
		Объект.СуммаНДСУвеличениеКомиссия = Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаНДСУвеличение");
		Объект.СуммаУменьшениеКомиссия = Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаУменьшение");
		Объект.СуммаНДСУменьшениеКомиссия = Объект.СчетаФактурыВыданныеПокупателям.Итог("СуммаНДСУменьшение");
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ВыборПлатежныхДокументов

&НаКлиенте
Процедура ВыбратьПлатежныеДокументы()
	
	АдресХранилищаПлатежныеДокументы = ПоместитьТаблицуВоВременноеХранилище(
		Объект.ПлатежноРасчетныеДокументы,
		УникальныйИдентификатор);
	
	Если НЕ ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("АдресХранилищаПлатежныеДокументы", АдресХранилищаПлатежныеДокументы);
	
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма.ФормаПлатежныеДокументы",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПлатежныхДокументовНаСервере(ВыбранноеЗначение)
	
	ТаблицаПлатежныеДокументы = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресХранилищаПлатежныеДокументы);
	
	Объект.ПлатежноРасчетныеДокументы.Загрузить(ТаблицаПлатежныеДокументы);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти 

#Область РасшифровкаАвансаПоСтавкам

&НаКлиенте
Процедура РедактироватьАвансы()
	
	АдресХранилищаАвансов = ПоместитьТаблицуВоВременноеХранилище(Объект.Авансы, УникальныйИдентификатор);
	
	Если НЕ ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	ПараметрыФормы.Вставить("АдресХранилища", АдресХранилищаАвансов);
	
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма.ФормаРасшифровкаАвансов",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораАвансовНаСервере(ВыбранноеЗначение)
	
	ТаблицаАвансов = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресХранилища);
	
	Объект.Авансы.Загрузить(ТаблицаАвансов);
	
	Объект.СуммаДокумента    = Объект.Авансы.Итог("Сумма");
	Объект.СуммаНДСДокумента = Объект.Авансы.Итог("СуммаНДС");
	
	Если Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента
		И НЕ ЭтотОбъект.ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		Объект.СуммаДокументаКомиссия    = Объект.СуммаДокумента;
		Объект.СуммаНДСДокументаКомиссия = Объект.СуммаНДСДокумента;
	КонецЕсли;
	
	УстановитьПредставлениеСсылкиИтоги(ЭтотОбъект);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция РежимЗаписи(Знач ДокументыОснования)
	
	Проводить = Истина;
	
	Для Каждого СтрокаТЧ Из ДокументыОснования Цикл
		Если СтрокаТЧ.ДокументОснование <> Неопределено
			И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ДокументОснование, "Проведен") Тогда
			Проводить = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Проводить Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	КонецЕсли;
	
	Возврат РежимЗаписи;
	
КонецФункции

#КонецОбласти

