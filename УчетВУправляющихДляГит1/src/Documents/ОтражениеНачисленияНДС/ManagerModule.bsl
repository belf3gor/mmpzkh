#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 20, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	
Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ОтражениеНачисленияНДСТоварыИУслуги.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ОтражениеНачисленияНДСТоварыИУслуги.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС.ТоварыИУслуги КАК ОтражениеНачисленияНДСТоварыИУслуги
	|ГДЕ
	|	ОтражениеНачисленияНДСТоварыИУслуги.Ссылка = &Ссылка
	|	И ОтражениеНачисленияНДСТоварыИУслуги.Номенклатура ССЫЛКА Справочник.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
КонецПроцедуры

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВременнаяТаблицаНаличиеТоваров",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",         НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НаличиеТоваров
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС.ТоварыИУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И (ТаблицаТовары.ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВнутреннееПотребление), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ИмуществоСУчетомНДС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Материалы), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Оборудование), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|			ИЛИ НЕ ТаблицаТовары.Номенклатура.Услуга)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель.ОбособленноеПодразделение
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО КАК Исполнитель,
	|	НЕОПРЕДЕЛЕНО КАК ИсполнительНаОсновании,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ВЫБОР
	|		КОГДА НаличиеТоваров.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеТоваров КАК НаличиеТоваров
	|		ПО Реквизиты.Ссылка = НаличиеТоваров.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаТовары.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТовары.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	ЕСТЬNULL(СправочникНоменклатура.ПериодичностьУслуги, НЕОПРЕДЕЛЕНО) КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС.ТоварыИУслуги КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыИУслуги))
	|			И (ТаблицаТовары.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование";
	
	// Заменим обращение к реквизитам договора через переопределяемые функции.
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"ТаблицаТовары.Номенклатура.Услуга",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаЭтоУслуга("ТаблицаТовары.Номенклатура"));
								
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	
КонецФункции	

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтражениеНачисленияНДСТоварыИУслуги.Ссылка КАК Ссылка,
	|	ОтражениеНачисленияНДСТоварыИУслуги.НомерСтроки КАК НомерСтроки,
	|	ОтражениеНачисленияНДСТоварыИУслуги.Номенклатура КАК Товар,
	|	ОтражениеНачисленияНДСТоварыИУслуги.Номенклатура.Наименование КАК ТоварНаименование,
	|	ОтражениеНачисленияНДСТоварыИУслуги.Сумма КАК ВсегоВал,
	|	ОтражениеНачисленияНДСТоварыИУслуги.СуммаНДС КАК НДСВал,
	|	ОтражениеНачисленияНДСТоварыИУслуги.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС.ТоварыИУслуги КАК ОтражениеНачисленияНДСТоварыИУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОтражениеНачисленияНДСТоварыИУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОтражениеНачисленияНДСТоварыИУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|ГДЕ
	|	ОтражениеНачисленияНДСТоварыИУслуги.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

#КонецОбласти 

#Область Проведение

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт 
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, Ссылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
       
	НомераТаблиц = Новый Структура();
	   	
	Запрос.Текст = ТекстЗапросаРеквизиты(НомераТаблиц)
		+ ТекстЗапросаРеализацияНДС(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	ТоварыУслуги = ПодготовитьТаблицуНДСНачисленный( 
		ПараметрыПроведения.ТоварыИУслуги, ПараметрыПроведения.ДокументыОплаты, 
		ПараметрыПроведения.ТаблицаРеквизиты);
	
	ПараметрыПроведения.Вставить("ТоварыУслуги", ТоварыУслуги);
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизиты(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент КАК Покупатель,
	|	ВЫБОР
	|		КОГДА Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру
	|				И Реквизиты.РасчетныйДокумент ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫРАЗИТЬ(Реквизиты.РасчетныйДокумент КАК Документ.СчетФактураПолученный).ДоговорКонтрагента
	|		ИНАЧЕ Реквизиты.ДоговорКонтрагента
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.ДатаОплаты,
	|	Реквизиты.СуммаДокумента,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.РасчетныйДокумент,
	|	Реквизиты.ЗаписьДополнительногоЛиста,
	|	Реквизиты.КорректируемыйПериод,
	|	Реквизиты.ПрямаяЗаписьВКнигу,
	|	Реквизиты.ФормироватьПроводки,
	|	Реквизиты.ФормироватьСторнирующиеЗаписиДопЛистовВручную,
	|	ВЫБОР
	|		КОГДА Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.РасчетныйДокумент ССЫЛКА Документ.СчетФактураПолученный
	|							И ВЫРАЗИТЬ(Реквизиты.РасчетныйДокумент КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|						ТОГДА ВЫРАЗИТЬ(Реквизиты.РасчетныйДокумент КАК Документ.СчетФактураПолученный).ДокументОснование
	|					ИНАЧЕ Реквизиты.РасчетныйДокумент
	|				КОНЕЦ
	|		ИНАЧЕ Реквизиты.Ссылка
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.РасчетныйДокумент ССЫЛКА Документ.СчетФактураПолученный
	|							И ВЫРАЗИТЬ(Реквизиты.РасчетныйДокумент КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|							И ВЫРАЗИТЬ(Реквизиты.РасчетныйДокумент КАК Документ.СчетФактураПолученный).Исправление
	|						ТОГДА Реквизиты.РасчетныйДокумент
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	Реквизиты.Дата КАК ДатаСобытия,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	// Заменим обращение к реквизитам договора через переопределяемые функции.
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаРеализацияНДС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТоварыИУслуги",   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ДокументыОплаты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""ТоварыИУслуги"" КАК ИмяСписка,
	|	ТаблицаТоварыИУслуги.Ссылка,
	|	ТаблицаТоварыИУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоварыИУслуги.Количество,
	|	ТаблицаТоварыИУслуги.Номенклатура,
	|	ТаблицаТоварыИУслуги.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТаблицаТоварыИУслуги.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|		ИНАЧЕ ТаблицаТоварыИУслуги.Событие
	|	КОНЕЦ КАК Событие,
	|	ТаблицаТоварыИУслуги.СтавкаНДС,
	|	ТаблицаТоварыИУслуги.СтранаПроисхождения,
	|	ТаблицаТоварыИУслуги.Субконто,
	|	ТаблицаТоварыИУслуги.Сумма,
	|	ТаблицаТоварыИУслуги.СуммаНДС КАК НДС,
	|	ТаблицаТоварыИУслуги.СчетДоходов,
	|	ТаблицаТоварыИУслуги.СчетУчета,
	|	ТаблицаТоварыИУслуги.СчетУчетаНДСПоРеализации,
	|	ТаблицаТоварыИУслуги.Цена,
	|	ТаблицаТоварыИУслуги.СторнирующаяЗаписьДопЛиста,
	|	ТаблицаТоварыИУслуги.ВидЦенности КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА ТаблицаТоварыИУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.РеализацияБезНДС)
	|		КОГДА ТаблицаТоварыИУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.Реализация0)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.РеализацияСНДС)
	|	КОНЕЦ КАК ВидНачисления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаТоварыИУслуги.Ссылка.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ТаблицаТоварыИУслуги.Ссылка.КодВидаОперации
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС.ТоварыИУслуги КАК ТаблицаТоварыИУслуги
	|ГДЕ
	|	ТаблицаТоварыИУслуги.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ДокументыОплаты"" КАК ИмяСписка,
	|	ДокументыОплаты.Ссылка,
	|	ДокументыОплаты.НомерСтроки КАК НомерСтроки,
	|	ДокументыОплаты.ДатаОплаты,
	|	ДокументыОплаты.ДокументОплаты,
	|	ДокументыОплаты.Ссылка.Организация,
	|	ДокументыОплаты.Ссылка.Контрагент КАК Покупатель,
	|	ДокументыОплаты.Ссылка.ЗаписьДополнительногоЛиста,
	|	ДокументыОплаты.Ссылка.КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	ДокументыОплаты.Ссылка КАК СчетФактура,
	|	0 КАК НДС
	|ИЗ
	|	Документ.ОтражениеНачисленияНДС.ДокументыОплаты КАК ДокументыОплаты
	|ГДЕ
	|	ДокументыОплаты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПодготовитьТаблицуНДСНачисленный(ТаблицаТоварыИУслуги, ТаблицаДокументыОплаты, ТаблицаРеквизиты)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Реквизиты = ТаблицаРеквизиты[0];
	
	ТаблицаСобственныеТоварыУслуги = ТаблицаТоварыИУслуги.Скопировать();
	
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("Период");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("Организация");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("Покупатель");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("ДоговорКонтрагента",         БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьОписаниеТиповДоговора());
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СчетФактура",                Документы.ТипВсеСсылки());
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("ИсправленныйСчетФактура",    Документы.ТипВсеСсылки());
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("ЗаписьДополнительногоЛиста", Новый ОписаниеТипов("Булево"));
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("КорректируемыйПериод",       ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СуммаБезНДС");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СуммаБУ");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СуммаРуб");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СуммаНДСРуб");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СуммаБезНДСРуб");
	
	ВидыЦенностиСДоговором = Перечисления.ВидыЦенностей.МассивВидовЦенностейУчитывающихсяПоДоговорам();
	
	Для Каждого СтрокаТаблицы Из ТаблицаСобственныеТоварыУслуги Цикл
		
		СтрокаТаблицы.Организация = Реквизиты.Организация;
		СтрокаТаблицы.Покупатель = Реквизиты.Покупатель;
		Если ВидыЦенностиСДоговором.Найти(СтрокаТаблицы.ВидЦенности) <> Неопределено Тогда
			СтрокаТаблицы.ДоговорКонтрагента = Реквизиты.ДоговорКонтрагента;
		КонецЕсли;
		СтрокаТаблицы.СчетФактура = Реквизиты.СчетФактура;
		СтрокаТаблицы.ИсправленныйСчетФактура = Реквизиты.ИсправленныйСчетФактура;
		СтрокаТаблицы.ЗаписьДополнительногоЛиста = Реквизиты.ЗаписьДополнительногоЛиста;
		Если Реквизиты.ЗаписьДополнительногоЛиста Тогда
			СтрокаТаблицы.КорректируемыйПериод = Реквизиты.КорректируемыйПериод;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Событие) Тогда
			СтрокаТаблицы.Событие = Перечисления.СобытияПоНДСПродажи.Реализация;
		КонецЕсли;
		
		Если Реквизиты.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
			
			СтрокаТаблицы.Сумма = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Сумма, 
			Реквизиты.ВалютаДокумента, ВалютаРегламентированногоУчета,
			Реквизиты.КурсВзаиморасчетов, 1,
			Реквизиты.КратностьВзаиморасчетов, 1);
			
			СтрокаТаблицы.НДС = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.НДС, 
			Реквизиты.ВалютаДокумента, ВалютаРегламентированногоУчета,
			Реквизиты.КурсВзаиморасчетов, 1,
			Реквизиты.КратностьВзаиморасчетов, 1);
			
		КонецЕсли;
		
		СтрокаТаблицы.СуммаБезНДС = СтрокаТаблицы.Сумма - ?(Реквизиты.СуммаВключаетНДС, СтрокаТаблицы.НДС, 0);
		СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДС;
		
		СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаБезНДС + СтрокаТаблицы.НДС;
		СтрокаТаблицы.СуммаБУ  = СтрокаТаблицы.СуммаРуб;
		СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.НДС;
		
	КонецЦикла;
	
	Если Реквизиты.ПрямаяЗаписьВКнигу Тогда
		
		КолонкиГруппировок = "ИмяСписка,НомерСтроки,Номенклатура,СчетДоходов,СчетУчетаНДСПоРеализации,ВидНачисления,"
			+ "Период,Организация,ВидЦенности,КодВидаОперации,Покупатель,ДоговорКонтрагента,Событие,СчетФактура,ИсправленныйСчетФактура,"
			+ "СтавкаНДС,ЗаписьДополнительногоЛиста,КорректируемыйПериод,ДатаОплаты,ДокументОплаты,СчетУчета,"
			+ "Субконто"; 
			
		Если Реквизиты.ЗаписьДополнительногоЛиста И Реквизиты.ФормироватьСторнирующиеЗаписиДопЛистовВручную Тогда
			КолонкиГруппировок = КолонкиГруппировок + ",СторнирующаяЗаписьДопЛиста";
		КонецЕсли;
		
		ТаблицаСобственныеТоварыУслуги.Свернуть(
			КолонкиГруппировок, 
			"Количество,Цена,Сумма,СуммаБезНДС, СуммаБезНДСРуб, НДС, СуммаРуб, СуммаНДСРуб, СуммаБУ");
		
	КонецЕсли;
	
	ДополнитьДопЛистыСторнирующимиЗаписями(Реквизиты, ТаблицаСобственныеТоварыУслуги);
	
	// Добавить документы оплаты
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаДокументыОплаты, ТаблицаСобственныеТоварыУслуги);
	
	// Реквизиты необходимые для проведения по механизмам документа <Реализация (акт, накладная)>
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СуммаВзаиморасчетов");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("Содержание");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("Контрагент");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("ВалютаВзаиморасчетов");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("Подразделение");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("ДатаСобытия");
	ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("Регистратор");
	
	ТаблицаСобственныеТоварыУслуги.ЗаполнитьЗначения(Реквизиты.Покупатель, "Контрагент");
	ТаблицаСобственныеТоварыУслуги.ЗаполнитьЗначения(Реквизиты.ВалютаВзаиморасчетов, "ВалютаВзаиморасчетов");
	ТаблицаСобственныеТоварыУслуги.ЗаполнитьЗначения(Реквизиты.Подразделение, "Подразделение");
	ТаблицаСобственныеТоварыУслуги.ЗаполнитьЗначения(0, "СуммаВзаиморасчетов");
	
	ТаблицаСобственныеТоварыУслуги.ЗаполнитьЗначения(Реквизиты.Период, "ДатаСобытия");
	ТаблицаСобственныеТоварыУслуги.ЗаполнитьЗначения(Реквизиты.Период, "Период");
	ТаблицаСобственныеТоварыУслуги.ЗаполнитьЗначения(Реквизиты.Регистратор, "Регистратор");
	
	Возврат ТаблицаСобственныеТоварыУслуги;
	
КонецФункции

Процедура ДополнитьДопЛистыСторнирующимиЗаписями(Реквизиты, ТаблицаСобственныеТоварыУслуги)
	
	Если Реквизиты.ФормироватьСторнирующиеЗаписиДопЛистовВручную Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаСобственныеТоварыУслуги.Колонки.Найти("СторнирующаяЗаписьДопЛиста") = Неопределено Тогда
		ТаблицаСобственныеТоварыУслуги.Колонки.Добавить("СторнирующаяЗаписьДопЛиста", Новый ОписаниеТипов("Булево"));
	КонецЕсли; 
	
	СвернутаяТаблицаЗаписейДопЛиста = ТаблицаСобственныеТоварыУслуги.Скопировать();
	Для Каждого ТекущаяСтрока Из СвернутаяТаблицаЗаписейДопЛиста Цикл
		
		Если (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.АвансыПолученные)
			И (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.АвансыПолученные0)
			И (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.ВозвратАвансовПолученных) Тогда
			ТекущаяСтрока.СтавкаНДС = Неопределено;
		КонецЕсли; 
		// Авансы и налоговый агент (комитент) отрабатываются с учетом договора (на каждый
		// договор отдельный счет-фактура или отдельный лист декларации)
		Если (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.АвансыПолученные)
			И (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.АвансыПолученные0)
			И (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.ВозвратАвансовПолученных)
			И (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.АвансыВыданные)
			И (ТекущаяСтрока.ВидЦенности <> Перечисления.ВидыЦенностей.НалоговыйАгентКомитент) Тогда
			ТекущаяСтрока.ДоговорКонтрагента = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	КолонкиГруппировок = "ИмяСписка,НомерСтроки,Номенклатура,СчетДоходов,СчетУчетаНДСПоРеализации,ВидНачисления,"
		+ "СчетФактура,ИсправленныйСчетФактура,СтавкаНДС,ДоговорКонтрагента,ЗаписьДополнительногоЛиста,КорректируемыйПериод";
	СвернутаяТаблицаЗаписейДопЛиста.Свернуть(КолонкиГруппировок, "СуммаБезНДС, СуммаБезНДСРуб, НДС");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СвернутаяТаблицаЗаписейДопЛиста", СвернутаяТаблицаЗаписейДопЛиста);
	Запрос.УстановитьПараметр("КонецПериодаГраница",             Новый Граница(Реквизиты.Период, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("РеквизитыПериод",                 Реквизиты.Период);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвернутаяТаблицаЗаписейДопЛиста.СчетФактура КАК СчетФактура,
	|	СвернутаяТаблицаЗаписейДопЛиста.СтавкаНДС КАК СтавкаНДС,
	|	СвернутаяТаблицаЗаписейДопЛиста.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СвернутаяТаблицаЗаписейДопЛиста.КорректируемыйПериод КАК КорректируемыйПериод,
	|	НАЧАЛОПЕРИОДА(СвернутаяТаблицаЗаписейДопЛиста.КорректируемыйПериод, КВАРТАЛ) КАК НачалоНалоговогоПериодаКорректировки
	|ПОМЕСТИТЬ СтрокиДопЛистов
	|ИЗ
	|	&СвернутаяТаблицаЗаписейДопЛиста КАК СвернутаяТаблицаЗаписейДопЛиста
	|ГДЕ
	|	СвернутаяТаблицаЗаписейДопЛиста.ЗаписьДополнительногоЛиста = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	СтавкаНДС,
	|	ДоговорКонтрагента,
	|	НачалоНалоговогоПериодаКорректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Организация,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.ДатаОплаты,
	|	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот * -1 КАК СуммаБезНДС,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот * -1 КАК НДС,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.Период КАК Период,
	|	НДСЗаписиКнигиПродажОбороты.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод КАК КорректируемыйПериод
	|ПОМЕСТИТЬ ЗаписиКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			КВАРТАЛ,
	|			СчетФактура В
	|				(ВЫБРАТЬ
	|					СтрокиДопЛистов.СчетФактура
	|				ИЗ
	|					СтрокиДопЛистов)) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Период,
	|	ЗаписьДополнительногоЛиста,
	|	КорректируемыйПериод,
	|	ДоговорКонтрагента,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиКнигиПродаж.Организация,
	|	ЗаписиКнигиПродаж.Покупатель,
	|	ЗаписиКнигиПродаж.СчетФактура,
	|	ЗаписиКнигиПродаж.ВидЦенности,
	|	ЗаписиКнигиПродаж.СтавкаНДС,
	|	ЗаписиКнигиПродаж.ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие,
	|	ЗаписиКнигиПродаж.СуммаБезНДС,
	|	ЗаписиКнигиПродаж.НДС,
	|	ЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	ИСТИНА КАК ЗаписьДополнительногоЛиста,
	|	ИСТИНА КАК СторнирующаяЗаписьДопЛиста,
	|	СтрокиДопЛистов.КорректируемыйПериод,
	|	&РеквизитыПериод КАК Период
	|ИЗ
	|	СтрокиДопЛистов КАК СтрокиДопЛистов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ПО СтрокиДопЛистов.СчетФактура = ЗаписиКнигиПродаж.СчетФактура
	|			И СтрокиДопЛистов.НачалоНалоговогоПериодаКорректировки <= ЗаписиКнигиПродаж.Период
	|			И (НЕ ЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|					И ЗаписиКнигиПродаж.Период = СтрокиДопЛистов.НачалоНалоговогоПериодаКорректировки
	|				ИЛИ ЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|					И (ЗаписиКнигиПродаж.КорректируемыйПериод МЕЖДУ СтрокиДопЛистов.НачалоНалоговогоПериодаКорректировки И КОНЕЦПЕРИОДА(СтрокиДопЛистов.НачалоНалоговогоПериодаКорректировки, КВАРТАЛ)))
	|			И (ВЫБОР
	|				КОГДА СтрокиДопЛистов.ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ СтрокиДопЛистов.ДоговорКонтрагента = ЗаписиКнигиПродаж.ДоговорКонтрагента
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА СтрокиДопЛистов.СтавкаНДС = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ СтрокиДопЛистов.СтавкаНДС = ЗаписиКнигиПродаж.СтавкаНДС
	|			КОНЕЦ)";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ТаблицаЗаписей = Результат.Выгрузить();
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаЗаписей, ТаблицаСобственныеТоварыУслуги);
	КонецЕсли;

КонецПроцедуры

#Область ФормированиеДвижений

Процедура СформироватьДвиженияОтражениеНачисленияНДС(ТаблицаТоварыИУслуги, ТаблицаДокументыОплаты, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Реквизиты = ТаблицаРеквизиты[0];
	УпрощенныйУчетНДС = УчетнаяПолитика.УпрощенныйУчетНДС(Реквизиты.Организация, Реквизиты.Период);
		
	Если Реквизиты.ПрямаяЗаписьВКнигу Тогда
		
		Если Реквизиты.ФормироватьПроводки Тогда
			СформироватьПроводкиНачислениеНДС(ТаблицаТоварыИУслуги, Реквизиты, Движения, Отказ);
		КонецЕсли;
		
		СформироватьДвиженияНДСЗаписиКнигиПродаж(ТаблицаТоварыИУслуги, Реквизиты, Движения, Отказ);
		
	Иначе
		
		Если НЕ УпрощенныйУчетНДС Тогда
			СформироватьДвиженияНДСНачисленный(ТаблицаТоварыИУслуги, Реквизиты, Движения, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияНДСЗаписиКнигиПродаж(ТаблицаТоварыИУслуги, Реквизиты, Движения, Отказ)
	
	Для каждого СтрокаНачисления Из ТаблицаТоварыИУслуги Цикл

		Движение = Движения.НДСЗаписиКнигиПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Реквизиты);
		ЗаполнитьЗначенияСвойств(Движение, СтрокаНачисления);

	КонецЦикла;

	Движения.НДСЗаписиКнигиПродаж.Записывать = Истина;
	
	
КонецПроцедуры

Процедура СформироватьПроводкиНачислениеНДС(ТоварыУслуги, Реквизиты, Движения, Отказ)

	Если ТоварыУслуги.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	//Проводки по начислению НДС от реализации:
	// Дт <СчетУчетаНДСПоРеализации> Кт 68.02

	ТаблицаВыручки = ТоварыУслуги.Скопировать(,
		"Контрагент,Номенклатура,Содержание,СчетУчетаНДСПоРеализации,СтавкаНДС,Субконто,Подразделение,СуммаНДСРуб, СчетФактура");

	// Оставляем номенклатуру только для проводок по 91 счету
	ВидСубконтоРеализуемыеАктивы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы;
	Для каждого СтрокаТаблицы Из ТаблицаВыручки Цикл
		
		Если СтрокаТаблицы.СчетУчетаНДСПоРеализации = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		          		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаТаблицы.СчетУчетаНДСПоРеализации);
		Если СвойстваСчета.ВидСубконто1 <> ВидСубконтоРеализуемыеАктивы
			И СвойстваСчета.ВидСубконто2 <> ВидСубконтоРеализуемыеАктивы
			И СвойстваСчета.ВидСубконто3 <> ВидСубконтоРеализуемыеАктивы Тогда
			СтрокаТаблицы.Номенклатура = Неопределено;
		КонецЕсли;
	КонецЦикла;

	ТаблицаВыручки.Свернуть(
		"Контрагент,Номенклатура,Содержание,СчетУчетаНДСПоРеализации,СтавкаНДС,Субконто,Подразделение, СчетФактура", "СуммаНДСРуб");

	Для каждого СтрокаВыручки Из ТаблицаВыручки Цикл

		Если СтрокаВыручки.СуммаНДСРуб = 0 ИЛИ СтрокаВыручки.СчетУчетаНДСПоРеализации = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Сумма       = СтрокаВыручки.СуммаНДСРуб;
		Проводка.Содержание  = СтрокаВыручки.Содержание;

		Проводка.СчетДт = СтрокаВыручки.СчетУчетаНДСПоРеализации;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
			1, СтрокаВыручки.Субконто); // Для счетов 90.03 и 91.02
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
			"СтавкиНДС", СтрокаВыручки.СтавкаНДС); // Для счета 90.03
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
			"РеализуемыеАктивы", СтрокаВыручки.Номенклатура); // Для счета 91.02
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
			"Контрагенты", СтрокаВыручки.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
			"СФВыданные", Реквизиты.Регистратор);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
			"СФПолученные", СтрокаВыручки.СчетФактура);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаВыручки.Подразделение;
		КонецЕсли;

		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДС;
		Проводка.СубконтоКт.ВидыПлатежейВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог;

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаВыручки.Подразделение;
		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленный(ТоварыУслуги, Реквизиты, Движения, Отказ)

	Для каждого СтрокаДвижения Из ТоварыУслуги Цикл

		Если СтрокаДвижения.НДС = 0 Тогда
			Продолжить;
		КонецЕсли;
				
		Движение = Движения.НДСНачисленный.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаДвижения);
		ЗаполнитьЗначенияСвойств(Движение, Реквизиты);
		Движение.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДС; // 68.02

	КонецЦикла;

	Движения.НДСНачисленный.Записывать = Истина;

КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#КонецОбласти

#КонецЕсли