
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

	ЗачетАвансов.Очистить();

	СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
		ВалютаДокумента, Дата);

	КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
	КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	Если НЕ ЗначениеЗаполнено(СобытиеОС) Тогда
		СобытиеОС = УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ПереходПраваСобственности);
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	Если УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата) Тогда
		НДСВключенВСтоимость = Ложь;
	КонецЕсли;

	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	РаботаСДоговорамиКонтрагентовБП.ЗаполнитьДоговорПередЗаписью(ЭтотОбъект);
	
	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект);

	ПараметрыДействия = УчетНДСПереопределяемый.НовыеПараметрыСостоянияСчетаФактуры("ПометкаУдаления", ЭтотОбъект, "СчетФактураПолученный");
	УчетНДСПереопределяемый.УстановитьСостояниеСчетаФактуры(ПараметрыДействия, Отказ);

	ПорядокВключенияСтоимостиОСВСоставРасходовНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ;
	СтоимостьНеВключаетсяВРасходы = 
		ПорядокВключенияСтоимостиВСоставРасходовНУ = ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы;
	ВключениеВРасходыПриПринятииКУчету = 
		ПорядокВключенияСтоимостиВСоставРасходовНУ = ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету;
	
	Если СуммаДокумента = 0 ИЛИ СтоимостьНеВключаетсяВРасходы ИЛИ ВключениеВРасходыПриПринятииКУчету Тогда
	
		Если СуммаДокумента = 0 Тогда
			ПорядокВключенияСтоимостиВСоставРасходовНУ = Неопределено;
		КонецЕсли;
		
		Если СуммаДокумента = 0 ИЛИ СтоимостьНеВключаетсяВРасходы Тогда
			СпособОтраженияРасходовПриВключенииВСтоимость = Неопределено;
			СтатьяПрочихРасходов                          = Неопределено;
		КонецЕсли;
		
		НачислятьАмортизациюНУ                          = Неопределено;
		СрокПолезногоИспользованияНУ                    = Неопределено;
		СпециальныйКоэффициентНУ                        = Неопределено;
		КоэффициентАмортизацииНУ                        = Неопределено;
		ПроцентКапитальныхВложенийВключаемыхВРасходыНУ  = Неопределено;
		СчетУчетаЗатратПоАмортизационнойПремии          = Неопределено;
		ПодразделениеОрганизацииПоАмортизационнойПремии = Неопределено;
		СубконтоПоАмортизационнойПремии1                = Неопределено;
		СубконтоПоАмортизационнойПремии2                = Неопределено;
		СубконтоПоАмортизационнойПремии3                = Неопределено;
		СпособНачисленияАмортизацииНУ                   = Неопределено;
	
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		УчетНДСПереопределяемый.СинхронизироватьРеквизитыСчетаФактурыПолученного(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив();

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата);
	ПроверятьСчетНДС = НЕ НДСВключенВСтоимость ИЛИ РаздельныйУчетНДСНаСчете19;
	СуммаДокументаСНДС = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	ПлательщикНДФЛ = УчетнаяПолитика.ПлательщикНДФЛ(Организация, Дата);
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата);
	
	// Проверка реквизитов шапки документа
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ТекстСообщения = "";
		Если НЕ УчетВзаиморасчетов.ПроверитьВозможностьПроведенияВРеглУчете(
			ЭтотОбъект, ДоговорКонтрагента, ТекстСообщения) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, "Корректность",
				НСтр("ru = 'Договор'"),,, ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				"ДоговорКонтрагента", "Объект", Отказ);
		КонецЕсли;
	КонецЕсли;

	// В формах документа счет расчетов и счет авансов редактируются в специальной форме.
	// В случае, если они не заполнены, покажем сообщение возле соответствующей гиперссылки.
	МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаРасчетовСКонтрагентом");
	МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаРасчетовПоАвансам");

	Если СуммаДокументаСНДС <> 0 Тогда
	
		Если НЕ ЗначениеЗаполнено(СчетУчетаРасчетовСКонтрагентом) Тогда
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,,
				НСтр("ru = 'Счет учета расчетов с контрагентом'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,
				"ПорядокУчетаРасчетов", Отказ);
		КонецЕсли;

		Если СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.НеЗачитывать Тогда
			Если НЕ ЗначениеЗаполнено(СчетУчетаРасчетовПоАвансам) Тогда
				ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,,
					НСтр("ru = 'Счет учета расчетов по авансам'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,
					"ПорядокУчетаРасчетов", Отказ);
			КонецЕсли;
		КонецЕсли;

	Иначе

		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаАрендныхОбязательств");
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокВключенияСтоимостиВСоставРасходовНУ");

	КонецЕсли;

	Если ПорядокВключенияСтоимостиВСоставРасходовНУ <> 
			Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособОтраженияРасходовПриВключенииВСтоимость");
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяПрочихРасходов");
	КонецЕсли;

	Если ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаЗатратПоАмортизационнойПремии");
	КонецЕсли;

	Если НЕ ПлательщикНДФЛ Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяПрочихРасходов");
		МассивНепроверяемыхРеквизитов.Добавить("СпособНачисленияАмортизацииНУ");
	КонецЕсли;
	
	Если НЕ ПлательщикНалогаНаПрибыль Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособОтраженияРасходовПриВключенииВСтоимость");
	КонецЕсли;
	
	Если (НЕ ПлательщикНДФЛ И НЕ ПлательщикНалогаНаПрибыль) ИЛИ НЕ НачислятьАмортизациюНУ 
		ИЛИ ПорядокВключенияСтоимостиВСоставРасходовНУ <> 
			Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("СрокПолезногоИспользованияНУ");
		МассивНепроверяемыхРеквизитов.Добавить("СпособНачисленияАмортизацииНУ");
	КонецЕсли;
	
	// Табличная часть "Предметы лизинга"

	МассивНепроверяемыхРеквизитов.Добавить("ОС.СтавкаНДС");
	МассивНепроверяемыхРеквизитов.Добавить("ОС.СуммаНДС");
	МассивНепроверяемыхРеквизитов.Добавить("ОС.СчетУчетаНДС");
	МассивНепроверяемыхРеквизитов.Добавить("ОС.СпособУчетаНДС");

	Если СуммаДокументаСНДС <> 0 Тогда

		ИмяСписка = НСтр("ru = 'Предметы лизинга'");

		Для каждого СтрокаТЧ Из ОС Цикл

			Если СтрокаТЧ.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;

			Префикс = "ОС[" + Формат(СтрокаТЧ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";

			Если СтрокаТЧ.Сумма <> 0 
				И СтрокаТЧ.СтавкаНДС <> Перечисления.СтавкиНДС.БезНДС
				И СтрокаТЧ.СтавкаНДС <> Перечисления.СтавкиНДС.НДС0 Тогда

				Если СтрокаТЧ.СуммаНДС = 0 Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение",
						НСтр("ru = 'Сумма НДС'"), СтрокаТЧ.НомерСтроки, ИмяСписка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
					Префикс + "СуммаНДС", "Объект", Отказ);
				КонецЕсли;

			КонецЕсли;

			Если СтрокаТЧ.СуммаНДС <> 0 И НЕ ЗначениеЗаполнено(СтрокаТЧ.СчетУчетаНДС) Тогда

				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение",
				НСтр("ru = 'Счет учета НДС'"), СтрокаТЧ.НомерСтроки, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				Префикс+"СчетУчетаНДС", "Объект", Отказ);

			КонецЕсли;

			Если РаздельныйУчетНДСНаСчете19 И СтрокаТЧ.СуммаНДС <> 0 И НЕ ЗначениеЗаполнено(СтрокаТЧ.СпособУчетаНДС) Тогда
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение",
				НСтр("ru = 'Способ учета НДС'"), СтрокаТЧ.НомерСтроки, ИмяСписка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				Префикс+"СпособУчетаНДС", "Объект", Отказ);
				
			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

	// Табличная часть "Зачет авансов"
	Если СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗачетАвансов");
	ИначеЕсли ЗачетАвансов.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗачетАвансов");
	
		ТекстСообщения = НСтр("ru = 'Не введено ни одной строки с документом аванса!'");
		Поле = "ПорядокУчетаРасчетов";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, , Поле, Отказ);
	КонецЕсли;

	Если НЕ УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, Дата) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтоимостьУСН");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаПриобретения");
		МассивНепроверяемыхРеквизитов.Добавить("СрокПолезногоИспользованияУСН");
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокВключенияСтоимостиВСоставРасходовУСН");
		МассивНепроверяемыхРеквизитов.Добавить("Оплата.ОсновноеСредство");
		МассивНепроверяемыхРеквизитов.Добавить("Оплата.ДатаОплаты");
		МассивНепроверяемыхРеквизитов.Добавить("Оплата.СуммаОплаты");
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ВыкупПредметовЛизинга.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	УчетОС.ПроверитьСоответствиеОСОрганизации(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьСостояниеОСПринятоКУчету(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьЗаполнениеСчетаУчетаОС(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);

	ПараметрыПеремещениеОС = УчетОС.ПодготовитьТаблицыСведенийПоВыбытиюОС(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПеремещениеОС,
		Отказ);

	ТаблицаПараметрыСписания = Документы.ВыкупПредметовЛизинга.ПодготовитьТаблицуПараметрыСписания(ПараметрыПеремещениеОС);
		
	// Таблица амортизационной премии
	ТаблицаАмортизационнойПремии = УчетОС.ПодготовитьТаблицуАмортизационнаяПремияПриВыкупе(
		ТаблицаПараметрыСписания,
		ПараметрыПроведения.Реквизиты,
		Отказ);

	// Таблица первоначальных сведений ОС (НУ)
	ТаблицаПервоначальныеСведенияОСНУ = УчетОС.ПодготовитьТаблицуПервоначальныеСведенияОСНУПриВыкупе(
		ТаблицаПараметрыСписания,
		ПараметрыПроведения.Реквизиты,
		Отказ);

	// Таблица включения в расходы при выкупе (НУ)
	ТаблицаЗатратПоВключениюСтоимостиВСоставРасходовНУ = УчетОС.ПодготовитьТаблицуСписаниеНаРасходыНУПриВыкупе(
		ТаблицаПараметрыСписания,
		ПараметрыПроведения.ПеремещениеОС,
		Отказ);

	// Таблица параметров амортизации (НУ)
	ТаблицаПараметровАмортизацииНУ = УчетОС.ПодготовитьТаблицуПараметрыАмортизацииОСНУ(
		ТаблицаПервоначальныеСведенияОСНУ, ТаблицаЗатратПоВключениюСтоимостиВСоставРасходовНУ,
		ПараметрыПроведения.ПеремещениеОС,
		Отказ);
		
	// Таблица первоначальных сведений ОС (УСН)
	ТаблицаПервоначальныеСведенияОСУСН = УчетОС.ПодготовитьТаблицуПервоначальныеСведенияОСУСН(
		ПараметрыПроведения.ПервоначальныеСведенияОСУСНТаблица,
		ПараметрыПроведения.ПервоначальныеСведенияОСУСН,
		Отказ);

	// Таблица взаиморасчетов
	ТаблицаВзаиморасчеты = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента, ПараметрыПроведения.ТаблицаЗачетАвансов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

	// Таблицы документа с корректировкой сумм по курсу авансов
	СтруктураТаблицДокумента = УчетДоходовРасходов.ПодготовитьТаблицыПоступленияПоКурсуАвансов(
		ПараметрыПроведения.СтруктураТаблицДокумента, ТаблицаВзаиморасчеты,
		ПараметрыПроведения.ЗачетАвансовРеквизиты);

	ТаблицаНДСВыкупИмущества = Документы.ВыкупПредметовЛизинга.ПодготовитьТаблицуНДС(
		СтруктураТаблицДокумента.ТаблицаВыкупИмущества);

	// Учет доходов и расходов ИП
	ТаблицаПрочееИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
		ПараметрыПроведения.ИПОсновныеСредства,
		ПараметрыПроведения.ИПРеквизиты);

	СтруктураТаблицМПЗ = Новый Структура("ТаблицаПрочее", ТаблицаПрочееИП);

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Зачет аванса
	УчетВзаиморасчетов.СформироватьДвиженияЗачетАвансов(
		ТаблицаВзаиморасчеты,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Движения, Отказ);
		
	// Поступление услуг
	УчетДоходовРасходов.СформироватьДвиженияПоступлениеУслуг(
		СтруктураТаблицДокумента.ТаблицаВыкупИмущества,
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);
		
	//Движения регистра "Рублевые суммы документов в валюте"
	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеПоступлениеСобственныхТоваровУслуг(
		СтруктураТаблицДокумента.ТаблицаВыкупИмущества, 
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);

	// Учет НДС
	УчетНДС.СформироватьДвиженияПоступлениеТоваровУслугОтПоставщика(
		Неопределено, ТаблицаНДСВыкупИмущества, Неопределено,
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);

	УчетНДСРаздельный.СформироватьДвиженияПоступлениеТоваровУслугОтПоставщика(
		Неопределено, ТаблицаНДСВыкупИмущества,
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияРегистрацияСчетовБухгалтерскогоУчетаОС(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);

	// Перемещение в состав собственных ОС
	УчетОС.СформироватьДвиженияПеремещениеВСоставСобственныхОС(
		ПараметрыПроведения.ПеремещениеОС,
		ПараметрыПеремещениеОС,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияОтражениеАмортизационнойПремии(
		ТаблицаАмортизационнойПремии,
		ПараметрыПроведения.ПеремещениеОС,
		Движения, Отказ);

	УправлениеВнеоборотнымиАктивами.СформироватьДвиженияНачислениеАмортизации(
		ТаблицаЗатратПоВключениюСтоимостиВСоставРасходовНУ,
		ПараметрыПроведения.ПеремещениеОС,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияРегистрацияПервоначальныхСведенийОСНУ(
		ТаблицаПервоначальныеСведенияОСНУ,
		ПараметрыПроведения.ПеремещениеОС,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияИзменениеПараметровАмортизацииОСНУ(
		ТаблицаПараметровАмортизацииНУ,
		ПараметрыПроведения.ПеремещениеОС,
		Движения, Отказ);
		
	УчетОС.СформироватьДвиженияНачислениеАмортизацииОССпециальныйКоэффициентНУ(
		ПараметрыПроведения.НачислениеАмортизацииОССпециальныйКоэффициентНУТаблица,
		ПараметрыПроведения.НачислениеАмортизацииОССпециальныйКоэффициентНУ,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияРегистрацияПервоначальныхСведенийОСУСН(
		ТаблицаПервоначальныеСведенияОСУСН,
		ПараметрыПроведения.ПервоначальныеСведенияОСУСН,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияРегистрацияОплатОсновныхСредствДляУСН(
		ПараметрыПроведения.ОплатаОсновныхСредствДляУСН,
		ПараметрыПроведения.ПервоначальныеСведенияОСУСН,
		Движения, Отказ);

	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеМПЗ(СтруктураТаблицМПЗ,
		ТаблицаВзаиморасчеты, , ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПринятиеКУчетуОС(
		ПараметрыПроведения.ИПОсновныеСредства,
		ПараметрыПроведения.ИППервоначальныеСведенияОС, Движения, Отказ);

	// Переоценка валютных остатков - после формирования проводок всеми другими механизмами
	ТаблицаПереоценка = УчетДоходовРасходов.ПодготовитьТаблицуПереоценкаВалютныхОстатковПоПроводкамДокумента(
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);

	УчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(
		ТаблицаПереоценка,
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);

	// Регистрация в последовательности
	РаботаСПоследовательностями.ЗарегистрироватьВПоследовательности(ЭтотОбъект, Отказ, Ложь);

	// Отложенные расчеты с контрагентами.
	УчетВзаиморасчетовОтложенноеПроведение.ЗарегистрироватьОтложенныеРасчетыСКонтрагентами(
		ЭтотОбъект, Отказ, ПараметрыПроведения.РасчетыСКонтрагентамиОтложенноеПроведение);
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
	Движения.Записать();
	
	ПараметрыДействия = УчетНДСПереопределяемый.НовыеПараметрыСостоянияСчетаФактуры("Проведен", ЭтотОбъект, "СчетФактураПолученный");	
	УчетНДСПереопределяемый.УстановитьСостояниеСчетаФактуры(ПараметрыДействия, Отказ);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);
	
	ПараметрыДействия = УчетНДСПереопределяемый.НовыеПараметрыСостоянияСчетаФактуры("Проведен", ЭтотОбъект, "СчетФактураПолученный");	
	ПараметрыДействия.СостояниеФлага = Ложь;
	УчетНДСПереопределяемый.УстановитьСостояниеСчетаФактуры(ПараметрыДействия, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли