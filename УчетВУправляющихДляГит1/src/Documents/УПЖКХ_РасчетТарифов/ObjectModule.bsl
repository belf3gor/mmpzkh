#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПроведенияДокумента

// Процедура выполняет все движение по регистрам  текущего объекта.
//
Процедура ДвижениеПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Для Каждого СтрокаТарифаЗдания Из ТарифыЗданий Цикл
		Движение = Движения.КВП_Тарифы.Добавить();
		Движение.Период      = СтруктураШапкиДокумента.Дата;
		Движение.Организация = СтруктураШапкиДокумента.Организация;
		Движение.Услуга      = СтруктураШапкиДокумента.Услуга;
		Движение.Объект      = СтрокаТарифаЗдания.Здание;
		Движение.ВидТарифа   = Перечисления.КВП_ВидыТарифов.Общий;
		Движение.Тариф       = СтрокаТарифаЗдания.Тариф;
		Движение.Действует   = Истина;
	КонецЦикла;
	
КонецПроцедуры // ДвижениеПоРегистрам()

#КонецОбласти

#Область ОбработчикиСобытийДокумента

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Обрабатывает проведения документа.
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = УПЖКХ_ТиповыеМетодыВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПараметрыПроведения = Документы.УПЖКХ_РасчетТарифов.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента = ПараметрыПроведения.Реквизиты;
	
	Если НЕ Отказ Тогда
		ДвижениеПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

// Обработчик события "ОбработкаПроверкиЗаполнения" документа.
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Организация");
	ПроверяемыеРеквизиты.Добавить("Услуга");
	ПроверяемыеРеквизиты.Добавить("Период");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли