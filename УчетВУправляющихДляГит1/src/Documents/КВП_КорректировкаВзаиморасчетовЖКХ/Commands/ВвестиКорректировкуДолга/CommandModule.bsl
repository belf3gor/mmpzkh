
#Область ОбработчикиКоманды

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ВидОперации = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ПараметрКоманды, "ВидОперации");
	КорректироватьНачисления = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ПараметрКоманды, "КорректироватьНачисления");
	
	Если КорректироватьНачисления И (ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности")
		 ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности")) Тогда
		
		ПоказатьПредупреждение(, "Не возможно сформировать документ при отмеченном флажке ""Корректировать начисления""!");
		
	Иначе
		СтруктураЗаполнения = ПодготовитьСтруктуруЗаполненияДокументаКорректировкаДолга(ПараметрКоманды);
		Форма = ПолучитьФорму("Документ.КорректировкаДолга.ФормаОбъекта", Новый Структура("Основание", СтруктураЗаполнения));
		Форма.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьСтруктуруЗаполненияДокументаКорректировкаДолга(Документ)
	
	СтруктураЗаполнения = Новый Структура;
	
	СтруктураЗаполнения.Вставить("ВидОперации",   Документ.ВидОперации);
	СтруктураЗаполнения.Вставить("Дата",          Документ.Дата);
	СтруктураЗаполнения.Вставить("Организация",   Документ.Организация);
	СтруктураЗаполнения.Вставить("Ответственный", Документ.Ответственный);
	СтруктураЗаполнения.Вставить("Комментарий",   Документ.Комментарий);
	
	КонтрагентДебитор  = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьСведенияДляВзаиморасчетовПоЛицевомуСчету(Документ.ЛицевойСчет, Документ.Организация, Документ.Дата, "Контрагент");
	КонтрагентКредитор = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьСведенияДляВзаиморасчетовПоЛицевомуСчету(Документ.ЛицевойСчетПолучатель, Документ.Организация, Документ.Дата, "Контрагент");
	
	СтруктураЗаполнения.Вставить("КонтрагентДебитор", КонтрагентДебитор);
	СтруктураЗаполнения.Вставить("КонтрагентКредитор",   КонтрагентКредитор);
	
	ТаблицаДебиторскойЗадолженности = Новый ТаблицаЗначений;
	ТаблицаДебиторскойЗадолженности.Колонки.Добавить("ДоговорКонтрагента");
	ТаблицаДебиторскойЗадолженности.Колонки.Добавить("СуммаВзаиморасчетов");
	ТаблицаДебиторскойЗадолженности.Колонки.Добавить("Сумма");
	
	ТаблицаКредиторскойЗадолженности = ТаблицаДебиторскойЗадолженности.Скопировать();
	
	// Заполнение ТЧ дебиторской и кредиторской задолженностей.
	Для Каждого СтрокаТЧ Из Документ.СуммыДолга Цикл
		Если СтрокаТЧ.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
			НоваяСтрока = ТаблицаДебиторскойЗадолженности.Добавить();
		Иначе
			НоваяСтрока = ТаблицаКредиторскойЗадолженности.Добавить();
		КонецЕсли;
		НоваяСтрока.ДоговорКонтрагента  = СтрокаТЧ.Договор;
		НоваяСтрока.СуммаВзаиморасчетов = СтрокаТЧ.СуммаНачисления;
		НоваяСтрока.Сумма               = СтрокаТЧ.СуммаНачисления;
	КонецЦикла;
	
	СтруктураЗаполнения.Вставить("ДебиторскаяЗадолженность",  ТаблицаДебиторскойЗадолженности);
	СтруктураЗаполнения.Вставить("КредиторскаяЗадолженность", ТаблицаКредиторскойЗадолженности);
	
	Возврат СтруктураЗаполнения;
	
КонецФункции // ПодготовитьСтруктуруЗаполненияДокументаКорректировкаДолга()

#КонецОбласти