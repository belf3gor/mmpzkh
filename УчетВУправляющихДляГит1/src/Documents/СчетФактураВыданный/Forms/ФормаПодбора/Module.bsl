
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Отбор.Организация;
		ОтборОрганизацияИспользование = ?(Параметры.Отбор.Свойство("ОрганизацияИспользование"),
			Параметры.Отбор.ОрганизацияИспользование, Истина);
		НовоеПолеОтбора = ПоляОтбора.Добавить();
		НовоеПолеОтбора.ИмяПоля			= "Организация";
		НовоеПолеОтбора.Значение		= ОтборОрганизация;
		НовоеПолеОтбора.Использование	= ОтборОрганизацияИспользование;
		Параметры.Отбор.Удалить("Организация");
	КонецЕсли;

	Если Параметры.Отбор.Свойство("Контрагент") Тогда
		ОтборКонтрагент = Параметры.Отбор.Контрагент;
		ОтборКонтрагентИспользование = ?(Параметры.Отбор.Свойство("КонтрагентИспользование"),
			Параметры.Отбор.КонтрагентИспользование, Истина);
		НовоеПолеОтбора = ПоляОтбора.Добавить();
		НовоеПолеОтбора.ИмяПоля			= "Контрагент";
		НовоеПолеОтбора.Значение 		= ОтборКонтрагент;
		НовоеПолеОтбора.Использование	= ОтборКонтрагентИспользование;
		Параметры.Отбор.Удалить("Контрагент");
	КонецЕсли;
		
	УстановитьОтборСпискаПоПолю(Список.КомпоновщикНастроек.ПользовательскиеНастройки);
	
	ЭтоИсправление = Ложь;
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Если Параметры.ЗначенияЗаполнения.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда 
			Элементы.ГруппаКоманднаяПанельСОтбором.Заголовок = НСтр("ru='Выберите счет-фактуру, который нужно откорректировать'");
			УстановитьДополнительныйОтборДляКорректировки();
		ИначеЕсли Параметры.ЗначенияЗаполнения.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.КорректировочнаяСправка Тогда 
			Элементы.ГруппаКоманднаяПанельСОтбором.Заголовок = НСтр("ru='Выберите сводную справку, которую нужно откорректировать'");
			УстановитьДополнительныйОтборДляКорректировочнойСправки();
		ИначеЕсли Параметры.ЗначенияЗаполнения.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.ПустаяСсылка() Тогда
			ЭтаФорма.Элементы.ГруппаКоманднаяПанельСОтбором.Заголовок = НСтр("ru='Выберите счет-фактуру, который нужно исправить'");
			Список.Параметры.УстановитьЗначениеПараметра("СчетаФактурыИсключения", Неопределено);
			УстановитьДополнительныйОтборДляИсправления();
			УстановитьПорядокИсправления();
			ЭтоИсправление = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьДокумент(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	УстановитьОтборСпискаПоПолю(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	СтрокаТаблицы = Элементы.Список.ТекущиеДанные;
	
	Если СтрокаТаблицы <> Неопределено Тогда
		ОткрытьДокумент(СтрокаТаблицы.Ссылка);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьДополнительныйОтборДляКорректировки()
	
	Список.Параметры.УстановитьЗначениеПараметра("СчетаФактурыИсключения", СчетаФактурыИсключенияДляКорректировки());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДополнительныйОтборДляКорректировочнойСправки()
	
	Список.Параметры.УстановитьЗначениеПараметра("СчетаФактурыИсключения", СчетаФактурыИсключенияДляКорректировочнойСправки());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДополнительныйОтборДляИсправления()
	
	Список.Параметры.УстановитьЗначениеПараметра("СчетаФактурыИсключения", СчетаФактурыИсключенияДляИсправления());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПорядокИсправления()
	
	ПорядокИсправления = Новый ФиксированноеСоответствие(
		Документы.СчетФактураВыданный.ПолучитьСоответствиеВидовСчетаФактурыПорядкуИсправления());
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция СчетаФактурыИсключенияДляКорректировки()
	
	СчетаФактурыИсключения = Новый Массив;
	
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАванс);
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента);
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент);
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу);
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.СводнаяСправка);
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.КорректировочнаяСправка);
	
	Возврат СчетаФактурыИсключения;
	
КонецФункции

&НаСервереБезКонтекста
Функция СчетаФактурыИсключенияДляКорректировочнойСправки()
	
	СчетаФактурыИсключения = Новый Массив;
	
	Для Каждого ВидСФ Из Перечисления.ВидСчетаФактурыВыставленного Цикл
		Если ВидСФ <> Перечисления.ВидСчетаФактурыВыставленного.СводнаяСправка Тогда
			СчетаФактурыИсключения.Добавить(ВидСФ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СчетаФактурыИсключения;
	
КонецФункции

&НаСервереБезКонтекста
Функция СчетаФактурыИсключенияДляИсправления()
	
	СчетаФактурыИсключения = Новый Массив;
	
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.СводнаяСправка);
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыВыставленного.КорректировочнаяСправка);
	
	Возврат СчетаФактурыИсключения;
	
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьСтруктуруРеквизитовДляОбработки(ДокументСсылка, Реквизит)
	
	СтруктураРекизитов = Новый Структура;
	
	РеквизитыСчетаФактуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ВидСчетаФактуры,ДокументОснование,Продавец");
	
	ВидСчетаФактуры = РеквизитыСчетаФактуры.ВидСчетаФактуры;
	ДокументОснование = РеквизитыСчетаФактуры.ДокументОснование;
	
	ВидСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, Реквизит);
	ПоследнееИсправление = УчетНДСПереопределяемый.ПолучитьПоследнееИсправлениеСчетаФактурыВыданного(ДокументСсылка);
	
	Основание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПоследнееИсправление, "ДокументОснование");

	ОснованиеСчетФактура = Ложь;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОказаниеУслуг")
		ИЛИ (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		И НЕ Документы.ОтчетКомиссионераОПродажах.ДокументСозданПоПравиламПостановления914(ДокументОснование)) Тогда
		
		ОснованиеСчетФактура = Истина;
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
		
		ОснованиеСчетФактура = ЗначениеЗаполнено(РеквизитыСчетаФактуры.Продавец);
		
	КонецЕсли;
	
	СтруктураРекизитов.Вставить("ВидСчетаФактуры", ВидСчетаФактуры);
	СтруктураРекизитов.Вставить("ПоследнееИсправление", ПоследнееИсправление);
	СтруктураРекизитов.Вставить("Основание", Основание);
	СтруктураРекизитов.Вставить("ОснованиеСчетФактура", ОснованиеСчетФактура);
	
	Возврат СтруктураРекизитов;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьДокумент(СтрокаТаблицы)
	
	
	РеквизитыДляОбработки		= ПолучитьСтруктуруРеквизитовДляОбработки(СтрокаТаблицы, "ВидСчетаФактуры");
	ОснованиеСчетФактура	= РеквизитыДляОбработки.ОснованиеСчетФактура;
	Основание 		= ?(ОснованиеСчетФактура, РеквизитыДляОбработки.ПоследнееИсправление, РеквизитыДляОбработки.Основание);
	
	Закрыть();
	
	Если ЭтоИсправление Тогда
		
		Если НЕ ПорядокИсправления[РеквизитыДляОбработки.ВидСчетаФактуры] Тогда
			
			ПараметрыФормы = Новый Структура("Основание", РеквизитыДляОбработки.ПоследнееИсправление);
			
			ОткрытьФорму("Документ.СчетФактураВыданный.ФормаОбъекта", ПараметрыФормы, ВладелецФормы);
			
		Иначе
			
			ПараметрыЗаполнения = Новый Структура("ДокументОснование, Видоперации",Основание, 
				ПредопределенноеЗначение("Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки"));
			ПараметрыФормы      = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
			
			ОткрытьФорму("Документ.КорректировкаРеализации.ФормаОбъекта", ПараметрыФормы, ВладелецФормы); 
			
		КонецЕсли;
		
	ИначеЕсли РеквизитыДляОбработки.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыВыставленного.СводнаяСправка") Тогда 
		
		ПараметрыЗаполнения = Новый Структура("ИсправляемыйСчетФактура, ВидСчетаФактуры", 
			СтрокаТаблицы,
			ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыВыставленного.КорректировочнаяСправка"));
		ПараметрыФормы      = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
		ОткрытьФорму("Документ.СчетФактураВыданный.ФормаОбъекта", ПараметрыФормы, ВладелецФормы);
		
	Иначе
		
		ПараметрыЗаполнения = Новый Структура("ДокументОснование, Видоперации", Основание, 
			ПредопределенноеЗначение("Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение"));
		ПараметрыФормы      = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
		
		ОткрытьФорму("Документ.КорректировкаРеализации.ФормаОбъекта", ПараметрыФормы, ВладелецФормы); 
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСпискаПоПолю(Настройки)
	
	Для Каждого ПолеОтбора Из ПоляОтбора Цикл
		ОтборыПоПолю = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(
		Список.КомпоновщикНастроек.Настройки.Отбор, ПолеОтбора.ИмяПоля);
		
		Если ОтборыПоПолю.Количество() > 0 Тогда
			ИдентификаторНастройкиПоПолю = Настройки.ПолучитьИдентификаторПоОбъекту(ОтборыПоПолю[0]);	
		Иначе
			Возврат;
		КонецЕсли;
		
		ЭлементНастроек = Настройки.ПолучитьОбъектПоИдентификатору(ИдентификаторНастройкиПоПолю);
		
		Если ЭлементНастроек <> Неопределено Тогда
			ЭлементНастроек.ПравоеЗначение 	= ПолеОтбора.Значение;
			ЭлементНастроек.Использование 	= ПолеОтбора.Использование;			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
