#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьСпискаЖильцов(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент();
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат ТабДокумент;
	КонецЕсли;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.УПЖКХ_ОтчетОНачисленияхЗаЖКУ.ПФ_MXL_СписокЖильцов");
	
	Для Каждого ТекСсылка Из МассивОбъектов Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим заголовок отчета.
		ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтчета");
		ОбластьШапки.Параметры.ДатаОтчета   = "Месяц: " + Формат(ТекСсылка.Период, "ДФ=""ММММ гггг 'г.'""");
		ОбластьШапки.Параметры.ДатаПечати   = "дата печати списка: " + Формат(ТекСсылка.Дата, "ДФ=""дд ММММ гггг 'г.'""");
		ОбластьШапки.Параметры.Организация  = "Организация: " + ТекСсылка.Организация;
		ТабДокумент.Вывести(ОбластьШапки);
		
		// Выводим шапку табличной части.
		ОбластьШапкиТЧ = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьШапкиТЧ);
		
		Номер = 1;
		Для Каждого ТекЭлемент Из ТекСсылка.Плательщики Цикл
			// Выводим записи таблицы.
			ОбластьЗаписи = Макет.ПолучитьОбласть("ЗаписиТаблицы");
			ОбластьЗаписи.Параметры.Номер = Номер;
			ОбластьЗаписи.Параметры.КодПлательщика = ТекЭлемент.КодПлательщика;
			ОбластьЗаписи.Параметры.ЛицевойСчет = ТекЭлемент.ЛицевойСчет;
			ОбластьЗаписи.Параметры.ФИО = ТекЭлемент.ФамилияПлательщика + " " + ТекЭлемент.ИмяПлательщика + " " + ТекЭлемент.ОтчествоПлательщика;
			ОбластьЗаписи.Параметры.Адрес = ТекЭлемент.Улица + " д." + ТекЭлемент.Дом
			                              + ?(ЗначениеЗаполнено(ТекЭлемент.Корпус), ", корпус " + ТекЭлемент.Корпус, "")
			                              + ?(ЗначениеЗаполнено(ТекЭлемент.Строение), ", строение " + ТекЭлемент.Строение, "")
			                              + ", кв." + ТекЭлемент.Квартира;
			ОбластьЗаписи.Параметры.Сумма1 = ТекЭлемент.СуммаНачисленнойПлаты;
			ОбластьЗаписи.Параметры.Сумма2 = ТекЭлемент.СуммаПлатыСЛьготой;
			ТабДокумент.Вывести(ОбластьЗаписи);
			Номер = Номер + 1;
			
			ОбластьЗаписи = Макет.ПолучитьОбласть("ШапкаПроживающих");
			ТабДокумент.Вывести(ОбластьЗаписи);
			
			НайденныеСтроки = ТекСсылка.ПотребителиУслуг.НайтиСтроки(Новый Структура("ЛицевойСчет", ТекЭлемент.ЛицевойСчет));
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				
				Для Каждого ТекЖилец Из НайденныеСтроки Цикл
					
					ОбластьЗаписи = Макет.ПолучитьОбласть("СтрокаПроживающего");
					ОбластьЗаписи.Параметры.Жилец = ТекЖилец.Фамилия + " " + ТекЖилец.Имя + " " + ТекЖилец.Отчество;
					ОбластьЗаписи.Параметры.СтепеньРодства = ТекЖилец.СтепеньРодства;
					ТабДокумент.Вывести(ОбластьЗаписи);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.ВсегоСумма1 = ТекСсылка.Плательщики.Итог("СуммаНачисленнойПлаты");
		ОбластьПодвал.Параметры.ВсегоСумма2 = ТекСсылка.Плательщики.Итог("СуммаПлатыСЛьготой");
		ТабДокумент.Вывести(ОбластьПодвал);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УПЖКХ_ТиповыеМетодыСервер.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекСсылка);
		
	КонецЦикла;
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1, 2, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьВыпадающиеДоходы()

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьСводнуюВедомость(МассивОбъектов, ОбъектыПечати, Знач ПараметрыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент();
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат ТабДокумент;
	КонецЕсли;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.УПЖКХ_ОтчетОНачисленияхЗаЖКУ.ПФ_MXL_СводнаяВедомость");
	
	Для Каждого ТекСсылка Из МассивОбъектов Цикл
		
		Если НЕ ЗначениеЗаполнено(ПараметрыПечати) Тогда
			
			Документ = ТекСсылка.ПолучитьОбъект();
			
			КодОрганизации = РегистрыСведений.УПЖКХ_НастройкиВыгрузкиВГЦЖС.ПолучитьКодОрганизации(Документ.Дата,Документ.Организация,Истина);
			ОбрезатьПрефиксЛС = РегистрыСведений.УПЖКХ_НастройкиВыгрузкиВГЦЖС.ОпределитьДействиеНастройки_ОбрезатьПрефиксЛС(Документ.Дата);
			
			ПараметрыПечати = Новый Структура;
			
			Для Индекс = 1 По 3 Цикл
				
				ТекстФайла = Документ.ПолучитьТекстФайлаДляВыгрузки(Индекс,ОбрезатьПрефиксЛС,КодОрганизации);
				
				// Сформируем информацию по файлу.
				Структура = Новый Структура;
				Структура.Вставить("ИмяФайла", "");
				Структура.Вставить("КоличествоЗаписей", СтрЧислоСтрок(ТекстФайла));
				
				Если Индекс = 1 Тогда
					Структура.Вставить("Сумма1", Документ.Плательщики.Итог("СуммаНачисленнойПлаты"));
					Структура.Вставить("Сумма2", Документ.Плательщики.Итог("СуммаПлатыСЛьготой"));
					Структура.Вставить("Информация", "сведения о потребителях услуг");
				ИначеЕсли Индекс = 2 Тогда
					Структура.Вставить("Сумма1", Документ.Начисления.Итог("СуммаНачисленнойПлаты"));
					Структура.Вставить("Сумма2", Документ.Начисления.Итог("СуммаПлатыСЛьготой"));
					Структура.Вставить("Информация", "сведения о начислениях");
				ИначеЕсли Индекс = 3 Тогда
					Структура.Вставить("Сумма1", "-");
					Структура.Вставить("Сумма2", "-");
					Структура.Вставить("Информация", "сведения о составе семьи");
				КонецЕсли;
				
				ПараметрыПечати.Вставить("Структура" + Индекс, Структура);
				
			КонецЦикла;
			
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим заголовок отчета.
		ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтчета");
		ОбластьШапки.Параметры.ДатаОтчета   = "за " + Формат(ТекСсылка.Период, "ДФ=""ММММ гггг 'года'""");
		ОбластьШапки.Параметры.Организация  = "Организация: " + ТекСсылка.Организация;
		ТабДокумент.Вывести(ОбластьШапки);
		
		// Выводим шапку табличной части.
		ОбластьШапкиТЧ = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьШапкиТЧ);
		
		Если ЗначениеЗаполнено(ПараметрыПечати) Тогда
			Для Каждого ТекЭлемент Из ПараметрыПечати Цикл
				// Выводим записи таблицы.
				ОбластьЗаписи = Макет.ПолучитьОбласть("ЗаписиТаблицы");
				ЗаполнитьЗначенияСвойств(ОбластьЗаписи.Параметры, ТекЭлемент.Значение);
				ТабДокумент.Вывести(ОбластьЗаписи);
			КонецЦикла;
		Иначе
			ОбластьЗаписи = Макет.ПолучитьОбласть("ЗаписиТаблицы");
			ТабДокумент.Вывести(ОбластьЗаписи);
		КонецЕсли;
		
		// Выводим подвал
		ОбластьЗаписи = Макет.ПолучитьОбласть("Подвал");
		ТабДокумент.Вывести(ОбластьЗаписи);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УПЖКХ_ТиповыеМетодыСервер.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекСсылка);
		
		ПараметрыПечати = Неопределено;
		
	КонецЦикла;
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1, 2, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьВыпадающиеДоходы()

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьСпискаПлательщиков(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент();
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат ТабДокумент;
	КонецЕсли;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет("Документ.УПЖКХ_ОтчетОНачисленияхЗаЖКУ.ПФ_MXL_СписокПлательщиков");
	
	Для Каждого ТекСсылка Из МассивОбъектов Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим заголовок отчета.
		ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтчета");
		ОбластьШапки.Параметры.ДатаОтчета   = "Месяц: " + Формат(ТекСсылка.Период, "ДФ=""ММММ гггг 'г.'""");
		ОбластьШапки.Параметры.ДатаПечати   = "дата печати списка: " + Формат(ТекСсылка.Дата, "ДФ=""дд ММММ гггг 'г.'""");
		ОбластьШапки.Параметры.Организация  = "Организация: " + ТекСсылка.Организация;
		ТабДокумент.Вывести(ОбластьШапки);
		
		// Выводим шапку табличной части.
		ОбластьШапкиТЧ = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьШапкиТЧ);
		
		Номер = 1;
		Для Каждого ТекЭлемент Из ТекСсылка.Плательщики Цикл
			// Выводим записи таблицы.
			ОбластьЗаписи = Макет.ПолучитьОбласть("ЗаписиТаблицы");
			ОбластьЗаписи.Параметры.Номер = Номер;
			ОбластьЗаписи.Параметры.КодПлательщика = ТекЭлемент.КодПлательщика;
			ОбластьЗаписи.Параметры.ЛицевойСчет = ТекЭлемент.ЛицевойСчет;
			ОбластьЗаписи.Параметры.ФИО = ТекЭлемент.ФамилияПлательщика + " " + ТекЭлемент.ИмяПлательщика + " " + ТекЭлемент.ОтчествоПлательщика;
			ОбластьЗаписи.Параметры.Адрес = ТекЭлемент.Улица + " д." + ТекЭлемент.Дом
			                              + ?(ЗначениеЗаполнено(ТекЭлемент.Корпус), ", корпус " + ТекЭлемент.Корпус, "")
			                              + ?(ЗначениеЗаполнено(ТекЭлемент.Строение), ", строение " + ТекЭлемент.Строение, "")
			                              + ", кв." + ТекЭлемент.Квартира;
			ОбластьЗаписи.Параметры.Сумма1 = ТекЭлемент.СуммаНачисленнойПлаты;
			ОбластьЗаписи.Параметры.Сумма2 = ТекЭлемент.СуммаПлатыСЛьготой;
			ТабДокумент.Вывести(ОбластьЗаписи);
			Номер = Номер + 1;
		КонецЦикла;
		
		// Выводим подвал
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.ВсегоСумма1 = ТекСсылка.Плательщики.Итог("СуммаНачисленнойПлаты");
		ОбластьПодвал.Параметры.ВсегоСумма2 = ТекСсылка.Плательщики.Итог("СуммаПлатыСЛьготой");
		ТабДокумент.Вывести(ОбластьПодвал);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УПЖКХ_ТиповыеМетодыСервер.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекСсылка);
		
	КонецЦикла;
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1, 2, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьВыпадающиеДоходы()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую;
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать;
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы;
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, 
	
	КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если  УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "СводнуюВедомость") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "СводнуюВедомость", 
																   "СводнуюВедомость",
																   ПечатьСводнуюВедомость(МассивОбъектов,
																   						ОбъектыПечати,
																						ПараметрыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокПлательщиков") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "СписокПлательщиков", 
																   "СписокПлательщиков",
																   ПечатьСпискаПлательщиков(МассивОбъектов,
																   						ОбъектыПечати));
		
	ИначеЕсли УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокЖильцов") Тогда
		
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																   "СписокЖильцов", 
																   "СписокЖильцов",
																   ПечатьСпискаЖильцов(МассивОбъектов,
																   						ОбъектыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли