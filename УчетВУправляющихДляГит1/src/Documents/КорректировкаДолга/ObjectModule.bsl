#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ПолучитьСтруктуруРезультатовПроверки()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДебиторскаяЗадолженность", ДебиторскаяЗадолженность.Выгрузить(, 
		"НомерСтроки, ДоговорКонтрагента, КурсВзаиморасчетов, СчетУчетаРасчетов"));
	Запрос.УстановитьПараметр("КредиторскаяЗадолженность", КредиторскаяЗадолженность.Выгрузить(, 
		"НомерСтроки, ДоговорКонтрагента, КурсВзаиморасчетов, СчетУчетаРасчетов"));
	Запрос.УстановитьПараметр("ИмяДебиторскойЗадолженности",  НСтр("ru = 'Дебиторская задолженность'") );
	Запрос.УстановитьПараметр("ИмяКредиторскойЗадолженности", НСтр("ru = 'Кредиторская задолженность'") );
	Запрос.УстановитьПараметр("ВалютаРеглУчета",              Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ТекстОшибки1", НСтр("ru = 'Для валютного договора указан счет без валютного учета!'") );
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""ДебиторскаяЗадолженность"" КАК ИмяТабЧасти,
	|	&ИмяДебиторскойЗадолженности КАК СинонимТабЧасти,
	|	ТабЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабЧасть.ДоговорКонтрагента КАК Договор,
	|	ТабЧасть.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ТабЧасть.СчетУчетаРасчетов КАК СчетУчета
	|ПОМЕСТИТЬ СтрокиДебиторскойЗадолженности
	|ИЗ
	|	&ДебиторскаяЗадолженность КАК ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""КредиторскаяЗадолженность"" КАК ИмяТабЧасти,
	|	&ИмяКредиторскойЗадолженности КАК СинонимТабЧасти,
	|	ТабЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабЧасть.ДоговорКонтрагента КАК Договор,
	|	ТабЧасть.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ТабЧасть.СчетУчетаРасчетов КАК СчетУчета
	|ПОМЕСТИТЬ СтрокиКредиторскойЗадолженности
	|ИЗ
	|	&КредиторскаяЗадолженность КАК ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиДебиторскойЗадолженности.ИмяТабЧасти КАК ИмяТабЧасти,
	|	СтрокиДебиторскойЗадолженности.СинонимТабЧасти КАК СинонимТабЧасти,
	|	СтрокиДебиторскойЗадолженности.НомерСтроки КАК НомерСтроки,
	|	СтрокиДебиторскойЗадолженности.Договор КАК Договор,
	|	СтрокиДебиторскойЗадолженности.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	СтрокиДебиторскойЗадолженности.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	СтрокиДебиторскойЗадолженности КАК СтрокиДебиторскойЗадолженности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтрокиКредиторскойЗадолженности.ИмяТабЧасти,
	|	СтрокиКредиторскойЗадолженности.СинонимТабЧасти,
	|	СтрокиКредиторскойЗадолженности.НомерСтроки,
	|	СтрокиКредиторскойЗадолженности.Договор,
	|	СтрокиКредиторскойЗадолженности.КурсВзаиморасчетов,
	|	СтрокиКредиторскойЗадолженности.СчетУчета
	|ИЗ
	|	СтрокиКредиторскойЗадолженности КАК СтрокиКредиторскойЗадолженности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаРасчетовСПоставщиками
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаРасчетовСПокупателями
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчикамиВал))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиДокумента.ИмяТабЧасти КАК ИмяТабЧасти,
	|	СтрокиДокумента.СинонимТабЧасти,
	|	СтрокиДокумента.НомерСтроки КАК НомерСтроки,
	|	&ТекстОшибки1 КАК ОписаниеОшибки,
	|	Договоры.Ссылка КАК Договор,
	|	Счета.Ссылка КАК СчетУчета
	|ИЗ
	|	СтрокиДокументов КАК СтрокиДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО СтрокиДокумента.Договор = Договоры.Ссылка
	|			И (Договоры.ВалютаВзаиморасчетов <> &ВалютаРеглУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Счета
	|		ПО СтрокиДокумента.СчетУчета = Счета.Ссылка
	|			И ((НЕ Счета.Валютный))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяТабЧасти,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов
	|ИЗ
	|	СтрокиДокументов КАК СтрокиДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО СтрокиДокумента.Договор = Договоры.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СтрокиДокумента.ИмяТабЧасти = ""ДебиторскаяЗадолженность""
	|				ТОГДА Договоры.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	|						ИЛИ Договоры.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку))
	|							И СтрокиДокумента.СчетУчета В
	|									(ВЫБРАТЬ
	|										ВТ_СчетаУчетаРасчетовСПоставщиками.Счет
	|									ИЗ
	|										ВТ_СчетаУчетаРасчетовСПоставщиками)
	|						ИЛИ Договоры.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку))
	|							И СтрокиДокумента.СчетУчета В
	|									(ВЫБРАТЬ
	|										ВТ_СчетаУчетаРасчетовСПоставщиками.Счет
	|									ИЗ
	|										ВТ_СчетаУчетаРасчетовСПоставщиками)
	|			ИНАЧЕ Договоры.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|					ИЛИ Договоры.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку))
	|						И СтрокиДокумента.СчетУчета В
	|								(ВЫБРАТЬ
	|									ВТ_СчетаУчетаРасчетовСПокупателями.Счет
	|								ИЗ
	|									ВТ_СчетаУчетаРасчетовСПокупателями)
	|					ИЛИ Договоры.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку))
	|						И СтрокиДокумента.СчетУчета В
	|								(ВЫБРАТЬ
	|									ВТ_СчетаУчетаРасчетовСПокупателями.Счет
	|								ИЗ
	|									ВТ_СчетаУчетаРасчетовСПокупателями)
	|		КОНЕЦ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	СтрукутураРезультатовПроверки = Новый Структура;
	СтрукутураРезультатовПроверки.Вставить("СтрокиДокументаСОшибками", Результат[5].Выбрать());
	СтрукутураРезультатовПроверки.Вставить("АвансыПоРазнымКурсам", Результат[6].Выбрать().Количество());
	
	Возврат СтрукутураРезультатовПроверки;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ВидОперации") Тогда
			
			Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.УдалитьПроведениеВзаимозачета Тогда
				ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.Прочее;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		СуммаДтЗадолженности = ДебиторскаяЗадолженность.Итог("Сумма");
		СуммаКтЗадолженности = КредиторскаяЗадолженность.Итог("Сумма");
	Иначе
		СуммаДтЗадолженности = ДебиторскаяЗадолженность.Итог("СуммаВзаиморасчетов");
		СуммаКтЗадолженности = КредиторскаяЗадолженность.Итог("СуммаВзаиморасчетов");
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив();

	// Проверяем реквизиты шапки:
	Если НЕ ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.Прочее Тогда

		Если НЕ ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности Тогда
		
			МассивНепроверяемыхРеквизитов.Добавить("СчетКт");
			МассивНепроверяемыхРеквизитов.Добавить("СчетДт");
			
		Иначе
			
			Если ДебиторскаяЗадолженность.Количество() > 0 Тогда
				МассивНепроверяемыхРеквизитов.Добавить("СчетКт");
			Иначе
				МассивНепроверяемыхРеквизитов.Добавить("СчетДт");
			КонецЕсли;	
		
			МассивНепроверяемыхРеквизитов.Добавить("КонтрагентКредитор");
			
		КонецЕсли;	

	Иначе
		
		Если ДебиторскаяЗадолженность.Количество() <> 0 
			и КредиторскаяЗадолженность.Количество() <> 0 
			и СуммаКтЗадолженности = СуммаДтЗадолженности Тогда
			
			МассивНепроверяемыхРеквизитов.Добавить("СчетДт");
			МассивНепроверяемыхРеквизитов.Добавить("СчетКт");
			
		ИначеЕсли (ДебиторскаяЗадолженность.Количество() <> 0 и КредиторскаяЗадолженность.Количество() = 0) 
			или (ДебиторскаяЗадолженность.Количество() = 0 и КредиторскаяЗадолженность.Количество() <> 0) Тогда
			
			Если ДебиторскаяЗадолженность.Количество() <> 0 и КредиторскаяЗадолженность.Количество() = 0 Тогда
				
				МассивНепроверяемыхРеквизитов.Добавить("СчетКт");
				МассивНепроверяемыхРеквизитов.Добавить("КонтрагентКредитор");
				
			ИначеЕсли ДебиторскаяЗадолженность.Количество() = 0 и КредиторскаяЗадолженность.Количество() <> 0 Тогда
				
				МассивНепроверяемыхРеквизитов.Добавить("СчетДт");
				МассивНепроверяемыхРеквизитов.Добавить("КонтрагентДебитор");
				
			КонецЕсли;	
			
		КонецЕсли; 	

	КонецЕсли;
	
	Если ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		ИтогДт = ДебиторскаяЗадолженность.Итог("Сумма");
		ИтогКт = КредиторскаяЗадолженность.Итог("Сумма");
	Иначе
		ИтогДт = ДебиторскаяЗадолженность.Итог("СуммаВзаиморасчетов");
		ИтогКт = КредиторскаяЗадолженность.Итог("СуммаВзаиморасчетов");
	КонецЕсли;
	Разница = ИтогДт - ИтогКт;
	// Проверяем корректность табличной части:
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ЗачетАвансов
		или ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности Тогда
		Если Разница <> 0  Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не совпадают суммы дебиторской и кредиторской задолженности при проведении взаимозачета.
				|Дебиторская задолженность: %1 %4, кредиторская задолженность: %2 %4, разница: %3 %4.
				|Взаимозачет не может быть проведен.'"),
				Формат(ИтогДт, "ЧЦ=15; ЧДЦ=2; ЧН=0,00"),
				Формат(ИтогКт, "ЧЦ=15; ЧДЦ=2; ЧН=0,00"),
				Формат(Разница, "ЧЦ=15; ЧДЦ=2; ЧН=0,00"),
				Строка(ВалютаДокумента));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, , "Объект", Отказ);
			
		КонецЕсли;
			
	КонецЕсли;
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности Тогда
		Если ВидАвансаЗадолженности = Перечисления.ВидыАвансаЗадолженности.АвансыПоставщику 
			ИЛИ ВидАвансаЗадолженности = Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя Тогда
			МассивНепроверяемыхРеквизитов.Добавить("КредиторскаяЗадолженность.КорДоговорКонтрагента");
			МассивНепроверяемыхРеквизитов.Добавить("КредиторскаяЗадолженность.КорСчетУчетаРасчетов");
		Иначе
			МассивНепроверяемыхРеквизитов.Добавить("ДебиторскаяЗадолженность.КорДоговорКонтрагента");
			МассивНепроверяемыхРеквизитов.Добавить("ДебиторскаяЗадолженность.КорСчетУчетаРасчетов");
		КонецЕсли;
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ДебиторскаяЗадолженность.КорДоговорКонтрагента");
		МассивНепроверяемыхРеквизитов.Добавить("ДебиторскаяЗадолженность.КорСчетУчетаРасчетов");
		МассивНепроверяемыхРеквизитов.Добавить("КредиторскаяЗадолженность.КорДоговорКонтрагента");
		МассивНепроверяемыхРеквизитов.Добавить("КредиторскаяЗадолженность.КорСчетУчетаРасчетов");
	КонецЕсли;
	
	СтруктураРезультатовПроверки = ПолучитьСтруктуруРезультатовПроверки();
	
	ВыборкаОшибок = СтруктураРезультатовПроверки.СтрокиДокументаСОшибками;
	Пока ВыборкаОшибок.Следующий() Цикл
	
		ТекстСообщения = ВыборкаОшибок.ОписаниеОшибки;
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность",
			НСтр("ru = 'Счет учета'"), ВыборкаОшибок.НомерСтроки, ВыборкаОшибок.СинонимТабЧасти, ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения, ЭтотОбъект, 
			ВыборкаОшибок.ИмяТабЧасти + "[" + Формат(ВыборкаОшибок.НомерСтроки - 1, "ЧДЦ=0; ЧГ=") + "].СчетУчетаРасчетов",
			"Объект", Отказ);
		
	КонецЦикла; 
	
	
	// Проверяем корректность табличной части:
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ЗачетАвансов
		или ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности 
		или (ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.Прочее и Разница = 0) Тогда
	
		Если СтруктураРезультатовПроверки.АвансыПоРазнымКурсам > 1 Тогда
			ТекстСообщения = НСтр("ru = 'Взаимозачет двух авансов, поступивших по разным курсам, не обслуживается.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, ,	"Объект", Отказ);
		КонецЕсли;
		
	КонецЕсли;	
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.КорректировкаДолга.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	// Вид операции "Проведение взаимозачета".
	
	ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, Отказ);

	ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Отказ);
	
	ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Отказ);

	ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Отказ);
		
	СтруктураТаблицВзаимозачета = УчетВзаиморасчетов.ПодготовитьСтруктуруТаблицВзаимозачета(
		ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность, 
		ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, 
		ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность, 
		ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, ПараметрыПроведения.Реквизиты, Отказ);
		
	СтруктураТаблицВзаимозачета = Документы.КорректировкаДолга.ПодготовитьСтруктуруДляСуммовыхРазниц(СтруктураТаблицВзаимозачета, Отказ);	
		
	ТаблицаВзаимозачетаДебиторскаяЗадолженность = СтруктураТаблицВзаимозачета.ТаблицаДебиторскаяЗадолженность;
	
	ТаблицаВзаимозачетаДебиторскаяЗадолженностьВозвратАванса = 
		СтруктураТаблицВзаимозачета.ТаблицаДебиторскаяЗадолженностьВозвратАванса;
		
	ТаблицаВзаимозачетаКредиторскаяЗадолженность = СтруктураТаблицВзаимозачета.ТаблицаКредиторскаяЗадолженность;
	
	ТаблицаВзаимозачетаКредиторскаяЗадолженностьВозвратАванса = 
		СтруктураТаблицВзаимозачета.ТаблицаКредиторскаяЗадолженностьВозвратАванса;
		
	ТаблицыВзаимозачетаСуммовыеРазницыДебиторскаяЗадолженность = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		СтруктураТаблицВзаимозачета.ТаблицаДебиторскаяЗадолженностьСуммовыеРазницы, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, Отказ);
		
	ТаблицыВзаимозачетаСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		СтруктураТаблицВзаимозачета.ТаблицаДебиторскаяЗадолженностьВозвратАвансаСуммовыеРазницы, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Отказ);
		
	ТаблицыВзаимозачетаСуммовыеРазницыКредиторскаяЗадолженность = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		СтруктураТаблицВзаимозачета.ТаблицаКредиторскаяЗадолженностьСуммовыеРазницы, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Отказ);
		
	ТаблицыВзаимозачетаСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		СтруктураТаблицВзаимозачета.ТаблицаКредиторскаяЗадолженностьВозвратАвансаСуммовыеРазницы, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Отказ);
	
	ТаблицаНДСПоРеализациямНеплательщикаВзаимозачет = УчетУСН.ПодготовитьТаблицуНДСПоРеализацииНеплательщиком(
		ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность);
	
	// Таблица списания прочих расчетов по зачитываемой дебиторской задолженности
	ТаблицаПрочихРасчетов = УчетВзаиморасчетов.ПодготовитьТаблицуПрочихРасчетовОплатаПокупателя(
		ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность);
	
	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСНВзаимозачет = Новый Структура;
	СтруктураТаблицУСНВзаимозачет.Вставить("АвансПоставщику", ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса);
	СтруктураТаблицУСНВзаимозачет.Вставить("ДолгПокупателя", ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность);
	СтруктураТаблицУСНВзаимозачет.Вставить("АвансПокупателя", ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса);
	СтруктураТаблицУСНВзаимозачет.Вставить("ДолгПоставщику", ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность);
	СтруктураТаблицУСНВзаимозачет.Вставить("ТаблицаНДСПродажи", ТаблицаНДСПоРеализациямНеплательщикаВзаимозачет);
	
	// Вид операции "Перенос задолженности".
	
	ТаблицаПереносЗадолженностиДебиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПереносЗадолженностиДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, Отказ, "КорректировкаДолга");

	ТаблицаПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Отказ, "КорректировкаДолга");
	
	ТаблицаПереносЗадолженностиКредиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПереносЗадолженностиКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, Отказ, "КорректировкаДолга");

	ТаблицаПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
		ПараметрыПроведения.ТаблицаПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Отказ, "КорректировкаДолга");
		
	ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПереносЗадолженности(
		ТаблицаПереносЗадолженностиДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, Отказ);

	ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПереносЗадолженности(
		ТаблицаПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Отказ);
	
	ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПереносЗадолженности(
		ТаблицаПереносЗадолженностиКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, Отказ);

	ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПереносЗадолженности(
		ТаблицаПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Отказ);
		
	ТаблицыПереносЗадолженностиСуммовыеРазницыДебиторскаяЗадолженность = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, Отказ);
		
	ТаблицыПереносЗадолженностиСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Отказ);
		
	ТаблицыПереносЗадолженностиСуммовыеРазницыКредиторскаяЗадолженность = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, Отказ);
		
	ТаблицыПереносЗадолженностиСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(
		ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Отказ);
	
	// Таблица списания прочих расчетов по переносимой дебиторской задолженности
	// Приход прочих расчетов не производится, т.к. связь с расчетным документом при переносе задолженности в БУ отрывается
	ТаблицаПрочихРасчетовПереносЗадолженности = УчетВзаиморасчетов.ПодготовитьТаблицуПрочихРасчетовОплатаПокупателя(
		ТаблицаПереносЗадолженностиДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность);
	
	Если ЗначениеЗаполнено(ТаблицаПрочихРасчетовПереносЗадолженности) Тогда
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(
			ТаблицаПрочихРасчетовПереносЗадолженности, ТаблицаПрочихРасчетов);
	КонецЕсли;
	
	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСНПереносЗадолженности = Новый Структура;
	СтруктураТаблицУСНПереносЗадолженности.Вставить("АвансПоставщику", ТаблицаПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса);
	СтруктураТаблицУСНПереносЗадолженности.Вставить("ДолгПокупателя", ТаблицаПереносЗадолженностиДебиторскаяЗадолженность);
	СтруктураТаблицУСНПереносЗадолженности.Вставить("АвансПокупателя", ТаблицаПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса);
	СтруктураТаблицУСНПереносЗадолженности.Вставить("ДолгПоставщику", ТаблицаПереносЗадолженностиКредиторскаяЗадолженность);
	
	// Вид операции "Списание задолженности".
	
	ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовСписаниеЗадолженности(
		ПараметрыПроведения.ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, Отказ);

	ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовСписаниеЗадолженности(
		ПараметрыПроведения.ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Отказ);
	
	ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовСписаниеЗадолженности(
		ПараметрыПроведения.ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, Отказ);

	ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса = 
		УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовСписаниеЗадолженности(
		ПараметрыПроведения.ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Отказ);
		
	ТаблицыСписаниеЗадолженностиСуммовыеРазницыДебиторскаяЗадолженность = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, Отказ);
		
	ТаблицыСписаниеЗадолженностиСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Отказ);
		
	ТаблицыСписаниеЗадолженностиСуммовыеРазницыКредиторскаяЗадолженность = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, Отказ);
		
	ТаблицыСписаниеЗадолженностиСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса = 
		УчетНДС.ПодготовитьТаблицуСуммовыхРазниц(ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Отказ);
	
	// Таблица списания прочих расчетов по списываемой дебиторской задолженности
	ТаблицаПрочихРасчетовСписаниеЗадолженности = УчетВзаиморасчетов.ПодготовитьТаблицуПрочихРасчетовОплатаПокупателя(
		ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность);
		
	Если ЗначениеЗаполнено(ТаблицаПрочихРасчетовСписаниеЗадолженности) Тогда
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(
			ТаблицаПрочихРасчетовСписаниеЗадолженности, ТаблицаПрочихРасчетов);
	КонецЕсли;
		
	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСНСписаниеЗадолженности = Новый Структура;
	СтруктураТаблицУСНСписаниеЗадолженности.Вставить("АвансПоставщику", ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса);
	СтруктураТаблицУСНСписаниеЗадолженности.Вставить("ДолгПокупателя", ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность);
	СтруктураТаблицУСНСписаниеЗадолженности.Вставить("АвансПокупателя", ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса);
	СтруктураТаблицУСНСписаниеЗадолженности.Вставить("ДолгПоставщику", ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность);
	
	// Учет доходов и расходов ИП
	СписокОплатДебиторскаяЗадолженностьИП	= УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуОплатыПокупателя(
		ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьИП);

	ТаблицыКредиторскаяЗадолженностьИП	= УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыОплатыПоставщику(
		ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьИП);
		
	ТаблицаОплатыОСиНМА = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуОплатыОСиНМА(
		ТаблицыКредиторскаяЗадолженностьИП, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьИП);
	
	ТаблицаСписанияЗадолженностиПредпринимателюИП	= УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуСписанияЗадолженностиПредпринимателю(
		ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность, ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьИП);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Вид операции "Проведение взаимозачета".
	
	УчетВзаиморасчетов.СформироватьДвиженияВзаимозачет(
		ТаблицаВзаимозачетаДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияВзаимозачет(
		ТаблицаВзаимозачетаДебиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияВзаимозачет(
		ТаблицаВзаимозачетаКредиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияВзаимозачет(
		ТаблицаВзаимозачетаКредиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыВзаимозачетаСуммовыеРазницыДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыВзаимозачетаСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыВзаимозачетаСуммовыеРазницыКредиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
			
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыВзаимозачетаСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
			
	//	НДС курсовые разницы
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	// НДС курсовые разницы налоговый агент		
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаДебиторскаяЗадолженность, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаДебиторскаяЗадолженность, Движения, Отказ);
	
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, ТаблицаВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	//	НДС суммовые разницы	
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыВзаимозачетаСуммовыеРазницыДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, Движения, Отказ);		
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыВзаимозачетаСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыВзаимозачетаСуммовыеРазницыКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);	
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыВзаимозачетаСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	// УСН
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСНВзаимозачет);
		
		
	// Вид операции "Перенос задолженности".
	
	УчетВзаиморасчетов.СформироватьДвиженияПереносЗадолженности(
		ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияПереносЗадолженности(
		ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияПереносЗадолженности(
		ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияПереносЗадолженности(
		ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыПереносЗадолженностиСуммовыеРазницыДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыПереносЗадолженностиСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыПереносЗадолженностиСуммовыеРазницыКредиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыПереносЗадолженностиСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	
		
	//	НДС курсовые разницы
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
					
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	// НДС курсовые разницы налоговый агент			
	
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, ТаблицаВзаиморасчетовПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, ТаблицаВзаиморасчетовПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	
	// НДС суммовые разницы	
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыПереносЗадолженностиСуммовыеРазницыДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);	
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыПереносЗадолженностиСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыПереносЗадолженностиСуммовыеРазницыКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);	
		           		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыПереносЗадолженностиСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	// УСН
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСНПереносЗадолженности);
		
		
	// Вид операции "Списание задолженности".
	
	УчетВзаиморасчетов.СформироватьДвиженияСписаниеЗадолженности(
		ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияСписаниеЗадолженности(
		ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	
	УчетВзаиморасчетов.СформироватьДвиженияСписаниеЗадолженности(
		ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетВзаиморасчетов.СформироватьДвиженияСписаниеЗадолженности(
		ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыДебиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);

	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыКредиторскаяЗадолженность,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетДоходовРасходов.СформироватьДвиженияСуммовыеРазницыРасчетыВУЕ(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса,
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	
		
	// НДС курсовые разницы	
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
					
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницы(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	// НДС курсовые разницы налоговый агент
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
	УчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
			
	// НДС суммовые разницы
		
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыДебиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность, Движения, Отказ);	
			
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыДебиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
			
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыКредиторскаяЗадолженность, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность, Движения, Отказ);	
			
	УчетНДС.СформироватьДвиженияСуммовыеРазницы(
		ТаблицыСписаниеЗадолженностиСуммовыеРазницыКредиторскаяЗадолженностьВозвратАванса, 
		ПараметрыПроведения.РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса, Движения, Отказ);	
		
	// УСН
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСНСписаниеЗадолженности);
	
	// Списание остатков регистра "Прочие расчеты"
	УчетВзаиморасчетов.СформироватьДвиженияПоПрочимРасчетам(ТаблицаПрочихРасчетов, Движения, Отказ);
	
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияОплатаПокупателя(
		СписокОплатДебиторскаяЗадолженностьИП,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияОплатаПоставщику(
		ТаблицыКредиторскаяЗадолженностьИП,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвижениеСписаниеЗадолженностиПредпринимателю(
		ТаблицаСписанияЗадолженностиПредпринимателюИП,
		ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.РегистрацияСведенийОбОплатеОСиНМА(
		ТаблицаОплатыОСиНМА, ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность, Движения, Отказ);
		
	// ПЕРЕОЦЕНКА ВАЛЮТНЫХ ОСТАТКОВ

	ТаблицаПереоценка = УчетДоходовРасходов.ПодготовитьТаблицуПереоценкиДвиженийДокумента(
		ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	УчетУСН.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Отложенные расчеты с контрагентами.
	УчетВзаиморасчетовОтложенноеПроведение.ЗарегистрироватьОтложенныеРасчетыСКонтрагентами(
		ЭтотОбъект, Отказ, ПараметрыПроведения.РасчетыСКонтрагентамиОтложенноеПроведение);
		
	// Регистрация в последовательности
	РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ЭтотОбъект, Отказ, ПараметрыПроведения.РасчетыСКонтрагентамиОтложенноеПроведение);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);

КонецПроцедуры

#КонецЕсли