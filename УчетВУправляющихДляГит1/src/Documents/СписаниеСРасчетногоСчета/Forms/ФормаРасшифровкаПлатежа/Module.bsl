#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьПараметрыВРеквизитыФормы();
	
	ПодготовитьФормуНаСервере();
	
	СписаниеСРасчетногоСчетаФормы.УстановитьВидимостьСчетовУчета(ЭтотОбъект);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И (Модифицированность ИЛИ ПеренестиВДокумент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		
		Отказ = Истина;
		
		Оповещение   = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		
	ИначеЕсли ПеренестиВДокумент Тогда
		
		Отказ = НЕ ПроверитьЗаполнение();
		
		Если Отказ Тогда
			Модифицированность = Истина;
			ПеренестиВДокумент = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("АдресХранилищаРасшифровкаПлатежа", АдресХранилищаРасшифровкаПлатежа);
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Документы.СписаниеСРасчетногоСчета.ОбработкаПроверкиЗаполненияРасшифровкаПлатежа(
		Объект, ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	// Чтобы дважды не вызывать сервер, сразу поместим во временное хранилище 
	// таблицу РасшифровкаПлатежа.
	Если НЕ Отказ Тогда
		АдресХранилищаРасшифровкаПлатежа = ПоместитьРасшифровкаПлатежаВоВременноеХранилище();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасшифровкаПлатежа

&НаКлиенте
Процедура РасшифровкаПлатежаПередУдалением(Элемент, Отказ)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаПередУдалением(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаПриНачалеРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
	// В качестве источника данных для поля на форме выступает таблица значений,
	// поэтому ведем нумерацию ее строк самостоятельно.
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
		ТекущиеДанные.НомерСтроки = РасшифровкаПлатежа.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиентСервер.ОбновитьИтоги(ЭтотОбъект);
	СписаниеСРасчетногоСчетаФормыКлиентСервер.ОпределитьНаличиеРасчетовВУсловныхЕдиницах(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И ОтменаРедактирования Тогда
		СписаниеСРасчетногоСчетаФормыКлиентСервер.ОбновитьИтоги(ЭтотОбъект);
	КонецЕсли;
	
	// Запомним текущие значения в СвойстваПлатежа для подстановки их по умолчанию в новые строки.
	ТекущиеДанные = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	Если НЕ ОтменаРедактирования И ТекущиеДанные <> Неопределено Тогда
		СвойстваПлатежа = СписаниеСРасчетногоСчетаФормыКлиентСервер.ПустаяСтруктураСвойстваПлатежа();
		ЗаполнитьЗначенияСвойств(СвойстваПлатежа, ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПослеУдаления(Элемент)
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаПриИзменении(Элемент)
	
	СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	РасшифровкаПлатежаДоговорКонтрагентаПриИзмененииНаСервере(СтрокаПлатеж.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаОткрытие(Элемент, СтандартнаяОбработка)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаДоговорКонтрагентаОткрытие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаДоговорКонтрагентаОбработкаВыбора(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаДоговорКонтрагентаАвтоПодбор(
		ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаВидПлатежаПоКредитамЗаймамПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаВидПлатежаПоКредитамЗаймамПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаСтатьяДвиженияДенежныхСредствПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСпособПогашенияЗадолженностиПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаСпособПогашенияЗадолженностиПриИзменении(
		ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСделкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаСделкаНачалоВыбора(
		ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаПлатежаПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиентСервер.РасшифровкаПлатежаСуммаПлатежаПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаКурсВзаиморасчетовПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаКурсВзаиморасчетовПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаКурсВзаиморасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаКурсВзаиморасчетовНачалоВыбора(
		ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаВзаиморасчетовПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаСуммаВзаиморасчетовПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСтавкаНДСПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаСтавкаНДСПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСчетУчетаРасчетовСКонтрагентомПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаСчетУчетаРасчетовСКонтрагентомПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаНДСУСНПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаНДСУСНПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаРасходыУСНПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаРасходыУСНПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПолеОтражениеДоходаПриИзменении(Элемент)
	
	СписаниеСРасчетногоСчетаФормыКлиент.РасшифровкаПлатежаПолеОтражениеДоходаПриИзменении(
		ЭтотОбъект, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьПараметрыВРеквизитыФормы()
	
	АдресХранилищаРасшифровкаПлатежа = Параметры.ПараметрыФормы.АдресХранилищаРасшифровкаПлатежа;
	
	Если ЗначениеЗаполнено(АдресХранилищаРасшифровкаПлатежа) Тогда
		ТаблицаРасшифровкаПлатежа = ПолучитьИзВременногоХранилища(АдресХранилищаРасшифровкаПлатежа);
		РасшифровкаПлатежа.Загрузить(ТаблицаРасшифровкаПлатежа);
	КонецЕсли;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		СтрокаПлатеж = РасшифровкаПлатежа.Добавить();
		СтрокаПлатеж.НомерСтроки = РасшифровкаПлатежа.Количество();
	КонецЕсли;
	
	// Создаем структуру с необходимыми реквизитами шапки документа.
	Объект = Новый Структура();
	Объект.Вставить("ВалютаДокумента", Справочники.Валюты.ПустаяСсылка());
	Объект.Вставить("ВидОперации",     Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПустаяСсылка());
	Объект.Вставить("Дата",            '0001-01-01');
	Объект.Вставить("Контрагент",      Справочники.Контрагенты.ПустаяСсылка());
	Объект.Вставить("Организация",     Справочники.Организации.ПустаяСсылка());
	Объект.Вставить("Ссылка",          Параметры.Ключ);
	Объект.Вставить("СчетБанк",        ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Объект.Вставить("СчетКонтрагента", Справочники.БанковскиеСчета.ПустаяСсылка());
	Объект.Вставить("СчетОрганизации", Справочники.БанковскиеСчета.ПустаяСсылка());
	Объект.Вставить("ДополнительныеСвойства", Новый Структура()); // Используется при проверке заполнения.
	Объект.Вставить("БезЗакрывающихДокументов", Ложь);
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры.ПараметрыФормы.Шапка);
	
	// Реквизиты формы, которые не сохраняются в базе данных.
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыФормы);
	
	// Реквизиты, которые требуются на форме для указания в свойствах элементов управления и условном оформлении.
	ВидОперации = Объект.ВидОперации;
	Организация = Объект.Организация;
	Контрагент	= Объект.Контрагент;
	НазначениеПлатежа = Параметры.ПараметрыФормы.Шапка.НазначениеПлатежа;
	БезЗакрывающихДокументов = Объект.БезЗакрывающихДокументов;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	СписаниеСРасчетногоСчетаФормы.УстановитьФункциональныеОпцииФормы(ЭтотОбъект);

	// Заполнение реквизитов формы
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	ОплатаВВалюте = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Объект.СчетБанк).Валютный
		ИЛИ ЗначениеЗаполнено(Объект.ВалютаДокумента) И Объект.ВалютаДокумента <> ВалютаРегламентированногоУчета;
	СписаниеСРасчетногоСчетаФормы.УстановитьПараметрыВыбораДоговораСКонтрагентом(ЭтотОбъект);
	
	СписаниеСРасчетногоСчетаФормы.УстановитьКурсДокумента(ЭтотОбъект);
	
	Элементы.НазначениеПлатежа.Видимость = ЗначениеЗаполнено(НазначениеПлатежа);
	
	Если Объект.БезЗакрывающихДокументов Тогда
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Статья расходов'");
	ИначеЕсли ВестиУчетПоДоговорам И ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств") Тогда
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Договор / Статья расходов'");
	ИначеЕсли ВестиУчетПоДоговорам Тогда
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Договор'");
	Иначе
		ЗаголовокДоговорСтатьяДДС = НСтр("ru = 'Статья расходов'");
	КонецЕсли;
	
	Элементы.РасшифровкаПлатежаГруппаДоговор.Заголовок = ЗаголовокДоговорСтатьяДДС;
	
	Элементы.РасшифровкаПлатежаСчетНаОплату.Видимость = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику")
		И НЕ Объект.БезЗакрывающихДокументов;
	
	БанкИКассаФормы.ЗаполнитьСписокВыбораПорядкаОтраженияДоходаВТЧ(ЭтотОбъект, "РасшифровкаПлатежа");
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	Если СвойстваПлатежа = Неопределено И РасшифровкаПлатежа.Количество() > 0 Тогда
		СвойстваПлатежа = СписаниеСРасчетногоСчетаФормыКлиентСервер.ПустаяСтруктураСвойстваПлатежа();
		Если ЗначениеЗаполнено(РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств) Тогда
			СвойстваПлатежа.СтатьяДвиженияДенежныхСредств = РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ВестиУчетПоДоговорам Тогда
		ПараметрыОбъекта = СписаниеСРасчетногоСчетаФормыКлиентСервер.ТекущиеПараметрыОбъекта(ЭтотОбъект);
		СвойстваПлатежа = СписаниеСРасчетногоСчетаФормы.СвойстваСтрокРасшифровкиПлатежа(ПараметрыОбъекта, Ложь);
		
		ПараметрыЗаполненияСчетовУчета = СписаниеСРасчетногоСчетаФормыКлиентСервер.НачатьЗаполнениеСчетовУчета(
			"Контрагент", Объект, СвойстваПлатежа);
		СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(
			Документы.СписаниеСРасчетногоСчета,
			ПараметрыЗаполненияСчетовУчета.КЗаполнению,
			Объект,
			"РасшифровкаПлатежа",
			СвойстваПлатежа,
			Ложь);
	КонецЕсли;
	Если Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику
		И НЕ ОплатаВВалюте И ВестиУчетПоДоговорам Тогда
		ПредлагатьНовыйДоговор = РаботаСДоговорамиКонтрагентовБП.ПредлагатьНовыйДоговор(Объект.Организация, Объект.Контрагент);
	КонецЕсли;
	
	// Управление внешним видом формы
	СписаниеСРасчетногоСчетаФормы.УправлениеЭлементамиОтраженияВУСНСервер(ЭтотОбъект);
	СписаниеСРасчетногоСчетаФормыКлиентСервер.ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СписаниеСРасчетногоСчетаФормы.УстановитьУсловноеОформлениеРасшифровкаПлатежа(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	СписаниеСРасчетногоСчетаФормы.ЗаполнитьДобавленныеКолонкиТаблиц(ЭтотОбъект);
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПеренумероватьСтроки(Форма)
	
	Для Сч = 0 По Форма.РасшифровкаПлатежа.Количество() - 1 Цикл
		СтрокаПлатеж = Форма.РасшифровкаПлатежа[Сч];
		СтрокаПлатеж.НомерСтроки = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РасшифровкаПлатежаДоговорКонтрагентаПриИзмененииНаСервере(ИдСтроки)
	
	СписаниеСРасчетногоСчетаФормы.РасшифровкаПлатежаДоговорКонтрагентаПриИзмененииВТаблицеНаСервере(ЭтотОбъект, ИдСтроки);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРасшифровкаПлатежаВоВременноеХранилище()
	
	ТаблицаРасшифровкаПлатежа = РасшифровкаПлатежа.Выгрузить();
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаРасшифровкаПлатежа, УникальныйИдентификатор);
	
	Возврат АдресХранилища;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЗАВЕРШЕНИЕ НЕМОДАЛЬНЫХ ВЫЗОВОВ

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
