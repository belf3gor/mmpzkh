#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьПараметрыВРеквизитыФормы();
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И (Модифицированность ИЛИ ПеренестиВДокумент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		
		Отказ = Истина;
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		
	ИначеЕсли ПеренестиВДокумент Тогда
		
		Отказ = НЕ ПроверитьЗаполнение();
		
		Если Отказ Тогда
			Модифицированность = Истина;
			ПеренестиВДокумент = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("АдресХранилищаПеречислениеДепонентов", АдресХранилищаПеречислениеДепонентов);
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Документы.СписаниеСРасчетногоСчета.ОбработкаПроверкиЗаполненияПеречислениеДепонентов(
		Объект, ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	// Чтобы дважды не вызывать сервер, сразу поместим во временное хранилище 
	// таблицу ПеречислениеДепонентов.
	Если НЕ Отказ Тогда
		АдресХранилищаПеречислениеДепонентов = ПоместитьПеречислениеДепонентовВоВременноеХранилище();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПеречислениеДепонентов

&НаКлиенте
Процедура ПеречислениеДепонентовПередУдалением(Элемент, Отказ)
	
	Отказ = ПеречислениеДепонентов.Количество() = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДепонентовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СписаниеСРасчетногоСчетаФормыКлиент.ПеречислениеДепонентовПриНачалеРедактирования(
		ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.ПеречислениеДепонентов.ТекущиеДанные;
		ТекущиеДанные.НомерСтроки = ПеречислениеДепонентов.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДепонентовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СписаниеСРасчетногоСчетаФормыКлиент.ПеречислениеДепонентовПриОкончанииРедактирования(
		ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДепонентовПослеУдаления(Элемент)
	
	ОбновитьИтоги(ЭтотОбъект);
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДепонентовВедомостьПриИзменении(Элемент)
	
	СтрокаПлатеж = Элементы.ПеречислениеДепонентов.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаПлатеж.Ведомость) Тогда
		СтрокаПлатеж.СуммаПлатежа = СписаниеСРасчетногоСчетаФормыВызовСервера.СуммаНеВыплаченнойЗарплатыРаботнику(
			Объект.Ссылка, Объект.Организация, Объект.Дата, Объект.Контрагент, СтрокаПлатеж.Ведомость, УчетЗарплатыИКадровВоВнешнейПрограмме);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДепонентовВедомостьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписаниеСРасчетногоСчетаФормыКлиент.ПеречислениеДепонентовВедомостьНачалоВыбора(
		ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДепонентовВедомостьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ПеречислениеДепонентов.ТекущиеДанные;
	СписаниеСРасчетногоСчетаФормыКлиентСервер.УстановитьПустоеЗначениеПеречислениеДепонентовВедомость(ЭтотОбъект, ТекущиеДанные.Ведомость);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДепонентовВедомостьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СписаниеСРасчетногоСчетаФормыКлиент.ПеречислениеДепонентовВедомостьОбработкаВыбора(
		ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьПараметрыВРеквизитыФормы()
	
	АдресХранилищаПеречислениеДепонентов = Параметры.ПараметрыФормы.АдресХранилищаПеречислениеДепонентов;
	
	Если ЗначениеЗаполнено(АдресХранилищаПеречислениеДепонентов) Тогда
		ТаблицаПеречислениеДепонентов = ПолучитьИзВременногоХранилища(АдресХранилищаПеречислениеДепонентов);
		ПеречислениеДепонентов.Загрузить(ТаблицаПеречислениеДепонентов);
	КонецЕсли;
	
	Если ПеречислениеДепонентов.Количество() = 0 Тогда
		СтрокаПлатеж = ПеречислениеДепонентов.Добавить();
		СтрокаПлатеж.НомерСтроки = ПеречислениеДепонентов.Количество();
	КонецЕсли;
	
	// Создаем структуру с необходимыми реквизитами шапки документа.
	Объект = Новый Структура();
	Объект.Вставить("Дата",        '0001-01-01');
	Объект.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Объект.Вставить("Контрагент",  Справочники.ФизическиеЛица.ПустаяСсылка());
	Объект.Вставить("Ссылка",      Параметры.Ключ);
	Объект.Вставить("ВидОперации", Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПустаяСсылка());
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры.ПараметрыФормы.Шапка);
	
	// Реквизиты формы, которые не сохраняются в базе данных.
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыФормы);
	
	// Реквизиты, которые требуются на форме для указания в свойствах элементов управления и условном оформлении.
	Организация = Объект.Организация;
	НазначениеПлатежа = Параметры.ПараметрыФормы.Шапка.НазначениеПлатежа;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	ОбновитьИтоги(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Элементы = Форма.Элементы;
	
	ИтогоСуммаПлатежа = Форма.ПеречислениеДепонентов.Итог("СуммаПлатежа");
	
	Элементы.ПеречислениеДепонентовСуммаПлатежа.ТекстПодвала = Формат(ИтогоСуммаПлатежа, "ЧЦ=15; ЧДЦ=2");
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
	Элементы.НазначениеПлатежа.Видимость = ЗначениеЗаполнено(НазначениеПлатежа);
	
	// Управление внешним видом формы
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПеренумероватьСтроки(Форма)
	
	Для Сч = 0 По Форма.ПеречислениеДепонентов.Количество() - 1 Цикл
		СтрокаПлатеж = Форма.ПеречислениеДепонентов[Сч];
		СтрокаПлатеж.НомерСтроки = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьПеречислениеДепонентовВоВременноеХранилище()
	
	ТаблицаПеречислениеДепонентов = ПеречислениеДепонентов.Выгрузить();
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаПеречислениеДепонентов, УникальныйИдентификатор);
	
	Возврат АдресХранилища;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЗАВЕРШЕНИЕ НЕМОДАЛЬНЫХ ВЫЗОВОВ

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
