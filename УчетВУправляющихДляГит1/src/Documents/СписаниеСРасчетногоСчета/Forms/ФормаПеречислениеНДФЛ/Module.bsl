#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьПараметрыВРеквизитыФормы();
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И (Модифицированность ИЛИ ПеренестиВДокумент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		
		Отказ = Истина;
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		
	ИначеЕсли ПеренестиВДокумент Тогда
		
		Отказ = НЕ ПроверитьЗаполнение();
		
		Если Отказ Тогда
			Модифицированность = Истина;
			ПеренестиВДокумент = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("АдресХранилищаПеречислениеНДФЛ", АдресХранилищаПеречислениеНДФЛ);
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// Чтобы дважды не вызывать сервер, сразу поместим во временное хранилище 
	// таблицу ПеречислениеНДФЛ.
	
	Документы.СписаниеСРасчетногоСчета.ОбработкаПроверкиЗаполненияПеречислениеНДФЛ(
		Объект, ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	Если НЕ Отказ Тогда
		АдресХранилищаПеречислениеНДФЛ = ПоместитьПеречислениеНДФЛВоВременноеХранилище();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоВедомости(Команда)
	
	ПодобратьВедомость();
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗаполнитьПоВедомостиЮЛ(Команда)
	
	ПодобратьВедомость();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДивидендамЮЛ(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипУчредителя", ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборДивидендовЗавершение", ЭтотОбъект);
	ОткрытьФорму("Документ.НачислениеДивидендов.Форма.ФормаВыбора",
		Новый Структура("Отбор", ПараметрыФормы),
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПеречислениеНДФЛ

&НаКлиенте
Процедура ПеречислениеНДФЛПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеНДФЛПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ОбновитьИтоги(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеНДФЛПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.ПеречислениеНДФЛ.ТекущиеДанные;
		ТекущиеДанные.НомерСтроки = ПеречислениеНДФЛ.Количество();
		Если ТекущиеДанные.НомерСтроки = 1 Тогда
			ТекущиеДанные.Сумма = Объект.СуммаДокумента;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеНДФЛПослеУдаления(Элемент)
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеНДФЛФизическоеЛицоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПеречислениеНДФЛ.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ФизическоеЛицо) Тогда
		ТекущиеДанные.Ставка      = ПредопределенноеЗначение("Перечисление.НДФЛСтавки.Ставка13");
	Иначе
		ТекущиеДанные.Ставка = СтавкаНДФЛФизическогоЛица(ТекущиеДанные.ФизическоеЛицо, Объект.НалоговыйПериод);
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеНДФЛСтавкаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьПараметрыВРеквизитыФормы()
	
	АдресХранилищаПеречислениеНДФЛ = Параметры.ПараметрыФормы.АдресХранилищаПеречислениеНДФЛ;
	
	Если ЗначениеЗаполнено(АдресХранилищаПеречислениеНДФЛ) Тогда
		ТаблицаПеречислениеНДФЛ = ПолучитьИзВременногоХранилища(АдресХранилищаПеречислениеНДФЛ);
		ПеречислениеНДФЛ.Загрузить(ТаблицаПеречислениеНДФЛ);
	КонецЕсли;
	
	// Создаем структуру с необходимыми реквизитами шапки документа.
	Объект = Новый Структура();
	Объект.Вставить("Дата",            '0001-01-01');
	Объект.Вставить("Организация",     Справочники.Организации.ПустаяСсылка());
	Объект.Вставить("Ссылка",          Параметры.Ключ);
	Объект.Вставить("ВидОперации",     Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПустаяСсылка());
	Объект.Вставить("НалоговыйПериод", НачалоМесяца(ТекущаяДатаСеанса()));
	Объект.Вставить("СуммаДокумента",  0);
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры.ПараметрыФормы.Шапка);
	
	// Реквизиты формы, которые не сохраняются в базе данных.
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыФормы);
	
	// Реквизиты, которые требуются на форме для указания в свойствах элементов управления и условном оформлении.
	Организация = Объект.Организация;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ВидимостьГруппы = Ложь;
	Если ПолучитьФункциональнуюОпцию("ВестиУчетЮридическогоЛица") Тогда
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо") = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			ВидимостьГруппы = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаЗаполнитьЮЛ.Видимость    = ВидимостьГруппы;
	Элементы.ЗаполнитьПоВедомости.Видимость = НЕ ВидимостьГруппы;
	
	ПеренумероватьСтроки(ЭтотОбъект);
	ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПеренумероватьСтроки(Форма)
	
	Для Сч = 0 По Форма.ПеречислениеНДФЛ.Количество() - 1 Цикл
		СтрокаПлатеж = Форма.ПеречислениеНДФЛ[Сч];
		СтрокаПлатеж.НомерСтроки = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьПеречислениеНДФЛВоВременноеХранилище()
	
	ТаблицаПеречислениеНДФЛ = ПеречислениеНДФЛ.Выгрузить();
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаПеречислениеНДФЛ, УникальныйИдентификатор);
	
	Возврат АдресХранилища;
	
КонецФункции

&НаКлиенте
Процедура ПодобратьВедомость();
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборВедомостиЗавершение", ЭтотОбъект);
		ОткрытьФорму("Документ.СписаниеСРасчетногоСчета.Форма.ФормаВыборВедомости",
		Объект,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВедомостиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокФизическихЛицПоВедомости(РезультатЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокФизическихЛицПоВедомости(Ведомость)
	
	Получатели = УчетЗарплаты.СписокФизическихЛицДокументаВыплаты(Ведомость);
	ФизическиеЛицаИСтавки = УчетЗарплаты.СтавкиНДФЛФизическихЛиц(Получатели.ВыгрузитьКолонку("ФизическоеЛицо"), КонецМесяца(Объект.НалоговыйПериод));
	Для Каждого СтрокаТаблицы ИЗ ФизическиеЛицаИСтавки Цикл
		МассивСтрок = ПеречислениеНДФЛ.НайтиСтроки(Новый Структура("ФизическоеЛицо", СтрокаТаблицы.ФизическоеЛицо));
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрока = ПеречислениеНДФЛ.Добавить();
			НоваяСтрока.ФизическоеЛицо = СтрокаТаблицы.ФизическоеЛицо;
			НоваяСтрока.НомерСтроки    = ПеречислениеНДФЛ.Количество();
			НоваяСтрока.Ставка         = СтрокаТаблицы.Ставка;
		КонецЕсли;
	КонецЦикла;
	
	Если ПеречислениеНДФЛ.Количество() = 1 Тогда
		ПеречислениеНДФЛ[0].Сумма = Объект.СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборДивидендовЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокФизическихЛицПоДивидендам(РезультатЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокФизическихЛицПоДивидендам(НачислениеДивидендов)
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НачислениеДивидендов, "Дата, Учредитель, СуммаНалога");
	
	МассивСтрок = ПеречислениеНДФЛ.НайтиСтроки(Новый Структура("ФизическоеЛицо, ИсчисленоПоДивидендам", РеквизитыДокумента.Учредитель, Истина));
	Если МассивСтрок.Количество() = 0 Тогда
		ТекущаяСтрока = ПеречислениеНДФЛ.Добавить();
	Иначе
		ТекущаяСтрока = ПеречислениеНДФЛ[0];
	КонецЕсли;
	
	ТекущаяСтрока.ФизическоеЛицо        = РеквизитыДокумента.Учредитель;
	ТекущаяСтрока.НомерСтроки           = ПеречислениеНДФЛ.Количество();
	ТекущаяСтрока.Сумма                 = РеквизитыДокумента.СуммаНалога;
	ТекущаяСтрока.ИсчисленоПоДивидендам = Истина;
	ТекущаяСтрока.Ставка                = УчетЗарплаты.СтавкаНДФЛДивиденды(РеквизитыДокумента.Дата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтавкаНДФЛФизическогоЛица(Знач ФизическоеЛицо, Знач НалоговыйПериод)
	
	ФизическиеЛицаИСтавки = УчетЗарплаты.СтавкиНДФЛФизическихЛиц(ФизическоеЛицо, КонецМесяца(НалоговыйПериод));
	Возврат ФизическиеЛицаИСтавки[0].Ставка;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Форма.Элементы.ПеречислениеНДФЛСумма.ТекстПодвала = Формат(Форма.ПеречислениеНДФЛ.Итог("Сумма"), "ЧЦ=15; ЧДЦ=2; ЧН=' '") ;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЗАВЕРШЕНИЕ НЕМОДАЛЬНЫХ ВЫЗОВОВ

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
