
#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
// Обновляет отображение ранее введенных данных по документам.
Процедура ОбновитьПредыдущиеДанные(ЗаполнитьНовыеДанные = Ложь)

	УсловиеФильтра = "";
	Если НЕ Объект.Ссылка.Пустая() Тогда
		УсловиеФильтра = " И ДокументРегистратор <> &ТекущийДокумент";
	КонецЕсли;
	
	ЗапросПредДокумент = Новый Запрос();
	ЗапросПредДокумент.Текст =
	"ВЫБРАТЬ
	|	КВП_ДокументыФизическихЛицСрезПоследних.ВидДокумента,
	|	КВП_ДокументыФизическихЛицСрезПоследних.Серия,
	|	КВП_ДокументыФизическихЛицСрезПоследних.Номер,
	|	КВП_ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
	|	КВП_ДокументыФизическихЛицСрезПоследних.КемВыдан,
	|	КВП_ДокументыФизическихЛицСрезПоследних.КодПодразделения,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|	(ВЫБРАТЬ
	|		КВП_ДокументыФизическихЛицСрезПоследних.Период КАК Период,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|		КВП_ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	|		КВП_ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|		КВП_ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность 
	|			КАК ЯвляетсяДокументомУдостоверяющимЛичность,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Представление КАК Представление,
	|		КВП_ДокументыФизическихЛицСрезПоследних.УдалитьВидДокумента КАК УдалитьВидДокумента,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ПричинаИзменения КАК ПричинаИзменения,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ДокументРегистратор КАК ДокументРегистратор
	|	ИЗ
	|		РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(&Период, ФизЛицо = &ФизЛицо" + УсловиеФильтра + ") 
	|			КАК КВП_ДокументыФизическихЛицСрезПоследних
	|	ГДЕ
	|		КВП_ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность) 
	|			КАК КВП_ДокументыФизическихЛицСрезПоследних,
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Период, ФизическоеЛицо = &ФизЛицо" + УсловиеФильтра + ") 
	|		КАК ФИОФизЛицСрезПоследних";
	
	ЗапросПредДокумент.УстановитьПараметр("Период",          КонецДня(Объект.Дата));
	ЗапросПредДокумент.УстановитьПараметр("ФизЛицо",         Объект.ФизическоеЛицо);
	ЗапросПредДокумент.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);

	ВыборкаПредДокумент = ЗапросПредДокумент.Выполнить().Выбрать();
	Если ВыборкаПредДокумент.Следующий() Тогда
		ВидДокумента_Пред        = ВыборкаПредДокумент.ВидДокумента;
		СерияДокумента_Пред      = ВыборкаПредДокумент.Серия;
		НомерДокумента_Пред      = ВыборкаПредДокумент.Номер;
		ДатаВыдачиДокумента_Пред = ВыборкаПредДокумент.ДатаВыдачи;
		КемВыданДокумент_Пред    = ВыборкаПредДокумент.КемВыдан;
		КодПодразделения_Пред    = ВыборкаПредДокумент.КодПодразделения;
		
		Фамилия_Пред  = ВыборкаПредДокумент.Фамилия;
		Имя_Пред      = ВыборкаПредДокумент.Имя;
		Отчество_Пред = ВыборкаПредДокумент.Отчество;
	Иначе
		ВидДокумента_Пред = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка();
		СерияДокумента_Пред      = "";
		НомерДокумента_Пред      = "";
		ДатаВыдачиДокумента_Пред = '00010101';
		КемВыданДокумент_Пред         = "";
		КодПодразделения_Пред = "";
		
		Фамилия_Пред  = "";
		Имя_Пред      = "";
		Отчество_Пред = "";
	КонецЕсли;

	Если Объект.ВидДокумента.Пустая() Тогда
		Объект.ВидДокумента = ВидДокумента_Пред;
	КонецЕсли;
	
	Если ЗаполнитьНовыеДанные Тогда
		ЗаполнитьПредыдущимиДанными();
	КонецЕсли;

КонецПроцедуры // ОбновитьПредыдущиеДанные()

&НаСервере
// Процедура заполняет новые данные предыдущими.
//
Процедура ЗаполнитьПредыдущимиДанными()
	
	Объект.ВидДокумента                     = ВидДокумента_Пред;
	Объект.СерияДокумента                   = СерияДокумента_Пред;
	Объект.НомерДокумента                   = НомерДокумента_Пред;
	Объект.ДатаВыдачиДокумента              = ДатаВыдачиДокумента_Пред;
	Объект.КемВыданДокумент                 = КемВыданДокумент_Пред;
	Объект.КодПодразделения                 = КодПодразделения_Пред;
	
	Объект.Фамилия                          = Фамилия_Пред;
	Объект.Имя                              = Имя_Пред;
	Объект.Отчество                         = Отчество_Пред;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УПЖКХ_ТиповыеМетодыСервер.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	УПЖКХ_ТиповыеМетодыСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Устанавливаем значение по умолчанию.
	Если Объект.Ссылка.Пустая() Тогда
		УПЖКХ_ЗаполнениеДокументовСервер.ЗаполнитьШапкуДокумента(Объект, 
																	УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());
		УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	КонецЕсли;
	
	Если Не Объект.ФизическоеЛицо.Пустая() Тогда
		ОбновитьПредыдущиеДанные();
	КонецЕсли;
	
	// Установить доступность формы с учетом ключа СЛК.
	СЗК_МодульЗащитыКлиентСервер.УстановитьДоступностьФормыДляРедактирования(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаСервере
// Обработчик события "ПослеЗаписиНаСервере" формы.
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "Дата".
Процедура ДатаПриИзменении(Элемент)
	
	УПЖКХ_РаботаСДиалогамиКлиентСервер.ПроверитьНомерДокумента(Объект, Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ФизическоеЛицо".
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	ОбновитьПредыдущиеДанные(Истина);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "КемВыданДокумент".
Процедура КемВыданДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ФормаВыбора = ПолучитьФорму("Справочник.КВП_ОВД.ФормаВыбора");
	ФормаВыбора.ВладелецФормы = ЭтаФорма;
	ФормаВыбора.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьВыборОВД", ЭтаФорма);
	ФормаВыбора.Открыть();
	
КонецПроцедуры // КемВыданДокументНачалоВыбора()

&НаКлиенте
// Асинхронный обработчик результата выбора элемента справочника "ОВД".
//
Процедура ОбработатьВыборОВД(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		СтруктураРеквизитовОВД = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьСтруктуруРеквизитовОВД(ВыбранноеЗначение);
		
		Объект.КемВыданДокумент = СтруктураРеквизитовОВД.Наименование;
		Объект.КодПодразделения = СтруктураРеквизитовОВД.КодПодразделения;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработатьВыборОВД()

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	УПЖКХ_ТиповыеМетодыСервер.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти