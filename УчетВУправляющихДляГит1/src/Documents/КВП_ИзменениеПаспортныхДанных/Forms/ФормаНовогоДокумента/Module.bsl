
#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиентеНаСервереБезКонтекста
// Устанавливает видимость элементов формы.
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
		Элементы.НадписьИзмениеПредставленияФИО.Видимость = Форма.ИзменитьПредставлениеФИО;
		Элементы.ПредставлениеФИО.Видимость               = Форма.ИзменитьПредставлениеФИО;
	Иначе
		Элементы.НадписьИзмениеПредставленияФИО.Видимость = Ложь;
		Элементы.ПредставлениеФИО.Видимость               = Ложь;
	КонецЕсли;

КонецПроцедуры // УстановитьВидимость()

&НаСервере
// Обновляет отображение ранее введенных данных по документам.
Процедура ОбновитьПредыдущиеДанные()
	
	ЗапросПредДокумент = Новый Запрос();
	ЗапросПредДокумент.Текст =
	"ВЫБРАТЬ
	|	КВП_ДокументыФизическихЛицСрезПоследних.ВидДокумента,
	|	КВП_ДокументыФизическихЛицСрезПоследних.Серия,
	|	КВП_ДокументыФизическихЛицСрезПоследних.Номер,
	|	КВП_ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
	|	КВП_ДокументыФизическихЛицСрезПоследних.КемВыдан,
	|	КВП_ДокументыФизическихЛицСрезПоследних.КодПодразделения,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|	(ВЫБРАТЬ
	|		КВП_ДокументыФизическихЛицСрезПоследних.Период КАК Период,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|		КВП_ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	|		КВП_ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|		КВП_ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность 
	|			КАК ЯвляетсяДокументомУдостоверяющимЛичность,
	|		КВП_ДокументыФизическихЛицСрезПоследних.Представление КАК Представление,
	|		КВП_ДокументыФизическихЛицСрезПоследних.УдалитьВидДокумента КАК УдалитьВидДокумента,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ПричинаИзменения КАК ПричинаИзменения,
	|		КВП_ДокументыФизическихЛицСрезПоследних.ДокументРегистратор КАК ДокументРегистратор
	|	ИЗ
	|		РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(&Период, ФизЛицо = &ФизЛицо) 
	|			КАК КВП_ДокументыФизическихЛицСрезПоследних
	|	ГДЕ
	|		КВП_ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность) 
	|			КАК КВП_ДокументыФизическихЛицСрезПоследних,
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Период, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
	
	ЗапросПредДокумент.УстановитьПараметр("Период",  КонецДня(Объект.Дата));
	ЗапросПредДокумент.УстановитьПараметр("ФизЛицо", Объект.ФизическоеЛицо);
	
	ВыборкаПредДокумент = ЗапросПредДокумент.Выполнить().Выбрать();
	
	Если ВыборкаПредДокумент.Следующий() Тогда
		Объект.ВидДокумента             = ВыборкаПредДокумент.ВидДокумента;
		Объект.СерияДокумента           = ВыборкаПредДокумент.Серия;
		Объект.НомерДокумента           = ВыборкаПредДокумент.Номер;
		Объект.ДатаВыдачиДокумента      = ВыборкаПредДокумент.ДатаВыдачи;
		Объект.КемВыданДокумент         = ВыборкаПредДокумент.КемВыдан;
		Объект.КодПодразделения         = ВыборкаПредДокумент.КодПодразделения;
		
		Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
			МассивФИО = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьМассивФИО(Объект.ФизическоеЛицо.Наименование);
		Иначе
			МассивФИО = Новый Массив;
			МассивФИО.Добавить("");
			МассивФИО.Добавить("");
			МассивФИО.Добавить("");
		КонецЕсли;
		
		Объект.Фамилия  = ?(ЗначениеЗаполнено(ВыборкаПредДокумент.Фамилия), ВыборкаПредДокумент.Фамилия, МассивФИО[0]);
		Объект.Имя      = ?(ЗначениеЗаполнено(ВыборкаПредДокумент.Имя), ВыборкаПредДокумент.Имя, МассивФИО[1]);
		Объект.Отчество = ?(ЗначениеЗаполнено(ВыборкаПредДокумент.Отчество), ВыборкаПредДокумент.Отчество, МассивФИО[2]);
		
		ПредставлениеФИО = ?(ИзменитьПредставлениеФИО И ЗначениеЗаполнено(Объект.ФизическоеЛицо), 
								Объект.ФизическоеЛицо.Наименование, "");
		
	Иначе
		Объект.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка();
		Объект.СерияДокумента      = "";
		Объект.НомерДокумента      = "";
		Объект.ДатаВыдачиДокумента = '00010101';
		Объект.КемВыданДокумент         = "";
		Объект.КодПодразделения = "";
		
		Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
			МассивФИО = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьМассивФИО(Объект.ФизическоеЛицо.Наименование);
			Объект.Фамилия  = МассивФИО[0];
			Объект.Имя      = МассивФИО[1];
			Объект.Отчество = МассивФИО[2];
		Иначе
			Объект.Фамилия  = "";
			Объект.Имя      = "";
			Объект.Отчество = "";
			ИзменитьПредставлениеФИО = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьПредыдущиеДанные()

&НаКлиенте
// Процедура устанавливает список выбора представления ФИО.
Процедура ОбновитьСписокВыбораПредставленияФИО(Элемент)
	
	Фамилия  = Объект.Фамилия;
	Имя      = Объект.Имя;
	Отчество = Объект.Отчество;
	
	СписокВозможныхНаименований = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Фамилия) Тогда
		СписокВозможныхНаименований.Добавить(Фамилия);
		Если ЗначениеЗаполнено(Имя) Тогда
			СписокВозможныхНаименований.Добавить(СокрЛП(Фамилия) + " " + СокрЛП(Имя));
			СписокВозможныхНаименований.Добавить(СокрЛП(Фамилия) + " " + Лев(Имя,1) + ".");
			Если ЗначениеЗаполнено(Отчество) Тогда
				СписокВозможныхНаименований.Добавить(СокрЛП(Фамилия) + " " + СокрЛП(Имя) + " " + СокрЛП(Отчество));
				СписокВозможныхНаименований.Добавить(СокрЛП(Фамилия) + " " + Лев(Имя,1) + ". " + Лев(Отчество,1)+ ".");
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если ЗначениеЗаполнено(Имя) Тогда
			СписокВозможныхНаименований.Добавить(Имя);
			Если ЗначениеЗаполнено(Отчество) Тогда
				СписокВозможныхНаименований.Добавить(СокрЛП(Имя) + " " + СокрЛП(Отчество));
				СписокВозможныхНаименований.Добавить(СокрЛП(Имя) + ". " + Лев(Отчество,1)+ ".");
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Отчество) Тогда
				СписокВозможныхНаименований.Добавить(Отчество);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Элемент.СписокВыбора.Очистить();
	
	Для Каждого ТекВариант Из СписокВозможныхНаименований Цикл
		Элемент.СписокВыбора.Добавить(ТекВариант.Значение, ТекВариант.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
// Процедура - обработчик события "ПриОткрытии" формы.
Процедура ПриОткрытии(Отказ)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		Отказ = Истина;
		ПолучитьФорму("Документ.КВП_ИзменениеПаспортныхДанных.Форма.ФормаДокумента",
						Новый Структура("Ключ", Объект.Ссылка)).Открыть();
	Иначе
		// Устанавливаем значения по умолчанию.
		Объект.Дата          = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату();
		Объект.Организация   = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
		Объект.Ответственный = УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь();
		
		Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
			ТекущееФизЛицо = Объект.ФизическоеЛицо;
			ОбновитьПредыдущиеДанные();
		КонецЕсли;
		
		УправлениеФормой(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Процедура - обработчик события "ПослеЗаписиНаСервере" формы.
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИзменитьПредставлениеФИО Тогда
		СправочникОбъект = Объект.ФизическоеЛицо.ПолучитьОбъект();
		СправочникОбъект.Наименование = ПредставлениеФИО;
		КВП_ЗаписатьОбъект(СправочникОбъект);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УПЖКХ_Жильцы.Ссылка
		|ИЗ
		|	Справочник.УПЖКХ_Жильцы КАК УПЖКХ_Жильцы
		|ГДЕ
		|	УПЖКХ_Жильцы.ФизЛицо = &ФизЛицо";
		
		Запрос.УстановитьПараметр("ФизЛицо", Объект.ФизическоеЛицо);
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		Для Каждого Результат Из РезультатЗапроса Цикл
			ЖилецОбъект = Результат.Ссылка.ПолучитьОбъект();
			ЖилецОбъект.Наименование = ПредставлениеФИО;
			КВП_ЗаписатьОбъект(ЖилецОбъект);
		КонецЦикла;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ФизическоеЛицо".
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	Если ТекущееФизЛицо <> Объект.ФизическоеЛицо Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ФизическоеЛицоПриИзмененииЗавершение", ЭтотОбъект), "Данные будут перезаполнены!", РежимДиалогаВопрос.ОКОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Ок Тогда
		ОбновитьПредыдущиеДанные();
		ТекущееФизЛицо = Объект.ФизическоеЛицо;
	Иначе
		Объект.ФизическоеЛицо = ТекущееФизЛицо;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" флага "Изменить представление ФИО".
Процедура ИзменитьПредставлениеФИОПриИзменении(Элемент)
	
	ПредставлениеФИО = ?(ЗначениеЗаполнено(Объект.ФизическоеЛицо), 
							УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.ФизическоеЛицо, "Наименование"), "");
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля ввода представления ФИО.
Процедура ПредставлениеФИОПриИзменении(Элемент)
	
	ФИО = ПредставлениеФИО;
	
	Если ПустаяСтрока(Объект.Фамилия) Или Объект.Ссылка.Пустая() Тогда
		МассивФИО = УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьМассивФИО(ФИО);
		Объект.Фамилия  = МассивФИО[0];
		Объект.Имя      = МассивФИО[1];
		Объект.Отчество = МассивФИО[2];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля ввода представления ФИО.
Процедура ПредставлениеФИОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбновитьСписокВыбораПредставленияФИО(Элемент);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля ввода "ДокументКемВыдан".
Процедура КемВыданДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ФормаВыбора = ПолучитьФорму("Справочник.КВП_ОВД.ФормаВыбора");
	ФормаВыбора.ВладелецФормы = ЭтаФорма;
	ФормаВыбора.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьВыборОВД", ЭтаФорма);
	ФормаВыбора.Открыть();
	
КонецПроцедуры // КемВыданДокументНачалоВыбора()

&НаКлиенте
// Асинхронный обработчик результата выбора элемента справочника "ОВД".
//
Процедура ОбработатьВыборОВД(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		СтруктураРеквизитовОВД = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьСтруктуруРеквизитовОВД(ВыбранноеЗначение);
		
		Объект.КемВыданДокумент = СтруктураРеквизитовОВД.Наименование;
		Объект.КодПодразделения = СтруктураРеквизитовОВД.КодПодразделения;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработатьВыборОВД()

#КонецОбласти