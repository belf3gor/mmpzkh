#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура();
	
	Возврат СтруктураПечатныхФорм;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Функция возвращает таблицу значений с физическими лицами и степенями родства.
//
// Параметры:
//  ФизЛицоОсновное - Элемент справочника Физические лица для которого необходимо найти родственных физ лиц.
//
// Возвращаемое значение:
//  Таблица значений, содержащая физлиц и родственные связи.
//
Функция ПолучитьТаблицуСвязанныхФизЛиц(ФизЛицоОсновное) Экспорт
	
	Запрос = Новый Запрос;
	
	// Не заполненная степень родства означает отсутствие родственной связи.
	// Отбор накладывается в секции ГДЕ, а не в параметрах виртуальной таблицы
	// для того, чтобы сперва получить всех родственников с не заполненной родственной
	// связью, а затем их отсечь.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтепеньРодстваФизЛиц.ФизическоеЛицоСвязанное КАК ФизическоеЛицоСвязанное,
	|	СтепеньРодстваФизЛиц.СтепеньРодства КАК СтепеньРодства
	|ИЗ
	|	РегистрСведений.УПЖКХ_СтепеньРодстваФизЛиц.СрезПоследних(&Дата, ФизическоеЛицоОсновное = &ФизЛицоОсновное) КАК СтепеньРодстваФизЛиц
	|ГДЕ
	|	НЕ СтепеньРодстваФизЛиц.СтепеньРодства = ЗНАЧЕНИЕ(Справочник.КВП_ТипыРодственныхСвязей.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Дата", Новый Граница(Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ФизЛицоОсновное", ФизЛицоОсновное);
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Возврат Запрос.Выполнить().Выгрузить();
	Иначе
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииПроведенияДокумента

// Формирует движения по регистру "СтепеньРодстваФизЛиц".
//
Процедура ДвиженияПоРегиструСтепенейРодстваФизЛиц(СтруктураШапкиДокумента, ТаблицаСвязанныеФизЛица)
	
	Для Каждого ТекСтрока Из ТаблицаСвязанныеФизЛица Цикл
		// Регистр УПЖКХ_СтепеньРодстваФизЛиц
		Движение = Движения.УПЖКХ_СтепеньРодстваФизЛиц.Добавить();
		Движение.Период                  = СтруктураШапкиДокумента.Дата;
		Движение.ФизическоеЛицоСвязанное = ТекСтрока.ФизЛицоСвязанное;
		Движение.ФизическоеЛицоОсновное  = ТекСтрока.ФизЛицоОсновное;
		Движение.СтепеньРодства          = ТекСтрока.СтепеньРодства;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДокумента

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Обработчик события "ОбработкаПроверкиЗаполнения" документа.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если СвязанныеФизЛица.Количество() = 0 Тогда
		КВП_ПрочиеПроцедурыИФункции.ОшибкаПриПроведении("Таблица связанных физлиц пустая. 
		                                                 |Проведение документа невозможно.", Отказ);
		Отказ = Истина;
	Иначе
		
		Для Каждого Строка Из СвязанныеФизЛица Цикл
			
			Если Не ЗначениеЗаполнено(Строка.ФизЛицоСвязанное) Тогда
				УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Для """ + Строка.ФизЛицоОсновное + """ имеются"
						+ " незаполненные значения в колонке ""ФизЛицо"". Проведение документа невозможно.");
				Отказ   = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура проведения документа.
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПараметрыПроведения = Документы.УПЖКХ_СменаСтепениРодстваФизЛиц.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента = ПараметрыПроведения.Реквизиты;
	ТаблицаСвязанныеФизЛица = ПараметрыПроведения.ТаблицаСвязанныеФизЛица;
	
	Если НЕ Отказ Тогда
		ДвиженияПоРегиструСтепенейРодстваФизЛиц(СтруктураШапкиДокумента, ТаблицаСвязанныеФизЛица);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли