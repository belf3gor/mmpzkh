#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
// Процедура удаляет строки из табличной части ОсновныеФизЛица, если они потеряли актуальность.
Процедура УдалитьНеАктуальныеЗаписиИзТаблицы(ФизЛицо)
	
	НайденныеСтроки = Объект.СвязанныеФизЛица.НайтиСтроки(Новый Структура("ФизЛицоОсновное", ФизЛицо));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Для Каждого Строка Из НайденныеСтроки Цикл
			Объект.СвязанныеФизЛица.Удалить(Строка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Процедура заполняет табличную часть связанных физлиц.
Процедура ЗаполнитьТаблицуСвязанныхФизЛиц(ФизЛицоОсновное)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ТаблицаСтепенейРодства = ДокументОбъект.ПолучитьТаблицуСвязанныхФизЛиц(ФизЛицоОсновное);
	
	Если ТаблицаСтепенейРодства.Количество() > 0 Тогда
		
		Для Каждого Строка Из ТаблицаСтепенейРодства Цикл
			
			НоваяСтрока = Объект.СвязанныеФизЛица.Добавить();
			НоваяСтрока.ФизЛицоОсновное  = ФизЛицоОсновное;
			НоваяСтрока.ФизЛицоСвязанное = Строка.ФизическоеЛицоСвязанное;
			НоваяСтрока.СтепеньРодства   = Строка.СтепеньРодства;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Функция возвращает текущее физлицо из табличной части.
Функция ПолучитьТекущееФизЛицо(ТекДанные)
	
	ТекущиеДанные = ТекДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат ТекущиеДанные.ФизЛицо;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриЧтенииНаСервере" формы.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УПЖКХ_ТиповыеМетодыСервер.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
// Процедура - обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	УПЖКХ_ТиповыеМетодыСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		УПЖКХ_ЗаполнениеДокументовСервер.ЗаполнитьШапкуДокумента(Объект,
																	УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь());
		УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	КонецЕсли;
	
	// Установить доступность формы с учетом ключа СЛК.
	СЗК_МодульЗащитыКлиентСервер.УстановитьДоступностьФормыДляРедактирования(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры

&НаСервере
// Процедура - обработчик события "ПослеЗаписиНаСервере" формы.
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКоманднойПанели

&НаКлиенте
// Процедура обработчик события "ПриАктивизацииПоля" табличной части ОсновныеФизЛица.
Процедура ОсновныеФизЛицаПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		Элементы.СвязанныеФизЛица.ОтборСтрок = Новый ФиксированнаяСтруктура("ФизЛицоОсновное", Элемент.ТекущиеДанные.ФизЛицо);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "ОбработкаВыбора" поля ввода ФизЛицо табличной части ОсновныеФизЛица.
Процедура ОсновныеФизЛицаФизЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекФизЛицо = ПолучитьТекущееФизЛицо(Элементы.ОсновныеФизЛица.ТекущиеДанные);
	
	Если НЕ ТекФизЛицо = Неопределено И НЕ ТекФизЛицо = ВыбранноеЗначение Тогда
		
		УдалитьНеАктуальныеЗаписиИзТаблицы(ТекФизЛицо);
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			НайденныеСтроки = Объект.ОсновныеФизЛица.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение));
			Если НайденныеСтроки.Количество() > 0 Тогда
				УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(
					Строка(ВыбранноеЗначение) + " уже имеется в табличной части ""Основные физлица"".");
				СтандартнаяОбработка = Ложь;
			Иначе
				ЗаполнитьТаблицуСвязанныхФизЛиц(ВыбранноеЗначение);
				Элементы.СвязанныеФизЛица.ОтборСтрок = Новый ФиксированнаяСтруктура("ФизЛицоОсновное", ВыбранноеЗначение);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "ПриАктивизацииСтроки" табличной части ОсновныеФизЛица.
Процедура ОсновныеФизЛицаПередУдалением(Элемент, Отказ)
	
	ТекФизЛицо = ПолучитьТекущееФизЛицо(Элементы.ОсновныеФизЛица.ТекущиеДанные);
	
	Если ЗначениеЗаполнено(ТекФизЛицо) Тогда
		УдалитьНеАктуальныеЗаписиИзТаблицы(ТекФизЛицо);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "ПередНачаломДобавления" табличной части СвязанныеФизЛица.
Процедура СвязанныеФизЛицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Элементы.ОсновныеФизЛица.ТекущиеДанные = Неопределено
	 ИЛИ НЕ ЗначениеЗаполнено(Элементы.ОсновныеФизЛица.ТекущиеДанные.ФизЛицо) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Перед добавлением связанных физлиц необходимо указать основное физлицо.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "ПриНачалеРедактирования" табличной части СвязанныеФизЛица.
Процедура СвязанныеФизЛицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ФизЛицоОсновное = Элементы.ОсновныеФизЛица.ТекущиеДанные.ФизЛицо;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "ОбработкаВыбора" поля ввода ФизЛицоСвязанное табличной части СвязанныеФизЛица.
Процедура СвязанныеФизЛицаФизЛицоСвязанноеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекДанные = Элементы.СвязанныеФизЛица.ТекущиеДанные;
	
	Если НЕ ТекДанные = Неопределено И НЕ ТекДанные.ФизЛицоСвязанное = ВыбранноеЗначение
	   И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		НайденныеСтроки = Объект.СвязанныеФизЛица.НайтиСтроки(Новый Структура("ФизЛицоСвязанное, ФизЛицоОсновное",
		                                                      ВыбранноеЗначение,
		                                                      ПолучитьТекущееФизЛицо(Элементы.ОсновныеФизЛица.ТекущиеДанные)));
		Если НайденныеСтроки.Количество() > 0 Тогда
			УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(
				Строка(ВыбранноеЗначение) + " уже имеется в табличной части ""Связанные физлица"".");
			СтандартнаяОбработка = Ложь;
		Иначе
			Если ВыбранноеЗначение = Элементы.ОсновныеФизЛица.ТекущиеДанные.ФизЛицо Тогда
				УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Нельзя указать родственную связь физлица к этому же физлицу.");
				СтандартнаяОбработка = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "НачалоВыбора" поля ввода ФизЛицоСвязанное табличной части СвязанныеФизЛица.
Процедура СвязанныеФизЛицаФизЛицоСвязанноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.УПЖКХ_ФормаВыбораСотрудников",
								Новый Структура("ТекущаяСтрока", Элементы.СвязанныеФизЛица.ТекущиеДанные.ФизЛицоСвязанное), Элемент);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	УПЖКХ_ТиповыеМетодыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	УПЖКХ_ТиповыеМетодыСервер.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	УПЖКХ_ТиповыеМетодыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти