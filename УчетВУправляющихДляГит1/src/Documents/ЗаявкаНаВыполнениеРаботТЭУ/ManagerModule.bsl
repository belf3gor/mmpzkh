
Процедура ПечатьАкт(ТабДок, Ссылка) Экспорт

	Макет = Документы.ЗаявкаНаВыполнениеРаботТЭУ.ПолучитьМакет("ПечатьАкт");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявкаНаВыполнениеРаботТЭУ.Дата,
	|	ЗаявкаНаВыполнениеРаботТЭУ.ДатаНачалоРабот,
	|	ЗаявкаНаВыполнениеРаботТЭУ.ДатаОкончанияРабот,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Заказчик,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Комментарий,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Номер,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Организация,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Ответственный,
	|	ЗаявкаНаВыполнениеРаботТЭУ.ОценкаВыполнения,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Подразделение,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Склад,
	|	ЗаявкаНаВыполнениеРаботТЭУ.ТеплоУзел,
	|	ЗаявкаНаВыполнениеРаботТЭУ.ТеплоУзел2,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Участок,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Работы.(
	|		ВидРабот
	|	),
	|	ЗаявкаНаВыполнениеРаботТЭУ.НарядЗаказ.(
	|		Номенклатура,
	|		ВидМатериала,
	|		Количество,
	|		ЕдиницаИзмерения,
	|		Склад
	|	),
	|	ЗаявкаНаВыполнениеРаботТЭУ.СоставЗвена.(
	|		Мастер,
	|		Должность,
	|		ВремяРаботы
	|	),
	|	ЗаявкаНаВыполнениеРаботТЭУ.МашиныИМеханизмы.(
	|		Время,
	|		ВидТехники
	|	),
	|	ЗаявкаНаВыполнениеРаботТЭУ.АдресПроведенияРаботы
	|ИЗ
	|	Документ.ЗаявкаНаВыполнениеРаботТЭУ КАК ЗаявкаНаВыполнениеРаботТЭУ
	|ГДЕ
	|	ЗаявкаНаВыполнениеРаботТЭУ.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	
	    		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Мастер КАК Мастер,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Должность КАК Должность,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Ссылка КАК Ссылка,
	|	СУММА(ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.ВремяРаботы) КАК ВремяРаботы
	|ИЗ
	|	Документ.ЗаявкаНаВыполнениеРаботТЭУ.СоставЗвена КАК ЗаявкаНаВыполнениеРаботТЭУСоставЗвена
	|ГДЕ
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Ссылка В(&Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Должность,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Мастер,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Ссылка
	|ИТОГИ
	|	СУММА(ВремяРаботы)
	|ПО
	|	Должность";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСоставЗвена = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
		
	
	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьРаботыШапка = Макет.ПолучитьОбласть("РаботыШапка");
	ОбластьРаботы = Макет.ПолучитьОбласть("Работы");
	ОбластьНаименованиеРабот = Макет.ПолучитьОбласть("Работы | НаименованиеРабот");
	ОбластьНаименованиеДолжность = Макет.ПолучитьОбласть("Работы | НаименованиеДолжность");
	ОбластьНаименованиеМатериалов= Макет.ПолучитьОбласть("Работы | НаименованиеМатериалов");
	ОбластьНаименованиеАвто = Макет.ПолучитьОбласть("Работы | НаименованиеАвто");
	//ОбластьМашиныИМеханизмыШапка = Макет.ПолучитьОбласть("МашиныИМеханизмыШапка");
	//ОбластьМашиныИМеханизмы = Макет.ПолучитьОбласть("МашиныИМеханизмы");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСверху = 7;
	ТабДок.ПолеСлева = 2;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСправа = 2;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл

		Шапка.Параметры.Заполнить(Выборка);
		Если ЗначениеЗаполнено(Выборка.ТеплоУзел2) тогда
		Шапка.Параметры.Участок =  "От " + Выборка.ТеплоУзел + " до " + Выборка.ТеплоУзел2 + " " + Выборка.АдресПроведенияРаботы ;
	Иначе
		Шапка.Параметры.Участок =  Выборка.ТеплоУзел.наименование + " " + Выборка.АдресПроведенияРаботы     ;
		КонецЕсли;
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьРаботыШапка);
		ВыборкаРаботы = Выборка.Работы.Выбрать();
		ВыборкаНарядЗаказ = Выборка.НарядЗаказ.Выбрать();
		//ВыборкаСоставЗвена = Выборка.СоставЗвена.Выбрать();
		ВыборкаМашиныИМеханизмы = Выборка.МашиныИМеханизмы.Выбрать();



		номерСтр=1;
		стр = 0;
		Пока стр  < 28 Цикл
			
			ОбластьРаботы.Параметры.ВидРабот ="";
			ОбластьРаботы.Параметры.Номенклатура = "";
			ОбластьРаботы.Параметры.Должность = "";
			ОбластьРаботы.Параметры.ВидТехники = "";
			ОбластьРаботы.Параметры.НомерСтр = "";
			ОбластьРаботы.Параметры.Время = "";
			ОбластьРаботы.Параметры.ВремяРаботы = "";
			ОбластьРаботы.Параметры.Количество = "";
			ОбластьРаботы.Параметры.ЕдиницаИзмерения = "";
			ОбластьРаботы.Параметры.Разряд = "";
			ОбластьРаботы.Параметры.кол = "";
			
			Если ВыборкаРаботы.Следующий() тогда
			ОбластьРаботы.Параметры.ВидРабот = ВыборкаРаботы.ВидРабот ;
			ОбластьРаботы.Параметры.НомерСтр = номерСтр;
		КонецЕсли;
		
			Если ВыборкаНарядЗаказ.Следующий() тогда 
			ОбластьРаботы.Параметры.Номенклатура = ВыборкаНарядЗаказ.Номенклатура;
			ОбластьРаботы.Параметры.ЕдиницаИзмерения = ВыборкаНарядЗаказ.ЕдиницаИзмерения;
			ОбластьРаботы.Параметры.Количество = ВыборкаНарядЗаказ.Количество;
			 КонецЕсли;
			
		Если ВыборкаСоставЗвена.Следующий() тогда
			ОбластьРаботы.Параметры.Должность = ВыборкаСоставЗвена.Должность;
			ОбластьРаботы.Параметры.Разряд = ВыборкаСоставЗвена.Должность.Разряд;
			 выборкаКол =  ВыборкаСоставЗвена.Выбрать();
			ОбластьРаботы.Параметры.кол = выборкаКол.Количество();
			ОбластьРаботы.Параметры.ВремяРаботы = ВыборкаСоставЗвена.ВремяРаботы;
		КонецЕсли;
		
			Если ВыборкаМашиныИМеханизмы.Следующий() тогда
			ОбластьРаботы.Параметры.ВидТехники = ВыборкаМашиныИМеханизмы.ВидТехники;
			ОбластьРаботы.Параметры.Время = ВыборкаМашиныИМеханизмы.Время;
			 КонецЕсли;
			ТабДок.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());
			номерСтр = номерСтр +1;
			стр=стр+1;
		КонецЦикла;

		//
		////ВыборкаНарядЗаказ = Выборка.НарядЗаказ.Выбрать();
		//Пока ВыборкаНарядЗаказ.Следующий() Цикл
		//	ОбластьРаботы.Параметры.Заполнить(ВыборкаНарядЗаказ);
		//	ТабДок.Вывести(ОбластьРаботы, ВыборкаНарядЗаказ.Уровень());
		//КонецЦикла;
		//
		//////ТабДок.Вывести(ОбластьСоставЗвенаШапка);
		////ВыборкаСоставЗвена = Выборка.СоставЗвена.Выбрать();
		//Пока ВыборкаСоставЗвена.Следующий() Цикл
		//	ОбластьРаботы.Параметры.Заполнить(ВыборкаСоставЗвена);
		//	ТабДок.Вывести(ОбластьРаботы, ВыборкаСоставЗвена.Уровень());
		//КонецЦикла;

		//////ТабДок.Вывести(ОбластьМашиныИМеханизмыШапка);
		////ВыборкаМашиныИМеханизмы = Выборка.МашиныИМеханизмы.Выбрать();
		//Пока ВыборкаМашиныИМеханизмы.Следующий() Цикл
		//	ОбластьРаботы.Параметры.Заполнить(ВыборкаМашиныИМеханизмы);
		//	ТабДок.Вывести(ОбластьРаботы, ВыборкаМашиныИМеханизмы.Уровень());
		//КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		КонецЦикла;
	
КонецПроцедуры

Процедура ПечатьНарядЗадание(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать наряд-задание)
	Макет = Документы.ЗаявкаНаВыполнениеРаботТЭУ.ПолучитьМакет("Печать наряд-задание");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявкаНаВыполнениеРаботТЭУ.Дата,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Номер,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Организация,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Подразделение,
	|	ЗаявкаНаВыполнениеРаботТЭУ.Работы.(
	|		НомерСтроки,
	|		ВидРабот,
	|		ВремяФакт,
	|		ОбъемФакт
	|	),
	|	ЗаявкаНаВыполнениеРаботТЭУ.НарядЗаказ.(
	|		Номенклатура,
	|		Количество,
	|		ЕдиницаИзмерения,
	|		Склад
	|	),
	|	ЗаявкаНаВыполнениеРаботТЭУ.СоставЗвена.(
	|		Мастер,
	|		Должность,
	|		ВремяРаботы
	|	),
	|	ЗаявкаНаВыполнениеРаботТЭУ.ТеплоУзел,
	|	ЗаявкаНаВыполнениеРаботТЭУ.ТеплоУзел2,
	|	ЗаявкаНаВыполнениеРаботТЭУ.АдресПроведенияРаботы
	|ИЗ
	|	Документ.ЗаявкаНаВыполнениеРаботТЭУ КАК ЗаявкаНаВыполнениеРаботТЭУ
	|ГДЕ
	|	ЗаявкаНаВыполнениеРаботТЭУ.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Мастер КАК Мастер,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Должность КАК Должность,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Ссылка КАК Ссылка,
	|	СУММА(ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.ВремяРаботы) КАК ВремяРаботы
	|ИЗ
	|	Документ.ЗаявкаНаВыполнениеРаботТЭУ.СоставЗвена КАК ЗаявкаНаВыполнениеРаботТЭУСоставЗвена
	|ГДЕ
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Ссылка В(&Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Должность,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Мастер,
	|	ЗаявкаНаВыполнениеРаботТЭУСоставЗвена.Ссылка
	|ИТОГИ
	|	СУММА(ВремяРаботы)
	|ПО
	|	Должность";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСоставЗвена = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	

	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьРаботыШапка = Макет.ПолучитьОбласть("РаботыШапка");
	ОбластьРаботы = Макет.ПолучитьОбласть("Работы");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьЗаголовокМатериалы = Макет.ПолучитьОбласть("ЗаголовокМатериалы");
	ОбластьШапкаМатериалы = Макет.ПолучитьОбласть("ШапкаМатериалы");
	ОбластьМатериалы = Макет.ПолучитьОбласть("Материалы");
	ОбластьПодвалМатериалы = Макет.ПолучитьОбласть("ПодвалМатериалы"); 
	ТабДок.Очистить();
		ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСверху = 7;
	ТабДок.ПолеСлева = 2;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСправа = 2;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	 ТабДок.ОтображатьЗаголовки = истина;
	
	 Спецальность = "";
	 ФИО = "";
	 выборкаКол = 0;
	Пока Выборка.Следующий() Цикл

		

				ВыборкаРаботы = Выборка.Работы.Выбрать();
		

	
		//ВыборкаСоставЗвена = Выборка.СоставЗвена.Выбрать();
		Пока ВыборкаСоставЗвена.Следующий() Цикл
			выборкаКол =  ВыборкаСоставЗвена.Выбрать();
			    Кол = выборкаКол.Количество();

				Спецальность = Спецальность + ВыборкаСоставЗвена.Должность.Наименование + "(" + Кол + "), " ;
						КонецЦикла;
		       ВыборкаСоставЗвена = Выборка.СоставЗвена.Выбрать();
			   
			   Пока ВыборкаСоставЗвена.Следующий() цикл
				   ФИО = ФИО +  ВыборкаСоставЗвена.Мастер.Наименование + ", ";

				КонецЦикла;
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.Спецальность = Спецальность;
		Шапка.параметры.ФИО = ФИО;
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		ТабДок.Вывести(ОбластьРаботыШапка);
		
		стр = 0;
		Пока стр < 20 Цикл
			Если ВыборкаРаботы.Следующий() тогда
				
				Если ЗначениеЗаполнено(Выборка.ТеплоУзел2) тогда
					ОбластьРаботы.Параметры.Участок =  "От " + Выборка.ТеплоУзел + " до " + Выборка.ТеплоУзел2 + " " +Выборка.АдресПроведенияРаботы  ;
				Иначе
					ОбластьРаботы.Параметры.Участок =  Выборка.ТеплоУзел.наименование + " " +Выборка.АдресПроведенияРаботы    ;
				КонецЕсли;

			ОбластьРаботы.Параметры.Заполнить(ВыборкаРаботы);
			 ОбластьРаботы.Параметры.Дата = Выборка.Дата;
		 Иначе
			 ОбластьРаботы.Параметры.Дата = "";
			 ОбластьРаботы.Параметры.ВидРабот = "";
			 ОбластьРаботы.Параметры.НомерСтроки = "";
			 ОбластьРаботы.Параметры.Участок = "";

			КонецЕсли;
			ТабДок.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());
			стр = стр +1;
		КонецЦикла;
		   ТабДок.Вывести(ОбластьПодвал);
		   
		   ТабДок.Вывести(ОбластьЗаголовокМатериалы);
		   ТабДок.Вывести(ОбластьШапкаМатериалы);

		  	ВыборкаНарядЗаказ = Выборка.НарядЗаказ.Выбрать();
			стр = 0;
			Пока стр < 20 Цикл
			Если	ВыборкаНарядЗаказ.Следующий()  тогда
			ОбластьМатериалы.Параметры.Заполнить(ВыборкаНарядЗаказ);
			Иначе
			  ОбластьМатериалы.Параметры.Номенклатура ="";
			  ОбластьМатериалы.Параметры.ЕдиницаИзмерения = "";
			  ОбластьМатериалы.Параметры.Количество = "";
			КонецЕсли;
			ТабДок.Вывести(ОбластьМатериалы);
			стр = стр+1;

		КонецЦикла;

		    ТабДок.вывести(ОбластьПодвалМатериалы);
		
	КонецЦикла;
	//}}
КонецПроцедуры
