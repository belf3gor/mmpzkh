&НаКлиенте
	Процедура СоставЗвенаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.СоставЗвена.ТекущиеДанные;
	сотрудник = СтрокаТабличнойЧасти.Должность;
	//СтрокаТабличнойЧасти.Тариф = ТекСотр(сотрудник);
	
    СтрокаТабличнойЧасти.Сумма =  СтрокаТабличнойЧасти.Тариф * СтрокаТабличнойЧасти.ВремяРаботы;
	ОбновитьИтоги(ЭтаФорма);
		//СоставЗвенаМастерПриИзмененииНаСервере();

	КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
	
	// Обновляет итоги табличной части.
Процедура ОбновитьИтоги(Форма)
	
	Объект = Форма.Объект;
		
	Форма.ИтогиВсего    = Объект.НарядЗаказ.Итог("Сумма")+ Объект.СоставЗвена.Итог("Сумма") +  Объект.МашиныИМеханизмы.Итог("Сумма");
	//Форма.ИтогиВсегоНДС = Объект.НарядЗаказ.Итог("СуммаНДС");
	
КонецПроцедуры


&НаКлиенте
Процедура СоставЗвенаДолжностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтрТабЧ = Элементы.СоставЗвена.ТекущиеДанные;
	СтрТабЧ.Тариф = НайтиТариф(ВыбранноеЗначение);
	СтрТабЧ.Должность = ВыбранноеЗначение;
КонецПроцедуры


функция НайтиТариф(ВыбранноеЗначение)
	Возврат ВыбранноеЗначение.ТарифнаяСтавкаСДоплатой;
КонецФункции


&НаКлиенте
// Обработчик события "ПриИзменении" поля "НарядЗаказ".
Процедура НарядЗаказПриИзменении(Элемент)
	
	ТекСтрокаТабЧасти = Элементы.НарядЗаказ.ТекущиеДанные;
	РассчитатьСтрокуТабЧастиНарядЗаказ(ТекСтрокаТабЧасти);

	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "НарядЗаказКоличествоПлан".
Процедура НарядЗаказКоличествоПланПриИзменении(Элемент)
	
	ТекСтрокаТабЧасти = Элементы.НарядЗаказ.ТекущиеДанные;
	РассчитатьСтрокуТабЧастиНарядЗаказ(ТекСтрокаТабЧасти);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "НарядЗаказКоличество".
Процедура НарядЗаказКоличествоПриИзменении(Элемент)
	
	ТекСтрокаТабЧасти = Элементы.НарядЗаказ.ТекущиеДанные;
	РассчитатьСтрокуТабЧастиНарядЗаказ(ТекСтрокаТабЧасти);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "НарядЗаказЦена".
Процедура НарядЗаказЦенаПриИзменении(Элемент)
	
	ТекСтрокаТабЧасти = Элементы.НарядЗаказ.ТекущиеДанные;
	РассчитатьСтрокуТабЧастиНарядЗаказ(ТекСтрокаТабЧасти);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "НарядЗаказСтавкаНДС".
Процедура НарядЗаказСтавкаНДСПриИзменении(Элемент)
	
	ТекСтрокаТабЧасти = Элементы.НарядЗаказ.ТекущиеДанные;
	РассчитатьСтрокуТабЧастиНарядЗаказ(ТекСтрокаТабЧасти);
	
КонецПроцедуры


&НаКлиенте
// Процедура рассчитывает поля табличной части "НарядЗаказ".
Процедура РассчитатьСтрокуТабЧастиНарядЗаказ(СтрокаТабЧасти)
	
	// Рассчитать реквизиты табличной части.
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабЧасти);
	
	//Если СтрокаТабЧасти.Свойство("СуммаНДС") Тогда
	//	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабЧасти, Объект.СуммаВключаетНДС);
	//КонецЕсли;
	
	СтрокаТабЧасти.СуммаПлан = СтрокаТабЧасти.Цена * СтрокаТабЧасти.КоличествоПлан ;
    СтрокаТабЧасти.Сумма     = СтрокаТабЧасти.Цена * СтрокаТабЧасти.Количество;
	ОбновитьИтоги(ЭтаФорма);
КонецПроцедуры


&НаСервере
Функция ПолучитьЕдИЗМ(Номенклатура)
	     ТекНом = Справочники.Номенклатура.НайтиПоНаименованию(Номенклатура);
		ЕдИзм = ТекНом.ЕдиницаИзмерения;
		Возврат ЕдИзм;
КонецФункции



&НаКлиенте
Процедура НарядЗаказСкладПриИзменении(Элемент)
		СтрокаТабЧасти = Элементы.НарядЗаказ.ТекущиеДанные;
	//Товар = ;
	//Склад = ;
	//СтрокаТабЧасти.Цена = 0;
	СтрокаТабЧасти.Цена = ТЗЦеныНоменклатуры(СтрокаТабЧасти.Номенклатура,СтрокаТабЧасти.Склад);
			Если СтрокаТабЧасти.Цена = 0 Тогда
				  НомСтроки = СтрокаТабЧасти.НомерСтроки - 1;
				  Сообщение = Новый СообщениеПользователю();
			      Сообщение.Текст = "нету товара на этом складе! Цена заполняеться в ручную";
			      Сообщение.Поле  =  "НарядЗаказ[" + НомСтроки + "].Цена";
			      Сообщение.ПутьКДанным = "Объект";
				  //Сообщение.КлючДаных = ЭтотОбъект;
			      Сообщение.сообщить();
               КонецЕсли;

КонецПроцедуры


Функция ТЗЦеныНоменклатуры(Товар,Склад)
	
	Запрос = Новый Запрос;
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОбороты.Субконто2 КАК Субконто2,
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК СуммаОборот,
	|	СУММА(ХозрасчетныйОбороты.КоличествоОборот) КАК КоличествоОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, &дата,,, ,Субконто1 = &Товар и Субконто2 = &Склад, )  КАК ХозрасчетныйОбороты	 
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	ХозрасчетныйОбороты.Счет"; 
	
	//Месяц = Месяц(Объект.Дата); 
	//Год = Год(Объект.Дата);
	//Если Месяц = 2 Тогда
	//	Дата = Дата(Год,Месяц,28, 5, 0,0);
	//Иначе
	//	Дата = Дата(Год,Месяц,30, 5, 0,0);
	//КонецЕсли;	
	
	Дата = КонецМесяца(Объект.Дата)-(19*60*60-1); 
	Запрос.УстановитьПараметр("Товар", Товар);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("дата", дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Запрос.Выполнить().Пустой() Тогда

				  цена = 0;
	КонецЕсли;

	Пока Выборка.Следующий() Цикл
		Если Выборка.Субконто1 = Товар тогда
				  цена = Выборка.СуммаОборот  / Выборка.КоличествоОборот ;
		КонецЕсли;
	КонецЦикла; 
   возврат Цена;
   
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицыНаСервере()
	
	
		  //ТЗ = ТЗЦеныНоменклатуры();

	
	
	Для Каждого ТекСтрокаРаботы Из Объект.Работы Цикл
		ТекВидРабот = ТекСтрокаРаботы.ВидРабот;
		Для Каждого ТекСтрокаСоставаРабот Из ТекВидРабот.СоставРабот Цикл
			
			НоваяСтрока = Объект.НарядЗаказ.Добавить();
			
			НоваяСтрока.ВидРабот         = ТекСтрокаРаботы.ВидРабот;
			НоваяСтрока.Номенклатура     = ТекСтрокаСоставаРабот.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаСоставаРабот.Номенклатура.ЕдиницаИзмерения;
			НоваяСтрока.СтавкаНДС        = ТекСтрокаСоставаРабот.Номенклатура.СтавкаНДС;
			НоваяСтрока.Цена             = ТЗЦеныНоменклатуры(ТекСтрокаСоставаРабот.Номенклатура,объект.Склад);
			Если НоваяСтрока.Цена = 0 Тогда
				  НомСтроки = НоваяСтрока.НомерСтроки - 1;
				  Сообщение = Новый СообщениеПользователю();
			      Сообщение.Текст = "нету товара на этом складе! Цена заполняеться в ручную";
			      Сообщение.Поле  =  "НарядЗаказ[" + НомСтроки + "].Цена";
			      Сообщение.ПутьКДанным = "Объект";
				  //Сообщение.КлючДаных = ЭтотОбъект;
			      Сообщение.сообщить();
               КонецЕсли;
				 
           			
			// Если объем выполняемых работ равен 0
			Если ТекСтрокаСоставаРабот.Коэффициент = 0 Тогда
				НоваяСтрока.КоличествоПлан = 0;
				НоваяСтрока.Количество	   = 0;
			Иначе
				НоваяСтрока.КоличествоПлан   = ТекСтрокаСоставаРабот.Количество 
											 / ТекСтрокаСоставаРабот.Коэффициент 
											 * ТекСтрокаРаботы.ОбъемПлан;
				НоваяСтрока.Количество       = ТекСтрокаСоставаРабот.Количество 
											 / ТекСтрокаСоставаРабот.Коэффициент 
											 * ТекСтрокаРаботы.ОбъемФакт;
			КонецЕсли;
			НоваяСтрока.СуммаПлан        = НоваяСтрока.Цена * НоваяСтрока.КоличествоПлан;
			НоваяСтрока.Сумма            = НоваяСтрока.Цена * НоваяСтрока.Количество;
		КонецЦикла;
	КонецЦикла;
	
		
		
		
	  Для Каждого ТекСтрокаРаботы Из Объект.Работы Цикл
		ТекВидРабот = ТекСтрокаРаботы.ВидРабот;		
		//заполнение состава работников
		Для Каждого ТекСтрокаСоставаЗвена Из ТекВидРабот.СоставЗвена Цикл
		      НоваяСтрока = Объект.СоставЗвена.Добавить();
			  
			  НоваяСтрока.Должность   =  ТекСтрокаСоставаЗвена.Должность;
			  НоваяСтрока.ВидРабот    = ТекСтрокаРаботы.ВидРабот;
			  НоваяСтрока.Тариф       =  ТекСотр(НоваяСтрока.Должность);

			  НоваяСтрока.ВремяРаботы =  ТекСтрокаСоставаЗвена.ВремяПлан;
			  НоваяСтрока.Сумма       =  НоваяСтрока.Тариф * ТекСтрокаСоставаЗвена.ВремяПлан;
        
		  КонецЦикла;
		    //заполнение таблицы механизмы
	     Для Каждого ТекСтрокаМашиныИМеханизмы Из ТекВидРабот.СоставМеханизмы Цикл
		      НоваяСтрока = Объект.МашиныИМеханизмы.Добавить();
			  
			  
			  Если ТекСтрокаМашиныИМеханизмы.Механизмы.Наименование = "Лифт" Тогда
	   		 Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("адрес", Объект.Адрес);
				Запрос.Текст = 
						"ВЫБРАТЬ
						|	КВП_ЗданияТехническиеХарактеристики.Элемент,
						|	СУММА(КВП_ЗданияТехническиеХарактеристики.Количество) КАК Количество,
						|	КВП_ЗданияТехническиеХарактеристики.ЕдиницыИзмерения,
						|	КВП_Здания.Наименование
						|ИЗ
						|	Справочник.КВП_Здания.ТехническиеХарактеристики КАК КВП_ЗданияТехническиеХарактеристики
						|
						|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КВП_Здания КАК КВП_Здания
						|		ПО КВП_ЗданияТехническиеХарактеристики.Ссылка = КВП_Здания.Ссылка
						|ГДЕ КВП_Здания.Наименование=&адрес 	  	
						|СГРУППИРОВАТЬ ПО
						|	КВП_ЗданияТехническиеХарактеристики.Элемент,
						|	КВП_Здания.Наименование,
						|	КВП_ЗданияТехническиеХарактеристики.ЕдиницыИзмерения";
	
				Выборка = Запрос.Выполнить().Выбрать();

	
				Пока Выборка.Следующий() Цикл
						Если Выборка.Элемент.Наименование = "Лифтовые кабины"  тогда
						 НоваяСтрока.Время  = Выборка.Количество;
						 НоваяСтрока.Цена   = 0;
				 
					КонецЕсли;
				КонецЦикла;
 
			  Иначе
				 НоваяСтрока.Цена          =  ТекСтрокаМашиныИМеханизмы.Цена;
				 НоваяСтрока.Время         =  ТекСтрокаМашиныИМеханизмы.Время;
			  КонецЕсли;
			  
			  НоваяСтрока.ВидРабот         =  ТекСтрокаРаботы.ВидРабот;
			  НоваяСтрока.ВидТехники       =  ТекСтрокаМашиныИМеханизмы.Механизмы;  
			  НоваяСтрока.Сумма            =  ТекСтрокаМашиныИМеханизмы.Время * ТекСтрокаМашиныИМеханизмы.Цена;
			  
			  
			  
					  
					  
			  
		
		




	КонецЦикла;
	 КонецЦикла;
	//ЗаполнитьСоставЗаказНарядаНаСервере();
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
	Функция ТекСотр(сотрудник)
		СпрСотр = Справочники.ШтатноеРасписание;
		НайтиСотр = СпрСотр.НайтиПоНаименованию(сотрудник);
		ТекСотр =  НайтиСотр.ТарифнаяСтавкаСДоплатой;
		возврат ТекСотр;

	КонецФункции


	
&НаКлиенте
	Процедура МашиныИМеханизмыПриИзменении(Элемент)
		
	СтрокаТабличнойЧасти = Элементы.МашиныИМеханизмы.ТекущиеДанные;
    СтрокаТабличнойЧасти.Сумма =  СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Время;
	ОбновитьИтоги(ЭтаФорма);

	КонецПроцедуры

	
&НаКлиенте
Процедура МашиныИМеханизмыВидТехникиПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.МашиныИМеханизмы.ТекущиеДанные;
	СтрокаТабличнойЧасти.цена = ЦенаНаМех(СтрокаТабличнойЧасти.ВидТехники, Объект.Дата);
	ОбновитьИтоги(ЭтаФорма);

КонецПроцедуры


&НаСервереБезКонтекста
	Функция ЦенаНаМех(Мех,Дата)
		СпрЦена = Справочники.ПереченьТарифовНаАвтотранспорт;
		НайтиЦену = СпрЦена.НайтиПоНаименованию(Мех);
		//поменять на производственый календарь
		Если ДеньНедели(Дата) > 5 тогда 
			ТекЦена =  НайтиЦену.РаботаВВыходнойДень;
		Иначе
			ТекЦена =  НайтиЦену.РаботаВБуднийДень;	
		конецЕсли;
		
		возврат ТекЦена;

	КонецФункции

&НаКлиенте
	Процедура НарядЗаказНоменклатураПриИзменении(Элемент)
	ТекущиеДанные = Элементы.НарядЗаказ.ТекущиеДанные;
	ВидРабот      = ТекущиеДанные.ВидРабот;
	Номенклатура  = ТекущиеДанные.Номенклатура;
	 ТекущиеДанные.ЕдиницаИзмерения = ПолучитьЕдИЗМ(Номенклатура);

	//Склад = ТекущиеДанные.Склад.ПустаяСсылка(); 
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Склад)  тогда
		ТекущиеДанные.Склад = Объект.Склад;
	КонецЕсли;
	//ТекущиеДанные.Цена  = ТЗЦеныНоменклатуры(ТекущиеДанные.Номенклатура,ТекущиеДанные.Склад);
	//	Если ТекущиеДанные.Цена = 0 Тогда
	//			  НомСтроки = ТекущиеДанные.НомерСтроки - 1;
	//			  Сообщение = Новый СообщениеПользователю();
	//		      Сообщение.Текст = "нету товара на этом складе! Цена заполняеться в ручную";
	//		      Сообщение.Поле  =  "НарядЗаказ[" + НомСтроки + "].Цена";
	//		      Сообщение.ПутьКДанным = "Объект";
	//			  //Сообщение.КлючДаных = ЭтотОбъект;
	//		      Сообщение.сообщить();
	//           КонецЕсли;

	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
		//Если Не Номенклатура = Неопределено И Не Номенклатура.Пустая() Тогда
	//	ЗаполнитьДанныеНоменклатурыНарядЗаказа(ВидРабот, Номенклатура);
		//ОбработатьИзмененияПоКнопкеЦеныИВалюты(Объект.ТипЦен);
	//Иначе
		//ТекущиеДанные.ЕдиницаИзмерения = "";
		//ТекущиеДанные.Количество       = 0;
		////ТекущиеДанные.КоличествоПлан   = 0;
		//ТекущиеДанные.СтавкаНДС        = "";
		////ТекущиеДанные.Сумма            = 0;
		//ТекущиеДанные.СуммаНДС         = 0;
		//ТекущиеДанные.СуммаПлан        = 0;
		//ТекущиеДанные.Цена             = ТекущиеДанные.КоличествоПлан * ТекущиеДанные.Сумма;
		//
	//КонецЕсли;
	ОбновитьИтоги(ЭтаФорма);

	КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		Если объект.Участок = "Участок" тогда
			Элементы.ТеплоУзел2.Видимость=истина;
		Иначе
			Элементы.ТеплоУзел2.Видимость=ложь;
		КонецЕсли;
	
	
	Если Объект.Ссылка.Пустая() Тогда

		Если НЕ значениеЗаполнено(Объект.Склад) тогда
		Объект.Склад = Справочники.Склады.НайтиПоКоду("000000064");
		объект.Ответственный =  ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
		объект.Подразделение = справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000047");
		объект.Организация = справочники.Организации.НайтиПоКоду("00-000001");
	КОнецЕсли;
	КонецЕсли;
	КонецПроцедуры

&НаКлиенте
	Процедура УчастокПриИзменении(Элемент)
		Если объект.Участок = "Участок" тогда
			Элементы.ТеплоУзел2.Видимость=истина;
		Иначе
			Элементы.ТеплоУзел2.Видимость=ложь;
		КонецЕсли;
	КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если  объект.Подразделение="" тогда
		объект.Подразделение = "Кондопога Теплоэнергетический участок  ";
	КонецЕсли;
	Если  объект.Заказчик = "" тогда
		объект.Заказчик = "Кондопога Теплоэнергетический участок  ";
	КонецЕсли;
	КонецПроцедуры




	
