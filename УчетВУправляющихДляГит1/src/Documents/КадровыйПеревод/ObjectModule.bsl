#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Не требуется заполнять ОбособленноеПодразделение если в организации не используются обособленные подразделения.
	ПараметрыФО = Новый Структура("Организация", Организация);
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделения", ПараметрыФО) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОбособленноеПодразделение");
	КонецЕсли;
	
	Если Не ИзменитьАванс Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СпособРасчетаАванса");
	КонецЕсли;
	
	Если Не ИзменитьПодразделениеИДолжность Тогда
		
		// Не требуется заполнять подразделение и количество ставок, если оно не изменяется.
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОбособленноеПодразделение");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Подразделение");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Должность");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидЗанятости");
		
	КонецЕсли;
	
	Если Не ИзменитьПодразделениеИДолжность И Не ИзменитьНачисления И Не ИзменитьАванс Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Не выбраны изменяемые данные сотрудника'"),
			Ссылка,
			"ИзменитьПодразделениеИДолжность",
			"Объект",
			Отказ);
		
	КонецЕсли;
	
	КадровыйУчет.ПроверитьВозможностьПроведенияПоКадровомуУчету(
		ЭтотОбъект.ДатаНачала,
		ЭтотОбъект.Сотрудник,
		ЭтотОбъект.Ссылка,
		Отказ,
		Перечисления.ВидыКадровыхСобытий.Перемещение);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ПолучитьДанныеДляПроведения();
	
	Если ИзменитьПодразделениеИДолжность Тогда
		
		КадровыйУчет.СформироватьКадровыеДвижения(ЭтотОбъект, Движения, ДанныеДляПроведения.КадровыеДвижения);
		КадровыйУчет.СформироватьДвиженияВидовЗанятостиСотрудников(Движения, ДанныеДляПроведения.ДвиженияВидовЗанятости);
		
		УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрацииВУчетаСтажаПФР());
		
	КонецЕсли;
	
	Если ИзменитьНачисления Тогда
		СтруктураПлановыхНачислений = Новый Структура;
		СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
		
		РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(ЭтотОбъект, Движения, СтруктураПлановыхНачислений);
	КонецЕсли;
	
	Если ИзменитьАванс Тогда
		РасчетЗарплаты.СформироватьДвиженияПлановыхВыплат(Движения, ДанныеДляПроведения.КадровыеДвижения);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ДатаНачала = ТекущаяДатаСеанса();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Сотрудник") Тогда
			Сотрудник = ДанныеЗаполнения.Сотрудник;
		КонецЕсли;
			
		Если ДанныеЗаполнения.Свойство("ДатаНачала") Тогда
			ДатаНачала = ДанныеЗаполнения.ДатаНачала;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Документы.КадровыйПеревод.ЗаполнитьДатуЗапретаРедактирования(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеДляПроведения()
		
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаСобытия", ЭтотОбъект.ДатаНачала);
	Запрос.УстановитьПараметр("Сотрудник", ЭтотОбъект.Сотрудник);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыйПеревод.ДатаНачала КАК ДатаСобытия,
	|	КадровыйПеревод.Сотрудник КАК Сотрудник,
	|	КадровыйПеревод.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадровыйПеревод.ОбособленноеПодразделение КАК Организация,
	|	КадровыйПеревод.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перемещение) КАК ВидСобытия,
	|	КадровыйПеревод.Должность КАК Должность,
	|	КадровыйПеревод.ВидЗанятости КАК ВидЗанятости,
	|	КадровыйПеревод.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадровыйПеревод.Аванс КАК Аванс,
	|	КадровыйПеревод.СпособРасчетаАванса КАК СпособРасчетаАванса
	|ИЗ
	|	Документ.КадровыйПеревод КАК КадровыйПеревод
	|ГДЕ
	|	КадровыйПеревод.Ссылка = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадровыйПереводНачисления.Ссылка.ДатаНачала КАК ДатаСобытия,
	|	КадровыйПереводНачисления.Ссылка.Сотрудник КАК Сотрудник,
	|	КадровыйПереводНачисления.Ссылка.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадровыйПереводНачисления.Начисление КАК Начисление,
	|	КадровыйПереводНачисления.Размер КАК Размер,
	|	КадровыйПереводНачисления.Ссылка.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.КадровыйПеревод.Начисления КАК КадровыйПереводНачисления
	|ГДЕ
	|	КадровыйПереводНачисления.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаСобытия,
	|	ПлановыеНачисленияСрезПоследних.Сотрудник,
	|	ПлановыеНачисленияСрезПоследних.ГоловнаяОрганизация,
	|	ПлановыеНачисленияСрезПоследних.Начисление,
	|	0,
	|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ПлановыеНачисления.СрезПоследних(
	|			&ДатаСобытия,
	|			Сотрудник = &Сотрудник
	|				И Регистратор <> &Регистратор) КАК ПлановыеНачисленияСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровыйПеревод.Начисления КАК КадровыйПереводНачисления
	|		ПО ПлановыеНачисленияСрезПоследних.Начисление = КадровыйПереводНачисления.Начисление
	|			И (КадровыйПереводНачисления.Ссылка = &Регистратор)
	|ГДЕ
	|	КадровыйПереводНачисления.Начисление ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадровыйПеревод.ДатаНачала КАК Период,
	|	КадровыйПеревод.Сотрудник КАК Сотрудник,
	|	КадровыйПеревод.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадровыйПеревод.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадровыйПеревод.ВидЗанятости КАК ВидЗанятости
	|ИЗ
	|	Документ.КадровыйПеревод КАК КадровыйПеревод
	|ГДЕ
	|	КадровыйПеревод.Ссылка = &Регистратор";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПроведения = Новый Структура; 
	
	// Первый набор данных для проведения - таблица для формирования кадровых движений, истории графиков, авансов.
	ДанныеДляПроведения.Вставить("КадровыеДвижения", РезультатыЗапроса[0].Выгрузить());
	
	// Второй набор данных для проведения - таблица для формирования плановых начислений.
	ДанныеДляПроведения.Вставить("ПлановыеНачисления", РезультатыЗапроса[1].Выгрузить());
	
	// Второй набор данных для проведения - таблица для формирования плановых начислений.
	ДанныеДляПроведения.Вставить("ДвиженияВидовЗанятости", РезультатыЗапроса[2].Выгрузить());
	
	Возврат ДанныеДляПроведения;

КонецФункции	

Функция ДанныеДляРегистрацииВУчетаСтажаПФР()
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ДанныеДляРегистрацииВУчете = Документы.КадровыйПеревод.ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок);
		
	Возврат ДанныеДляРегистрацииВУчете[Ссылка];
														
КонецФункции	

#КонецОбласти

#КонецЕсли