
#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьРеквизитыИзПараметровФормы(ЭтаФорма);
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	ТекущаяДатаДокумента = Объект.Дата;
	ТекущаяОрганизация   = Объект.Организация;
	НДСРаспределен       = Истина;
	
	ОбновитьИтогиВПодвале(ЭтаФорма);
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("СостояниеРегламентнойОперации", 
		?(Объект.Проведен, ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено"), 
						   ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.НеВыполнено")));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Объект.НеоблагаемыеНДСОперации.Количество() <> 0
		ИЛИ Объект.ПодтверждающиеДокументы.Количество() <> 0 Тогда 
		ТекстВопроса = НСтр("ru = 'Необходимо очистить табличную часть. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПриИзмененииОрганизацииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ПриИзмененииОрганизации();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНеоблагаемыеНДСОперации

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииПодтверждающиеДокументыПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбраннаяСтрока = Элементы.НеоблагаемыеНДСОперации.ТекущаяСтрока;
	ОткрытьФормуРедактированияПодтверждающихДокументов(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "НеоблагаемыеНДСОперацииПодтверждающиеДокументыПредставление" Тогда
		ОткрытьФормуРедактированияПодтверждающихДокументов(ВыбраннаяСтрока);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РедактированиеСпискаПодтверждающихДокументов" Тогда 
		
		КлючПоиска = Новый Структура("КлючСтроки", Параметр.КлючСтроки);
		МассивСтрокПодтверждающиеДокументы = Объект.ПодтверждающиеДокументы.НайтиСтроки(КлючПоиска);
		
		Для Каждого СтрокаТЧ Из МассивСтрокПодтверждающиеДокументы Цикл
			Объект.ПодтверждающиеДокументы.Удалить(СтрокаТЧ);
		КонецЦикла;
		
		АдресТаблицыПодтверждающиеДокументы = Параметр.АдресТаблицыПодтверждающиеДокументы;
		ЗагрузитьПодтверждающиеДокументыИзХранилища(Параметр.КлючСтроки);
		
	Иначе
		
		ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииКодОперацииПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НеоблагаемыеНДСОперации.ТекущиеДанные;
	РеквизитыКодаОперации = РеквизитыКодаОперации(ТекущиеДанные.КодОперации);
	ТекущиеДанные.КодСт149НКРФ      = РеквизитыКодаОперации.ОперацияНеПодлежитНалогообложению;
	ТекущиеДанные.ВключаетсяВРеестр = РеквизитыКодаОперации.ВключаетсяВРеестрПодтверждающихДокументов;
	ТекущиеДанные.РозничнаяПродажа  = 
		ТипЗнч(ТекущиеДанные.ДокументРеализации) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах");
	ТекущиеДанные.БезвозмезднаяПередача = 
		ТипЗнч(ТекущиеДанные.ДокументРеализации) = Тип("ДокументСсылка.ПередачаТоваров");
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииДокументРеализацииПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НеоблагаемыеНДСОперации.ТекущиеДанные;
	ТекущиеДанные.РозничнаяПродажа = 
		ТипЗнч(ТекущиеДанные.ДокументРеализации) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах");
	ТекущиеДанные.БезвозмезднаяПередача = 
		ТипЗнч(ТекущиеДанные.ДокументРеализации) = Тип("ДокументСсылка.ПередачаТоваров");
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекДанныеНеоблагаемыеНДСОперации = Элементы.НеоблагаемыеНДСОперации.ТекущиеДанные;
		ТекДанныеНеоблагаемыеНДСОперации.КлючСтроки = НовыйКлючСтроки;
		
		ТекДанныеНеоблагаемыеНДСОперации.ПодтверждающиеДокументыПредставление = "<...>";
		
		НовыйКлючСтроки = НовыйКлючСтроки + 1;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьИтогиВПодвале(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииПослеУдаления(Элемент)
	
	ОбновитьИтогиВПодвале(ЭтаФорма);
	НДСРаспределен = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	НДСРаспределен = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииНДСРаспределенныйПриИзменении(Элемент)
	
	НДСРаспределен = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьДокумент(Команда)
	
	Если Объект.НеоблагаемыеНДСОперации.Количество() > 0 Тогда 
		Если Объект.Проведен Тогда 
			ТекстВопроса = НСтр("ru = 'Перед заполнением проведение документа будет отменено, а табличные части будут очищены. Заполнить?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Табличные части будут очищены. Заполнить?'");
		КонецЕсли;
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьДокументЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьЗаполнениеДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьНДС(Команда)
	
	РаспределитьНДСНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ОткрытьФормуРедактированияПодтверждающихДокументов(ВыбранноеЗначение)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Объект.НеоблагаемыеНДСОперации.НайтиПоИдентификатору(ВыбранноеЗначение);
	
	Если НЕ ДанныеСтроки.КодСт149НКРФ
		ИЛИ ДанныеСтроки.КодСт149НКРФ И 
		НЕ ЗначениеЗаполнено(ДанныеСтроки.Контрагент) 
		И НЕ ДанныеСтроки.РозничнаяПродажа Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АдресТаблицыПодтверждающиеДокументы", ПоместитьПодтверждающиеДокументыВХранилище(ДанныеСтроки.КлючСтроки));
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("КлючСтроки", ДанныеСтроки.КлючСтроки);
	
	ОткрытьФорму("Документ.ФормированиеЗаписейРаздела7ДекларацииНДС.Форма.ФормаРедактированияПодтверждающихДокументов", ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьПодтверждающиеДокументыВХранилище(КлючСтроки)
	
	СтруктураОтбора = Новый Структура("КлючСтроки", КлючСтроки);
	ТаблицаПодтверждающиеДокументы = Объект.ПодтверждающиеДокументы.Выгрузить(СтруктураОтбора);
	АдресТаблицыПодтверждающиеДокументы = ПоместитьВоВременноеХранилище(ТаблицаПодтверждающиеДокументы, УникальныйИдентификатор);
	
	Возврат АдресТаблицыПодтверждающиеДокументы;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПодтверждающиеДокументыИзХранилища(КлючСтроки)
	
	ТаблицаПодтверждающиеДокументы = ПолучитьИзВременногоХранилища(АдресТаблицыПодтверждающиеДокументы);
	
	Для Каждого СтрокаТЧ Из ТаблицаПодтверждающиеДокументы Цикл
			НоваяСтрока = Объект.ПодтверждающиеДокументы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		КонецЦикла;
		
		КлючПоиска = Новый Структура("КлючСтроки", КлючСтроки);
		МассивСтрокНеоблагаемыеОперации = Объект.НеоблагаемыеНДСОперации.НайтиСтроки(КлючПоиска);
		Если МассивСтрокНеоблагаемыеОперации.Количество() > 0 Тогда 
			СтрокаТаблицы = МассивСтрокНеоблагаемыеОперации[0];
			Если ТаблицаПодтверждающиеДокументы.Количество() > 0 Тогда 
				ЗаполнитьПодтверждающиеДокументы(СтрокаТаблицы, ТаблицаПодтверждающиеДокументы);
			Иначе
				СтрокаТаблицы.ПодтверждающиеДокументыПредставление = "<...>";
			КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьДокументЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыполнитьЗаполнениеДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаполнениеДокумента()

	ИБФайловая = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая;
	Результат = ЗаполнитьДокументНаСервере(ИБФайловая);
	
	Если Результат.ЗаданиеВыполнено Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
	Иначе
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			ЗагрузитьПодготовленныеДанные();
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания", 
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
				Истина);
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Функция ЗаполнитьДокументНаСервере(ИБФайловая)
	
	Если Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
	Объект.НеоблагаемыеНДСОперации.Очистить();
	Объект.ПодтверждающиеДокументы.Очистить();
	
	СтруктураПараметров = Новый Структура("Организация, Дата", Объект.Организация, Объект.Дата);
	
	Если ИБФайловая Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Документы.ФормированиеЗаписейРаздела7ДекларацииНДС.ПодготовитьДанныеДляЗаполнения(СтруктураПараметров, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		НаименованиеЗадания = НСтр("ru = 'Заполнение документа ""Формирование записей раздела 7 Декларации НДС""'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор, 
		"Документы.ФормированиеЗаписейРаздела7ДекларацииНДС.ПодготовитьДанныеДляЗаполнения", 
		СтруктураПараметров, 
		НаименованиеЗадания);
		
		АдресХранилища = Результат.АдресХранилища;
		
	КонецЕсли;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураДанных.Свойство("НеоблагаемыеНДСОперации") Тогда
		Объект.НеоблагаемыеНДСОперации.Загрузить(СтруктураДанных.НеоблагаемыеНДСОперации);
	КонецЕсли;
	
	Если СтруктураДанных.Свойство("ПодтверждающиеДокументы") Тогда
		Объект.ПодтверждающиеДокументы.Загрузить(СтруктураДанных.ПодтверждающиеДокументы);
	КонецЕсли;
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	ОбновитьИтогиВПодвале(ЭтаФорма);
	Модифицированность = Истина;
	НДСРаспределен = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТабличнойЧасти, ПодтверждающиеДокументыПоСтроке)
	
	ЗаполнитьПодтверждающиеДокументы(СтрокаТабличнойЧасти, ПодтверждающиеДокументыПоСтроке);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПодтверждающиеДокументы(СтрокаТабличнойЧасти, ПодтверждающиеДокументыПоСтроке)
	
	ПодтверждающиеДокументыПредставление = "";
	КоличествоПодтверждающихДокументов = ПодтверждающиеДокументыПоСтроке.Количество();
	Для Инд = 0 По КоличествоПодтверждающихДокументов - 1 Цикл
		
		ПодтверждающийДокумент = ПодтверждающиеДокументыПоСтроке[Инд];
		Если Инд = 2 Тогда
			ПодтверждающиеДокументыПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 и еще %2'"),
				ПодтверждающиеДокументыПредставление, 
				КоличествоПодтверждающихДокументов - 2);
				
		Иначе
			ПодтверждающиеДокументыПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1%2%3 №%4 от %5'"),
				ПодтверждающиеДокументыПредставление, 
				?(ЗначениеЗаполнено(ПодтверждающиеДокументыПредставление), ";", ""),
				Строка(ПодтверждающийДокумент.ТипДокумента),
				ПодтверждающийДокумент.НомерДокумента,
				Формат(ПодтверждающийДокумент.ДатаДокумента,"ДЛФ=D"));
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаТабличнойЧасти.ПодтверждающиеДокументыПредставление = ПодтверждающиеДокументыПредставление;
	
КонецПроцедуры	

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента          = Объект.Дата;
	
	ТаблицаОпераций = Объект.НеоблагаемыеНДСОперации.Выгрузить();
	НовыйКлючСтроки = Документы.ФормированиеЗаписейРаздела7ДекларацииНДС.ПолучитьНовыйКлючСтроки(ТаблицаОпераций);
	
	УстановитьСостояниеДокумента();
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыИзПараметровФормы(ЭтотОбъект)
	
	ПараметрыЗаполненияФормы = Неопределено;
	
	Если ЭтотОбъект.Параметры.Свойство("ПараметрыЗаполненияФормы",ПараметрыЗаполненияФормы) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.Объект,ПараметрыЗаполненияФормы);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	КодыОпераций = ОбщегоНазначения.ВыгрузитьКолонку(Объект.НеоблагаемыеНДСОперации, "КодОперации", Истина);
	РеквизитыКодов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
		КодыОпераций,
		"ОперацияНеПодлежитНалогообложению, ВключаетсяВРеестрПодтверждающихДокументов");
		
	Для каждого СтрокаТаблицы Из Объект.НеоблагаемыеНДСОперации Цикл
		
		РеквизитыКода = РеквизитыКодов.Получить(СтрокаТаблицы.КодОперации);
		
		СтрокаТаблицы.КодСт149НКРФ      = ?(РеквизитыКода <> Неопределено, 
			РеквизитыКода.ОперацияНеПодлежитНалогообложению, Ложь);
		СтрокаТаблицы.ВключаетсяВРеестр = ?(РеквизитыКода <> Неопределено, 
			РеквизитыКода.ВключаетсяВРеестрПодтверждающихДокументов, Ложь);
		СтрокаТаблицы.РозничнаяПродажа = 
			ТипЗнч(СтрокаТаблицы.ДокументРеализации) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах");
		СтрокаТаблицы.БезвозмезднаяПередача = 
			ТипЗнч(СтрокаТаблицы.ДокументРеализации) = Тип("ДокументСсылка.ПередачаТоваров");
			
		СтруктураОтбора = Новый Структура("КлючСтроки", СтрокаТаблицы.КлючСтроки);
		ПодтверждающиеДокументыПоСтроке = Объект.ПодтверждающиеДокументы.НайтиСтроки(СтруктураОтбора);
		Если ПодтверждающиеДокументыПоСтроке.Количество() > 0 Тогда 
			ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, ПодтверждающиеДокументыПоСтроке);
		Иначе
			СтрокаТаблицы.ПодтверждающиеДокументыПредставление = "<...>";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Для кодов, которые не попадают в реестр, заполнять подтверждающие документы не требуется.
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(
		ЭлементУО.Поля, "НеоблагаемыеНДСОперацииПодтверждающиеДокументыПредставление");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НеоблагаемыеНДСОперации.ВключаетсяВРеестр", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуются>'"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Для кодов не по статье 149 НК РФ, необходимо заполнить только сумму реализации.
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НеоблагаемыеНДСОперацииСуммаПриобретения");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НеоблагаемыеНДСОперацииНДС");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НеоблагаемыеНДСОперации.КодСт149НКРФ", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>'"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Для документов "ОтчетОРозничныхПродажах" поле "Контрагент" не заполняется.
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НеоблагаемыеНДСОперацииКонтрагент");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НеоблагаемыеНДСОперации.РозничнаяПродажа", ВидСравненияКомпоновкиДанных.Равно, Истина);
		
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Розничная продажа'"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	// Для документов "Передача товаров" поле "Контрагент" не всегда заполняется.
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НеоблагаемыеНДСОперацииКонтрагент");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НеоблагаемыеНДСОперации.БезвозмезднаяПередача", ВидСравненияКомпоновкиДанных.Равно, Истина);
		
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

		
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемыеНДСОперацииПередУдалением(Элемент, Отказ)
	
	ВыделенныеСтроки = Элементы.НеоблагаемыеНДСОперации.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для каждого ИдСтроки Из ВыделенныеСтроки Цикл
		ТекДанные = Объект.НеоблагаемыеНДСОперации.НайтиПоИдентификатору(ИдСтроки);
		Если ТекДанные <> Неопределено Тогда
			// Необходимо очистить дополнительные сведения
			НоваяСтрока = ТаблицаУдаленныхКлючей.Добавить();
			НоваяСтрока.КлючСтроки = ТекДанные.КлючСтроки;
		КонецЕсли;
	КонецЦикла;
	ПодключитьОбработчикОжидания("Подключаемый_УдалитьСвязанныеЗаписи", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УдалитьСвязанныеЗаписи()
	
	УдалитьСвязанныеЗаписиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязанныеЗаписиНаСервере()
	
	Для каждого СтрокаКлюча Из ТаблицаУдаленныхКлючей Цикл
		КлючПоиска = Новый Структура("КлючСтроки", СтрокаКлюча.КлючСтроки);
		МассивСтрокТовары = Объект.ПодтверждающиеДокументы.НайтиСтроки(КлючПоиска);
		
		Для каждого СтрокаТЧ Из МассивСтрокТовары Цикл
			Объект.ПодтверждающиеДокументы.Удалить(СтрокаТЧ);
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаУдаленныхКлючей.Очистить();
	
КонецПроцедуры

&НаСервере
Функция РеквизитыКодаОперации(КодОперации)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КодОперации, "ОперацияНеПодлежитНалогообложению, ВключаетсяВРеестрПодтверждающихДокументов");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтогиВПодвале(ЭтотОбъект)
	
	Объект = ЭтотОбъект.Объект;
	
	ЭтотОбъект.ИтогиВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(
		Объект.НеоблагаемыеНДСОперации.Итог("НДСПрямой")
		+ Объект.НеоблагаемыеНДСОперации.Итог("НДСРаспределенный"));
		
КонецПроцедуры

&НаСервере
Процедура РаспределитьНДСНаСервере()
	
	Если Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Организация, Дата", Объект.Организация, Объект.Дата);
	МассивКоэффициентов = Объект.НеоблагаемыеНДСОперации.Выгрузить().ВыгрузитьКолонку("СуммаРеализации");
	Документы.ФормированиеЗаписейРаздела7ДекларацииНДС.РаспределитьНДСПоКодамРаздела7(
		СтруктураПараметров, 
		Объект.НеоблагаемыеНДСОперации, 
		МассивКоэффициентов);
		
	ОбновитьИтогиВПодвале(ЭтаФорма);
	НДСРаспределен     = Истина;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииОрганизацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.НеоблагаемыеНДСОперации.Очистить();
		Объект.ПодтверждающиеДокументы.Очистить();
	Иначе
		Объект.Организация = ТекущаяОрганизация;
	КонецЕсли;
	
	ПриИзмененииОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОрганизации()
	
	ТекущаяОрганизация = Объект.Организация;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И (Модифицированность ИЛИ НЕ НДСРаспределен) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ НДСРаспределен Тогда
		
		Отказ = Истина;
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'НДС не был распределен по операциям. Распределить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		РаспределитьНДСНаСервере();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		НДСРаспределен = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


