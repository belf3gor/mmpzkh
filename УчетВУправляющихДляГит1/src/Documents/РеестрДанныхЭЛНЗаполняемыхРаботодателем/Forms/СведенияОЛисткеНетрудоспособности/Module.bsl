#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.ИнформацияОДокументе.ОбъектЗафиксирован Тогда
		ТолькоПросмотр = Истина;
		Элементы.КомандаОбновитьХэш.Доступность = Ложь;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ДанныеЭЛН);
	
	АвтоЗаголовок = Ложь;
	ОбновитьФорму();
	
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод1);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод2);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод3);
	
	ОбменЛисткамиНетрудоспособностиФСС.КодыПричинИсправления(Элементы.КодПричиныИсправления.СписокВыбора);
	
	Элементы.КодПричиныИсправления.Подсказка = НаименованиеПричиныИсправления(ЭтотОбъект);
	Элементы.НомерЛисткаНетрудоспособности.ТолькоПросмотр = ЗначениеЗаполнено(ЛистокНетрудоспособности);
	Элементы.Сотрудник.ТолькоПросмотр = ЗначениеЗаполнено(ЛистокНетрудоспособности);
	Элементы.Хэш.ТолькоПросмотр = ЗначениеЗаполнено(ЛистокНетрудоспособности);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЛистокНетрудоспособностиПриИзменении(Элемент)
	ЗаполнитьДанныеЛисткаНетрудоспособности();
КонецПроцедуры

&НаКлиенте
Процедура НомерЛисткаНетрудоспособностиПриИзменении(Элемент)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеПриИзменении(Элемент)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура КодПричиныИсправленияПриИзменении(Элемент)
	НаименованиеПричиныИсправления = НаименованиеПричиныИсправления(ЭтотОбъект);
	Если Не ЗначениеЗаполнено(ОписаниеПричиныИсправления)
		Или ОписаниеПричиныИсправления = Элементы.КодПричиныИсправления.Подсказка Тогда
		ОписаниеПричиныИсправления = НаименованиеПричиныИсправления;
	КонецЕсли;
	Элементы.КодПричиныИсправления.Подсказка = НаименованиеПричиныИсправления;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НаименованиеПричиныИсправления(Форма)
	ЭлементСписка = Форма.Элементы.КодПричиныИсправления.СписокВыбора.НайтиПоЗначению(Форма.КодПричиныИсправления);
	Если ЭлементСписка <> Неопределено Тогда
		Если КодСимвола(ЭлементСписка.Представление, 3) = КодСимвола(".") Тогда
			Возврат СокрЛП(Сред(ЭлементСписка.Представление, 4));
		Иначе
			Возврат СокрЛП(ЭлементСписка.Представление)
		КонецЕсли;
	КонецЕсли;
	Возврат "";
КонецФункции

&НаКлиенте
Процедура ОписаниеПричиныИсправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВариантыОтчетовКлиент.РедактироватьМногострочныйТекст(
		ЭтотОбъект,
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"ОписаниеПричиныИсправления",
		Элемент.ПодсказкаВвода);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	Закрыть(РезультатВыбора());
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьХэшИзСервиса(Команда)
	Если Не ЗначениеЗаполнено(Параметры.ИнформацияОДокументе.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'В документе не выбрана организация.'"), , "Организация");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбран сотрудник.'"), , "Сотрудник");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НомерЛисткаНетрудоспособности) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнен номер листка нетрудоспособности.'"), , "НомерЛисткаНетрудоспособности");
		Возврат;
	КонецЕсли;
	
	// Формирование параметров запроса к сервису получения ЭЛН.
	ЗапросДляПолученияЭЛН = ВыгрузитьЗапросДляПолученияХэшаЭЛН();
	Если ЗапросДляПолученияЭЛН = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Подписание и отправка запроса, расшифровка ответа.
	Оповещение = Новый ОписаниеОповещения("ПолучитьДанныеИзФССЗавершение", ЭтотОбъект);
	ЭлектронныйДокументооборотСФССКлиент.ПолучитьДанныеЭЛНИзФСС(Оповещение, ЗапросДляПолученияЭЛН);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьФорму()
	Заголовок = ЗаголовокФормы();
	
	Хэш = РегистрыСведений.СведенияОбЭЛН.ПрочитатьХэш(НомерЛисткаНетрудоспособности);
	
	Элементы.КодПричиныИсправления.Доступность      = Исправление;
	Элементы.ОписаниеПричиныИсправления.Доступность = Исправление;
КонецПроцедуры

&НаСервере
Функция ЗаголовокФормы()
	Если Не ЗначениеЗаполнено(ЛистокНетрудоспособности) Тогда
		Возврат НСтр("ru = 'Выберите листок нетрудоспособности'");
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ИнформацияОДокументе.Номер) Тогда
		ШаблонЗаголовка = НСтр("ru = 'Сведения о листке нетрудоспособности %1 из реестра %2 от %3'");
	Иначе
		ШаблонЗаголовка = НСтр("ru = 'Сведения о листке нетрудоспособности %1 из реестра от %3'");
	КонецЕсли;
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонЗаголовка,
		НомерЛисткаНетрудоспособности,
		Параметры.ИнформацияОДокументе.Номер,
		Формат(Параметры.ИнформацияОДокументе.Дата, "ДЛФ=D"));
КонецФункции

&НаСервере
Функция РезультатВыбора()
	ЗначенияРеквизитов = Новый Структура;
	
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = "Объект" Тогда
			Продолжить;
		КонецЕсли;
		ЗначенияРеквизитов.Вставить(РеквизитФормы.Имя, ЭтотОбъект[РеквизитФормы.Имя]);
	КонецЦикла;
	
	Возврат ЗначенияРеквизитов;
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеЛисткаНетрудоспособности()
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = "Объект"
			Или РеквизитФормы.Имя = "НомерСтроки" Тогда
			Продолжить;
		КонецЕсли;
		ЭтотОбъект[РеквизитФормы.Имя] = Неопределено;
	КонецЦикла;
	
	ТаблицаОснований = Новый ТаблицаЗначений;
	ТаблицаОснований.Колонки.Добавить("ЛистокНетрудоспособности", Новый ОписаниеТипов("ДокументСсылка.БольничныйЛист"));
	ТаблицаОснований.Колонки.Добавить("НомерЛисткаНетрудоспособности", Новый ОписаниеТипов("Строка"));
	СтрокаТаблицы = ТаблицаОснований.Добавить();
	СтрокаТаблицы.ЛистокНетрудоспособности = ЛистокНетрудоспособности;
	СтрокаТаблицы.НомерЛисткаНетрудоспособности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЛистокНетрудоспособности, "НомерЛисткаНетрудоспособности");
	
	Запрос = УчетПособийСоциальногоСтрахования.ЗапросРеестраЭЛНПоПервичнымДокументам(ТаблицаОснований, Параметры.ИнформацияОДокументе.Ссылка);
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	Если ТаблицаЗначений.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТаблицаЗначений[0]);
	КонецЕсли;
	
	ОбновитьФорму();
КонецПроцедуры

#Область ПолучитьХэшИзСервиса

&НаСервере
Функция ВыгрузитьЗапросДляПолученияХэшаЭЛН()
	Возврат ОбменЛисткамиНетрудоспособностиФСС.ВыгрузитьЗапросДляПолученияЭЛН(СтруктураДляПолученияХэшаЭЛН());
КонецФункции

&НаКлиенте
Процедура ПолучитьДанныеИзФССЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено
		И ЗагрузитьХэшЭЛН(Результат.АдресРасшифрованногоОтветаSOAP) Тогда
		ПоказатьОповещениеПользователя(, , НСтр("ru = 'Хэш ЭЛН успешно получен из ФСС'"), БиблиотекаКартинок.Успешно32);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьХэшЭЛН(Знач АдресРасшифрованногоОтветаSOAP)
	РезультатОбмена = ОбменЛисткамиНетрудоспособностиФСС.ЗагрузитьОтветСервисаФСС(
		СтруктураДляПолученияХэшаЭЛН(),
		"getPrivateLNData",
		АдресРасшифрованногоОтветаSOAP,
		Ложь);
	ОбновитьФорму();
	Возврат Не РезультатОбмена.Отказ;
КонецФункции

&НаСервере
Функция СтруктураДляПолученияХэшаЭЛН()
	Документ = Новый Структура("Организация, Дата, Сотрудник, НомерЛисткаНетрудоспособности");
	ЗаполнитьЗначенияСвойств(Документ, Параметры.ИнформацияОДокументе, "Организация, Дата");
	ЗаполнитьЗначенияСвойств(Документ, ЭтотОбъект, "Сотрудник, НомерЛисткаНетрудоспособности");
	Возврат Документ;
КонецФункции

#КонецОбласти

#КонецОбласти
