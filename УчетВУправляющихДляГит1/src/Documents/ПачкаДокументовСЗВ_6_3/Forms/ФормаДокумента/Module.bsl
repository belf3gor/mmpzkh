#Область ОписаниеПеременных

&НаКлиенте
Перем мТекущееСотрудник;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПерсонифицированныйУчетФормы.ДокументыКвартальнойОтчетностиПриСозданииНаСервере(ЭтаФорма, ЗапрашиваемыеЗначенияПервоначальногоЗаполнения());
	ПерсонифицированныйУчетФормы.ДокументыСЗВПриСозданииНаСервере(ЭтаФорма, ОписаниеДокумента());
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ОтчетныйПериод = Мин(Объект.ОтчетныйПериод, 2012);
		ПриПолученииДанныхНаСервере();
	КонецЕсли;
	
	Для Сч = 1 По 12 Цикл 
		Элементы.СведенияОЗаработкеМесяц.СписокВыбора.Добавить(Формат(Дата(2011, Сч, 1), "ДФ=ММММ"));
	КонецЦикла;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаПечатьПереопределенная;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПерсонифицированныйУчетФормы.ДокументыКвартальнойОтчетностиПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьСписокМесяцев();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПерсонифицированныйУчетКлиент.ДокументыКвартальнойОтчетностиПослеЗаписи(ЭтаФорма);
	Оповестить("Запись_ПачкаДокументовСЗВ_6_3", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеДанныхФизическогоЛица" Тогда
		СтруктураОтбора = Новый Структура("Сотрудник", Источник);
		СтрокиПоСотруднику = Объект.Сотрудники.НайтиСтроки(СтруктураОтбора);
		ЗарплатаКадрыКлиентСервер.ОбработкаИзмененияДанныхФизическогоЛица(Объект, Параметр, СтрокиПоСотруднику, Модифицированность);
		ОтобразитьДанныеСотрудника();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтчетныйПериодПриИзменении(Элемент)
	УстановитьКатегориюЗастрахованныхЛицЗаПериод();	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыСотрудники

&НаКлиенте
Процедура СотрудникПриАктивизацииСтроки(Элемент)
	ТекущиеДанныеСтроки =  Элементы.Сотрудники.ТекущиеДанные;
	
	Если ТекущиеДанныеСтроки <> Неопределено Тогда
		мТекущееСотрудник = ТекущиеДанныеСтроки.Сотрудник;
		УстановитьОтборСведенийОЗаработке(Элементы.СведенияОЗаработке, ТекущиеДанныеСтроки.Сотрудник);
		
	КонецЕсли;	
	ОтобразитьДанныеСотрудника();	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСотрудникПриИзменении(Элемент)
	ТекущиеДанныеСтроки = Элементы.Сотрудники.ТекущиеДанные;	
	Если ТекущиеДанныеСтроки <> Неопределено Тогда
		СотрудникПриИзмененииНаСервере(мТекущееСотрудник);	
	КонецЕсли;	
	ОтобразитьДанныеСотрудника();
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере(ТекущийСотрудник)
	ДанныеТекущейСтроки = Объект.Сотрудники.НайтиПоИдентификатору(Элементы.Сотрудники.ТекущаяСтрока);
	
	Если ДанныеТекущейСтроки.Сотрудник <> ТекущийСотрудник Тогда
		УдаляемыеСтроки = Объект.СведенияОЗаработке.НайтиСтроки(Новый Структура("Сотрудник", ТекущийСотрудник));
		
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			Объект.СведенияОЗаработке.Удалить(Объект.СведенияОЗаработке.Индекс(УдаляемаяСтрока));				
		КонецЦикла;	
		
		ДанныеДокументов = Новый Массив;
		ДанныеДокументов.Добавить(ДанныеТекущейСтроки);
		
		ПерсонифицированныйУчет.ПачкаСЗВ63ЗаполнитьДанныеДокументов(ДанныеДокументов, 
															Объект.СведенияОЗаработке, 
															Объект.Организация, 
															Объект.ОтчетныйПериод, 
															Объект.КатегорияЗастрахованныхЛиц, 
															Объект.ТипДоговора);	
														
		Элементы.СведенияОЗаработке.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Сотрудник", ДанныеТекущейСтроки.Сотрудник));
		
		ТекущийСотрудник = ДанныеТекущейСтроки.Сотрудник;
	КонецЕсли;		
КонецПроцедуры	

&НаКлиенте
Процедура СотрудникиПередУдалением(Элемент, Отказ)
	Для Каждого Идентификатор Из Элемент.ВыделенныеСтроки Цикл
		СтрокаСотрудник = Объект.Сотрудники.НайтиПоИдентификатору(Идентификатор);
		Если СтрокаСотрудник <> Неопределено Тогда 
			УдалитьСтрокиТаблицыСведенияОЗаработке(СтрокаСотрудник.Сотрудник);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСведенияОЗаработке

&НаКлиенте
Процедура СведенияОЗаработкеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Элементы.Сотрудники.ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОЗаработкеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ДанныеТекущейСтроки = Элементы.СведенияОЗаработке.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ДанныеТекущейСтроки.Сотрудник) Тогда
		ДанныеТекущейСтроки.Сотрудник = Элементы.Сотрудники.ТекущиеДанные.Сотрудник;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И Не ОтменаРедактирования Тогда
		СтруктураПоиска = Новый Структура("Сотрудник", ТекущиеДанные.Сотрудник);
		Если Объект.Сотрудники.НайтиСтроки(СтруктураПоиска).Количество() > 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'В пачке сотрудники не могут повторяться.'"));
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОЗаработкеМесяцПриИзменении(Элемент)
	ДанныеТекущейСтроки = Элементы.СведенияОЗаработке.ТекущиеДанные;
	ДанныеТекущейСтроки.Месяц = НомерМесяцаПоСтроковомуПредставлению(ДанныеТекущейСтроки.МесяцСтрокой);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	Оповещение = Новый ОписаниеОповещения("ВыполнитьПодключаемуюКомандуЗавершение", ЭтотОбъект, Команда);
	ПроверитьСЗапросомДальнейшегоДействия(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодключаемуюКомандуЗавершение(Результат, Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаписатьНаДиск(Команда)
	Оповещение = Новый ОписаниеОповещения("ЗаписатьНаДискЗавершение", ЭтотОбъект);
	ПроверитьСЗапросомДальнейшегоДействия(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура КвартальнаяОтчетностьПФР(Команда)
	ПерсонифицированныйУчетКлиент.ОткрытьРабочееМестоКвартальнойОтчетности(Объект.Организация, Дата(Объект.ОтчетныйПериод, 10, 1), Комплект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;

	ДанныеФайла = ПолучитьДанныеФайлаНаСервере(Объект.Ссылка, УникальныйИдентификатор);
	Если ДанныеФайла <> Неопределено Тогда
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	ОчиститьСообщения();

	Отказ = Ложь;
	ПроверкаЗаполненияДокумента(Отказ);
	
	ПроверкаСтороннимиПрограммами(Отказ);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеДокумента()
	ОписаниеДокумента = ПерсонифицированныйУчетКлиентСервер.ОписаниеДокументаСЗВ();
	ОписаниеДокумента.ВариантОтчетногоПериода = "ГОД";
	ОписаниеДокумента.ЕстьКорректируемыйПериод = Ложь;
	ОписаниеДокумента.ИмяПоляКорректируемыйПериод = "ОтчетныйПериод";
	
	Возврат ОписаниеДокумента;
КонецФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	ПерсонифицированныйУчетФормы.ДокументыСЗВПриПолученииДанныхНаСервере(ЭтаФорма, ОписаниеДокумента());
	
	ЗаполнитьСписокМесяцев();	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКатегориюЗастрахованныхЛицЗаПериод() Экспорт
	ПерсонифицированныйУчетФормы.ДокументыСЗВУстановитьКатегориюЗастрахованныхЛицЗаПериод(ЭтаФорма, ОписаниеДокумента());	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапрашиваемыеЗначенияПервоначальногоЗаполнения()
	ЗапрашиваемыеЗначения = ЗапрашиваемыеЗначенияЗаполненияПоОрганизации();
	ЗапрашиваемыеЗначения.Вставить("Организация", "Объект.Организация");
    ЗапрашиваемыеЗначения.Вставить("ПредыдущийГод", "Объект.ОтчетныйПериод");
	
	Возврат ЗапрашиваемыеЗначения;
КонецФункции

&НаСервереБезКонтекста
Функция ЗапрашиваемыеЗначенияЗаполненияПоОрганизации()
	
	ЗапрашиваемыеЗначения = Новый Структура;
	ЗапрашиваемыеЗначения.Вставить("Руководитель", "Объект.Руководитель");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьРуководителя", "Объект.ДолжностьРуководителя");
	
	Возврат ЗапрашиваемыеЗначения;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайлаНаСервере(Ссылка, УникальныйИдентификатор)
	Возврат ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);	
КонецФункции	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСведенийОЗаработке(ЭлементСведенияОЗаработке, Сотрудник)
	СтруктураОтбора = Новый ФиксированнаяСтруктура("Сотрудник", Сотрудник);
	ЭлементСведенияОЗаработке.ОтборСтрок = СтруктураОтбора;		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НомерМесяцаПоСтроковомуПредставлению(МесяцСтрока)
	Для НомерМесяца = 1 По 12 Цикл
		Если МесяцСтрока = Формат(Дата(2011, НомерМесяца, 1), "ДФ=ММММ") Тогда
			Возврат НомерМесяца;
		КонецЕсли;	
	КонецЦикла;		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МесяцСтрокой(НомерМесяца)
	Возврат Формат(Дата(2011, НомерМесяца, 1), "ДФ=ММММ");
КонецФункции	

&НаСервере
Процедура ЗаполнитьСписокМесяцев()
	Для Каждого СтрокаДоходов Из Объект.СведенияОЗаработке Цикл
		СтрокаДоходов.МесяцСтрокой = МесяцСтрокой(СтрокаДоходов.Месяц);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	Объект.Сотрудники.Очистить();
	Объект.СведенияОЗаработке.Очистить();

	ПерсонифицированныйУчетФормы.ОрганизацияПриИзменении(ЭтаФорма, ЗапрашиваемыеЗначенияЗаполненияПоОрганизации());
	
	УстановитьКатегориюЗастрахованныхЛицЗаПериод();
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьДанныеСотрудника()
	ДанныеТекущейСтроки = Элементы.Сотрудники.ТекущиеДанные;
	
	Если ДанныеТекущейСтроки <> Неопределено Тогда 
		Фамилия  = ?(ЗначениеЗаполнено(ДанныеТекущейСтроки.Фамилия), ВРег(ДанныеТекущейСтроки.Фамилия), НСтр("ru = '<Не заполнено>'"));
		Имя      = ?(ЗначениеЗаполнено(ДанныеТекущейСтроки.Имя), ВРег(ДанныеТекущейСтроки.Имя), НСтр("ru = '<Не заполнено>'"));
		Отчество = ВРег(ДанныеТекущейСтроки.Отчество);
		СтраховойНомерПФР =  ?(ЗначениеЗаполнено(ДанныеТекущейСтроки.СтраховойНомерПФР), ВРег(ДанныеТекущейСтроки.СтраховойНомерПФР), НСтр("ru = '<Не заполнено>'")); 
		ДанныеСотрудникаТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные сотрудника: %1'"), Строка(ДанныеТекущейСтроки.Сотрудник));
	Иначе
		Фамилия  ="";
		Имя      = "";
		Отчество = "";
		СтраховойНомерПФР = "";
		ДанныеСотрудникаТекст = НСтр("ru = 'Данные сотрудника:'");
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура УдалитьСтрокиТаблицыСведенияОЗаработке(Сотрудник)
	УдаляемыеСтрокиТаблицы = Объект.СведенияОЗаработке.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
	
	Для Каждого УдаляемаяСтрока Из УдаляемыеСтрокиТаблицы Цикл
		Объект.СведенияОЗаработке.Удалить(Объект.СведенияОЗаработке.Индекс(УдаляемаяСтрока));
	КонецЦикла;	
КонецПроцедуры	

&НаСервере
Процедура ПроверкаЗаполненияДокумента(Отказ = Ложь)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	ДокументОбъект.ПроверитьДанныеДокумента(Отказ);
КонецПроцедуры	

&НаКлиенте
Процедура ПроверкаСтороннимиПрограммами(Отказ)
	
	Если Отказ Тогда
		ТекстВопроса = НСтр("ru = 'При проверке встроенной проверкой обнаружены ошибки.
		|Выполнить проверку сторонними программами?'")
	Иначе	
		ТекстВопроса = НСтр("ru = 'При проверке встроенной проверкой ошибок не обнаружено.
		|Выполнить проверку сторонними программами?'");
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПроверкаСтороннимиПрограммамиЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСтороннимиПрограммамиЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		ПроверитьСтороннимиПрограммами();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСтороннимиПрограммами()
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;

	ПараметрыОткрытия = Новый Структура;
	
	ПроверяемыеОбъекты = Новый Массив;
	ПроверяемыеОбъекты.Добавить(Объект.Ссылка);
	
	ПараметрыОткрытия.Вставить("СсылкиНаПроверяемыеОбъекты", ПроверяемыеОбъекты);
	
	ОткрытьФорму("ОбщаяФорма.ПроверкаФайловОтчетностиПерсУчетаПФР", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСЗапросомДальнейшегоДействия(ОповещениеЗавершения = Неопределено)
	ОчиститьСообщения();
	
	Отказ = Ложь;
	ПроверкаЗаполненияДокумента(Отказ);	
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	
	Если Отказ Тогда 
		ТекстВопроса = НСтр("ru = 'В комплекте обнаружены ошибки.
							|Продолжить (не рекомендуется)?'");
							
		Оповещение = Новый ОписаниеОповещения("ПроверитьСЗапросомДальнейшегоДействияЗавершение", ЭтотОбъект, ДополнительныеПараметры);					
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Предупреждение.'"));
	Иначе 
		ПроверитьСЗапросомДальнейшегоДействияЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);				
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПроверитьСЗапросомДальнейшегоДействияЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;			
	
	Если ДополнительныеПараметры.ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьНаДискЗавершение(Результат, Параметры) Экспорт
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;

	ДанныеФайла = ПолучитьДанныеФайлаНаСервере(Объект.Ссылка, УникальныйИдентификатор);
	РаботаСФайламиКлиент.СохранитьФайлКак(ДанныеФайла);	
КонецПроцедуры

#КонецОбласти
